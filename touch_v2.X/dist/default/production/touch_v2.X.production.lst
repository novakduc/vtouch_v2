

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jan 20 00:35:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=4,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=4,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=4,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text162,global,reloc=4,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=4,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=4,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=4,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=4,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=4,class=CODE,delta=1
   204                           	psect	text182,global,reloc=4,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   207                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   208                           	psect	text184,global,reloc=4,class=CODE,delta=1
   209                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   210                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   211  0000                     
   212                           ; Version 2.10
   213                           ; Generated 31/07/2019 GMT
   214                           ; 
   215                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   216                           ; All rights reserved.
   217                           ; 
   218                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   219                           ; 
   220                           ; Redistribution and use in source and binary forms, with or without modification, are
   221                           ; permitted provided that the following conditions are met:
   222                           ; 
   223                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   224                           ;        conditions and the following disclaimer.
   225                           ; 
   226                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   227                           ;        of conditions and the following disclaimer in the documentation and/or other
   228                           ;        materials provided with the distribution.
   229                           ; 
   230                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   231                           ;        software without specific prior written permission.
   232                           ; 
   233                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   234                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   235                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   236                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   237                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   238                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   239                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   240                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   241                           ; 
   242                           ; 
   243                           ; Code-generator required, PIC18F57K42 Definitions
   244                           ; 
   245                           ; SFR Addresses
   246  0000                     
   247 ;;_main$3774	offset	0
   248 ;;_main$3770	offset	2
   249 ;;_esr_temp	offset	4
   250 ;;_i_esr	offset	8
   251 ;;_shape	offset	10
   252 ;;_inp_index	offset	11
   253 ;;_k	offset	12
   254 ;;_j	offset	13
   255 ;;_i	offset	14
   256 ;;_mode	offset	15
   257 ;;_i_ror	offset	16
   258 ;;_s	offset=-2 (param)
   259 ;;_c	offset	0
   260 ;;_shape	offset=-1 (param)
   261 ;;_reset	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_i	offset=-1 (param)
   277 ;;_fsm	offset=-1 (param)
   278 ;;_channel	offset=-1 (param)
   279 ;;_mode	offset=-1 (param)
   280 ;;_mode	offset=-1 (param)
   281 ;;_cmd	offset=-1 (param)
   282 ;;_i	offset	0
   283 ;;_h	offset=-2 (param)
   284 ;;_flipper	offset=-1 (param)
   285 ;;_f	offset	0
   286 ;;_ap	offset	6
   287 ;;_s	offset=-3 (param)
   288 ;;_fmt	offset=-5 (param)
   289 ;;_line	offset=-1 (param)
   290 ;;_vterm	offset=-2 (param)
   291 ;;_numMilliseconds	offset=-2 (param)
   292 ;;_vterm	offset=-1 (param)
   293 ;;_row	offset	0
   294 ;;_r	offset=-1 (param)
   295 ;;_c	offset=-2 (param)
   296 ;;_strPtr	offset=-4 (param)
   297 ;;_strPtr	offset=-1 (param)
   298 ;;_delay	offset=-4 (param)
   299 ;;_strPtr	offset=-1 (param)
   300 ;;_strPtr	offset=-2 (param)
   301 ;;__this	offset=-2 (param)
   302 ;;_clearBuffer	offset=-3 (param)
   303 ;;_s	offset	0
   304 ;;_k	offset	2
   305 ;;_dest	offset=-2 (param)
   306 ;;_c	offset=-4 (param)
   307 ;;_n	offset=-6 (param)
   308 ;;_ap	offset	0
   309 ;;_fmt	offset=-3 (param)
   310 ;;_cfmt	offset	0
   311 ;;_fp	offset=-2 (param)
   312 ;;_fmt	offset=-4 (param)
   313 ;;_ap	offset=-6 (param)
   314 ;;_vfpfcnvrt$5808	offset	0
   315 ;;_vfpfcnvrt$5819	offset	2
   316 ;;_vfpfcnvrt$5807	offset	4
   317 ;;_llu	offset	6
   318 ;;_ll	offset	14
   319 ;;_f	offset	22
   320 ;;_ct	offset	26
   321 ;;_cp	offset	29
   322 ;;_c	offset	31
   323 ;;_fp	offset=-2 (param)
   324 ;;_fmt	offset=-4 (param)
   325 ;;_ap	offset=-6 (param)
   326 ;;_xtoa$5793	offset	0
   327 ;;_xtoa$5792	offset	2
   328 ;;_n	offset	4
   329 ;;_c	offset	12
   330 ;;_i	offset	14
   331 ;;_w	offset	16
   332 ;;_p	offset	18
   333 ;;_fp	offset=-2 (param)
   334 ;;_d	offset=-10 (param)
   335 ;;_x	offset=-11 (param)
   336 ;;_toupper$6599	offset	0
   337 ;;_c	offset=-2 (param)
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_n	offset	0
   341 ;;_i	offset	8
   342 ;;_w	offset	10
   343 ;;_p	offset	12
   344 ;;_fp	offset=-2 (param)
   345 ;;_d	offset=-10 (param)
   346 ;;_counter	offset	0
   347 ;;_dividend	offset=-8 (param)
   348 ;;_divisor	offset=-16 (param)
   349 ;;_quotient	offset	0
   350 ;;_counter	offset	8
   351 ;;_dividend	offset=-8 (param)
   352 ;;_divisor	offset=-16 (param)
   353 ;;_r	offset	0
   354 ;;_l	offset	2
   355 ;;__l	offset=-2 (param)
   356 ;;__r	offset=-4 (param)
   357 ;;_n	offset=-6 (param)
   358 ;;_nuls	offset	0
   359 ;;_l	offset	7
   360 ;;_p	offset	9
   361 ;;_cp	offset	11
   362 ;;_w	offset	13
   363 ;;_i	offset	15
   364 ;;_fp	offset=-2 (param)
   365 ;;_s	offset=-4 (param)
   366 ;;_efgtoa$5765	offset	0
   367 ;;_efgtoa$5764	offset	2
   368 ;;_efgtoa$5763	offset	4
   369 ;;_efgtoa$5759	offset	6
   370 ;;_efgtoa$5755	offset	8
   371 ;;_efgtoa$5754	offset	10
   372 ;;_u	offset	12
   373 ;;_g	offset	16
   374 ;;_l	offset	20
   375 ;;_h	offset	24
   376 ;;_ou	offset	28
   377 ;;_n	offset	32
   378 ;;_e	offset	34
   379 ;;_i	offset	36
   380 ;;_w	offset	38
   381 ;;_p	offset	40
   382 ;;_sign	offset	42
   383 ;;_d	offset	44
   384 ;;_ne	offset	46
   385 ;;_m	offset	48
   386 ;;_pp	offset	50
   387 ;;_t	offset	52
   388 ;;_mode	offset	54
   389 ;;_nmode	offset	55
   390 ;;_fp	offset=-2 (param)
   391 ;;_f	offset=-6 (param)
   392 ;;_c	offset=-7 (param)
   393 ;;_tolower$6584	offset	0
   394 ;;_c	offset=-2 (param)
   395 ;;_c	offset=-2 (param)
   396 ;;_d	offset	0
   397 ;;_s	offset	2
   398 ;;_dest	offset=-2 (param)
   399 ;;_src	offset=-4 (param)
   400 ;;_u	offset	0
   401 ;;_m	offset	4
   402 ;;_e	offset	8
   403 ;;_x	offset=-4 (param)
   404 ;;_u	offset	0
   405 ;;_e	offset	4
   406 ;;_x	offset=-4 (param)
   407 ;;_exp1	offset	0
   408 ;;_sign1	offset	1
   409 ;;_f1	offset=-4 (param)
   410 ;;_f1	offset=-4 (param)
   411 ;;_ff1	offset=-4 (param)
   412 ;;_ff2	offset=-8 (param)
   413 ;;_sign	offset	0
   414 ;;_counter	offset	1
   415 ;;_dividend	offset=-2 (param)
   416 ;;_divisor	offset=-4 (param)
   417 ;;_quotient	offset	0
   418 ;;_sign	offset	2
   419 ;;_counter	offset	3
   420 ;;_dividend	offset=-2 (param)
   421 ;;_divisor	offset=-4 (param)
   422 ;;_dtoa$5731	offset	0
   423 ;;_n	offset	2
   424 ;;_i	offset	10
   425 ;;_s	offset	12
   426 ;;_w	offset	14
   427 ;;_p	offset	16
   428 ;;_fp	offset=-2 (param)
   429 ;;_d	offset=-10 (param)
   430 ;;_a	offset=-2 (param)
   431 ;;_sign	offset	0
   432 ;;_counter	offset	1
   433 ;;_dividend	offset=-8 (param)
   434 ;;_divisor	offset=-16 (param)
   435 ;;_quotient	offset	0
   436 ;;_sign	offset	8
   437 ;;_counter	offset	9
   438 ;;_dividend	offset=-8 (param)
   439 ;;_divisor	offset=-16 (param)
   440 ;;_w	offset	0
   441 ;;_fp	offset=-2 (param)
   442 ;;_c	offset=-3 (param)
   443 ;;_w	offset	0
   444 ;;_i	offset	2
   445 ;;_fp	offset=-2 (param)
   446 ;;_buf	offset=-4 (param)
   447 ;;_p	offset=-6 (param)
   448 ;;_a	offset	0
   449 ;;_s	offset=-2 (param)
   450 ;;_i	offset	0
   451 ;;_c	offset	2
   452 ;;_s	offset=-2 (param)
   453 ;;_fp	offset=-4 (param)
   454 ;;_c	offset=-2 (param)
   455 ;;_fp	offset=-4 (param)
   456 ;;_c	offset=-1 (param)
   457 ;;__this	offset=-2 (param)
   458 ;;_c	offset=-3 (param)
   459 ;;_atoi$6315	offset	0
   460 ;;_atoi$6313	offset	2
   461 ;;_atoi$6314	offset	4
   462 ;;_n	offset	5
   463 ;;_neg	offset	7
   464 ;;_s	offset=-2 (param)
   465 ;;_isspace$6364	offset	0
   466 ;;_c	offset=-2 (param)
   467 ;;_c	offset=-2 (param)
   468 ;;_vterm	offset=-1 (param)
   469 ;;_new_response_info	offset=-1 (param)
   470 ;;_new_response_info	offset=-1 (param)
   471 ;;_level	offset=-2 (param)
   472 ;;_dutyValue	offset=-2 (param)
   473 ;;_timer	offset=-1 (param)
   474 ;;_timer	offset=-1 (param)
   475 ;;_count	offset=-3 (param)
   476 ;;_h	offset=-2 (param)
   477 ;;_u	offset	0
   478 ;;_x	offset=-4 (param)
   479 ;;_chan	offset=-1 (param)
   480 ;;_to_what	offset=-2 (param)
   481 ;;_u	offset	0
   482 ;;_s	offset=-2 (param)
   483 ;;_index	offset=-1 (param)
   484 ;;_arg	offset	0
   485 ;;_exp	offset	4
   486 ;;_sign	offset=-1 (param)
   487 ;;_val	offset=-5 (param)
   488 ;;_grs	offset	0
   489 ;;_rem	offset	4
   490 ;;_new_exp	offset	8
   491 ;;_aexp	offset	10
   492 ;;_bexp	offset	11
   493 ;;_sign	offset	12
   494 ;;_b	offset=-4 (param)
   495 ;;_a	offset=-8 (param)
   496 ;;_ff1	offset=-4 (param)
   497 ;;_ff2	offset=-8 (param)
   498 ;;_lp_speed	offset	0
   499 ;;_new	offset=-4 (param)
   500 ;;_bn	offset=-5 (param)
   501 ;;_slow	offset=-6 (param)
   502 ;;_b	offset=-4 (param)
   503 ;;_a	offset=-8 (param)
   504 ;;_grs	offset	0
   505 ;;_bexp	offset	1
   506 ;;_aexp	offset	2
   507 ;;_signs	offset	3
   508 ;;_b	offset=-4 (param)
   509 ;;_a	offset=-8 (param)
   510 ;;_prod	offset	0
   511 ;;_grs	offset	4
   512 ;;_temp	offset	8
   513 ;;_bexp	offset	10
   514 ;;_aexp	offset	11
   515 ;;_sign	offset	12
   516 ;;_b	offset=-4 (param)
   517 ;;_a	offset=-8 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_InterruptHandler	offset=-3 (param)
   520 ;;_InterruptHandler	offset=-3 (param)
   521 ;;_InterruptHandler	offset=-3 (param)
   522 ;;_InterruptHandler	offset=-3 (param)
   523 ;;_InterruptHandler	offset=-3 (param)
   524 ;;_state	offset	0
   525 ;;_InterruptHandler	offset=-3 (param)
   526 ;;_InterruptHandler	offset=-3 (param)
   527 ;;_InterruptHandler	offset=-3 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_i	offset	0
   530 ;;_sw_value	offset	1
   531 ;;_timerVal	offset=-2 (param)
   532 ;;_light	offset	0
   533 ;;_mode	offset=-1 (param)
   534 ;;_chan	offset=-1 (param)
   535 ;;_to_what	offset=-2 (param)
   536 ;;_u	offset	0
   537 ;;_s	offset=-2 (param)
   538 ;;_index	offset=-1 (param)
   539 ;;_arg	offset	0
   540 ;;_exp	offset	4
   541 ;;_sign	offset=-1 (param)
   542 ;;_val	offset=-5 (param)
   543 ;;_b	offset=-4 (param)
   544 ;;_a	offset=-8 (param)
   545 ;;_grs	offset	0
   546 ;;_bexp	offset	1
   547 ;;_aexp	offset	2
   548 ;;_signs	offset	3
   549 ;;_b	offset=-4 (param)
   550 ;;_a	offset=-8 (param)
   551 ;;_prod	offset	0
   552 ;;_grs	offset	4
   553 ;;_temp	offset	8
   554 ;;_bexp	offset	10
   555 ;;_aexp	offset	11
   556 ;;_sign	offset	12
   557 ;;_b	offset=-4 (param)
   558 ;;_a	offset=-8 (param)
   559 ;;_grs	offset	0
   560 ;;_rem	offset	4
   561 ;;_new_exp	offset	8
   562 ;;_aexp	offset	10
   563 ;;_bexp	offset	11
   564 ;;_sign	offset	12
   565 ;;_b	offset=-4 (param)
   566 ;;_a	offset=-8 (param)
   567 ;;_ff1	offset=-4 (param)
   568 ;;_ff2	offset=-8 (param)
   569 ;;_timerVal	offset=-2 (param)
   570 ;;_adj	offset	0
   571 ;;_log_ptr	offset	4
   572 ;;_f	offset	0
   573 ;;_ap	offset	6
   574 ;;_s	offset=-3 (param)
   575 ;;_fmt	offset=-5 (param)
   576 ;;_cfmt	offset	0
   577 ;;_fp	offset=-2 (param)
   578 ;;_fmt	offset=-4 (param)
   579 ;;_ap	offset=-6 (param)
   580 ;;_vfpfcnvrt$5808	offset	0
   581 ;;_vfpfcnvrt$5819	offset	2
   582 ;;_vfpfcnvrt$5807	offset	4
   583 ;;_llu	offset	6
   584 ;;_ll	offset	14
   585 ;;_f	offset	22
   586 ;;_ct	offset	26
   587 ;;_cp	offset	29
   588 ;;_c	offset	31
   589 ;;_fp	offset=-2 (param)
   590 ;;_fmt	offset=-4 (param)
   591 ;;_ap	offset=-6 (param)
   592 ;;_xtoa$5793	offset	0
   593 ;;_xtoa$5792	offset	2
   594 ;;_n	offset	4
   595 ;;_c	offset	12
   596 ;;_i	offset	14
   597 ;;_w	offset	16
   598 ;;_p	offset	18
   599 ;;_fp	offset=-2 (param)
   600 ;;_d	offset=-10 (param)
   601 ;;_x	offset=-11 (param)
   602 ;;_toupper$6599	offset	0
   603 ;;_c	offset=-2 (param)
   604 ;;_c	offset=-2 (param)
   605 ;;_c	offset=-2 (param)
   606 ;;_n	offset	0
   607 ;;_i	offset	8
   608 ;;_w	offset	10
   609 ;;_p	offset	12
   610 ;;_fp	offset=-2 (param)
   611 ;;_d	offset=-10 (param)
   612 ;;_counter	offset	0
   613 ;;_dividend	offset=-8 (param)
   614 ;;_divisor	offset=-16 (param)
   615 ;;_quotient	offset	0
   616 ;;_counter	offset	8
   617 ;;_dividend	offset=-8 (param)
   618 ;;_divisor	offset=-16 (param)
   619 ;;_r	offset	0
   620 ;;_l	offset	2
   621 ;;__l	offset=-2 (param)
   622 ;;__r	offset=-4 (param)
   623 ;;_n	offset=-6 (param)
   624 ;;_nuls	offset	0
   625 ;;_l	offset	7
   626 ;;_p	offset	9
   627 ;;_cp	offset	11
   628 ;;_w	offset	13
   629 ;;_i	offset	15
   630 ;;_fp	offset=-2 (param)
   631 ;;_s	offset=-4 (param)
   632 ;;_efgtoa$5765	offset	0
   633 ;;_efgtoa$5764	offset	2
   634 ;;_efgtoa$5763	offset	4
   635 ;;_efgtoa$5759	offset	6
   636 ;;_efgtoa$5755	offset	8
   637 ;;_efgtoa$5754	offset	10
   638 ;;_u	offset	12
   639 ;;_g	offset	16
   640 ;;_l	offset	20
   641 ;;_h	offset	24
   642 ;;_ou	offset	28
   643 ;;_n	offset	32
   644 ;;_e	offset	34
   645 ;;_i	offset	36
   646 ;;_w	offset	38
   647 ;;_p	offset	40
   648 ;;_sign	offset	42
   649 ;;_d	offset	44
   650 ;;_ne	offset	46
   651 ;;_m	offset	48
   652 ;;_pp	offset	50
   653 ;;_t	offset	52
   654 ;;_mode	offset	54
   655 ;;_nmode	offset	55
   656 ;;_fp	offset=-2 (param)
   657 ;;_f	offset=-6 (param)
   658 ;;_c	offset=-7 (param)
   659 ;;_tolower$6584	offset	0
   660 ;;_c	offset=-2 (param)
   661 ;;_c	offset=-2 (param)
   662 ;;_d	offset	0
   663 ;;_s	offset	2
   664 ;;_dest	offset=-2 (param)
   665 ;;_src	offset=-4 (param)
   666 ;;_u	offset	0
   667 ;;_m	offset	4
   668 ;;_e	offset	8
   669 ;;_x	offset=-4 (param)
   670 ;;_u	offset	0
   671 ;;_e	offset	4
   672 ;;_x	offset=-4 (param)
   673 ;;_exp1	offset	0
   674 ;;_sign1	offset	1
   675 ;;_f1	offset=-4 (param)
   676 ;;_f1	offset=-4 (param)
   677 ;;_ff1	offset=-4 (param)
   678 ;;_ff2	offset=-8 (param)
   679 ;;_sign	offset	0
   680 ;;_counter	offset	1
   681 ;;_dividend	offset=-2 (param)
   682 ;;_divisor	offset=-4 (param)
   683 ;;_quotient	offset	0
   684 ;;_sign	offset	2
   685 ;;_counter	offset	3
   686 ;;_dividend	offset=-2 (param)
   687 ;;_divisor	offset=-4 (param)
   688 ;;_dtoa$5731	offset	0
   689 ;;_n	offset	2
   690 ;;_i	offset	10
   691 ;;_s	offset	12
   692 ;;_w	offset	14
   693 ;;_p	offset	16
   694 ;;_fp	offset=-2 (param)
   695 ;;_d	offset=-10 (param)
   696 ;;_a	offset=-2 (param)
   697 ;;_sign	offset	0
   698 ;;_counter	offset	1
   699 ;;_dividend	offset=-8 (param)
   700 ;;_divisor	offset=-16 (param)
   701 ;;_quotient	offset	0
   702 ;;_sign	offset	8
   703 ;;_counter	offset	9
   704 ;;_dividend	offset=-8 (param)
   705 ;;_divisor	offset=-16 (param)
   706 ;;_w	offset	0
   707 ;;_fp	offset=-2 (param)
   708 ;;_c	offset=-3 (param)
   709 ;;_w	offset	0
   710 ;;_i	offset	2
   711 ;;_fp	offset=-2 (param)
   712 ;;_buf	offset=-4 (param)
   713 ;;_p	offset=-6 (param)
   714 ;;_a	offset	0
   715 ;;_s	offset=-2 (param)
   716 ;;_i	offset	0
   717 ;;_c	offset	2
   718 ;;_s	offset=-2 (param)
   719 ;;_fp	offset=-4 (param)
   720 ;;_c	offset=-2 (param)
   721 ;;_fp	offset=-4 (param)
   722 ;;_c	offset=-1 (param)
   723 ;;__this	offset=-2 (param)
   724 ;;_c	offset=-3 (param)
   725 ;;_atoi$6315	offset	0
   726 ;;_atoi$6313	offset	2
   727 ;;_atoi$6314	offset	4
   728 ;;_n	offset	5
   729 ;;_neg	offset	7
   730 ;;_s	offset=-2 (param)
   731 ;;_isspace$6364	offset	0
   732 ;;_c	offset=-2 (param)
   733 ;;_c	offset=-2 (param)
   734 ;;_dsize	offset=-2 (param)
   735 ;;_u	offset	0
   736 ;;_x	offset=-4 (param)
   737 ;;_f1p	offset=-2 (param)
   738 ;;_f2	offset=-6 (param)
   739 ;;_timer	offset=-1 (param)
   740 ;;_count	offset=-3 (param)
   741 ;;_channel	offset=-1 (param)
   742 ;;_i	offset	0
   743                           
   744                           	psect	idataBIGRAM
   745  016B70                     __pidataBIGRAM:
   746                           	opt callstack 0
   747                           
   748                           ;initializer for _port_data
   749  016B70  FF                 	db	255
   750  016B71  00                 	db	0
   751  016B72  FF                 	db	255
   752  016B73  00                 	db	0
   753  016B74  FF                 	db	255
   754  016B75  00                 	db	0
   755  016B76  FF                 	db	255
   756  016B77  00                 	db	0
   757  016B78  FF                 	db	255
   758  016B79  00                 	db	0
   759  016B7A  FF                 	db	255
   760  016B7B  00                 	db	0
   761  016B7C  FF                 	db	255
   762  016B7D  00                 	db	0
   763  016B7E  FF                 	db	255
   764  016B7F  00                 	db	0
   765  016B80  00                 	db	0
   766  016B81  00                 	db	0
   767  016B82  00                 	db	0
   768  016B83  00                 	db	0
   769  016B84  00                 	db	0
   770  016B85  00                 	db	0
   771  016B86  00                 	db	0
   772  016B87  00                 	db	0
   773  016B88  00                 	db	0
   774  016B89  00                 	db	0
   775  016B8A  00                 	db	0
   776  016B8B  00                 	db	0
   777  016B8C  00                 	db	0
   778  016B8D  00                 	db	0
   779  016B8E  00                 	db	0
   780  016B8F  00                 	db	0
   781  016B90  00                 	db	0
   782  016B91  00                 	db	0
   783  016B92  00                 	db	0
   784  016B93  00                 	db	0
   785  016B94  00                 	db	0
   786  016B95  00                 	db	0
   787  016B96  00                 	db	0
   788  016B97  00                 	db	0
   789  016B98  00                 	db	0
   790  016B99  00                 	db	0
   791  016B9A  00                 	db	0
   792  016B9B  00                 	db	0
   793  016B9C  00                 	db	0
   794  016B9D  00                 	db	0
   795  016B9E  00                 	db	0
   796  016B9F  00                 	db	0
   797  016BA0  00                 	db	0
   798  016BA1  00                 	db	0
   799  016BA2  00                 	db	0
   800  016BA3  00                 	db	0
   801  016BA4  00                 	db	0
   802  016BA5  00                 	db	0
   803  016BA6  00                 	db	0
   804  016BA7  00                 	db	0
   805  016BA8  00                 	db	0
   806  016BA9  00                 	db	0
   807  016BAA  00                 	db	0
   808  016BAB  00                 	db	0
   809  016BAC  00                 	db	0
   810  016BAD  00                 	db	0
   811  016BAE  00                 	db	0
   812  016BAF  00                 	db	0
   813  016BB0  00                 	db	0
   814  016BB1  00                 	db	0
   815  016BB2  00                 	db	0
   816  016BB3  00                 	db	0
   817  016BB4  00                 	db	0
   818  016BB5  00                 	db	0
   819  016BB6  00                 	db	0
   820  016BB7  00                 	db	0
   821  016BB8  00                 	db	0
   822  016BB9  00                 	db	0
   823  016BBA  00                 	db	0
   824  016BBB  00                 	db	0
   825  016BBC  00                 	db	0
   826  016BBD  00                 	db	0
   827  016BBE  00                 	db	0
   828  016BBF  00                 	db	0
   829  016BC0  00                 	db	0
   830  016BC1  00                 	db	0
   831  016BC2  00                 	db	0
   832  016BC3  00                 	db	0
   833  016BC4  00                 	db	0
   834  016BC5  00                 	db	0
   835  016BC6  00                 	db	0
   836  016BC7  00                 	db	0
   837  016BC8  00                 	db	0
   838  016BC9  00                 	db	0
   839  016BCA  00                 	db	0
   840  016BCB  00                 	db	0
   841  016BCC  00                 	db	0
   842  016BCD  00                 	db	0
   843  016BCE  00                 	db	0
   844  016BCF  00                 	db	0
   845  016BD0  00                 	db	0
   846  016BD1  00                 	db	0
   847  016BD2  00                 	db	0
   848  016BD3  00                 	db	0
   849  016BD4  00                 	db	0
   850  016BD5  00                 	db	0
   851  016BD6  00                 	db	0
   852  016BD7  00                 	db	0
   853  016BD8  00                 	db	0
   854  016BD9  00                 	db	0
   855  016BDA  00                 	db	0
   856  016BDB  00                 	db	0
   857  016BDC  00                 	db	0
   858  016BDD  00                 	db	0
   859  016BDE  00                 	db	0
   860  016BDF  00                 	db	0
   861  016BE0  00                 	db	0
   862  016BE1  00                 	db	0
   863  016BE2  00                 	db	0
   864  016BE3  00                 	db	0
   865  016BE4  00                 	db	0
   866  016BE5  00                 	db	0
   867  016BE6  00                 	db	0
   868  016BE7  00                 	db	0
   869  016BE8  00                 	db	0
   870  016BE9  00                 	db	0
   871  016BEA  00                 	db	0
   872  016BEB  00                 	db	0
   873  016BEC  00                 	db	0
   874  016BED  00                 	db	0
   875  016BEE  00                 	db	0
   876  016BEF  00                 	db	0
   877  016BF0  00                 	db	0
   878  016BF1  00                 	db	0
   879  016BF2  00                 	db	0
   880  016BF3  00                 	db	0
   881  016BF4  00                 	db	0
   882  016BF5  00                 	db	0
   883  016BF6  00                 	db	0
   884  016BF7  00                 	db	0
   885  016BF8  00                 	db	0
   886  016BF9  00                 	db	0
   887  016BFA  00                 	db	0
   888  016BFB  00                 	db	0
   889  016BFC  00                 	db	0
   890  016BFD  00                 	db	0
   891  016BFE  00                 	db	0
   892  016BFF  00                 	db	0
   893  016C00  00                 	db	0
   894  016C01  00                 	db	0
   895  016C02  00                 	db	0
   896  016C03  00                 	db	0
   897  016C04  00                 	db	0
   898  016C05  00                 	db	0
   899  016C06  00                 	db	0
   900  016C07  00                 	db	0
   901  016C08  00                 	db	0
   902  016C09  00                 	db	0
   903  016C0A  00                 	db	0
   904  016C0B  00                 	db	0
   905  016C0C  00                 	db	0
   906  016C0D  00                 	db	0
   907  016C0E  00                 	db	0
   908  016C0F  00                 	db	0
   909  016C10  00                 	db	0
   910  016C11  00                 	db	0
   911  016C12  00                 	db	0
   912  016C13  00                 	db	0
   913  016C14  00                 	db	0
   914  016C15  00                 	db	0
   915  016C16  00                 	db	0
   916  016C17  00                 	db	0
   917  016C18  00                 	db	0
   918  016C19  00                 	db	0
   919  016C1A  00                 	db	0
   920  016C1B  00                 	db	0
   921  016C1C  00                 	db	0
   922  016C1D  00                 	db	0
   923  016C1E  00                 	db	0
   924  016C1F  00                 	db	0
   925  016C20  00                 	db	0
   926  016C21  00                 	db	0
   927  016C22  00                 	db	0
   928  016C23  00                 	db	0
   929  016C24  00                 	db	0
   930  016C25  00                 	db	0
   931  016C26  00                 	db	0
   932  016C27  00                 	db	0
   933  016C28  00                 	db	0
   934  016C29  00                 	db	0
   935  016C2A  00                 	db	0
   936  016C2B  00                 	db	0
   937  016C2C  00                 	db	0
   938  016C2D  00                 	db	0
   939  016C2E  00                 	db	0
   940  016C2F  00                 	db	0
   941  016C30  00                 	db	0
   942  016C31  00                 	db	0
   943  016C32  00                 	db	0
   944  016C33  00                 	db	0
   945  016C34  00                 	db	0
   946  016C35  00                 	db	0
   947  016C36  00                 	db	0
   948  016C37  00                 	db	0
   949  016C38  00                 	db	0
   950  016C39  00                 	db	0
   951  016C3A  00                 	db	0
   952  016C3B  00                 	db	0
   953  016C3C  00                 	db	0
   954  016C3D  00                 	db	0
   955  016C3E  00                 	db	0
   956  016C3F  00                 	db	0
   957  016C40  00                 	db	0
   958  016C41  00                 	db	0
   959  016C42  00                 	db	0
   960  016C43  00                 	db	0
   961  016C44  00                 	db	0
   962  016C45  00                 	db	0
   963  016C46  00                 	db	0
   964  016C47  00                 	db	0
   965  016C48  00                 	db	0
   966  016C49  00                 	db	0
   967  016C4A  00                 	db	0
   968  016C4B  00                 	db	0
   969  016C4C  00                 	db	0
   970  016C4D  00                 	db	0
   971  016C4E  00                 	db	0
   972  016C4F  00                 	db	0
   973  016C50  00                 	db	0
   974  016C51  00                 	db	0
   975  016C52  00                 	db	0
   976  016C53  00                 	db	0
   977  016C54  00                 	db	0
   978  016C55  00                 	db	0
   979  016C56  00                 	db	0
   980  016C57  00                 	db	0
   981  016C58  00                 	db	0
   982  016C59  00                 	db	0
   983  016C5A  00                 	db	0
   984  016C5B  00                 	db	0
   985  016C5C  00                 	db	0
   986  016C5D  00                 	db	0
   987  016C5E  00                 	db	0
   988  016C5F  00                 	db	0
   989  016C60  00                 	db	0
   990  016C61  00                 	db	0
   991  016C62  00                 	db	0
   992  016C63  00                 	db	0
   993  016C64  00                 	db	0
   994  016C65  00                 	db	0
   995  016C66  00                 	db	0
   996  016C67  00                 	db	0
   997  016C68  00                 	db	0
   998  016C69  00                 	db	0
   999  016C6A  00                 	db	0
  1000  016C6B  00                 	db	0
  1001  016C6C  00                 	db	0
  1002  016C6D  00                 	db	0
  1003  016C6E  00                 	db	0
  1004  016C6F  00                 	db	0
  1005  016C70  00                 	db	0
  1006  016C71  00                 	db	0
  1007  016C72  00                 	db	0
  1008  016C73  00                 	db	0
  1009  016C74  00                 	db	0
  1010  016C75  00                 	db	0
  1011  016C76  00                 	db	0
  1012  016C77  00                 	db	0
  1013  016C78  00                 	db	0
  1014  016C79  00                 	db	0
  1015  016C7A  00                 	db	0
  1016  016C7B  00                 	db	0
  1017  016C7C  00                 	db	0
  1018  016C7D  00                 	db	0
  1019  016C7E  00                 	db	0
  1020  016C7F  00                 	db	0
  1021  016C80  00                 	db	0
  1022  016C81  00                 	db	0
  1023  016C82  00                 	db	0
  1024  016C83  00                 	db	0
  1025  016C84  00                 	db	0
  1026  016C85  00                 	db	0
  1027  016C86  00                 	db	0
  1028  016C87  00                 	db	0
  1029  016C88  00                 	db	0
  1030  016C89  00                 	db	0
  1031  016C8A  00                 	db	0
  1032  016C8B  00                 	db	0
  1033  016C8C  00                 	db	0
  1034  016C8D  00                 	db	0
  1035  016C8E  00                 	db	0
  1036  016C8F  00                 	db	0
  1037  016C90  00                 	db	0
  1038  016C91  00                 	db	0
  1039  016C92  00                 	db	0
  1040  016C93  00                 	db	0
  1041  016C94  00                 	db	0
  1042  016C95  00                 	db	0
  1043  016C96  00                 	db	0
  1044  016C97  00                 	db	0
  1045  016C98  00                 	db	0
  1046  016C99  00                 	db	0
  1047  016C9A  00                 	db	0
  1048  016C9B  00                 	db	0
  1049  016C9C  00                 	db	0
  1050  016C9D  00                 	db	0
  1051  016C9E  00                 	db	0
  1052  016C9F  00                 	db	0
  1053  016CA0  00                 	db	0
  1054  016CA1  00                 	db	0
  1055  016CA2  00                 	db	0
  1056  016CA3  00                 	db	0
  1057  016CA4  00                 	db	0
  1058  016CA5  00                 	db	0
  1059  016CA6  00                 	db	0
  1060  016CA7  00                 	db	0
  1061  016CA8  00                 	db	0
  1062  016CA9  00                 	db	0
  1063  016CAA  00                 	db	0
  1064  016CAB  00                 	db	0
  1065  016CAC  00                 	db	0
  1066  016CAD  00                 	db	0
  1067  016CAE  00                 	db	0
  1068  016CAF  00                 	db	0
  1069  016CB0  00                 	db	0
  1070  016CB1  00                 	db	0
  1071  016CB2  00                 	db	0
  1072  016CB3  00                 	db	0
  1073  016CB4  00                 	db	0
  1074  016CB5  00                 	db	0
  1075  016CB6  00                 	db	0
  1076  016CB7  00                 	db	0
  1077  016CB8  00                 	db	0
  1078  016CB9  00                 	db	0
  1079  016CBA  00                 	db	0
  1080  016CBB  00                 	db	0
  1081  016CBC  00                 	db	0
  1082  016CBD  00                 	db	0
  1083  016CBE  00                 	db	0
  1084  016CBF  00                 	db	0
  1085  016CC0  00                 	db	0
  1086  016CC1  00                 	db	0
  1087  016CC2  00                 	db	0
  1088  016CC3  00                 	db	0
  1089  016CC4  00                 	db	0
  1090  016CC5  00                 	db	0
  1091  016CC6  00                 	db	0
  1092  016CC7  00                 	db	0
  1093  016CC8  00                 	db	0
  1094  016CC9  00                 	db	0
  1095  016CCA  00                 	db	0
  1096  016CCB  00                 	db	0
  1097  016CCC  00                 	db	0
  1098  016CCD  00                 	db	0
  1099  016CCE  00                 	db	0
  1100  016CCF  00                 	db	0
  1101  016CD0  00                 	db	0
  1102  016CD1  00                 	db	0
  1103  016CD2  00                 	db	0
  1104  016CD3  00                 	db	0
  1105  016CD4  00                 	db	0
  1106  016CD5  00                 	db	0
  1107  016CD6  00                 	db	0
  1108  016CD7  00                 	db	0
  1109  016CD8  00                 	db	0
  1110  016CD9  00                 	db	0
  1111  016CDA  00                 	db	0
  1112  016CDB  00                 	db	0
  1113  016CDC  00                 	db	0
  1114  016CDD  00                 	db	0
  1115  016CDE  00                 	db	0
  1116  016CDF  00                 	db	0
  1117  016CE0  00                 	db	0
  1118  016CE1  00                 	db	0
  1119  016CE2  00                 	db	0
  1120  016CE3  00                 	db	0
  1121  016CE4  00                 	db	0
  1122  016CE5  00                 	db	0
  1123  016CE6  00                 	db	0
  1124  016CE7  00                 	db	0
  1125  016CE8  00                 	db	0
  1126  016CE9  00                 	db	0
  1127  016CEA  00                 	db	0
  1128  016CEB  00                 	db	0
  1129  016CEC  00                 	db	0
  1130  016CED  00                 	db	0
  1131  016CEE  00                 	db	0
  1132  016CEF  00                 	db	0
  1133  016CF0  00                 	db	0
  1134  016CF1  00                 	db	0
  1135  016CF2  00                 	db	0
  1136  016CF3  00                 	db	0
  1137  016CF4  00                 	db	0
  1138  016CF5  00                 	db	0
  1139  016CF6  00                 	db	0
  1140  016CF7  00                 	db	0
  1141  016CF8  00                 	db	0
  1142  016CF9  00                 	db	0
  1143  016CFA  00                 	db	0
  1144  016CFB  00                 	db	0
  1145  016CFC  00                 	db	0
  1146  016CFD  00                 	db	0
  1147  016CFE  00                 	db	0
  1148  016CFF  00                 	db	0
  1149  016D00  00                 	db	0
  1150  016D01  00                 	db	0
  1151  016D02  00                 	db	0
  1152  016D03  00                 	db	0
  1153  016D04  00                 	db	0
  1154  016D05  00                 	db	0
  1155  016D06  00                 	db	0
  1156  016D07  00                 	db	0
  1157  016D08  00                 	db	0
  1158  016D09  00                 	db	0
  1159  016D0A  00                 	db	0
  1160  016D0B  00                 	db	0
  1161  016D0C  00                 	db	0
  1162  016D0D  00                 	db	0
  1163  016D0E  00                 	db	0
  1164  016D0F  00                 	db	0
  1165  016D10  00                 	db	0
  1166  016D11  00                 	db	0
  1167  016D12  00                 	db	0
  1168  016D13  00                 	db	0
  1169  016D14  00                 	db	0
  1170  016D15  00                 	db	0
  1171  016D16  00                 	db	0
  1172  016D17  00                 	db	0
  1173  016D18  00                 	db	0
  1174  016D19  00                 	db	0
  1175  016D1A  00                 	db	0
  1176  016D1B  00                 	db	0
  1177  016D1C  00                 	db	0
  1178  016D1D  00                 	db	0
  1179  016D1E  00                 	db	0
  1180  016D1F  00                 	db	0
  1181  016D20  00                 	db	0
  1182  016D21  00                 	db	0
  1183  016D22  00                 	db	0
  1184  016D23  00                 	db	0
  1185  016D24  00                 	db	0
  1186  016D25  00                 	db	0
  1187  016D26  00                 	db	0
  1188  016D27  00                 	db	0
  1189  016D28  00                 	db	0
  1190  016D29  00                 	db	0
  1191  016D2A  00                 	db	0
  1192  016D2B  00                 	db	0
  1193  016D2C  00                 	db	0
  1194  016D2D  00                 	db	0
  1195  016D2E  00                 	db	0
  1196  016D2F  00                 	db	0
  1197  016D30  00                 	db	0
  1198  016D31  00                 	db	0
  1199  016D32  00                 	db	0
  1200  016D33  00                 	db	0
  1201  016D34  00                 	db	0
  1202  016D35  00                 	db	0
  1203  016D36  00                 	db	0
  1204  016D37  00                 	db	0
  1205  016D38  00                 	db	0
  1206  016D39  00                 	db	0
  1207  016D3A  00                 	db	0
  1208  016D3B  00                 	db	0
  1209  016D3C  00                 	db	0
  1210  016D3D  00                 	db	0
  1211  016D3E  00                 	db	0
  1212  016D3F  00                 	db	0
  1213  016D40  00                 	db	0
  1214  016D41  00                 	db	0
  1215  016D42  00                 	db	0
  1216  016D43  00                 	db	0
  1217  016D44  00                 	db	0
  1218  016D45  00                 	db	0
  1219  016D46  00                 	db	0
  1220  016D47  00                 	db	0
  1221  016D48  00                 	db	0
  1222  016D49  00                 	db	0
  1223  016D4A  00                 	db	0
  1224  016D4B  00                 	db	0
  1225  016D4C  00                 	db	0
  1226  016D4D  00                 	db	0
  1227  016D4E  00                 	db	0
  1228  016D4F  00                 	db	0
  1229  016D50  00                 	db	0
  1230  016D51  00                 	db	0
  1231  016D52  00                 	db	0
  1232  016D53  00                 	db	0
  1233  016D54  00                 	db	0
  1234  016D55  00                 	db	0
  1235  016D56  00                 	db	0
  1236  016D57  00                 	db	0
  1237  016D58  00                 	db	0
  1238  016D59  00                 	db	0
  1239  016D5A  00                 	db	0
  1240  016D5B  00                 	db	0
  1241  016D5C  00                 	db	0
  1242  016D5D  00                 	db	0
  1243  016D5E  00                 	db	0
  1244  016D5F  00                 	db	0
  1245  016D60  00                 	db	0
  1246  016D61  00                 	db	0
  1247  016D62  00                 	db	0
  1248  016D63  00                 	db	0
  1249  016D64  00                 	db	0
  1250  016D65  00                 	db	0
  1251  016D66  00                 	db	0
  1252  016D67  00                 	db	0
  1253  016D68  00                 	db	0
  1254  016D69  00                 	db	0
  1255  016D6A  00                 	db	0
  1256  016D6B  00                 	db	0
  1257  016D6C  00                 	db	0
  1258  016D6D  00                 	db	0
  1259  016D6E  00                 	db	0
  1260  016D6F  00                 	db	0
  1261                           
  1262                           ;initializer for _C
  1263  016D70  0000               	dw	0
  1264  016D72  0000               	dw	0
  1265  016D74  0000               	dw	0
  1266  016D76  0000               	dw	0
  1267  016D78  0000               	dw	0
  1268  016D7A  0000               	dw	0
  1269  016D7C  0000               	dw	0
  1270  016D7E  0000               	dw	0
  1271  016D80  0000               	dw	0
  1272  016D82  0000               	dw	0
  1273  016D84  0000               	dw	0
  1274  016D86  0000               	dw	0
  1275  016D88  0000               	dw	0
  1276  016D8A  0000               	dw	0
  1277  016D8C  0000               	dw	0
  1278  016D8E  0000               	dw	0
  1279  016D90  0000               	dw	0
  1280  016D92  0000               	dw	0
  1281  016D94  0000               	dw	0
  1282  016D96  0000               	dw	0
  1283  016D98  0000               	dw	0
  1284  016D9A  0000               	dw	0
  1285  016D9C  0000               	dw	0
  1286  016D9E  0000               	dw	0
  1287  016DA0  0000               	dw	0
  1288  016DA2  0000               	dw	0
  1289  016DA4  0000               	dw	0
  1290  016DA6  0000               	dw	0
  1291  016DA8  0000               	dw	0
  1292  016DAA  0000               	dw	0
  1293  016DAC  0000               	dw	0
  1294  016DAE  0000               	dw	0
  1295  016DB0  0000               	dw	0
  1296  016DB2  0000               	dw	0
  1297  016DB4  0000               	dw	0
  1298  016DB6  0000               	dw	0
  1299  016DB8  0000               	dw	0
  1300  016DBA  0000               	dw	0
  1301  016DBC  0000               	dw	0
  1302  016DBE  0000               	dw	0
  1303  016DC0  0000               	dw	0
  1304  016DC2  0000               	dw	0
  1305  016DC4  0000               	dw	0
  1306  016DC6  0000               	dw	0
  1307  016DC8  0000               	dw	0
  1308  016DCA  0000               	dw	0
  1309  016DCC  0000               	dw	0
  1310  016DCE  0000               	dw	0
  1311  016DD0  0000               	dw	0
  1312  016DD2  0000               	dw	0
  1313  016DD4  0000               	dw	0
  1314  016DD6  0000               	dw	0
  1315  016DD8  0000               	dw	0
  1316  016DDA  0000               	dw	0
  1317  016DDC  0000               	dw	0
  1318  016DDE  0000               	dw	0
  1319  016DE0  0000               	dw	0
  1320  016DE2  0000               	dw	0
  1321  016DE4  0000               	dw	0
  1322  016DE6  0000               	dw	0
  1323  016DE8  0000               	dw	0
  1324  016DEA  0000               	dw	0
  1325  016DEC  0000               	dw	0
  1326  016DEE  0000               	dw	0
  1327  016DF0  0000               	dw	0
  1328  016DF2  0000               	dw	0
  1329  016DF4  0000               	dw	0
  1330  016DF6  0000               	dw	0
  1331  016DF8  0000               	dw	0
  1332  016DFA  0000               	dw	0
  1333  016DFC  0000               	dw	0
  1334  016DFE  42FA               	dw	17146
  1335  016E00  0000               	dw	0
  1336  016E02  0000               	dw	0
  1337  016E04  0000               	dw	0
  1338  016E06  0000               	dw	0
  1339  016E08  0000               	dw	0
  1340  016E0A  0000               	dw	0
  1341  016E0C  0000               	dw	0
  1342  016E0E  0000               	dw	0
  1343  016E10  0000               	dw	0
  1344  016E12  0000               	dw	0
  1345  016E14  0000               	dw	0
  1346  016E16  0000               	dw	0
  1347  016E18  0000               	dw	0
  1348  016E1A  0000               	dw	0
  1349  016E1C  0000               	dw	0
  1350  016E1E  0000               	dw	0
  1351  016E20  0000               	dw	0
  1352  016E22  0000               	dw	0
  1353  016E24  0000               	dw	0
  1354  016E26  0000               	dw	0
  1355  016E28  00                 	db	0
  1356  016E29  01                 	db	1
  1357  016E2A  0000               	dw	0
  1358  016E2C  3F80               	dw	16256
  1359  016E2E  0000               	dw	0
  1360  016E30  3F80               	dw	16256
  1361  016E32  00                 	db	0
  1362  016E33  00                 	db	0
  1363  016E34  00                 	db	0
  1364  016E35  00                 	db	0
  1365  016E36  00                 	db	0
  1366  016E37  00                 	db	0
  1367  016E38  00                 	db	0
  1368  016E39  00                 	db	0
  1369  016E3A  00                 	db	0
  1370  016E3B  00                 	db	0
  1371  016E3C  00                 	db	0
  1372  016E3D  00                 	db	0
  1373  016E3E  00                 	db	0
  1374  016E3F  00                 	db	0
  1375  016E40  00                 	db	0
  1376  016E41  00                 	db	0
  1377  016E42  00                 	db	0
  1378  016E43  00                 	db	0
  1379  016E44  00                 	db	0
  1380  016E45  00                 	db	0
  1381  016E46  00                 	db	0
  1382  016E47  00                 	db	0
  1383  016E48  00                 	db	0
  1384  016E49  00                 	db	0
  1385  016E4A  00                 	db	0
  1386  016E4B  00                 	db	0
  1387  016E4C  00                 	db	0
  1388  016E4D  00                 	db	0
  1389  016E4E  00                 	db	0
  1390  016E4F  00                 	db	0
  1391  016E50  00                 	db	0
  1392  016E51  00                 	db	0
  1393  016E52  00                 	db	0
  1394  016E53  00                 	db	0
  1395  016E54  00                 	db	0
  1396  016E55  00                 	db	0
  1397  016E56  00                 	db	0
  1398  016E57  00                 	db	0
  1399  016E58  00                 	db	0
  1400  016E59  00                 	db	0
  1401  016E5A  00                 	db	0
  1402  016E5B  00                 	db	0
  1403  016E5C  00                 	db	0
  1404  016E5D  00                 	db	0
  1405  016E5E  00                 	db	0
  1406  016E5F  00                 	db	0
  1407  016E60  00                 	db	0
  1408  016E61  00                 	db	0
  1409  016E62  00                 	db	0
  1410  016E63  00                 	db	0
  1411  016E64  00                 	db	0
  1412  016E65  00                 	db	0
  1413  016E66  00                 	db	0
  1414  016E67  00                 	db	0
  1415  016E68  00                 	db	0
  1416  016E69  00                 	db	0
  1417  016E6A  00                 	db	0
  1418  016E6B  00                 	db	0
  1419  016E6C  00                 	db	0
  1420  016E6D  00                 	db	0
  1421  016E6E  00                 	db	0
  1422  016E6F  00                 	db	0
  1423  016E70  00                 	db	0
  1424  016E71  00                 	db	0
  1425  016E72  00                 	db	0
  1426  016E73  00                 	db	0
  1427  016E74  00                 	db	0
  1428  016E75  00                 	db	0
  1429  016E76  00                 	db	0
  1430  016E77  00                 	db	0
  1431  016E78  00                 	db	0
  1432  016E79  00                 	db	0
  1433  016E7A  00                 	db	0
  1434  016E7B  00                 	db	0
  1435  016E7C  00                 	db	0
  1436  016E7D  00                 	db	0
  1437  016E7E  0000               	dw	0
  1438  016E80  0000               	dw	0
  1439  016E82  0000               	dw	0
  1440  016E84  0000               	dw	0
  1441  016E86  0000               	dw	0
  1442  016E88  0000               	dw	0
  1443  016E8A  0000               	dw	0
  1444  016E8C  0000               	dw	0
  1445  016E8E  0000               	dw	0
  1446  016E90  0000               	dw	0
  1447  016E92  01                 	db	1
  1448  016E93  00                 	db	0
  1449  016E94  00                 	db	0
  1450  016E95  00                 	db	0
  1451  016E96  00                 	db	0
  1452  016E97  00                 	db	0
  1453  016E98  00                 	db	0
  1454  016E99  00                 	db	0
  1455  016E9A  00                 	db	0
  1456                           
  1457                           	psect	idataBANK0
  1458  01BCD0                     __pidataBANK0:
  1459                           	opt callstack 0
  1460                           
  1461                           ;initializer for _R
  1462  01BCD0  0000               	dw	0
  1463  01BCD2  0000               	dw	0
  1464  01BCD4  0000               	dw	0
  1465  01BCD6  0000               	dw	0
  1466  01BCD8  0000               	dw	0
  1467  01BCDA  0000               	dw	0
  1468  01BCDC  0000               	dw	0
  1469  01BCDE  0000               	dw	0
  1470  01BCE0  0000               	dw	0
  1471  01BCE2  0000               	dw	0
  1472  01BCE4  0000               	dw	0
  1473  01BCE6  0000               	dw	0
  1474  01BCE8  0000               	dw	0
  1475  01BCEA  0000               	dw	0
  1476  01BCEC  0000               	dw	0
  1477  01BCEE  0000               	dw	0
  1478  01BCF0  0FFF               	dw	4095
  1479  01BCF2  0777               	dw	1911
  1480  01BCF4  0000               	dw	0
  1481  01BCF6  0F67               	dw	3943
  1482  01BCF8  0F8F               	dw	3983
  1483  01BCFA  0000               	dw	0
  1484  01BCFC  0000               	dw	0
  1485  01BCFE  0000               	dw	0
  1486  01BD00  0000               	dw	0
  1487  01BD02  00                 	db	0
  1488  01BD03  0000               	dw	0
  1489  01BD05  00                 	db	0
  1490                           
  1491                           	psect	idataBANK1
  1492  01A598                     __pidataBANK1:
  1493                           	opt callstack 0
  1494                           
  1495                           ;initializer for stoa@F1166
  1496  01A598  28                 	db	40
  1497  01A599  6E                 	db	110
  1498  01A59A  75                 	db	117
  1499  01A59B  6C                 	db	108
  1500  01A59C  6C                 	db	108
  1501  01A59D  29                 	db	41
  1502  01A59E  00                 	db	0
  1503                           
  1504                           ;initializer for _V
  1505  01A59F  00                 	db	0
  1506  01A5A0  00                 	db	0
  1507  01A5A1  00                 	db	0
  1508  01A5A2  00                 	db	0
  1509  01A5A3  00                 	db	0
  1510  01A5A4  00                 	db	0
  1511  01A5A5  00                 	db	0
  1512  01A5A6  00                 	db	0
  1513  01A5A7  00                 	db	0
  1514  01A5A8  00                 	db	0
  1515  01A5A9  00                 	db	0
  1516  01A5AA  00                 	db	0
  1517  01A5AB  00                 	db	0
  1518  01A5AC  00                 	db	0
  1519  01A5AD  00                 	db	0
  1520  01A5AE  00                 	db	0
  1521  01A5AF  00                 	db	0
  1522  01A5B0  00                 	db	0
  1523  01A5B1  00                 	db	0
  1524  01A5B2  00                 	db	0
  1525  01A5B3  00                 	db	0
  1526  01A5B4  00                 	db	0
  1527  01A5B5  00                 	db	0
  1528  01A5B6  00                 	db	0
  1529  01A5B7  00                 	db	0
  1530  01A5B8  00                 	db	0
  1531  01A5B9  00                 	db	0
  1532  01A5BA  00                 	db	0
  1533  01A5BB  00                 	db	0
  1534  01A5BC  00                 	db	0
  1535  01A5BD  00                 	db	0
  1536  01A5BE  00                 	db	0
  1537  01A5BF  00                 	db	0
  1538  01A5C0  00                 	db	0
  1539  01A5C1  00                 	db	0
  1540  01A5C2  00                 	db	0
  1541  01A5C3  00                 	db	0
  1542  01A5C4  00                 	db	0
  1543  01A5C5  00                 	db	0
  1544  01A5C6  00                 	db	0
  1545  01A5C7  00                 	db	0
  1546  01A5C8  00                 	db	0
  1547  01A5C9  00                 	db	0
  1548  01A5CA  00                 	db	0
  1549  01A5CB  00                 	db	0
  1550  01A5CC  00                 	db	0
  1551  01A5CD  00                 	db	0
  1552  01A5CE  00                 	db	0
  1553  01A5CF  00                 	db	0
  1554  01A5D0  00                 	db	0
  1555  01A5D1  00                 	db	0
  1556  01A5D2  00                 	db	0
  1557  01A5D3  00                 	db	0
  1558  01A5D4  00                 	db	0
  1559  01A5D5  00                 	db	0
  1560  01A5D6  00                 	db	0
  1561  01A5D7  00                 	db	0
  1562  01A5D8  00                 	db	0
  1563  01A5D9  00                 	db	0
  1564  01A5DA  00                 	db	0
  1565  01A5DB  00                 	db	0
  1566  01A5DC  00                 	db	0
  1567  01A5DD  00                 	db	0
  1568  01A5DE  00                 	db	0
  1569  01A5DF  00                 	db	0
  1570  01A5E0  00                 	db	0
  1571  01A5E1  00                 	db	0
  1572  01A5E2  00                 	db	0
  1573  01A5E3  00                 	db	0
  1574  01A5E4  00                 	db	0
  1575  01A5E5  00                 	db	0
  1576  01A5E6  00                 	db	0
  1577  01A5E7  00                 	db	0
  1578  01A5E8  00                 	db	0
  1579  01A5E9  00                 	db	0
  1580  01A5EA  00                 	db	0
  1581  01A5EB  00                 	db	0
  1582  01A5EC  00                 	db	0
  1583  01A5ED  00                 	db	0
  1584  01A5EE  00                 	db	0
  1585  01A5EF  00                 	db	0
  1586  01A5F0  00                 	db	0
  1587  01A5F1  00                 	db	0
  1588  01A5F2  00                 	db	0
  1589  01A5F3  00                 	db	0
  1590  01A5F4  00                 	db	0
  1591  01A5F5  00                 	db	0
  1592  01A5F6  00                 	db	0
  1593  01A5F7  00                 	db	0
  1594  01A5F8  00                 	db	0
  1595  01A5F9  00                 	db	0
  1596  01A5FA  00                 	db	0
  1597  01A5FB  00                 	db	0
  1598  01A5FC  00                 	db	0
  1599  01A5FD  00                 	db	0
  1600  01A5FE  00                 	db	0
  1601  01A5FF  00                 	db	0
  1602  01A600  00                 	db	0
  1603  01A601  00                 	db	0
  1604  01A602  00                 	db	0
  1605  01A603  00                 	db	0
  1606  01A604  00                 	db	0
  1607  01A605  00                 	db	0
  1608  01A606  00                 	db	0
  1609  01A607  00                 	db	0
  1610  01A608  00                 	db	0
  1611  01A609  00                 	db	0
  1612  01A60A  00                 	db	0
  1613  01A60B  00                 	db	0
  1614  01A60C  00                 	db	0
  1615  01A60D  00                 	db	0
  1616  01A60E  00                 	db	0
  1617  01A60F  00                 	db	0
  1618  01A610  00                 	db	0
  1619  01A611  00                 	db	0
  1620  01A612  00                 	db	0
  1621  01A613  00                 	db	0
  1622  01A614  00                 	db	0
  1623  01A615  00                 	db	0
  1624  01A616  00                 	db	0
  1625  01A617  00                 	db	0
  1626  01A618  00                 	db	0
  1627  01A619  00                 	db	0
  1628  01A61A  00                 	db	0
  1629  01A61B  00                 	db	0
  1630  01A61C  00                 	db	0
  1631  01A61D  00                 	db	0
  1632  01A61E  00                 	db	0
  1633  01A61F  00                 	db	0
  1634  01A620  0000               	dw	0
  1635  01A622  0000               	dw	0
  1636  01A624  0000               	dw	0
  1637  01A626  0000               	dw	0
  1638  01A628  00                 	db	0
  1639  01A629  00                 	db	0
  1640  01A62A  00                 	db	0
  1641  01A62B  00                 	db	0
  1642  01A62C  00                 	db	0
  1643  01A62D  00                 	db	0
  1644  01A62E  0000               	dw	0
  1645  01A630  0000               	dw	0
  1646  01A632  0000               	dw	0
  1647  01A634  0000               	dw	0
  1648  01A636  0000               	dw	0
  1649  01A638  0000               	dw	0
  1650  01A63A  00                 	db	0
  1651  01A63B  00                 	db	0
  1652  01A63C  00                 	db	0
  1653  01A63D  00                 	db	0
  1654  01A63E  00                 	db	0
  1655  01A63F  00                 	db	0
  1656  01A640  00                 	db	0
  1657  01A641  00                 	db	0
  1658  01A642  00                 	db	0
  1659  01A643  00                 	db	0
  1660  01A644  00                 	db	0
  1661  01A645  0000               	dw	0
  1662  01A647  0000               	dw	0
  1663  01A649  2D                 	db	45
  1664  01A64A  00                 	db	0
  1665  01A64B  00                 	db	0
  1666  01A64C  00                 	db	0
  1667  01A64D  00                 	db	0
  1668  01A64E  0000               	dw	0
  1669  01A650  0000               	dw	0
  1670  01A652  0000               	dw	0
  1671  01A654  0000               	dw	0
  1672  01A656  0000               	dw	0
  1673  01A658  0000               	dw	0
  1674  01A65A  0000               	dw	0
  1675  01A65C  0000               	dw	0
  1676                           
  1677                           ;initializer for _H
  1678  01A65E  00                 	db	0
  1679  01A65F  00                 	db	0
  1680  01A660  01                 	db	1
  1681  01A661  00                 	db	0
  1682  01A662  01                 	db	1
  1683  01A663  00                 	db	0
  1684  01A664  00                 	db	0
  1685                           
  1686                           	psect	mediumconst
  1687  00F9E4                     __pmediumconst:
  1688                           	opt callstack 0
  1689  00F9E4  00                 	db	0
  1690  00F9E5                     _BVSOC_TABLE:
  1691                           	opt callstack 0
  1692  00F9E5  59D8               	dw	23000
  1693  00F9E7  0000               	dw	0
  1694  00F9E9  0005               	dw	5
  1695  00F9EB  0000               	dw	0
  1696  00F9ED  5B68               	dw	23400
  1697  00F9EF  0000               	dw	0
  1698  00F9F1  000A               	dw	10
  1699  00F9F3  0000               	dw	0
  1700  00F9F5  5C30               	dw	23600
  1701  00F9F7  0000               	dw	0
  1702  00F9F9  0014               	dw	20
  1703  00F9FB  0000               	dw	0
  1704  00F9FD  5E38               	dw	24120
  1705  00F9FF  0000               	dw	0
  1706  00FA01  0019               	dw	25
  1707  00FA03  0000               	dw	0
  1708  00FA05  5E88               	dw	24200
  1709  00FA07  0000               	dw	0
  1710  00FA09  001E               	dw	30
  1711  00FA0B  0000               	dw	0
  1712  00FA0D  5F78               	dw	24440
  1713  00FA0F  0000               	dw	0
  1714  00FA11  0028               	dw	40
  1715  00FA13  0000               	dw	0
  1716  00FA15  5FDC               	dw	24540
  1717  00FA17  0000               	dw	0
  1718  00FA19  002D               	dw	45
  1719  00FA1B  0000               	dw	0
  1720  00FA1D  6018               	dw	24600
  1721  00FA1F  0000               	dw	0
  1722  00FA21  0032               	dw	50
  1723  00FA23  0000               	dw	0
  1724  00FA25  6046               	dw	24646
  1725  00FA27  0000               	dw	0
  1726  00FA29  0035               	dw	53
  1727  00FA2B  0000               	dw	0
  1728  00FA2D  607C               	dw	24700
  1729  00FA2F  0000               	dw	0
  1730  00FA31  0037               	dw	55
  1731  00FA33  0000               	dw	0
  1732  00FA35  60AE               	dw	24750
  1733  00FA37  0000               	dw	0
  1734  00FA39  0039               	dw	57
  1735  00FA3B  0000               	dw	0
  1736  00FA3D  60E0               	dw	24800
  1737  00FA3F  0000               	dw	0
  1738  00FA41  003C               	dw	60
  1739  00FA43  0000               	dw	0
  1740  00FA45  6112               	dw	24850
  1741  00FA47  0000               	dw	0
  1742  00FA49  003F               	dw	63
  1743  00FA4B  0000               	dw	0
  1744  00FA4D  615D               	dw	24925
  1745  00FA4F  0000               	dw	0
  1746  00FA51  0043               	dw	67
  1747  00FA53  0000               	dw	0
  1748  00FA55  61A8               	dw	25000
  1749  00FA57  0000               	dw	0
  1750  00FA59  0046               	dw	70
  1751  00FA5B  0000               	dw	0
  1752  00FA5D  61BC               	dw	25020
  1753  00FA5F  0000               	dw	0
  1754  00FA61  0048               	dw	72
  1755  00FA63  0000               	dw	0
  1756  00FA65  61D0               	dw	25040
  1757  00FA67  0000               	dw	0
  1758  00FA69  004B               	dw	75
  1759  00FA6B  0000               	dw	0
  1760  00FA6D  61DA               	dw	25050
  1761  00FA6F  0000               	dw	0
  1762  00FA71  0050               	dw	80
  1763  00FA73  0000               	dw	0
  1764  00FA75  61E4               	dw	25060
  1765  00FA77  0000               	dw	0
  1766  00FA79  0055               	dw	85
  1767  00FA7B  0000               	dw	0
  1768  00FA7D  61F8               	dw	25080
  1769  00FA7F  0000               	dw	0
  1770  00FA81  005A               	dw	90
  1771  00FA83  0000               	dw	0
  1772  00FA85  6208               	dw	25096
  1773  00FA87  0000               	dw	0
  1774  00FA89  005C               	dw	92
  1775  00FA8B  0000               	dw	0
  1776  00FA8D  6222               	dw	25122
  1777  00FA8F  0000               	dw	0
  1778  00FA91  005D               	dw	93
  1779  00FA93  0000               	dw	0
  1780  00FA95  6234               	dw	25140
  1781  00FA97  0000               	dw	0
  1782  00FA99  005F               	dw	95
  1783  00FA9B  0000               	dw	0
  1784  00FA9D  6248               	dw	25160
  1785  00FA9F  0000               	dw	0
  1786  00FAA1  0061               	dw	97
  1787  00FAA3  0000               	dw	0
  1788  00FAA5  625C               	dw	25180
  1789  00FAA7  0000               	dw	0
  1790  00FAA9  0064               	dw	100
  1791  00FAAB  0000               	dw	0
  1792  00FAAD  6784               	dw	26500
  1793  00FAAF  0000               	dw	0
  1794  00FAB1  0062               	dw	98
  1795  00FAB3  0000               	dw	0
  1796  00FAB5                     __end_of_BVSOC_TABLE:
  1797                           	opt callstack 0
  1798  00FAB5                     _T:
  1799                           	opt callstack 0
  1800  00FAB5  63                 	db	99
  1801  00FAB6  6F                 	db	111
  1802  00FAB7  6D                 	db	109
  1803  00FAB8  6D                 	db	109
  1804  00FAB9  61                 	db	97
  1805  00FABA  6E                 	db	110
  1806  00FABB  64                 	db	100
  1807  00FABC  73                 	db	115
  1808  00FABD  20                 	db	32
  1809  00FABE  31                 	db	49
  1810  00FABF  00                 	db	0
  1811  00FAC0  00                 	db	0
  1812  00FAC1  00                 	db	0
  1813  00FAC2  00                 	db	0
  1814  00FAC3  00                 	db	0
  1815  00FAC4  00                 	db	0
  1816  00FAC5  00                 	db	0
  1817  00FAC6  00                 	db	0
  1818  00FAC7  64                 	db	100
  1819  00FAC8  69                 	db	105
  1820  00FAC9  73                 	db	115
  1821  00FACA  70                 	db	112
  1822  00FACB  6C                 	db	108
  1823  00FACC  61                 	db	97
  1824  00FACD  79                 	db	121
  1825  00FACE  73                 	db	115
  1826  00FACF  20                 	db	32
  1827  00FAD0  31                 	db	49
  1828  00FAD1  00                 	db	0
  1829  00FAD2  00                 	db	0
  1830  00FAD3  00                 	db	0
  1831  00FAD4  00                 	db	0
  1832  00FAD5  00                 	db	0
  1833  00FAD6  00                 	db	0
  1834  00FAD7  00                 	db	0
  1835  00FAD8  00                 	db	0
  1836  00FAD9  63                 	db	99
  1837  00FADA  6F                 	db	111
  1838  00FADB  6D                 	db	109
  1839  00FADC  6D                 	db	109
  1840  00FADD  61                 	db	97
  1841  00FADE  6E                 	db	110
  1842  00FADF  64                 	db	100
  1843  00FAE0  73                 	db	115
  1844  00FAE1  20                 	db	32
  1845  00FAE2  32                 	db	50
  1846  00FAE3  00                 	db	0
  1847  00FAE4  00                 	db	0
  1848  00FAE5  00                 	db	0
  1849  00FAE6  00                 	db	0
  1850  00FAE7  00                 	db	0
  1851  00FAE8  00                 	db	0
  1852  00FAE9  00                 	db	0
  1853  00FAEA  00                 	db	0
  1854  00FAEB  64                 	db	100
  1855  00FAEC  69                 	db	105
  1856  00FAED  73                 	db	115
  1857  00FAEE  70                 	db	112
  1858  00FAEF  6C                 	db	108
  1859  00FAF0  61                 	db	97
  1860  00FAF1  79                 	db	121
  1861  00FAF2  73                 	db	115
  1862  00FAF3  20                 	db	32
  1863  00FAF4  32                 	db	50
  1864  00FAF5  00                 	db	0
  1865  00FAF6  00                 	db	0
  1866  00FAF7  00                 	db	0
  1867  00FAF8  00                 	db	0
  1868  00FAF9  00                 	db	0
  1869  00FAFA  00                 	db	0
  1870  00FAFB  00                 	db	0
  1871  00FAFC  00                 	db	0
  1872  00FAFD  63                 	db	99
  1873  00FAFE  6F                 	db	111
  1874  00FAFF  6D                 	db	109
  1875  00FB00  6D                 	db	109
  1876  00FB01  61                 	db	97
  1877  00FB02  6E                 	db	110
  1878  00FB03  64                 	db	100
  1879  00FB04  73                 	db	115
  1880  00FB05  20                 	db	32
  1881  00FB06  33                 	db	51
  1882  00FB07  00                 	db	0
  1883  00FB08  00                 	db	0
  1884  00FB09  00                 	db	0
  1885  00FB0A  00                 	db	0
  1886  00FB0B  00                 	db	0
  1887  00FB0C  00                 	db	0
  1888  00FB0D  00                 	db	0
  1889  00FB0E  00                 	db	0
  1890  00FB0F  64                 	db	100
  1891  00FB10  69                 	db	105
  1892  00FB11  73                 	db	115
  1893  00FB12  70                 	db	112
  1894  00FB13  6C                 	db	108
  1895  00FB14  61                 	db	97
  1896  00FB15  79                 	db	121
  1897  00FB16  73                 	db	115
  1898  00FB17  20                 	db	32
  1899  00FB18  33                 	db	51
  1900  00FB19  00                 	db	0
  1901  00FB1A  00                 	db	0
  1902  00FB1B  00                 	db	0
  1903  00FB1C  00                 	db	0
  1904  00FB1D  00                 	db	0
  1905  00FB1E  00                 	db	0
  1906  00FB1F  00                 	db	0
  1907  00FB20  00                 	db	0
  1908  00FB21  63                 	db	99
  1909  00FB22  6F                 	db	111
  1910  00FB23  6D                 	db	109
  1911  00FB24  6D                 	db	109
  1912  00FB25  61                 	db	97
  1913  00FB26  6E                 	db	110
  1914  00FB27  64                 	db	100
  1915  00FB28  73                 	db	115
  1916  00FB29  20                 	db	32
  1917  00FB2A  34                 	db	52
  1918  00FB2B  00                 	db	0
  1919  00FB2C  00                 	db	0
  1920  00FB2D  00                 	db	0
  1921  00FB2E  00                 	db	0
  1922  00FB2F  00                 	db	0
  1923  00FB30  00                 	db	0
  1924  00FB31  00                 	db	0
  1925  00FB32  00                 	db	0
  1926  00FB33  64                 	db	100
  1927  00FB34  69                 	db	105
  1928  00FB35  73                 	db	115
  1929  00FB36  70                 	db	112
  1930  00FB37  6C                 	db	108
  1931  00FB38  61                 	db	97
  1932  00FB39  79                 	db	121
  1933  00FB3A  73                 	db	115
  1934  00FB3B  20                 	db	32
  1935  00FB3C  34                 	db	52
  1936  00FB3D  00                 	db	0
  1937  00FB3E  00                 	db	0
  1938  00FB3F  00                 	db	0
  1939  00FB40  00                 	db	0
  1940  00FB41  00                 	db	0
  1941  00FB42  00                 	db	0
  1942  00FB43  00                 	db	0
  1943  00FB44  00                 	db	0
  1944  00FB45                     __end_of_T:
  1945                           	opt callstack 0
  1946  00FB45                     _spin:
  1947                           	opt callstack 0
  1948  00FB45  7C                 	db	124
  1949  00FB46  7C                 	db	124
  1950  00FB47  2F                 	db	47
  1951  00FB48  2F                 	db	47
  1952  00FB49  2D                 	db	45
  1953  00FB4A  2D                 	db	45
  1954  00FB4B  00                 	db	0
  1955  00FB4C  00                 	db	0
  1956  00FB4D  00                 	db	0
  1957  00FB4E  00                 	db	0
  1958  00FB4F  00                 	db	0
  1959  00FB50  00                 	db	0
  1960  00FB51  00                 	db	0
  1961  00FB52  00                 	db	0
  1962  00FB53  00                 	db	0
  1963  00FB54  00                 	db	0
  1964  00FB55  00                 	db	0
  1965  00FB56  00                 	db	0
  1966  00FB57  00                 	db	0
  1967  00FB58  00                 	db	0
  1968  00FB59  7C                 	db	124
  1969  00FB5A  7C                 	db	124
  1970  00FB5B  2F                 	db	47
  1971  00FB5C  2F                 	db	47
  1972  00FB5D  2D                 	db	45
  1973  00FB5E  2D                 	db	45
  1974  00FB5F  5C                 	db	92
  1975  00FB60  5C                 	db	92
  1976  00FB61  00                 	db	0
  1977  00FB62  00                 	db	0
  1978  00FB63  00                 	db	0
  1979  00FB64  00                 	db	0
  1980  00FB65  00                 	db	0
  1981  00FB66  00                 	db	0
  1982  00FB67  00                 	db	0
  1983  00FB68  00                 	db	0
  1984  00FB69  00                 	db	0
  1985  00FB6A  00                 	db	0
  1986  00FB6B  00                 	db	0
  1987  00FB6C  00                 	db	0
  1988  00FB6D  4F                 	db	79
  1989  00FB6E  4F                 	db	79
  1990  00FB6F  4F                 	db	79
  1991  00FB70  4F                 	db	79
  1992  00FB71  4F                 	db	79
  1993  00FB72  4F                 	db	79
  1994  00FB73  2D                 	db	45
  1995  00FB74  2D                 	db	45
  1996  00FB75  5F                 	db	95
  1997  00FB76  5F                 	db	95
  1998  00FB77  2D                 	db	45
  1999  00FB78  00                 	db	0
  2000  00FB79  00                 	db	0
  2001  00FB7A  00                 	db	0
  2002  00FB7B  00                 	db	0
  2003  00FB7C  00                 	db	0
  2004  00FB7D  00                 	db	0
  2005  00FB7E  00                 	db	0
  2006  00FB7F  00                 	db	0
  2007  00FB80  00                 	db	0
  2008  00FB81  76                 	db	118
  2009  00FB82  76                 	db	118
  2010  00FB83  3C                 	db	60
  2011  00FB84  3C                 	db	60
  2012  00FB85  5E                 	db	94
  2013  00FB86  5E                 	db	94
  2014  00FB87  3E                 	db	62
  2015  00FB88  3E                 	db	62
  2016  00FB89  00                 	db	0
  2017  00FB8A  00                 	db	0
  2018  00FB8B  00                 	db	0
  2019  00FB8C  00                 	db	0
  2020  00FB8D  00                 	db	0
  2021  00FB8E  00                 	db	0
  2022  00FB8F  00                 	db	0
  2023  00FB90  00                 	db	0
  2024  00FB91  00                 	db	0
  2025  00FB92  00                 	db	0
  2026  00FB93  00                 	db	0
  2027  00FB94  00                 	db	0
  2028  00FB95  2E                 	db	46
  2029  00FB96  2E                 	db	46
  2030  00FB97  2A                 	db	42
  2031  00FB98  2A                 	db	42
  2032  00FB99  78                 	db	120
  2033  00FB9A  23                 	db	35
  2034  00FB9B  78                 	db	120
  2035  00FB9C  23                 	db	35
  2036  00FB9D  58                 	db	88
  2037  00FB9E  58                 	db	88
  2038  00FB9F  7C                 	db	124
  2039  00FBA0  7C                 	db	124
  2040  00FBA1  2D                 	db	45
  2041  00FBA2  2D                 	db	45
  2042  00FBA3  00                 	db	0
  2043  00FBA4  00                 	db	0
  2044  00FBA5  00                 	db	0
  2045  00FBA6  00                 	db	0
  2046  00FBA7  00                 	db	0
  2047  00FBA8  00                 	db	0
  2048  00FBA9  2E                 	db	46
  2049  00FBAA  2E                 	db	46
  2050  00FBAB  6F                 	db	111
  2051  00FBAC  6F                 	db	111
  2052  00FBAD  4F                 	db	79
  2053  00FBAE  4F                 	db	79
  2054  00FBAF  6F                 	db	111
  2055  00FBB0  6F                 	db	111
  2056  00FBB1  00                 	db	0
  2057  00FBB2  00                 	db	0
  2058  00FBB3  00                 	db	0
  2059  00FBB4  00                 	db	0
  2060  00FBB5  00                 	db	0
  2061  00FBB6  00                 	db	0
  2062  00FBB7  00                 	db	0
  2063  00FBB8  00                 	db	0
  2064  00FBB9  00                 	db	0
  2065  00FBBA  00                 	db	0
  2066  00FBBB  00                 	db	0
  2067  00FBBC  00                 	db	0
  2068  00FBBD                     __end_of_spin:
  2069                           	opt callstack 0
  2070  00FBBD  0000               	dw	0
  2071  00FBBF  3F80               	dw	16256
  2072  00FBC1  0000               	dw	0
  2073  00FBC3  3FC0               	dw	16320
  2074  00FBC5                     __end_of_bp:
  2075                           	opt callstack 0
  2076  00FBC5  AA00               	dw	43520
  2077  00FBC7  3FB8               	dw	16312
  2078  00FBC9                     __end_of_ivln2_h:
  2079                           	opt callstack 0
  2080  00FBC9  23C6               	dw	9158
  2081  00FBCB  B8F6               	dw	47350
  2082  00FBCD                     __end_of_cp_l:
  2083                           	opt callstack 0
  2084  00FBCD  4000               	dw	16384
  2085  00FBCF  3F76               	dw	16246
  2086  00FBD1                     __end_of_cp_h:
  2087                           	opt callstack 0
  2088  0000                     _IVTADL	set	14493
  2089  0000                     _IVTADH	set	14494
  2090  0000                     _IVTADU	set	14495
  2091  0000                     _PIR6bits	set	14758
  2092  0000                     _PIR4bits	set	14756
  2093  0000                     _PIE8bits	set	14744
  2094  0000                     _PIR8bits	set	14760
  2095  0000                     _SCANPR	set	14839
  2096  0000                     _DMA2PR	set	14836
  2097  0000                     _DMA1PR	set	14835
  2098  0000                     _MAINPR	set	14834
  2099  0000                     _ISRPR	set	14833
  2100  0000                     _PIE2bits	set	14738
  2101  0000                     _PIR2bits	set	14754
  2102  0000                     _PIE9bits	set	14745
  2103  0000                     _PIR9bits	set	14761
  2104  0000                     _PIE6bits	set	14742
  2105  0000                     _PIE3bits	set	14739
  2106  0000                     _PMD7	set	14791
  2107  0000                     _PMD6	set	14790
  2108  0000                     _PMD5	set	14789
  2109  0000                     _PMD4	set	14788
  2110  0000                     _PMD3	set	14787
  2111  0000                     _PMD2	set	14786
  2112  0000                     _PMD1	set	14785
  2113  0000                     _PMD0	set	14784
  2114  0000                     _OSCTUNE	set	14814
  2115  0000                     _OSCFRQ	set	14815
  2116  0000                     _OSCEN	set	14813
  2117  0000                     _OSCCON3	set	14811
  2118  0000                     _OSCCON1	set	14809
  2119  0000                     _IPR8bits	set	14728
  2120  0000                     _IPR9bits	set	14729
  2121  0000                     _IPR5bits	set	14725
  2122  0000                     _IPR1bits	set	14721
  2123  0000                     _IPR3bits	set	14723
  2124  0000                     _IPR6bits	set	14726
  2125  0000                     _IPR2bits	set	14722
  2126  0000                     _PIE5bits	set	14741
  2127  0000                     _PIE1bits	set	14737
  2128  0000                     _PIR5bits	set	14757
  2129  0000                     _PIR1bits	set	14753
  2130  0000                     _PLLR	set	118496
  2131  0000                     _SPI1SDIPPS	set	15071
  2132  0000                     _U1RXPPS	set	15077
  2133  0000                     _RC6PPS	set	14870
  2134  0000                     _RC5PPS	set	14869
  2135  0000                     _INT1PPS	set	15041
  2136  0000                     _RD1PPS	set	14873
  2137  0000                     _INT0PPS	set	15040
  2138  0000                     _RC3PPS	set	14867
  2139  0000                     _RB6PPS	set	14862
  2140  0000                     _SPI1SCKPPS	set	15070
  2141  0000                     _U2RXPPS	set	15080
  2142  0000                     _SLRCONF	set	14995
  2143  0000                     _SLRCONE	set	14979
  2144  0000                     _SLRCOND	set	14963
  2145  0000                     _SLRCONC	set	14947
  2146  0000                     _SLRCONB	set	14931
  2147  0000                     _SLRCONA	set	14915
  2148  0000                     _ODCOND	set	14962
  2149  0000                     _ODCONC	set	14946
  2150  0000                     _ODCONB	set	14930
  2151  0000                     _ODCONA	set	14914
  2152  0000                     _ODCONF	set	14994
  2153  0000                     _ODCONE	set	14978
  2154  0000                     _WPUC	set	14945
  2155  0000                     _WPUA	set	14913
  2156  0000                     _WPUB	set	14929
  2157  0000                     _WPUE	set	14977
  2158  0000                     _WPUF	set	14993
  2159  0000                     _WPUD	set	14961
  2160  0000                     _ANSELA	set	14912
  2161  0000                     _ANSELF	set	14992
  2162  0000                     _ANSELE	set	14976
  2163  0000                     _ANSELB	set	14928
  2164  0000                     _ANSELC	set	14944
  2165  0000                     _ANSELD	set	14960
  2166  0000                     _DMA2SSA	set	15321
  2167  0000                     _DMA1SSA	set	15353
  2168  0000                     _DMA2DSZ	set	15310
  2169  0000                     _DMA2SSZ	set	15319
  2170  0000                     _DMA2DSA	set	15312
  2171  0000                     _DMA1DSZ	set	15342
  2172  0000                     _DMA1SSZ	set	15351
  2173  0000                     _DMA1DSA	set	15344
  2174  0000                     _DMA2CON0bits	set	15324
  2175  0000                     _DMA2CON1bits	set	15325
  2176  0000                     _DMA1CON0bits	set	15356
  2177  0000                     _DMA1CON1bits	set	15357
  2178  0000                     _DMA2CON0	set	15324
  2179  0000                     _DMA2AIRQ	set	15326
  2180  0000                     _DMA2SIRQ	set	15327
  2181  0000                     _DMA2CON1	set	15325
  2182  0000                     _DMA1CON0	set	15356
  2183  0000                     _DMA1AIRQ	set	15358
  2184  0000                     _DMA1SIRQ	set	15359
  2185  0000                     _DMA1CON1	set	15357
  2186  0000                     _CLKRCON	set	15589
  2187  0000                     _CLKRCLK	set	15590
  2188  0000                     _SPI1CON1bits	set	15637
  2189  0000                     _SPI1STATUSbits	set	15639
  2190  0000                     _SPI1INTFbits	set	15642
  2191  0000                     _SPI1CON0bits	set	15636
  2192  0000                     _SPI1RXB	set	15632
  2193  0000                     _SPI1TXB	set	15633
  2194  0000                     _SPI1TCNTL	set	15634
  2195  0000                     _SPI1CON0	set	15636
  2196  0000                     _SPI1CLK	set	15644
  2197  0000                     _SPI1BAUD	set	15641
  2198  0000                     _SPI1CON2	set	15638
  2199  0000                     _SPI1CON1	set	15637
  2200  0000                     _U2RXB	set	15824
  2201  0000                     _U2TXB	set	15826
  2202  0000                     _U2ERRIE	set	15842
  2203  0000                     _U2ERRIR	set	15841
  2204  0000                     _U2UIR	set	15840
  2205  0000                     _U2FIFO	set	15839
  2206  0000                     _U2BRGH	set	15838
  2207  0000                     _U2BRGL	set	15837
  2208  0000                     _U2CON2	set	15836
  2209  0000                     _U2CON1	set	15835
  2210  0000                     _U2CON0	set	15834
  2211  0000                     _U2P3L	set	15832
  2212  0000                     _U2P2L	set	15830
  2213  0000                     _U2P1L	set	15828
  2214  0000                     _U1RXB	set	15848
  2215  0000                     _U1ERRIE	set	15866
  2216  0000                     _U1ERRIR	set	15865
  2217  0000                     _U1UIR	set	15864
  2218  0000                     _U1FIFO	set	15863
  2219  0000                     _U1BRGH	set	15862
  2220  0000                     _U1BRGL	set	15861
  2221  0000                     _U1CON2	set	15860
  2222  0000                     _U1CON1	set	15859
  2223  0000                     _U1CON0	set	15858
  2224  0000                     _U1P3H	set	15857
  2225  0000                     _U1P3L	set	15856
  2226  0000                     _U1P2H	set	15855
  2227  0000                     _U1P2L	set	15854
  2228  0000                     _U1P1H	set	15853
  2229  0000                     _U1P1L	set	15852
  2230  0000                     _FVRCON	set	16065
  2231  0000                     _ADFLTRL	set	16102
  2232  0000                     _ADFLTRH	set	16103
  2233  0000                     _ADCON0bits	set	16120
  2234  0000                     _ADCON0	set	16120
  2235  0000                     _ADCLK	set	16127
  2236  0000                     _ADACT	set	16126
  2237  0000                     _ADREF	set	16125
  2238  0000                     _ADSTAT	set	16124
  2239  0000                     _ADCON3	set	16123
  2240  0000                     _ADCON2	set	16122
  2241  0000                     _ADCON1	set	16121
  2242  0000                     _ADPREH	set	16119
  2243  0000                     _ADPREL	set	16118
  2244  0000                     _ADCAP	set	16117
  2245  0000                     _ADACQH	set	16116
  2246  0000                     _ADACQL	set	16115
  2247  0000                     _ADPCH	set	16113
  2248  0000                     _ADRPT	set	16108
  2249  0000                     _ADACCU	set	16106
  2250  0000                     _ADSTPTH	set	16101
  2251  0000                     _ADSTPTL	set	16100
  2252  0000                     _ADUTHH	set	16097
  2253  0000                     _ADUTHL	set	16096
  2254  0000                     _ADLTHH	set	16095
  2255  0000                     _ADLTHL	set	16094
  2256  0000                     _CCPTMRS1bits	set	16223
  2257  0000                     _PORTFbits	set	16335
  2258  0000                     _LATFbits	set	16319
  2259  0000                     _LATCbits	set	16316
  2260  0000                     _LATDbits	set	16317
  2261  0000                     _PORTBbits	set	16331
  2262  0000                     _T3CONbits	set	16294
  2263  0000                     _T3CON	set	16294
  2264  0000                     _TMR3L	set	16292
  2265  0000                     _TMR3H	set	16293
  2266  0000                     _T3CLK	set	16297
  2267  0000                     _T3GATE	set	16296
  2268  0000                     _T3GCON	set	16295
  2269  0000                     _T2CON	set	16300
  2270  0000                     _T2TMR	set	16298
  2271  0000                     _T2PR	set	16299
  2272  0000                     _T2RST	set	16303
  2273  0000                     _T2HLT	set	16301
  2274  0000                     _T2CLKCON	set	16302
  2275  0000                     _PWM8DCL	set	16224
  2276  0000                     _PWM8DCH	set	16225
  2277  0000                     _PWM8CON	set	16226
  2278  0000                     _LATEbits	set	16318
  2279  0000                     _T5CONbits	set	16282
  2280  0000                     _T5CON	set	16282
  2281  0000                     _TMR5L	set	16280
  2282  0000                     _TMR5H	set	16281
  2283  0000                     _T5CLK	set	16285
  2284  0000                     _T5GATE	set	16284
  2285  0000                     _T5GCON	set	16283
  2286  0000                     _T6CON	set	16276
  2287  0000                     _T6TMR	set	16274
  2288  0000                     _T6PR	set	16275
  2289  0000                     _T6RST	set	16279
  2290  0000                     _T6HLT	set	16277
  2291  0000                     _T6CLKCON	set	16278
  2292  0000                     _TRISD	set	16325
  2293  0000                     _TRISC	set	16324
  2294  0000                     _TRISB	set	16323
  2295  0000                     _TRISA	set	16322
  2296  0000                     _TRISF	set	16327
  2297  0000                     _TRISE	set	16326
  2298  0000                     _LATC	set	16316
  2299  0000                     _LATB	set	16315
  2300  0000                     _LATF	set	16319
  2301  0000                     _LATA	set	16314
  2302  0000                     _LATD	set	16317
  2303  0000                     _LATE	set	16318
  2304  0000                     _IVTLOCKbits	set	16340
  2305  0000                     _IVTLOCK	set	16340
  2306  0000                     _INTCON0bits	set	16338
  2307  0000                     _GIE	set	130711
  2308  00FBD1                     STR_64:
  2309                           
  2310                           ; BSR set to: 57
  2311  00FBD1  20                 	db	32
  2312  00FBD2  25                 	db	37
  2313  00FBD3  63                 	db	99	;'c'
  2314  00FBD4  20                 	db	32
  2315  00FBD5  2C                 	db	44
  2316  00FBD6  25                 	db	37
  2317  00FBD7  6C                 	db	108	;'l'
  2318  00FBD8  75                 	db	117	;'u'
  2319  00FBD9  2C                 	db	44
  2320  00FBDA  25                 	db	37
  2321  00FBDB  34                 	db	52	;'4'
  2322  00FBDC  2E                 	db	46
  2323  00FBDD  34                 	db	52	;'4'
  2324  00FBDE  66                 	db	102	;'f'
  2325  00FBDF  2C                 	db	44
  2326  00FBE0  25                 	db	37
  2327  00FBE1  34                 	db	52	;'4'
  2328  00FBE2  2E                 	db	46
  2329  00FBE3  34                 	db	52	;'4'
  2330  00FBE4  66                 	db	102	;'f'
  2331  00FBE5  2C                 	db	44
  2332  00FBE6  25                 	db	37
  2333  00FBE7  34                 	db	52	;'4'
  2334  00FBE8  2E                 	db	46
  2335  00FBE9  34                 	db	52	;'4'
  2336  00FBEA  66                 	db	102	;'f'
  2337  00FBEB  2C                 	db	44
  2338  00FBEC  25                 	db	37
  2339  00FBED  34                 	db	52	;'4'
  2340  00FBEE  2E                 	db	46
  2341  00FBEF  34                 	db	52	;'4'
  2342  00FBF0  66                 	db	102	;'f'
  2343  00FBF1  2C                 	db	44
  2344  00FBF2  25                 	db	37
  2345  00FBF3  34                 	db	52	;'4'
  2346  00FBF4  2E                 	db	46
  2347  00FBF5  33                 	db	51	;'3'
  2348  00FBF6  66                 	db	102	;'f'
  2349  00FBF7  2C                 	db	44
  2350  00FBF8  25                 	db	37
  2351  00FBF9  34                 	db	52	;'4'
  2352  00FBFA  2E                 	db	46
  2353  00FBFB  33                 	db	51	;'3'
  2354  00FBFC  66                 	db	102	;'f'
  2355  00FBFD  2C                 	db	44
  2356  00FBFE  25                 	db	37
  2357  00FBFF  34                 	db	52	;'4'
  2358  00FC00  2E                 	db	46
  2359  00FC01  33                 	db	51	;'3'
  2360  00FC02  66                 	db	102	;'f'
  2361  00FC03  2C                 	db	44
  2362  00FC04  25                 	db	37
  2363  00FC05  34                 	db	52	;'4'
  2364  00FC06  2E                 	db	46
  2365  00FC07  33                 	db	51	;'3'
  2366  00FC08  66                 	db	102	;'f'
  2367  00FC09  2C                 	db	44
  2368  00FC0A  25                 	db	37
  2369  00FC0B  34                 	db	52	;'4'
  2370  00FC0C  2E                 	db	46
  2371  00FC0D  33                 	db	51	;'3'
  2372  00FC0E  66                 	db	102	;'f'
  2373  00FC0F  2C                 	db	44
  2374  00FC10  25                 	db	37
  2375  00FC11  34                 	db	52	;'4'
  2376  00FC12  2E                 	db	46
  2377  00FC13  33                 	db	51	;'3'
  2378  00FC14  66                 	db	102	;'f'
  2379  00FC15  2C                 	db	44
  2380  00FC16  25                 	db	37
  2381  00FC17  64                 	db	100	;'d'
  2382  00FC18  2C                 	db	44
  2383  00FC19  25                 	db	37
  2384  00FC1A  64                 	db	100	;'d'
  2385  00FC1B  2C                 	db	44
  2386  00FC1C  25                 	db	37
  2387  00FC1D  32                 	db	50	;'2'
  2388  00FC1E  2E                 	db	46
  2389  00FC1F  36                 	db	54	;'6'
  2390  00FC20  66                 	db	102	;'f'
  2391  00FC21  2C                 	db	44
  2392  00FC22  25                 	db	37
  2393  00FC23  34                 	db	52	;'4'
  2394  00FC24  2E                 	db	46
  2395  00FC25  33                 	db	51	;'3'
  2396  00FC26  66                 	db	102	;'f'
  2397  00FC27  2C                 	db	44
  2398  00FC28  25                 	db	37
  2399  00FC29  64                 	db	100	;'d'
  2400  00FC2A  2C                 	db	44
  2401  00FC2B  25                 	db	37
  2402  00FC2C  64                 	db	100	;'d'
  2403  00FC2D  2C                 	db	44
  2404  00FC2E  25                 	db	37
  2405  00FC2F  6C                 	db	108	;'l'
  2406  00FC30  75                 	db	117	;'u'
  2407  00FC31  2C                 	db	44
  2408  00FC32  25                 	db	37
  2409  00FC33  6C                 	db	108	;'l'
  2410  00FC34  75                 	db	117	;'u'
  2411  00FC35  2C                 	db	44
  2412  00FC36  25                 	db	37
  2413  00FC37  34                 	db	52	;'4'
  2414  00FC38  2E                 	db	46
  2415  00FC39  33                 	db	51	;'3'
  2416  00FC3A  66                 	db	102	;'f'
  2417  00FC3B  2C                 	db	44
  2418  00FC3C  25                 	db	37
  2419  00FC3D  34                 	db	52	;'4'
  2420  00FC3E  2E                 	db	46
  2421  00FC3F  33                 	db	51	;'3'
  2422  00FC40  66                 	db	102	;'f'
  2423  00FC41  2C                 	db	44
  2424  00FC42  25                 	db	37
  2425  00FC43  34                 	db	52	;'4'
  2426  00FC44  2E                 	db	46
  2427  00FC45  33                 	db	51	;'3'
  2428  00FC46  66                 	db	102	;'f'
  2429  00FC47  0D                 	db	13
  2430  00FC48  0A                 	db	10
  2431  00FC49  00                 	db	0
  2432  00FC4A                     STR_36:
  2433                           
  2434                           ; BSR set to: 57
  2435  00FC4A  53                 	db	83	;'S'
  2436  00FC4B  25                 	db	37
  2437  00FC4C  63                 	db	99	;'c'
  2438  00FC4D  43                 	db	67	;'C'
  2439  00FC4E  20                 	db	32
  2440  00FC4F  25                 	db	37
  2441  00FC50  64                 	db	100	;'d'
  2442  00FC51  20                 	db	32
  2443  00FC52  52                 	db	82	;'R'
  2444  00FC53  55                 	db	85	;'U'
  2445  00FC54  4E                 	db	78	;'N'
  2446  00FC55  20                 	db	32
  2447  00FC56  25                 	db	37
  2448  00FC57  64                 	db	100	;'d'
  2449  00FC58  20                 	db	32
  2450  00FC59  56                 	db	86	;'V'
  2451  00FC5A  25                 	db	37
  2452  00FC5B  32                 	db	50	;'2'
  2453  00FC5C  2E                 	db	46
  2454  00FC5D  32                 	db	50	;'2'
  2455  00FC5E  66                 	db	102	;'f'
  2456  00FC5F  20                 	db	32
  2457  00FC60  20                 	db	32
  2458  00FC61  20                 	db	32
  2459  00FC62  20                 	db	32
  2460  00FC63  20                 	db	32
  2461  00FC64  20                 	db	32
  2462  00FC65  20                 	db	32
  2463  00FC66  00                 	db	0
  2464  00FC67                     STR_17:
  2465                           
  2466                           ; BSR set to: 57
  2467  00FC67  52                 	db	82	;'R'
  2468  00FC68  31                 	db	49	;'1'
  2469  00FC69  20                 	db	32
  2470  00FC6A  25                 	db	37
  2471  00FC6B  32                 	db	50	;'2'
  2472  00FC6C  2E                 	db	46
  2473  00FC6D  33                 	db	51	;'3'
  2474  00FC6E  66                 	db	102	;'f'
  2475  00FC6F  20                 	db	32
  2476  00FC70  25                 	db	37
  2477  00FC71  33                 	db	51	;'3'
  2478  00FC72  2E                 	db	46
  2479  00FC73  34                 	db	52	;'4'
  2480  00FC74  66                 	db	102	;'f'
  2481  00FC75  20                 	db	32
  2482  00FC76  20                 	db	32
  2483  00FC77  20                 	db	32
  2484  00FC78  20                 	db	32
  2485  00FC79  20                 	db	32
  2486  00FC7A  20                 	db	32
  2487  00FC7B  20                 	db	32
  2488  00FC7C  20                 	db	32
  2489  00FC7D  20                 	db	32
  2490  00FC7E  20                 	db	32
  2491  00FC7F  20                 	db	32
  2492  00FC80  00                 	db	0
  2493  00FC81                     STR_18:
  2494                           
  2495                           ; BSR set to: 57
  2496  00FC81  52                 	db	82	;'R'
  2497  00FC82  32                 	db	50	;'2'
  2498  00FC83  20                 	db	32
  2499  00FC84  25                 	db	37
  2500  00FC85  32                 	db	50	;'2'
  2501  00FC86  2E                 	db	46
  2502  00FC87  33                 	db	51	;'3'
  2503  00FC88  66                 	db	102	;'f'
  2504  00FC89  20                 	db	32
  2505  00FC8A  25                 	db	37
  2506  00FC8B  33                 	db	51	;'3'
  2507  00FC8C  2E                 	db	46
  2508  00FC8D  34                 	db	52	;'4'
  2509  00FC8E  66                 	db	102	;'f'
  2510  00FC8F  20                 	db	32
  2511  00FC90  20                 	db	32
  2512  00FC91  20                 	db	32
  2513  00FC92  20                 	db	32
  2514  00FC93  20                 	db	32
  2515  00FC94  20                 	db	32
  2516  00FC95  20                 	db	32
  2517  00FC96  20                 	db	32
  2518  00FC97  20                 	db	32
  2519  00FC98  20                 	db	32
  2520  00FC99  20                 	db	32
  2521  00FC9A  00                 	db	0
  2522  00FC9B                     STR_9:
  2523                           
  2524                           ; BSR set to: 57
  2525  00FC9B  53                 	db	83	;'S'
  2526  00FC9C  20                 	db	32
  2527  00FC9D  53                 	db	83	;'S'
  2528  00FC9E  25                 	db	37
  2529  00FC9F  63                 	db	99	;'c'
  2530  00FCA0  43                 	db	67	;'C'
  2531  00FCA1  20                 	db	32
  2532  00FCA2  25                 	db	37
  2533  00FCA3  64                 	db	100	;'d'
  2534  00FCA4  20                 	db	32
  2535  00FCA5  25                 	db	37
  2536  00FCA6  32                 	db	50	;'2'
  2537  00FCA7  2E                 	db	46
  2538  00FCA8  34                 	db	52	;'4'
  2539  00FCA9  66                 	db	102	;'f'
  2540  00FCAA  20                 	db	32
  2541  00FCAB  20                 	db	32
  2542  00FCAC  20                 	db	32
  2543  00FCAD  20                 	db	32
  2544  00FCAE  20                 	db	32
  2545  00FCAF  20                 	db	32
  2546  00FCB0  20                 	db	32
  2547  00FCB1  20                 	db	32
  2548  00FCB2  20                 	db	32
  2549  00FCB3  20                 	db	32
  2550  00FCB4  00                 	db	0
  2551  00FCB5                     
  2552                           ; BSR set to: 57
  2553  00FCB5  20                 	db	32
  2554  00FCB6  4D                 	db	77	;'M'
  2555  00FCB7  65                 	db	101	;'e'
  2556  00FCB8  73                 	db	115	;'s'
  2557  00FCB9  67                 	db	103	;'g'
  2558  00FCBA  20                 	db	32
  2559  00FCBB  25                 	db	37
  2560  00FCBC  64                 	db	100	;'d'
  2561  00FCBD  20                 	db	32
  2562  00FCBE  53                 	db	83	;'S'
  2563  00FCBF  74                 	db	116	;'t'
  2564  00FCC0  61                 	db	97	;'a'
  2565  00FCC1  63                 	db	99	;'c'
  2566  00FCC2  6B                 	db	107	;'k'
  2567  00FCC3  20                 	db	32
  2568  00FCC4  25                 	db	37
  2569  00FCC5  64                 	db	100	;'d'
  2570  00FCC6  20                 	db	32
  2571  00FCC7  20                 	db	32
  2572  00FCC8  20                 	db	32
  2573  00FCC9  20                 	db	32
  2574  00FCCA  20                 	db	32
  2575  00FCCB  20                 	db	32
  2576  00FCCC  00                 	db	0
  2577  00FCCD                     STR_37:
  2578                           
  2579                           ; BSR set to: 57
  2580  00FCCD  45                 	db	69	;'E'
  2581  00FCCE  53                 	db	83	;'S'
  2582  00FCCF  52                 	db	82	;'R'
  2583  00FCD0  20                 	db	32
  2584  00FCD1  20                 	db	32
  2585  00FCD2  25                 	db	37
  2586  00FCD3  32                 	db	50	;'2'
  2587  00FCD4  2E                 	db	46
  2588  00FCD5  36                 	db	54	;'6'
  2589  00FCD6  66                 	db	102	;'f'
  2590  00FCD7  20                 	db	32
  2591  00FCD8  20                 	db	32
  2592  00FCD9  20                 	db	32
  2593  00FCDA  20                 	db	32
  2594  00FCDB  20                 	db	32
  2595  00FCDC  20                 	db	32
  2596  00FCDD  20                 	db	32
  2597  00FCDE  20                 	db	32
  2598  00FCDF  20                 	db	32
  2599  00FCE0  20                 	db	32
  2600  00FCE1  20                 	db	32
  2601  00FCE2  20                 	db	32
  2602  00FCE3  00                 	db	0
  2603  00FCE4                     STR_34:
  2604                           
  2605                           ; BSR set to: 57
  2606  00FCE4  42                 	db	66	;'B'
  2607  00FCE5  41                 	db	65	;'A'
  2608  00FCE6  54                 	db	84	;'T'
  2609  00FCE7  54                 	db	84	;'T'
  2610  00FCE8  20                 	db	32
  2611  00FCE9  50                 	db	80	;'P'
  2612  00FCEA  57                 	db	87	;'W'
  2613  00FCEB  52                 	db	82	;'R'
  2614  00FCEC  20                 	db	32
  2615  00FCED  25                 	db	37
  2616  00FCEE  33                 	db	51	;'3'
  2617  00FCEF  2E                 	db	46
  2618  00FCF0  32                 	db	50	;'2'
  2619  00FCF1  66                 	db	102	;'f'
  2620  00FCF2  20                 	db	32
  2621  00FCF3  20                 	db	32
  2622  00FCF4  20                 	db	32
  2623  00FCF5  20                 	db	32
  2624  00FCF6  20                 	db	32
  2625  00FCF7  20                 	db	32
  2626  00FCF8  20                 	db	32
  2627  00FCF9  20                 	db	32
  2628  00FCFA  00                 	db	0
  2629  00FCFB                     STR_38:
  2630                           
  2631                           ; BSR set to: 57
  2632  00FCFB  52                 	db	82	;'R'
  2633  00FCFC  31                 	db	49	;'1'
  2634  00FCFD  20                 	db	32
  2635  00FCFE  25                 	db	37
  2636  00FCFF  32                 	db	50	;'2'
  2637  00FD00  2E                 	db	46
  2638  00FD01  33                 	db	51	;'3'
  2639  00FD02  66                 	db	102	;'f'
  2640  00FD03  20                 	db	32
  2641  00FD04  25                 	db	37
  2642  00FD05  33                 	db	51	;'3'
  2643  00FD06  2E                 	db	46
  2644  00FD07  34                 	db	52	;'4'
  2645  00FD08  66                 	db	102	;'f'
  2646  00FD09  20                 	db	32
  2647  00FD0A  20                 	db	32
  2648  00FD0B  20                 	db	32
  2649  00FD0C  20                 	db	32
  2650  00FD0D  20                 	db	32
  2651  00FD0E  20                 	db	32
  2652  00FD0F  20                 	db	32
  2653  00FD10  20                 	db	32
  2654  00FD11  00                 	db	0
  2655  00FD12                     STR_39:
  2656                           
  2657                           ; BSR set to: 57
  2658  00FD12  52                 	db	82	;'R'
  2659  00FD13  32                 	db	50	;'2'
  2660  00FD14  20                 	db	32
  2661  00FD15  25                 	db	37
  2662  00FD16  32                 	db	50	;'2'
  2663  00FD17  2E                 	db	46
  2664  00FD18  33                 	db	51	;'3'
  2665  00FD19  66                 	db	102	;'f'
  2666  00FD1A  20                 	db	32
  2667  00FD1B  25                 	db	37
  2668  00FD1C  33                 	db	51	;'3'
  2669  00FD1D  2E                 	db	46
  2670  00FD1E  34                 	db	52	;'4'
  2671  00FD1F  66                 	db	102	;'f'
  2672  00FD20  20                 	db	32
  2673  00FD21  20                 	db	32
  2674  00FD22  20                 	db	32
  2675  00FD23  20                 	db	32
  2676  00FD24  20                 	db	32
  2677  00FD25  20                 	db	32
  2678  00FD26  20                 	db	32
  2679  00FD27  20                 	db	32
  2680  00FD28  00                 	db	0
  2681  00FD29                     STR_35:
  2682                           
  2683                           ; BSR set to: 57
  2684  00FD29  42                 	db	66	;'B'
  2685  00FD2A  41                 	db	65	;'A'
  2686  00FD2B  48                 	db	72	;'H'
  2687  00FD2C  20                 	db	32
  2688  00FD2D  25                 	db	37
  2689  00FD2E  33                 	db	51	;'3'
  2690  00FD2F  2E                 	db	46
  2691  00FD30  32                 	db	50	;'2'
  2692  00FD31  66                 	db	102	;'f'
  2693  00FD32  20                 	db	32
  2694  00FD33  50                 	db	80	;'P'
  2695  00FD34  25                 	db	37
  2696  00FD35  33                 	db	51	;'3'
  2697  00FD36  2E                 	db	46
  2698  00FD37  32                 	db	50	;'2'
  2699  00FD38  66                 	db	102	;'f'
  2700  00FD39  20                 	db	32
  2701  00FD3A  20                 	db	32
  2702  00FD3B  20                 	db	32
  2703  00FD3C  20                 	db	32
  2704  00FD3D  20                 	db	32
  2705  00FD3E  20                 	db	32
  2706  00FD3F  00                 	db	0
  2707  00FD40                     STR_16:
  2708                           
  2709                           ; BSR set to: 57
  2710  00FD40  45                 	db	69	;'E'
  2711  00FD41  53                 	db	83	;'S'
  2712  00FD42  52                 	db	82	;'R'
  2713  00FD43  20                 	db	32
  2714  00FD44  20                 	db	32
  2715  00FD45  25                 	db	37
  2716  00FD46  32                 	db	50	;'2'
  2717  00FD47  2E                 	db	46
  2718  00FD48  36                 	db	54	;'6'
  2719  00FD49  66                 	db	102	;'f'
  2720  00FD4A  20                 	db	32
  2721  00FD4B  20                 	db	32
  2722  00FD4C  20                 	db	32
  2723  00FD4D  20                 	db	32
  2724  00FD4E  20                 	db	32
  2725  00FD4F  20                 	db	32
  2726  00FD50  20                 	db	32
  2727  00FD51  20                 	db	32
  2728  00FD52  20                 	db	32
  2729  00FD53  20                 	db	32
  2730  00FD54  20                 	db	32
  2731  00FD55  00                 	db	0
  2732  00FD56                     STR_10:
  2733                           
  2734                           ; BSR set to: 57
  2735  00FD56  53                 	db	83	;'S'
  2736  00FD57  74                 	db	116	;'t'
  2737  00FD58  61                 	db	97	;'a'
  2738  00FD59  74                 	db	116	;'t'
  2739  00FD5A  69                 	db	105	;'i'
  2740  00FD5B  63                 	db	99	;'c'
  2741  00FD5C  20                 	db	32
  2742  00FD5D  53                 	db	83	;'S'
  2743  00FD5E  4F                 	db	79	;'O'
  2744  00FD5F  43                 	db	67	;'C'
  2745  00FD60  20                 	db	32
  2746  00FD61  25                 	db	37
  2747  00FD62  64                 	db	100	;'d'
  2748  00FD63  20                 	db	32
  2749  00FD64  20                 	db	32
  2750  00FD65  20                 	db	32
  2751  00FD66  20                 	db	32
  2752  00FD67  20                 	db	32
  2753  00FD68  20                 	db	32
  2754  00FD69  20                 	db	32
  2755  00FD6A  20                 	db	32
  2756  00FD6B  00                 	db	0
  2757  00FD6C                     STR_31:
  2758                           
  2759                           ; BSR set to: 57
  2760  00FD6C  42                 	db	66	;'B'
  2761  00FD6D  41                 	db	65	;'A'
  2762  00FD6E  54                 	db	84	;'T'
  2763  00FD6F  20                 	db	32
  2764  00FD70  49                 	db	73	;'I'
  2765  00FD71  57                 	db	87	;'W'
  2766  00FD72  48                 	db	72	;'H'
  2767  00FD73  20                 	db	32
  2768  00FD74  25                 	db	37
  2769  00FD75  34                 	db	52	;'4'
  2770  00FD76  2E                 	db	46
  2771  00FD77  31                 	db	49	;'1'
  2772  00FD78  66                 	db	102	;'f'
  2773  00FD79  20                 	db	32
  2774  00FD7A  20                 	db	32
  2775  00FD7B  20                 	db	32
  2776  00FD7C  20                 	db	32
  2777  00FD7D  20                 	db	32
  2778  00FD7E  20                 	db	32
  2779  00FD7F  20                 	db	32
  2780  00FD80  20                 	db	32
  2781  00FD81  00                 	db	0
  2782  00FD82                     STR_32:
  2783                           
  2784                           ; BSR set to: 57
  2785  00FD82  42                 	db	66	;'B'
  2786  00FD83  41                 	db	65	;'A'
  2787  00FD84  54                 	db	84	;'T'
  2788  00FD85  20                 	db	32
  2789  00FD86  4F                 	db	79	;'O'
  2790  00FD87  57                 	db	87	;'W'
  2791  00FD88  48                 	db	72	;'H'
  2792  00FD89  20                 	db	32
  2793  00FD8A  25                 	db	37
  2794  00FD8B  34                 	db	52	;'4'
  2795  00FD8C  2E                 	db	46
  2796  00FD8D  31                 	db	49	;'1'
  2797  00FD8E  66                 	db	102	;'f'
  2798  00FD8F  20                 	db	32
  2799  00FD90  20                 	db	32
  2800  00FD91  20                 	db	32
  2801  00FD92  20                 	db	32
  2802  00FD93  20                 	db	32
  2803  00FD94  20                 	db	32
  2804  00FD95  20                 	db	32
  2805  00FD96  20                 	db	32
  2806  00FD97  00                 	db	0
  2807  00FD98                     STR_33:
  2808                           
  2809                           ; BSR set to: 57
  2810  00FD98  42                 	db	66	;'B'
  2811  00FD99  41                 	db	65	;'A'
  2812  00FD9A  54                 	db	84	;'T'
  2813  00FD9B  20                 	db	32
  2814  00FD9C  54                 	db	84	;'T'
  2815  00FD9D  57                 	db	87	;'W'
  2816  00FD9E  48                 	db	72	;'H'
  2817  00FD9F  20                 	db	32
  2818  00FDA0  25                 	db	37
  2819  00FDA1  34                 	db	52	;'4'
  2820  00FDA2  2E                 	db	46
  2821  00FDA3  31                 	db	49	;'1'
  2822  00FDA4  66                 	db	102	;'f'
  2823  00FDA5  20                 	db	32
  2824  00FDA6  20                 	db	32
  2825  00FDA7  20                 	db	32
  2826  00FDA8  20                 	db	32
  2827  00FDA9  20                 	db	32
  2828  00FDAA  20                 	db	32
  2829  00FDAB  20                 	db	32
  2830  00FDAC  20                 	db	32
  2831  00FDAD  00                 	db	0
  2832  00FDAE                     STR_27:
  2833                           
  2834                           ; BSR set to: 57
  2835  00FDAE  49                 	db	73	;'I'
  2836  00FDAF  4E                 	db	78	;'N'
  2837  00FDB0  56                 	db	86	;'V'
  2838  00FDB1  20                 	db	32
  2839  00FDB2  20                 	db	32
  2840  00FDB3  57                 	db	87	;'W'
  2841  00FDB4  48                 	db	72	;'H'
  2842  00FDB5  20                 	db	32
  2843  00FDB6  25                 	db	37
  2844  00FDB7  33                 	db	51	;'3'
  2845  00FDB8  2E                 	db	46
  2846  00FDB9  32                 	db	50	;'2'
  2847  00FDBA  66                 	db	102	;'f'
  2848  00FDBB  20                 	db	32
  2849  00FDBC  20                 	db	32
  2850  00FDBD  20                 	db	32
  2851  00FDBE  20                 	db	32
  2852  00FDBF  20                 	db	32
  2853  00FDC0  20                 	db	32
  2854  00FDC1  20                 	db	32
  2855  00FDC2  20                 	db	32
  2856  00FDC3  00                 	db	0
  2857  00FDC4                     STR_26:
  2858                           
  2859                           ; BSR set to: 57
  2860  00FDC4  4C                 	db	76	;'L'
  2861  00FDC5  4F                 	db	79	;'O'
  2862  00FDC6  41                 	db	65	;'A'
  2863  00FDC7  44                 	db	68	;'D'
  2864  00FDC8  20                 	db	32
  2865  00FDC9  57                 	db	87	;'W'
  2866  00FDCA  48                 	db	72	;'H'
  2867  00FDCB  20                 	db	32
  2868  00FDCC  25                 	db	37
  2869  00FDCD  33                 	db	51	;'3'
  2870  00FDCE  2E                 	db	46
  2871  00FDCF  32                 	db	50	;'2'
  2872  00FDD0  66                 	db	102	;'f'
  2873  00FDD1  20                 	db	32
  2874  00FDD2  20                 	db	32
  2875  00FDD3  20                 	db	32
  2876  00FDD4  20                 	db	32
  2877  00FDD5  20                 	db	32
  2878  00FDD6  20                 	db	32
  2879  00FDD7  20                 	db	32
  2880  00FDD8  20                 	db	32
  2881  00FDD9  00                 	db	0
  2882  00FDDA                     STR_25:
  2883                           
  2884                           ; BSR set to: 57
  2885  00FDDA  50                 	db	80	;'P'
  2886  00FDDB  56                 	db	86	;'V'
  2887  00FDDC  20                 	db	32
  2888  00FDDD  25                 	db	37
  2889  00FDDE  63                 	db	99	;'c'
  2890  00FDDF  20                 	db	32
  2891  00FDE0  57                 	db	87	;'W'
  2892  00FDE1  48                 	db	72	;'H'
  2893  00FDE2  20                 	db	32
  2894  00FDE3  25                 	db	37
  2895  00FDE4  33                 	db	51	;'3'
  2896  00FDE5  2E                 	db	46
  2897  00FDE6  32                 	db	50	;'2'
  2898  00FDE7  66                 	db	102	;'f'
  2899  00FDE8  20                 	db	32
  2900  00FDE9  20                 	db	32
  2901  00FDEA  20                 	db	32
  2902  00FDEB  20                 	db	32
  2903  00FDEC  20                 	db	32
  2904  00FDED  20                 	db	32
  2905  00FDEE  20                 	db	32
  2906  00FDEF  00                 	db	0
  2907  00FDF0                     STR_24:
  2908                           
  2909                           ; BSR set to: 57
  2910  00FDF0  49                 	db	73	;'I'
  2911  00FDF1  4E                 	db	78	;'N'
  2912  00FDF2  56                 	db	86	;'V'
  2913  00FDF3  20                 	db	32
  2914  00FDF4  20                 	db	32
  2915  00FDF5  50                 	db	80	;'P'
  2916  00FDF6  57                 	db	87	;'W'
  2917  00FDF7  52                 	db	82	;'R'
  2918  00FDF8  20                 	db	32
  2919  00FDF9  25                 	db	37
  2920  00FDFA  33                 	db	51	;'3'
  2921  00FDFB  2E                 	db	46
  2922  00FDFC  32                 	db	50	;'2'
  2923  00FDFD  66                 	db	102	;'f'
  2924  00FDFE  20                 	db	32
  2925  00FDFF  20                 	db	32
  2926  00FE00  20                 	db	32
  2927  00FE01  20                 	db	32
  2928  00FE02  20                 	db	32
  2929  00FE03  20                 	db	32
  2930  00FE04  20                 	db	32
  2931  00FE05  00                 	db	0
  2932  00FE06                     STR_23:
  2933                           
  2934                           ; BSR set to: 57
  2935  00FE06  4C                 	db	76	;'L'
  2936  00FE07  4F                 	db	79	;'O'
  2937  00FE08  41                 	db	65	;'A'
  2938  00FE09  44                 	db	68	;'D'
  2939  00FE0A  20                 	db	32
  2940  00FE0B  50                 	db	80	;'P'
  2941  00FE0C  57                 	db	87	;'W'
  2942  00FE0D  52                 	db	82	;'R'
  2943  00FE0E  20                 	db	32
  2944  00FE0F  25                 	db	37
  2945  00FE10  33                 	db	51	;'3'
  2946  00FE11  2E                 	db	46
  2947  00FE12  32                 	db	50	;'2'
  2948  00FE13  66                 	db	102	;'f'
  2949  00FE14  20                 	db	32
  2950  00FE15  20                 	db	32
  2951  00FE16  20                 	db	32
  2952  00FE17  20                 	db	32
  2953  00FE18  20                 	db	32
  2954  00FE19  20                 	db	32
  2955  00FE1A  20                 	db	32
  2956  00FE1B  00                 	db	0
  2957  00FE1C                     STR_22:
  2958                           
  2959                           ; BSR set to: 57
  2960  00FE1C  50                 	db	80	;'P'
  2961  00FE1D  56                 	db	86	;'V'
  2962  00FE1E  20                 	db	32
  2963  00FE1F  25                 	db	37
  2964  00FE20  63                 	db	99	;'c'
  2965  00FE21  20                 	db	32
  2966  00FE22  50                 	db	80	;'P'
  2967  00FE23  57                 	db	87	;'W'
  2968  00FE24  52                 	db	82	;'R'
  2969  00FE25  20                 	db	32
  2970  00FE26  25                 	db	37
  2971  00FE27  33                 	db	51	;'3'
  2972  00FE28  2E                 	db	46
  2973  00FE29  32                 	db	50	;'2'
  2974  00FE2A  66                 	db	102	;'f'
  2975  00FE2B  20                 	db	32
  2976  00FE2C  20                 	db	32
  2977  00FE2D  20                 	db	32
  2978  00FE2E  20                 	db	32
  2979  00FE2F  20                 	db	32
  2980  00FE30  20                 	db	32
  2981  00FE31  00                 	db	0
  2982  00FE32                     STR_11:
  2983                           
  2984                           ; BSR set to: 57
  2985  00FE32  42                 	db	66	;'B'
  2986  00FE33  61                 	db	97	;'a'
  2987  00FE34  74                 	db	116	;'t'
  2988  00FE35  74                 	db	116	;'t'
  2989  00FE36  65                 	db	101	;'e'
  2990  00FE37  72                 	db	114	;'r'
  2991  00FE38  79                 	db	121	;'y'
  2992  00FE39  20                 	db	32
  2993  00FE3A  41                 	db	65	;'A'
  2994  00FE3B  68                 	db	104	;'h'
  2995  00FE3C  20                 	db	32
  2996  00FE3D  25                 	db	37
  2997  00FE3E  33                 	db	51	;'3'
  2998  00FE3F  2E                 	db	46
  2999  00FE40  32                 	db	50	;'2'
  3000  00FE41  66                 	db	102	;'f'
  3001  00FE42  20                 	db	32
  3002  00FE43  20                 	db	32
  3003  00FE44  20                 	db	32
  3004  00FE45  20                 	db	32
  3005  00FE46  20                 	db	32
  3006  00FE47  00                 	db	0
  3007  00FE48                     STR_29:
  3008                           
  3009                           ; BSR set to: 57
  3010  00FE48  42                 	db	66	;'B'
  3011  00FE49  56                 	db	86	;'V'
  3012  00FE4A  20                 	db	32
  3013  00FE4B  25                 	db	37
  3014  00FE4C  32                 	db	50	;'2'
  3015  00FE4D  2E                 	db	46
  3016  00FE4E  32                 	db	50	;'2'
  3017  00FE4F  66                 	db	102	;'f'
  3018  00FE50  20                 	db	32
  3019  00FE51  42                 	db	66	;'B'
  3020  00FE52  41                 	db	65	;'A'
  3021  00FE53  20                 	db	32
  3022  00FE54  25                 	db	37
  3023  00FE55  32                 	db	50	;'2'
  3024  00FE56  2E                 	db	46
  3025  00FE57  32                 	db	50	;'2'
  3026  00FE58  66                 	db	102	;'f'
  3027  00FE59  20                 	db	32
  3028  00FE5A  20                 	db	32
  3029  00FE5B  20                 	db	32
  3030  00FE5C  20                 	db	32
  3031  00FE5D  00                 	db	0
  3032  00FE5E                     STR_30:
  3033                           
  3034                           ; BSR set to: 57
  3035  00FE5E  43                 	db	67	;'C'
  3036  00FE5F  56                 	db	86	;'V'
  3037  00FE60  20                 	db	32
  3038  00FE61  25                 	db	37
  3039  00FE62  32                 	db	50	;'2'
  3040  00FE63  2E                 	db	46
  3041  00FE64  32                 	db	50	;'2'
  3042  00FE65  66                 	db	102	;'f'
  3043  00FE66  20                 	db	32
  3044  00FE67  4C                 	db	76	;'L'
  3045  00FE68  41                 	db	65	;'A'
  3046  00FE69  20                 	db	32
  3047  00FE6A  25                 	db	37
  3048  00FE6B  32                 	db	50	;'2'
  3049  00FE6C  2E                 	db	46
  3050  00FE6D  32                 	db	50	;'2'
  3051  00FE6E  66                 	db	102	;'f'
  3052  00FE6F  20                 	db	32
  3053  00FE70  20                 	db	32
  3054  00FE71  20                 	db	32
  3055  00FE72  20                 	db	32
  3056  00FE73  00                 	db	0
  3057  00FE74                     STR_28:
  3058                           
  3059                           ; BSR set to: 57
  3060  00FE74  50                 	db	80	;'P'
  3061  00FE75  56                 	db	86	;'V'
  3062  00FE76  20                 	db	32
  3063  00FE77  25                 	db	37
  3064  00FE78  32                 	db	50	;'2'
  3065  00FE79  2E                 	db	46
  3066  00FE7A  32                 	db	50	;'2'
  3067  00FE7B  66                 	db	102	;'f'
  3068  00FE7C  20                 	db	32
  3069  00FE7D  50                 	db	80	;'P'
  3070  00FE7E  41                 	db	65	;'A'
  3071  00FE7F  20                 	db	32
  3072  00FE80  25                 	db	37
  3073  00FE81  32                 	db	50	;'2'
  3074  00FE82  2E                 	db	46
  3075  00FE83  32                 	db	50	;'2'
  3076  00FE84  66                 	db	102	;'f'
  3077  00FE85  20                 	db	32
  3078  00FE86  20                 	db	32
  3079  00FE87  20                 	db	32
  3080  00FE88  20                 	db	32
  3081  00FE89  00                 	db	0
  3082  00FE8A                     STR_40:
  3083                           
  3084                           ; BSR set to: 57
  3085  00FE8A  25                 	db	37
  3086  00FE8B  64                 	db	100	;'d'
  3087  00FE8C  20                 	db	32
  3088  00FE8D  25                 	db	37
  3089  00FE8E  32                 	db	50	;'2'
  3090  00FE8F  2E                 	db	46
  3091  00FE90  34                 	db	52	;'4'
  3092  00FE91  66                 	db	102	;'f'
  3093  00FE92  2C                 	db	44
  3094  00FE93  20                 	db	32
  3095  00FE94  25                 	db	37
  3096  00FE95  64                 	db	100	;'d'
  3097  00FE96  20                 	db	32
  3098  00FE97  20                 	db	32
  3099  00FE98  54                 	db	84	;'T'
  3100  00FE99  52                 	db	82	;'R'
  3101  00FE9A  49                 	db	73	;'I'
  3102  00FE9B  4D                 	db	77	;'M'
  3103  00FE9C  20                 	db	32
  3104  00FE9D  20                 	db	32
  3105  00FE9E  20                 	db	32
  3106  00FE9F  00                 	db	0
  3107  00FEA0                     STR_5:
  3108                           
  3109                           ; BSR set to: 57
  3110  00FEA0  20                 	db	32
  3111  00FEA1  20                 	db	32
  3112  00FEA2  20                 	db	32
  3113  00FEA3  20                 	db	32
  3114  00FEA4  20                 	db	32
  3115  00FEA5  20                 	db	32
  3116  00FEA6  20                 	db	32
  3117  00FEA7  20                 	db	32
  3118  00FEA8  20                 	db	32
  3119  00FEA9  20                 	db	32
  3120  00FEAA  20                 	db	32
  3121  00FEAB  20                 	db	32
  3122  00FEAC  20                 	db	32
  3123  00FEAD  20                 	db	32
  3124  00FEAE  20                 	db	32
  3125  00FEAF  20                 	db	32
  3126  00FEB0  20                 	db	32
  3127  00FEB1  20                 	db	32
  3128  00FEB2  20                 	db	32
  3129  00FEB3  20                 	db	32
  3130  00FEB4  00                 	db	0
  3131  00FEB5                     STR_8:
  3132                           
  3133                           ; BSR set to: 57
  3134  00FEB5  42                 	db	66	;'B'
  3135  00FEB6  56                 	db	86	;'V'
  3136  00FEB7  20                 	db	32
  3137  00FEB8  25                 	db	37
  3138  00FEB9  32                 	db	50	;'2'
  3139  00FEBA  2E                 	db	46
  3140  00FEBB  34                 	db	52	;'4'
  3141  00FEBC  66                 	db	102	;'f'
  3142  00FEBD  20                 	db	32
  3143  00FEBE  20                 	db	32
  3144  00FEBF  20                 	db	32
  3145  00FEC0  20                 	db	32
  3146  00FEC1  20                 	db	32
  3147  00FEC2  20                 	db	32
  3148  00FEC3  20                 	db	32
  3149  00FEC4  20                 	db	32
  3150  00FEC5  20                 	db	32
  3151  00FEC6  20                 	db	32
  3152  00FEC7  20                 	db	32
  3153  00FEC8  20                 	db	32
  3154  00FEC9  00                 	db	0
  3155  00FECA                     STR_4:
  3156                           
  3157                           ; BSR set to: 57
  3158  00FECA  20                 	db	32
  3159  00FECB  4E                 	db	78	;'N'
  3160  00FECC  53                 	db	83	;'S'
  3161  00FECD  41                 	db	65	;'A'
  3162  00FECE  53                 	db	83	;'S'
  3163  00FECF  50                 	db	80	;'P'
  3164  00FED0  4F                 	db	79	;'O'
  3165  00FED1  4F                 	db	79	;'O'
  3166  00FED2  4B                 	db	75	;'K'
  3167  00FED3  20                 	db	32
  3168  00FED4  20                 	db	32
  3169  00FED5  20                 	db	32
  3170  00FED6  20                 	db	32
  3171  00FED7  20                 	db	32
  3172  00FED8  20                 	db	32
  3173  00FED9  20                 	db	32
  3174  00FEDA  20                 	db	32
  3175  00FEDB  20                 	db	32
  3176  00FEDC  20                 	db	32
  3177  00FEDD  20                 	db	32
  3178  00FEDE  00                 	db	0
  3179  00FEDF                     STR_12:
  3180                           
  3181                           ; BSR set to: 57
  3182  00FEDF  42                 	db	66	;'B'
  3183  00FEE0  61                 	db	97	;'a'
  3184  00FEE1  74                 	db	116	;'t'
  3185  00FEE2  74                 	db	116	;'t'
  3186  00FEE3  65                 	db	101	;'e'
  3187  00FEE4  72                 	db	114	;'r'
  3188  00FEE5  79                 	db	121	;'y'
  3189  00FEE6  20                 	db	32
  3190  00FEE7  45                 	db	69	;'E'
  3191  00FEE8  53                 	db	83	;'S'
  3192  00FEE9  52                 	db	82	;'R'
  3193  00FEEA  20                 	db	32
  3194  00FEEB  20                 	db	32
  3195  00FEEC  20                 	db	32
  3196  00FEED  20                 	db	32
  3197  00FEEE  20                 	db	32
  3198  00FEEF  20                 	db	32
  3199  00FEF0  20                 	db	32
  3200  00FEF1  20                 	db	32
  3201  00FEF2  20                 	db	32
  3202  00FEF3  00                 	db	0
  3203  00FEF4                     STR_13:
  3204                           
  3205                           ; BSR set to: 57
  3206  00FEF4  43                 	db	67	;'C'
  3207  00FEF5  61                 	db	97	;'a'
  3208  00FEF6  6C                 	db	108	;'l'
  3209  00FEF7  63                 	db	99	;'c'
  3210  00FEF8  75                 	db	117	;'u'
  3211  00FEF9  6C                 	db	108	;'l'
  3212  00FEFA  61                 	db	97	;'a'
  3213  00FEFB  74                 	db	116	;'t'
  3214  00FEFC  69                 	db	105	;'i'
  3215  00FEFD  6F                 	db	111	;'o'
  3216  00FEFE  6E                 	db	110	;'n'
  3217  00FEFF  20                 	db	32
  3218  00FF00  20                 	db	32
  3219  00FF01  20                 	db	32
  3220  00FF02  20                 	db	32
  3221  00FF03  20                 	db	32
  3222  00FF04  20                 	db	32
  3223  00FF05  20                 	db	32
  3224  00FF06  20                 	db	32
  3225  00FF07  20                 	db	32
  3226  00FF08  00                 	db	0
  3227  00FF09                     STR_2:
  3228                           
  3229                           ; BSR set to: 57
  3230  00FF09  20                 	db	32
  3231  00FF0A  56                 	db	86	;'V'
  3232  00FF0B  65                 	db	101	;'e'
  3233  00FF0C  72                 	db	114	;'r'
  3234  00FF0D  73                 	db	115	;'s'
  3235  00FF0E  69                 	db	105	;'i'
  3236  00FF0F  6F                 	db	111	;'o'
  3237  00FF10  6E                 	db	110	;'n'
  3238  00FF11  20                 	db	32
  3239  00FF12  25                 	db	37
  3240  00FF13  73                 	db	115	;'s'
  3241  00FF14  20                 	db	32
  3242  00FF15  20                 	db	32
  3243  00FF16  20                 	db	32
  3244  00FF17  20                 	db	32
  3245  00FF18  20                 	db	32
  3246  00FF19  20                 	db	32
  3247  00FF1A  20                 	db	32
  3248  00FF1B  20                 	db	32
  3249  00FF1C  20                 	db	32
  3250  00FF1D  00                 	db	0
  3251  00FF1E                     STR_1:
  3252                           
  3253                           ; BSR set to: 57
  3254  00FF1E  20                 	db	32
  3255  00FF1F  4D                 	db	77	;'M'
  3256  00FF20  42                 	db	66	;'B'
  3257  00FF21  4D                 	db	77	;'M'
  3258  00FF22  43                 	db	67	;'C'
  3259  00FF23  20                 	db	32
  3260  00FF24  53                 	db	83	;'S'
  3261  00FF25  4F                 	db	79	;'O'
  3262  00FF26  4C                 	db	76	;'L'
  3263  00FF27  41                 	db	65	;'A'
  3264  00FF28  52                 	db	82	;'R'
  3265  00FF29  4D                 	db	77	;'M'
  3266  00FF2A  4F                 	db	79	;'O'
  3267  00FF2B  4E                 	db	78	;'N'
  3268  00FF2C  20                 	db	32
  3269  00FF2D  20                 	db	32
  3270  00FF2E  20                 	db	32
  3271  00FF2F  20                 	db	32
  3272  00FF30  20                 	db	32
  3273  00FF31  20                 	db	32
  3274  00FF32  00                 	db	0
  3275  00FF33                     STR_15:
  3276                           
  3277                           ; BSR set to: 57
  3278  00FF33  43                 	db	67	;'C'
  3279  00FF34  68                 	db	104	;'h'
  3280  00FF35  65                 	db	101	;'e'
  3281  00FF36  63                 	db	99	;'c'
  3282  00FF37  6B                 	db	107	;'k'
  3283  00FF38  69                 	db	105	;'i'
  3284  00FF39  6E                 	db	110	;'n'
  3285  00FF3A  67                 	db	103	;'g'
  3286  00FF3B  20                 	db	32
  3287  00FF3C  25                 	db	37
  3288  00FF3D  63                 	db	99	;'c'
  3289  00FF3E  20                 	db	32
  3290  00FF3F  25                 	db	37
  3291  00FF40  63                 	db	99	;'c'
  3292  00FF41  20                 	db	32
  3293  00FF42  20                 	db	32
  3294  00FF43  20                 	db	32
  3295  00FF44  20                 	db	32
  3296  00FF45  20                 	db	32
  3297  00FF46  20                 	db	32
  3298  00FF47  00                 	db	0
  3299  00FF48                     STR_14:
  3300                           
  3301                           ; BSR set to: 57
  3302  00FF48  43                 	db	67	;'C'
  3303  00FF49  68                 	db	104	;'h'
  3304  00FF4A  65                 	db	101	;'e'
  3305  00FF4B  63                 	db	99	;'c'
  3306  00FF4C  6B                 	db	107	;'k'
  3307  00FF4D  20                 	db	32
  3308  00FF4E  33                 	db	51	;'3'
  3309  00FF4F  30                 	db	48	;'0'
  3310  00FF50  20                 	db	32
  3311  00FF51  73                 	db	115	;'s'
  3312  00FF52  65                 	db	101	;'e'
  3313  00FF53  63                 	db	99	;'c'
  3314  00FF54  6F                 	db	111	;'o'
  3315  00FF55  6E                 	db	110	;'n'
  3316  00FF56  64                 	db	100	;'d'
  3317  00FF57  73                 	db	115	;'s'
  3318  00FF58  20                 	db	32
  3319  00FF59  20                 	db	32
  3320  00FF5A  20                 	db	32
  3321  00FF5B  20                 	db	32
  3322  00FF5C  00                 	db	0
  3323  00FF5D                     STR_47:
  3324                           
  3325                           ; BSR set to: 57
  3326  00FF5D  48                 	db	72	;'H'
  3327  00FF5E  45                 	db	69	;'E'
  3328  00FF5F  4C                 	db	76	;'L'
  3329  00FF60  50                 	db	80	;'P'
  3330  00FF61  20                 	db	32
  3331  00FF62  25                 	db	37
  3332  00FF63  73                 	db	115	;'s'
  3333  00FF64  20                 	db	32
  3334  00FF65  20                 	db	32
  3335  00FF66  20                 	db	32
  3336  00FF67  20                 	db	32
  3337  00FF68  20                 	db	32
  3338  00FF69  20                 	db	32
  3339  00FF6A  20                 	db	32
  3340  00FF6B  20                 	db	32
  3341  00FF6C  20                 	db	32
  3342  00FF6D  20                 	db	32
  3343  00FF6E  20                 	db	32
  3344  00FF6F  00                 	db	0
  3345  00FF70                     
  3346                           ; BSR set to: 57
  3347  00FF70  44                 	db	68	;'D'
  3348  00FF71  49                 	db	73	;'I'
  3349  00FF72  53                 	db	83	;'S'
  3350  00FF73  50                 	db	80	;'P'
  3351  00FF74  4C                 	db	76	;'L'
  3352  00FF75  41                 	db	65	;'A'
  3353  00FF76  59                 	db	89	;'Y'
  3354  00FF77  20                 	db	32
  3355  00FF78  25                 	db	37
  3356  00FF79  73                 	db	115	;'s'
  3357  00FF7A  20                 	db	32
  3358  00FF7B  20                 	db	32
  3359  00FF7C  20                 	db	32
  3360  00FF7D  20                 	db	32
  3361  00FF7E  20                 	db	32
  3362  00FF7F  20                 	db	32
  3363  00FF80  20                 	db	32
  3364  00FF81  20                 	db	32
  3365  00FF82  00                 	db	0
  3366  00FF83                     
  3367                           ; BSR set to: 57
  3368  00FF83  25                 	db	37
  3369  00FF84  64                 	db	100	;'d'
  3370  00FF85  20                 	db	32
  3371  00FF86  25                 	db	37
  3372  00FF87  32                 	db	50	;'2'
  3373  00FF88  2E                 	db	46
  3374  00FF89  34                 	db	52	;'4'
  3375  00FF8A  66                 	db	102	;'f'
  3376  00FF8B  2C                 	db	44
  3377  00FF8C  20                 	db	32
  3378  00FF8D  25                 	db	37
  3379  00FF8E  64                 	db	100	;'d'
  3380  00FF8F  20                 	db	32
  3381  00FF90  20                 	db	32
  3382  00FF91  20                 	db	32
  3383  00FF92  23                 	db	35
  3384  00FF93  00                 	db	0
  3385  00FF94                     STR_19:
  3386                           
  3387                           ; BSR set to: 57
  3388  00FF94  25                 	db	37
  3389  00FF95  64                 	db	100	;'d'
  3390  00FF96  20                 	db	32
  3391  00FF97  25                 	db	37
  3392  00FF98  32                 	db	50	;'2'
  3393  00FF99  2E                 	db	46
  3394  00FF9A  34                 	db	52	;'4'
  3395  00FF9B  66                 	db	102	;'f'
  3396  00FF9C  20                 	db	32
  3397  00FF9D  20                 	db	32
  3398  00FF9E  20                 	db	32
  3399  00FF9F  25                 	db	37
  3400  00FFA0  64                 	db	100	;'d'
  3401  00FFA1  20                 	db	32
  3402  00FFA2  20                 	db	32
  3403  00FFA3  00                 	db	0
  3404  00FFA4                     STR_51:
  3405                           
  3406                           ; BSR set to: 57
  3407  00FFA4  76                 	db	118	;'v'
  3408  00FFA5  74                 	db	116	;'t'
  3409  00FFA6  65                 	db	101	;'e'
  3410  00FFA7  72                 	db	114	;'r'
  3411  00FFA8  6D                 	db	109	;'m'
  3412  00FFA9  20                 	db	32
  3413  00FFAA  25                 	db	37
  3414  00FFAB  78                 	db	120	;'x'
  3415  00FFAC  3A                 	db	58	;':'
  3416  00FFAD  25                 	db	37
  3417  00FFAE  78                 	db	120	;'x'
  3418  00FFAF  20                 	db	32
  3419  00FFB0  20                 	db	32
  3420  00FFB1  20                 	db	32
  3421  00FFB2  00                 	db	0
  3422  00FFB3                     STR_45:
  3423                           
  3424                           ; BSR set to: 57
  3425  00FFB3  4A                 	db	74	;'J'
  3426  00FFB4  61                 	db	97	;'a'
  3427  00FFB5  6E                 	db	110	;'n'
  3428  00FFB6  20                 	db	32
  3429  00FFB7  31                 	db	49	;'1'
  3430  00FFB8  39                 	db	57	;'9'
  3431  00FFB9  20                 	db	32
  3432  00FFBA  32                 	db	50	;'2'
  3433  00FFBB  30                 	db	48	;'0'
  3434  00FFBC  32                 	db	50	;'2'
  3435  00FFBD  30                 	db	48	;'0'
  3436  00FFBE  00                 	db	0
  3437  00FFBF                     STR_49:
  3438                           
  3439                           ; BSR set to: 57
  3440  00FFBF  25                 	db	37
  3441  00FFC0  73                 	db	115	;'s'
  3442  00FFC1  20                 	db	32
  3443  00FFC2  20                 	db	32
  3444  00FFC3  20                 	db	32
  3445  00FFC4  20                 	db	32
  3446  00FFC5  20                 	db	32
  3447  00FFC6  20                 	db	32
  3448  00FFC7  20                 	db	32
  3449  00FFC8  00                 	db	0
  3450  00FFC9                     STR_46:
  3451                           
  3452                           ; BSR set to: 57
  3453  00FFC9  31                 	db	49	;'1'
  3454  00FFCA  35                 	db	53	;'5'
  3455  00FFCB  3A                 	db	58	;':'
  3456  00FFCC  30                 	db	48	;'0'
  3457  00FFCD  34                 	db	52	;'4'
  3458  00FFCE  3A                 	db	58	;':'
  3459  00FFCF  31                 	db	49	;'1'
  3460  00FFD0  34                 	db	52	;'4'
  3461  00FFD1  00                 	db	0
  3462  00FFD2                     STR_3:
  3463                           
  3464                           ; BSR set to: 57
  3465  00FFD2  31                 	db	49	;'1'
  3466  00FFD3  2E                 	db	46
  3467  00FFD4  31                 	db	49	;'1'
  3468  00FFD5  33                 	db	51	;'3'
  3469  00FFD6  00                 	db	0
  3470  00FFD7                     STR_65:
  3471                           
  3472                           ; BSR set to: 57
  3473  00FFD7  49                 	db	73	;'I'
  3474  00FFD8  4E                 	db	78	;'N'
  3475  00FFD9  46                 	db	70	;'F'
  3476  00FFDA  00                 	db	0
  3477  00FFDB                     STR_69:
  3478                           
  3479                           ; BSR set to: 57
  3480  00FFDB  4E                 	db	78	;'N'
  3481  00FFDC  41                 	db	65	;'A'
  3482  00FFDD  4E                 	db	78	;'N'
  3483  00FFDE  00                 	db	0
  3484  00FFDF                     STR_66:
  3485                           
  3486                           ; BSR set to: 57
  3487  00FFDF  69                 	db	105	;'i'
  3488  00FFE0  6E                 	db	110	;'n'
  3489  00FFE1  66                 	db	102	;'f'
  3490  00FFE2  00                 	db	0
  3491  00FFE3                     STR_70:
  3492                           
  3493                           ; BSR set to: 57
  3494  00FFE3  6E                 	db	110	;'n'
  3495  00FFE4  61                 	db	97	;'a'
  3496  00FFE5  6E                 	db	110	;'n'
  3497  00FFE6  00                 	db	0
  3498  00FFE7                     STR_96:
  3499                           
  3500                           ; BSR set to: 57
  3501  00FFE7  6C                 	db	108	;'l'
  3502  00FFE8  58                 	db	88	;'X'
  3503  00FFE9  00                 	db	0
  3504  00FFEA                     STR_73:
  3505                           
  3506                           ; BSR set to: 57
  3507  00FFEA  6C                 	db	108	;'l'
  3508  00FFEB  64                 	db	100	;'d'
  3509  00FFEC  00                 	db	0
  3510  00FFED                     STR_82:
  3511                           
  3512                           ; BSR set to: 57
  3513  00FFED  6C                 	db	108	;'l'
  3514  00FFEE  66                 	db	102	;'f'
  3515  00FFEF  00                 	db	0
  3516  00FFF0                     STR_77:
  3517                           
  3518                           ; BSR set to: 57
  3519  00FFF0  6C                 	db	108	;'l'
  3520  00FFF1  69                 	db	105	;'i'
  3521  00FFF2  00                 	db	0
  3522  00FFF3                     STR_87:
  3523                           
  3524                           ; BSR set to: 57
  3525  00FFF3  6C                 	db	108	;'l'
  3526  00FFF4  75                 	db	117	;'u'
  3527  00FFF5  00                 	db	0
  3528  00FFF6                     STR_92:
  3529                           
  3530                           ; BSR set to: 57
  3531  00FFF6  6C                 	db	108	;'l'
  3532  00FFF7  78                 	db	120	;'x'
  3533  00FFF8  00                 	db	0
  3534  00FFF9                     STR_44:
  3535                           
  3536                           ; BSR set to: 57
  3537  00FFF9  25                 	db	37
  3538  00FFFA  63                 	db	99	;'c'
  3539  00FFFB  00                 	db	0
  3540  00FFFC                     STR_43:
  3541                           
  3542                           ; BSR set to: 57
  3543  00FFFC  25                 	db	37
  3544  00FFFD  73                 	db	115	;'s'
  3545  00FFFE  00                 	db	0
  3546  0000                     
  3547                           ; #config settings
  3548  00FFFF  00                 	db	0	; dummy byte at the end
  3549  0000                     
  3550                           	psect	cinit
  3551  01A312                     __pcinit:
  3552                           	opt callstack 0
  3553  01A312                     start_initialization:
  3554                           	opt callstack 0
  3555  01A312                     __initialization:
  3556                           	opt callstack 0
  3557                           
  3558                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3559                           ; load TBLPTR registers with __pidataBIGRAM
  3560  01A312  0E70               	movlw	low __pidataBIGRAM
  3561  01A314  6EF6               	movwf	tblptrl,c
  3562  01A316  0E6B               	movlw	high __pidataBIGRAM
  3563  01A318  6EF7               	movwf	tblptrh,c
  3564  01A31A  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3565  01A31C  6EF8               	movwf	tblptru,c
  3566  01A31E  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3567  01A322  EE20 F32B          	lfsr	2,811
  3568  01A326                     copy_data0:
  3569  01A326  0009               	tblrd		*+
  3570  01A328  006F FFD7 FFEE     	movff	tablat,postinc0
  3571  01A32E  50DD               	movf	postdec2,w,c
  3572  01A330  50D9               	movf	fsr2l,w,c
  3573  01A332  E1F9               	bnz	copy_data0
  3574  01A334  50DA               	movf	fsr2h,w,c
  3575  01A336  E1F7               	bnz	copy_data0
  3576                           
  3577                           ; Initialize objects allocated to BANK1 (205 bytes)
  3578                           ; load TBLPTR registers with __pidataBANK1
  3579  01A338  0E98               	movlw	low __pidataBANK1
  3580  01A33A  6EF6               	movwf	tblptrl,c
  3581  01A33C  0EA5               	movlw	high __pidataBANK1
  3582  01A33E  6EF7               	movwf	tblptrh,c
  3583  01A340  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3584  01A342  6EF8               	movwf	tblptru,c
  3585  01A344  EE00  F100         	lfsr	0,__pdataBANK1
  3586  01A348  EE20 F0CD          	lfsr	2,205
  3587  01A34C                     copy_data1:
  3588  01A34C  0009               	tblrd		*+
  3589  01A34E  006F FFD7 FFEE     	movff	tablat,postinc0
  3590  01A354  50DD               	movf	postdec2,w,c
  3591  01A356  50D9               	movf	fsr2l,w,c
  3592  01A358  E1F9               	bnz	copy_data1
  3593                           
  3594                           ; Initialize objects allocated to BANK0 (54 bytes)
  3595                           ; load TBLPTR registers with __pidataBANK0
  3596  01A35A  0ED0               	movlw	low __pidataBANK0
  3597  01A35C  6EF6               	movwf	tblptrl,c
  3598  01A35E  0EBC               	movlw	high __pidataBANK0
  3599  01A360  6EF7               	movwf	tblptrh,c
  3600  01A362  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3601  01A364  6EF8               	movwf	tblptru,c
  3602  01A366  EE00  F0AF         	lfsr	0,__pdataBANK0
  3603  01A36A  EE20 F036          	lfsr	2,54
  3604  01A36E                     copy_data2:
  3605  01A36E  0009               	tblrd		*+
  3606  01A370  006F FFD7 FFEE     	movff	tablat,postinc0
  3607  01A376  50DD               	movf	postdec2,w,c
  3608  01A378  50D9               	movf	fsr2l,w,c
  3609  01A37A  E1F9               	bnz	copy_data2
  3610                           
  3611                           ; Clear objects allocated to BIGRAM (482 bytes)
  3612  01A37C  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3613  01A380  EE20 F1E2          	lfsr	2,482
  3614  01A384                     clear_0:
  3615  01A384  6AEE               	clrf	postinc0,c
  3616  01A386  50DD               	movf	postdec2,w,c
  3617  01A388  50D9               	movf	fsr2l,w,c
  3618  01A38A  E1FC               	bnz	clear_0
  3619  01A38C  50DA               	movf	fsr2h,w,c
  3620  01A38E  E1FA               	bnz	clear_0
  3621                           
  3622                           ; Clear objects allocated to BANK4 (255 bytes)
  3623  01A390  EE01  F000         	lfsr	0,__pbssBANK4
  3624  01A394  EE20 F0FF          	lfsr	2,255
  3625  01A398                     clear_1:
  3626  01A398  6AEE               	clrf	postinc0,c
  3627  01A39A  50DD               	movf	postdec2,w,c
  3628  01A39C  50D9               	movf	fsr2l,w,c
  3629  01A39E  E1FC               	bnz	clear_1
  3630  01A3A0  50DA               	movf	fsr2h,w,c
  3631  01A3A2  E1FA               	bnz	clear_1
  3632                           
  3633                           ; Clear objects allocated to BANK3 (198 bytes)
  3634  01A3A4  EE00  F300         	lfsr	0,__pbssBANK3
  3635  01A3A8  0EC6               	movlw	198
  3636  01A3AA                     clear_2:
  3637  01A3AA  6AEE               	clrf	postinc0,c
  3638  01A3AC  06E8               	decf	wreg,f,c
  3639  01A3AE  E1FD               	bnz	clear_2
  3640                           
  3641                           ; Clear objects allocated to BANK2 (231 bytes)
  3642  01A3B0  EE00  F200         	lfsr	0,__pbssBANK2
  3643  01A3B4  0EE7               	movlw	231
  3644  01A3B6                     clear_3:
  3645  01A3B6  6AEE               	clrf	postinc0,c
  3646  01A3B8  06E8               	decf	wreg,f,c
  3647  01A3BA  E1FD               	bnz	clear_3
  3648                           
  3649                           ; Clear objects allocated to BANK1 (46 bytes)
  3650  01A3BC  EE00  F1CD         	lfsr	0,__pbssBANK1
  3651  01A3C0  0E2E               	movlw	46
  3652  01A3C2                     clear_4:
  3653  01A3C2  6AEE               	clrf	postinc0,c
  3654  01A3C4  06E8               	decf	wreg,f,c
  3655  01A3C6  E1FD               	bnz	clear_4
  3656                           
  3657                           ; Clear objects allocated to BANK0 (79 bytes)
  3658  01A3C8  EE00  F060         	lfsr	0,__pbssBANK0
  3659  01A3CC  0E4F               	movlw	79
  3660  01A3CE                     clear_5:
  3661  01A3CE  6AEE               	clrf	postinc0,c
  3662  01A3D0  06E8               	decf	wreg,f,c
  3663  01A3D2  E1FD               	bnz	clear_5
  3664                           
  3665                           ; Clear objects allocated to COMRAM (14 bytes)
  3666  01A3D4  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3667  01A3D8  0E0E               	movlw	14
  3668  01A3DA                     clear_6:
  3669  01A3DA  6AEE               	clrf	postinc0,c
  3670  01A3DC  06E8               	decf	wreg,f,c
  3671  01A3DE  E1FD               	bnz	clear_6
  3672                           
  3673                           ;
  3674                           ; Setup IVTBASE
  3675                           ;
  3676  01A3E0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3677  01A3E2  6ED5               	movwf	213,c
  3678  01A3E4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3679  01A3E6  6ED6               	movwf	214,c
  3680  01A3E8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3681  01A3EA  6ED7               	movwf	215,c
  3682  01A3EC                     end_of_initialization:
  3683                           	opt callstack 0
  3684  01A3EC                     __end_of__initialization:
  3685                           	opt callstack 0
  3686  01A3EC  0100               	movlb	0
  3687  01A3EE  EF22  F089         	goto	_main	;jump to C main() function
  3688                           
  3689                           	psect	bssCOMRAM
  3690  00003A                     __pbssCOMRAM:
  3691                           	opt callstack 0
  3692  00003A                     _width:
  3693                           	opt callstack 0
  3694  00003A                     	ds	2
  3695  00003C                     _prec:
  3696                           	opt callstack 0
  3697  00003C                     	ds	2
  3698  00003E                     _flags:
  3699                           	opt callstack 0
  3700  00003E                     	ds	2
  3701  000040                     calc_bsoc@log_update_wait:
  3702                           	opt callstack 0
  3703  000040                     	ds	1
  3704  000041                     check_day_time@day_delay:
  3705                           	opt callstack 0
  3706  000041                     	ds	1
  3707  000042                     dac_spi_control@S0:
  3708                           	opt callstack 0
  3709  000042                     	ds	1
  3710  000043                     dac_spi_control@init:
  3711                           	opt callstack 0
  3712  000043                     	ds	1
  3713  000044                     _uart2RxHead:
  3714                           	opt callstack 0
  3715  000044                     	ds	1
  3716  000045                     _uart2TxBufferRemaining:
  3717                           	opt callstack 0
  3718  000045                     	ds	1
  3719  000046                     _uart2TxTail:
  3720                           	opt callstack 0
  3721  000046                     	ds	1
  3722  000047                     _uart1RxHead:
  3723                           	opt callstack 0
  3724  000047                     	ds	1
  3725                           
  3726                           	psect	bssBANK0
  3727  000060                     __pbssBANK0:
  3728                           	opt callstack 0
  3729  000060                     fabsf@F463:
  3730                           	opt callstack 0
  3731  000060                     	ds	4
  3732  000064                     ___fpclassifyf@F463:
  3733                           	opt callstack 0
  3734  000064                     	ds	4
  3735  000068                     calc_ror_data@bcror:
  3736                           	opt callstack 0
  3737  000068                     	ds	4
  3738  00006C                     calc_ror_data@bvror:
  3739                           	opt callstack 0
  3740  00006C                     	ds	4
  3741  000070                     calc_model_data@bcror:
  3742                           	opt callstack 0
  3743  000070                     	ds	4
  3744  000074                     calc_model_data@bvror:
  3745                           	opt callstack 0
  3746  000074                     	ds	4
  3747  000078                     wdtdelay@dcount:
  3748                           	opt callstack 0
  3749  000078                     	ds	4
  3750  00007C                     _TMR3_InterruptHandler:
  3751                           	opt callstack 0
  3752  00007C                     	ds	3
  3753  00007F                     _TMR5_InterruptHandler:
  3754                           	opt callstack 0
  3755  00007F                     	ds	3
  3756  000082                     _TMR6_InterruptHandler:
  3757                           	opt callstack 0
  3758  000082                     	ds	3
  3759  000085                     _ADCC_ADTI_InterruptHandler:
  3760                           	opt callstack 0
  3761  000085                     	ds	3
  3762  000088                     _ADCC_ADI_InterruptHandler:
  3763                           	opt callstack 0
  3764  000088                     	ds	3
  3765  00008B                     _UART1_RxInterruptHandler:
  3766                           	opt callstack 0
  3767  00008B                     	ds	3
  3768  00008E                     _UART2_TxInterruptHandler:
  3769                           	opt callstack 0
  3770  00008E                     	ds	3
  3771  000091                     _UART2_RxInterruptHandler:
  3772                           	opt callstack 0
  3773  000091                     	ds	3
  3774  000094                     _INT1_InterruptHandler:
  3775                           	opt callstack 0
  3776  000094                     	ds	3
  3777  000097                     _INT0_InterruptHandler:
  3778                           	opt callstack 0
  3779  000097                     	ds	3
  3780  00009A                     _nout:
  3781                           	opt callstack 0
  3782  00009A                     	ds	2
  3783  00009C                     TMR3_ISR@CountCallBack:
  3784                           	opt callstack 0
  3785  00009C                     	ds	2
  3786  00009E                     _timer3ReloadVal:
  3787                           	opt callstack 0
  3788  00009E                     	ds	2
  3789  0000A0                     TMR5_ISR@CountCallBack:
  3790                           	opt callstack 0
  3791  0000A0                     	ds	2
  3792  0000A2                     _timer5ReloadVal:
  3793                           	opt callstack 0
  3794  0000A2                     	ds	2
  3795  0000A4                     esr_check@esr_state:
  3796                           	opt callstack 0
  3797  0000A4                     	ds	1
  3798  0000A5                     dac_spi_control@SB:
  3799                           	opt callstack 0
  3800  0000A5                     	ds	1
  3801  0000A6                     dac_spi_control@SC:
  3802                           	opt callstack 0
  3803  0000A6                     	ds	1
  3804  0000A7                     dac_spi_control@S2:
  3805                           	opt callstack 0
  3806  0000A7                     	ds	1
  3807  0000A8                     dac_spi_control@S1:
  3808                           	opt callstack 0
  3809  0000A8                     	ds	1
  3810  0000A9                     _mode_sw:
  3811                           	opt callstack 0
  3812  0000A9                     	ds	1
  3813  0000AA                     _uart2RxCount:
  3814                           	opt callstack 0
  3815  0000AA                     	ds	1
  3816  0000AB                     _uart2RxTail:
  3817                           	opt callstack 0
  3818  0000AB                     	ds	1
  3819  0000AC                     _uart2TxHead:
  3820                           	opt callstack 0
  3821  0000AC                     	ds	1
  3822  0000AD                     _uart1RxCount:
  3823                           	opt callstack 0
  3824  0000AD                     	ds	1
  3825  0000AE                     _uart1RxTail:
  3826                           	opt callstack 0
  3827  0000AE                     	ds	1
  3828                           
  3829                           	psect	dataBANK0
  3830  0000AF                     __pdataBANK0:
  3831                           	opt callstack 0
  3832  0000AF                     _R:
  3833                           	opt callstack 0
  3834  0000AF                     	ds	54
  3835                           
  3836                           	psect	bssBANK1
  3837  0001CD                     __pbssBANK1:
  3838                           	opt callstack 0
  3839  0001CD                     _spi_link:
  3840                           	opt callstack 0
  3841  0001CD                     	ds	12
  3842  0001D9                     _uart1RxBuffer:
  3843                           	opt callstack 0
  3844  0001D9                     	ds	8
  3845  0001E1                     spinners@s:
  3846                           	opt callstack 0
  3847  0001E1                     	ds	6
  3848  0001E7                     floorf@F524:
  3849                           	opt callstack 0
  3850  0001E7                     	ds	4
  3851  0001EB                     _utctime:
  3852                           	opt callstack 0
  3853  0001EB                     	ds	4
  3854  0001EF                     _P:
  3855                           	opt callstack 0
  3856  0001EF                     	ds	4
  3857  0001F3                     _seed:
  3858                           	opt callstack 0
  3859  0001F3                     	ds	8
  3860                           
  3861                           	psect	dataBANK1
  3862  000100                     __pdataBANK1:
  3863                           	opt callstack 0
  3864  000100                     stoa@F1166:
  3865                           	opt callstack 0
  3866  000100                     	ds	7
  3867  000107                     _V:
  3868                           	opt callstack 0
  3869  000107                     	ds	191
  3870  0001C6                     _H:
  3871                           	opt callstack 0
  3872  0001C6                     	ds	7
  3873                           
  3874                           	psect	bssBANK2
  3875  000200                     __pbssBANK2:
  3876                           	opt callstack 0
  3877  000200                     lp_filter@smooth:
  3878                           	opt callstack 0
  3879  000200                     	ds	84
  3880  000254                     _S:
  3881                           	opt callstack 0
  3882  000254                     	ds	41
  3883  00027D                     _tickCount:
  3884                           	opt callstack 0
  3885  00027D                     	ds	26
  3886  000297                     _dbuf:
  3887                           	opt callstack 0
  3888  000297                     	ds	80
  3889                           
  3890                           	psect	bssBANK3
  3891  000300                     __pbssBANK3:
  3892                           	opt callstack 0
  3893  000300                     _uart2TxBuffer:
  3894                           	opt callstack 0
  3895  000300                     	ds	64
  3896  000340                     _ring_buf2:
  3897                           	opt callstack 0
  3898  000340                     	ds	67
  3899  000383                     _ring_buf1:
  3900                           	opt callstack 0
  3901  000383                     	ds	67
  3902                           
  3903                           	psect	bssBANK4
  3904  000400                     __pbssBANK4:
  3905                           	opt callstack 0
  3906  000400                     _uart2RxBuffer:
  3907                           	opt callstack 0
  3908  000400                     	ds	255
  3909                           
  3910                           	psect	bssBIGRAM
  3911  00082A                     __pbssBIGRAM:
  3912                           	opt callstack 0
  3913  00082A                     _D:
  3914                           	opt callstack 0
  3915  00082A                     	ds	482
  3916                           
  3917                           	psect	dataBIGRAM
  3918  0004FF                     __pdataBIGRAM:
  3919                           	opt callstack 0
  3920  0004FF                     _port_data:
  3921                           	opt callstack 0
  3922  0004FF                     	ds	512
  3923  0006FF                     _C:
  3924                           	opt callstack 0
  3925  0006FF                     	ds	299
  3926                           
  3927                           	psect	cstackBANK0
  3928  0000E5                     __pcstackBANK0:
  3929                           	opt callstack 0
  3930  0000E5                     ??_TMR3_ISR:
  3931                           
  3932                           ; 1 bytes @ 0x0
  3933  0000E5                     	ds	25
  3934                           
  3935                           	psect	cstackCOMRAM
  3936  000021                     __pcstackCOMRAM:
  3937                           	opt callstack 0
  3938  000021                     ??_ADCC_ThresholdISR:
  3939  000021                     
  3940                           ; 1 bytes @ 0x0
  3941  000021                     	ds	5
  3942  000026                     ??_TMR6_ISR:
  3943                           
  3944                           ; 1 bytes @ 0x5
  3945  000026                     	ds	1
  3946  000027                     ??_INT1_ISR:
  3947  000027                     
  3948                           ; 1 bytes @ 0x6
  3949  000027                     	ds	4
  3950  00002B                     ??_TMR5_ISR:
  3951                           
  3952                           ; 1 bytes @ 0xA
  3953  00002B                     	ds	15
  3954                           
  3955 ;;
  3956 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3957 ;;
  3958 ;; *************** function _main *****************
  3959 ;; Defined at:
  3960 ;;		line 187 in file "main.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  esr_temp        4  [STACK] float 
  3965 ;;  i_esr           2  [STACK] unsigned short 
  3966 ;;  shape           1  [STACK] unsigned char 
  3967 ;;  inp_index       1  [STACK] unsigned char 
  3968 ;;  k               1  [STACK] unsigned char 
  3969 ;;  j               1  [STACK] unsigned char 
  3970 ;;  i               1  [STACK] unsigned char 
  3971 ;;  mode            1  [STACK] enum E17013
  3972 ;;  i_ror           1  [STACK] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1  [STACK] void 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels required when called:   29
  3988 ;; This function calls:
  3989 ;;		_SYSTEM_Initialize
  3990 ;;		_StartTimer
  3991 ;;		_TimerDone
  3992 ;;		_WaitMs
  3993 ;;		___fladd
  3994 ;;		___flge
  3995 ;;		___fltol
  3996 ;;		_calc_model_data
  3997 ;;		_calc_ror_data
  3998 ;;		_check_adc_scan
  3999 ;;		_check_enter_button
  4000 ;;		_check_help
  4001 ;;		_clear_adc_scan
  4002 ;;		_clear_hid_pflags
  4003 ;;		_conv_raw_result
  4004 ;;		_convert_adc_data
  4005 ;;		_eaDogM_WriteCommand
  4006 ;;		_esr_check
  4007 ;;		_fabsf
  4008 ;;		_get_raw_result
  4009 ;;		_get_switch
  4010 ;;		_get_vterm_ptr
  4011 ;;		_hid_display
  4012 ;;		_init_bsoc
  4013 ;;		_init_display
  4014 ;;		_init_port_dma
  4015 ;;		_lp_filter
  4016 ;;		_mode_lamp_dim
  4017 ;;		_set_dac
  4018 ;;		_set_dac_a
  4019 ;;		_set_dac_b
  4020 ;;		_set_display_info
  4021 ;;		_set_load_relay_one
  4022 ;;		_set_load_relay_two
  4023 ;;		_set_vterm
  4024 ;;		_spinners
  4025 ;;		_sprintf
  4026 ;;		_srand
  4027 ;;		_start_adc_scan
  4028 ;;		_start_switch_handler
  4029 ;;		_static_soc
  4030 ;;		_update_lcd
  4031 ;;		_wait_lcd_done
  4032 ;; This function is called by:
  4033 ;;		Startup code after reset
  4034 ;; This function uses a reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text0
  4038  011244                     __ptext0:
  4039                           	opt callstack 0
  4040  011244                     _main:
  4041                           	opt callstack 0
  4042                           
  4043                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4044  011244  0E11               	movlw	17
  4045  011246  26E1               	addwf	fsr1l,f,c
  4046  011248  0E00               	movlw	0
  4047  01124A  22E2               	addwfc	fsr1h,f,c
  4048                           
  4049                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4050                           ;stkvar	_inp_index @ sp[(-17)+11]
  4051                           
  4052                           ;incstack = 0
  4053  01124C  0EFA               	movlw	-6
  4054  01124E  6AE3               	clrf	plusw1,c
  4055                           
  4056                           ;stkvar	_i @ sp[(-17)+14]
  4057  011250  0EFD               	movlw	-3
  4058  011252  6AE3               	clrf	plusw1,c
  4059                           
  4060                           ;stkvar	_j @ sp[(-17)+13]
  4061  011254  0EFC               	movlw	-4
  4062  011256  6AE3               	clrf	plusw1,c
  4063  011258  2AE3               	incf	plusw1,f,c
  4064                           
  4065                           ;stkvar	_k @ sp[(-17)+12]
  4066  01125A  0EFB               	movlw	-5
  4067  01125C  6AE3               	clrf	plusw1,c
  4068  01125E  82E3               	bsf	plusw1,1,c
  4069                           
  4070                           ;main.c: 193:  SYSTEM_Initialize();
  4071  011260  ECF3  F0DB         	call	_SYSTEM_Initialize	;wreg free
  4072                           
  4073                           ; BSR set to: 60
  4074                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  4075  011264  8ED2               	bsf	210,7,c	;volatile
  4076                           
  4077                           ; BSR set to: 60
  4078                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  4079  011266  8CD2               	bsf	210,6,c	;volatile
  4080                           
  4081                           ; BSR set to: 60
  4082                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  4083  011268  0101               	movlb	1	; () banked
  4084  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4085                           
  4086                           ; BSR set to: 1
  4087                           ;main.c: 206:  WaitMs(300);
  4088  01126C  0E2C               	movlw	44
  4089  01126E  6EE6               	movwf	postinc1,c
  4090  011270  0E01               	movlw	1
  4091  011272  6EE6               	movwf	postinc1,c
  4092  011274  EC83  F0DE         	call	_WaitMs	;wreg free
  4093                           
  4094                           ;main.c: 207:  if (PORTBbits.RB0) {
  4095  011278  A0CB               	btfss	203,0,c	;volatile
  4096  01127A  D004               	goto	l13383
  4097                           
  4098                           ;main.c: 208:   mode = UI_STATE_HOST;
  4099                           ;stkvar	_mode @ sp[(-17)+15]
  4100  01127C  0EFE               	movlw	-2
  4101  01127E  6AE3               	clrf	plusw1,c
  4102  011280  2AE3               	incf	plusw1,f,c
  4103                           
  4104                           ;main.c: 209:  } else {
  4105  011282  D004               	goto	l13385
  4106  011284                     l13383:
  4107                           
  4108                           ;main.c: 210:   mode = UI_STATE_LOG;
  4109                           ;stkvar	_mode @ sp[(-17)+15]
  4110  011284  0EFE               	movlw	-2
  4111  011286  6AE3               	clrf	plusw1,c
  4112  011288  80E3               	bsf	plusw1,0,c
  4113  01128A  82E3               	bsf	plusw1,1,c	;indir
  4114  01128C                     l13385:
  4115                           
  4116                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  4117                           ;stkvar	_mode @ sp[(-17)+15]
  4118  01128C  0EFE               	movlw	-2
  4119  01128E  04E3               	decf	plusw1,w,c
  4120  011290  A4D8               	btfss	status,2,c
  4121  011292  D007               	goto	l1332
  4122                           
  4123                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  4124  011294  80BD               	bsf	189,0,c	;volatile
  4125                           
  4126                           ;main.c: 215:   V.mode_pwm = 70;
  4127  011296  0E00               	movlw	0
  4128  011298  0101               	movlb	1	; () banked
  4129  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4130  01129C  0E46               	movlw	70
  4131  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4132                           
  4133                           ;main.c: 216:  } else {
  4134  0112A0  D004               	goto	l13389
  4135  0112A2                     l1332:
  4136  0112A2  90BD               	bcf	189,0,c	;volatile
  4137                           
  4138                           ;main.c: 218:   V.mode_pwm = 0;
  4139  0112A4  0101               	movlb	1	; () banked
  4140  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4141  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4142  0112AA                     l13389:
  4143                           
  4144                           ; BSR set to: 1
  4145                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4146  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4147  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4148  0112B6  EC27  F0E2         	call	_mode_lamp_dim	;wreg free
  4149  0112BA  D325               	goto	l13509
  4150  0112BC                     l13391:
  4151                           
  4152                           ; BSR set to: 1
  4153                           ;main.c: 228:    init_port_dma();
  4154  0112BC  EC06  F0DF         	call	_init_port_dma	;wreg free
  4155                           
  4156                           ; BSR set to: 59
  4157                           ;main.c: 230:    init_display();
  4158  0112C0  ECA2  F0D0         	call	_init_display	;wreg free
  4159                           
  4160                           ; BSR set to: 61
  4161                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4162  0112C4  0E0C               	movlw	12
  4163  0112C6  6EE6               	movwf	postinc1,c
  4164  0112C8  EC93  F0E2         	call	_eaDogM_WriteCommand	;wreg free
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;main.c: 235:    set_load_relay_one(1);
  4168  0112CC  0E01               	movlw	1
  4169  0112CE  6EE6               	movwf	postinc1,c
  4170  0112D0  EC7B  F0E2         	call	_set_load_relay_one	;wreg free
  4171                           
  4172                           ;main.c: 236:    set_load_relay_two(1);
  4173  0112D4  0E01               	movlw	1
  4174  0112D6  6EE6               	movwf	postinc1,c
  4175  0112D8  EC73  F0E2         	call	_set_load_relay_two	;wreg free
  4176                           
  4177                           ;main.c: 238:    V.ui_state = mode;
  4178                           ;stkvar	_mode @ sp[(-17)+15]
  4179  0112DC  0EFE               	movlw	-2
  4180  0112DE  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4181                           
  4182                           ;main.c: 239:    srand(1957);
  4183  0112E4  0EA5               	movlw	165
  4184  0112E6  6EE6               	movwf	postinc1,c
  4185  0112E8  0E07               	movlw	7
  4186  0112EA  6EE6               	movwf	postinc1,c
  4187  0112EC  EC9E  F0DE         	call	_srand	;wreg free
  4188                           
  4189                           ; BSR set to: 1
  4190                           ;main.c: 240:    set_vterm(0);
  4191  0112F0  0E00               	movlw	0
  4192  0112F2  6EE6               	movwf	postinc1,c
  4193  0112F4  ECDF  F0E1         	call	_set_vterm	;wreg free
  4194                           
  4195                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4196  0112F8  0E1E               	movlw	low STR_1
  4197  0112FA  6EE6               	movwf	postinc1,c
  4198  0112FC  0EFF               	movlw	high STR_1
  4199  0112FE  6EE6               	movwf	postinc1,c
  4200  011300  0E00               	movlw	0
  4201  011302  6EE6               	movwf	postinc1,c
  4202  011304  0E00               	movlw	0
  4203  011306  6EE6               	movwf	postinc1,c
  4204  011308  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4205  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4206  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4207  011318  0E04               	movlw	4
  4208  01131A  6EE6               	movwf	postinc1,c
  4209  01131C  ECA2  F0CF         	call	_sprintf	;wreg free
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.13");
  4213  011320  0ED2               	movlw	low STR_3
  4214  011322  6EE6               	movwf	postinc1,c
  4215  011324  0EFF               	movlw	high STR_3
  4216  011326  6EE6               	movwf	postinc1,c
  4217  011328  0E09               	movlw	low STR_2
  4218  01132A  6EE6               	movwf	postinc1,c
  4219  01132C  0EFF               	movlw	high STR_2
  4220  01132E  6EE6               	movwf	postinc1,c
  4221  011330  0E00               	movlw	0
  4222  011332  6EE6               	movwf	postinc1,c
  4223  011334  0E01               	movlw	1
  4224  011336  6EE6               	movwf	postinc1,c
  4225  011338  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4226  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4227  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4228  011348  0E06               	movlw	6
  4229  01134A  6EE6               	movwf	postinc1,c
  4230  01134C  ECA2  F0CF         	call	_sprintf	;wreg free
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4234  011350  0ECA               	movlw	low STR_4
  4235  011352  6EE6               	movwf	postinc1,c
  4236  011354  0EFE               	movlw	high STR_4
  4237  011356  6EE6               	movwf	postinc1,c
  4238  011358  0E00               	movlw	0
  4239  01135A  6EE6               	movwf	postinc1,c
  4240  01135C  0E02               	movlw	2
  4241  01135E  6EE6               	movwf	postinc1,c
  4242  011360  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4243  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4244  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4245  011370  0E04               	movlw	4
  4246  011372  6EE6               	movwf	postinc1,c
  4247  011374  ECA2  F0CF         	call	_sprintf	;wreg free
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4251  011378  0EA0               	movlw	low STR_5
  4252  01137A  6EE6               	movwf	postinc1,c
  4253  01137C  0EFE               	movlw	high STR_5
  4254  01137E  6EE6               	movwf	postinc1,c
  4255  011380  0E02               	movlw	2
  4256  011382  6EE6               	movwf	postinc1,c
  4257  011384  0E00               	movlw	0
  4258  011386  6EE6               	movwf	postinc1,c
  4259  011388  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4260  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4261  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4262  011398  0E04               	movlw	4
  4263  01139A  6EE6               	movwf	postinc1,c
  4264  01139C  ECA2  F0CF         	call	_sprintf	;wreg free
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4268  0113A0  0EA0               	movlw	low STR_5
  4269  0113A2  6EE6               	movwf	postinc1,c
  4270  0113A4  0EFE               	movlw	high STR_5
  4271  0113A6  6EE6               	movwf	postinc1,c
  4272  0113A8  0E02               	movlw	2
  4273  0113AA  6EE6               	movwf	postinc1,c
  4274  0113AC  0E01               	movlw	1
  4275  0113AE  6EE6               	movwf	postinc1,c
  4276  0113B0  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4277  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4278  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4279  0113C0  0E04               	movlw	4
  4280  0113C2  6EE6               	movwf	postinc1,c
  4281  0113C4  ECA2  F0CF         	call	_sprintf	;wreg free
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4285  0113C8  0EA0               	movlw	low STR_5
  4286  0113CA  6EE6               	movwf	postinc1,c
  4287  0113CC  0EFE               	movlw	high STR_5
  4288  0113CE  6EE6               	movwf	postinc1,c
  4289  0113D0  0E02               	movlw	2
  4290  0113D2  6EE6               	movwf	postinc1,c
  4291  0113D4  0E02               	movlw	2
  4292  0113D6  6EE6               	movwf	postinc1,c
  4293  0113D8  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4294  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4295  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4296  0113E8  0E04               	movlw	4
  4297  0113EA  6EE6               	movwf	postinc1,c
  4298  0113EC  ECA2  F0CF         	call	_sprintf	;wreg free
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;main.c: 247:    update_lcd(0);
  4302  0113F0  0E00               	movlw	0
  4303  0113F2  6EE6               	movwf	postinc1,c
  4304  0113F4  EC1A  F0CF         	call	_update_lcd	;wreg free
  4305                           
  4306                           ;main.c: 248:    WaitMs(1000);
  4307  0113F8  0EE8               	movlw	232
  4308  0113FA  6EE6               	movwf	postinc1,c
  4309  0113FC  0E03               	movlw	3
  4310  0113FE  6EE6               	movwf	postinc1,c
  4311  011400  EC83  F0DE         	call	_WaitMs	;wreg free
  4312                           
  4313                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4314  011404  0EFA               	movlw	250
  4315  011406  6EE6               	movwf	postinc1,c
  4316  011408  0E00               	movlw	0
  4317  01140A  6EE6               	movwf	postinc1,c
  4318  01140C  0E0A               	movlw	10
  4319  01140E  6EE6               	movwf	postinc1,c
  4320  011410  EC94  F0DD         	call	_StartTimer	;wreg free
  4321                           
  4322                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4323  011414  0EC8               	movlw	200
  4324  011416  6EE6               	movwf	postinc1,c
  4325  011418  0E00               	movlw	0
  4326  01141A  6EE6               	movwf	postinc1,c
  4327  01141C  0E01               	movlw	1
  4328  01141E  6EE6               	movwf	postinc1,c
  4329  011420  EC94  F0DD         	call	_StartTimer	;wreg free
  4330                           
  4331                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4332  011424  0EB8               	movlw	184
  4333  011426  6EE6               	movwf	postinc1,c
  4334  011428  0E0B               	movlw	11
  4335  01142A  6EE6               	movwf	postinc1,c
  4336  01142C  0E07               	movlw	7
  4337  01142E  6EE6               	movwf	postinc1,c
  4338  011430  EC94  F0DD         	call	_StartTimer	;wreg free
  4339                           
  4340                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4341  011434  0EDC               	movlw	220
  4342  011436  6EE6               	movwf	postinc1,c
  4343  011438  0E05               	movlw	5
  4344  01143A  6EE6               	movwf	postinc1,c
  4345  01143C  0E0B               	movlw	11
  4346  01143E  6EE6               	movwf	postinc1,c
  4347  011440  EC94  F0DD         	call	_StartTimer	;wreg free
  4348                           
  4349                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4350  011444  0EB8               	movlw	184
  4351  011446  6EE6               	movwf	postinc1,c
  4352  011448  0E0B               	movlw	11
  4353  01144A  6EE6               	movwf	postinc1,c
  4354  01144C  0E09               	movlw	9
  4355  01144E  6EE6               	movwf	postinc1,c
  4356  011450  EC94  F0DD         	call	_StartTimer	;wreg free
  4357                           
  4358                           ;main.c: 255:    start_adc_scan();
  4359  011454  EC0A  F0DA         	call	_start_adc_scan	;wreg free
  4360                           
  4361                           ;main.c: 256:    start_switch_handler();
  4362  011458  ECA1  F0E1         	call	_start_switch_handler	;wreg free
  4363                           
  4364                           ; BSR set to: 57
  4365                           ;main.c: 257:    WaitMs(1000);
  4366  01145C  0EE8               	movlw	232
  4367  01145E  6EE6               	movwf	postinc1,c
  4368  011460  0E03               	movlw	3
  4369  011462  6EE6               	movwf	postinc1,c
  4370  011464  EC83  F0DE         	call	_WaitMs	;wreg free
  4371                           
  4372                           ;main.c: 262:    i_ror = 1;
  4373                           ;stkvar	_i_ror @ sp[(-17)+16]
  4374  011468  0EFF               	movlw	-1
  4375  01146A  6AE3               	clrf	plusw1,c
  4376  01146C  2AE3               	incf	plusw1,f,c
  4377  01146E                     l13441:
  4378                           
  4379                           ;main.c: 264:     calc_ror_data();
  4380  01146E  ECCE  F0C6         	call	_calc_ror_data	;wreg free
  4381                           
  4382                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4383  011472  0E00               	movlw	0
  4384  011474  6EE6               	movwf	postinc1,c
  4385  011476  0E04               	movlw	4
  4386  011478  6EE6               	movwf	postinc1,c
  4387  01147A  EC95  F0A9         	call	_conv_raw_result	;wreg free
  4388  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4389  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4390  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4391  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4392  011496  0EB5               	movlw	low STR_8
  4393  011498  6EE6               	movwf	postinc1,c
  4394  01149A  0EFE               	movlw	high STR_8
  4395  01149C  6EE6               	movwf	postinc1,c
  4396  01149E  0E00               	movlw	0
  4397  0114A0  6EE6               	movwf	postinc1,c
  4398  0114A2  0E01               	movlw	1
  4399  0114A4  6EE6               	movwf	postinc1,c
  4400  0114A6  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4401  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4402  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4403  0114B6  0E08               	movlw	8
  4404  0114B8  6EE6               	movwf	postinc1,c
  4405  0114BA  ECA2  F0CF         	call	_sprintf	;wreg free
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4409  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4410  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4411  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4412  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4413  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4414                           
  4415                           ;stkvar	_i_ror @ sp[(-21)+16]
  4416  0114DA  0EFB               	movlw	-5
  4417  0114DC  50E3               	movf	plusw1,w,c
  4418  0114DE  6EE6               	movwf	postinc1,c
  4419  0114E0  0E00               	movlw	0
  4420  0114E2  6EE6               	movwf	postinc1,c
  4421  0114E4  0E00               	movlw	0
  4422  0114E6  6EE6               	movwf	postinc1,c
  4423  0114E8  0E05               	movlw	5
  4424  0114EA  6EE6               	movwf	postinc1,c
  4425  0114EC  EC27  F0D0         	call	_spinners	;wreg free
  4426  0114F0  5001               	movf	btemp^0,w,c
  4427  0114F2  6EE6               	movwf	postinc1,c
  4428  0114F4  0E00               	movlw	0
  4429  0114F6  6EE6               	movwf	postinc1,c
  4430  0114F8  0E9B               	movlw	low STR_9
  4431  0114FA  6EE6               	movwf	postinc1,c
  4432  0114FC  0EFC               	movlw	high STR_9
  4433  0114FE  6EE6               	movwf	postinc1,c
  4434  011500  0E00               	movlw	0
  4435  011502  6EE6               	movwf	postinc1,c
  4436  011504  0E02               	movlw	2
  4437  011506  6EE6               	movwf	postinc1,c
  4438  011508  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4439  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4440  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4441  011518  0E0C               	movlw	12
  4442  01151A  6EE6               	movwf	postinc1,c
  4443  01151C  ECA2  F0CF         	call	_sprintf	;wreg free
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;main.c: 267:     update_lcd(0);
  4447  011520  0E00               	movlw	0
  4448  011522  6EE6               	movwf	postinc1,c
  4449  011524  EC1A  F0CF         	call	_update_lcd	;wreg free
  4450                           
  4451                           ;main.c: 268:     clear_adc_scan();
  4452  011528  ECE7  F0E2         	call	_clear_adc_scan	;wreg free
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;main.c: 269:     start_adc_scan();
  4456  01152C  EC0A  F0DA         	call	_start_adc_scan	;wreg free
  4457                           
  4458                           ;main.c: 270:     WaitMs(2000);
  4459  011530  0ED0               	movlw	208
  4460  011532  6EE6               	movwf	postinc1,c
  4461  011534  0E07               	movlw	7
  4462  011536  6EE6               	movwf	postinc1,c
  4463  011538  EC83  F0DE         	call	_WaitMs	;wreg free
  4464                           
  4465                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4466                           ;stkvar	_i_ror @ sp[(-17)+16]
  4467  01153C  0EFF               	movlw	-1
  4468  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4469  011544  2A0C               	incf	(btemp+11)^0,f,c
  4470  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4471  01154C  060C               	decf	(btemp+11)^0,f,c
  4472  01154E  0E1E               	movlw	30
  4473  011550  600C               	cpfslt	(btemp+11)^0,c
  4474  011552  D01A               	goto	u12800
  4475  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4476  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4477  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4478  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4479  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4480  011570  0E42               	movlw	66
  4481  011572  6EE6               	movwf	postinc1,c
  4482  011574  0E60               	movlw	96
  4483  011576  6EE6               	movwf	postinc1,c
  4484  011578  0E65               	movlw	101
  4485  01157A  6EE6               	movwf	postinc1,c
  4486  01157C  0E3C               	movlw	60
  4487  01157E  6EE6               	movwf	postinc1,c
  4488  011580  EC0A  F0C9         	call	___flge	;wreg free
  4489  011584  A001               	btfss	btemp& (0+255),0,c
  4490  011586  D773               	goto	l13441
  4491  011588                     u12800:
  4492                           
  4493                           ;main.c: 275:    static_soc();
  4494  011588  ECCE  F0DA         	call	_static_soc	;wreg free
  4495                           
  4496                           ;main.c: 276:    init_bsoc();
  4497  01158C  EC09  F0BE         	call	_init_bsoc	;wreg free
  4498                           
  4499                           ;main.c: 277:    set_load_relay_one(0);
  4500  011590  0E00               	movlw	0
  4501  011592  6EE6               	movwf	postinc1,c
  4502  011594  EC7B  F0E2         	call	_set_load_relay_one	;wreg free
  4503                           
  4504                           ;main.c: 278:    set_load_relay_two(0);
  4505  011598  0E00               	movlw	0
  4506  01159A  6EE6               	movwf	postinc1,c
  4507  01159C  EC73  F0E2         	call	_set_load_relay_two	;wreg free
  4508                           
  4509                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4510  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4511  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4512  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4513  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4514  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4515  0115BC  0E56               	movlw	low STR_10
  4516  0115BE  6EE6               	movwf	postinc1,c
  4517  0115C0  0EFD               	movlw	high STR_10
  4518  0115C2  6EE6               	movwf	postinc1,c
  4519  0115C4  0E00               	movlw	0
  4520  0115C6  6EE6               	movwf	postinc1,c
  4521  0115C8  0E00               	movlw	0
  4522  0115CA  6EE6               	movwf	postinc1,c
  4523  0115CC  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4524  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4525  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4526  0115DC  0E06               	movlw	6
  4527  0115DE  6EE6               	movwf	postinc1,c
  4528  0115E0  ECA2  F0CF         	call	_sprintf	;wreg free
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4532  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4533  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4534  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4535  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4536  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4537  011600  0E32               	movlw	low STR_11
  4538  011602  6EE6               	movwf	postinc1,c
  4539  011604  0EFE               	movlw	high STR_11
  4540  011606  6EE6               	movwf	postinc1,c
  4541  011608  0E00               	movlw	0
  4542  01160A  6EE6               	movwf	postinc1,c
  4543  01160C  0E01               	movlw	1
  4544  01160E  6EE6               	movwf	postinc1,c
  4545  011610  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4546  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4547  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4548  011620  0E08               	movlw	8
  4549  011622  6EE6               	movwf	postinc1,c
  4550  011624  ECA2  F0CF         	call	_sprintf	;wreg free
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;main.c: 281:    update_lcd(0);
  4554  011628  0E00               	movlw	0
  4555  01162A  6EE6               	movwf	postinc1,c
  4556  01162C  EC1A  F0CF         	call	_update_lcd	;wreg free
  4557                           
  4558                           ;main.c: 282:    WaitMs(2000);
  4559  011630  0ED0               	movlw	208
  4560  011632  6EE6               	movwf	postinc1,c
  4561  011634  0E07               	movlw	7
  4562  011636  6EE6               	movwf	postinc1,c
  4563  011638  EC83  F0DE         	call	_WaitMs	;wreg free
  4564                           
  4565                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4566  01163C  0EDF               	movlw	low STR_12
  4567  01163E  6EE6               	movwf	postinc1,c
  4568  011640  0EFE               	movlw	high STR_12
  4569  011642  6EE6               	movwf	postinc1,c
  4570  011644  0E00               	movlw	0
  4571  011646  6EE6               	movwf	postinc1,c
  4572  011648  0E00               	movlw	0
  4573  01164A  6EE6               	movwf	postinc1,c
  4574  01164C  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4575  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4576  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4577  01165C  0E04               	movlw	4
  4578  01165E  6EE6               	movwf	postinc1,c
  4579  011660  ECA2  F0CF         	call	_sprintf	;wreg free
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4583  011664  0EF4               	movlw	low STR_13
  4584  011666  6EE6               	movwf	postinc1,c
  4585  011668  0EFE               	movlw	high STR_13
  4586  01166A  6EE6               	movwf	postinc1,c
  4587  01166C  0E00               	movlw	0
  4588  01166E  6EE6               	movwf	postinc1,c
  4589  011670  0E01               	movlw	1
  4590  011672  6EE6               	movwf	postinc1,c
  4591  011674  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4592  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4593  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4594  011684  0E04               	movlw	4
  4595  011686  6EE6               	movwf	postinc1,c
  4596  011688  ECA2  F0CF         	call	_sprintf	;wreg free
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4600  01168C  0E48               	movlw	low STR_14
  4601  01168E  6EE6               	movwf	postinc1,c
  4602  011690  0EFF               	movlw	high STR_14
  4603  011692  6EE6               	movwf	postinc1,c
  4604  011694  0E00               	movlw	0
  4605  011696  6EE6               	movwf	postinc1,c
  4606  011698  0E02               	movlw	2
  4607  01169A  6EE6               	movwf	postinc1,c
  4608  01169C  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4609  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4610  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4611  0116AC  0E04               	movlw	4
  4612  0116AE  6EE6               	movwf	postinc1,c
  4613  0116B0  ECA2  F0CF         	call	_sprintf	;wreg free
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;main.c: 286:    update_lcd(0);
  4617  0116B4  0E00               	movlw	0
  4618  0116B6  6EE6               	movwf	postinc1,c
  4619  0116B8  EC1A  F0CF         	call	_update_lcd	;wreg free
  4620                           
  4621                           ;main.c: 287:    uint16_t i_esr = 1;
  4622  0116BC  0E01               	movlw	1
  4623  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4624  0116C0  0E00               	movlw	0
  4625  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4626                           
  4627                           ;stkvar	_i_esr @ sp[(-17)+8]
  4628  0116C4  0EF7               	movlw	-9
  4629  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4630  0116CC  0EF8               	movlw	-8
  4631  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4632                           
  4633                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4634  0116D4  D06D               	goto	l13499
  4635  0116D6                     l13487:
  4636                           
  4637                           ;main.c: 291:     WaitMs(110);
  4638  0116D6  0E6E               	movlw	110
  4639  0116D8  6EE6               	movwf	postinc1,c
  4640  0116DA  0E00               	movlw	0
  4641  0116DC  6EE6               	movwf	postinc1,c
  4642  0116DE  EC83  F0DE         	call	_WaitMs	;wreg free
  4643                           
  4644                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4645                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4646  0116E2  0EF3               	movlw	-13
  4647  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4648  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4649  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4650  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4651  0116FC  ECA6  F0D4         	call	_fabsf	;wreg free
  4652  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4653  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4654  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4655  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4656  011718  EC51  F0C8         	call	___fltol	;wreg free
  4657  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4658                           
  4659                           ;stkvar	_shape @ sp[(-17)+10]
  4660  011722  0EF9               	movlw	-7
  4661  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4662                           
  4663                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4664  01172A  0E00               	movlw	0
  4665  01172C  6EE6               	movwf	postinc1,c
  4666                           
  4667                           ;stkvar	_shape @ sp[(-18)+10]
  4668  01172E  0EF8               	movlw	-8
  4669  011730  50E3               	movf	plusw1,w,c
  4670  011732  6EE6               	movwf	postinc1,c
  4671  011734  EC27  F0D0         	call	_spinners	;wreg free
  4672  011738  5001               	movf	btemp^0,w,c
  4673  01173A  6EE6               	movwf	postinc1,c
  4674  01173C  0E00               	movlw	0
  4675  01173E  6EE6               	movwf	postinc1,c
  4676  011740  0E00               	movlw	0
  4677  011742  6EE6               	movwf	postinc1,c
  4678  011744  0E00               	movlw	0
  4679  011746  6EE6               	movwf	postinc1,c
  4680  011748  EC27  F0D0         	call	_spinners	;wreg free
  4681  01174C  5001               	movf	btemp^0,w,c
  4682  01174E  6EE6               	movwf	postinc1,c
  4683  011750  0E00               	movlw	0
  4684  011752  6EE6               	movwf	postinc1,c
  4685  011754  0E33               	movlw	low STR_15
  4686  011756  6EE6               	movwf	postinc1,c
  4687  011758  0EFF               	movlw	high STR_15
  4688  01175A  6EE6               	movwf	postinc1,c
  4689  01175C  0E00               	movlw	0
  4690  01175E  6EE6               	movwf	postinc1,c
  4691  011760  0E02               	movlw	2
  4692  011762  6EE6               	movwf	postinc1,c
  4693  011764  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4694  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4695  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4696  011774  0E08               	movlw	8
  4697  011776  6EE6               	movwf	postinc1,c
  4698  011778  ECA2  F0CF         	call	_sprintf	;wreg free
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;main.c: 294:     update_lcd(0);
  4702  01177C  0E00               	movlw	0
  4703  01177E  6EE6               	movwf	postinc1,c
  4704  011780  EC1A  F0CF         	call	_update_lcd	;wreg free
  4705                           
  4706                           ;main.c: 296:     if (i_esr++ > 512)
  4707                           ;stkvar	_i_esr @ sp[(-17)+8]
  4708  011784  50E1               	movf	fsr1l,w,c
  4709  011786  0FF7               	addlw	-9
  4710  011788  6ED9               	movwf	fsr2l,c
  4711  01178A  50E2               	movf	fsr1h,w,c
  4712  01178C  6EDA               	movwf	fsr2h,c
  4713  01178E  0EFF               	movlw	255
  4714  011790  22DA               	addwfc	fsr2h,f,c
  4715  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4716  011798  0E01               	movlw	1
  4717  01179A  26DE               	addwf	postinc2,f,c
  4718  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4719  0117A2  0E00               	movlw	0
  4720  0117A4  22DD               	addwfc	postdec2,f,c
  4721  0117A6  040B               	decf	(btemp+10)^0,w,c
  4722  0117A8  0E02               	movlw	2
  4723  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4724  0117AC  B0D8               	btfsc	status,0,c
  4725  0117AE  D017               	goto	u12820
  4726  0117B0                     l13499:
  4727                           
  4728                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4729  0117B0  0E00               	movlw	0
  4730  0117B2  6EE6               	movwf	postinc1,c
  4731  0117B4  ECC4  F0B8         	call	_esr_check	;wreg free
  4732                           
  4733                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4734  0117B8  0EF3               	movlw	-13
  4735  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4736  0117C0  0EF4               	movlw	-12
  4737  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4738  0117C8  0EF5               	movlw	-11
  4739  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4740  0117D0  0EF6               	movlw	-10
  4741  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4742  0117D8  0EF6               	movlw	-10
  4743  0117DA  BEE3               	btfsc	plusw1,7,c
  4744  0117DC  D77C               	goto	l13487
  4745  0117DE                     u12820:
  4746                           
  4747                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4748  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4749  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4750  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4751  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4752  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4753  0117FA  0E40               	movlw	low STR_16
  4754  0117FC  6EE6               	movwf	postinc1,c
  4755  0117FE  0EFD               	movlw	high STR_16
  4756  011800  6EE6               	movwf	postinc1,c
  4757  011802  0E00               	movlw	0
  4758  011804  6EE6               	movwf	postinc1,c
  4759  011806  0E00               	movlw	0
  4760  011808  6EE6               	movwf	postinc1,c
  4761  01180A  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4762  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4763  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4764  01181A  0E08               	movlw	8
  4765  01181C  6EE6               	movwf	postinc1,c
  4766  01181E  ECA2  F0CF         	call	_sprintf	;wreg free
  4767                           
  4768                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4769  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4770  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4771  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4772  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4773  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4774  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4775  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4776  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4777  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4778  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4779  01185A  0E67               	movlw	low STR_17
  4780  01185C  6EE6               	movwf	postinc1,c
  4781  01185E  0EFC               	movlw	high STR_17
  4782  011860  6EE6               	movwf	postinc1,c
  4783  011862  0E00               	movlw	0
  4784  011864  6EE6               	movwf	postinc1,c
  4785  011866  0E01               	movlw	1
  4786  011868  6EE6               	movwf	postinc1,c
  4787  01186A  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4788  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4789  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4790  01187A  0E0C               	movlw	12
  4791  01187C  6EE6               	movwf	postinc1,c
  4792  01187E  ECA2  F0CF         	call	_sprintf	;wreg free
  4793                           
  4794                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4795  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4796  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4797  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4798  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4799  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4800  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4801  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4802  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4803  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4804  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4805  0118BA  0E81               	movlw	low STR_18
  4806  0118BC  6EE6               	movwf	postinc1,c
  4807  0118BE  0EFC               	movlw	high STR_18
  4808  0118C0  6EE6               	movwf	postinc1,c
  4809  0118C2  0E00               	movlw	0
  4810  0118C4  6EE6               	movwf	postinc1,c
  4811  0118C6  0E02               	movlw	2
  4812  0118C8  6EE6               	movwf	postinc1,c
  4813  0118CA  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  4814  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4815  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4816  0118DA  0E0C               	movlw	12
  4817  0118DC  6EE6               	movwf	postinc1,c
  4818  0118DE  ECA2  F0CF         	call	_sprintf	;wreg free
  4819                           
  4820                           ;main.c: 302:    update_lcd(0);
  4821  0118E2  0E00               	movlw	0
  4822  0118E4  6EE6               	movwf	postinc1,c
  4823  0118E6  EC1A  F0CF         	call	_update_lcd	;wreg free
  4824                           
  4825                           ;main.c: 303:    WaitMs(5000);
  4826  0118EA  0E88               	movlw	136
  4827  0118EC  6EE6               	movwf	postinc1,c
  4828  0118EE  0E13               	movlw	19
  4829  0118F0  6EE6               	movwf	postinc1,c
  4830  0118F2  EC83  F0DE         	call	_WaitMs	;wreg free
  4831                           
  4832                           ;main.c: 304:    V.system_stable = 1;
  4833  0118F6  0E01               	movlw	1
  4834  0118F8  0101               	movlb	1	; () banked
  4835  0118FA  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4836                           
  4837                           ;main.c: 305:    break;
  4838  0118FC  D01B               	goto	l13511
  4839  0118FE                     l1348:
  4840                           
  4841                           ; BSR set to: 1
  4842                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4843  0118FE  81F0               	bsf	(_P+1)& (0+255),0,b	;volatile
  4844                           
  4845                           ;main.c: 312:    break;
  4846  011900  D019               	goto	l13511
  4847  011902                     l1350:
  4848                           
  4849                           ; BSR set to: 1
  4850                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4851  011902  6B07               	clrf	_V& (0+255),b	;volatile
  4852                           
  4853                           ;main.c: 316:    break;
  4854  011904  D017               	goto	l13511
  4855  011906                     l13509:
  4856  011906  0101               	movlb	1	; () banked
  4857  011908  5107               	movf	_V& (0+255),w,b	;volatile
  4858  01190A  6E0B               	movwf	(btemp+10)^0,c
  4859  01190C  6A0C               	clrf	(btemp+11)^0,c
  4860                           
  4861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4862                           ; Switch size 1, requested type "simple"
  4863                           ; Number of cases is 1, Range of values is 0 to 0
  4864                           ; switch strategies available:
  4865                           ; Name         Instructions Cycles
  4866                           ; simple_byte            4     3 (average)
  4867                           ;	Chosen strategy is simple_byte
  4868  01190E  500C               	movf	(btemp+11)^0,w,c
  4869  011910  0A00               	xorlw	0	; case 0
  4870  011912  A4D8               	btfss	status,2,c
  4871  011914  D7F6               	goto	l1350
  4872                           
  4873                           ; BSR set to: 1
  4874                           ; Switch size 1, requested type "simple"
  4875                           ; Number of cases is 5, Range of values is 0 to 5
  4876                           ; switch strategies available:
  4877                           ; Name         Instructions Cycles
  4878                           ; simple_byte           16     9 (average)
  4879                           ;	Chosen strategy is simple_byte
  4880  011916  500B               	movf	(btemp+10)^0,w,c
  4881  011918  0A00               	xorlw	0	; case 0
  4882  01191A  B4D8               	btfsc	status,2,c
  4883  01191C  D4CF               	goto	l13391
  4884  01191E  0A01               	xorlw	1	; case 1
  4885  011920  B4D8               	btfsc	status,2,c
  4886  011922  D008               	goto	l13511
  4887  011924  0A02               	xorlw	2	; case 3
  4888  011926  B4D8               	btfsc	status,2,c
  4889  011928  D005               	goto	l13511
  4890  01192A  0A07               	xorlw	7	; case 4
  4891  01192C  B4D8               	btfsc	status,2,c
  4892  01192E  D7E7               	goto	l1348
  4893  011930  0A01               	xorlw	1	; case 5
  4894  011932  D7E7               	goto	l1350
  4895  011934                     l13511:
  4896                           
  4897                           ; BSR set to: 1
  4898                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4899  011934  0E01               	movlw	1
  4900  011936  6EE6               	movwf	postinc1,c
  4901  011938  ECE9  F0DF         	call	_TimerDone	;wreg free
  4902  01193C  5001               	movf	btemp^0,w,c
  4903  01193E  B4D8               	btfsc	status,2,c
  4904  011940  D013               	goto	l13523
  4905  011942  ECD7  F0E2         	call	_check_adc_scan	;wreg free
  4906  011946  5001               	movf	btemp^0,w,c
  4907  011948  B4D8               	btfsc	status,2,c
  4908  01194A  D00E               	goto	l13523
  4909                           
  4910                           ;main.c: 323:    convert_adc_data();
  4911  01194C  ECF2  F0D3         	call	_convert_adc_data	;wreg free
  4912                           
  4913                           ;main.c: 327:    clear_adc_scan();
  4914  011950  ECE7  F0E2         	call	_clear_adc_scan	;wreg free
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;main.c: 328:    start_adc_scan();
  4918  011954  EC0A  F0DA         	call	_start_adc_scan	;wreg free
  4919                           
  4920                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4921  011958  0EC8               	movlw	200
  4922  01195A  6EE6               	movwf	postinc1,c
  4923  01195C  0E00               	movlw	0
  4924  01195E  6EE6               	movwf	postinc1,c
  4925  011960  0E01               	movlw	1
  4926  011962  6EE6               	movwf	postinc1,c
  4927  011964  EC94  F0DD         	call	_StartTimer	;wreg free
  4928  011968                     l13523:
  4929                           
  4930                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4931                           
  4932                           ;main.c: 332:   if (V.ticks) {
  4933  011968  0E0A               	movlw	10
  4934  01196A  6EE6               	movwf	postinc1,c
  4935  01196C  ECE9  F0DF         	call	_TimerDone	;wreg free
  4936  011970  5001               	movf	btemp^0,w,c
  4937  011972  B4D8               	btfsc	status,2,c
  4938  011974  EF69  F091         	goto	l13607
  4939                           
  4940                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4941  011978  0E09               	movlw	9
  4942  01197A  6EE6               	movwf	postinc1,c
  4943  01197C  ECE9  F0DF         	call	_TimerDone	;wreg free
  4944  011980  5001               	movf	btemp^0,w,c
  4945  011982  B4D8               	btfsc	status,2,c
  4946  011984  D004               	goto	l13531
  4947                           
  4948                           ;main.c: 338:     set_display_info(DIS_STR);
  4949  011986  0E00               	movlw	0
  4950  011988  6EE6               	movwf	postinc1,c
  4951  01198A  ECEE  F0E1         	call	_set_display_info	;wreg free
  4952  01198E                     l13531:
  4953                           
  4954                           ;main.c: 340:    calc_model_data();
  4955  01198E  EC5F  F0AE         	call	_calc_model_data	;wreg free
  4956                           
  4957                           ; BSR set to: 57
  4958                           ;main.c: 347:     hid_display(&H);
  4959                           
  4960                           ;main.c: 342:    if (0) {
  4961  011992  0EC6               	movlw	low _H
  4962  011994  6EE6               	movwf	postinc1,c
  4963  011996  0E01               	movlw	high _H
  4964  011998  6EE6               	movwf	postinc1,c
  4965  01199A  EC67  F0C3         	call	_hid_display	;wreg free
  4966                           
  4967                           ;main.c: 348:     switch (H.hid_display) {
  4968  01199E  EFFF  F090         	goto	l13579
  4969  0119A2                     l1358:
  4970                           
  4971                           ; BSR set to: 1
  4972                           ;main.c: 350:      V.calib = 0;
  4973  0119A2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4974                           
  4975                           ; BSR set to: 1
  4976                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4977  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4978  0119A8  50DF               	movf	indf2,w,c
  4979  0119AA  A4D8               	btfss	status,2,c
  4980  0119AC  D002               	goto	l13541
  4981                           
  4982                           ; BSR set to: 1
  4983  0119AE  0E20               	movlw	32
  4984  0119B0  D001               	goto	L1
  4985  0119B2                     l13541:
  4986                           
  4987                           ; BSR set to: 1
  4988  0119B2  0E44               	movlw	68
  4989  0119B4                     L1:
  4990  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4991  0119B6  0E00               	movlw	0
  4992  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4993                           
  4994                           ;stkvar	_main$3770 @ sp[(-17)+2]
  4995  0119BA  0EF1               	movlw	-15
  4996  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4997  0119C2  0EF2               	movlw	-14
  4998  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4999                           
  5000                           ; BSR set to: 1
  5001  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  5002  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5003  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5004  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5005  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  5006                           
  5007                           ;stkvar	_main$3770 @ sp[(-21)+2]
  5008  0119E6  0EED               	movlw	-19
  5009  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  5010  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  5011  0119F4  0E1C               	movlw	low STR_22
  5012  0119F6  6EE6               	movwf	postinc1,c
  5013  0119F8  0EFE               	movlw	high STR_22
  5014  0119FA  6EE6               	movwf	postinc1,c
  5015  0119FC  0E00               	movlw	0
  5016  0119FE  6EE6               	movwf	postinc1,c
  5017  011A00  0E00               	movlw	0
  5018  011A02  6EE6               	movwf	postinc1,c
  5019  011A04  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5020  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  5021  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5022  011A14  0E0A               	movlw	10
  5023  011A16  6EE6               	movwf	postinc1,c
  5024  011A18  ECA2  F0CF         	call	_sprintf	;wreg free
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5028  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  5029  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  5030  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  5031  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5032  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  5033  011A38  0E06               	movlw	low STR_23
  5034  011A3A  6EE6               	movwf	postinc1,c
  5035  011A3C  0EFE               	movlw	high STR_23
  5036  011A3E  6EE6               	movwf	postinc1,c
  5037  011A40  0E00               	movlw	0
  5038  011A42  6EE6               	movwf	postinc1,c
  5039  011A44  0E01               	movlw	1
  5040  011A46  6EE6               	movwf	postinc1,c
  5041  011A48  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5042  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  5043  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5044  011A58  0E08               	movlw	8
  5045  011A5A  6EE6               	movwf	postinc1,c
  5046  011A5C  ECA2  F0CF         	call	_sprintf	;wreg free
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5050  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  5051  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  5052  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5053  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5054  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5055  011A7C  0EF0               	movlw	low STR_24
  5056  011A7E  6EE6               	movwf	postinc1,c
  5057  011A80  0EFD               	movlw	high STR_24
  5058  011A82  6EE6               	movwf	postinc1,c
  5059  011A84  0E00               	movlw	0
  5060  011A86  6EE6               	movwf	postinc1,c
  5061  011A88  0E02               	movlw	2
  5062  011A8A  6EE6               	movwf	postinc1,c
  5063  011A8C  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5064  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  5065  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5066  011A9C  0E08               	movlw	8
  5067  011A9E  6EE6               	movwf	postinc1,c
  5068  011AA0  ECA2  F0CF         	call	_sprintf	;wreg free
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5072  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  5073  011AA8  50DF               	movf	indf2,w,c
  5074  011AAA  A4D8               	btfss	status,2,c
  5075  011AAC  D002               	goto	l13553
  5076                           
  5077                           ; BSR set to: 0
  5078  011AAE  0E20               	movlw	32
  5079  011AB0  D001               	goto	L2
  5080  011AB2                     l13553:
  5081                           
  5082                           ; BSR set to: 0
  5083  011AB2  0E44               	movlw	68
  5084  011AB4                     L2:
  5085  011AB4  6E0B               	movwf	(btemp+10)^0,c
  5086  011AB6  0E00               	movlw	0
  5087  011AB8  6E0C               	movwf	(btemp+11)^0,c
  5088                           
  5089                           ;stkvar	_main$3774 @ sp[(-17)+0]
  5090  011ABA  0EEF               	movlw	-17
  5091  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5092  011AC2  0EF0               	movlw	-16
  5093  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5094                           
  5095                           ; BSR set to: 0
  5096  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5097  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5098  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5099  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  5100  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5101                           
  5102                           ;stkvar	_main$3774 @ sp[(-21)+0]
  5103  011AE6  0EEB               	movlw	-21
  5104  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5105  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5106  011AF4  0EDA               	movlw	low STR_25
  5107  011AF6  6EE6               	movwf	postinc1,c
  5108  011AF8  0EFD               	movlw	high STR_25
  5109  011AFA  6EE6               	movwf	postinc1,c
  5110  011AFC  0E01               	movlw	1
  5111  011AFE  6EE6               	movwf	postinc1,c
  5112  011B00  0E00               	movlw	0
  5113  011B02  6EE6               	movwf	postinc1,c
  5114  011B04  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5115  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  5116  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5117  011B14  0E0A               	movlw	10
  5118  011B16  6EE6               	movwf	postinc1,c
  5119  011B18  ECA2  F0CF         	call	_sprintf	;wreg free
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5123  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5124  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5125  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5126  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5127  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5128  011B38  0EC4               	movlw	low STR_26
  5129  011B3A  6EE6               	movwf	postinc1,c
  5130  011B3C  0EFD               	movlw	high STR_26
  5131  011B3E  6EE6               	movwf	postinc1,c
  5132  011B40  0E01               	movlw	1
  5133  011B42  6EE6               	movwf	postinc1,c
  5134  011B44  0E01               	movlw	1
  5135  011B46  6EE6               	movwf	postinc1,c
  5136  011B48  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5137  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5138  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5139  011B58  0E08               	movlw	8
  5140  011B5A  6EE6               	movwf	postinc1,c
  5141  011B5C  ECA2  F0CF         	call	_sprintf	;wreg free
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5145  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5146  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5147  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5148  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5149  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5150  011B7C  0EAE               	movlw	low STR_27
  5151  011B7E  6EE6               	movwf	postinc1,c
  5152  011B80  0EFD               	movlw	high STR_27
  5153  011B82  6EE6               	movwf	postinc1,c
  5154  011B84  0E01               	movlw	1
  5155  011B86  6EE6               	movwf	postinc1,c
  5156  011B88  0E02               	movlw	2
  5157  011B8A  6EE6               	movwf	postinc1,c
  5158  011B8C  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5159  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5160  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5161  011B9C  0E08               	movlw	8
  5162  011B9E  6EE6               	movwf	postinc1,c
  5163  011BA0  ECA2  F0CF         	call	_sprintf	;wreg free
  5164                           
  5165                           ;main.c: 358:      break;
  5166  011BA4  D342               	goto	l13581
  5167  011BA6                     l1368:
  5168                           
  5169                           ; BSR set to: 1
  5170                           ;main.c: 360:      V.calib = 0;
  5171  011BA6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5172                           
  5173                           ; BSR set to: 1
  5174                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5175  011BA8  EE21  F303         	lfsr	2,_C+4	;volatile
  5176  011BAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5177  011BB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5178  011BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  011BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5180  011BC4  EE21  F313         	lfsr	2,_C+20	;volatile
  5181  011BC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5182  011BCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5183  011BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5184  011BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5185  011BE0  0E74               	movlw	low STR_28
  5186  011BE2  6EE6               	movwf	postinc1,c
  5187  011BE4  0EFE               	movlw	high STR_28
  5188  011BE6  6EE6               	movwf	postinc1,c
  5189  011BE8  0E00               	movlw	0
  5190  011BEA  6EE6               	movwf	postinc1,c
  5191  011BEC  0E00               	movlw	0
  5192  011BEE  6EE6               	movwf	postinc1,c
  5193  011BF0  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5194  011BF4  0060  F007  FFE6   	movff	btemp,postinc1
  5195  011BFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5196  011C00  0E0C               	movlw	12
  5197  011C02  6EE6               	movwf	postinc1,c
  5198  011C04  ECA2  F0CF         	call	_sprintf	;wreg free
  5199                           
  5200                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5201  011C08  EE21  F2FF         	lfsr	2,_C
  5202  011C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  011C12  006F FF7B FFE6     	movff	postinc2,postinc1
  5204  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5205  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5206  011C24  EE21  F30F         	lfsr	2,_C+16	;volatile
  5207  011C28  006F FF7B FFE6     	movff	postinc2,postinc1
  5208  011C2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5209  011C34  006F FF7B FFE6     	movff	postinc2,postinc1
  5210  011C3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5211  011C40  0E48               	movlw	low STR_29
  5212  011C42  6EE6               	movwf	postinc1,c
  5213  011C44  0EFE               	movlw	high STR_29
  5214  011C46  6EE6               	movwf	postinc1,c
  5215  011C48  0E00               	movlw	0
  5216  011C4A  6EE6               	movwf	postinc1,c
  5217  011C4C  0E01               	movlw	1
  5218  011C4E  6EE6               	movwf	postinc1,c
  5219  011C50  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5220  011C54  0060  F007  FFE6   	movff	btemp,postinc1
  5221  011C5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5222  011C60  0E0C               	movlw	12
  5223  011C62  6EE6               	movwf	postinc1,c
  5224  011C64  ECA2  F0CF         	call	_sprintf	;wreg free
  5225                           
  5226                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5227  011C68  EE21  F33F         	lfsr	2,_C+64	;volatile
  5228  011C6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5229  011C72  006F FF7B FFE6     	movff	postinc2,postinc1
  5230  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5231  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5232  011C84  EE21  F307         	lfsr	2,_C+8	;volatile
  5233  011C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5234  011C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5235  011C94  006F FF7B FFE6     	movff	postinc2,postinc1
  5236  011C9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5237  011CA0  0E5E               	movlw	low STR_30
  5238  011CA2  6EE6               	movwf	postinc1,c
  5239  011CA4  0EFE               	movlw	high STR_30
  5240  011CA6  6EE6               	movwf	postinc1,c
  5241  011CA8  0E00               	movlw	0
  5242  011CAA  6EE6               	movwf	postinc1,c
  5243  011CAC  0E02               	movlw	2
  5244  011CAE  6EE6               	movwf	postinc1,c
  5245  011CB0  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5246  011CB4  0060  F007  FFE6   	movff	btemp,postinc1
  5247  011CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5248  011CC0  0E0C               	movlw	12
  5249  011CC2  6EE6               	movwf	postinc1,c
  5250  011CC4  ECA2  F0CF         	call	_sprintf	;wreg free
  5251                           
  5252                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5253  011CC8  EE21  F39F         	lfsr	2,_C+160	;volatile
  5254  011CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5255  011CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5256  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5257  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5258  011CE4  0E6C               	movlw	low STR_31
  5259  011CE6  6EE6               	movwf	postinc1,c
  5260  011CE8  0EFD               	movlw	high STR_31
  5261  011CEA  6EE6               	movwf	postinc1,c
  5262  011CEC  0E01               	movlw	1
  5263  011CEE  6EE6               	movwf	postinc1,c
  5264  011CF0  0E00               	movlw	0
  5265  011CF2  6EE6               	movwf	postinc1,c
  5266  011CF4  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5267  011CF8  0060  F007  FFE6   	movff	btemp,postinc1
  5268  011CFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5269  011D04  0E08               	movlw	8
  5270  011D06  6EE6               	movwf	postinc1,c
  5271  011D08  ECA2  F0CF         	call	_sprintf	;wreg free
  5272                           
  5273                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5274  011D0C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5275  011D10  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011D16  006F FF7B FFE6     	movff	postinc2,postinc1
  5277  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5278  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5279  011D28  0E82               	movlw	low STR_32
  5280  011D2A  6EE6               	movwf	postinc1,c
  5281  011D2C  0EFD               	movlw	high STR_32
  5282  011D2E  6EE6               	movwf	postinc1,c
  5283  011D30  0E01               	movlw	1
  5284  011D32  6EE6               	movwf	postinc1,c
  5285  011D34  0E01               	movlw	1
  5286  011D36  6EE6               	movwf	postinc1,c
  5287  011D38  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5288  011D3C  0060  F007  FFE6   	movff	btemp,postinc1
  5289  011D42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5290  011D48  0E08               	movlw	8
  5291  011D4A  6EE6               	movwf	postinc1,c
  5292  011D4C  ECA2  F0CF         	call	_sprintf	;wreg free
  5293                           
  5294                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5295  011D50  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5296  011D54  006F FF7B FFE6     	movff	postinc2,postinc1
  5297  011D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5298  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5299  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5300  011D6C  EE21  F39F         	lfsr	2,_C+160	;volatile
  5301  011D70  006F FF7B FFE6     	movff	postinc2,postinc1
  5302  011D76  006F FF7B FFE6     	movff	postinc2,postinc1
  5303  011D7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5304  011D82  006F FF7B FFE6     	movff	postinc2,postinc1
  5305  011D88  ECFA  F0A2         	call	___fladd	;wreg free
  5306  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5307  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5308  011D98  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5309  011D9E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5310  011DA4  0E98               	movlw	low STR_33
  5311  011DA6  6EE6               	movwf	postinc1,c
  5312  011DA8  0EFD               	movlw	high STR_33
  5313  011DAA  6EE6               	movwf	postinc1,c
  5314  011DAC  0E01               	movlw	1
  5315  011DAE  6EE6               	movwf	postinc1,c
  5316  011DB0  0E02               	movlw	2
  5317  011DB2  6EE6               	movwf	postinc1,c
  5318  011DB4  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5319  011DB8  0060  F007  FFE6   	movff	btemp,postinc1
  5320  011DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5321  011DC4  0E08               	movlw	8
  5322  011DC6  6EE6               	movwf	postinc1,c
  5323  011DC8  ECA2  F0CF         	call	_sprintf	;wreg free
  5324                           
  5325                           ;main.c: 368:      break;
  5326  011DCC  D22E               	goto	l13581
  5327  011DCE                     l1369:
  5328                           
  5329                           ; BSR set to: 1
  5330                           ;main.c: 370:      V.calib = 0;
  5331  011DCE  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5332                           
  5333                           ; BSR set to: 1
  5334                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5335  011DD0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5336  011DD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5337  011DDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5338  011DE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5339  011DE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5340  011DEC  0EE4               	movlw	low STR_34
  5341  011DEE  6EE6               	movwf	postinc1,c
  5342  011DF0  0EFC               	movlw	high STR_34
  5343  011DF2  6EE6               	movwf	postinc1,c
  5344  011DF4  0E00               	movlw	0
  5345  011DF6  6EE6               	movwf	postinc1,c
  5346  011DF8  0E00               	movlw	0
  5347  011DFA  6EE6               	movwf	postinc1,c
  5348  011DFC  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5349  011E00  0060  F007  FFE6   	movff	btemp,postinc1
  5350  011E06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5351  011E0C  0E08               	movlw	8
  5352  011E0E  6EE6               	movwf	postinc1,c
  5353  011E10  ECA2  F0CF         	call	_sprintf	;wreg free
  5354                           
  5355                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5356  011E14  EE21  F393         	lfsr	2,_C+148	;volatile
  5357  011E18  006F FF7B FFE6     	movff	postinc2,postinc1
  5358  011E1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5359  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5360  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5361  011E30  EE21  F38F         	lfsr	2,_C+144	;volatile
  5362  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5363  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5364  011E40  006F FF7B FFE6     	movff	postinc2,postinc1
  5365  011E46  006F FF7B FFE6     	movff	postinc2,postinc1
  5366  011E4C  0E29               	movlw	low STR_35
  5367  011E4E  6EE6               	movwf	postinc1,c
  5368  011E50  0EFD               	movlw	high STR_35
  5369  011E52  6EE6               	movwf	postinc1,c
  5370  011E54  0E00               	movlw	0
  5371  011E56  6EE6               	movwf	postinc1,c
  5372  011E58  0E01               	movlw	1
  5373  011E5A  6EE6               	movwf	postinc1,c
  5374  011E5C  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5375  011E60  0060  F007  FFE6   	movff	btemp,postinc1
  5376  011E66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5377  011E6C  0E0C               	movlw	12
  5378  011E6E  6EE6               	movwf	postinc1,c
  5379  011E70  ECA2  F0CF         	call	_sprintf	;wreg free
  5380                           
  5381                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5382  011E74  EE21  F30F         	lfsr	2,_C+16	;volatile
  5383  011E78  006F FF7B FFE6     	movff	postinc2,postinc1
  5384  011E7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5385  011E84  006F FF7B FFE6     	movff	postinc2,postinc1
  5386  011E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5387  011E90  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5388  011E94  006F FF78  F00B    	movff	postinc2,btemp+10
  5389  011E9A  006F FF74  F00C    	movff	postdec2,btemp+11
  5390  011EA0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5391  011EA6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5392  011EAC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5393  011EB0  006F FF78  F00B    	movff	postinc2,btemp+10
  5394  011EB6  006F FF74  F00C    	movff	postdec2,btemp+11
  5395  011EBC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5396  011EC2  0060  F033  FFE6   	movff	btemp+11,postinc1
  5397  011EC8  0E00               	movlw	0
  5398  011ECA  6EE6               	movwf	postinc1,c
  5399  011ECC  0E05               	movlw	5
  5400  011ECE  6EE6               	movwf	postinc1,c
  5401  011ED0  EC27  F0D0         	call	_spinners	;wreg free
  5402  011ED4  5001               	movf	btemp^0,w,c
  5403  011ED6  6EE6               	movwf	postinc1,c
  5404  011ED8  0E00               	movlw	0
  5405  011EDA  6EE6               	movwf	postinc1,c
  5406  011EDC  0E4A               	movlw	low STR_36
  5407  011EDE  6EE6               	movwf	postinc1,c
  5408  011EE0  0EFC               	movlw	high STR_36
  5409  011EE2  6EE6               	movwf	postinc1,c
  5410  011EE4  0E00               	movlw	0
  5411  011EE6  6EE6               	movwf	postinc1,c
  5412  011EE8  0E02               	movlw	2
  5413  011EEA  6EE6               	movwf	postinc1,c
  5414  011EEC  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5415  011EF0  0060  F007  FFE6   	movff	btemp,postinc1
  5416  011EF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5417  011EFC  0E0E               	movlw	14
  5418  011EFE  6EE6               	movwf	postinc1,c
  5419  011F00  ECA2  F0CF         	call	_sprintf	;wreg free
  5420                           
  5421                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5422  011F04  EE21  F387         	lfsr	2,_C+136	;volatile
  5423  011F08  006F FF7B FFE6     	movff	postinc2,postinc1
  5424  011F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5425  011F14  006F FF7B FFE6     	movff	postinc2,postinc1
  5426  011F1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5427  011F20  0ECD               	movlw	low STR_37
  5428  011F22  6EE6               	movwf	postinc1,c
  5429  011F24  0EFC               	movlw	high STR_37
  5430  011F26  6EE6               	movwf	postinc1,c
  5431  011F28  0E01               	movlw	1
  5432  011F2A  6EE6               	movwf	postinc1,c
  5433  011F2C  0E00               	movlw	0
  5434  011F2E  6EE6               	movwf	postinc1,c
  5435  011F30  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5436  011F34  0060  F007  FFE6   	movff	btemp,postinc1
  5437  011F3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5438  011F40  0E08               	movlw	8
  5439  011F42  6EE6               	movwf	postinc1,c
  5440  011F44  ECA2  F0CF         	call	_sprintf	;wreg free
  5441                           
  5442                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5443  011F48  EE22  F00D         	lfsr	2,_C+270	;volatile
  5444  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5445  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5446  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5447  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5448  011F64  EE22  F019         	lfsr	2,_C+282	;volatile
  5449  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5450  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5451  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5453  011F80  0EFB               	movlw	low STR_38
  5454  011F82  6EE6               	movwf	postinc1,c
  5455  011F84  0EFC               	movlw	high STR_38
  5456  011F86  6EE6               	movwf	postinc1,c
  5457  011F88  0E01               	movlw	1
  5458  011F8A  6EE6               	movwf	postinc1,c
  5459  011F8C  0E01               	movlw	1
  5460  011F8E  6EE6               	movwf	postinc1,c
  5461  011F90  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5462  011F94  0060  F007  FFE6   	movff	btemp,postinc1
  5463  011F9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5464  011FA0  0E0C               	movlw	12
  5465  011FA2  6EE6               	movwf	postinc1,c
  5466  011FA4  ECA2  F0CF         	call	_sprintf	;wreg free
  5467                           
  5468                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5469  011FA8  EE22  F011         	lfsr	2,_C+274	;volatile
  5470  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5471  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5472  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5473  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5474  011FC4  EE22  F01D         	lfsr	2,_C+286	;volatile
  5475  011FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5476  011FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5477  011FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5478  011FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5479  011FE0  0E12               	movlw	low STR_39
  5480  011FE2  6EE6               	movwf	postinc1,c
  5481  011FE4  0EFD               	movlw	high STR_39
  5482  011FE6  6EE6               	movwf	postinc1,c
  5483  011FE8  0E01               	movlw	1
  5484  011FEA  6EE6               	movwf	postinc1,c
  5485  011FEC  0E02               	movlw	2
  5486  011FEE  6EE6               	movwf	postinc1,c
  5487  011FF0  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5488  011FF4  0060  F007  FFE6   	movff	btemp,postinc1
  5489  011FFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5490  012000  0E0C               	movlw	12
  5491  012002  6EE6               	movwf	postinc1,c
  5492  012004  ECA2  F0CF         	call	_sprintf	;wreg free
  5493                           
  5494                           ;main.c: 378:      break;
  5495  012008  D110               	goto	l13581
  5496  01200A                     l13565:
  5497                           
  5498                           ; BSR set to: 1
  5499                           ;main.c: 380:      if (!V.calib) {
  5500  01200A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5501  01200C  A4D8               	btfss	status,2,c
  5502  01200E  D02D               	goto	l13569
  5503                           
  5504                           ; BSR set to: 1
  5505                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5506  012010  0EFF               	movlw	255
  5507  012012  6EE6               	movwf	postinc1,c
  5508                           
  5509                           ;stkvar	_i @ sp[(-18)+14]
  5510  012014  0EFC               	movlw	-4
  5511  012016  50E3               	movf	plusw1,w,c
  5512  012018  6EE6               	movwf	postinc1,c
  5513  01201A  0E00               	movlw	0
  5514  01201C  6EE6               	movwf	postinc1,c
  5515  01201E  0E00               	movlw	0
  5516  012020  6EE6               	movwf	postinc1,c
  5517  012022  0E00               	movlw	0
  5518  012024  6EE6               	movwf	postinc1,c
  5519  012026  0E00               	movlw	0
  5520  012028  6EE6               	movwf	postinc1,c
  5521  01202A  EC55  F0C4         	call	_lp_filter	;wreg free
  5522                           
  5523                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5524  01202E  0EFF               	movlw	255
  5525  012030  6EE6               	movwf	postinc1,c
  5526                           
  5527                           ;stkvar	_j @ sp[(-18)+13]
  5528  012032  0EFB               	movlw	-5
  5529  012034  50E3               	movf	plusw1,w,c
  5530  012036  6EE6               	movwf	postinc1,c
  5531  012038  0E00               	movlw	0
  5532  01203A  6EE6               	movwf	postinc1,c
  5533  01203C  0E00               	movlw	0
  5534  01203E  6EE6               	movwf	postinc1,c
  5535  012040  0E00               	movlw	0
  5536  012042  6EE6               	movwf	postinc1,c
  5537  012044  0E00               	movlw	0
  5538  012046  6EE6               	movwf	postinc1,c
  5539  012048  EC55  F0C4         	call	_lp_filter	;wreg free
  5540                           
  5541                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5542  01204C  0EFF               	movlw	255
  5543  01204E  6EE6               	movwf	postinc1,c
  5544                           
  5545                           ;stkvar	_k @ sp[(-18)+12]
  5546  012050  0EFA               	movlw	-6
  5547  012052  50E3               	movf	plusw1,w,c
  5548  012054  6EE6               	movwf	postinc1,c
  5549  012056  0E00               	movlw	0
  5550  012058  6EE6               	movwf	postinc1,c
  5551  01205A  0E00               	movlw	0
  5552  01205C  6EE6               	movwf	postinc1,c
  5553  01205E  0E00               	movlw	0
  5554  012060  6EE6               	movwf	postinc1,c
  5555  012062  0E00               	movlw	0
  5556  012064  6EE6               	movwf	postinc1,c
  5557  012066  EC55  F0C4         	call	_lp_filter	;wreg free
  5558  01206A                     l13569:
  5559                           
  5560                           ;main.c: 385:      V.calib = 1;
  5561  01206A  0E01               	movlw	1
  5562  01206C  0101               	movlb	1	; () banked
  5563  01206E  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5564                           
  5565                           ; BSR set to: 1
  5566                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5567                           ;stkvar	_inp_index @ sp[(-17)+11]
  5568  012070  0EFA               	movlw	-6
  5569  012072  50E3               	movf	plusw1,w,c
  5570  012074  6E0B               	movwf	(btemp+10)^0,c
  5571  012076  6A0C               	clrf	(btemp+11)^0,c
  5572  012078  0E01               	movlw	1
  5573  01207A  260B               	addwf	(btemp+10)^0,f,c
  5574  01207C  0E00               	movlw	0
  5575  01207E  220C               	addwfc	(btemp+11)^0,f,c
  5576  012080  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5577  012086  0060  F033  FFE6   	movff	btemp+11,postinc1
  5578                           
  5579                           ;stkvar	_i @ sp[(-19)+14]
  5580  01208C  0EFB               	movlw	-5
  5581  01208E  50E3               	movf	plusw1,w,c
  5582  012090  0D04               	mullw	4
  5583  012092  0EFF               	movlw	low _C
  5584  012094  24F3               	addwf	243,w,c
  5585  012096  6ED9               	movwf	fsr2l,c
  5586  012098  0E06               	movlw	high _C
  5587  01209A  20F4               	addwfc	prodh,w,c
  5588  01209C  6EDA               	movwf	fsr2h,c
  5589  01209E  006F FF7B FFE6     	movff	postinc2,postinc1
  5590  0120A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5591  0120AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5592  0120B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5593                           
  5594                           ;stkvar	_i @ sp[(-23)+14]
  5595  0120B6  0EF7               	movlw	-9
  5596  0120B8  50E3               	movf	plusw1,w,c
  5597  0120BA  6EE6               	movwf	postinc1,c
  5598  0120BC  ECFD  F0E1         	call	_get_raw_result	;wreg free
  5599  0120C0  0060  F007  FFE6   	movff	btemp,postinc1
  5600  0120C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5601  0120CC  0E8A               	movlw	low STR_40
  5602  0120CE  6EE6               	movwf	postinc1,c
  5603  0120D0  0EFE               	movlw	high STR_40
  5604  0120D2  6EE6               	movwf	postinc1,c
  5605  0120D4  0E00               	movlw	0
  5606  0120D6  6EE6               	movwf	postinc1,c
  5607  0120D8  0E00               	movlw	0
  5608  0120DA  6EE6               	movwf	postinc1,c
  5609  0120DC  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5610  0120E0  0060  F007  FFE6   	movff	btemp,postinc1
  5611  0120E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5612  0120EC  0E0C               	movlw	12
  5613  0120EE  6EE6               	movwf	postinc1,c
  5614  0120F0  ECA2  F0CF         	call	_sprintf	;wreg free
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5618                           ;stkvar	_inp_index @ sp[(-17)+11]
  5619  0120F4  0EFA               	movlw	-6
  5620  0120F6  50E3               	movf	plusw1,w,c
  5621  0120F8  6E0B               	movwf	(btemp+10)^0,c
  5622  0120FA  6A0C               	clrf	(btemp+11)^0,c
  5623  0120FC  0E02               	movlw	2
  5624  0120FE  260B               	addwf	(btemp+10)^0,f,c
  5625  012100  0E00               	movlw	0
  5626  012102  220C               	addwfc	(btemp+11)^0,f,c
  5627  012104  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5628  01210A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5629                           
  5630                           ;stkvar	_j @ sp[(-19)+13]
  5631  012110  0EFA               	movlw	-6
  5632  012112  50E3               	movf	plusw1,w,c
  5633  012114  0D04               	mullw	4
  5634  012116  0EFF               	movlw	low _C
  5635  012118  24F3               	addwf	243,w,c
  5636  01211A  6ED9               	movwf	fsr2l,c
  5637  01211C  0E06               	movlw	high _C
  5638  01211E  20F4               	addwfc	prodh,w,c
  5639  012120  6EDA               	movwf	fsr2h,c
  5640  012122  006F FF7B FFE6     	movff	postinc2,postinc1
  5641  012128  006F FF7B FFE6     	movff	postinc2,postinc1
  5642  01212E  006F FF7B FFE6     	movff	postinc2,postinc1
  5643  012134  006F FF7B FFE6     	movff	postinc2,postinc1
  5644                           
  5645                           ;stkvar	_j @ sp[(-23)+13]
  5646  01213A  0EF6               	movlw	-10
  5647  01213C  50E3               	movf	plusw1,w,c
  5648  01213E  6EE6               	movwf	postinc1,c
  5649  012140  ECFD  F0E1         	call	_get_raw_result	;wreg free
  5650  012144  0060  F007  FFE6   	movff	btemp,postinc1
  5651  01214A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5652  012150  0E8A               	movlw	low STR_40
  5653  012152  6EE6               	movwf	postinc1,c
  5654  012154  0EFE               	movlw	high STR_40
  5655  012156  6EE6               	movwf	postinc1,c
  5656  012158  0E00               	movlw	0
  5657  01215A  6EE6               	movwf	postinc1,c
  5658  01215C  0E01               	movlw	1
  5659  01215E  6EE6               	movwf	postinc1,c
  5660  012160  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5661  012164  0060  F007  FFE6   	movff	btemp,postinc1
  5662  01216A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5663  012170  0E0C               	movlw	12
  5664  012172  6EE6               	movwf	postinc1,c
  5665  012174  ECA2  F0CF         	call	_sprintf	;wreg free
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5669                           ;stkvar	_inp_index @ sp[(-17)+11]
  5670  012178  0EFA               	movlw	-6
  5671  01217A  50E3               	movf	plusw1,w,c
  5672  01217C  6E0B               	movwf	(btemp+10)^0,c
  5673  01217E  6A0C               	clrf	(btemp+11)^0,c
  5674  012180  0E03               	movlw	3
  5675  012182  260B               	addwf	(btemp+10)^0,f,c
  5676  012184  0E00               	movlw	0
  5677  012186  220C               	addwfc	(btemp+11)^0,f,c
  5678  012188  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5679  01218E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5680                           
  5681                           ;stkvar	_k @ sp[(-19)+12]
  5682  012194  0EF9               	movlw	-7
  5683  012196  50E3               	movf	plusw1,w,c
  5684  012198  0D04               	mullw	4
  5685  01219A  0EFF               	movlw	low _C
  5686  01219C  24F3               	addwf	243,w,c
  5687  01219E  6ED9               	movwf	fsr2l,c
  5688  0121A0  0E06               	movlw	high _C
  5689  0121A2  20F4               	addwfc	prodh,w,c
  5690  0121A4  6EDA               	movwf	fsr2h,c
  5691  0121A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5692  0121AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5693  0121B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5694  0121B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5695                           
  5696                           ;stkvar	_k @ sp[(-23)+12]
  5697  0121BE  0EF5               	movlw	-11
  5698  0121C0  50E3               	movf	plusw1,w,c
  5699  0121C2  6EE6               	movwf	postinc1,c
  5700  0121C4  ECFD  F0E1         	call	_get_raw_result	;wreg free
  5701  0121C8  0060  F007  FFE6   	movff	btemp,postinc1
  5702  0121CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5703  0121D4  0E8A               	movlw	low STR_40
  5704  0121D6  6EE6               	movwf	postinc1,c
  5705  0121D8  0EFE               	movlw	high STR_40
  5706  0121DA  6EE6               	movwf	postinc1,c
  5707  0121DC  0E00               	movlw	0
  5708  0121DE  6EE6               	movwf	postinc1,c
  5709  0121E0  0E02               	movlw	2
  5710  0121E2  6EE6               	movwf	postinc1,c
  5711  0121E4  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  5712  0121E8  0060  F007  FFE6   	movff	btemp,postinc1
  5713  0121EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5714  0121F4  0E0C               	movlw	12
  5715  0121F6  6EE6               	movwf	postinc1,c
  5716  0121F8  ECA2  F0CF         	call	_sprintf	;wreg free
  5717                           
  5718                           ;main.c: 389:      break;
  5719  0121FC  D016               	goto	l13581
  5720  0121FE                     l13579:
  5721  0121FE  0101               	movlb	1	; () banked
  5722  012200  51C6               	movf	_H& (0+255),w,b
  5723  012202  6E0B               	movwf	(btemp+10)^0,c
  5724  012204  6A0C               	clrf	(btemp+11)^0,c
  5725                           
  5726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5727                           ; Switch size 1, requested type "simple"
  5728                           ; Number of cases is 1, Range of values is 0 to 0
  5729                           ; switch strategies available:
  5730                           ; Name         Instructions Cycles
  5731                           ; simple_byte            4     3 (average)
  5732                           ;	Chosen strategy is simple_byte
  5733  012206  500C               	movf	(btemp+11)^0,w,c
  5734  012208  0A00               	xorlw	0	; case 0
  5735  01220A  A4D8               	btfss	status,2,c
  5736  01220C  D00E               	goto	l13581
  5737                           
  5738                           ; BSR set to: 1
  5739                           ; Switch size 1, requested type "simple"
  5740                           ; Number of cases is 4, Range of values is 0 to 3
  5741                           ; switch strategies available:
  5742                           ; Name         Instructions Cycles
  5743                           ; simple_byte           13     7 (average)
  5744                           ;	Chosen strategy is simple_byte
  5745  01220E  500B               	movf	(btemp+10)^0,w,c
  5746  012210  0A00               	xorlw	0	; case 0
  5747  012212  B4D8               	btfsc	status,2,c
  5748  012214  D4C8               	goto	l1368
  5749  012216  0A01               	xorlw	1	; case 1
  5750  012218  B4D8               	btfsc	status,2,c
  5751  01221A  EFD1  F08C         	goto	l1358
  5752  01221E  0A03               	xorlw	3	; case 2
  5753  012220  B4D8               	btfsc	status,2,c
  5754  012222  D5D5               	goto	l1369
  5755  012224  0A01               	xorlw	1	; case 3
  5756  012226  B4D8               	btfsc	status,2,c
  5757  012228  D6F0               	goto	l13565
  5758  01222A                     l13581:
  5759                           
  5760                           ;main.c: 393:     clear_hid_pflags(&H);
  5761  01222A  0EC6               	movlw	low _H
  5762  01222C  6EE6               	movwf	postinc1,c
  5763  01222E  0E01               	movlw	high _H
  5764  012230  6EE6               	movwf	postinc1,c
  5765  012232  ECA8  F0DC         	call	_clear_hid_pflags	;wreg free
  5766                           
  5767                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5768  012236  0EFA               	movlw	250
  5769  012238  6EE6               	movwf	postinc1,c
  5770  01223A  0E00               	movlw	0
  5771  01223C  6EE6               	movwf	postinc1,c
  5772  01223E  0E0A               	movlw	10
  5773  012240  6EE6               	movwf	postinc1,c
  5774  012242  EC94  F0DD         	call	_StartTimer	;wreg free
  5775                           
  5776                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5777  012246  0EC6               	movlw	low _H
  5778  012248  6EE6               	movwf	postinc1,c
  5779  01224A  0E01               	movlw	high _H
  5780  01224C  6EE6               	movwf	postinc1,c
  5781  01224E  ECFE  F0D8         	call	_check_enter_button	;wreg free
  5782  012252  5001               	movf	btemp^0,w,c
  5783  012254  0101               	movlb	1	; () banked
  5784  012256  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5785                           
  5786                           ; BSR set to: 1
  5787                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5788  012258  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5789  01225A  B4D8               	btfsc	status,2,c
  5790  01225C  D011               	goto	l13595
  5791                           
  5792                           ; BSR set to: 1
  5793  01225E  0E03               	movlw	3
  5794  012260  19C6               	xorwf	_H& (0+255),w,b
  5795  012262  B4D8               	btfsc	status,2,c
  5796  012264  D00D               	goto	l13595
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;main.c: 398:     V.enter = 0;
  5800  012266  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5801                           
  5802                           ; BSR set to: 1
  5803                           ;main.c: 399:     V.screen = ~V.screen;
  5804  012268  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5805  01226A  D002               	goto	u12920
  5806  01226C  0E01               	movlw	1
  5807  01226E  D001               	goto	u12926
  5808  012270                     u12920:
  5809  012270  0E00               	movlw	0
  5810  012272                     u12926:
  5811  012272  0AFF               	xorlw	255
  5812  012274  6E0C               	movwf	(btemp+11)^0,c
  5813  012276  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5814  012278  180C               	xorwf	(btemp+11)^0,w,c
  5815  01227A  0BFE               	andlw	-2
  5816  01227C  180C               	xorwf	(btemp+11)^0,w,c
  5817  01227E  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5818  012280                     l13595:
  5819                           
  5820                           ; BSR set to: 1
  5821                           ;main.c: 401:    set_vterm(V.screen);
  5822  012280  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5823  012282  D002               	goto	u12930
  5824  012284  0E01               	movlw	1
  5825  012286  D001               	goto	u12936
  5826  012288                     u12930:
  5827  012288  0E00               	movlw	0
  5828  01228A                     u12936:
  5829  01228A  6EE6               	movwf	postinc1,c
  5830  01228C  ECDF  F0E1         	call	_set_vterm	;wreg free
  5831                           
  5832                           ;main.c: 402:    update_lcd(V.screen);
  5833  012290  0101               	movlb	1	; () banked
  5834  012292  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5835  012294  D002               	goto	u12940
  5836  012296  0E01               	movlw	1
  5837  012298  D001               	goto	u12946
  5838  01229A                     u12940:
  5839  01229A  0E00               	movlw	0
  5840  01229C                     u12946:
  5841  01229C  6EE6               	movwf	postinc1,c
  5842  01229E  EC1A  F0CF         	call	_update_lcd	;wreg free
  5843                           
  5844                           ;main.c: 404:    wait_lcd_done();
  5845  0122A2  EC6E  F0E1         	call	_wait_lcd_done	;wreg free
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;main.c: 405:    set_dac_a(3.33);
  5849  0122A6  0EB8               	movlw	184
  5850  0122A8  6EE6               	movwf	postinc1,c
  5851  0122AA  0E1E               	movlw	30
  5852  0122AC  6EE6               	movwf	postinc1,c
  5853  0122AE  0E55               	movlw	85
  5854  0122B0  6EE6               	movwf	postinc1,c
  5855  0122B2  0E40               	movlw	64
  5856  0122B4  6EE6               	movwf	postinc1,c
  5857  0122B6  ECD2  F0DE         	call	_set_dac_a	;wreg free
  5858                           
  5859                           ;main.c: 406:    set_dac_b(6.66);
  5860  0122BA  0EB8               	movlw	184
  5861  0122BC  6EE6               	movwf	postinc1,c
  5862  0122BE  0E1E               	movlw	30
  5863  0122C0  6EE6               	movwf	postinc1,c
  5864  0122C2  0ED5               	movlw	213
  5865  0122C4  6EE6               	movwf	postinc1,c
  5866  0122C6  0E40               	movlw	64
  5867  0122C8  6EE6               	movwf	postinc1,c
  5868  0122CA  ECB8  F0DE         	call	_set_dac_b	;wreg free
  5869                           
  5870                           ;main.c: 407:    set_dac();
  5871  0122CE  EC4E  F0D4         	call	_set_dac	;wreg free
  5872  0122D2                     l13607:
  5873                           
  5874                           ;main.c: 413:   check_help(V.flipper);
  5875  0122D2  0101               	movlb	1	; () banked
  5876  0122D4  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5877  0122D6  6EE6               	movwf	postinc1,c
  5878  0122D8  EC5C  F0C1         	call	_check_help	;wreg free
  5879                           
  5880                           ;main.c: 415:   if (V.enter) {
  5881  0122DC  0101               	movlb	1	; () banked
  5882  0122DE  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5883  0122E0  B4D8               	btfsc	status,2,c
  5884  0122E2  D062               	goto	l1374
  5885                           
  5886                           ; BSR set to: 1
  5887                           ;main.c: 416:    V.enter = 0;
  5888  0122E4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5889                           
  5890                           ;main.c: 417:    V.calib = 0;
  5891  0122E6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5892                           
  5893                           ; BSR set to: 1
  5894                           ;main.c: 418:    inp_index += 3;
  5895                           ;stkvar	_inp_index @ sp[(-17)+11]
  5896  0122E8  0EFA               	movlw	-6
  5897  0122EA  006F FF8C  F001    	movff	plusw1,btemp
  5898  0122F0  0E03               	movlw	3
  5899  0122F2  2601               	addwf	btemp^0,f,c
  5900  0122F4  0EFA               	movlw	-6
  5901  0122F6  0060  F007  FFE3   	movff	btemp,plusw1
  5902                           
  5903                           ;main.c: 419:    if (inp_index > 9)
  5904                           ;stkvar	_inp_index @ sp[(-17)+11]
  5905  0122FC  0EFA               	movlw	-6
  5906  0122FE  006F FF8C  F001    	movff	plusw1,btemp
  5907  012304  0E09               	movlw	9
  5908  012306  6401               	cpfsgt	btemp^0,c
  5909  012308  D03A               	goto	l13635
  5910                           
  5911                           ; BSR set to: 1
  5912                           ;main.c: 420:     inp_index = 0;
  5913                           ;stkvar	_inp_index @ sp[(-17)+11]
  5914  01230A  0EFA               	movlw	-6
  5915  01230C  6AE3               	clrf	plusw1,c
  5916  01230E  D037               	goto	l13635
  5917  012310                     l13617:
  5918                           
  5919                           ; BSR set to: 1
  5920                           ;main.c: 423:     i = C_BATT;
  5921                           ;stkvar	_i @ sp[(-17)+14]
  5922  012310  0EFD               	movlw	-3
  5923  012312  6AE3               	clrf	plusw1,c
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;main.c: 424:     j = C_PV;
  5927                           ;stkvar	_j @ sp[(-17)+13]
  5928  012314  0EFC               	movlw	-4
  5929  012316  6AE3               	clrf	plusw1,c
  5930  012318  2AE3               	incf	plusw1,f,c
  5931                           
  5932                           ; BSR set to: 1
  5933                           ;main.c: 425:     k = V_CC;
  5934                           ;stkvar	_k @ sp[(-17)+12]
  5935  01231A  0EFB               	movlw	-5
  5936  01231C  6AE3               	clrf	plusw1,c
  5937  01231E  82E3               	bsf	plusw1,1,c
  5938                           
  5939                           ;main.c: 426:     break;
  5940  012320  D043               	goto	l1374
  5941  012322                     l13623:
  5942                           
  5943                           ; BSR set to: 1
  5944                           ;main.c: 428:     i = V_BAT;
  5945                           ;stkvar	_i @ sp[(-17)+14]
  5946  012322  0EFD               	movlw	-3
  5947  012324  6AE3               	clrf	plusw1,c
  5948  012326  84E3               	bsf	plusw1,2,c
  5949                           
  5950                           ;main.c: 429:     j = V_PV;
  5951                           ;stkvar	_j @ sp[(-17)+13]
  5952  012328  0EFC               	movlw	-4
  5953  01232A  6AE3               	clrf	plusw1,c
  5954  01232C  80E3               	bsf	plusw1,0,c
  5955  01232E  84E3               	bsf	plusw1,2,c	;indir
  5956                           
  5957                           ;main.c: 430:     k = V_CBUS;
  5958                           ;stkvar	_k @ sp[(-17)+12]
  5959  012330  0EFB               	movlw	-5
  5960  012332  6AE3               	clrf	plusw1,c
  5961  012334  82E3               	bsf	plusw1,1,c
  5962  012336  84E3               	bsf	plusw1,2,c	;indir
  5963                           
  5964                           ;main.c: 431:     break;
  5965  012338  D037               	goto	l1374
  5966  01233A                     l13625:
  5967                           
  5968                           ; BSR set to: 1
  5969                           ;main.c: 433:     i = V_BBAT;
  5970                           ;stkvar	_i @ sp[(-17)+14]
  5971  01233A  0EFD               	movlw	-3
  5972  01233C  6AE3               	clrf	plusw1,c
  5973  01233E  82E3               	bsf	plusw1,1,c
  5974  012340  86E3               	bsf	plusw1,3,c	;indir
  5975                           
  5976                           ; BSR set to: 1
  5977                           ;main.c: 434:     j = V_TEMP;
  5978  012342  0E0B               	movlw	11
  5979  012344  6E0C               	movwf	(btemp+11)^0,c
  5980                           
  5981                           ;stkvar	_j @ sp[(-17)+13]
  5982  012346  0EFC               	movlw	-4
  5983  012348  0060  F033  FFE3   	movff	btemp+11,plusw1
  5984                           
  5985                           ; BSR set to: 1
  5986                           ;main.c: 435:     k = V_INVERTER;
  5987                           ;stkvar	_k @ sp[(-17)+12]
  5988  01234E  0EFB               	movlw	-5
  5989  012350  6AE3               	clrf	plusw1,c
  5990  012352  84E3               	bsf	plusw1,2,c
  5991  012354  86E3               	bsf	plusw1,3,c	;indir
  5992                           
  5993                           ;main.c: 436:     break;
  5994  012356  D028               	goto	l1374
  5995  012358                     l13631:
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;main.c: 438:     i = V_LIGHT_SENSOR;
  5999  012358  0E0D               	movlw	13
  6000  01235A  6E0C               	movwf	(btemp+11)^0,c
  6001                           
  6002                           ;stkvar	_i @ sp[(-17)+14]
  6003  01235C  0EFD               	movlw	-3
  6004  01235E  0060  F033  FFE3   	movff	btemp+11,plusw1
  6005                           
  6006                           ;main.c: 439:     j = V_LIGHT_SENSOR;
  6007  012364  0E0D               	movlw	13
  6008  012366  6E0C               	movwf	(btemp+11)^0,c
  6009                           
  6010                           ;stkvar	_j @ sp[(-17)+13]
  6011  012368  0EFC               	movlw	-4
  6012  01236A  0060  F033  FFE3   	movff	btemp+11,plusw1
  6013                           
  6014                           ;main.c: 440:     k = V_LIGHT_SENSOR;
  6015  012370  0E0D               	movlw	13
  6016  012372  6E0C               	movwf	(btemp+11)^0,c
  6017                           
  6018                           ;stkvar	_k @ sp[(-17)+12]
  6019  012374  0EFB               	movlw	-5
  6020  012376  0060  F033  FFE3   	movff	btemp+11,plusw1
  6021                           
  6022                           ;main.c: 441:     break;
  6023  01237C  D015               	goto	l1374
  6024  01237E                     l13635:
  6025                           
  6026                           ; BSR set to: 1
  6027                           ;stkvar	_inp_index @ sp[(-17)+11]
  6028  01237E  0EFA               	movlw	-6
  6029  012380  50E3               	movf	plusw1,w,c
  6030  012382  6E0B               	movwf	(btemp+10)^0,c
  6031  012384  6A0C               	clrf	(btemp+11)^0,c
  6032                           
  6033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6034                           ; Switch size 1, requested type "simple"
  6035                           ; Number of cases is 1, Range of values is 0 to 0
  6036                           ; switch strategies available:
  6037                           ; Name         Instructions Cycles
  6038                           ; simple_byte            4     3 (average)
  6039                           ;	Chosen strategy is simple_byte
  6040  012386  500C               	movf	(btemp+11)^0,w,c
  6041  012388  0A00               	xorlw	0	; case 0
  6042  01238A  A4D8               	btfss	status,2,c
  6043  01238C  D00D               	goto	l1374
  6044                           
  6045                           ; BSR set to: 1
  6046                           ; Switch size 1, requested type "simple"
  6047                           ; Number of cases is 4, Range of values is 0 to 9
  6048                           ; switch strategies available:
  6049                           ; Name         Instructions Cycles
  6050                           ; simple_byte           13     7 (average)
  6051                           ;	Chosen strategy is simple_byte
  6052  01238E  500B               	movf	(btemp+10)^0,w,c
  6053  012390  0A00               	xorlw	0	; case 0
  6054  012392  B4D8               	btfsc	status,2,c
  6055  012394  D7BD               	goto	l13617
  6056  012396  0A03               	xorlw	3	; case 3
  6057  012398  B4D8               	btfsc	status,2,c
  6058  01239A  D7C3               	goto	l13623
  6059  01239C  0A05               	xorlw	5	; case 6
  6060  01239E  B4D8               	btfsc	status,2,c
  6061  0123A0  D7CC               	goto	l13625
  6062  0123A2  0A0F               	xorlw	15	; case 9
  6063  0123A4  B4D8               	btfsc	status,2,c
  6064  0123A6  D7D8               	goto	l13631
  6065  0123A8                     l1374:
  6066                           
  6067                           ; BSR set to: 1
  6068                           ;main.c: 450:   if (V.set_sequ) {
  6069  0123A8  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6070  0123AA  EF83  F08C         	goto	l13509
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;main.c: 451:    if (TimerDone(TMR_INFO)) {
  6074  0123AE  0E07               	movlw	7
  6075  0123B0  6EE6               	movwf	postinc1,c
  6076  0123B2  ECE9  F0DF         	call	_TimerDone	;wreg free
  6077  0123B6  5001               	movf	btemp^0,w,c
  6078  0123B8  B4D8               	btfsc	status,2,c
  6079  0123BA  D00C               	goto	l13645
  6080                           
  6081                           ;main.c: 452:     V.set_sequ = 0;
  6082  0123BC  0101               	movlb	1	; () banked
  6083  0123BE  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6084                           
  6085                           ; BSR set to: 1
  6086                           ;main.c: 453:     set_vterm(0);
  6087  0123C0  0E00               	movlw	0
  6088  0123C2  6EE6               	movwf	postinc1,c
  6089  0123C4  ECDF  F0E1         	call	_set_vterm	;wreg free
  6090                           
  6091                           ;main.c: 454:     update_lcd(0);
  6092  0123C8  0E00               	movlw	0
  6093  0123CA  6EE6               	movwf	postinc1,c
  6094  0123CC  EC1A  F0CF         	call	_update_lcd	;wreg free
  6095                           
  6096                           ;main.c: 455:    } else {
  6097  0123D0  EF83  F08C         	goto	l13509
  6098  0123D4                     l13645:
  6099                           
  6100                           ;main.c: 456:     set_vterm(2);
  6101  0123D4  0E02               	movlw	2
  6102  0123D6  6EE6               	movwf	postinc1,c
  6103  0123D8  ECDF  F0E1         	call	_set_vterm	;wreg free
  6104                           
  6105                           ;main.c: 457:     update_lcd(2);
  6106  0123DC  0E02               	movlw	2
  6107  0123DE  6EE6               	movwf	postinc1,c
  6108  0123E0  EC1A  F0CF         	call	_update_lcd	;wreg free
  6109  0123E4  EF83  F08C         	goto	l13509
  6110  0123E8                     __end_of_main:
  6111                           	opt callstack 0
  6112                           
  6113 ;; *************** function _static_soc *****************
  6114 ;; Defined at:
  6115 ;;		line 117 in file "mbmc.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1  [STACK] void 
  6122 ;; Registers used:
  6123 ;;		wreg, fsr2l, fsr2h
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6133 ;;Total ram usage:        0 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:   15
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_main
  6140 ;; This function uses a reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text1
  6144  01B59C                     __ptext1:
  6145                           	opt callstack 0
  6146  01B59C                     _static_soc:
  6147                           	opt callstack 15
  6148                           
  6149                           ;mbmc.c: 119:  C.runtime = 120;
  6150                           
  6151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6152                           ;incstack = 0
  6153  01B59C  0E78               	movlw	120
  6154  01B59E  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6155  01B5A4  0E00               	movlw	0
  6156  01B5A6  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6157                           
  6158                           ;mbmc.c: 120:  C.soc = 100;
  6159  01B5AC  0E64               	movlw	100
  6160  01B5AE  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6161  01B5B4  0E00               	movlw	0
  6162  01B5B6  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6163                           
  6164                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6165  01B5BC  EE21  F38B         	lfsr	2,_C+140	;volatile
  6166  01B5C0  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6167  01B5C6  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6168  01B5CC  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6169  01B5D2  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6170                           
  6171                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6172  01B5D8  EE21  F38F         	lfsr	2,_C+144	;volatile
  6173  01B5DC  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6174  01B5E2  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6175  01B5E8  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6176  01B5EE  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6177                           
  6178                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6179  01B5F4  0012               	return		;funcret
  6180  01B5F6                     __end_of_static_soc:
  6181                           	opt callstack 0
  6182                           
  6183 ;; *************** function _start_switch_handler *****************
  6184 ;; Defined at:
  6185 ;;		line 122 in file "dio.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1  [STACK] void 
  6192 ;; Registers used:
  6193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6194 ;; Tracked objects:
  6195 ;;		On entry : 1/0
  6196 ;;		On exit  : 3F/39
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:   16
  6206 ;; This function calls:
  6207 ;;		_INT1_SetInterruptHandler
  6208 ;; This function is called by:
  6209 ;;		_main
  6210 ;; This function uses a reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text2
  6214  01C342                     __ptext2:
  6215                           	opt callstack 0
  6216  01C342                     _start_switch_handler:
  6217                           	opt callstack 14
  6218                           
  6219                           ;dio.c: 124:  (PIE5bits.INT1IE = 0);
  6220                           
  6221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6222                           ;incstack = 0
  6223  01C342  0139               	movlb	57	; () banked
  6224  01C344  9195               	bcf	149,0,b	;volatile
  6225                           
  6226                           ; BSR set to: 57
  6227                           ;dio.c: 125:  INT1_SetInterruptHandler(switch_handler);
  6228  01C346  0E68               	movlw	low _switch_handler
  6229  01C348  6EE6               	movwf	postinc1,c
  6230  01C34A  0E97               	movlw	high _switch_handler
  6231  01C34C  6EE6               	movwf	postinc1,c
  6232  01C34E  0E01               	movlw	low (_switch_handler shr (0+16))
  6233  01C350  6EE6               	movwf	postinc1,c
  6234  01C352  EC75  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
  6235                           
  6236                           ;dio.c: 126:  S.button[SNULL].sw = SW_INVALID;
  6237  01C356  0E02               	movlw	2
  6238  01C358  0102               	movlb	2	; () banked
  6239  01C35A  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6240                           
  6241                           ; BSR set to: 2
  6242                           ;dio.c: 127:  (PIE5bits.INT1IE = 1);
  6243  01C35C  0139               	movlb	57	; () banked
  6244  01C35E  8195               	bsf	149,0,b	;volatile
  6245                           
  6246                           ; BSR set to: 57
  6247                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6248  01C360  0012               	return		;funcret
  6249  01C362                     __end_of_start_switch_handler:
  6250                           	opt callstack 0
  6251                           
  6252 ;; *************** function _srand *****************
  6253 ;; Defined at:
  6254 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  s               2  [STACK] unsigned int 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  1  [STACK] void 
  6261 ;; Registers used:
  6262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 3F/1
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6272 ;;Total ram usage:        0 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:   15
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_main
  6279 ;; This function uses a reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text3
  6283  01BD3C                     __ptext3:
  6284                           	opt callstack 0
  6285  01BD3C                     _srand:
  6286                           	opt callstack 15
  6287                           
  6288                           ;stkvar	_s @ sp[(0)+-2]
  6289                           
  6290                           ; BSR set to: 57
  6291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6292                           ;incstack = 0
  6293  01BD3C  0EFE               	movlw	-2
  6294  01BD3E  50E3               	movf	plusw1,w,c
  6295  01BD40  0FFF               	addlw	255
  6296  01BD42  6E0B               	movwf	(btemp+10)^0,c
  6297  01BD44  0EFF               	movlw	-1
  6298  01BD46  006F FF8C  F00C    	movff	plusw1,btemp+11
  6299  01BD4C  0EFF               	movlw	255
  6300  01BD4E  220C               	addwfc	(btemp+11)^0,f,c
  6301  01BD50  0060  F02C  F1F3   	movff	btemp+10,_seed
  6302  01BD56  0060  F030  F1F4   	movff	btemp+11,_seed+1
  6303  01BD5C  0101               	movlb	1	; () banked
  6304  01BD5E  6BF5               	clrf	(_seed+2)& (0+255),b
  6305  01BD60  6BF6               	clrf	(_seed+3)& (0+255),b
  6306  01BD62  6BF7               	clrf	(_seed+4)& (0+255),b
  6307  01BD64  6BF8               	clrf	(_seed+5)& (0+255),b
  6308  01BD66  6BF9               	clrf	(_seed+6)& (0+255),b
  6309  01BD68  6BFA               	clrf	(_seed+7)& (0+255),b
  6310                           
  6311                           ; BSR set to: 1
  6312                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6313  01BD6A  52E5               	movf	postdec1,f,c
  6314  01BD6C  52E5               	movf	postdec1,f,c
  6315  01BD6E  0012               	return		;funcret
  6316  01BD70                     __end_of_srand:
  6317                           	opt callstack 0
  6318                           
  6319 ;; *************** function _spinners *****************
  6320 ;; Defined at:
  6321 ;;		line 146 in file "mbmc.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  shape           1  [STACK] unsigned char 
  6324 ;;  reset           1  [STACK] const unsigned char 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  c               1  [STACK] unsigned char 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  1  [STACK] unsigned char 
  6329 ;; Registers used:
  6330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6340 ;;Total ram usage:        0 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; Hardware stack levels required when called:   16
  6343 ;; This function calls:
  6344 ;;		_strlen
  6345 ;; This function is called by:
  6346 ;;		_main
  6347 ;; This function uses a reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text4
  6351  01A04E                     __ptext4:
  6352                           	opt callstack 0
  6353  01A04E                     _spinners:
  6354                           	opt callstack 0
  6355                           
  6356                           ; BSR set to: 1
  6357                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6358  01A04E  52E6               	movf	postinc1,f,c
  6359                           
  6360                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6361                           ;stkvar	_shape @ sp[(-1)+-1]
  6362                           
  6363                           ;incstack = 0
  6364  01A050  0EFE               	movlw	-2
  6365  01A052  006F FF8C  F001    	movff	plusw1,btemp
  6366  01A058  0E05               	movlw	5
  6367  01A05A  6401               	cpfsgt	btemp^0,c
  6368  01A05C  D002               	goto	l1962
  6369                           
  6370                           ;mbmc.c: 152:   shape = 0;
  6371                           ;stkvar	_shape @ sp[(-1)+-1]
  6372  01A05E  0EFE               	movlw	-2
  6373  01A060  6AE3               	clrf	plusw1,c
  6374  01A062                     l1962:
  6375                           
  6376                           ;mbmc.c: 153:  if (reset)
  6377                           ;stkvar	_reset @ sp[(-1)+-2]
  6378  01A062  0EFD               	movlw	-3
  6379  01A064  50E3               	movf	plusw1,w,c
  6380  01A066  B4D8               	btfsc	status,2,c
  6381  01A068  D00C               	goto	l11117
  6382                           
  6383                           ;mbmc.c: 154:   s[shape] = 0;
  6384                           ;stkvar	_shape @ sp[(-1)+-1]
  6385  01A06A  0EFE               	movlw	-2
  6386  01A06C  50E3               	movf	plusw1,w,c
  6387  01A06E  6E0B               	movwf	(btemp+10)^0,c
  6388  01A070  6A0C               	clrf	(btemp+11)^0,c
  6389  01A072  0EE1               	movlw	low spinners@s
  6390  01A074  240B               	addwf	(btemp+10)^0,w,c
  6391  01A076  6ED9               	movwf	fsr2l,c
  6392  01A078  0E01               	movlw	high spinners@s
  6393  01A07A  200C               	addwfc	(btemp+11)^0,w,c
  6394  01A07C  6EDA               	movwf	fsr2h,c
  6395  01A07E  0E00               	movlw	0
  6396  01A080  6EDF               	movwf	indf2,c
  6397  01A082                     l11117:
  6398                           
  6399                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6400                           ;stkvar	_shape @ sp[(-1)+-1]
  6401  01A082  0EFE               	movlw	-2
  6402  01A084  50E3               	movf	plusw1,w,c
  6403  01A086  0D14               	mullw	20
  6404  01A088  0E45               	movlw	low _spin
  6405  01A08A  6E0B               	movwf	(btemp+10)^0,c
  6406  01A08C  0EFB               	movlw	high _spin
  6407  01A08E  6E0C               	movwf	(btemp+11)^0,c
  6408  01A090  50F3               	movf	243,w,c
  6409  01A092  260B               	addwf	(btemp+10)^0,f,c
  6410  01A094  50F4               	movf	244,w,c
  6411  01A096  220C               	addwfc	(btemp+11)^0,f,c
  6412                           
  6413                           ;stkvar	_shape @ sp[(-1)+-1]
  6414  01A098  0EFE               	movlw	-2
  6415  01A09A  50E3               	movf	plusw1,w,c
  6416  01A09C  6E09               	movwf	(btemp+8)^0,c
  6417  01A09E  6A0A               	clrf	(btemp+9)^0,c
  6418  01A0A0  0EE1               	movlw	low spinners@s
  6419  01A0A2  2409               	addwf	(btemp+8)^0,w,c
  6420  01A0A4  6ED9               	movwf	fsr2l,c
  6421  01A0A6  0E01               	movlw	high spinners@s
  6422  01A0A8  200A               	addwfc	(btemp+9)^0,w,c
  6423  01A0AA  6EDA               	movwf	fsr2h,c
  6424  01A0AC  50DF               	movf	indf2,w,c
  6425  01A0AE  260B               	addwf	(btemp+10)^0,f,c
  6426  01A0B0  0E00               	movlw	0
  6427  01A0B2  220C               	addwfc	(btemp+11)^0,f,c
  6428  01A0B4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6429  01A0BA  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6430  01A0C0                     	if	0	;tblptru may be non-zero
  6431  01A0C0                     	endif
  6432  01A0C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6433  01A0C0  0E00               	movlw	low (__mediumconst shr (0+16))
  6434  01A0C2  6EF8               	movwf	tblptru,c
  6435  01A0C4                     	endif
  6436                           
  6437                           ;stkvar	_c @ sp[(-1)+0]
  6438  01A0C4  0008               	tblrd		*
  6439  01A0C6  0EFF               	movlw	-1
  6440  01A0C8  006F FFD7 FFE3     	movff	tablat,plusw1
  6441                           
  6442                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6443                           ;stkvar	_shape @ sp[(-1)+-1]
  6444  01A0CE  0EFE               	movlw	-2
  6445  01A0D0  50E3               	movf	plusw1,w,c
  6446  01A0D2  0D14               	mullw	20
  6447  01A0D4  0E45               	movlw	low _spin
  6448  01A0D6  6E0B               	movwf	(btemp+10)^0,c
  6449  01A0D8  0EFB               	movlw	high _spin
  6450  01A0DA  6E0C               	movwf	(btemp+11)^0,c
  6451  01A0DC  50F3               	movf	243,w,c
  6452  01A0DE  260B               	addwf	(btemp+10)^0,f,c
  6453  01A0E0  50F4               	movf	244,w,c
  6454  01A0E2  220C               	addwfc	(btemp+11)^0,f,c
  6455  01A0E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6456  01A0EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  6457  01A0F0  EC4F  F0D6         	call	_strlen	;wreg free
  6458                           
  6459                           ;stkvar	_shape @ sp[(-1)+-1]
  6460  01A0F4  0EFE               	movlw	-2
  6461  01A0F6  50E3               	movf	plusw1,w,c
  6462  01A0F8  6E0B               	movwf	(btemp+10)^0,c
  6463  01A0FA  6A0C               	clrf	(btemp+11)^0,c
  6464  01A0FC  0EE1               	movlw	low spinners@s
  6465  01A0FE  240B               	addwf	(btemp+10)^0,w,c
  6466  01A100  6ED9               	movwf	fsr2l,c
  6467  01A102  0E01               	movlw	high spinners@s
  6468  01A104  200C               	addwfc	(btemp+11)^0,w,c
  6469  01A106  6EDA               	movwf	fsr2h,c
  6470  01A108  2ADF               	incf	indf2,f,c
  6471  01A10A  50DF               	movf	indf2,w,c
  6472  01A10C  6E0B               	movwf	(btemp+10)^0,c
  6473  01A10E  6A0C               	clrf	(btemp+11)^0,c
  6474  01A110  5001               	movf	btemp^0,w,c
  6475  01A112  5C0B               	subwf	(btemp+10)^0,w,c
  6476  01A114  5002               	movf	(btemp+1)^0,w,c
  6477  01A116  580C               	subwfb	(btemp+11)^0,w,c
  6478  01A118  A0D8               	btfss	status,0,c
  6479  01A11A  D00C               	goto	l11123
  6480                           
  6481                           ;mbmc.c: 157:   s[shape] = 0;
  6482                           ;stkvar	_shape @ sp[(-1)+-1]
  6483  01A11C  0EFE               	movlw	-2
  6484  01A11E  50E3               	movf	plusw1,w,c
  6485  01A120  6E0B               	movwf	(btemp+10)^0,c
  6486  01A122  6A0C               	clrf	(btemp+11)^0,c
  6487  01A124  0EE1               	movlw	low spinners@s
  6488  01A126  240B               	addwf	(btemp+10)^0,w,c
  6489  01A128  6ED9               	movwf	fsr2l,c
  6490  01A12A  0E01               	movlw	high spinners@s
  6491  01A12C  200C               	addwfc	(btemp+11)^0,w,c
  6492  01A12E  6EDA               	movwf	fsr2h,c
  6493  01A130  0E00               	movlw	0
  6494  01A132  6EDF               	movwf	indf2,c
  6495  01A134                     l11123:
  6496                           
  6497                           ;mbmc.c: 158:  return c;
  6498                           ;stkvar	_c @ sp[(-1)+0]
  6499  01A134  0EFF               	movlw	-1
  6500  01A136  006F FF8C  F001    	movff	plusw1,btemp
  6501                           
  6502                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6503  01A13C  52E5               	movf	postdec1,f,c
  6504  01A13E  52E5               	movf	postdec1,f,c
  6505  01A140  52E5               	movf	postdec1,f,c
  6506  01A142  0012               	return		;funcret
  6507  01A144                     __end_of_spinners:
  6508                           	opt callstack 0
  6509                           
  6510 ;; *************** function _set_dac_b *****************
  6511 ;; Defined at:
  6512 ;;		line 294 in file "daq.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  voltage         4  [STACK] const float 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  2  [STACK] unsigned short 
  6519 ;; Registers used:
  6520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6530 ;;Total ram usage:        0 bytes
  6531 ;; Hardware stack levels used:    1
  6532 ;; Hardware stack levels required when called:   17
  6533 ;; This function calls:
  6534 ;;		_convert_dac_raw
  6535 ;; This function is called by:
  6536 ;;		_main
  6537 ;; This function uses a reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text5
  6541  01BD70                     __ptext5:
  6542                           	opt callstack 0
  6543  01BD70                     _set_dac_b:
  6544                           	opt callstack 13
  6545                           
  6546                           ;daq.c: 294: uint16_t set_dac_b(const float voltage);daq.c: 295: {;daq.c: 296:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6547                           ;stkvar	_voltage @ sp[(0)+-4]
  6548                           
  6549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6550                           ;incstack = 0
  6551  01BD70  0EFC               	movlw	-4
  6552  01BD72  006F FF8F FFE6     	movff	plusw1,postinc1
  6553  01BD78  006F FF8F FFE6     	movff	plusw1,postinc1
  6554  01BD7E  006F FF8F FFE6     	movff	plusw1,postinc1
  6555  01BD84  006F FF8F FFE6     	movff	plusw1,postinc1
  6556  01BD8A  EC78  F0CD         	call	_convert_dac_raw	;wreg free
  6557  01BD8E  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6558  01BD94  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6559                           
  6560                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6561                           
  6562                           ;daq.c: 297:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6563  01BD9A  52E5               	movf	postdec1,f,c
  6564  01BD9C  52E5               	movf	postdec1,f,c
  6565  01BD9E  52E5               	movf	postdec1,f,c
  6566  01BDA0  52E5               	movf	postdec1,f,c
  6567  01BDA2  0012               	return		;funcret
  6568  01BDA4                     __end_of_set_dac_b:
  6569                           	opt callstack 0
  6570                           
  6571 ;; *************** function _set_dac_a *****************
  6572 ;; Defined at:
  6573 ;;		line 285 in file "daq.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  voltage         4  [STACK] const float 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  2  [STACK] unsigned short 
  6580 ;; Registers used:
  6581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6582 ;; Tracked objects:
  6583 ;;		On entry : 3F/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6591 ;;Total ram usage:        0 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:   17
  6594 ;; This function calls:
  6595 ;;		_convert_dac_raw
  6596 ;; This function is called by:
  6597 ;;		_main
  6598 ;; This function uses a reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text6
  6602  01BDA4                     __ptext6:
  6603                           	opt callstack 0
  6604  01BDA4                     _set_dac_a:
  6605                           	opt callstack 13
  6606                           
  6607                           ;daq.c: 285: uint16_t set_dac_a(const float voltage);daq.c: 286: {;daq.c: 287:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6608                           ;stkvar	_voltage @ sp[(0)+-4]
  6609                           
  6610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6611                           ;incstack = 0
  6612  01BDA4  0EFC               	movlw	-4
  6613  01BDA6  006F FF8F FFE6     	movff	plusw1,postinc1
  6614  01BDAC  006F FF8F FFE6     	movff	plusw1,postinc1
  6615  01BDB2  006F FF8F FFE6     	movff	plusw1,postinc1
  6616  01BDB8  006F FF8F FFE6     	movff	plusw1,postinc1
  6617  01BDBE  EC78  F0CD         	call	_convert_dac_raw	;wreg free
  6618  01BDC2  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6619  01BDC8  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6620                           
  6621                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6622                           
  6623                           ;daq.c: 288:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6624  01BDCE  52E5               	movf	postdec1,f,c
  6625  01BDD0  52E5               	movf	postdec1,f,c
  6626  01BDD2  52E5               	movf	postdec1,f,c
  6627  01BDD4  52E5               	movf	postdec1,f,c
  6628  01BDD6  0012               	return		;funcret
  6629  01BDD8                     __end_of_set_dac_a:
  6630                           	opt callstack 0
  6631                           
  6632 ;; *************** function _convert_dac_raw *****************
  6633 ;; Defined at:
  6634 ;;		line 267 in file "daq.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  voltage         4  [STACK] float 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  2  [STACK] unsigned short 
  6641 ;; Registers used:
  6642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6652 ;;Total ram usage:        0 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:   16
  6655 ;; This function calls:
  6656 ;;		___fldiv
  6657 ;;		___flge
  6658 ;;		___fltol
  6659 ;; This function is called by:
  6660 ;;		_set_dac_a
  6661 ;;		_set_dac_b
  6662 ;; This function uses a reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text7
  6666  019AF0                     __ptext7:
  6667                           	opt callstack 0
  6668  019AF0                     _convert_dac_raw:
  6669                           	opt callstack 13
  6670                           
  6671                           ;daq.c: 267: static uint16_t convert_dac_raw(float voltage);daq.c: 268: {;daq.c: 272:  i
      +                          f (voltage < 0.001)
  6672                           
  6673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6674                           ;incstack = 0
  6675  019AF0  0E6F               	movlw	111
  6676  019AF2  6EE6               	movwf	postinc1,c
  6677  019AF4  0E12               	movlw	18
  6678  019AF6  6EE6               	movwf	postinc1,c
  6679  019AF8  0E83               	movlw	131
  6680  019AFA  6EE6               	movwf	postinc1,c
  6681  019AFC  0E3A               	movlw	58
  6682  019AFE  6EE6               	movwf	postinc1,c
  6683                           
  6684                           ;stkvar	_voltage @ sp[(-4)+-4]
  6685  019B00  0EF8               	movlw	-8
  6686  019B02  006F FF8F FFE6     	movff	plusw1,postinc1
  6687  019B08  006F FF8F FFE6     	movff	plusw1,postinc1
  6688  019B0E  006F FF8F FFE6     	movff	plusw1,postinc1
  6689  019B14  006F FF8F FFE6     	movff	plusw1,postinc1
  6690  019B1A  EC0A  F0C9         	call	___flge	;wreg free
  6691  019B1E  B001               	btfsc	btemp& (0+255),0,c
  6692  019B20  D018               	goto	l10729
  6693                           
  6694                           ;daq.c: 273:   voltage = 0.001;
  6695  019B22  0E6F               	movlw	111
  6696  019B24  6E09               	movwf	(btemp+8)^0,c
  6697  019B26  0E12               	movlw	18
  6698  019B28  6E0A               	movwf	(btemp+9)^0,c
  6699  019B2A  0E83               	movlw	131
  6700  019B2C  6E0B               	movwf	(btemp+10)^0,c
  6701  019B2E  0E3A               	movlw	58
  6702  019B30  6E0C               	movwf	(btemp+11)^0,c
  6703                           
  6704                           ;stkvar	_voltage @ sp[(0)+-4]
  6705  019B32  0EFC               	movlw	-4
  6706  019B34  0060  F027  FFE3   	movff	btemp+8,plusw1
  6707  019B3A  0EFD               	movlw	-3
  6708  019B3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6709  019B42  0EFE               	movlw	-2
  6710  019B44  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6711  019B4A  0EFF               	movlw	-1
  6712  019B4C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6713  019B52                     l10729:
  6714                           
  6715                           ;daq.c: 274:  if (voltage > 10.0)
  6716                           ;stkvar	_voltage @ sp[(0)+-4]
  6717  019B52  0EFC               	movlw	-4
  6718  019B54  006F FF8F FFE6     	movff	plusw1,postinc1
  6719  019B5A  006F FF8F FFE6     	movff	plusw1,postinc1
  6720  019B60  006F FF8F FFE6     	movff	plusw1,postinc1
  6721  019B66  006F FF8F FFE6     	movff	plusw1,postinc1
  6722  019B6C  0E00               	movlw	0
  6723  019B6E  6EE6               	movwf	postinc1,c
  6724  019B70  0E00               	movlw	0
  6725  019B72  6EE6               	movwf	postinc1,c
  6726  019B74  0E20               	movlw	32
  6727  019B76  6EE6               	movwf	postinc1,c
  6728  019B78  0E41               	movlw	65
  6729  019B7A  6EE6               	movwf	postinc1,c
  6730  019B7C  EC0A  F0C9         	call	___flge	;wreg free
  6731  019B80  B001               	btfsc	btemp& (0+255),0,c
  6732  019B82  D018               	goto	l10733
  6733                           
  6734                           ;daq.c: 275:   voltage = 10.0;
  6735  019B84  0E00               	movlw	0
  6736  019B86  6E09               	movwf	(btemp+8)^0,c
  6737  019B88  0E00               	movlw	0
  6738  019B8A  6E0A               	movwf	(btemp+9)^0,c
  6739  019B8C  0E20               	movlw	32
  6740  019B8E  6E0B               	movwf	(btemp+10)^0,c
  6741  019B90  0E41               	movlw	65
  6742  019B92  6E0C               	movwf	(btemp+11)^0,c
  6743                           
  6744                           ;stkvar	_voltage @ sp[(0)+-4]
  6745  019B94  0EFC               	movlw	-4
  6746  019B96  0060  F027  FFE3   	movff	btemp+8,plusw1
  6747  019B9C  0EFD               	movlw	-3
  6748  019B9E  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6749  019BA4  0EFE               	movlw	-2
  6750  019BA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6751  019BAC  0EFF               	movlw	-1
  6752  019BAE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6753  019BB4                     l10733:
  6754                           
  6755                           ;daq.c: 279:  return(uint16_t) (voltage / 0.002442);
  6756  019BB4  0EF6               	movlw	246
  6757  019BB6  6EE6               	movwf	postinc1,c
  6758  019BB8  0E09               	movlw	9
  6759  019BBA  6EE6               	movwf	postinc1,c
  6760  019BBC  0E20               	movlw	32
  6761  019BBE  6EE6               	movwf	postinc1,c
  6762  019BC0  0E3B               	movlw	59
  6763  019BC2  6EE6               	movwf	postinc1,c
  6764                           
  6765                           ;stkvar	_voltage @ sp[(-4)+-4]
  6766  019BC4  0EF8               	movlw	-8
  6767  019BC6  006F FF8F FFE6     	movff	plusw1,postinc1
  6768  019BCC  006F FF8F FFE6     	movff	plusw1,postinc1
  6769  019BD2  006F FF8F FFE6     	movff	plusw1,postinc1
  6770  019BD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6771  019BDE  ECD8  F0A6         	call	___fldiv	;wreg free
  6772  019BE2  0060  F007  FFE6   	movff	btemp,postinc1
  6773  019BE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6774  019BEE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6775  019BF4  0060  F013  FFE6   	movff	btemp+3,postinc1
  6776  019BFA  EC51  F0C8         	call	___fltol	;wreg free
  6777                           
  6778                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6779  019BFE  52E5               	movf	postdec1,f,c
  6780  019C00  52E5               	movf	postdec1,f,c
  6781  019C02  52E5               	movf	postdec1,f,c
  6782  019C04  52E5               	movf	postdec1,f,c
  6783  019C06  0012               	return		;funcret
  6784  019C08                     __end_of_convert_dac_raw:
  6785                           	opt callstack 0
  6786                           
  6787 ;; *************** function _set_dac *****************
  6788 ;; Defined at:
  6789 ;;		line 244 in file "daq.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;		None
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;		None
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1  [STACK] void 
  6796 ;; Registers used:
  6797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6807 ;;Total ram usage:        0 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:   16
  6810 ;; This function calls:
  6811 ;;		_SPI1_Exchange8bit
  6812 ;;		_dac_spi_control
  6813 ;; This function is called by:
  6814 ;;		_main
  6815 ;; This function uses a reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text8
  6819  01A89C                     __ptext8:
  6820                           	opt callstack 0
  6821  01A89C                     _set_dac:
  6822                           	opt callstack 14
  6823                           
  6824                           ;daq.c: 246:  while (!SPI1STATUSbits.TXBE);
  6825                           
  6826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6827                           ;incstack = 0
  6828  01A89C  013D               	movlb	61	; () banked
  6829  01A89E  AB17               	btfss	23,5,b	;volatile
  6830  01A8A0  D7FD               	goto	_set_dac
  6831                           
  6832                           ; BSR set to: 61
  6833                           
  6834                           ;daq.c: 247:  do { LATCbits.LATC2 = 1; } while(0);
  6835  01A8A2  84BC               	bsf	188,2,c	;volatile
  6836                           
  6837                           ; BSR set to: 61
  6838                           
  6839                           ;daq.c: 248:  do { LATCbits.LATC0 = 1; } while(0);
  6840  01A8A4  80BC               	bsf	188,0,c	;volatile
  6841                           
  6842                           ; BSR set to: 61
  6843                           ;daq.c: 249:  dac_spi_control(1);
  6844  01A8A6  0E01               	movlw	1
  6845  01A8A8  6EE6               	movwf	postinc1,c
  6846  01A8AA  EC85  F0D8         	call	_dac_spi_control	;wreg free
  6847                           
  6848                           ;daq.c: 250:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6849  01A8AE  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6850                           
  6851                           ;daq.c: 251:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  6852  01A8B2  EE20  F0CF         	lfsr	2,_R+32	;volatile
  6853  01A8B6  006F FF78  F00B    	movff	postinc2,btemp+10
  6854  01A8BC  006F FF74  F00C    	movff	postdec2,btemp+11
  6855  01A8C2  0060  F030  F00B   	movff	btemp+11,btemp+10
  6856  01A8C8  6A0C               	clrf	(btemp+11)^0,c
  6857  01A8CA  0E0F               	movlw	15
  6858  01A8CC  160B               	andwf	(btemp+10)^0,f,c
  6859  01A8CE  0100               	movlb	0	; () banked
  6860  01A8D0  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6861  01A8D2  180B               	xorwf	(btemp+10)^0,w,c
  6862  01A8D4  0BF0               	andlw	-16
  6863  01A8D6  180B               	xorwf	(btemp+10)^0,w,c
  6864  01A8D8  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;daq.c: 252:  R.max5322_cmd.map.cont = 0b0100;
  6868  01A8DA  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6869  01A8DC  0B0F               	andlw	-241
  6870  01A8DE  0940               	iorlw	64
  6871  01A8E0  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6872                           
  6873                           ; BSR set to: 0
  6874  01A8E2  90BF               	bcf	191,0,c	;volatile
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;daq.c: 254:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6878  01A8E4  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6879  01A8E6  6EE6               	movwf	postinc1,c
  6880  01A8E8  ECC1  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6881                           
  6882                           ; BSR set to: 57
  6883                           ;daq.c: 255:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6884  01A8EC  0100               	movlb	0	; () banked
  6885  01A8EE  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6886  01A8F0  6EE6               	movwf	postinc1,c
  6887  01A8F2  ECC1  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6888                           
  6889                           ; BSR set to: 57
  6890  01A8F6  80BF               	bsf	191,0,c	;volatile
  6891                           
  6892                           ; BSR set to: 57
  6893                           ;daq.c: 257:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  6894  01A8F8  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  6895                           
  6896                           ; BSR set to: 57
  6897                           ;daq.c: 258:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  6898  01A8FC  EE20  F0D1         	lfsr	2,_R+34	;volatile
  6899  01A900  006F FF78  F00B    	movff	postinc2,btemp+10
  6900  01A906  006F FF74  F00C    	movff	postdec2,btemp+11
  6901  01A90C  0060  F030  F00B   	movff	btemp+11,btemp+10
  6902  01A912  6A0C               	clrf	(btemp+11)^0,c
  6903  01A914  0E0F               	movlw	15
  6904  01A916  160B               	andwf	(btemp+10)^0,f,c
  6905  01A918  0100               	movlb	0	; () banked
  6906  01A91A  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6907  01A91C  180B               	xorwf	(btemp+10)^0,w,c
  6908  01A91E  0BF0               	andlw	-16
  6909  01A920  180B               	xorwf	(btemp+10)^0,w,c
  6910  01A922  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;daq.c: 259:  R.max5322_cmd.map.cont = 0b0101;
  6914  01A924  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6915  01A926  0B0F               	andlw	-241
  6916  01A928  0950               	iorlw	80
  6917  01A92A  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6918                           
  6919                           ; BSR set to: 0
  6920  01A92C  90BF               	bcf	191,0,c	;volatile
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;daq.c: 261:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6924  01A92E  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6925  01A930  6EE6               	movwf	postinc1,c
  6926  01A932  ECC1  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6927                           
  6928                           ; BSR set to: 57
  6929                           ;daq.c: 262:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6930  01A936  0100               	movlb	0	; () banked
  6931  01A938  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6932  01A93A  6EE6               	movwf	postinc1,c
  6933  01A93C  ECC1  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6934                           
  6935                           ; BSR set to: 57
  6936  01A940  80BF               	bsf	191,0,c	;volatile
  6937                           
  6938                           ; BSR set to: 57
  6939                           ;daq.c: 264:  dac_spi_control(0);
  6940  01A942  0E00               	movlw	0
  6941  01A944  6EE6               	movwf	postinc1,c
  6942  01A946  EC85  F0D8         	call	_dac_spi_control	;wreg free
  6943                           
  6944                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6945  01A94A  0012               	return		;funcret
  6946  01A94C                     __end_of_set_dac:
  6947                           	opt callstack 0
  6948                           
  6949 ;; *************** function _dac_spi_control *****************
  6950 ;; Defined at:
  6951 ;;		line 196 in file "daq.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  set             1  [STACK] _Bool 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  1  [STACK] void 
  6958 ;; Registers used:
  6959 ;;		wreg, fsr1l, fsr1h, status,2
  6960 ;; Tracked objects:
  6961 ;;		On entry : 3B/3D
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6969 ;;Total ram usage:        0 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:   15
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_set_dac
  6976 ;; This function uses a reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text9
  6980  01B10A                     __ptext9:
  6981                           	opt callstack 0
  6982  01B10A                     _dac_spi_control:
  6983                           	opt callstack 14
  6984                           
  6985                           ;daq.c: 196: void dac_spi_control(_Bool set);daq.c: 197: {;daq.c: 198:  static _Bool ini
      +                          t = 0;;daq.c: 199:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 201:  if (set) {
  6986                           ;stkvar	_set @ sp[(0)+-1]
  6987                           
  6988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6989                           ;incstack = 0
  6990  01B10A  0EFF               	movlw	-1
  6991  01B10C  50E3               	movf	plusw1,w,c
  6992  01B10E  B4D8               	btfsc	status,2,c
  6993  01B110  D022               	goto	l10721
  6994                           
  6995                           ;daq.c: 202:   SPI1CON0bits.EN = 0;
  6996  01B112  013D               	movlb	61	; () banked
  6997  01B114  9F14               	bcf	20,7,b	;volatile
  6998                           
  6999                           ; BSR set to: 61
  7000                           ;daq.c: 203:   if (!init) {
  7001  01B116  5043               	movf	dac_spi_control@init^0,w,c
  7002  01B118  A4D8               	btfss	status,2,c
  7003  01B11A  D011               	goto	l10709
  7004                           
  7005                           ; BSR set to: 61
  7006                           ;daq.c: 204:    init = 1;
  7007  01B11C  0E01               	movlw	1
  7008  01B11E  6E43               	movwf	dac_spi_control@init^0,c
  7009                           
  7010                           ; BSR set to: 61
  7011                           ;daq.c: 205:    S0 = SPI1CON0;
  7012  01B120  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7013                           
  7014                           ; BSR set to: 61
  7015                           ;daq.c: 206:    S1 = SPI1CON1;
  7016  01B126  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7017                           
  7018                           ; BSR set to: 61
  7019                           ;daq.c: 207:    S2 = SPI1CON2;
  7020  01B12C  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7021                           
  7022                           ; BSR set to: 61
  7023                           ;daq.c: 208:    SC = SPI1CLK;
  7024  01B132  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7025                           
  7026                           ; BSR set to: 61
  7027                           ;daq.c: 209:    SB = SPI1BAUD;
  7028  01B138  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7029  01B13E                     l10709:
  7030                           
  7031                           ; BSR set to: 61
  7032                           ;daq.c: 215:   SPI1CON1 = 0x00;
  7033  01B13E  6B15               	clrf	21,b	;volatile
  7034                           
  7035                           ; BSR set to: 61
  7036                           ;daq.c: 216:   SPI1CON1bits.CKE=1;
  7037  01B140  8D15               	bsf	21,6,b	;volatile
  7038                           
  7039                           ; BSR set to: 61
  7040                           ;daq.c: 217:   SPI1CON1bits.CKP=0;
  7041  01B142  9B15               	bcf	21,5,b	;volatile
  7042                           
  7043                           ; BSR set to: 61
  7044                           ;daq.c: 218:   SPI1CON1bits.SMP=0;
  7045  01B144  9F15               	bcf	21,7,b	;volatile
  7046                           
  7047                           ;daq.c: 220:   SPI1CON2 = 0x03;
  7048  01B146  0E03               	movlw	3
  7049  01B148  6F16               	movwf	22,b	;volatile
  7050                           
  7051                           ;daq.c: 222:   SPI1BAUD = 0x0f;
  7052  01B14A  0E0F               	movlw	15
  7053  01B14C  6F19               	movwf	25,b	;volatile
  7054                           
  7055                           ; BSR set to: 61
  7056                           ;daq.c: 224:   SPI1CLK = 0x00;
  7057  01B14E  6B1C               	clrf	28,b	;volatile
  7058                           
  7059                           ;daq.c: 226:   SPI1CON0 = 0x83;
  7060  01B150  0E83               	movlw	131
  7061  01B152  6F14               	movwf	20,b	;volatile
  7062  01B154  D014               	goto	L3
  7063  01B156                     l10721:
  7064                           
  7065                           ;daq.c: 229:   if (init) {
  7066  01B156  5043               	movf	dac_spi_control@init^0,w,c
  7067  01B158  B4D8               	btfsc	status,2,c
  7068  01B15A  D012               	goto	l1856
  7069                           
  7070                           ;daq.c: 233:    SPI1CON0bits.EN = 0;
  7071  01B15C  013D               	movlb	61	; () banked
  7072  01B15E  9F14               	bcf	20,7,b	;volatile
  7073                           
  7074                           ;daq.c: 234:    SPI1CON1 = S1;
  7075  01B160  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7076                           
  7077                           ;daq.c: 235:    SPI1CON2 = S2;
  7078  01B166  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7079                           
  7080                           ;daq.c: 236:    SPI1CLK = SC;
  7081  01B16C  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7082                           
  7083                           ;daq.c: 237:    SPI1BAUD = SB;
  7084  01B172  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7085                           
  7086                           ;daq.c: 238:    SPI1CON0 = S0;
  7087  01B178  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7088  01B17E                     L3:
  7089                           
  7090                           ;daq.c: 239:    SPI1CON0bits.EN = 1;
  7091  01B17E  8F14               	bsf	20,7,b	;volatile
  7092  01B180                     l1856:
  7093                           
  7094                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7095  01B180  52E5               	movf	postdec1,f,c
  7096  01B182  0012               	return		;funcret
  7097  01B184                     __end_of_dac_spi_control:
  7098                           	opt callstack 0
  7099                           
  7100 ;; *************** function _init_port_dma *****************
  7101 ;; Defined at:
  7102 ;;		line 104 in file "eadog.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;		None
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;		None
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1  [STACK] void 
  7109 ;; Registers used:
  7110 ;;		wreg, status,2
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/1
  7113 ;;		On exit  : 3F/3B
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7120 ;;Total ram usage:        0 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:   15
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		_main
  7127 ;; This function uses a reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text10
  7131  01BE0C                     __ptext10:
  7132                           	opt callstack 0
  7133  01BE0C                     _init_port_dma:
  7134                           	opt callstack 15
  7135                           
  7136                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7137                           
  7138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7139                           ;incstack = 0
  7140  01BE0C  0E3F               	movlw	-193
  7141  01BE0E  013B               	movlb	59	; () banked
  7142  01BE10  17DD               	andwf	221,f,b	;volatile
  7143                           
  7144                           ; BSR set to: 59
  7145                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7146  01BE12  9BDD               	bcf	221,5,b	;volatile
  7147                           
  7148                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7149  01BE14  51DD               	movf	221,w,b	;volatile
  7150  01BE16  0BF9               	andlw	-7
  7151  01BE18  0902               	iorlw	2
  7152  01BE1A  6FDD               	movwf	221,b	;volatile
  7153                           
  7154                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7155  01BE1C  0EE7               	movlw	-25
  7156  01BE1E  17DD               	andwf	221,f,b	;volatile
  7157                           
  7158                           ; BSR set to: 59
  7159                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7160  01BE20  81DD               	bsf	221,0,b	;volatile
  7161                           
  7162                           ; BSR set to: 59
  7163                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7164  01BE22  9DDC               	bcf	220,6,b	;volatile
  7165                           
  7166                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7167  01BE24  0E3D               	movlw	61
  7168  01BE26  6FD1               	movwf	209,b	;volatile
  7169  01BE28  0EEA               	movlw	234
  7170  01BE2A  6FD0               	movwf	208,b	;volatile
  7171                           
  7172                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7173  01BE2C  0EFF               	movlw	low _port_data
  7174  01BE2E  6FD9               	movwf	217,b	;volatile
  7175  01BE30  0E04               	movlw	high _port_data
  7176  01BE32  6FDA               	movwf	218,b	;volatile
  7177  01BE34  0E00               	movlw	low (_port_data shr (0+16))
  7178  01BE36  6FDB               	movwf	219,b	;volatile
  7179                           
  7180                           ; BSR set to: 59
  7181                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7182  01BE38  9BDC               	bcf	220,5,b	;volatile
  7183                           
  7184                           ; BSR set to: 59
  7185                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7186  01BE3A  0012               	return		;funcret
  7187  01BE3C                     __end_of_init_port_dma:
  7188                           	opt callstack 0
  7189                           
  7190 ;; *************** function _init_display *****************
  7191 ;; Defined at:
  7192 ;;		line 38 in file "eadog.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1  [STACK] void 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7201 ;; Tracked objects:
  7202 ;;		On entry : 3F/3B
  7203 ;;		On exit  : 3F/3D
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7210 ;;Total ram usage:        0 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:   17
  7213 ;; This function calls:
  7214 ;;		_ringBufS_init
  7215 ;;		_send_lcd_cmd
  7216 ;;		_send_lcd_cmd_long
  7217 ;;		_send_lcd_data
  7218 ;;		_wdtdelay
  7219 ;; This function is called by:
  7220 ;;		_main
  7221 ;; This function uses a reentrant model
  7222 ;;
  7223                           
  7224                           	psect	text11
  7225  01A144                     __ptext11:
  7226                           	opt callstack 0
  7227  01A144                     _init_display:
  7228                           	opt callstack 13
  7229                           
  7230                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7231                           
  7232                           ; BSR set to: 59
  7233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7234                           ;incstack = 0
  7235  01A144  0E83               	movlw	low _ring_buf1
  7236  01A146  0101               	movlb	1	; () banked
  7237  01A148  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7238  01A14A  0E03               	movlw	high _ring_buf1
  7239  01A14C  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7240                           
  7241                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7242  01A14E  0E40               	movlw	low _ring_buf2
  7243  01A150  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7244  01A152  0E03               	movlw	high _ring_buf2
  7245  01A154  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7246                           
  7247                           ; BSR set to: 1
  7248                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7249  01A156  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
  7250  01A15C  0060  F753  FFE6   	movff	_spi_link+7,postinc1
  7251  01A162  ECD5  F0DF         	call	_ringBufS_init	;wreg free
  7252                           
  7253                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7254  01A166  0060  F747  FFE6   	movff	_spi_link+4,postinc1
  7255  01A16C  0060  F74B  FFE6   	movff	_spi_link+5,postinc1
  7256  01A172  ECD5  F0DF         	call	_ringBufS_init	;wreg free
  7257                           
  7258                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7259  01A176  84BE               	bsf	190,2,c	;volatile
  7260                           
  7261                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7262  01A178  013D               	movlb	61	; () banked
  7263  01A17A  9F14               	bcf	20,7,b	;volatile
  7264                           
  7265                           ; BSR set to: 61
  7266                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7267  01A17C  0E20               	movlw	32
  7268  01A17E  6F15               	movwf	21,b	;volatile
  7269                           
  7270                           ; BSR set to: 61
  7271                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7272  01A180  0E03               	movlw	3
  7273  01A182  6F16               	movwf	22,b	;volatile
  7274                           
  7275                           ; BSR set to: 61
  7276                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7277  01A184  0E04               	movlw	4
  7278  01A186  6F19               	movwf	25,b	;volatile
  7279                           
  7280                           ; BSR set to: 61
  7281                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7282  01A188  0E02               	movlw	2
  7283  01A18A  6F1C               	movwf	28,b	;volatile
  7284                           
  7285                           ; BSR set to: 61
  7286                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7287  01A18C  0E83               	movlw	131
  7288  01A18E  6F14               	movwf	20,b	;volatile
  7289                           
  7290                           ; BSR set to: 61
  7291                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7292  01A190  8F14               	bsf	20,7,b	;volatile
  7293                           
  7294                           ; BSR set to: 61
  7295                           ;eadog.c: 60:  wdtdelay(350000);
  7296  01A192  0E30               	movlw	48
  7297  01A194  6EE6               	movwf	postinc1,c
  7298  01A196  0E57               	movlw	87
  7299  01A198  6EE6               	movwf	postinc1,c
  7300  01A19A  0E05               	movlw	5
  7301  01A19C  6EE6               	movwf	postinc1,c
  7302  01A19E  0E00               	movlw	0
  7303  01A1A0  6EE6               	movwf	postinc1,c
  7304  01A1A2  ECFB  F0DA         	call	_wdtdelay	;wreg free
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7308  01A1A6  0E46               	movlw	70
  7309  01A1A8  6EE6               	movwf	postinc1,c
  7310  01A1AA  EC54  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7314  01A1AE  0E41               	movlw	65
  7315  01A1B0  6EE6               	movwf	postinc1,c
  7316  01A1B2  EC74  F0DD         	call	_send_lcd_cmd	;wreg free
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;eadog.c: 63:  wdtdelay(80);
  7320  01A1B6  0E50               	movlw	80
  7321  01A1B8  6EE6               	movwf	postinc1,c
  7322  01A1BA  0E00               	movlw	0
  7323  01A1BC  6EE6               	movwf	postinc1,c
  7324  01A1BE  0E00               	movlw	0
  7325  01A1C0  6EE6               	movwf	postinc1,c
  7326  01A1C2  0E00               	movlw	0
  7327  01A1C4  6EE6               	movwf	postinc1,c
  7328  01A1C6  ECFB  F0DA         	call	_wdtdelay	;wreg free
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7332  01A1CA  0E53               	movlw	83
  7333  01A1CC  6EE6               	movwf	postinc1,c
  7334  01A1CE  EC74  F0DD         	call	_send_lcd_cmd	;wreg free
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;eadog.c: 65:  send_lcd_data(2);
  7338  01A1D2  0E02               	movlw	2
  7339  01A1D4  6EE6               	movwf	postinc1,c
  7340  01A1D6  EC02  F0E1         	call	_send_lcd_data	;wreg free
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;eadog.c: 66:  wdtdelay(80);
  7344  01A1DA  0E50               	movlw	80
  7345  01A1DC  6EE6               	movwf	postinc1,c
  7346  01A1DE  0E00               	movlw	0
  7347  01A1E0  6EE6               	movwf	postinc1,c
  7348  01A1E2  0E00               	movlw	0
  7349  01A1E4  6EE6               	movwf	postinc1,c
  7350  01A1E6  0E00               	movlw	0
  7351  01A1E8  6EE6               	movwf	postinc1,c
  7352  01A1EA  ECFB  F0DA         	call	_wdtdelay	;wreg free
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7356  01A1EE  0E51               	movlw	81
  7357  01A1F0  6EE6               	movwf	postinc1,c
  7358  01A1F2  EC54  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7362  01A1F6  013D               	movlb	61	; () banked
  7363  01A1F8  9F14               	bcf	20,7,b	;volatile
  7364                           
  7365                           ; BSR set to: 61
  7366                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7367  01A1FA  0E02               	movlw	2
  7368  01A1FC  6F16               	movwf	22,b	;volatile
  7369                           
  7370                           ; BSR set to: 61
  7371                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7372  01A1FE  8F14               	bsf	20,7,b	;volatile
  7373                           
  7374                           ; BSR set to: 61
  7375                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7376  01A200  931A               	bcf	26,1,b	;volatile
  7377                           
  7378                           ; BSR set to: 61
  7379                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7380  01A202  0E3F               	movlw	-193
  7381  01A204  013B               	movlb	59	; () banked
  7382  01A206  17FD               	andwf	253,f,b	;volatile
  7383                           
  7384                           ; BSR set to: 59
  7385                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7386  01A208  9BFD               	bcf	253,5,b	;volatile
  7387                           
  7388                           ; BSR set to: 59
  7389                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7390  01A20A  51FD               	movf	253,w,b	;volatile
  7391  01A20C  0BF9               	andlw	-7
  7392  01A20E  0902               	iorlw	2
  7393  01A210  6FFD               	movwf	253,b	;volatile
  7394                           
  7395                           ; BSR set to: 59
  7396                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7397  01A212  0EE7               	movlw	-25
  7398  01A214  17FD               	andwf	253,f,b	;volatile
  7399                           
  7400                           ; BSR set to: 59
  7401                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7402  01A216  81FD               	bsf	253,0,b	;volatile
  7403                           
  7404                           ; BSR set to: 59
  7405                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7406  01A218  0E83               	movlw	low _ring_buf1
  7407  01A21A  6FF9               	movwf	249,b	;volatile
  7408  01A21C  0E03               	movlw	high _ring_buf1
  7409  01A21E  6FFA               	movwf	250,b	;volatile
  7410  01A220  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7411  01A222  6FFB               	movwf	251,b	;volatile
  7412                           
  7413                           ; BSR set to: 59
  7414                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7415  01A224  9BFC               	bcf	252,5,b	;volatile
  7416                           
  7417                           ; BSR set to: 59
  7418                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7419  01A226  013D               	movlb	61	; () banked
  7420  01A228  831A               	bsf	26,1,b	;volatile
  7421                           
  7422                           ; BSR set to: 61
  7423                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7424  01A22A  94BE               	bcf	190,2,c	;volatile
  7425                           
  7426                           ; BSR set to: 61
  7427                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7428  01A22C  0012               	return		;funcret
  7429  01A22E                     __end_of_init_display:
  7430                           	opt callstack 0
  7431                           
  7432 ;; *************** function _send_lcd_data *****************
  7433 ;; Defined at:
  7434 ;;		line 123 in file "eadog.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  data            1  [STACK] const unsigned char 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1  [STACK] void 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7443 ;; Tracked objects:
  7444 ;;		On entry : 3F/0
  7445 ;;		On exit  : 3F/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7452 ;;Total ram usage:        0 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:   16
  7455 ;; This function calls:
  7456 ;;		_SPI1_Exchange8bit
  7457 ;;		_wdtdelay
  7458 ;; This function is called by:
  7459 ;;		_init_display
  7460 ;; This function uses a reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text12
  7464  01C204                     __ptext12:
  7465                           	opt callstack 0
  7466  01C204                     _send_lcd_data:
  7467                           	opt callstack 13
  7468                           
  7469                           ; BSR set to: 61
  7470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7471                           ;incstack = 0
  7472                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7473  01C204  94BC               	bcf	188,2,c	;volatile
  7474                           
  7475                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7476                           ;stkvar	_data @ sp[(0)+-1]
  7477  01C206  0EFF               	movlw	-1
  7478  01C208  50E3               	movf	plusw1,w,c
  7479  01C20A  6EE6               	movwf	postinc1,c
  7480  01C20C  ECC1  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7481                           
  7482                           ; BSR set to: 57
  7483                           ;eadog.c: 127:  wdtdelay(8);
  7484  01C210  0E08               	movlw	8
  7485  01C212  6EE6               	movwf	postinc1,c
  7486  01C214  0E00               	movlw	0
  7487  01C216  6EE6               	movwf	postinc1,c
  7488  01C218  0E00               	movlw	0
  7489  01C21A  6EE6               	movwf	postinc1,c
  7490  01C21C  0E00               	movlw	0
  7491  01C21E  6EE6               	movwf	postinc1,c
  7492  01C220  ECFB  F0DA         	call	_wdtdelay	;wreg free
  7493                           
  7494                           ; BSR set to: 0
  7495                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7496  01C224  52E5               	movf	postdec1,f,c
  7497  01C226  0012               	return		;funcret
  7498  01C228                     __end_of_send_lcd_data:
  7499                           	opt callstack 0
  7500                           
  7501 ;; *************** function _send_lcd_cmd_long *****************
  7502 ;; Defined at:
  7503 ;;		line 139 in file "eadog.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  cmd             1  [STACK] const unsigned char 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1  [STACK] void 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7512 ;; Tracked objects:
  7513 ;;		On entry : 3F/0
  7514 ;;		On exit  : 3F/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7521 ;;Total ram usage:        0 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; Hardware stack levels required when called:   16
  7524 ;; This function calls:
  7525 ;;		_SPI1_Exchange8bit
  7526 ;;		_wdtdelay
  7527 ;; This function is called by:
  7528 ;;		_init_display
  7529 ;; This function uses a reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text13
  7533  01BAA8                     __ptext13:
  7534                           	opt callstack 0
  7535  01BAA8                     _send_lcd_cmd_long:
  7536                           	opt callstack 13
  7537                           
  7538                           ; BSR set to: 0
  7539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7540                           ;incstack = 0
  7541                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7542  01BAA8  94BC               	bcf	188,2,c	;volatile
  7543                           
  7544                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7545  01BAAA  0EFE               	movlw	254
  7546  01BAAC  6EE6               	movwf	postinc1,c
  7547  01BAAE  ECC1  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7548                           
  7549                           ; BSR set to: 57
  7550                           ;eadog.c: 143:  wdtdelay(8);
  7551  01BAB2  0E08               	movlw	8
  7552  01BAB4  6EE6               	movwf	postinc1,c
  7553  01BAB6  0E00               	movlw	0
  7554  01BAB8  6EE6               	movwf	postinc1,c
  7555  01BABA  0E00               	movlw	0
  7556  01BABC  6EE6               	movwf	postinc1,c
  7557  01BABE  0E00               	movlw	0
  7558  01BAC0  6EE6               	movwf	postinc1,c
  7559  01BAC2  ECFB  F0DA         	call	_wdtdelay	;wreg free
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7563                           ;stkvar	_cmd @ sp[(0)+-1]
  7564  01BAC6  0EFF               	movlw	-1
  7565  01BAC8  50E3               	movf	plusw1,w,c
  7566  01BACA  6EE6               	movwf	postinc1,c
  7567  01BACC  ECC1  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7568                           
  7569                           ;eadog.c: 145:  wdtdelay(800);
  7570  01BAD0  0E20               	movlw	32
  7571  01BAD2  6EE6               	movwf	postinc1,c
  7572  01BAD4  0E03               	movlw	3
  7573  01BAD6  6EE6               	movwf	postinc1,c
  7574  01BAD8  0E00               	movlw	0
  7575  01BADA  6EE6               	movwf	postinc1,c
  7576  01BADC  0E00               	movlw	0
  7577  01BADE  6EE6               	movwf	postinc1,c
  7578  01BAE0  ECFB  F0DA         	call	_wdtdelay	;wreg free
  7579                           
  7580                           ; BSR set to: 0
  7581                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7582  01BAE4  52E5               	movf	postdec1,f,c
  7583  01BAE6  0012               	return		;funcret
  7584  01BAE8                     __end_of_send_lcd_cmd_long:
  7585                           	opt callstack 0
  7586                           
  7587 ;; *************** function _send_lcd_cmd *****************
  7588 ;; Defined at:
  7589 ;;		line 130 in file "eadog.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  cmd             1  [STACK] const unsigned char 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;		None
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1  [STACK] void 
  7596 ;; Registers used:
  7597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7598 ;; Tracked objects:
  7599 ;;		On entry : 3F/0
  7600 ;;		On exit  : 3F/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7607 ;;Total ram usage:        0 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:   16
  7610 ;; This function calls:
  7611 ;;		_SPI1_Exchange8bit
  7612 ;;		_wdtdelay
  7613 ;; This function is called by:
  7614 ;;		_init_display
  7615 ;; This function uses a reentrant model
  7616 ;;
  7617                           
  7618                           	psect	text14
  7619  01BAE8                     __ptext14:
  7620                           	opt callstack 0
  7621  01BAE8                     _send_lcd_cmd:
  7622                           	opt callstack 13
  7623                           
  7624                           ; BSR set to: 0
  7625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7626                           ;incstack = 0
  7627                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7628  01BAE8  94BC               	bcf	188,2,c	;volatile
  7629                           
  7630                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7631  01BAEA  0EFE               	movlw	254
  7632  01BAEC  6EE6               	movwf	postinc1,c
  7633  01BAEE  ECC1  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7634                           
  7635                           ; BSR set to: 57
  7636                           ;eadog.c: 134:  wdtdelay(8);
  7637  01BAF2  0E08               	movlw	8
  7638  01BAF4  6EE6               	movwf	postinc1,c
  7639  01BAF6  0E00               	movlw	0
  7640  01BAF8  6EE6               	movwf	postinc1,c
  7641  01BAFA  0E00               	movlw	0
  7642  01BAFC  6EE6               	movwf	postinc1,c
  7643  01BAFE  0E00               	movlw	0
  7644  01BB00  6EE6               	movwf	postinc1,c
  7645  01BB02  ECFB  F0DA         	call	_wdtdelay	;wreg free
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7649                           ;stkvar	_cmd @ sp[(0)+-1]
  7650  01BB06  0EFF               	movlw	-1
  7651  01BB08  50E3               	movf	plusw1,w,c
  7652  01BB0A  6EE6               	movwf	postinc1,c
  7653  01BB0C  ECC1  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7654                           
  7655                           ;eadog.c: 136:  wdtdelay(8);
  7656  01BB10  0E08               	movlw	8
  7657  01BB12  6EE6               	movwf	postinc1,c
  7658  01BB14  0E00               	movlw	0
  7659  01BB16  6EE6               	movwf	postinc1,c
  7660  01BB18  0E00               	movlw	0
  7661  01BB1A  6EE6               	movwf	postinc1,c
  7662  01BB1C  0E00               	movlw	0
  7663  01BB1E  6EE6               	movwf	postinc1,c
  7664  01BB20  ECFB  F0DA         	call	_wdtdelay	;wreg free
  7665                           
  7666                           ; BSR set to: 0
  7667                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7668  01BB24  52E5               	movf	postdec1,f,c
  7669  01BB26  0012               	return		;funcret
  7670  01BB28                     __end_of_send_lcd_cmd:
  7671                           	opt callstack 0
  7672                           
  7673 ;; *************** function _SPI1_Exchange8bit *****************
  7674 ;; Defined at:
  7675 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  data            1  [STACK] unsigned char 
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1  [STACK] unsigned char 
  7682 ;; Registers used:
  7683 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 3F/39
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7693 ;;Total ram usage:        0 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:   15
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_send_lcd_data
  7700 ;;		_send_lcd_cmd
  7701 ;;		_send_lcd_cmd_long
  7702 ;;		_set_dac
  7703 ;; This function uses a reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text15
  7707  01C382                     __ptext15:
  7708                           	opt callstack 0
  7709  01C382                     _SPI1_Exchange8bit:
  7710                           	opt callstack 14
  7711                           
  7712                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7713                           
  7714                           ; BSR set to: 0
  7715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7716                           ;incstack = 0
  7717  01C382  0E01               	movlw	1
  7718  01C384  013D               	movlb	61	; () banked
  7719  01C386  6F12               	movwf	18,b	;volatile
  7720                           
  7721                           ; BSR set to: 61
  7722                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7723                           ;stkvar	_data @ sp[(0)+-1]
  7724  01C388  0EFF               	movlw	-1
  7725  01C38A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7726  01C390                     l807:
  7727                           
  7728                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7729  01C390  0139               	movlb	57	; () banked
  7730  01C392  A9A2               	btfss	162,4,b	;volatile
  7731  01C394  D7FD               	goto	l807
  7732                           
  7733                           ; BSR set to: 57
  7734                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7735  01C396  006F F440  F001    	movff	15632,btemp	;volatile
  7736                           
  7737                           ; BSR set to: 57
  7738                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7739  01C39C  52E5               	movf	postdec1,f,c
  7740  01C39E  0012               	return		;funcret
  7741  01C3A0                     __end_of_SPI1_Exchange8bit:
  7742                           	opt callstack 0
  7743                           
  7744 ;; *************** function _ringBufS_init *****************
  7745 ;; Defined at:
  7746 ;;		line 22 in file "ringbufs.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  _this           2  [STACK] PTR volatile struct ring
  7749 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1  [STACK] void 
  7754 ;; Registers used:
  7755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/1
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7765 ;;Total ram usage:        0 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:   16
  7768 ;; This function calls:
  7769 ;;		_memset
  7770 ;; This function is called by:
  7771 ;;		_init_display
  7772 ;; This function uses a reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text16
  7776  01BFAA                     __ptext16:
  7777                           	opt callstack 0
  7778  01BFAA                     _ringBufS_init:
  7779                           	opt callstack 13
  7780                           
  7781                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7782                           
  7783                           ; BSR set to: 57
  7784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7785                           ;incstack = 0
  7786  01BFAA  0E43               	movlw	67
  7787  01BFAC  6EE6               	movwf	postinc1,c
  7788  01BFAE  0E00               	movlw	0
  7789  01BFB0  6EE6               	movwf	postinc1,c
  7790  01BFB2  0E00               	movlw	0
  7791  01BFB4  6EE6               	movwf	postinc1,c
  7792  01BFB6  0E00               	movlw	0
  7793  01BFB8  6EE6               	movwf	postinc1,c
  7794                           
  7795                           ;stkvar	__this @ sp[(-4)+-2]
  7796  01BFBA  0EFA               	movlw	-6
  7797  01BFBC  006F FF8F FFE6     	movff	plusw1,postinc1
  7798  01BFC2  006F FF8F FFE6     	movff	plusw1,postinc1
  7799  01BFC8  EC4E  F0B7         	call	_memset	;wreg free
  7800                           
  7801                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7802  01BFCC  52E5               	movf	postdec1,f,c
  7803  01BFCE  52E5               	movf	postdec1,f,c
  7804  01BFD0  0012               	return		;funcret
  7805  01BFD2                     __end_of_ringBufS_init:
  7806                           	opt callstack 0
  7807                           
  7808 ;; *************** function _init_bsoc *****************
  7809 ;; Defined at:
  7810 ;;		line 109 in file "bsoc.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1  [STACK] void 
  7817 ;; Registers used:
  7818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7828 ;;Total ram usage:        0 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:   18
  7831 ;; This function calls:
  7832 ;;		_TMR3_SetInterruptHandler
  7833 ;;		_Volts_to_SOC
  7834 ;;		___fldiv
  7835 ;;		___flmul
  7836 ;;		___fltol
  7837 ;;		___xxtofl
  7838 ;;		_conv_raw_result
  7839 ;; This function is called by:
  7840 ;;		_main
  7841 ;; This function uses a reentrant model
  7842 ;;
  7843                           
  7844                           	psect	text17
  7845  017C12                     __ptext17:
  7846                           	opt callstack 0
  7847  017C12                     _init_bsoc:
  7848                           	opt callstack 12
  7849                           
  7850                           ;bsoc.c: 114:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7851                           
  7852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7853                           ;incstack = 0
  7854  017C12  0E00               	movlw	0
  7855  017C14  6EE6               	movwf	postinc1,c
  7856  017C16  0E00               	movlw	0
  7857  017C18  6EE6               	movwf	postinc1,c
  7858  017C1A  0E7A               	movlw	122
  7859  017C1C  6EE6               	movwf	postinc1,c
  7860  017C1E  0E44               	movlw	68
  7861  017C20  6EE6               	movwf	postinc1,c
  7862  017C22  0E00               	movlw	0
  7863  017C24  6EE6               	movwf	postinc1,c
  7864  017C26  0E04               	movlw	4
  7865  017C28  6EE6               	movwf	postinc1,c
  7866  017C2A  EC95  F0A9         	call	_conv_raw_result	;wreg free
  7867  017C2E  0060  F007  FFE6   	movff	btemp,postinc1
  7868  017C34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7869  017C3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7870  017C40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7871  017C46  EC51  F0C8         	call	___fltol	;wreg free
  7872  017C4A  0060  F007  FFE6   	movff	btemp,postinc1
  7873  017C50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7874  017C56  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7875  017C5C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7876  017C62  0E00               	movlw	0
  7877  017C64  6EE6               	movwf	postinc1,c
  7878  017C66  EC65  F0C2         	call	___xxtofl	;wreg free
  7879  017C6A  0060  F007  FFE6   	movff	btemp,postinc1
  7880  017C70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7881  017C76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7882  017C7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7883  017C82  ECE5  F09E         	call	___flmul	;wreg free
  7884  017C86  0060  F007  FFE6   	movff	btemp,postinc1
  7885  017C8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7886  017C92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7887  017C98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7888  017C9E  EC51  F0C8         	call	___fltol	;wreg free
  7889  017CA2  0060  F007  FFE6   	movff	btemp,postinc1
  7890  017CA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7891  017CAE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7892  017CB4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7893  017CBA  EC95  F0D3         	call	_Volts_to_SOC	;wreg free
  7894  017CBE  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7895  017CC4  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7896                           
  7897                           ;bsoc.c: 115:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7898  017CCA  EE21  F38B         	lfsr	2,_C+140	;volatile
  7899  017CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  7900  017CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  7901  017CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  7902  017CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  7903  017CE6  0E00               	movlw	0
  7904  017CE8  6EE6               	movwf	postinc1,c
  7905  017CEA  0E00               	movlw	0
  7906  017CEC  6EE6               	movwf	postinc1,c
  7907  017CEE  0EC8               	movlw	200
  7908  017CF0  6EE6               	movwf	postinc1,c
  7909  017CF2  0E42               	movlw	66
  7910  017CF4  6EE6               	movwf	postinc1,c
  7911  017CF6  0E00               	movlw	0
  7912  017CF8  6EE6               	movwf	postinc1,c
  7913  017CFA  0E00               	movlw	0
  7914  017CFC  6EE6               	movwf	postinc1,c
  7915  017CFE  0E7A               	movlw	122
  7916  017D00  6EE6               	movwf	postinc1,c
  7917  017D02  0E44               	movlw	68
  7918  017D04  6EE6               	movwf	postinc1,c
  7919  017D06  0E00               	movlw	0
  7920  017D08  6EE6               	movwf	postinc1,c
  7921  017D0A  0E04               	movlw	4
  7922  017D0C  6EE6               	movwf	postinc1,c
  7923  017D0E  EC95  F0A9         	call	_conv_raw_result	;wreg free
  7924  017D12  0060  F007  FFE6   	movff	btemp,postinc1
  7925  017D18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7926  017D1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7927  017D24  0060  F013  FFE6   	movff	btemp+3,postinc1
  7928  017D2A  EC51  F0C8         	call	___fltol	;wreg free
  7929  017D2E  0060  F007  FFE6   	movff	btemp,postinc1
  7930  017D34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7931  017D3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7932  017D40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7933  017D46  0E00               	movlw	0
  7934  017D48  6EE6               	movwf	postinc1,c
  7935  017D4A  EC65  F0C2         	call	___xxtofl	;wreg free
  7936  017D4E  0060  F007  FFE6   	movff	btemp,postinc1
  7937  017D54  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7938  017D5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7939  017D60  0060  F013  FFE6   	movff	btemp+3,postinc1
  7940  017D66  ECE5  F09E         	call	___flmul	;wreg free
  7941  017D6A  0060  F007  FFE6   	movff	btemp,postinc1
  7942  017D70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7943  017D76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7944  017D7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7945  017D82  EC51  F0C8         	call	___fltol	;wreg free
  7946  017D86  0060  F007  FFE6   	movff	btemp,postinc1
  7947  017D8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7948  017D92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7949  017D98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7950  017D9E  EC95  F0D3         	call	_Volts_to_SOC	;wreg free
  7951  017DA2  0060  F004  F00B   	movff	btemp,btemp+10
  7952  017DA8  0060  F008  F00C   	movff	btemp+1,btemp+11
  7953  017DAE  500B               	movf	(btemp+10)^0,w,c
  7954  017DB0  6E05               	movwf	(btemp+4)^0,c
  7955  017DB2  500C               	movf	(btemp+11)^0,w,c
  7956  017DB4  6E06               	movwf	(btemp+5)^0,c
  7957  017DB6  6A07               	clrf	(btemp+6)^0,c
  7958  017DB8  6A08               	clrf	(btemp+7)^0,c
  7959  017DBA  0060  F017  FFE6   	movff	btemp+4,postinc1
  7960  017DC0  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7961  017DC6  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7962  017DCC  0060  F023  FFE6   	movff	btemp+7,postinc1
  7963  017DD2  0E00               	movlw	0
  7964  017DD4  6EE6               	movwf	postinc1,c
  7965  017DD6  EC65  F0C2         	call	___xxtofl	;wreg free
  7966  017DDA  0060  F007  FFE6   	movff	btemp,postinc1
  7967  017DE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7968  017DE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7969  017DEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7970  017DF2  ECD8  F0A6         	call	___fldiv	;wreg free
  7971  017DF6  0060  F007  FFE6   	movff	btemp,postinc1
  7972  017DFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7973  017E02  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7974  017E08  0060  F013  FFE6   	movff	btemp+3,postinc1
  7975  017E0E  ECE5  F09E         	call	___flmul	;wreg free
  7976  017E12  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7977  017E18  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7978  017E1E  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7979  017E24  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7980                           
  7981                           ;bsoc.c: 116:  C.dynamic_ah_adj = C.dynamic_ah;
  7982  017E2A  EE21  F38F         	lfsr	2,_C+144	;volatile
  7983  017E2E  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7984  017E34  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7985  017E3A  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7986  017E40  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7987                           
  7988                           ;bsoc.c: 117:  TMR3_SetInterruptHandler(calc_bsoc);
  7989  017E46  0E94               	movlw	low _calc_bsoc
  7990  017E48  6EE6               	movwf	postinc1,c
  7991  017E4A  0E33               	movlw	high _calc_bsoc
  7992  017E4C  6EE6               	movwf	postinc1,c
  7993  017E4E  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7994  017E50  6EE6               	movwf	postinc1,c
  7995  017E52  EC61  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
  7996                           
  7997                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7998  017E56  0012               	return		;funcret
  7999  017E58                     __end_of_init_bsoc:
  8000                           	opt callstack 0
  8001                           
  8002 ;; *************** function _Volts_to_SOC *****************
  8003 ;; Defined at:
  8004 ;;		line 174 in file "bsoc.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;  cvoltage        4  [STACK] const unsigned long 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  soc             2  [STACK] unsigned short 
  8009 ;;  slot            1  [STACK] unsigned char 
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  2  [STACK] unsigned short 
  8012 ;; Registers used:
  8013 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8023 ;;Total ram usage:        0 bytes
  8024 ;; Hardware stack levels used:    1
  8025 ;; Hardware stack levels required when called:   15
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_init_bsoc
  8030 ;; This function uses a reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text18
  8034  01A72A                     __ptext18:
  8035                           	opt callstack 0
  8036  01A72A                     _Volts_to_SOC:
  8037                           	opt callstack 0
  8038                           
  8039                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8040  01A72A  52E6               	movf	postinc1,f,c
  8041  01A72C  52E6               	movf	postinc1,f,c
  8042  01A72E  52E6               	movf	postinc1,f,c
  8043                           
  8044                           ;bsoc.c: 174: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 175: {;bsoc.c: 176:
      +                            uint8_t slot;;bsoc.c: 177:  uint16_t soc = 0;
  8045                           ;stkvar	_soc @ sp[(-3)+0]
  8046                           
  8047                           ;incstack = 0
  8048  01A730  0EFD               	movlw	-3
  8049  01A732  6AE3               	clrf	plusw1,c
  8050  01A734  0EFE               	movlw	-2
  8051  01A736  6AE3               	clrf	plusw1,c
  8052                           
  8053                           ;bsoc.c: 182:  for (slot = 0; slot < 26; slot++) {
  8054                           ;stkvar	_slot @ sp[(-3)+2]
  8055  01A738  0EFF               	movlw	-1
  8056  01A73A  6AE3               	clrf	plusw1,c
  8057  01A73C                     l10889:
  8058                           
  8059                           ;bsoc.c: 183:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8060                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8061                           ;stkvar	_slot @ sp[(-3)+2]
  8062  01A73C  0EFF               	movlw	-1
  8063  01A73E  50E3               	movf	plusw1,w,c
  8064  01A740  0D08               	mullw	8
  8065  01A742  0EE5               	movlw	low _BVSOC_TABLE
  8066  01A744  24F3               	addwf	243,w,c
  8067  01A746  6EF6               	movwf	tblptrl,c
  8068  01A748  0EF9               	movlw	high _BVSOC_TABLE
  8069  01A74A  20F4               	addwfc	244,w,c
  8070  01A74C  6EF7               	movwf	tblptrh,c
  8071  01A74E                     	if	1	;There are 3 active tblptr bytes
  8072  01A74E  6AF8               	clrf	tblptru,c
  8073  01A750  0E00               	movlw	low (__mediumconst shr (0+16))
  8074  01A752  22F8               	addwfc	tblptru,f,c
  8075  01A754                     	endif
  8076  01A754  0EF9               	movlw	-7
  8077  01A756  50E3               	movf	plusw1,w,c
  8078  01A758  0009               	tblrd		*+
  8079  01A75A  5CF5               	subwf	tablat,w,c
  8080  01A75C  0EFA               	movlw	-6
  8081  01A75E  50E3               	movf	plusw1,w,c
  8082  01A760  0009               	tblrd		*+
  8083  01A762  58F5               	subwfb	tablat,w,c
  8084  01A764  0EFB               	movlw	-5
  8085  01A766  50E3               	movf	plusw1,w,c
  8086  01A768  0009               	tblrd		*+
  8087  01A76A  58F5               	subwfb	tablat,w,c
  8088  01A76C  0EFC               	movlw	-4
  8089  01A76E  50E3               	movf	plusw1,w,c
  8090  01A770  0009               	tblrd		*+
  8091  01A772  58F5               	subwfb	tablat,w,c
  8092  01A774  B0D8               	btfsc	status,0,c
  8093  01A776  D020               	goto	l10893
  8094                           
  8095                           ;bsoc.c: 184:    soc = BVSOC_TABLE[slot][1];
  8096                           ;stkvar	_slot @ sp[(-3)+2]
  8097  01A778  0EFF               	movlw	-1
  8098  01A77A  50E3               	movf	plusw1,w,c
  8099  01A77C  0D08               	mullw	8
  8100  01A77E  0E04               	movlw	4
  8101  01A780  26F3               	addwf	243,f,c
  8102  01A782  0E00               	movlw	0
  8103  01A784  22F4               	addwfc	244,f,c
  8104  01A786  0EE5               	movlw	low _BVSOC_TABLE
  8105  01A788  24F3               	addwf	243,w,c
  8106  01A78A  6EF6               	movwf	tblptrl,c
  8107  01A78C  0EF9               	movlw	high _BVSOC_TABLE
  8108  01A78E  20F4               	addwfc	244,w,c
  8109  01A790  6EF7               	movwf	tblptrh,c
  8110  01A792                     	if	1	;There are 3 active tblptr bytes
  8111  01A792  6AF8               	clrf	tblptru,c
  8112  01A794  0E00               	movlw	low (__mediumconst shr (0+16))
  8113  01A796  22F8               	addwfc	tblptru,f,c
  8114  01A798                     	endif
  8115  01A798  0009               	tblrd		*+
  8116  01A79A  006F FFD4  F00B    	movff	tablat,btemp+10
  8117  01A7A0  0009               	tblrd		*+
  8118  01A7A2  006F FFD4  F00C    	movff	tablat,btemp+11
  8119                           
  8120                           ;stkvar	_soc @ sp[(-3)+0]
  8121  01A7A8  0EFD               	movlw	-3
  8122  01A7AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8123  01A7B0  0EFE               	movlw	-2
  8124  01A7B2  0060  F033  FFE3   	movff	btemp+11,plusw1
  8125  01A7B8                     l10893:
  8126                           
  8127                           ;bsoc.c: 186:  }
  8128                           ;stkvar	_slot @ sp[(-3)+2]
  8129  01A7B8  0EFF               	movlw	-1
  8130  01A7BA  2AE3               	incf	plusw1,f,c
  8131                           
  8132                           ;stkvar	_slot @ sp[(-3)+2]
  8133  01A7BC  0EFF               	movlw	-1
  8134  01A7BE  006F FF8C  F001    	movff	plusw1,btemp
  8135  01A7C4  0E19               	movlw	25
  8136  01A7C6  6401               	cpfsgt	btemp^0,c
  8137  01A7C8  D7B9               	goto	l10889
  8138                           
  8139                           ;bsoc.c: 187:  return soc;
  8140                           ;stkvar	_soc @ sp[(-3)+0]
  8141  01A7CA  0EFD               	movlw	-3
  8142  01A7CC  006F FF8C  F001    	movff	plusw1,btemp
  8143  01A7D2  0EFE               	movlw	-2
  8144  01A7D4  006F FF8C  F002    	movff	plusw1,btemp+1
  8145                           
  8146                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8147  01A7DA  0EF9               	movlw	249
  8148  01A7DC  26E1               	addwf	fsr1l,f,c
  8149  01A7DE  0EFF               	movlw	255
  8150  01A7E0  22E2               	addwfc	fsr1h,f,c
  8151  01A7E2  0012               	return		;funcret
  8152  01A7E4                     __end_of_Volts_to_SOC:
  8153                           	opt callstack 0
  8154                           
  8155 ;; *************** function _hid_display *****************
  8156 ;; Defined at:
  8157 ;;		line 17 in file "hid.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;  h               2  [STACK] PTR struct H_data
  8160 ;;		 -> H(7), 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  2  [STACK] PTR struct H_data
  8165 ;; Registers used:
  8166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8167 ;; Tracked objects:
  8168 ;;		On entry : 3F/39
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:   17
  8179 ;; This function calls:
  8180 ;;		_hid_input
  8181 ;; This function is called by:
  8182 ;;		_main
  8183 ;; This function uses a reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text19
  8187  0186CE                     __ptext19:
  8188                           	opt callstack 0
  8189  0186CE                     _hid_display:
  8190                           	opt callstack 13
  8191                           
  8192                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  8193                           ;stkvar	_h @ sp[(0)+-2]
  8194                           
  8195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8196                           ;incstack = 0
  8197  0186CE  0EFE               	movlw	-2
  8198  0186D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8199  0186D6  006F FF8F FFE6     	movff	plusw1,postinc1
  8200  0186DC  EC63  F0D2         	call	_hid_input	;wreg free
  8201                           
  8202                           ;hid.c: 21:  switch (h->h_state) {
  8203  0186E0  D0C6               	goto	l13277
  8204  0186E2                     l13255:
  8205                           
  8206                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  8207                           ;stkvar	_h @ sp[(0)+-2]
  8208  0186E2  0EFE               	movlw	-2
  8209  0186E4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8210  0186EA  0EFF               	movlw	-1
  8211  0186EC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8212  0186F2  0E01               	movlw	1
  8213  0186F4  240B               	addwf	(btemp+10)^0,w,c
  8214  0186F6  6ED9               	movwf	fsr2l,c
  8215  0186F8  0E00               	movlw	0
  8216  0186FA  200C               	addwfc	(btemp+11)^0,w,c
  8217  0186FC  6EDA               	movwf	fsr2h,c
  8218  0186FE  0E01               	movlw	1
  8219  018700  6EDF               	movwf	indf2,c
  8220                           
  8221                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  8222                           ;stkvar	_h @ sp[(0)+-2]
  8223  018702  0EFE               	movlw	-2
  8224  018704  006F FF8F FFD9     	movff	plusw1,fsr2l
  8225  01870A  0EFF               	movlw	-1
  8226  01870C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8227  018712  0E00               	movlw	0
  8228  018714  6EDF               	movwf	indf2,c
  8229                           
  8230                           ;hid.c: 25:   h->wait_enter = 1;
  8231                           ;stkvar	_h @ sp[(0)+-2]
  8232  018716  0EFE               	movlw	-2
  8233  018718  006F FF8C  F00B    	movff	plusw1,btemp+10
  8234  01871E  0EFF               	movlw	-1
  8235  018720  006F FF8C  F00C    	movff	plusw1,btemp+11
  8236  018726  0E04               	movlw	4
  8237  018728  240B               	addwf	(btemp+10)^0,w,c
  8238  01872A  6ED9               	movwf	fsr2l,c
  8239  01872C  0E00               	movlw	0
  8240  01872E  200C               	addwfc	(btemp+11)^0,w,c
  8241  018730  6EDA               	movwf	fsr2h,c
  8242  018732  0E01               	movlw	1
  8243  018734  6EDF               	movwf	indf2,c
  8244                           
  8245                           ;hid.c: 26:   h->wait_select = 1;
  8246                           ;stkvar	_h @ sp[(0)+-2]
  8247  018736  0EFE               	movlw	-2
  8248  018738  006F FF8C  F00B    	movff	plusw1,btemp+10
  8249  01873E  0EFF               	movlw	-1
  8250  018740  006F FF8C  F00C    	movff	plusw1,btemp+11
  8251  018746  0E02               	movlw	2
  8252  018748  240B               	addwf	(btemp+10)^0,w,c
  8253  01874A  6ED9               	movwf	fsr2l,c
  8254  01874C  0E00               	movlw	0
  8255  01874E  200C               	addwfc	(btemp+11)^0,w,c
  8256  018750  6EDA               	movwf	fsr2h,c
  8257  018752  0E01               	movlw	1
  8258  018754  6EDF               	movwf	indf2,c
  8259                           
  8260                           ;hid.c: 27:   h->select_p = SW_OFF;
  8261                           ;stkvar	_h @ sp[(0)+-2]
  8262  018756  0EFE               	movlw	-2
  8263  018758  006F FF8C  F00B    	movff	plusw1,btemp+10
  8264  01875E  0EFF               	movlw	-1
  8265  018760  006F FF8C  F00C    	movff	plusw1,btemp+11
  8266  018766  0E03               	movlw	3
  8267  018768  240B               	addwf	(btemp+10)^0,w,c
  8268  01876A  6ED9               	movwf	fsr2l,c
  8269  01876C  0E00               	movlw	0
  8270  01876E  200C               	addwfc	(btemp+11)^0,w,c
  8271  018770  6EDA               	movwf	fsr2h,c
  8272  018772  0E00               	movlw	0
  8273  018774  6EDF               	movwf	indf2,c
  8274                           
  8275                           ;hid.c: 28:   h->enter_p = SW_OFF;
  8276                           ;stkvar	_h @ sp[(0)+-2]
  8277  018776  0EFE               	movlw	-2
  8278  018778  006F FF8C  F00B    	movff	plusw1,btemp+10
  8279  01877E  0EFF               	movlw	-1
  8280  018780  006F FF8C  F00C    	movff	plusw1,btemp+11
  8281  018786  0E05               	movlw	5
  8282  018788  240B               	addwf	(btemp+10)^0,w,c
  8283  01878A  6ED9               	movwf	fsr2l,c
  8284  01878C  0E00               	movlw	0
  8285  01878E  200C               	addwfc	(btemp+11)^0,w,c
  8286  018790  6EDA               	movwf	fsr2h,c
  8287  018792  0E00               	movlw	0
  8288  018794  D06A               	goto	L4
  8289  018796                     l13267:
  8290                           
  8291                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8292                           ;stkvar	_h @ sp[(0)+-2]
  8293  018796  0EFE               	movlw	-2
  8294  018798  006F FF8C  F00B    	movff	plusw1,btemp+10
  8295  01879E  0EFF               	movlw	-1
  8296  0187A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8297  0187A6  0E02               	movlw	2
  8298  0187A8  240B               	addwf	(btemp+10)^0,w,c
  8299  0187AA  6ED9               	movwf	fsr2l,c
  8300  0187AC  0E00               	movlw	0
  8301  0187AE  200C               	addwfc	(btemp+11)^0,w,c
  8302  0187B0  6EDA               	movwf	fsr2h,c
  8303  0187B2  50DF               	movf	indf2,w,c
  8304  0187B4  A4D8               	btfss	status,2,c
  8305  0187B6  D076               	goto	l2050
  8306                           
  8307                           ;stkvar	_h @ sp[(0)+-2]
  8308  0187B8  0EFE               	movlw	-2
  8309  0187BA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8310  0187C0  0EFF               	movlw	-1
  8311  0187C2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8312  0187C8  0E03               	movlw	3
  8313  0187CA  240B               	addwf	(btemp+10)^0,w,c
  8314  0187CC  6ED9               	movwf	fsr2l,c
  8315  0187CE  0E00               	movlw	0
  8316  0187D0  200C               	addwfc	(btemp+11)^0,w,c
  8317  0187D2  6EDA               	movwf	fsr2h,c
  8318  0187D4  50DF               	movf	indf2,w,c
  8319  0187D6  A4D8               	btfss	status,2,c
  8320  0187D8  D065               	goto	l2050
  8321                           
  8322                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  8323                           ;stkvar	_h @ sp[(0)+-2]
  8324  0187DA  0EFE               	movlw	-2
  8325  0187DC  006F FF8C  F00B    	movff	plusw1,btemp+10
  8326  0187E2  0EFF               	movlw	-1
  8327  0187E4  006F FF8C  F00C    	movff	plusw1,btemp+11
  8328  0187EA  0E06               	movlw	6
  8329  0187EC  240B               	addwf	(btemp+10)^0,w,c
  8330  0187EE  6ED9               	movwf	fsr2l,c
  8331  0187F0  0E00               	movlw	0
  8332  0187F2  200C               	addwfc	(btemp+11)^0,w,c
  8333  0187F4  6EDA               	movwf	fsr2h,c
  8334                           
  8335                           ;stkvar	_h @ sp[(0)+-2]
  8336  0187F6  0EFE               	movlw	-2
  8337  0187F8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8338  0187FE  0EFF               	movlw	-1
  8339  018800  006F FF8C  F00C    	movff	plusw1,btemp+11
  8340  018806  0E06               	movlw	6
  8341  018808  240B               	addwf	(btemp+10)^0,w,c
  8342  01880A  6EE9               	movwf	fsr0l,c
  8343  01880C  0E00               	movlw	0
  8344  01880E  200C               	addwfc	(btemp+11)^0,w,c
  8345  018810  6EEA               	movwf	fsr0h,c
  8346  018812  2AEF               	incf	indf0,f,c
  8347  018814  50EF               	movf	indf0,w,c
  8348  018816  0B03               	andlw	3
  8349  018818  6EDF               	movwf	indf2,c
  8350                           
  8351                           ;hid.c: 34:    h->hid_display = h->sequence;
  8352                           ;stkvar	_h @ sp[(0)+-2]
  8353  01881A  0EFE               	movlw	-2
  8354  01881C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8355  018822  0EFF               	movlw	-1
  8356  018824  006F FF8C  F00C    	movff	plusw1,btemp+11
  8357  01882A  0E06               	movlw	6
  8358  01882C  240B               	addwf	(btemp+10)^0,w,c
  8359  01882E  6ED9               	movwf	fsr2l,c
  8360  018830  0E00               	movlw	0
  8361  018832  200C               	addwfc	(btemp+11)^0,w,c
  8362  018834  6EDA               	movwf	fsr2h,c
  8363                           
  8364                           ;stkvar	_h @ sp[(0)+-2]
  8365  018836  0EFE               	movlw	-2
  8366  018838  006F FF8F FFE9     	movff	plusw1,fsr0l
  8367  01883E  0EFF               	movlw	-1
  8368  018840  006F FF8F FFEA     	movff	plusw1,fsr0h
  8369  018846  006F FF7F FFEF     	movff	indf2,indf0
  8370                           
  8371                           ;hid.c: 35:    h->wait_select = 1;
  8372                           ;stkvar	_h @ sp[(0)+-2]
  8373  01884C  0EFE               	movlw	-2
  8374  01884E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8375  018854  0EFF               	movlw	-1
  8376  018856  006F FF8C  F00C    	movff	plusw1,btemp+11
  8377  01885C  0E02               	movlw	2
  8378  01885E  240B               	addwf	(btemp+10)^0,w,c
  8379  018860  6ED9               	movwf	fsr2l,c
  8380  018862  0E00               	movlw	0
  8381  018864  200C               	addwfc	(btemp+11)^0,w,c
  8382  018866  6EDA               	movwf	fsr2h,c
  8383  018868  0E01               	movlw	1
  8384  01886A                     L4:
  8385  01886A  6EDF               	movwf	indf2,c
  8386  01886C  D01B               	goto	l2050
  8387  01886E                     l13277:
  8388                           
  8389                           ;stkvar	_h @ sp[(0)+-2]
  8390  01886E  0EFE               	movlw	-2
  8391  018870  006F FF8C  F00B    	movff	plusw1,btemp+10
  8392  018876  0EFF               	movlw	-1
  8393  018878  006F FF8C  F00C    	movff	plusw1,btemp+11
  8394  01887E  0E01               	movlw	1
  8395  018880  240B               	addwf	(btemp+10)^0,w,c
  8396  018882  6ED9               	movwf	fsr2l,c
  8397  018884  0E00               	movlw	0
  8398  018886  200C               	addwfc	(btemp+11)^0,w,c
  8399  018888  6EDA               	movwf	fsr2h,c
  8400  01888A  50DF               	movf	indf2,w,c
  8401  01888C  6E0B               	movwf	(btemp+10)^0,c
  8402  01888E  6A0C               	clrf	(btemp+11)^0,c
  8403                           
  8404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8405                           ; Switch size 1, requested type "simple"
  8406                           ; Number of cases is 1, Range of values is 0 to 0
  8407                           ; switch strategies available:
  8408                           ; Name         Instructions Cycles
  8409                           ; simple_byte            4     3 (average)
  8410                           ;	Chosen strategy is simple_byte
  8411  018890  500C               	movf	(btemp+11)^0,w,c
  8412  018892  0A00               	xorlw	0	; case 0
  8413  018894  A4D8               	btfss	status,2,c
  8414  018896  D77F               	goto	l13267
  8415                           
  8416                           ; Switch size 1, requested type "simple"
  8417                           ; Number of cases is 2, Range of values is 0 to 1
  8418                           ; switch strategies available:
  8419                           ; Name         Instructions Cycles
  8420                           ; simple_byte            7     4 (average)
  8421                           ;	Chosen strategy is simple_byte
  8422  018898  500B               	movf	(btemp+10)^0,w,c
  8423  01889A  0A00               	xorlw	0	; case 0
  8424  01889C  B4D8               	btfsc	status,2,c
  8425  01889E  D721               	goto	l13255
  8426  0188A0  0A01               	xorlw	1	; case 1
  8427  0188A2  D779               	goto	l13267
  8428  0188A4                     l2050:
  8429                           
  8430                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8431  0188A4  52E5               	movf	postdec1,f,c
  8432  0188A6  52E5               	movf	postdec1,f,c
  8433  0188A8  0012               	return		;funcret
  8434  0188AA                     __end_of_hid_display:
  8435                           	opt callstack 0
  8436                           
  8437 ;; *************** function _hid_input *****************
  8438 ;; Defined at:
  8439 ;;		line 3 in file "hid.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  h               2  [STACK] PTR struct H_data
  8442 ;;		 -> H(7), 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;		None
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  2  [STACK] PTR struct H_data
  8447 ;; Registers used:
  8448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/39
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8458 ;;Total ram usage:        0 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; Hardware stack levels required when called:   16
  8461 ;; This function calls:
  8462 ;;		_get_switch
  8463 ;; This function is called by:
  8464 ;;		_hid_display
  8465 ;; This function uses a reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text20
  8469  01A4C6                     __ptext20:
  8470                           	opt callstack 0
  8471  01A4C6                     _hid_input:
  8472                           	opt callstack 13
  8473                           
  8474                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8475                           
  8476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8477                           ;incstack = 0
  8478  01A4C6  0E02               	movlw	2
  8479  01A4C8  6EE6               	movwf	postinc1,c
  8480  01A4CA  EC7D  F0DF         	call	_get_switch	;wreg free
  8481  01A4CE  5001               	movf	btemp^0,w,c
  8482  01A4D0  B4D8               	btfsc	status,2,c
  8483  01A4D2  D02C               	goto	l13095
  8484                           
  8485                           ;hid.c: 6:   h->wait_select = 0;
  8486                           ;stkvar	_h @ sp[(0)+-2]
  8487  01A4D4  0EFE               	movlw	-2
  8488  01A4D6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8489  01A4DC  0EFF               	movlw	-1
  8490  01A4DE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8491  01A4E4  0E02               	movlw	2
  8492  01A4E6  240B               	addwf	(btemp+10)^0,w,c
  8493  01A4E8  6ED9               	movwf	fsr2l,c
  8494  01A4EA  0E00               	movlw	0
  8495  01A4EC  200C               	addwfc	(btemp+11)^0,w,c
  8496  01A4EE  6EDA               	movwf	fsr2h,c
  8497  01A4F0  0E00               	movlw	0
  8498  01A4F2  6EDF               	movwf	indf2,c
  8499                           
  8500                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8501  01A4F4  0E02               	movlw	2
  8502  01A4F6  6EE6               	movwf	postinc1,c
  8503  01A4F8  EC7D  F0DF         	call	_get_switch	;wreg free
  8504  01A4FC  5001               	movf	btemp^0,w,c
  8505  01A4FE  B4D8               	btfsc	status,2,c
  8506  01A500  D003               	goto	u12430
  8507  01A502  6A0C               	clrf	(btemp+11)^0,c
  8508  01A504  2A0C               	incf	(btemp+11)^0,f,c
  8509  01A506  D001               	goto	u12448
  8510  01A508                     u12430:
  8511  01A508  6A0C               	clrf	(btemp+11)^0,c
  8512  01A50A                     u12448:
  8513                           
  8514                           ;stkvar	_h @ sp[(0)+-2]
  8515  01A50A  0EFE               	movlw	-2
  8516  01A50C  006F FF8C  F009    	movff	plusw1,btemp+8
  8517  01A512  0EFF               	movlw	-1
  8518  01A514  006F FF8C  F00A    	movff	plusw1,btemp+9
  8519  01A51A  0E03               	movlw	3
  8520  01A51C  2409               	addwf	(btemp+8)^0,w,c
  8521  01A51E  6ED9               	movwf	fsr2l,c
  8522  01A520  0E00               	movlw	0
  8523  01A522  200A               	addwfc	(btemp+9)^0,w,c
  8524  01A524  6EDA               	movwf	fsr2h,c
  8525  01A526  0060  F033  FFDF   	movff	btemp+11,indf2
  8526  01A52C                     l13095:
  8527                           
  8528                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8529  01A52C  0E03               	movlw	3
  8530  01A52E  6EE6               	movwf	postinc1,c
  8531  01A530  EC7D  F0DF         	call	_get_switch	;wreg free
  8532  01A534  5001               	movf	btemp^0,w,c
  8533  01A536  B4D8               	btfsc	status,2,c
  8534  01A538  D02C               	goto	l2041
  8535                           
  8536                           ;hid.c: 11:   h->wait_enter = 0;
  8537                           ;stkvar	_h @ sp[(0)+-2]
  8538  01A53A  0EFE               	movlw	-2
  8539  01A53C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8540  01A542  0EFF               	movlw	-1
  8541  01A544  006F FF8C  F00C    	movff	plusw1,btemp+11
  8542  01A54A  0E04               	movlw	4
  8543  01A54C  240B               	addwf	(btemp+10)^0,w,c
  8544  01A54E  6ED9               	movwf	fsr2l,c
  8545  01A550  0E00               	movlw	0
  8546  01A552  200C               	addwfc	(btemp+11)^0,w,c
  8547  01A554  6EDA               	movwf	fsr2h,c
  8548  01A556  0E00               	movlw	0
  8549  01A558  6EDF               	movwf	indf2,c
  8550                           
  8551                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8552  01A55A  0E03               	movlw	3
  8553  01A55C  6EE6               	movwf	postinc1,c
  8554  01A55E  EC7D  F0DF         	call	_get_switch	;wreg free
  8555  01A562  5001               	movf	btemp^0,w,c
  8556  01A564  B4D8               	btfsc	status,2,c
  8557  01A566  D003               	goto	u12460
  8558  01A568  6A0C               	clrf	(btemp+11)^0,c
  8559  01A56A  2A0C               	incf	(btemp+11)^0,f,c
  8560  01A56C  D001               	goto	u12478
  8561  01A56E                     u12460:
  8562  01A56E  6A0C               	clrf	(btemp+11)^0,c
  8563  01A570                     u12478:
  8564                           
  8565                           ;stkvar	_h @ sp[(0)+-2]
  8566  01A570  0EFE               	movlw	-2
  8567  01A572  006F FF8C  F009    	movff	plusw1,btemp+8
  8568  01A578  0EFF               	movlw	-1
  8569  01A57A  006F FF8C  F00A    	movff	plusw1,btemp+9
  8570  01A580  0E05               	movlw	5
  8571  01A582  2409               	addwf	(btemp+8)^0,w,c
  8572  01A584  6ED9               	movwf	fsr2l,c
  8573  01A586  0E00               	movlw	0
  8574  01A588  200A               	addwfc	(btemp+9)^0,w,c
  8575  01A58A  6EDA               	movwf	fsr2h,c
  8576  01A58C  0060  F033  FFDF   	movff	btemp+11,indf2
  8577  01A592                     l2041:
  8578                           
  8579                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8580  01A592  52E5               	movf	postdec1,f,c
  8581  01A594  52E5               	movf	postdec1,f,c
  8582  01A596  0012               	return		;funcret
  8583  01A598                     __end_of_hid_input:
  8584                           	opt callstack 0
  8585                           
  8586 ;; *************** function _get_switch *****************
  8587 ;; Defined at:
  8588 ;;		line 18 in file "dio.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;  i               1  [STACK] const unsigned char 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1  [STACK] enum E17021
  8595 ;; Registers used:
  8596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/39
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8606 ;;Total ram usage:        0 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; Hardware stack levels required when called:   15
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		_main
  8613 ;;		_hid_input
  8614 ;; This function uses a reentrant model
  8615 ;;
  8616                           
  8617                           	psect	text21
  8618  01BEFA                     __ptext21:
  8619                           	opt callstack 0
  8620  01BEFA                     _get_switch:
  8621                           	opt callstack 13
  8622                           
  8623                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  8624                           ;stkvar	_i @ sp[(0)+-1]
  8625                           
  8626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8627                           ;incstack = 0
  8628  01BEFA  0EFF               	movlw	-1
  8629  01BEFC  006F FF8C  F001    	movff	plusw1,btemp
  8630  01BF02  0E03               	movlw	3
  8631  01BF04  6401               	cpfsgt	btemp^0,c
  8632  01BF06  D002               	goto	l10105
  8633                           
  8634                           ;dio.c: 21:   return SW_OFF;
  8635  01BF08  0E00               	movlw	0
  8636  01BF0A  D00A               	goto	L5
  8637  01BF0C                     l10105:
  8638                           
  8639                           ;dio.c: 23:  return S.button[i].sw;
  8640                           ;stkvar	_i @ sp[(0)+-1]
  8641  01BF0C  0EFF               	movlw	-1
  8642  01BF0E  50E3               	movf	plusw1,w,c
  8643  01BF10  0D05               	mullw	5
  8644  01BF12  0E54               	movlw	low _S
  8645  01BF14  24F3               	addwf	243,w,c
  8646  01BF16  6ED9               	movwf	fsr2l,c
  8647  01BF18  0E02               	movlw	high _S
  8648  01BF1A  20F4               	addwfc	prodh,w,c
  8649  01BF1C  6EDA               	movwf	fsr2h,c
  8650  01BF1E  50DF               	movf	indf2,w,c
  8651  01BF20                     L5:
  8652  01BF20  6E01               	movwf	btemp^0,c
  8653                           
  8654                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8655  01BF22  52E5               	movf	postdec1,f,c
  8656  01BF24  0012               	return		;funcret
  8657  01BF26                     __end_of_get_switch:
  8658                           	opt callstack 0
  8659                           
  8660 ;; *************** function _esr_check *****************
  8661 ;; Defined at:
  8662 ;;		line 196 in file "bsoc.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;  fsm             1  [STACK] const unsigned char 
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;		None
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  4  [STACK] float 
  8669 ;; Registers used:
  8670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8680 ;;Total ram usage:        0 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:   18
  8683 ;; This function calls:
  8684 ;;		_StartTimer
  8685 ;;		_TimerDone
  8686 ;;		___fldiv
  8687 ;;		___flsub
  8688 ;;		_conv_raw_result
  8689 ;;		_fabsf
  8690 ;;		_set_load_relay_one
  8691 ;;		_set_load_relay_two
  8692 ;;		_update_adc_result
  8693 ;; This function is called by:
  8694 ;;		_main
  8695 ;; This function uses a reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text22
  8699  017188                     __ptext22:
  8700                           	opt callstack 0
  8701  017188                     _esr_check:
  8702                           	opt callstack 12
  8703                           
  8704                           ;bsoc.c: 196: float esr_check(const uint8_t fsm);bsoc.c: 197: {;bsoc.c: 198:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 200:  if (fsm) {
  8705                           ;stkvar	_fsm @ sp[(0)+-1]
  8706                           
  8707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8708                           ;incstack = 0
  8709  017188  0EFF               	movlw	-1
  8710  01718A  50E3               	movf	plusw1,w,c
  8711  01718C  B4D8               	btfsc	status,2,c
  8712  01718E  D149               	goto	l11213
  8713                           
  8714                           ;bsoc.c: 201:   esr_state = 0;
  8715  017190  0100               	movlb	0	; () banked
  8716  017192  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;bsoc.c: 202:   return -10.0;
  8720  017194  0E00               	movlw	0
  8721  017196  6E01               	movwf	btemp^0,c
  8722  017198  0E00               	movlw	0
  8723  01719A  6E02               	movwf	(btemp+1)^0,c
  8724  01719C  0E20               	movlw	32
  8725  01719E  6E03               	movwf	(btemp+2)^0,c
  8726  0171A0  0EC1               	movlw	193
  8727  0171A2  D15B               	goto	L6
  8728  0171A4                     l11145:
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;bsoc.c: 207:   StartTimer(TMR_ESR, 10000);
  8732  0171A4  0E10               	movlw	16
  8733  0171A6  6EE6               	movwf	postinc1,c
  8734  0171A8  0E27               	movlw	39
  8735  0171AA  6EE6               	movwf	postinc1,c
  8736  0171AC  0E0C               	movlw	12
  8737  0171AE  6EE6               	movwf	postinc1,c
  8738  0171B0  EC94  F0DD         	call	_StartTimer	;wreg free
  8739  0171B4                     l11147:
  8740                           
  8741                           ;bsoc.c: 208:   esr_state++;
  8742  0171B4  0100               	movlb	0	; () banked
  8743  0171B6  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8744                           
  8745                           ;bsoc.c: 209:   break;
  8746  0171B8  D149               	goto	l11215
  8747  0171BA                     l11149:
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;bsoc.c: 214:   set_load_relay_one(0);
  8751  0171BA  0E00               	movlw	0
  8752  0171BC  6EE6               	movwf	postinc1,c
  8753  0171BE  EC7B  F0E2         	call	_set_load_relay_one	;wreg free
  8754                           
  8755                           ;bsoc.c: 215:   set_load_relay_two(0);
  8756  0171C2  0E00               	movlw	0
  8757  0171C4  6EE6               	movwf	postinc1,c
  8758  0171C6  EC73  F0E2         	call	_set_load_relay_two	;wreg free
  8759                           
  8760                           ;bsoc.c: 216:   if (TimerDone(TMR_ESR)) {
  8761  0171CA  0E0C               	movlw	12
  8762  0171CC  6EE6               	movwf	postinc1,c
  8763  0171CE  ECE9  F0DF         	call	_TimerDone	;wreg free
  8764  0171D2  5001               	movf	btemp^0,w,c
  8765  0171D4  B4D8               	btfsc	status,2,c
  8766  0171D6  D009               	goto	l11155
  8767                           
  8768                           ;bsoc.c: 217:    StartTimer(TMR_ESR, 10000);
  8769  0171D8  0E10               	movlw	16
  8770  0171DA  6EE6               	movwf	postinc1,c
  8771  0171DC  0E27               	movlw	39
  8772  0171DE  6EE6               	movwf	postinc1,c
  8773  0171E0  0E0C               	movlw	12
  8774  0171E2  6EE6               	movwf	postinc1,c
  8775  0171E4  EC94  F0DD         	call	_StartTimer	;wreg free
  8776                           
  8777                           ;bsoc.c: 218:   } else {
  8778  0171E8  D006               	goto	l11159
  8779  0171EA                     l11155:
  8780                           
  8781                           ;bsoc.c: 219:    return -2.0;
  8782  0171EA  0E00               	movlw	0
  8783  0171EC  6E01               	movwf	btemp^0,c
  8784  0171EE  0E00               	movlw	0
  8785  0171F0  6E02               	movwf	(btemp+1)^0,c
  8786  0171F2  0E00               	movlw	0
  8787  0171F4  D066               	goto	L8
  8788  0171F6                     l11159:
  8789                           
  8790                           ;bsoc.c: 224:   update_adc_result();
  8791  0171F6  EC13  F0DE         	call	_update_adc_result	;wreg free
  8792                           
  8793                           ;bsoc.c: 225:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8794  0171FA  0E00               	movlw	0
  8795  0171FC  6EE6               	movwf	postinc1,c
  8796  0171FE  0E04               	movlw	4
  8797  017200  6EE6               	movwf	postinc1,c
  8798  017202  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8799  017206  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8800  01720C  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8801  017212  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8802  017218  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8803  01721E  D7CA               	goto	l11147
  8804  017220                     l11165:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;bsoc.c: 229:   set_load_relay_one(1);
  8808  017220  0E01               	movlw	1
  8809  017222  6EE6               	movwf	postinc1,c
  8810  017224  EC7B  F0E2         	call	_set_load_relay_one	;wreg free
  8811                           
  8812                           ;bsoc.c: 230:   if (TimerDone(TMR_ESR)) {
  8813  017228  0E0C               	movlw	12
  8814  01722A  6EE6               	movwf	postinc1,c
  8815  01722C  ECE9  F0DF         	call	_TimerDone	;wreg free
  8816  017230  5001               	movf	btemp^0,w,c
  8817  017232  B4D8               	btfsc	status,2,c
  8818  017234  D009               	goto	l11171
  8819                           
  8820                           ;bsoc.c: 231:    StartTimer(TMR_ESR, 10000);
  8821  017236  0E10               	movlw	16
  8822  017238  6EE6               	movwf	postinc1,c
  8823  01723A  0E27               	movlw	39
  8824  01723C  6EE6               	movwf	postinc1,c
  8825  01723E  0E0C               	movlw	12
  8826  017240  6EE6               	movwf	postinc1,c
  8827  017242  EC94  F0DD         	call	_StartTimer	;wreg free
  8828                           
  8829                           ;bsoc.c: 232:   } else {
  8830  017246  D006               	goto	l11175
  8831  017248                     l11171:
  8832                           
  8833                           ;bsoc.c: 233:    return -3.0;
  8834  017248  0E00               	movlw	0
  8835  01724A  6E01               	movwf	btemp^0,c
  8836  01724C  0E00               	movlw	0
  8837  01724E  6E02               	movwf	(btemp+1)^0,c
  8838  017250  0E40               	movlw	64
  8839  017252  D037               	goto	L8
  8840  017254                     l11175:
  8841                           
  8842                           ;bsoc.c: 236:   update_adc_result();
  8843  017254  EC13  F0DE         	call	_update_adc_result	;wreg free
  8844                           
  8845                           ;bsoc.c: 237:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8846  017258  0E00               	movlw	0
  8847  01725A  6EE6               	movwf	postinc1,c
  8848  01725C  0E04               	movlw	4
  8849  01725E  6EE6               	movwf	postinc1,c
  8850  017260  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8851  017264  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8852  01726A  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8853  017270  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8854  017276  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8855                           
  8856                           ;bsoc.c: 238:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8857  01727C  0E00               	movlw	0
  8858  01727E  6EE6               	movwf	postinc1,c
  8859  017280  0E00               	movlw	0
  8860  017282  6EE6               	movwf	postinc1,c
  8861  017284  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8862  017288  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8863  01728E  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8864  017294  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8865  01729A  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8866  0172A0  D789               	goto	l11147
  8867  0172A2                     l11183:
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;bsoc.c: 242:   set_load_relay_two(1);
  8871  0172A2  0E01               	movlw	1
  8872  0172A4  6EE6               	movwf	postinc1,c
  8873  0172A6  EC73  F0E2         	call	_set_load_relay_two	;wreg free
  8874                           
  8875                           ;bsoc.c: 243:   if (!TimerDone(TMR_ESR))
  8876  0172AA  0E0C               	movlw	12
  8877  0172AC  6EE6               	movwf	postinc1,c
  8878  0172AE  ECE9  F0DF         	call	_TimerDone	;wreg free
  8879  0172B2  5001               	movf	btemp^0,w,c
  8880  0172B4  A4D8               	btfss	status,2,c
  8881  0172B6  D008               	goto	l11191
  8882                           
  8883                           ;bsoc.c: 244:    return -4.0;
  8884  0172B8  0E00               	movlw	0
  8885  0172BA  6E01               	movwf	btemp^0,c
  8886  0172BC  0E00               	movlw	0
  8887  0172BE  6E02               	movwf	(btemp+1)^0,c
  8888  0172C0  0E80               	movlw	128
  8889  0172C2                     L8:
  8890  0172C2  6E03               	movwf	(btemp+2)^0,c
  8891  0172C4  0EC0               	movlw	192
  8892  0172C6  D0C9               	goto	L6
  8893  0172C8                     l11191:
  8894                           
  8895                           ;bsoc.c: 246:   update_adc_result();
  8896  0172C8  EC13  F0DE         	call	_update_adc_result	;wreg free
  8897                           
  8898                           ;bsoc.c: 247:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8899  0172CC  0E00               	movlw	0
  8900  0172CE  6EE6               	movwf	postinc1,c
  8901  0172D0  0E04               	movlw	4
  8902  0172D2  6EE6               	movwf	postinc1,c
  8903  0172D4  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8904  0172D8  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8905  0172DE  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8906  0172E4  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8907  0172EA  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8908                           
  8909                           ;bsoc.c: 248:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8910  0172F0  0E00               	movlw	0
  8911  0172F2  6EE6               	movwf	postinc1,c
  8912  0172F4  0E00               	movlw	0
  8913  0172F6  6EE6               	movwf	postinc1,c
  8914  0172F8  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8915  0172FC  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8916  017302  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8917  017308  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8918  01730E  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8919                           
  8920                           ;bsoc.c: 250:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8921  017314  EE22  F011         	lfsr	2,_C+274	;volatile
  8922  017318  006F FF7B FFE6     	movff	postinc2,postinc1
  8923  01731E  006F FF7B FFE6     	movff	postinc2,postinc1
  8924  017324  006F FF7B FFE6     	movff	postinc2,postinc1
  8925  01732A  006F FF7B FFE6     	movff	postinc2,postinc1
  8926  017330  EE22  F00D         	lfsr	2,_C+270	;volatile
  8927  017334  006F FF7B FFE6     	movff	postinc2,postinc1
  8928  01733A  006F FF7B FFE6     	movff	postinc2,postinc1
  8929  017340  006F FF7B FFE6     	movff	postinc2,postinc1
  8930  017346  006F FF7B FFE6     	movff	postinc2,postinc1
  8931  01734C  ECEE  F0DC         	call	___flsub	;wreg free
  8932  017350  0060  F007  FFE6   	movff	btemp,postinc1
  8933  017356  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8934  01735C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8935  017362  0060  F013  FFE6   	movff	btemp+3,postinc1
  8936  017368  EE22  F01D         	lfsr	2,_C+286	;volatile
  8937  01736C  006F FF7B FFE6     	movff	postinc2,postinc1
  8938  017372  006F FF7B FFE6     	movff	postinc2,postinc1
  8939  017378  006F FF7B FFE6     	movff	postinc2,postinc1
  8940  01737E  006F FF7B FFE6     	movff	postinc2,postinc1
  8941  017384  EE22  F019         	lfsr	2,_C+282	;volatile
  8942  017388  006F FF7B FFE6     	movff	postinc2,postinc1
  8943  01738E  006F FF7B FFE6     	movff	postinc2,postinc1
  8944  017394  006F FF7B FFE6     	movff	postinc2,postinc1
  8945  01739A  006F FF7B FFE6     	movff	postinc2,postinc1
  8946  0173A0  ECEE  F0DC         	call	___flsub	;wreg free
  8947  0173A4  0060  F007  FFE6   	movff	btemp,postinc1
  8948  0173AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8949  0173B0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8950  0173B6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8951  0173BC  ECD8  F0A6         	call	___fldiv	;wreg free
  8952  0173C0  0060  F007  FFE6   	movff	btemp,postinc1
  8953  0173C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8954  0173CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8955  0173D2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8956  0173D8  ECA6  F0D4         	call	_fabsf	;wreg free
  8957  0173DC  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8958  0173E2  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8959  0173E8  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8960  0173EE  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8961                           
  8962                           ;bsoc.c: 251:   set_load_relay_one(0);
  8963  0173F4  0E00               	movlw	0
  8964  0173F6  6EE6               	movwf	postinc1,c
  8965  0173F8  EC7B  F0E2         	call	_set_load_relay_one	;wreg free
  8966                           
  8967                           ;bsoc.c: 252:   set_load_relay_two(0);
  8968  0173FC  0E00               	movlw	0
  8969  0173FE  6EE6               	movwf	postinc1,c
  8970  017400  EC73  F0E2         	call	_set_load_relay_two	;wreg free
  8971                           
  8972                           ;bsoc.c: 253:   esr_state = 0;
  8973  017404  0100               	movlb	0	; () banked
  8974  017406  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;bsoc.c: 254:   return C.esr;
  8978  017408  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8979  01740E  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8980  017414  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8981  01741A  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8982  017420  D01D               	goto	l2162
  8983  017422                     l11213:
  8984  017422  0100               	movlb	0	; () banked
  8985  017424  51A4               	movf	esr_check@esr_state& (0+255),w,b
  8986  017426  6E0B               	movwf	(btemp+10)^0,c
  8987  017428  6A0C               	clrf	(btemp+11)^0,c
  8988                           
  8989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8990                           ; Switch size 1, requested type "simple"
  8991                           ; Number of cases is 1, Range of values is 0 to 0
  8992                           ; switch strategies available:
  8993                           ; Name         Instructions Cycles
  8994                           ; simple_byte            4     3 (average)
  8995                           ;	Chosen strategy is simple_byte
  8996  01742A  500C               	movf	(btemp+11)^0,w,c
  8997  01742C  0A00               	xorlw	0	; case 0
  8998  01742E  A4D8               	btfss	status,2,c
  8999  017430  D00D               	goto	l11215
  9000                           
  9001                           ; BSR set to: 0
  9002                           ; Switch size 1, requested type "simple"
  9003                           ; Number of cases is 4, Range of values is 0 to 3
  9004                           ; switch strategies available:
  9005                           ; Name         Instructions Cycles
  9006                           ; simple_byte           13     7 (average)
  9007                           ;	Chosen strategy is simple_byte
  9008  017432  500B               	movf	(btemp+10)^0,w,c
  9009  017434  0A00               	xorlw	0	; case 0
  9010  017436  B4D8               	btfsc	status,2,c
  9011  017438  D6B5               	goto	l11145
  9012  01743A  0A01               	xorlw	1	; case 1
  9013  01743C  B4D8               	btfsc	status,2,c
  9014  01743E  D6BD               	goto	l11149
  9015  017440  0A03               	xorlw	3	; case 2
  9016  017442  B4D8               	btfsc	status,2,c
  9017  017444  D6ED               	goto	l11165
  9018  017446  0A01               	xorlw	1	; case 3
  9019  017448  B4D8               	btfsc	status,2,c
  9020  01744A  D72B               	goto	l11183
  9021  01744C                     l11215:
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;bsoc.c: 259:  return -1.0;
  9025  01744C  0E00               	movlw	0
  9026  01744E  6E01               	movwf	btemp^0,c
  9027  017450  0E00               	movlw	0
  9028  017452  6E02               	movwf	(btemp+1)^0,c
  9029  017454  0E80               	movlw	128
  9030  017456  6E03               	movwf	(btemp+2)^0,c
  9031  017458  0EBF               	movlw	191
  9032  01745A                     L6:
  9033  01745A  6E04               	movwf	(btemp+3)^0,c
  9034  01745C                     l2162:
  9035                           
  9036                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9037  01745C  52E5               	movf	postdec1,f,c
  9038  01745E  0012               	return		;funcret
  9039  017460                     __end_of_esr_check:
  9040                           	opt callstack 0
  9041                           
  9042 ;; *************** function _update_adc_result *****************
  9043 ;; Defined at:
  9044 ;;		line 98 in file "daq.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;		None
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1  [STACK] _Bool 
  9051 ;; Registers used:
  9052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9062 ;;Total ram usage:        0 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; Hardware stack levels required when called:   17
  9065 ;; This function calls:
  9066 ;;		_StartTimer
  9067 ;;		_TimerDone
  9068 ;;		_check_adc_scan
  9069 ;;		_clear_adc_scan
  9070 ;;		_start_adc_scan
  9071 ;; This function is called by:
  9072 ;;		_esr_check
  9073 ;; This function uses a reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text23
  9077  01BC26                     __ptext23:
  9078                           	opt callstack 0
  9079  01BC26                     _update_adc_result:
  9080                           	opt callstack 12
  9081                           
  9082                           ;daq.c: 100:  if (R.done) {
  9083                           
  9084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9085                           ;incstack = 0
  9086  01BC26  0100               	movlb	0	; () banked
  9087  01BC28  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9088  01BC2A  B4D8               	btfsc	status,2,c
  9089  01BC2C  0012               	return	
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;daq.c: 101:   clear_adc_scan();
  9093  01BC2E  ECE7  F0E2         	call	_clear_adc_scan	;wreg free
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;daq.c: 102:   start_adc_scan();
  9097  01BC32  EC0A  F0DA         	call	_start_adc_scan	;wreg free
  9098                           
  9099                           ;daq.c: 103:   StartTimer(TMR_ADC, 200);
  9100  01BC36  0EC8               	movlw	200
  9101  01BC38  6EE6               	movwf	postinc1,c
  9102  01BC3A  0E00               	movlw	0
  9103  01BC3C  6EE6               	movwf	postinc1,c
  9104  01BC3E  0E01               	movlw	1
  9105  01BC40  6EE6               	movwf	postinc1,c
  9106  01BC42  EC94  F0DD         	call	_StartTimer	;wreg free
  9107  01BC46                     l10685:
  9108  01BC46  0E01               	movlw	1
  9109  01BC48  6EE6               	movwf	postinc1,c
  9110  01BC4A  ECE9  F0DF         	call	_TimerDone	;wreg free
  9111  01BC4E  5001               	movf	btemp^0,w,c
  9112  01BC50  A4D8               	btfss	status,2,c
  9113  01BC52  0012               	return	
  9114  01BC54  ECD7  F0E2         	call	_check_adc_scan	;wreg free
  9115  01BC58  5001               	movf	btemp^0,w,c
  9116  01BC5A  A4D8               	btfss	status,2,c
  9117  01BC5C  0012               	return	
  9118  01BC5E  D7F3               	goto	l10685
  9119  01BC60                     __end_of_update_adc_result:
  9120                           	opt callstack 0
  9121                           
  9122 ;; *************** function _start_adc_scan *****************
  9123 ;; Defined at:
  9124 ;;		line 59 in file "daq.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1  [STACK] _Bool 
  9131 ;; Registers used:
  9132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 1/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9142 ;;Total ram usage:        0 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; Hardware stack levels required when called:   16
  9145 ;; This function calls:
  9146 ;;		_ADCC_DischargeSampleCapacitor
  9147 ;;		_ADCC_SetADIInterruptHandler
  9148 ;;		_ADCC_SetADTIInterruptHandler
  9149 ;;		_ADCC_StartConversion
  9150 ;; This function is called by:
  9151 ;;		_main
  9152 ;;		_update_adc_result
  9153 ;; This function uses a reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text24
  9157  01B414                     __ptext24:
  9158                           	opt callstack 0
  9159  01B414                     _start_adc_scan:
  9160                           	opt callstack 14
  9161                           
  9162                           ;daq.c: 61:  if (R.done)
  9163                           
  9164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9165                           ;incstack = 0
  9166  01B414  0100               	movlb	0	; () banked
  9167  01B416  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9168  01B418  A4D8               	btfss	status,2,c
  9169  01B41A  0012               	return	
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;daq.c: 64:  R.scan_index = 0;
  9173  01B41C  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;daq.c: 65:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9177  01B41E  013A               	movlb	58	; () banked
  9178  01B420  5140               	movf	64,w,b	;volatile
  9179  01B422  006E F940  F001    	movff	14928,btemp	;volatile
  9180  01B428  6A02               	clrf	(btemp+1)^0,c
  9181  01B42A  0060  F004  F002   	movff	btemp,btemp+1
  9182  01B430  6A01               	clrf	btemp^0,c
  9183  01B432  2601               	addwf	btemp^0,f,c
  9184  01B434  0E00               	movlw	0
  9185  01B436  2202               	addwfc	(btemp+1)^0,f,c
  9186  01B438  0E77               	movlw	119
  9187  01B43A  1401               	andwf	btemp^0,w,c
  9188  01B43C  0100               	movlb	0	; () banked
  9189  01B43E  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9190  01B440  0E3C               	movlw	60
  9191  01B442  1402               	andwf	(btemp+1)^0,w,c
  9192  01B444  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;daq.c: 66:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9196  01B446  0EF6               	movlw	low _adc_int_handler
  9197  01B448  6EE6               	movwf	postinc1,c
  9198  01B44A  0EC5               	movlw	high _adc_int_handler
  9199  01B44C  6EE6               	movwf	postinc1,c
  9200  01B44E  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9201  01B450  6EE6               	movwf	postinc1,c
  9202  01B452  ECB1  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9203                           
  9204                           ;daq.c: 67:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9205  01B456  0E8C               	movlw	low _adc_int_t_handler
  9206  01B458  6EE6               	movwf	postinc1,c
  9207  01B45A  0EB0               	movlw	high _adc_int_t_handler
  9208  01B45C  6EE6               	movwf	postinc1,c
  9209  01B45E  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9210  01B460  6EE6               	movwf	postinc1,c
  9211  01B462  EC9D  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9212                           
  9213                           ;daq.c: 68:  ADCC_DischargeSampleCapacitor();
  9214  01B466  ECD3  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9215                           
  9216                           ; BSR set to: 62
  9217                           ;daq.c: 69:  ADCC_StartConversion(R.scan_index & 0xf);
  9218  01B46A  0100               	movlb	0	; () banked
  9219  01B46C  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9220  01B46E  0B0F               	andlw	15
  9221  01B470  6EE6               	movwf	postinc1,c
  9222  01B472  EC6A  F0E2         	call	_ADCC_StartConversion	;wreg free
  9223                           
  9224                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9225  01B476  0012               	return		;funcret
  9226  01B478                     __end_of_start_adc_scan:
  9227                           	opt callstack 0
  9228                           
  9229 ;; *************** function _ADCC_StartConversion *****************
  9230 ;; Defined at:
  9231 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  channel         1  [STACK] enum E16136
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  1  [STACK] void 
  9238 ;; Registers used:
  9239 ;;		fsr1l, fsr1h
  9240 ;; Tracked objects:
  9241 ;;		On entry : 3F/0
  9242 ;;		On exit  : 3F/3E
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9249 ;;Total ram usage:        0 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:   15
  9252 ;; This function calls:
  9253 ;;		Nothing
  9254 ;; This function is called by:
  9255 ;;		_start_adc_scan
  9256 ;;		_adc_int_t_handler
  9257 ;; This function uses a reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text25
  9261  01C4D4                     __ptext25:
  9262                           	opt callstack 0
  9263  01C4D4                     _ADCC_StartConversion:
  9264                           	opt callstack 0
  9265                           
  9266                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9267                           ;stkvar	_channel @ sp[(0)+-1]
  9268                           
  9269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9270                           ;incstack = 0
  9271 ;; hardware stack exceeded
  9272  01C4D4  0EFF               	movlw	-1
  9273  01C4D6  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9274                           
  9275                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9276  01C4DC  013E               	movlb	62	; () banked
  9277  01C4DE  8FF8               	bsf	248,7,b	;volatile
  9278                           
  9279                           ; BSR set to: 62
  9280                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9281  01C4E0  81F8               	bsf	248,0,b	;volatile
  9282                           
  9283                           ; BSR set to: 62
  9284                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9285  01C4E2  52E5               	movf	postdec1,f,c
  9286  01C4E4  0012               	return		;funcret
  9287  01C4E6                     __end_of_ADCC_StartConversion:
  9288                           	opt callstack 0
  9289                           
  9290 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9291 ;; Defined at:
  9292 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;		None
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1  [STACK] void 
  9299 ;; Registers used:
  9300 ;;		wreg, status,2
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 3F/3E
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9310 ;;Total ram usage:        0 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:   15
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		_start_adc_scan
  9317 ;;		_adc_int_t_handler
  9318 ;; This function uses a reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text26
  9322  01C5A6                     __ptext26:
  9323                           	opt callstack 0
  9324  01C5A6                     _ADCC_DischargeSampleCapacitor:
  9325                           	opt callstack 0
  9326                           
  9327                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9328                           
  9329                           ; BSR set to: 62
  9330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9331                           ;incstack = 0
  9332 ;; hardware stack exceeded
  9333  01C5A6  0E3B               	movlw	59
  9334  01C5A8  013E               	movlb	62	; () banked
  9335  01C5AA  6FF1               	movwf	241,b	;volatile
  9336                           
  9337                           ; BSR set to: 62
  9338                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9339  01C5AC  0012               	return		;funcret
  9340  01C5AE                     __end_of_ADCC_DischargeSampleCapacitor:
  9341                           	opt callstack 0
  9342                           
  9343 ;; *************** function _clear_adc_scan *****************
  9344 ;; Defined at:
  9345 ;;		line 90 in file "daq.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;		None
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;		None
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1  [STACK] void 
  9352 ;; Registers used:
  9353 ;;		None
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 3F/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9363 ;;Total ram usage:        0 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:   15
  9366 ;; This function calls:
  9367 ;;		Nothing
  9368 ;; This function is called by:
  9369 ;;		_main
  9370 ;;		_update_adc_result
  9371 ;; This function uses a reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text27
  9375  01C5CE                     __ptext27:
  9376                           	opt callstack 0
  9377  01C5CE                     _clear_adc_scan:
  9378                           	opt callstack 13
  9379                           
  9380                           ;daq.c: 92:  R.done = 0;
  9381                           
  9382                           ; BSR set to: 62
  9383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9384                           ;incstack = 0
  9385  01C5CE  0100               	movlb	0	; () banked
  9386  01C5D0  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9387                           
  9388                           ; BSR set to: 0
  9389                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9390  01C5D2  0012               	return		;funcret
  9391  01C5D4                     __end_of_clear_adc_scan:
  9392                           	opt callstack 0
  9393                           
  9394 ;; *************** function _check_adc_scan *****************
  9395 ;; Defined at:
  9396 ;;		line 82 in file "daq.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1  [STACK] _Bool 
  9403 ;; Registers used:
  9404 ;;		btemp
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/1
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9414 ;;Total ram usage:        0 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:   15
  9417 ;; This function calls:
  9418 ;;		Nothing
  9419 ;; This function is called by:
  9420 ;;		_main
  9421 ;;		_update_adc_result
  9422 ;; This function uses a reentrant model
  9423 ;;
  9424                           
  9425                           	psect	text28
  9426  01C5AE                     __ptext28:
  9427                           	opt callstack 0
  9428  01C5AE                     _check_adc_scan:
  9429                           	opt callstack 13
  9430                           
  9431                           ;daq.c: 84:  return R.done;
  9432                           
  9433                           ; BSR set to: 0
  9434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9435                           ;incstack = 0
  9436  01C5AE  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9437                           
  9438                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9439  01C5B4  0012               	return		;funcret
  9440  01C5B6                     __end_of_check_adc_scan:
  9441                           	opt callstack 0
  9442                           
  9443 ;; *************** function _set_load_relay_two *****************
  9444 ;; Defined at:
  9445 ;;		line 130 in file "mbmc.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  mode            1  [STACK] const _Bool 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1  [STACK] void 
  9452 ;; Registers used:
  9453 ;;		wreg, fsr1l, fsr1h
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9463 ;;Total ram usage:        0 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:   15
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_main
  9470 ;;		_esr_check
  9471 ;; This function uses a reentrant model
  9472 ;;
  9473                           
  9474                           	psect	text29
  9475  01C4E6                     __ptext29:
  9476                           	opt callstack 0
  9477  01C4E6                     _set_load_relay_two:
  9478                           	opt callstack 15
  9479                           
  9480                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9481                           ;stkvar	_mode @ sp[(0)+-1]
  9482                           
  9483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9484                           ;incstack = 0
  9485  01C4E6  0EFF               	movlw	-1
  9486  01C4E8  B0E3               	btfsc	plusw1,0,c
  9487  01C4EA  D002               	bra	u9575
  9488  01C4EC  9ABD               	bcf	189,5,c	;volatile
  9489  01C4EE  D001               	bra	u9576
  9490  01C4F0                     u9575:
  9491  01C4F0  8ABD               	bsf	189,5,c	;volatile
  9492  01C4F2                     u9576:
  9493                           
  9494                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9495  01C4F2  52E5               	movf	postdec1,f,c
  9496  01C4F4  0012               	return		;funcret
  9497  01C4F6                     __end_of_set_load_relay_two:
  9498                           	opt callstack 0
  9499                           
  9500 ;; *************** function _set_load_relay_one *****************
  9501 ;; Defined at:
  9502 ;;		line 125 in file "mbmc.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  mode            1  [STACK] const _Bool 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;		None
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  1  [STACK] void 
  9509 ;; Registers used:
  9510 ;;		wreg, fsr1l, fsr1h
  9511 ;; Tracked objects:
  9512 ;;		On entry : 0/0
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9520 ;;Total ram usage:        0 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:   15
  9523 ;; This function calls:
  9524 ;;		Nothing
  9525 ;; This function is called by:
  9526 ;;		_main
  9527 ;;		_esr_check
  9528 ;; This function uses a reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text30
  9532  01C4F6                     __ptext30:
  9533                           	opt callstack 0
  9534  01C4F6                     _set_load_relay_one:
  9535                           	opt callstack 15
  9536                           
  9537                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9538                           ;stkvar	_mode @ sp[(0)+-1]
  9539                           
  9540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9541                           ;incstack = 0
  9542  01C4F6  0EFF               	movlw	-1
  9543  01C4F8  B0E3               	btfsc	plusw1,0,c
  9544  01C4FA  D002               	bra	u9565
  9545  01C4FC  98BD               	bcf	189,4,c	;volatile
  9546  01C4FE  D001               	bra	u9566
  9547  01C500                     u9565:
  9548  01C500  88BD               	bsf	189,4,c	;volatile
  9549  01C502                     u9566:
  9550                           
  9551                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9552  01C502  52E5               	movf	postdec1,f,c
  9553  01C504  0012               	return		;funcret
  9554  01C506                     __end_of_set_load_relay_one:
  9555                           	opt callstack 0
  9556                           
  9557 ;; *************** function _eaDogM_WriteCommand *****************
  9558 ;; Defined at:
  9559 ;;		line 385 in file "eadog.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  cmd             1  [STACK] const unsigned char 
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  1  [STACK] void 
  9566 ;; Registers used:
  9567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9568 ;; Tracked objects:
  9569 ;;		On entry : 3F/3D
  9570 ;;		On exit  : 3F/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9577 ;;Total ram usage:        0 bytes
  9578 ;; Hardware stack levels used:    1
  9579 ;; Hardware stack levels required when called:   26
  9580 ;; This function calls:
  9581 ;;		_send_lcd_cmd_dma
  9582 ;; This function is called by:
  9583 ;;		_main
  9584 ;; This function uses a reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text31
  9588  01C526                     __ptext31:
  9589                           	opt callstack 0
  9590  01C526                     _eaDogM_WriteCommand:
  9591                           	opt callstack 4
  9592                           
  9593                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9594                           ;stkvar	_cmd @ sp[(0)+-1]
  9595                           
  9596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9597                           ;incstack = 0
  9598  01C526  0EFF               	movlw	-1
  9599  01C528  50E3               	movf	plusw1,w,c
  9600  01C52A  6EE6               	movwf	postinc1,c
  9601  01C52C  ECD0  F0E1         	call	_send_lcd_cmd_dma	;wreg free
  9602                           
  9603                           ; BSR set to: 0
  9604                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9605  01C530  52E5               	movf	postdec1,f,c
  9606  01C532  0012               	return		;funcret
  9607  01C534                     __end_of_eaDogM_WriteCommand:
  9608                           	opt callstack 0
  9609                           
  9610 ;; *************** function _convert_adc_data *****************
  9611 ;; Defined at:
  9612 ;;		line 51 in file "mbmc.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;		None
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  i               1  [STACK] unsigned char 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  1  [STACK] void 
  9619 ;; Registers used:
  9620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/1
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9630 ;;Total ram usage:        0 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:   18
  9633 ;; This function calls:
  9634 ;;		_conv_raw_result
  9635 ;;		_lp_filter
  9636 ;; This function is called by:
  9637 ;;		_main
  9638 ;; This function uses a reentrant model
  9639 ;;
  9640                           
  9641                           	psect	text32
  9642  01A7E4                     __ptext32:
  9643                           	opt callstack 0
  9644  01A7E4                     _convert_adc_data:
  9645                           	opt callstack 0
  9646                           
  9647                           ; BSR set to: 0
  9648                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9649  01A7E4  52E6               	movf	postinc1,f,c
  9650                           
  9651                           ;mbmc.c: 53:  uint8_t i = 0;
  9652                           ;stkvar	_i @ sp[(-1)+0]
  9653                           
  9654                           ;incstack = 0
  9655  01A7E6  0EFF               	movlw	-1
  9656  01A7E8  6AE3               	clrf	plusw1,c
  9657  01A7EA                     l11227:
  9658                           
  9659                           ;mbmc.c: 56:   if (V.calib) {
  9660  01A7EA  0101               	movlb	1	; () banked
  9661  01A7EC  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  9662  01A7EE  B4D8               	btfsc	status,2,c
  9663  01A7F0  D01B               	goto	l11231
  9664                           
  9665                           ; BSR set to: 1
  9666                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  9667  01A7F2  0E01               	movlw	1
  9668  01A7F4  6EE6               	movwf	postinc1,c
  9669                           
  9670                           ;stkvar	_i @ sp[(-2)+0]
  9671  01A7F6  0EFE               	movlw	-2
  9672  01A7F8  50E3               	movf	plusw1,w,c
  9673  01A7FA  6EE6               	movwf	postinc1,c
  9674  01A7FC  0E01               	movlw	1
  9675  01A7FE  6EE6               	movwf	postinc1,c
  9676                           
  9677                           ;stkvar	_i @ sp[(-4)+0]
  9678  01A800  0EFC               	movlw	-4
  9679  01A802  50E3               	movf	plusw1,w,c
  9680  01A804  6EE6               	movwf	postinc1,c
  9681  01A806  EC95  F0A9         	call	_conv_raw_result	;wreg free
  9682  01A80A  0060  F007  FFE6   	movff	btemp,postinc1
  9683  01A810  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9684  01A816  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9685  01A81C  0060  F013  FFE6   	movff	btemp+3,postinc1
  9686  01A822  EC55  F0C4         	call	_lp_filter	;wreg free
  9687  01A826  D01A               	goto	L9
  9688  01A828                     l11231:
  9689                           
  9690                           ; BSR set to: 1
  9691                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  9692  01A828  0E00               	movlw	0
  9693  01A82A  6EE6               	movwf	postinc1,c
  9694                           
  9695                           ;stkvar	_i @ sp[(-2)+0]
  9696  01A82C  0EFE               	movlw	-2
  9697  01A82E  50E3               	movf	plusw1,w,c
  9698  01A830  6EE6               	movwf	postinc1,c
  9699  01A832  0E00               	movlw	0
  9700  01A834  6EE6               	movwf	postinc1,c
  9701                           
  9702                           ;stkvar	_i @ sp[(-4)+0]
  9703  01A836  0EFC               	movlw	-4
  9704  01A838  50E3               	movf	plusw1,w,c
  9705  01A83A  6EE6               	movwf	postinc1,c
  9706  01A83C  EC95  F0A9         	call	_conv_raw_result	;wreg free
  9707  01A840  0060  F007  FFE6   	movff	btemp,postinc1
  9708  01A846  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9709  01A84C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9710  01A852  0060  F013  FFE6   	movff	btemp+3,postinc1
  9711  01A858  EC55  F0C4         	call	_lp_filter	;wreg free
  9712  01A85C                     L9:
  9713                           
  9714                           ;stkvar	_i @ sp[(-1)+0]
  9715  01A85C  0EFF               	movlw	-1
  9716  01A85E  50E3               	movf	plusw1,w,c
  9717  01A860  0D04               	mullw	4
  9718  01A862  0EFF               	movlw	low _C
  9719  01A864  24F3               	addwf	243,w,c
  9720  01A866  6ED9               	movwf	fsr2l,c
  9721  01A868  0E06               	movlw	high _C
  9722  01A86A  20F4               	addwfc	prodh,w,c
  9723  01A86C  6EDA               	movwf	fsr2h,c
  9724  01A86E  0060  F007  FFDE   	movff	btemp,postinc2
  9725  01A874  0060  F00B  FFDE   	movff	btemp+1,postinc2
  9726  01A87A  0060  F00F  FFDE   	movff	btemp+2,postinc2
  9727  01A880  0060  F013  FFDE   	movff	btemp+3,postinc2
  9728                           
  9729                           ;mbmc.c: 61:  } while (++i < 16);
  9730                           ;stkvar	_i @ sp[(-1)+0]
  9731  01A886  0EFF               	movlw	-1
  9732  01A888  2AE3               	incf	plusw1,f,c
  9733  01A88A  0EFF               	movlw	-1
  9734  01A88C  006F FF8C  F001    	movff	plusw1,btemp
  9735  01A892  0E0F               	movlw	15
  9736  01A894  6401               	cpfsgt	btemp^0,c
  9737  01A896  D7A9               	goto	l11227
  9738                           
  9739                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9740  01A898  52E5               	movf	postdec1,f,c
  9741  01A89A  0012               	return		;funcret
  9742  01A89C                     __end_of_convert_adc_data:
  9743                           	opt callstack 0
  9744                           
  9745 ;; *************** function _clear_hid_pflags *****************
  9746 ;; Defined at:
  9747 ;;		line 51 in file "hid.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;  h               2  [STACK] PTR struct H_data
  9750 ;;		 -> H(7), 
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;		None
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  1  [STACK] void 
  9755 ;; Registers used:
  9756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  9757 ;; Tracked objects:
  9758 ;;		On entry : 3E/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9766 ;;Total ram usage:        0 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; Hardware stack levels required when called:   15
  9769 ;; This function calls:
  9770 ;;		Nothing
  9771 ;; This function is called by:
  9772 ;;		_main
  9773 ;; This function uses a reentrant model
  9774 ;;
  9775                           
  9776                           	psect	text33
  9777  01B950                     __ptext33:
  9778                           	opt callstack 0
  9779  01B950                     _clear_hid_pflags:
  9780                           	opt callstack 15
  9781                           
  9782                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9783                           ;stkvar	_h @ sp[(0)+-2]
  9784                           
  9785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9786                           ;incstack = 0
  9787  01B950  0EFE               	movlw	-2
  9788  01B952  006F FF8C  F00B    	movff	plusw1,btemp+10
  9789  01B958  0EFF               	movlw	-1
  9790  01B95A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9791  01B960  0E03               	movlw	3
  9792  01B962  240B               	addwf	(btemp+10)^0,w,c
  9793  01B964  6ED9               	movwf	fsr2l,c
  9794  01B966  0E00               	movlw	0
  9795  01B968  200C               	addwfc	(btemp+11)^0,w,c
  9796  01B96A  6EDA               	movwf	fsr2h,c
  9797  01B96C  0E00               	movlw	0
  9798  01B96E  6EDF               	movwf	indf2,c
  9799                           
  9800                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9801                           ;stkvar	_h @ sp[(0)+-2]
  9802  01B970  0EFE               	movlw	-2
  9803  01B972  006F FF8C  F00B    	movff	plusw1,btemp+10
  9804  01B978  0EFF               	movlw	-1
  9805  01B97A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9806  01B980  0E05               	movlw	5
  9807  01B982  240B               	addwf	(btemp+10)^0,w,c
  9808  01B984  6ED9               	movwf	fsr2l,c
  9809  01B986  0E00               	movlw	0
  9810  01B988  200C               	addwfc	(btemp+11)^0,w,c
  9811  01B98A  6EDA               	movwf	fsr2h,c
  9812  01B98C  0E00               	movlw	0
  9813  01B98E  6EDF               	movwf	indf2,c
  9814                           
  9815                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
  9816  01B990  52E5               	movf	postdec1,f,c
  9817  01B992  52E5               	movf	postdec1,f,c
  9818  01B994  0012               	return		;funcret
  9819  01B996                     __end_of_clear_hid_pflags:
  9820                           	opt callstack 0
  9821                           
  9822 ;; *************** function _check_help *****************
  9823 ;; Defined at:
  9824 ;;		line 40 in file "mconfig.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;  flipper         1  [STACK] const _Bool 
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;  estatus         1    0        _Bool 
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1  [STACK] _Bool 
  9831 ;; Registers used:
  9832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9833 ;; Tracked objects:
  9834 ;;		On entry : 3F/1
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9842 ;;Total ram usage:        0 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; Hardware stack levels required when called:   28
  9845 ;; This function calls:
  9846 ;;		_StartTimer
  9847 ;;		_TimerDone
  9848 ;;		_display_help
  9849 ;;		_display_info
  9850 ;;		_get_vterm_ptr
  9851 ;;		_help_button
  9852 ;;		_mode_lamp_bright
  9853 ;;		_mode_lamp_dim
  9854 ;;		_set_display_info
  9855 ;;		_set_temp_display_help
  9856 ;;		_set_vterm
  9857 ;;		_sprintf
  9858 ;;		_update_lcd
  9859 ;;		_vterm_dump
  9860 ;; This function is called by:
  9861 ;;		_main
  9862 ;; This function uses a reentrant model
  9863 ;;
  9864                           
  9865                           	psect	text34
  9866  0182B8                     __ptext34:
  9867                           	opt callstack 0
  9868  0182B8                     _check_help:
  9869                           	opt callstack 2
  9870                           
  9871                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9872                           
  9873                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9874                           ;incstack = 0
  9875  0182B8  EC30  F0DE         	call	_help_button	;wreg free
  9876  0182BC  5001               	movf	btemp^0,w,c
  9877  0182BE  B4D8               	btfsc	status,2,c
  9878  0182C0  D0D0               	goto	l13335
  9879  0182C2  ECDB  F0E2         	call	_display_info	;wreg free
  9880  0182C6  0401               	decf	btemp^0,w,c
  9881  0182C8  B4D8               	btfsc	status,2,c
  9882  0182CA  D0CB               	goto	l13335
  9883                           
  9884                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9885  0182CC  0EDC               	movlw	220
  9886  0182CE  6EE6               	movwf	postinc1,c
  9887  0182D0  0E05               	movlw	5
  9888  0182D2  6EE6               	movwf	postinc1,c
  9889  0182D4  0E0B               	movlw	11
  9890  0182D6  6EE6               	movwf	postinc1,c
  9891  0182D8  EC94  F0DD         	call	_StartTimer	;wreg free
  9892                           
  9893                           ;mconfig.c: 48:   if (V.debug)
  9894  0182DC  0101               	movlb	1	; () banked
  9895  0182DE  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9896                           
  9897                           ; BSR set to: 1
  9898                           ;mconfig.c: 49:    vterm_dump();
  9899  0182E0  EC4F  F0CC         	call	_vterm_dump	;wreg free
  9900                           
  9901                           ;mconfig.c: 51:   set_vterm(1);
  9902  0182E4  0E01               	movlw	1
  9903  0182E6  6EE6               	movwf	postinc1,c
  9904  0182E8  ECDF  F0E1         	call	_set_vterm	;wreg free
  9905                           
  9906                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9907  0182EC  ECDB  F0E2         	call	_display_info	;wreg free
  9908  0182F0  5001               	movf	btemp^0,w,c
  9909  0182F2  6EE6               	movwf	postinc1,c
  9910  0182F4  EC83  F0E2         	call	_set_temp_display_help	;wreg free
  9911                           
  9912                           ; BSR set to: 1
  9913                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9914  0182F8  0E01               	movlw	1
  9915  0182FA  6EE6               	movwf	postinc1,c
  9916  0182FC  ECEE  F0E1         	call	_set_display_info	;wreg free
  9917                           
  9918                           ;mconfig.c: 54:   if (flipper) {
  9919                           ;stkvar	_flipper @ sp[(0)+-1]
  9920  018300  0EFF               	movlw	-1
  9921  018302  50E3               	movf	plusw1,w,c
  9922  018304  B4D8               	btfsc	status,2,c
  9923  018306  D019               	goto	l13321
  9924                           
  9925                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9926  018308  0EB3               	movlw	low STR_45
  9927  01830A  6EE6               	movwf	postinc1,c
  9928  01830C  0EFF               	movlw	high STR_45
  9929  01830E  6EE6               	movwf	postinc1,c
  9930  018310  0E5D               	movlw	low STR_47
  9931  018312  6EE6               	movwf	postinc1,c
  9932  018314  0EFF               	movlw	high STR_47
  9933  018316  6EE6               	movwf	postinc1,c
  9934  018318  0E01               	movlw	1
  9935  01831A  6EE6               	movwf	postinc1,c
  9936  01831C  0E00               	movlw	0
  9937  01831E  6EE6               	movwf	postinc1,c
  9938  018320  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  9939  018324  0060  F007  FFE6   	movff	btemp,postinc1
  9940  01832A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9941  018330  0E06               	movlw	6
  9942  018332  6EE6               	movwf	postinc1,c
  9943  018334  ECA2  F0CF         	call	_sprintf	;wreg free
  9944                           
  9945                           ;mconfig.c: 56:   } else {
  9946  018338  D018               	goto	l1684
  9947  01833A                     l13321:
  9948                           
  9949                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9950  01833A  0EC9               	movlw	low STR_46
  9951  01833C  6EE6               	movwf	postinc1,c
  9952  01833E  0EFF               	movlw	high STR_46
  9953  018340  6EE6               	movwf	postinc1,c
  9954  018342  0E5D               	movlw	low STR_47
  9955  018344  6EE6               	movwf	postinc1,c
  9956  018346  0EFF               	movlw	high STR_47
  9957  018348  6EE6               	movwf	postinc1,c
  9958  01834A  0E01               	movlw	1
  9959  01834C  6EE6               	movwf	postinc1,c
  9960  01834E  0E00               	movlw	0
  9961  018350  6EE6               	movwf	postinc1,c
  9962  018352  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
  9963  018356  0060  F007  FFE6   	movff	btemp,postinc1
  9964  01835C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9965  018362  0E06               	movlw	6
  9966  018364  6EE6               	movwf	postinc1,c
  9967  018366  ECA2  F0CF         	call	_sprintf	;wreg free
  9968  01836A                     l1684:
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9972  01836A  0101               	movlb	1	; () banked
  9973  01836C  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  9974  01836E  32E8               	rrcf	wreg,f,c
  9975  018370  32E8               	rrcf	wreg,f,c
  9976  018372  0B03               	andlw	3
  9977  018374  0D24               	mullw	36
  9978  018376  0E12               	movlw	18
  9979  018378  26F3               	addwf	243,f,c
  9980  01837A  0E00               	movlw	0
  9981  01837C  22F4               	addwfc	244,f,c
  9982  01837E  0EB5               	movlw	low _T
  9983  018380  6E0B               	movwf	(btemp+10)^0,c
  9984  018382  0EFA               	movlw	high _T
  9985  018384  6E0C               	movwf	(btemp+11)^0,c
  9986  018386  50F3               	movf	243,w,c
  9987  018388  260B               	addwf	(btemp+10)^0,f,c
  9988  01838A  50F4               	movf	244,w,c
  9989  01838C  220C               	addwfc	(btemp+11)^0,f,c
  9990  01838E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9991  018394  0060  F033  FFE6   	movff	btemp+11,postinc1
  9992  01839A  0EBF               	movlw	low STR_49
  9993  01839C  6EE6               	movwf	postinc1,c
  9994  01839E  0EFF               	movlw	high STR_49
  9995  0183A0  6EE6               	movwf	postinc1,c
  9996  0183A2  0E01               	movlw	1
  9997  0183A4  6EE6               	movwf	postinc1,c
  9998  0183A6  0E01               	movlw	1
  9999  0183A8  6EE6               	movwf	postinc1,c
 10000  0183AA  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
 10001  0183AE  0060  F007  FFE6   	movff	btemp,postinc1
 10002  0183B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10003  0183BA  0E06               	movlw	6
 10004  0183BC  6EE6               	movwf	postinc1,c
 10005  0183BE  ECA2  F0CF         	call	_sprintf	;wreg free
 10006                           
 10007                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 10008  0183C2  0101               	movlb	1	; () banked
 10009  0183C4  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10010  0183C6  32E8               	rrcf	wreg,f,c
 10011  0183C8  32E8               	rrcf	wreg,f,c
 10012  0183CA  0B03               	andlw	3
 10013  0183CC  0D24               	mullw	36
 10014  0183CE  0EB5               	movlw	low _T
 10015  0183D0  6E0B               	movwf	(btemp+10)^0,c
 10016  0183D2  0EFA               	movlw	high _T
 10017  0183D4  6E0C               	movwf	(btemp+11)^0,c
 10018  0183D6  50F3               	movf	243,w,c
 10019  0183D8  260B               	addwf	(btemp+10)^0,f,c
 10020  0183DA  50F4               	movf	244,w,c
 10021  0183DC  220C               	addwfc	(btemp+11)^0,f,c
 10022  0183DE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10023  0183E4  0060  F033  FFE6   	movff	btemp+11,postinc1
 10024  0183EA  0EBF               	movlw	low STR_49
 10025  0183EC  6EE6               	movwf	postinc1,c
 10026  0183EE  0EFF               	movlw	high STR_49
 10027  0183F0  6EE6               	movwf	postinc1,c
 10028  0183F2  0E01               	movlw	1
 10029  0183F4  6EE6               	movwf	postinc1,c
 10030  0183F6  0E02               	movlw	2
 10031  0183F8  6EE6               	movwf	postinc1,c
 10032  0183FA  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
 10033  0183FE  0060  F007  FFE6   	movff	btemp,postinc1
 10034  018404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10035  01840A  0E06               	movlw	6
 10036  01840C  6EE6               	movwf	postinc1,c
 10037  01840E  ECA2  F0CF         	call	_sprintf	;wreg free
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;mconfig.c: 61:   V.help_id++;
 10041  018412  EE20  F1A2         	lfsr	2,_V+155	;volatile
 10042  018416  38DF               	swapf	223,w,c
 10043  018418  6E0C               	movwf	(btemp+11)^0,c
 10044  01841A  320C               	rrcf	(btemp+11)^0,f,c
 10045  01841C  300C               	rrcf	(btemp+11)^0,w,c
 10046  01841E  0B03               	andlw	3
 10047  018420  6E0C               	movwf	(btemp+11)^0,c
 10048  018422  2A0C               	incf	(btemp+11)^0,f,c
 10049  018424  3A0C               	swapf	(btemp+11)^0,f,c
 10050  018426  360C               	rlcf	(btemp+11)^0,f,c
 10051  018428  360C               	rlcf	(btemp+11)^0,f,c
 10052  01842A  50DF               	movf	223,w,c
 10053  01842C  180C               	xorwf	(btemp+11)^0,w,c
 10054  01842E  0B3F               	andlw	-193
 10055  018430  180C               	xorwf	(btemp+11)^0,w,c
 10056  018432  6EDF               	movwf	223,c
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 10060  018434  0EB8               	movlw	184
 10061  018436  6EE6               	movwf	postinc1,c
 10062  018438  0E0B               	movlw	11
 10063  01843A  6EE6               	movwf	postinc1,c
 10064  01843C  0E09               	movlw	9
 10065  01843E  6EE6               	movwf	postinc1,c
 10066  018440  EC94  F0DD         	call	_StartTimer	;wreg free
 10067                           
 10068                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 10069  018444  0EB8               	movlw	184
 10070  018446  6EE6               	movwf	postinc1,c
 10071  018448  0E0B               	movlw	11
 10072  01844A  6EE6               	movwf	postinc1,c
 10073  01844C  0E07               	movlw	7
 10074  01844E  6EE6               	movwf	postinc1,c
 10075  018450  EC94  F0DD         	call	_StartTimer	;wreg free
 10076                           
 10077                           ;mconfig.c: 64:   mode_lamp_bright();
 10078  018454  EC9A  F0E2         	call	_mode_lamp_bright	;wreg free
 10079                           
 10080                           ;mconfig.c: 65:   update_lcd(1);
 10081  018458  0E01               	movlw	1
 10082  01845A  6EE6               	movwf	postinc1,c
 10083  01845C  EC1A  F0CF         	call	_update_lcd	;wreg free
 10084                           
 10085                           ;mconfig.c: 67:  } else {
 10086  018460  D032               	goto	l1685
 10087  018462                     l13335:
 10088                           
 10089                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 10090  018462  0E09               	movlw	9
 10091  018464  6EE6               	movwf	postinc1,c
 10092  018466  ECE9  F0DF         	call	_TimerDone	;wreg free
 10093  01846A  5001               	movf	btemp^0,w,c
 10094  01846C  B4D8               	btfsc	status,2,c
 10095  01846E  D02B               	goto	l1685
 10096                           
 10097                           ;mconfig.c: 69:    set_vterm(0);
 10098  018470  0E00               	movlw	0
 10099  018472  6EE6               	movwf	postinc1,c
 10100  018474  ECDF  F0E1         	call	_set_vterm	;wreg free
 10101                           
 10102                           ;mconfig.c: 70:    V.help = 0;
 10103  018478  0101               	movlb	1	; () banked
 10104  01847A  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 10105                           
 10106                           ; BSR set to: 1
 10107                           ;mconfig.c: 71:    set_display_info(display_help());
 10108  01847C  ECDF  F0E2         	call	_display_help	;wreg free
 10109  018480  5001               	movf	btemp^0,w,c
 10110  018482  6EE6               	movwf	postinc1,c
 10111  018484  ECEE  F0E1         	call	_set_display_info	;wreg free
 10112                           
 10113                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 10114  018488  0060  F673  FFE6   	movff	_V+149,postinc1
 10115  01848E  0060  F677  FFE6   	movff	_V+150,postinc1
 10116  018494  EC27  F0E2         	call	_mode_lamp_dim	;wreg free
 10117                           
 10118                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 10119  018498  0E0B               	movlw	11
 10120  01849A  6EE6               	movwf	postinc1,c
 10121  01849C  ECE9  F0DF         	call	_TimerDone	;wreg free
 10122  0184A0  5001               	movf	btemp^0,w,c
 10123  0184A2  B4D8               	btfsc	status,2,c
 10124  0184A4  D010               	goto	l1685
 10125                           
 10126                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 10127  0184A6  0101               	movlb	1	; () banked
 10128  0184A8  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 10129  0184AA  A4D8               	btfss	status,2,c
 10130  0184AC  D002               	goto	u12740
 10131  0184AE  0E01               	movlw	1
 10132  0184B0  D001               	goto	u12750
 10133  0184B2                     u12740:
 10134  0184B2  0E00               	movlw	0
 10135  0184B4                     u12750:
 10136  0184B4  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 10137                           
 10138                           ; BSR set to: 1
 10139                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 10140  0184B6  0EDC               	movlw	220
 10141  0184B8  6EE6               	movwf	postinc1,c
 10142  0184BA  0E05               	movlw	5
 10143  0184BC  6EE6               	movwf	postinc1,c
 10144  0184BE  0E0B               	movlw	11
 10145  0184C0  6EE6               	movwf	postinc1,c
 10146  0184C2  EC94  F0DD         	call	_StartTimer	;wreg free
 10147  0184C6                     l1685:
 10148                           
 10149                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10150  0184C6  52E5               	movf	postdec1,f,c
 10151  0184C8  0012               	return		;funcret
 10152  0184CA                     __end_of_check_help:
 10153                           	opt callstack 0
 10154                           
 10155 ;; *************** function _vterm_dump *****************
 10156 ;; Defined at:
 10157 ;;		line 121 in file "mconfig.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;		None
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;		None
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  1  [STACK] void 
 10164 ;; Registers used:
 10165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10166 ;; Tracked objects:
 10167 ;;		On entry : 3F/1
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10175 ;;Total ram usage:        0 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:   27
 10178 ;; This function calls:
 10179 ;;		_WaitMs
 10180 ;;		_eaDogM_WriteStringAtPos
 10181 ;;		_get_vterm_ptr
 10182 ;;		_sprintf
 10183 ;;		_wait_lcd_done
 10184 ;; This function is called by:
 10185 ;;		_check_help
 10186 ;; This function uses a reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text35
 10190  01989E                     __ptext35:
 10191                           	opt callstack 0
 10192  01989E                     _vterm_dump:
 10193                           	opt callstack 2
 10194                           
 10195                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 10196                           
 10197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10198                           ;incstack = 0
 10199  01989E  0E01               	movlw	1
 10200  0198A0  6EE6               	movwf	postinc1,c
 10201  0198A2  0E00               	movlw	0
 10202  0198A4  6EE6               	movwf	postinc1,c
 10203  0198A6  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
 10204  0198AA  0060  F007  FFE6   	movff	btemp,postinc1
 10205  0198B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10206  0198B6  0E00               	movlw	0
 10207  0198B8  6EE6               	movwf	postinc1,c
 10208  0198BA  0E00               	movlw	0
 10209  0198BC  6EE6               	movwf	postinc1,c
 10210  0198BE  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
 10211  0198C2  0060  F007  FFE6   	movff	btemp,postinc1
 10212  0198C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10213  0198CE  0EA4               	movlw	low STR_51
 10214  0198D0  6EE6               	movwf	postinc1,c
 10215  0198D2  0EFF               	movlw	high STR_51
 10216  0198D4  6EE6               	movwf	postinc1,c
 10217  0198D6  0E08               	movlw	low (_V+1)
 10218  0198D8  6EE6               	movwf	postinc1,c
 10219  0198DA  0E01               	movlw	high (_V+1)
 10220  0198DC  6EE6               	movwf	postinc1,c
 10221  0198DE  0E08               	movlw	8
 10222  0198E0  6EE6               	movwf	postinc1,c
 10223  0198E2  ECA2  F0CF         	call	_sprintf	;wreg free
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;mconfig.c: 124:  wait_lcd_done();
 10227  0198E6  EC6E  F0E1         	call	_wait_lcd_done	;wreg free
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 10231  0198EA  0E08               	movlw	low (_V+1)
 10232  0198EC  6EE6               	movwf	postinc1,c
 10233  0198EE  0E01               	movlw	high (_V+1)
 10234  0198F0  6EE6               	movwf	postinc1,c
 10235  0198F2  0E00               	movlw	0
 10236  0198F4  6EE6               	movwf	postinc1,c
 10237  0198F6  0E00               	movlw	0
 10238  0198F8  6EE6               	movwf	postinc1,c
 10239  0198FA  ECA8  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10240                           
 10241                           ; BSR set to: 59
 10242                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 10243  0198FE  0E01               	movlw	1
 10244  019900  6EE6               	movwf	postinc1,c
 10245  019902  0E01               	movlw	1
 10246  019904  6EE6               	movwf	postinc1,c
 10247  019906  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
 10248  01990A  0060  F007  FFE6   	movff	btemp,postinc1
 10249  019910  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10250  019916  0E00               	movlw	0
 10251  019918  6EE6               	movwf	postinc1,c
 10252  01991A  0E01               	movlw	1
 10253  01991C  6EE6               	movwf	postinc1,c
 10254  01991E  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
 10255  019922  0060  F007  FFE6   	movff	btemp,postinc1
 10256  019928  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10257  01992E  0EA4               	movlw	low STR_51
 10258  019930  6EE6               	movwf	postinc1,c
 10259  019932  0EFF               	movlw	high STR_51
 10260  019934  6EE6               	movwf	postinc1,c
 10261  019936  0E08               	movlw	low (_V+1)
 10262  019938  6EE6               	movwf	postinc1,c
 10263  01993A  0E01               	movlw	high (_V+1)
 10264  01993C  6EE6               	movwf	postinc1,c
 10265  01993E  0E08               	movlw	8
 10266  019940  6EE6               	movwf	postinc1,c
 10267  019942  ECA2  F0CF         	call	_sprintf	;wreg free
 10268                           
 10269                           ; BSR set to: 0
 10270                           ;mconfig.c: 127:  wait_lcd_done();
 10271  019946  EC6E  F0E1         	call	_wait_lcd_done	;wreg free
 10272                           
 10273                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 10274  01994A  0E08               	movlw	low (_V+1)
 10275  01994C  6EE6               	movwf	postinc1,c
 10276  01994E  0E01               	movlw	high (_V+1)
 10277  019950  6EE6               	movwf	postinc1,c
 10278  019952  0E00               	movlw	0
 10279  019954  6EE6               	movwf	postinc1,c
 10280  019956  0E01               	movlw	1
 10281  019958  6EE6               	movwf	postinc1,c
 10282  01995A  ECA8  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10283                           
 10284                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 10285  01995E  0E01               	movlw	1
 10286  019960  6EE6               	movwf	postinc1,c
 10287  019962  0E02               	movlw	2
 10288  019964  6EE6               	movwf	postinc1,c
 10289  019966  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
 10290  01996A  0060  F007  FFE6   	movff	btemp,postinc1
 10291  019970  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10292  019976  0E00               	movlw	0
 10293  019978  6EE6               	movwf	postinc1,c
 10294  01997A  0E02               	movlw	2
 10295  01997C  6EE6               	movwf	postinc1,c
 10296  01997E  EC66  F0DF         	call	_get_vterm_ptr	;wreg free
 10297  019982  0060  F007  FFE6   	movff	btemp,postinc1
 10298  019988  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10299  01998E  0EA4               	movlw	low STR_51
 10300  019990  6EE6               	movwf	postinc1,c
 10301  019992  0EFF               	movlw	high STR_51
 10302  019994  6EE6               	movwf	postinc1,c
 10303  019996  0E08               	movlw	low (_V+1)
 10304  019998  6EE6               	movwf	postinc1,c
 10305  01999A  0E01               	movlw	high (_V+1)
 10306  01999C  6EE6               	movwf	postinc1,c
 10307  01999E  0E08               	movlw	8
 10308  0199A0  6EE6               	movwf	postinc1,c
 10309  0199A2  ECA2  F0CF         	call	_sprintf	;wreg free
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;mconfig.c: 130:  wait_lcd_done();
 10313  0199A6  EC6E  F0E1         	call	_wait_lcd_done	;wreg free
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 10317  0199AA  0E08               	movlw	low (_V+1)
 10318  0199AC  6EE6               	movwf	postinc1,c
 10319  0199AE  0E01               	movlw	high (_V+1)
 10320  0199B0  6EE6               	movwf	postinc1,c
 10321  0199B2  0E00               	movlw	0
 10322  0199B4  6EE6               	movwf	postinc1,c
 10323  0199B6  0E02               	movlw	2
 10324  0199B8  6EE6               	movwf	postinc1,c
 10325  0199BA  ECA8  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10326                           
 10327                           ; BSR set to: 59
 10328                           ;mconfig.c: 132:  WaitMs(3000);
 10329  0199BE  0EB8               	movlw	184
 10330  0199C0  6EE6               	movwf	postinc1,c
 10331  0199C2  0E0B               	movlw	11
 10332  0199C4  6EE6               	movwf	postinc1,c
 10333  0199C6  EC83  F0DE         	call	_WaitMs	;wreg free
 10334                           
 10335                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 10336  0199CA  0012               	return		;funcret
 10337  0199CC                     __end_of_vterm_dump:
 10338                           	opt callstack 0
 10339                           
 10340 ;; *************** function _sprintf *****************
 10341 ;; Defined at:
 10342 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  s               2  [STACK] PTR unsigned char 
 10345 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
 10346 ;;  fmt             2  [STACK] PTR const unsigned char 
 10347 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 10348 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 10349 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 10350 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 10351 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
 10352 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 10353 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 10354 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 10355 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 10356 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 10357 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 10358 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 10359 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 10360 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 10361 ;;		 -> STR_2(21), STR_1(21), 
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;  f               6  [STACK] struct _IO_FILE
 10364 ;;  ap              2  [STACK] PTR void [1]
 10365 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10366 ;;  ret             2    0        int 
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  2  [STACK] int 
 10369 ;; Registers used:
 10370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/1
 10373 ;;		On exit  : 3F/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10380 ;;Total ram usage:        0 bytes
 10381 ;; Hardware stack levels used:    1
 10382 ;; Hardware stack levels required when called:   23
 10383 ;; This function calls:
 10384 ;;		_vfprintf
 10385 ;; This function is called by:
 10386 ;;		_main
 10387 ;;		_check_help
 10388 ;;		_vterm_dump
 10389 ;;		_calc_bsoc
 10390 ;; This function uses a reentrant model
 10391 ;;
 10392                           
 10393                           	psect	text36
 10394  019F44                     __ptext36:
 10395                           	opt callstack 0
 10396  019F44                     _sprintf:
 10397                           	opt callstack 0
 10398                           
 10399                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10400  019F44  0E08               	movlw	8
 10401  019F46  26E1               	addwf	fsr1l,f,c
 10402  019F48  0E00               	movlw	0
 10403  019F4A  22E2               	addwfc	fsr1h,f,c
 10404                           
 10405                           ;incstack = 0
 10406 ;; hardware stack exceeded
 10407  019F4C  0EFE               	movlw	254
 10408  019F4E  6E0B               	movwf	(btemp+10)^0,c
 10409  019F50  0EFF               	movlw	255
 10410  019F52  6E0C               	movwf	(btemp+11)^0,c
 10411                           
 10412                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 10413  019F54  0EF5               	movlw	245
 10414  019F56  24E1               	addwf	fsr1l,w,c
 10415  019F58  6E09               	movwf	(btemp+8)^0,c
 10416  019F5A  0EFF               	movlw	255
 10417  019F5C  20E2               	addwfc	fsr1h,w,c
 10418  019F5E  6E0A               	movwf	(btemp+9)^0,c
 10419  019F60  500B               	movf	(btemp+10)^0,w,c
 10420  019F62  2609               	addwf	(btemp+8)^0,f,c
 10421  019F64  500C               	movf	(btemp+11)^0,w,c
 10422  019F66  220A               	addwfc	(btemp+9)^0,f,c
 10423                           
 10424                           ;stkvar	_ap @ sp[(-8)+6]
 10425  019F68  0EFF               	movlw	-1
 10426  019F6A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10427  019F70  0EFE               	movlw	-2
 10428  019F72  0060  F027  FFE3   	movff	btemp+8,plusw1
 10429                           
 10430                           ;stkvar	_s @ sp[(-8)+-3]
 10431  019F78  0EF5               	movlw	-11
 10432  019F7A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10433  019F80  0EF6               	movlw	-10
 10434  019F82  006F FF8C  F00C    	movff	plusw1,btemp+11
 10435                           
 10436                           ;stkvar	_f @ sp[(-8)+0]
 10437  019F88  0EF9               	movlw	-7
 10438  019F8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10439  019F90  0EF8               	movlw	-8
 10440  019F92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10441                           
 10442                           ;stkvar	_f @ sp[(-8)+0]
 10443  019F98  0EFA               	movlw	250
 10444  019F9A  24E1               	addwf	fsr1l,w,c
 10445  019F9C  6ED9               	movwf	fsr2l,c
 10446  019F9E  0EFF               	movlw	255
 10447  019FA0  20E2               	addwfc	fsr1h,w,c
 10448  019FA2  6EDA               	movwf	fsr2h,c
 10449  019FA4  0E00               	movlw	0
 10450  019FA6  6EDE               	movwf	postinc2,c
 10451  019FA8  0E00               	movlw	0
 10452  019FAA  6EDD               	movwf	postdec2,c
 10453                           
 10454                           ;stkvar	_f @ sp[(-8)+0]
 10455  019FAC  0EFC               	movlw	252
 10456  019FAE  24E1               	addwf	fsr1l,w,c
 10457  019FB0  6ED9               	movwf	fsr2l,c
 10458  019FB2  0EFF               	movlw	255
 10459  019FB4  20E2               	addwfc	fsr1h,w,c
 10460  019FB6  6EDA               	movwf	fsr2h,c
 10461  019FB8  0E00               	movlw	0
 10462  019FBA  6EDE               	movwf	postinc2,c
 10463  019FBC  0E00               	movlw	0
 10464  019FBE  6EDD               	movwf	postdec2,c
 10465                           
 10466                           ;stkvar	_ap @ sp[(-8)+6]
 10467  019FC0  0EFE               	movlw	254
 10468  019FC2  24E1               	addwf	fsr1l,w,c
 10469  019FC4  6E01               	movwf	btemp^0,c
 10470  019FC6  0EFF               	movlw	255
 10471  019FC8  20E2               	addwfc	fsr1h,w,c
 10472  019FCA  6E02               	movwf	(btemp+1)^0,c
 10473  019FCC  0060  F007  FFE6   	movff	btemp,postinc1
 10474  019FD2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10475                           
 10476                           ;stkvar	_fmt @ sp[(-10)+-5]
 10477  019FD8  0EF1               	movlw	-15
 10478  019FDA  006F FF8F FFE6     	movff	plusw1,postinc1
 10479  019FE0  006F FF8F FFE6     	movff	plusw1,postinc1
 10480                           
 10481                           ;stkvar	_f @ sp[(-12)+0]
 10482  019FE6  0EF4               	movlw	244
 10483  019FE8  24E1               	addwf	fsr1l,w,c
 10484  019FEA  6E01               	movwf	btemp^0,c
 10485  019FEC  0EFF               	movlw	255
 10486  019FEE  20E2               	addwfc	fsr1h,w,c
 10487  019FF0  6E02               	movwf	(btemp+1)^0,c
 10488  019FF2  0060  F007  FFE6   	movff	btemp,postinc1
 10489  019FF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10490  019FFE  ECFD  F0D4         	call	_vfprintf	;wreg free
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;stkvar	_f @ sp[(-8)+0]
 10494  01A002  0EFA               	movlw	250
 10495  01A004  24E1               	addwf	fsr1l,w,c
 10496  01A006  6ED9               	movwf	fsr2l,c
 10497  01A008  0EFF               	movlw	255
 10498  01A00A  20E2               	addwfc	fsr1h,w,c
 10499  01A00C  6EDA               	movwf	fsr2h,c
 10500  01A00E  006F FF78  F00B    	movff	postinc2,btemp+10
 10501  01A014  006F FF74  F00C    	movff	postdec2,btemp+11
 10502                           
 10503                           ;stkvar	_s @ sp[(-8)+-3]
 10504  01A01A  0EF5               	movlw	-11
 10505  01A01C  006F FF8C  F009    	movff	plusw1,btemp+8
 10506  01A022  0EF6               	movlw	-10
 10507  01A024  006F FF8C  F00A    	movff	plusw1,btemp+9
 10508  01A02A  500B               	movf	(btemp+10)^0,w,c
 10509  01A02C  2409               	addwf	(btemp+8)^0,w,c
 10510  01A02E  6ED9               	movwf	fsr2l,c
 10511  01A030  500C               	movf	(btemp+11)^0,w,c
 10512  01A032  200A               	addwfc	(btemp+9)^0,w,c
 10513  01A034  6EDA               	movwf	fsr2h,c
 10514  01A036  0E00               	movlw	0
 10515  01A038  6EDF               	movwf	indf2,c
 10516                           
 10517                           ; BSR set to: 0
 10518                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
 10519  01A03A  0EF8               	movlw	248
 10520  01A03C  26E1               	addwf	fsr1l,f,c
 10521  01A03E  0EFF               	movlw	255
 10522  01A040  22E2               	addwfc	fsr1h,f,c
 10523  01A042  52E5               	movf	postdec1,f,c
 10524  01A044  50E7               	movf	indf1,w,c
 10525  01A046  5EE1               	subwf	fsr1l,f,c
 10526  01A048  0E00               	movlw	0
 10527  01A04A  5AE2               	subwfb	fsr1h,f,c
 10528  01A04C  0012               	return		;funcret
 10529  01A04E                     __end_of_sprintf:
 10530                           	opt callstack 0
 10531                           
 10532 ;; *************** function _get_vterm_ptr *****************
 10533 ;; Defined at:
 10534 ;;		line 116 in file "mconfig.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;  line            1  [STACK] const unsigned char 
 10537 ;;  vterm           1  [STACK] const unsigned char 
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;		None
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  2  [STACK] PTR unsigned char 
 10542 ;; Registers used:
 10543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/1
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10553 ;;Total ram usage:        0 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:   15
 10556 ;; This function calls:
 10557 ;;		Nothing
 10558 ;; This function is called by:
 10559 ;;		_main
 10560 ;;		_check_help
 10561 ;;		_vterm_dump
 10562 ;; This function uses a reentrant model
 10563 ;;
 10564                           
 10565                           	psect	text37
 10566  01BECC                     __ptext37:
 10567                           	opt callstack 0
 10568  01BECC                     _get_vterm_ptr:
 10569                           	opt callstack 15
 10570                           
 10571                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 10572                           ;stkvar	_vterm @ sp[(0)+-2]
 10573                           
 10574                           ; BSR set to: 0
 10575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10576                           ;incstack = 0
 10577  01BECC  0EFE               	movlw	-2
 10578  01BECE  50E3               	movf	plusw1,w,c
 10579  01BED0  0B03               	andlw	3
 10580  01BED2  0D78               	mullw	120
 10581  01BED4  0E2A               	movlw	low _D
 10582  01BED6  6E01               	movwf	btemp^0,c
 10583  01BED8  0E08               	movlw	high _D
 10584  01BEDA  6E02               	movwf	(btemp+1)^0,c
 10585  01BEDC  50F3               	movf	243,w,c
 10586  01BEDE  2601               	addwf	btemp^0,f,c
 10587  01BEE0  50F4               	movf	244,w,c
 10588  01BEE2  2202               	addwfc	(btemp+1)^0,f,c
 10589                           
 10590                           ;stkvar	_line @ sp[(0)+-1]
 10591  01BEE4  0EFF               	movlw	-1
 10592  01BEE6  50E3               	movf	plusw1,w,c
 10593  01BEE8  0B03               	andlw	3
 10594  01BEEA  0D28               	mullw	40
 10595  01BEEC  50F3               	movf	243,w,c
 10596  01BEEE  2601               	addwf	btemp^0,f,c
 10597  01BEF0  50F4               	movf	244,w,c
 10598  01BEF2  2202               	addwfc	(btemp+1)^0,f,c
 10599                           
 10600                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10601  01BEF4  52E5               	movf	postdec1,f,c
 10602  01BEF6  52E5               	movf	postdec1,f,c
 10603  01BEF8  0012               	return		;funcret
 10604  01BEFA                     __end_of_get_vterm_ptr:
 10605                           	opt callstack 0
 10606                           
 10607 ;; *************** function _WaitMs *****************
 10608 ;; Defined at:
 10609 ;;		line 32 in file "timers.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;  numMilliseco    2  [STACK] const unsigned short 
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;		None
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  1  [STACK] void 
 10616 ;; Registers used:
 10617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/1
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10627 ;;Total ram usage:        0 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:   16
 10630 ;; This function calls:
 10631 ;;		_StartTimer
 10632 ;;		_TimerDone
 10633 ;; This function is called by:
 10634 ;;		_main
 10635 ;;		_vterm_dump
 10636 ;; This function uses a reentrant model
 10637 ;;
 10638                           
 10639                           	psect	text38
 10640  01BD06                     __ptext38:
 10641                           	opt callstack 0
 10642  01BD06                     _WaitMs:
 10643                           	opt callstack 12
 10644                           
 10645                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 10646                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 10647                           
 10648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10649                           ;incstack = 0
 10650  01BD06  0EFE               	movlw	-2
 10651  01BD08  006F FF8F FFE6     	movff	plusw1,postinc1
 10652  01BD0E  006F FF8F FFE6     	movff	plusw1,postinc1
 10653  01BD14  0E00               	movlw	0
 10654  01BD16  6EE6               	movwf	postinc1,c
 10655  01BD18  EC94  F0DD         	call	_StartTimer	;wreg free
 10656                           
 10657                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10658  01BD1C  D005               	goto	l10047
 10659  01BD1E                     l1616:
 10660                           
 10661                           ;timers.c: 36:   __nop();
 10662  01BD1E  F000               	nop	
 10663                           
 10664                           ;timers.c: 37:   __nop();
 10665  01BD20  F000               	nop	
 10666                           
 10667                           ;timers.c: 38:   __nop();
 10668  01BD22  F000               	nop	
 10669                           
 10670                           ;timers.c: 39:   __nop();
 10671  01BD24  F000               	nop	
 10672  01BD26  0004               	clrwdt		;# 
 10673  01BD28                     l10047:
 10674                           
 10675                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10676  01BD28  0E00               	movlw	0
 10677  01BD2A  6EE6               	movwf	postinc1,c
 10678  01BD2C  ECE9  F0DF         	call	_TimerDone	;wreg free
 10679  01BD30  5001               	movf	btemp^0,w,c
 10680  01BD32  B4D8               	btfsc	status,2,c
 10681  01BD34  D7F4               	goto	l1616
 10682                           
 10683                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10684  01BD36  52E5               	movf	postdec1,f,c
 10685  01BD38  52E5               	movf	postdec1,f,c
 10686  01BD3A  0012               	return		;funcret
 10687  01BD3C                     __end_of_WaitMs:
 10688                           	opt callstack 0
 10689                           
 10690 ;; *************** function _update_lcd *****************
 10691 ;; Defined at:
 10692 ;;		line 85 in file "mconfig.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;  vterm           1  [STACK] unsigned char 
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;		None
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  1  [STACK] unsigned char 
 10699 ;; Registers used:
 10700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10710 ;;Total ram usage:        0 bytes
 10711 ;; Hardware stack levels used:    1
 10712 ;; Hardware stack levels required when called:   27
 10713 ;; This function calls:
 10714 ;;		_eaDogM_WriteStringAtPos
 10715 ;;		_wait_lcd_done
 10716 ;; This function is called by:
 10717 ;;		_main
 10718 ;;		_check_help
 10719 ;; This function uses a reentrant model
 10720 ;;
 10721                           
 10722                           	psect	text39
 10723  019E34                     __ptext39:
 10724                           	opt callstack 0
 10725  019E34                     _update_lcd:
 10726                           	opt callstack 3
 10727                           
 10728                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 10729                           ;stkvar	_vterm @ sp[(0)+-1]
 10730                           
 10731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10732                           ;incstack = 0
 10733  019E34  0EFF               	movlw	-1
 10734  019E36  006F FF8C  F001    	movff	plusw1,btemp
 10735  019E3C  0E03               	movlw	3
 10736  019E3E  1601               	andwf	btemp^0,f,c
 10737  019E40  0EFF               	movlw	-1
 10738  019E42  0060  F007  FFE3   	movff	btemp,plusw1
 10739                           
 10740                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 10741  019E48  EE22  F20A         	lfsr	2,_D+480
 10742  019E4C  A0DF               	btfss	indf2,0,c
 10743  019E4E  D004               	goto	l13055
 10744                           
 10745                           ;stkvar	_vterm @ sp[(0)+-1]
 10746  019E50  0EFF               	movlw	-1
 10747  019E52  50E3               	movf	plusw1,w,c
 10748  019E54  B4D8               	btfsc	status,2,c
 10749  019E56  D074               	goto	l1692
 10750  019E58                     l13055:
 10751                           
 10752                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 10753                           ;stkvar	_vterm @ sp[(0)+-1]
 10754  019E58  0EFF               	movlw	-1
 10755  019E5A  50E3               	movf	plusw1,w,c
 10756  019E5C  0D78               	mullw	120
 10757  019E5E  0E3E               	movlw	low (_D+20)
 10758  019E60  24F3               	addwf	243,w,c
 10759  019E62  6ED9               	movwf	fsr2l,c
 10760  019E64  0E08               	movlw	high (_D+20)
 10761  019E66  20F4               	addwfc	prodh,w,c
 10762  019E68  6EDA               	movwf	fsr2h,c
 10763  019E6A  0E00               	movlw	0
 10764  019E6C  6EDF               	movwf	indf2,c
 10765                           
 10766                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 10767                           ;stkvar	_vterm @ sp[(0)+-1]
 10768  019E6E  0EFF               	movlw	-1
 10769  019E70  50E3               	movf	plusw1,w,c
 10770  019E72  0D78               	mullw	120
 10771  019E74  0E66               	movlw	low (_D+60)
 10772  019E76  24F3               	addwf	243,w,c
 10773  019E78  6ED9               	movwf	fsr2l,c
 10774  019E7A  0E08               	movlw	high (_D+60)
 10775  019E7C  20F4               	addwfc	prodh,w,c
 10776  019E7E  6EDA               	movwf	fsr2h,c
 10777  019E80  0E00               	movlw	0
 10778  019E82  6EDF               	movwf	indf2,c
 10779                           
 10780                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 10781                           ;stkvar	_vterm @ sp[(0)+-1]
 10782  019E84  0EFF               	movlw	-1
 10783  019E86  50E3               	movf	plusw1,w,c
 10784  019E88  0D78               	mullw	120
 10785  019E8A  0E8E               	movlw	low (_D+100)
 10786  019E8C  24F3               	addwf	243,w,c
 10787  019E8E  6ED9               	movwf	fsr2l,c
 10788  019E90  0E08               	movlw	high (_D+100)
 10789  019E92  20F4               	addwfc	prodh,w,c
 10790  019E94  6EDA               	movwf	fsr2h,c
 10791  019E96  0E00               	movlw	0
 10792  019E98  6EDF               	movwf	indf2,c
 10793                           
 10794                           ;mconfig.c: 95:  wait_lcd_done();
 10795  019E9A  EC6E  F0E1         	call	_wait_lcd_done	;wreg free
 10796                           
 10797                           ; BSR set to: 0
 10798                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10799                           ;stkvar	_vterm @ sp[(0)+-1]
 10800  019E9E  0EFF               	movlw	-1
 10801  019EA0  50E3               	movf	plusw1,w,c
 10802  019EA2  0D78               	mullw	120
 10803  019EA4  0E2A               	movlw	low _D
 10804  019EA6  6E0B               	movwf	(btemp+10)^0,c
 10805  019EA8  0E08               	movlw	high _D
 10806  019EAA  6E0C               	movwf	(btemp+11)^0,c
 10807  019EAC  50F3               	movf	243,w,c
 10808  019EAE  260B               	addwf	(btemp+10)^0,f,c
 10809  019EB0  50F4               	movf	244,w,c
 10810  019EB2  220C               	addwfc	(btemp+11)^0,f,c
 10811  019EB4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10812  019EBA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10813  019EC0  0E00               	movlw	0
 10814  019EC2  6EE6               	movwf	postinc1,c
 10815  019EC4  0E00               	movlw	0
 10816  019EC6  6EE6               	movwf	postinc1,c
 10817  019EC8  ECA8  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10818                           
 10819                           ; BSR set to: 59
 10820                           ;mconfig.c: 97:  wait_lcd_done();
 10821  019ECC  EC6E  F0E1         	call	_wait_lcd_done	;wreg free
 10822                           
 10823                           ; BSR set to: 0
 10824                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10825                           ;stkvar	_vterm @ sp[(0)+-1]
 10826  019ED0  0EFF               	movlw	-1
 10827  019ED2  50E3               	movf	plusw1,w,c
 10828  019ED4  0D78               	mullw	120
 10829  019ED6  0E2A               	movlw	low _D
 10830  019ED8  6E0B               	movwf	(btemp+10)^0,c
 10831  019EDA  0E08               	movlw	high _D
 10832  019EDC  6E0C               	movwf	(btemp+11)^0,c
 10833  019EDE  0E28               	movlw	40
 10834  019EE0  260B               	addwf	(btemp+10)^0,f,c
 10835  019EE2  0E00               	movlw	0
 10836  019EE4  220C               	addwfc	(btemp+11)^0,f,c
 10837  019EE6  50F3               	movf	243,w,c
 10838  019EE8  260B               	addwf	(btemp+10)^0,f,c
 10839  019EEA  50F4               	movf	244,w,c
 10840  019EEC  220C               	addwfc	(btemp+11)^0,f,c
 10841  019EEE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10842  019EF4  0060  F033  FFE6   	movff	btemp+11,postinc1
 10843  019EFA  0E00               	movlw	0
 10844  019EFC  6EE6               	movwf	postinc1,c
 10845  019EFE  0E01               	movlw	1
 10846  019F00  6EE6               	movwf	postinc1,c
 10847  019F02  ECA8  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10848                           
 10849                           ; BSR set to: 59
 10850                           ;mconfig.c: 99:  wait_lcd_done();
 10851  019F06  EC6E  F0E1         	call	_wait_lcd_done	;wreg free
 10852                           
 10853                           ; BSR set to: 0
 10854                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10855                           ;stkvar	_vterm @ sp[(0)+-1]
 10856  019F0A  0EFF               	movlw	-1
 10857  019F0C  50E3               	movf	plusw1,w,c
 10858  019F0E  0D78               	mullw	120
 10859  019F10  0E2A               	movlw	low _D
 10860  019F12  6E0B               	movwf	(btemp+10)^0,c
 10861  019F14  0E08               	movlw	high _D
 10862  019F16  6E0C               	movwf	(btemp+11)^0,c
 10863  019F18  0E50               	movlw	80
 10864  019F1A  260B               	addwf	(btemp+10)^0,f,c
 10865  019F1C  0E00               	movlw	0
 10866  019F1E  220C               	addwfc	(btemp+11)^0,f,c
 10867  019F20  50F3               	movf	243,w,c
 10868  019F22  260B               	addwf	(btemp+10)^0,f,c
 10869  019F24  50F4               	movf	244,w,c
 10870  019F26  220C               	addwfc	(btemp+11)^0,f,c
 10871  019F28  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10872  019F2E  0060  F033  FFE6   	movff	btemp+11,postinc1
 10873  019F34  0E00               	movlw	0
 10874  019F36  6EE6               	movwf	postinc1,c
 10875  019F38  0E02               	movlw	2
 10876  019F3A  6EE6               	movwf	postinc1,c
 10877  019F3C  ECA8  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10878  019F40                     l1692:
 10879                           
 10880                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10881  019F40  52E5               	movf	postdec1,f,c
 10882  019F42  0012               	return		;funcret
 10883  019F44                     __end_of_update_lcd:
 10884                           	opt callstack 0
 10885                           
 10886 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10887 ;; Defined at:
 10888 ;;		line 195 in file "eadog.c"
 10889 ;; Parameters:    Size  Location     Type
 10890 ;;  r               1  [STACK] const unsigned char 
 10891 ;;  c               1  [STACK] const unsigned char 
 10892 ;;  strPtr          2  [STACK] PTR unsigned char 
 10893 ;;		 -> D.lcd(480), D(482), V(191), 
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;  row             1  [STACK] unsigned char 
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  1  [STACK] void 
 10898 ;; Registers used:
 10899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10900 ;; Tracked objects:
 10901 ;;		On entry : 3F/0
 10902 ;;		On exit  : 3F/3B
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10909 ;;Total ram usage:        0 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:   26
 10912 ;; This function calls:
 10913 ;;		_eaDogM_WriteString
 10914 ;;		_send_lcd_cmd_dma
 10915 ;;		_send_lcd_data_dma
 10916 ;;		_wait_lcd_done
 10917 ;;		_wdtdelay
 10918 ;; This function is called by:
 10919 ;;		_update_lcd
 10920 ;;		_vterm_dump
 10921 ;; This function uses a reentrant model
 10922 ;;
 10923                           
 10924                           	psect	text40
 10925  01AB50                     __ptext40:
 10926                           	opt callstack 0
 10927  01AB50                     _eaDogM_WriteStringAtPos:
 10928                           	opt callstack 0
 10929                           
 10930                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10931  01AB50  52E6               	movf	postinc1,f,c
 10932                           
 10933                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10934                           
 10935                           ;incstack = 0
 10936  01AB52  D014               	goto	l13031
 10937  01AB54                     l13019:
 10938                           
 10939                           ;eadog.c: 201:   row = 0x40;
 10940                           ;stkvar	_row @ sp[(-1)+0]
 10941  01AB54  0EFF               	movlw	-1
 10942  01AB56  6AE3               	clrf	plusw1,c
 10943  01AB58  8CE3               	bsf	plusw1,6,c
 10944                           
 10945                           ;eadog.c: 202:   break;
 10946  01AB5A  D026               	goto	l13033
 10947  01AB5C                     l13021:
 10948                           
 10949                           ;eadog.c: 204:   row = 0x14;
 10950                           ;stkvar	_row @ sp[(-1)+0]
 10951  01AB5C  0EFF               	movlw	-1
 10952  01AB5E  6AE3               	clrf	plusw1,c
 10953  01AB60  84E3               	bsf	plusw1,2,c
 10954  01AB62  88E3               	bsf	plusw1,4,c	;indir
 10955                           
 10956                           ;eadog.c: 205:   break;
 10957  01AB64  D021               	goto	l13033
 10958  01AB66                     l13023:
 10959                           
 10960                           ;eadog.c: 207:   row = 0x54;
 10961  01AB66  0E54               	movlw	84
 10962  01AB68  6E0C               	movwf	(btemp+11)^0,c
 10963                           
 10964                           ;stkvar	_row @ sp[(-1)+0]
 10965  01AB6A  0EFF               	movlw	-1
 10966  01AB6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 10967                           
 10968                           ;eadog.c: 208:   break;
 10969  01AB72  D01A               	goto	l13033
 10970  01AB74                     l13025:
 10971                           
 10972                           ;eadog.c: 210:   row = 0x1;
 10973                           ;stkvar	_row @ sp[(-1)+0]
 10974  01AB74  0EFF               	movlw	-1
 10975  01AB76  6AE3               	clrf	plusw1,c
 10976  01AB78  2AE3               	incf	plusw1,f,c
 10977                           
 10978                           ;eadog.c: 211:   break;
 10979  01AB7A  D016               	goto	l13033
 10980  01AB7C                     l13031:
 10981                           
 10982                           ;stkvar	_r @ sp[(-1)+-1]
 10983  01AB7C  0EFE               	movlw	-2
 10984  01AB7E  50E3               	movf	plusw1,w,c
 10985  01AB80  6E0B               	movwf	(btemp+10)^0,c
 10986  01AB82  6A0C               	clrf	(btemp+11)^0,c
 10987                           
 10988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10989                           ; Switch size 1, requested type "simple"
 10990                           ; Number of cases is 1, Range of values is 0 to 0
 10991                           ; switch strategies available:
 10992                           ; Name         Instructions Cycles
 10993                           ; simple_byte            4     3 (average)
 10994                           ;	Chosen strategy is simple_byte
 10995  01AB84  500C               	movf	(btemp+11)^0,w,c
 10996  01AB86  0A00               	xorlw	0	; case 0
 10997  01AB88  A4D8               	btfss	status,2,c
 10998  01AB8A  D7E4               	goto	l13019
 10999                           
 11000                           ; Switch size 1, requested type "simple"
 11001                           ; Number of cases is 4, Range of values is 0 to 3
 11002                           ; switch strategies available:
 11003                           ; Name         Instructions Cycles
 11004                           ; simple_byte           13     7 (average)
 11005                           ;	Chosen strategy is simple_byte
 11006  01AB8C  500B               	movf	(btemp+10)^0,w,c
 11007  01AB8E  0A00               	xorlw	0	; case 0
 11008  01AB90  B4D8               	btfsc	status,2,c
 11009  01AB92  D7E0               	goto	l13019
 11010  01AB94  0A01               	xorlw	1	; case 1
 11011  01AB96  B4D8               	btfsc	status,2,c
 11012  01AB98  D7E1               	goto	l13021
 11013  01AB9A  0A03               	xorlw	3	; case 2
 11014  01AB9C  B4D8               	btfsc	status,2,c
 11015  01AB9E  D7E3               	goto	l13023
 11016  01ABA0  0A01               	xorlw	1	; case 3
 11017  01ABA2  B4D8               	btfsc	status,2,c
 11018  01ABA4  D7E7               	goto	l13025
 11019  01ABA6  D7D6               	goto	l13019
 11020  01ABA8                     l13033:
 11021                           
 11022                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 11023  01ABA8  0E45               	movlw	69
 11024  01ABAA  6EE6               	movwf	postinc1,c
 11025  01ABAC  ECD0  F0E1         	call	_send_lcd_cmd_dma	;wreg free
 11026                           
 11027                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 11028                           ;stkvar	_c @ sp[(-1)+-2]
 11029  01ABB0  0EFD               	movlw	-3
 11030  01ABB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11031                           
 11032                           ;stkvar	_row @ sp[(-1)+0]
 11033  01ABB8  0EFF               	movlw	-1
 11034  01ABBA  50E3               	movf	plusw1,w,c
 11035  01ABBC  240C               	addwf	(btemp+11)^0,w,c
 11036  01ABBE  6EE6               	movwf	postinc1,c
 11037  01ABC0  ECCE  F0DB         	call	_send_lcd_data_dma	;wreg free
 11038                           
 11039                           ; BSR set to: 59
 11040                           ;eadog.c: 218:  wait_lcd_done();
 11041  01ABC4  EC6E  F0E1         	call	_wait_lcd_done	;wreg free
 11042                           
 11043                           ; BSR set to: 0
 11044                           ;eadog.c: 219:  wdtdelay(8);
 11045  01ABC8  0E08               	movlw	8
 11046  01ABCA  6EE6               	movwf	postinc1,c
 11047  01ABCC  0E00               	movlw	0
 11048  01ABCE  6EE6               	movwf	postinc1,c
 11049  01ABD0  0E00               	movlw	0
 11050  01ABD2  6EE6               	movwf	postinc1,c
 11051  01ABD4  0E00               	movlw	0
 11052  01ABD6  6EE6               	movwf	postinc1,c
 11053  01ABD8  ECFB  F0DA         	call	_wdtdelay	;wreg free
 11054                           
 11055                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 11056                           ;stkvar	_strPtr @ sp[(-1)+-4]
 11057  01ABDC  0EFB               	movlw	-5
 11058  01ABDE  006F FF8F FFE6     	movff	plusw1,postinc1
 11059  01ABE4  006F FF8F FFE6     	movff	plusw1,postinc1
 11060  01ABEA  ECFC  F0D5         	call	_eaDogM_WriteString	;wreg free
 11061                           
 11062                           ; BSR set to: 59
 11063                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 11064  01ABEE  0EFB               	movlw	251
 11065  01ABF0  26E1               	addwf	fsr1l,f,c
 11066  01ABF2  0EFF               	movlw	255
 11067  01ABF4  22E2               	addwfc	fsr1h,f,c
 11068  01ABF6  0012               	return		;funcret
 11069  01ABF8                     __end_of_eaDogM_WriteStringAtPos:
 11070                           	opt callstack 0
 11071                           
 11072 ;; *************** function _send_lcd_cmd_dma *****************
 11073 ;; Defined at:
 11074 ;;		line 171 in file "eadog.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;  strPtr          1  [STACK] const unsigned char 
 11077 ;; Auto vars:     Size  Location     Type
 11078 ;;		None
 11079 ;; Return value:  Size  Location     Type
 11080 ;;                  1  [STACK] void 
 11081 ;; Registers used:
 11082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11083 ;; Tracked objects:
 11084 ;;		On entry : 0/3D
 11085 ;;		On exit  : 3F/0
 11086 ;;		Unchanged: 0/0
 11087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11092 ;;Total ram usage:        0 bytes
 11093 ;; Hardware stack levels used:    1
 11094 ;; Hardware stack levels required when called:   25
 11095 ;; This function calls:
 11096 ;;		_send_lcd_data_dma
 11097 ;;		_wait_lcd_done
 11098 ;; This function is called by:
 11099 ;;		_eaDogM_WriteStringAtPos
 11100 ;;		_eaDogM_WriteCommand
 11101 ;; This function uses a reentrant model
 11102 ;;
 11103                           
 11104                           	psect	text41
 11105  01C3A0                     __ptext41:
 11106                           	opt callstack 0
 11107  01C3A0                     _send_lcd_cmd_dma:
 11108                           	opt callstack 3
 11109                           
 11110                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 11111                           
 11112                           ; BSR set to: 59
 11113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11114                           ;incstack = 0
 11115  01C3A0  0EFE               	movlw	254
 11116  01C3A2  6EE6               	movwf	postinc1,c
 11117  01C3A4  ECCE  F0DB         	call	_send_lcd_data_dma	;wreg free
 11118                           
 11119                           ; BSR set to: 59
 11120                           ;eadog.c: 174:  wait_lcd_done();
 11121  01C3A8  EC6E  F0E1         	call	_wait_lcd_done	;wreg free
 11122                           
 11123                           ; BSR set to: 0
 11124                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 11125                           ;stkvar	_strPtr @ sp[(0)+-1]
 11126  01C3AC  0EFF               	movlw	-1
 11127  01C3AE  50E3               	movf	plusw1,w,c
 11128  01C3B0  6EE6               	movwf	postinc1,c
 11129  01C3B2  ECCE  F0DB         	call	_send_lcd_data_dma	;wreg free
 11130                           
 11131                           ;eadog.c: 176:  wait_lcd_done();
 11132  01C3B6  EC6E  F0E1         	call	_wait_lcd_done	;wreg free
 11133                           
 11134                           ; BSR set to: 0
 11135                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 11136  01C3BA  52E5               	movf	postdec1,f,c
 11137  01C3BC  0012               	return		;funcret
 11138  01C3BE                     __end_of_send_lcd_cmd_dma:
 11139                           	opt callstack 0
 11140                           
 11141 ;; *************** function _wait_lcd_done *****************
 11142 ;; Defined at:
 11143 ;;		line 444 in file "eadog.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;		None
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;		None
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  1  [STACK] void 
 11150 ;; Registers used:
 11151 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/1
 11154 ;;		On exit  : 3F/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11161 ;;Total ram usage:        0 bytes
 11162 ;; Hardware stack levels used:    1
 11163 ;; Hardware stack levels required when called:   16
 11164 ;; This function calls:
 11165 ;;		_wdtdelay
 11166 ;; This function is called by:
 11167 ;;		_main
 11168 ;;		_send_lcd_cmd_dma
 11169 ;;		_eaDogM_WriteStringAtPos
 11170 ;;		_update_lcd
 11171 ;;		_vterm_dump
 11172 ;; This function uses a reentrant model
 11173 ;;
 11174                           
 11175                           	psect	text42
 11176  01C2DC                     __ptext42:
 11177                           	opt callstack 0
 11178  01C2DC                     _wait_lcd_done:
 11179                           	opt callstack 14
 11180                           
 11181                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 11182                           
 11183                           ; BSR set to: 0
 11184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11185                           ;incstack = 0
 11186  01C2DC  0101               	movlb	1	; () banked
 11187  01C2DE  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
 11188  01C2E0  D7FD               	goto	_wait_lcd_done
 11189  01C2E2                     u8720:
 11190  01C2E2  013D               	movlb	61	; () banked
 11191  01C2E4  AB17               	btfss	23,5,b	;volatile
 11192  01C2E6  D7FD               	goto	u8720
 11193                           
 11194                           ; BSR set to: 61
 11195                           ;eadog.c: 448:  wdtdelay(50);
 11196  01C2E8  0E32               	movlw	50
 11197  01C2EA  6EE6               	movwf	postinc1,c
 11198  01C2EC  0E00               	movlw	0
 11199  01C2EE  6EE6               	movwf	postinc1,c
 11200  01C2F0  0E00               	movlw	0
 11201  01C2F2  6EE6               	movwf	postinc1,c
 11202  01C2F4  0E00               	movlw	0
 11203  01C2F6  6EE6               	movwf	postinc1,c
 11204  01C2F8  ECFB  F0DA         	call	_wdtdelay	;wreg free
 11205                           
 11206                           ; BSR set to: 0
 11207                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 11208  01C2FC  0012               	return		;funcret
 11209  01C2FE                     __end_of_wait_lcd_done:
 11210                           	opt callstack 0
 11211                           
 11212 ;; *************** function _wdtdelay *****************
 11213 ;; Defined at:
 11214 ;;		line 23 in file "eadog.c"
 11215 ;; Parameters:    Size  Location     Type
 11216 ;;  delay           4  [STACK] const unsigned long 
 11217 ;; Auto vars:     Size  Location     Type
 11218 ;;		None
 11219 ;; Return value:  Size  Location     Type
 11220 ;;                  1  [STACK] void 
 11221 ;; Registers used:
 11222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11223 ;; Tracked objects:
 11224 ;;		On entry : 2/3D
 11225 ;;		On exit  : 3F/0
 11226 ;;		Unchanged: 0/0
 11227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11232 ;;Total ram usage:        0 bytes
 11233 ;; Hardware stack levels used:    1
 11234 ;; Hardware stack levels required when called:   15
 11235 ;; This function calls:
 11236 ;;		Nothing
 11237 ;; This function is called by:
 11238 ;;		_init_display
 11239 ;;		_send_lcd_data
 11240 ;;		_send_lcd_cmd
 11241 ;;		_send_lcd_cmd_long
 11242 ;;		_eaDogM_WriteStringAtPos
 11243 ;;		_wait_lcd_done
 11244 ;; This function uses a reentrant model
 11245 ;;
 11246                           
 11247                           	psect	text43
 11248  01B5F6                     __ptext43:
 11249                           	opt callstack 0
 11250  01B5F6                     _wdtdelay:
 11251                           	opt callstack 14
 11252                           
 11253                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 11254                           
 11255                           ; BSR set to: 0
 11256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11257                           ;incstack = 0
 11258  01B5F6  0100               	movlb	0	; () banked
 11259  01B5F8  6B78               	clrf	wdtdelay@dcount& (0+255),b
 11260  01B5FA  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 11261  01B5FC  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 11262  01B5FE  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 11263  01B600                     l1469:
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;eadog.c: 28:   __nop();
 11267  01B600  F000               	nop	
 11268  01B602  0004               	clrwdt		;# 
 11269                           
 11270                           ;eadog.c: 30:  };
 11271  01B604  0E01               	movlw	1
 11272  01B606  0100               	movlb	0	; () banked
 11273  01B608  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 11274  01B60A  0E00               	movlw	0
 11275  01B60C  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 11276  01B60E  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 11277  01B610  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;stkvar	_delay @ sp[(0)+-4]
 11281  01B612  0EFC               	movlw	-4
 11282  01B614  006F FF8C  F001    	movff	plusw1,btemp
 11283  01B61A  5178               	movf	wdtdelay@dcount& (0+255),w,b
 11284  01B61C  5C01               	subwf	btemp^0,w,c
 11285  01B61E  0EFD               	movlw	-3
 11286  01B620  006F FF8C  F001    	movff	plusw1,btemp
 11287  01B626  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 11288  01B628  5801               	subwfb	btemp^0,w,c
 11289  01B62A  0EFE               	movlw	-2
 11290  01B62C  006F FF8C  F001    	movff	plusw1,btemp
 11291  01B632  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 11292  01B634  5801               	subwfb	btemp^0,w,c
 11293  01B636  0EFF               	movlw	-1
 11294  01B638  006F FF8C  F001    	movff	plusw1,btemp
 11295  01B63E  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 11296  01B640  5801               	subwfb	btemp^0,w,c
 11297  01B642  B0D8               	btfsc	status,0,c
 11298  01B644  D7DD               	goto	l1469
 11299                           
 11300                           ; BSR set to: 0
 11301                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 11302  01B646  52E5               	movf	postdec1,f,c
 11303  01B648  52E5               	movf	postdec1,f,c
 11304  01B64A  52E5               	movf	postdec1,f,c
 11305  01B64C  52E5               	movf	postdec1,f,c
 11306  01B64E  0012               	return		;funcret
 11307  01B650                     __end_of_wdtdelay:
 11308                           	opt callstack 0
 11309                           
 11310 ;; *************** function _send_lcd_data_dma *****************
 11311 ;; Defined at:
 11312 ;;		line 182 in file "eadog.c"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;  strPtr          1  [STACK] const unsigned char 
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;		None
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  1  [STACK] void 
 11319 ;; Registers used:
 11320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11321 ;; Tracked objects:
 11322 ;;		On entry : 0/0
 11323 ;;		On exit  : 3F/3B
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11330 ;;Total ram usage:        0 bytes
 11331 ;; Hardware stack levels used:    1
 11332 ;; Hardware stack levels required when called:   24
 11333 ;; This function calls:
 11334 ;;		_printf
 11335 ;;		_ringBufS_flush
 11336 ;;		_start_lcd
 11337 ;;		_wait_lcd_set
 11338 ;; This function is called by:
 11339 ;;		_send_lcd_cmd_dma
 11340 ;;		_eaDogM_WriteStringAtPos
 11341 ;; This function uses a reentrant model
 11342 ;;
 11343                           
 11344                           	psect	text44
 11345  01B79C                     __ptext44:
 11346                           	opt callstack 0
 11347  01B79C                     _send_lcd_data_dma:
 11348                           	opt callstack 4
 11349                           
 11350                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 11351                           
 11352                           ; BSR set to: 0
 11353                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11354                           ;incstack = 0
 11355  01B79C  ECEA  F0E2         	call	_wait_lcd_set	;wreg free
 11356                           
 11357                           ; BSR set to: 1
 11358                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 11359  01B7A0  0E00               	movlw	0
 11360  01B7A2  6EE6               	movwf	postinc1,c
 11361  01B7A4  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11362  01B7AA  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11363  01B7B0  ECEC  F0D6         	call	_ringBufS_flush	;wreg free
 11364  01B7B4  94BC               	bcf	188,2,c	;volatile
 11365                           
 11366                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 11367  01B7B6  013B               	movlb	59	; () banked
 11368  01B7B8  9FFC               	bcf	252,7,b	;volatile
 11369                           
 11370                           ; BSR set to: 59
 11371                           ;eadog.c: 189:  DMA1SSZ = 1;
 11372  01B7BA  0E00               	movlw	0
 11373  01B7BC  6FF8               	movwf	248,b	;volatile
 11374  01B7BE  0E01               	movlw	1
 11375  01B7C0  6FF7               	movwf	247,b	;volatile
 11376                           
 11377                           ; BSR set to: 59
 11378                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 11379  01B7C2  8FFC               	bsf	252,7,b	;volatile
 11380                           
 11381                           ; BSR set to: 59
 11382                           ;eadog.c: 191:  printf("%c", strPtr);
 11383                           ;stkvar	_strPtr @ sp[(0)+-1]
 11384  01B7C4  0EFF               	movlw	-1
 11385  01B7C6  50E3               	movf	plusw1,w,c
 11386  01B7C8  6EE6               	movwf	postinc1,c
 11387  01B7CA  0E00               	movlw	0
 11388  01B7CC  6EE6               	movwf	postinc1,c
 11389  01B7CE  0EF9               	movlw	low STR_44
 11390  01B7D0  6EE6               	movwf	postinc1,c
 11391  01B7D2  0EFF               	movlw	high STR_44
 11392  01B7D4  6EE6               	movwf	postinc1,c
 11393  01B7D6  0E04               	movlw	4
 11394  01B7D8  6EE6               	movwf	postinc1,c
 11395  01B7DA  EC3C  F0DA         	call	_printf	;wreg free
 11396                           
 11397                           ; BSR set to: 0
 11398                           ;eadog.c: 192:  start_lcd();
 11399  01B7DE  ECED  F0E2         	call	_start_lcd	;wreg free
 11400                           
 11401                           ; BSR set to: 59
 11402                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11403  01B7E2  52E5               	movf	postdec1,f,c
 11404  01B7E4  0012               	return		;funcret
 11405  01B7E6                     __end_of_send_lcd_data_dma:
 11406                           	opt callstack 0
 11407                           
 11408 ;; *************** function _eaDogM_WriteString *****************
 11409 ;; Defined at:
 11410 ;;		line 151 in file "eadog.c"
 11411 ;; Parameters:    Size  Location     Type
 11412 ;;  strPtr          2  [STACK] PTR unsigned char 
 11413 ;;		 -> D.lcd(480), D(482), V(191), 
 11414 ;; Auto vars:     Size  Location     Type
 11415 ;;		None
 11416 ;; Return value:  Size  Location     Type
 11417 ;;                  1  [STACK] void 
 11418 ;; Registers used:
 11419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11420 ;; Tracked objects:
 11421 ;;		On entry : 3F/0
 11422 ;;		On exit  : 3F/3B
 11423 ;;		Unchanged: 0/0
 11424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11429 ;;Total ram usage:        0 bytes
 11430 ;; Hardware stack levels used:    1
 11431 ;; Hardware stack levels required when called:   24
 11432 ;; This function calls:
 11433 ;;		_printf
 11434 ;;		_ringBufS_flush
 11435 ;;		_start_lcd
 11436 ;;		_strlen
 11437 ;;		_wait_lcd_set
 11438 ;; This function is called by:
 11439 ;;		_eaDogM_WriteStringAtPos
 11440 ;; This function uses a reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text45
 11444  01ABF8                     __ptext45:
 11445                           	opt callstack 0
 11446  01ABF8                     _eaDogM_WriteString:
 11447                           	opt callstack 4
 11448                           
 11449                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 11450                           
 11451                           ; BSR set to: 59
 11452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11453                           ;incstack = 0
 11454  01ABF8  ECEA  F0E2         	call	_wait_lcd_set	;wreg free
 11455                           
 11456                           ; BSR set to: 1
 11457                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 11458  01ABFC  0E00               	movlw	0
 11459  01ABFE  6EE6               	movwf	postinc1,c
 11460  01AC00  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11461  01AC06  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11462  01AC0C  ECEC  F0D6         	call	_ringBufS_flush	;wreg free
 11463  01AC10  94BC               	bcf	188,2,c	;volatile
 11464                           
 11465                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 11466                           ;stkvar	_strPtr @ sp[(0)+-2]
 11467  01AC12  0EFE               	movlw	-2
 11468  01AC14  006F FF8F FFE6     	movff	plusw1,postinc1
 11469  01AC1A  006F FF8F FFE6     	movff	plusw1,postinc1
 11470  01AC20  EC4F  F0D6         	call	_strlen	;wreg free
 11471  01AC24  5002               	movf	(btemp+1)^0,w,c
 11472  01AC26  E104               	bnz	u12380
 11473  01AC28  0E41               	movlw	65
 11474  01AC2A  5C01               	subwf	btemp^0,w,c
 11475  01AC2C  A0D8               	btfss	status,0,c
 11476  01AC2E  D010               	goto	l12975
 11477  01AC30                     u12380:
 11478                           
 11479                           ;stkvar	_strPtr @ sp[(0)+-2]
 11480  01AC30  0EFE               	movlw	-2
 11481  01AC32  006F FF8C  F00B    	movff	plusw1,btemp+10
 11482  01AC38  0EFF               	movlw	-1
 11483  01AC3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11484  01AC40  0E40               	movlw	64
 11485  01AC42  240B               	addwf	(btemp+10)^0,w,c
 11486  01AC44  6ED9               	movwf	fsr2l,c
 11487  01AC46  0E00               	movlw	0
 11488  01AC48  200C               	addwfc	(btemp+11)^0,w,c
 11489  01AC4A  6EDA               	movwf	fsr2h,c
 11490  01AC4C  0E00               	movlw	0
 11491  01AC4E  6EDF               	movwf	indf2,c
 11492  01AC50                     l12975:
 11493                           
 11494                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 11495  01AC50  013B               	movlb	59	; () banked
 11496  01AC52  9FFC               	bcf	252,7,b	;volatile
 11497                           
 11498                           ; BSR set to: 59
 11499                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 11500                           ;stkvar	_strPtr @ sp[(0)+-2]
 11501  01AC54  0EFE               	movlw	-2
 11502  01AC56  006F FF8F FFE6     	movff	plusw1,postinc1
 11503  01AC5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11504  01AC62  EC4F  F0D6         	call	_strlen	;wreg free
 11505  01AC66  0060  F007  FBF7   	movff	btemp,15351	;volatile
 11506  01AC6C  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 11507                           
 11508                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 11509  01AC72  013B               	movlb	59	; () banked
 11510  01AC74  8FFC               	bsf	252,7,b	;volatile
 11511                           
 11512                           ; BSR set to: 59
 11513                           ;eadog.c: 161:  printf("%s", strPtr);
 11514                           ;stkvar	_strPtr @ sp[(0)+-2]
 11515  01AC76  0EFE               	movlw	-2
 11516  01AC78  006F FF8F FFE6     	movff	plusw1,postinc1
 11517  01AC7E  006F FF8F FFE6     	movff	plusw1,postinc1
 11518  01AC84  0EFC               	movlw	low STR_43
 11519  01AC86  6EE6               	movwf	postinc1,c
 11520  01AC88  0EFF               	movlw	high STR_43
 11521  01AC8A  6EE6               	movwf	postinc1,c
 11522  01AC8C  0E04               	movlw	4
 11523  01AC8E  6EE6               	movwf	postinc1,c
 11524  01AC90  EC3C  F0DA         	call	_printf	;wreg free
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;eadog.c: 162:  start_lcd();
 11528  01AC94  ECED  F0E2         	call	_start_lcd	;wreg free
 11529                           
 11530                           ; BSR set to: 59
 11531                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 11532  01AC98  52E5               	movf	postdec1,f,c
 11533  01AC9A  52E5               	movf	postdec1,f,c
 11534  01AC9C  0012               	return		;funcret
 11535  01AC9E                     __end_of_eaDogM_WriteString:
 11536                           	opt callstack 0
 11537                           
 11538 ;; *************** function _wait_lcd_set *****************
 11539 ;; Defined at:
 11540 ;;		line 434 in file "eadog.c"
 11541 ;; Parameters:    Size  Location     Type
 11542 ;;		None
 11543 ;; Auto vars:     Size  Location     Type
 11544 ;;		None
 11545 ;; Return value:  Size  Location     Type
 11546 ;;                  1  [STACK] void 
 11547 ;; Registers used:
 11548 ;;		None
 11549 ;; Tracked objects:
 11550 ;;		On entry : 0/0
 11551 ;;		On exit  : 3F/1
 11552 ;;		Unchanged: 0/0
 11553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11558 ;;Total ram usage:        0 bytes
 11559 ;; Hardware stack levels used:    1
 11560 ;; Hardware stack levels required when called:   15
 11561 ;; This function calls:
 11562 ;;		Nothing
 11563 ;; This function is called by:
 11564 ;;		_eaDogM_WriteString
 11565 ;;		_send_lcd_data_dma
 11566 ;; This function uses a reentrant model
 11567 ;;
 11568                           
 11569                           	psect	text46
 11570  01C5D4                     __ptext46:
 11571                           	opt callstack 0
 11572  01C5D4                     _wait_lcd_set:
 11573                           	opt callstack 12
 11574                           
 11575                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 11576                           
 11577                           ; BSR set to: 59
 11578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11579                           ;incstack = 0
 11580  01C5D4  0101               	movlb	1	; () banked
 11581  01C5D6  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
 11582                           
 11583                           ; BSR set to: 1
 11584                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 11585  01C5D8  0012               	return		;funcret
 11586  01C5DA                     __end_of_wait_lcd_set:
 11587                           	opt callstack 0
 11588                           
 11589 ;; *************** function _start_lcd *****************
 11590 ;; Defined at:
 11591 ;;		line 429 in file "eadog.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;		None
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;		None
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  1  [STACK] void 
 11598 ;; Registers used:
 11599 ;;		None
 11600 ;; Tracked objects:
 11601 ;;		On entry : 3F/0
 11602 ;;		On exit  : 3F/3B
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11609 ;;Total ram usage:        0 bytes
 11610 ;; Hardware stack levels used:    1
 11611 ;; Hardware stack levels required when called:   15
 11612 ;; This function calls:
 11613 ;;		Nothing
 11614 ;; This function is called by:
 11615 ;;		_eaDogM_WriteString
 11616 ;;		_send_lcd_data_dma
 11617 ;; This function uses a reentrant model
 11618 ;;
 11619                           
 11620                           	psect	text47
 11621  01C5DA                     __ptext47:
 11622                           	opt callstack 0
 11623  01C5DA                     _start_lcd:
 11624                           	opt callstack 12
 11625                           
 11626                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 11627                           
 11628                           ; BSR set to: 1
 11629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11630                           ;incstack = 0
 11631  01C5DA  013B               	movlb	59	; () banked
 11632  01C5DC  8DFC               	bsf	252,6,b	;volatile
 11633                           
 11634                           ; BSR set to: 59
 11635                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11636  01C5DE  0012               	return		;funcret
 11637  01C5E0                     __end_of_start_lcd:
 11638                           	opt callstack 0
 11639                           
 11640 ;; *************** function _ringBufS_flush *****************
 11641 ;; Defined at:
 11642 ;;		line 76 in file "ringbufs.c"
 11643 ;; Parameters:    Size  Location     Type
 11644 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11645 ;;		 -> ring_buf1(67), 
 11646 ;;  clearBuffer     1  [STACK] const char 
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;		None
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  1  [STACK] void 
 11651 ;; Registers used:
 11652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11653 ;; Tracked objects:
 11654 ;;		On entry : 3F/1
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11662 ;;Total ram usage:        0 bytes
 11663 ;; Hardware stack levels used:    1
 11664 ;; Hardware stack levels required when called:   16
 11665 ;; This function calls:
 11666 ;;		_memset
 11667 ;; This function is called by:
 11668 ;;		_eaDogM_WriteString
 11669 ;;		_send_lcd_data_dma
 11670 ;; This function uses a reentrant model
 11671 ;;
 11672                           
 11673                           	psect	text48
 11674  01ADD8                     __ptext48:
 11675                           	opt callstack 0
 11676  01ADD8                     _ringBufS_flush:
 11677                           	opt callstack 11
 11678                           
 11679                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 11680                           ;stkvar	__this @ sp[(0)+-2]
 11681                           
 11682                           ; BSR set to: 59
 11683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11684                           ;incstack = 0
 11685  01ADD8  0EFE               	movlw	-2
 11686  01ADDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11687  01ADE0  0EFF               	movlw	-1
 11688  01ADE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11689  01ADE8  0E42               	movlw	66
 11690  01ADEA  240B               	addwf	(btemp+10)^0,w,c
 11691  01ADEC  6ED9               	movwf	fsr2l,c
 11692  01ADEE  0E00               	movlw	0
 11693  01ADF0  200C               	addwfc	(btemp+11)^0,w,c
 11694  01ADF2  6EDA               	movwf	fsr2h,c
 11695  01ADF4  0E00               	movlw	0
 11696  01ADF6  6EDF               	movwf	indf2,c
 11697                           
 11698                           ;ringbufs.c: 79:  _this->head = 0;
 11699                           ;stkvar	__this @ sp[(0)+-2]
 11700  01ADF8  0EFE               	movlw	-2
 11701  01ADFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11702  01AE00  0EFF               	movlw	-1
 11703  01AE02  006F FF8C  F00C    	movff	plusw1,btemp+11
 11704  01AE08  0E40               	movlw	64
 11705  01AE0A  240B               	addwf	(btemp+10)^0,w,c
 11706  01AE0C  6ED9               	movwf	fsr2l,c
 11707  01AE0E  0E00               	movlw	0
 11708  01AE10  200C               	addwfc	(btemp+11)^0,w,c
 11709  01AE12  6EDA               	movwf	fsr2h,c
 11710  01AE14  0E00               	movlw	0
 11711  01AE16  6EDF               	movwf	indf2,c
 11712                           
 11713                           ;ringbufs.c: 80:  _this->tail = 0;
 11714                           ;stkvar	__this @ sp[(0)+-2]
 11715  01AE18  0EFE               	movlw	-2
 11716  01AE1A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11717  01AE20  0EFF               	movlw	-1
 11718  01AE22  006F FF8C  F00C    	movff	plusw1,btemp+11
 11719  01AE28  0E41               	movlw	65
 11720  01AE2A  240B               	addwf	(btemp+10)^0,w,c
 11721  01AE2C  6ED9               	movwf	fsr2l,c
 11722  01AE2E  0E00               	movlw	0
 11723  01AE30  200C               	addwfc	(btemp+11)^0,w,c
 11724  01AE32  6EDA               	movwf	fsr2h,c
 11725  01AE34  0E00               	movlw	0
 11726  01AE36  6EDF               	movwf	indf2,c
 11727                           
 11728                           ;ringbufs.c: 81:  if (clearBuffer) {
 11729                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 11730  01AE38  0EFD               	movlw	-3
 11731  01AE3A  50E3               	movf	plusw1,w,c
 11732  01AE3C  B4D8               	btfsc	status,2,c
 11733  01AE3E  D011               	goto	l1601
 11734                           
 11735                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 11736  01AE40  0E40               	movlw	64
 11737  01AE42  6EE6               	movwf	postinc1,c
 11738  01AE44  0E00               	movlw	0
 11739  01AE46  6EE6               	movwf	postinc1,c
 11740  01AE48  0E00               	movlw	0
 11741  01AE4A  6EE6               	movwf	postinc1,c
 11742  01AE4C  0E00               	movlw	0
 11743  01AE4E  6EE6               	movwf	postinc1,c
 11744                           
 11745                           ;stkvar	__this @ sp[(-4)+-2]
 11746  01AE50  0EFA               	movlw	-6
 11747  01AE52  006F FF8F FFE6     	movff	plusw1,postinc1
 11748  01AE58  006F FF8F FFE6     	movff	plusw1,postinc1
 11749  01AE5E  EC4E  F0B7         	call	_memset	;wreg free
 11750  01AE62                     l1601:
 11751                           
 11752                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 11753  01AE62  52E5               	movf	postdec1,f,c
 11754  01AE64  52E5               	movf	postdec1,f,c
 11755  01AE66  52E5               	movf	postdec1,f,c
 11756  01AE68  0012               	return		;funcret
 11757  01AE6A                     __end_of_ringBufS_flush:
 11758                           	opt callstack 0
 11759                           
 11760 ;; *************** function _memset *****************
 11761 ;; Defined at:
 11762 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 11763 ;; Parameters:    Size  Location     Type
 11764 ;;  dest            2  [STACK] PTR void 
 11765 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11766 ;;  c               2  [STACK] int 
 11767 ;;  n               2  [STACK] unsigned int 
 11768 ;; Auto vars:     Size  Location     Type
 11769 ;;  s               2  [STACK] PTR unsigned char 
 11770 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11771 ;;  k               2  [STACK] unsigned int 
 11772 ;; Return value:  Size  Location     Type
 11773 ;;                  2  [STACK] PTR void 
 11774 ;; Registers used:
 11775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11776 ;; Tracked objects:
 11777 ;;		On entry : 0/1
 11778 ;;		On exit  : 0/0
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11785 ;;Total ram usage:        0 bytes
 11786 ;; Hardware stack levels used:    1
 11787 ;; Hardware stack levels required when called:   15
 11788 ;; This function calls:
 11789 ;;		Nothing
 11790 ;; This function is called by:
 11791 ;;		_ringBufS_init
 11792 ;;		_ringBufS_flush
 11793 ;; This function uses a reentrant model
 11794 ;;
 11795                           
 11796                           	psect	text49
 11797  016E9C                     __ptext49:
 11798                           	opt callstack 0
 11799  016E9C                     _memset:
 11800                           	opt callstack 0
 11801                           
 11802                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11803  016E9C  52E6               	movf	postinc1,f,c
 11804  016E9E  52E6               	movf	postinc1,f,c
 11805  016EA0  52E6               	movf	postinc1,f,c
 11806  016EA2  52E6               	movf	postinc1,f,c
 11807                           
 11808                           ;stkvar	_dest @ sp[(-4)+-2]
 11809                           
 11810                           ;incstack = 0
 11811  016EA4  0EFA               	movlw	-6
 11812  016EA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11813  016EAC  0EFB               	movlw	-5
 11814  016EAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11815                           
 11816                           ;stkvar	_s @ sp[(-4)+0]
 11817  016EB4  0EFD               	movlw	-3
 11818  016EB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 11819  016EBC  0EFC               	movlw	-4
 11820  016EBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11821                           
 11822                           ;stkvar	_n @ sp[(-4)+-6]
 11823  016EC4  0EF6               	movlw	-10
 11824  016EC6  006F FF8C  F001    	movff	plusw1,btemp
 11825  016ECC  0EF7               	movlw	-9
 11826  016ECE  50E3               	movf	plusw1,w,c
 11827  016ED0  1001               	iorwf	btemp^0,w,c
 11828  016ED2  B4D8               	btfsc	status,2,c
 11829  016ED4  D154               	goto	u10930
 11830                           
 11831                           ;stkvar	_c @ sp[(-4)+-4]
 11832                           ;stkvar	_s @ sp[(-4)+0]
 11833  016ED6  0EFC               	movlw	-4
 11834  016ED8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11835  016EDE  0EFD               	movlw	-3
 11836  016EE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11837  016EE6  0EF8               	movlw	-8
 11838  016EE8  006F FF8F FFDF     	movff	plusw1,indf2
 11839                           
 11840                           ;stkvar	_c @ sp[(-4)+-4]
 11841                           ;stkvar	_n @ sp[(-4)+-6]
 11842                           ;stkvar	_s @ sp[(-4)+0]
 11843  016EEE  0EFC               	movlw	-4
 11844  016EF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 11845  016EF6  0EFD               	movlw	-3
 11846  016EF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11847  016EFE  0EF6               	movlw	-10
 11848  016F00  50E3               	movf	plusw1,w,c
 11849  016F02  260B               	addwf	(btemp+10)^0,f,c
 11850  016F04  0EF7               	movlw	-9
 11851  016F06  50E3               	movf	plusw1,w,c
 11852  016F08  220C               	addwfc	(btemp+11)^0,f,c
 11853  016F0A  0EFF               	movlw	255
 11854  016F0C  240B               	addwf	(btemp+10)^0,w,c
 11855  016F0E  6ED9               	movwf	fsr2l,c
 11856  016F10  0EFF               	movlw	255
 11857  016F12  200C               	addwfc	(btemp+11)^0,w,c
 11858  016F14  6EDA               	movwf	fsr2h,c
 11859  016F16  0EF8               	movlw	-8
 11860  016F18  006F FF8F FFDF     	movff	plusw1,indf2
 11861                           
 11862                           ;stkvar	_n @ sp[(-4)+-6]
 11863  016F1E  0EF7               	movlw	-9
 11864  016F20  50E3               	movf	plusw1,w,c
 11865  016F22  E108               	bnz	l12127
 11866  016F24  0EF6               	movlw	-10
 11867  016F26  006F FF8C  F001    	movff	plusw1,btemp
 11868  016F2C  0E03               	movlw	3
 11869  016F2E  5E01               	subwf	btemp^0,f,c
 11870  016F30  A0D8               	btfss	status,0,c
 11871  016F32  D125               	goto	u10930
 11872  016F34                     l12127:
 11873                           
 11874                           ;stkvar	_c @ sp[(-4)+-4]
 11875                           ;stkvar	_s @ sp[(-4)+0]
 11876  016F34  0EFC               	movlw	-4
 11877  016F36  006F FF8C  F00B    	movff	plusw1,btemp+10
 11878  016F3C  0EFD               	movlw	-3
 11879  016F3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11880  016F44  0E01               	movlw	1
 11881  016F46  240B               	addwf	(btemp+10)^0,w,c
 11882  016F48  6ED9               	movwf	fsr2l,c
 11883  016F4A  0E00               	movlw	0
 11884  016F4C  200C               	addwfc	(btemp+11)^0,w,c
 11885  016F4E  6EDA               	movwf	fsr2h,c
 11886  016F50  0EF8               	movlw	-8
 11887  016F52  006F FF8F FFDF     	movff	plusw1,indf2
 11888                           
 11889                           ;stkvar	_c @ sp[(-4)+-4]
 11890                           ;stkvar	_s @ sp[(-4)+0]
 11891  016F58  0EFC               	movlw	-4
 11892  016F5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11893  016F60  0EFD               	movlw	-3
 11894  016F62  006F FF8C  F00C    	movff	plusw1,btemp+11
 11895  016F68  0E02               	movlw	2
 11896  016F6A  240B               	addwf	(btemp+10)^0,w,c
 11897  016F6C  6ED9               	movwf	fsr2l,c
 11898  016F6E  0E00               	movlw	0
 11899  016F70  200C               	addwfc	(btemp+11)^0,w,c
 11900  016F72  6EDA               	movwf	fsr2h,c
 11901  016F74  0EF8               	movlw	-8
 11902  016F76  006F FF8F FFDF     	movff	plusw1,indf2
 11903                           
 11904                           ;stkvar	_c @ sp[(-4)+-4]
 11905                           ;stkvar	_n @ sp[(-4)+-6]
 11906                           ;stkvar	_s @ sp[(-4)+0]
 11907  016F7C  0EFC               	movlw	-4
 11908  016F7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11909  016F84  0EFD               	movlw	-3
 11910  016F86  006F FF8C  F00C    	movff	plusw1,btemp+11
 11911  016F8C  0EF6               	movlw	-10
 11912  016F8E  50E3               	movf	plusw1,w,c
 11913  016F90  260B               	addwf	(btemp+10)^0,f,c
 11914  016F92  0EF7               	movlw	-9
 11915  016F94  50E3               	movf	plusw1,w,c
 11916  016F96  220C               	addwfc	(btemp+11)^0,f,c
 11917  016F98  0EFE               	movlw	254
 11918  016F9A  240B               	addwf	(btemp+10)^0,w,c
 11919  016F9C  6ED9               	movwf	fsr2l,c
 11920  016F9E  0EFF               	movlw	255
 11921  016FA0  200C               	addwfc	(btemp+11)^0,w,c
 11922  016FA2  6EDA               	movwf	fsr2h,c
 11923  016FA4  0EF8               	movlw	-8
 11924  016FA6  006F FF8F FFDF     	movff	plusw1,indf2
 11925                           
 11926                           ;stkvar	_c @ sp[(-4)+-4]
 11927                           ;stkvar	_n @ sp[(-4)+-6]
 11928                           ;stkvar	_s @ sp[(-4)+0]
 11929  016FAC  0EFC               	movlw	-4
 11930  016FAE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11931  016FB4  0EFD               	movlw	-3
 11932  016FB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11933  016FBC  0EF6               	movlw	-10
 11934  016FBE  50E3               	movf	plusw1,w,c
 11935  016FC0  260B               	addwf	(btemp+10)^0,f,c
 11936  016FC2  0EF7               	movlw	-9
 11937  016FC4  50E3               	movf	plusw1,w,c
 11938  016FC6  220C               	addwfc	(btemp+11)^0,f,c
 11939  016FC8  0EFD               	movlw	253
 11940  016FCA  240B               	addwf	(btemp+10)^0,w,c
 11941  016FCC  6ED9               	movwf	fsr2l,c
 11942  016FCE  0EFF               	movlw	255
 11943  016FD0  200C               	addwfc	(btemp+11)^0,w,c
 11944  016FD2  6EDA               	movwf	fsr2h,c
 11945  016FD4  0EF8               	movlw	-8
 11946  016FD6  006F FF8F FFDF     	movff	plusw1,indf2
 11947                           
 11948                           ;stkvar	_n @ sp[(-4)+-6]
 11949  016FDC  0EF7               	movlw	-9
 11950  016FDE  50E3               	movf	plusw1,w,c
 11951  016FE0  E108               	bnz	l12133
 11952  016FE2  0EF6               	movlw	-10
 11953  016FE4  006F FF8C  F001    	movff	plusw1,btemp
 11954  016FEA  0E07               	movlw	7
 11955  016FEC  5E01               	subwf	btemp^0,f,c
 11956  016FEE  A0D8               	btfss	status,0,c
 11957  016FF0  D0C6               	goto	u10930
 11958  016FF2                     l12133:
 11959                           
 11960                           ;stkvar	_c @ sp[(-4)+-4]
 11961                           ;stkvar	_s @ sp[(-4)+0]
 11962  016FF2  0EFC               	movlw	-4
 11963  016FF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11964  016FFA  0EFD               	movlw	-3
 11965  016FFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11966  017002  0E03               	movlw	3
 11967  017004  240B               	addwf	(btemp+10)^0,w,c
 11968  017006  6ED9               	movwf	fsr2l,c
 11969  017008  0E00               	movlw	0
 11970  01700A  200C               	addwfc	(btemp+11)^0,w,c
 11971  01700C  6EDA               	movwf	fsr2h,c
 11972  01700E  0EF8               	movlw	-8
 11973  017010  006F FF8F FFDF     	movff	plusw1,indf2
 11974                           
 11975                           ;stkvar	_c @ sp[(-4)+-4]
 11976                           ;stkvar	_n @ sp[(-4)+-6]
 11977                           ;stkvar	_s @ sp[(-4)+0]
 11978  017016  0EFC               	movlw	-4
 11979  017018  006F FF8C  F00B    	movff	plusw1,btemp+10
 11980  01701E  0EFD               	movlw	-3
 11981  017020  006F FF8C  F00C    	movff	plusw1,btemp+11
 11982  017026  0EF6               	movlw	-10
 11983  017028  50E3               	movf	plusw1,w,c
 11984  01702A  260B               	addwf	(btemp+10)^0,f,c
 11985  01702C  0EF7               	movlw	-9
 11986  01702E  50E3               	movf	plusw1,w,c
 11987  017030  220C               	addwfc	(btemp+11)^0,f,c
 11988  017032  0EFC               	movlw	252
 11989  017034  240B               	addwf	(btemp+10)^0,w,c
 11990  017036  6ED9               	movwf	fsr2l,c
 11991  017038  0EFF               	movlw	255
 11992  01703A  200C               	addwfc	(btemp+11)^0,w,c
 11993  01703C  6EDA               	movwf	fsr2h,c
 11994  01703E  0EF8               	movlw	-8
 11995  017040  006F FF8F FFDF     	movff	plusw1,indf2
 11996                           
 11997                           ;stkvar	_n @ sp[(-4)+-6]
 11998  017046  0EF7               	movlw	-9
 11999  017048  50E3               	movf	plusw1,w,c
 12000  01704A  E108               	bnz	l12139
 12001  01704C  0EF6               	movlw	-10
 12002  01704E  006F FF8C  F001    	movff	plusw1,btemp
 12003  017054  0E09               	movlw	9
 12004  017056  5E01               	subwf	btemp^0,f,c
 12005  017058  A0D8               	btfss	status,0,c
 12006  01705A  D091               	goto	u10930
 12007  01705C                     l12139:
 12008                           
 12009                           ;stkvar	_s @ sp[(-4)+0]
 12010  01705C  0EFC               	movlw	-4
 12011  01705E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12012  017064  1E0B               	comf	(btemp+10)^0,f,c
 12013  017066  0EFD               	movlw	-3
 12014  017068  006F FF8C  F00C    	movff	plusw1,btemp+11
 12015  01706E  1E0C               	comf	(btemp+11)^0,f,c
 12016  017070  2A0B               	incf	(btemp+10)^0,f,c
 12017  017072  B4D8               	btfsc	status,2,c
 12018  017074  2A0C               	incf	(btemp+11)^0,f,c
 12019  017076  0E03               	movlw	3
 12020  017078  160B               	andwf	(btemp+10)^0,f,c
 12021  01707A  0E00               	movlw	0
 12022  01707C  160C               	andwf	(btemp+11)^0,f,c
 12023                           
 12024                           ;stkvar	_k @ sp[(-4)+2]
 12025  01707E  0EFE               	movlw	-2
 12026  017080  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12027  017086  0EFF               	movlw	-1
 12028  017088  0060  F033  FFE3   	movff	btemp+11,plusw1
 12029                           
 12030                           ;stkvar	_k @ sp[(-4)+2]
 12031                           ;stkvar	_s @ sp[(-4)+0]
 12032  01708E  0EFC               	movlw	-4
 12033  017090  50E3               	movf	plusw1,w,c
 12034  017092  6E01               	movwf	btemp^0,c
 12035  017094  0EFE               	movlw	-2
 12036  017096  50E3               	movf	plusw1,w,c
 12037  017098  2601               	addwf	btemp^0,f,c
 12038  01709A  0EFC               	movlw	-4
 12039  01709C  0060  F007  FFE3   	movff	btemp,plusw1
 12040  0170A2  0EFD               	movlw	-3
 12041  0170A4  50E3               	movf	plusw1,w,c
 12042  0170A6  6E01               	movwf	btemp^0,c
 12043  0170A8  0EFF               	movlw	-1
 12044  0170AA  50E3               	movf	plusw1,w,c
 12045  0170AC  2201               	addwfc	btemp^0,f,c
 12046  0170AE  0EFD               	movlw	-3
 12047  0170B0  0060  F007  FFE3   	movff	btemp,plusw1
 12048                           
 12049                           ;stkvar	_k @ sp[(-4)+2]
 12050                           ;stkvar	_n @ sp[(-4)+-6]
 12051  0170B6  0EF6               	movlw	-10
 12052  0170B8  50E3               	movf	plusw1,w,c
 12053  0170BA  6E01               	movwf	btemp^0,c
 12054  0170BC  0EFE               	movlw	-2
 12055  0170BE  50E3               	movf	plusw1,w,c
 12056  0170C0  5E01               	subwf	btemp^0,f,c
 12057  0170C2  0EF6               	movlw	-10
 12058  0170C4  0060  F007  FFE3   	movff	btemp,plusw1
 12059  0170CA  0EF7               	movlw	-9
 12060  0170CC  50E3               	movf	plusw1,w,c
 12061  0170CE  6E01               	movwf	btemp^0,c
 12062  0170D0  0EFF               	movlw	-1
 12063  0170D2  50E3               	movf	plusw1,w,c
 12064  0170D4  5A01               	subwfb	btemp^0,f,c
 12065  0170D6  0EF7               	movlw	-9
 12066  0170D8  0060  F007  FFE3   	movff	btemp,plusw1
 12067  0170DE  0EFC               	movlw	252
 12068  0170E0  6E0B               	movwf	(btemp+10)^0,c
 12069  0170E2  0EFF               	movlw	255
 12070  0170E4  6E0C               	movwf	(btemp+11)^0,c
 12071                           
 12072                           ;stkvar	_n @ sp[(-4)+-6]
 12073  0170E6  0EF6               	movlw	-10
 12074  0170E8  006F FF8C  F001    	movff	plusw1,btemp
 12075  0170EE  500B               	movf	(btemp+10)^0,w,c
 12076  0170F0  1601               	andwf	btemp^0,f,c
 12077  0170F2  0EF6               	movlw	-10
 12078  0170F4  0060  F007  FFE3   	movff	btemp,plusw1
 12079  0170FA  0EF7               	movlw	-9
 12080  0170FC  006F FF8C  F001    	movff	plusw1,btemp
 12081  017102  500C               	movf	(btemp+11)^0,w,c
 12082  017104  1601               	andwf	btemp^0,f,c
 12083  017106  0EF7               	movlw	-9
 12084  017108  D02E               	goto	L10
 12085  01710A                     l12147:
 12086                           
 12087                           ;stkvar	_c @ sp[(-4)+-4]
 12088                           ;stkvar	_s @ sp[(-4)+0]
 12089  01710A  0EFC               	movlw	-4
 12090  01710C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12091  017112  0EFD               	movlw	-3
 12092  017114  006F FF8F FFDA     	movff	plusw1,fsr2h
 12093  01711A  0EF8               	movlw	-8
 12094  01711C  006F FF8F FFDF     	movff	plusw1,indf2
 12095                           
 12096                           ;stkvar	_n @ sp[(-4)+-6]
 12097  017122  0EF6               	movlw	-10
 12098  017124  006F FF8C  F001    	movff	plusw1,btemp
 12099  01712A  0E01               	movlw	1
 12100  01712C  5E01               	subwf	btemp^0,f,c
 12101  01712E  0EF6               	movlw	-10
 12102  017130  0060  F007  FFE3   	movff	btemp,plusw1
 12103  017136  0EF7               	movlw	-9
 12104  017138  006F FF8C  F001    	movff	plusw1,btemp
 12105  01713E  0E00               	movlw	0
 12106  017140  5A01               	subwfb	btemp^0,f,c
 12107  017142  0EF7               	movlw	-9
 12108  017144  0060  F007  FFE3   	movff	btemp,plusw1
 12109                           
 12110                           ;stkvar	_s @ sp[(-4)+0]
 12111  01714A  0EFC               	movlw	-4
 12112  01714C  50E3               	movf	plusw1,w,c
 12113  01714E  0F01               	addlw	1
 12114  017150  6E01               	movwf	btemp^0,c
 12115  017152  0EFC               	movlw	-4
 12116  017154  0060  F007  FFE3   	movff	btemp,plusw1
 12117  01715A  6A01               	clrf	btemp^0,c
 12118  01715C  0EFD               	movlw	-3
 12119  01715E  50E3               	movf	plusw1,w,c
 12120  017160  2001               	addwfc	btemp^0,w,c
 12121  017162  6E01               	movwf	btemp^0,c
 12122  017164  0EFD               	movlw	-3
 12123  017166                     L10:
 12124  017166  0060  F007  FFE3   	movff	btemp,plusw1
 12125                           
 12126                           ;stkvar	_n @ sp[(-4)+-6]
 12127  01716C  0EF6               	movlw	-10
 12128  01716E  006F FF8C  F001    	movff	plusw1,btemp
 12129  017174  0EF7               	movlw	-9
 12130  017176  50E3               	movf	plusw1,w,c
 12131  017178  1001               	iorwf	btemp^0,w,c
 12132  01717A  A4D8               	btfss	status,2,c
 12133  01717C  D7C6               	goto	l12147
 12134  01717E                     u10930:
 12135                           
 12136                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 12137  01717E  0EF6               	movlw	246
 12138  017180  26E1               	addwf	fsr1l,f,c
 12139  017182  0EFF               	movlw	255
 12140  017184  22E2               	addwfc	fsr1h,f,c
 12141  017186  0012               	return		;funcret
 12142  017188                     __end_of_memset:
 12143                           	opt callstack 0
 12144                           
 12145 ;; *************** function _printf *****************
 12146 ;; Defined at:
 12147 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 12148 ;; Parameters:    Size  Location     Type
 12149 ;;  fmt             2  [STACK] PTR const unsigned char 
 12150 ;;		 -> STR_44(3), STR_43(3), 
 12151 ;; Auto vars:     Size  Location     Type
 12152 ;;  ap              2  [STACK] PTR void [1]
 12153 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12154 ;;  ret             2    0        int 
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  2  [STACK] int 
 12157 ;; Registers used:
 12158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12159 ;; Tracked objects:
 12160 ;;		On entry : 3F/3B
 12161 ;;		On exit  : 3F/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12168 ;;Total ram usage:        0 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:   23
 12171 ;; This function calls:
 12172 ;;		_vfprintf
 12173 ;; This function is called by:
 12174 ;;		_eaDogM_WriteString
 12175 ;;		_send_lcd_data_dma
 12176 ;; This function uses a reentrant model
 12177 ;;
 12178                           
 12179                           	psect	text50
 12180  01B478                     __ptext50:
 12181                           	opt callstack 0
 12182  01B478                     _printf:
 12183                           	opt callstack 0
 12184                           
 12185                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12186  01B478  52E6               	movf	postinc1,f,c
 12187  01B47A  52E6               	movf	postinc1,f,c
 12188                           
 12189                           ;stkvar	?_printf @ sp[(-2)+-3]
 12190                           
 12191                           ;incstack = 0
 12192  01B47C  0EFB               	movlw	251
 12193  01B47E  24E1               	addwf	fsr1l,w,c
 12194  01B480  6E0B               	movwf	(btemp+10)^0,c
 12195  01B482  0EFF               	movlw	255
 12196  01B484  20E2               	addwfc	fsr1h,w,c
 12197  01B486  6E0C               	movwf	(btemp+11)^0,c
 12198                           
 12199                           ;stkvar	_ap @ sp[(-2)+0]
 12200  01B488  0EFF               	movlw	-1
 12201  01B48A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12202  01B490  0EFE               	movlw	-2
 12203  01B492  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12204                           
 12205                           ;stkvar	_ap @ sp[(-2)+0]
 12206  01B498  0EFE               	movlw	254
 12207  01B49A  24E1               	addwf	fsr1l,w,c
 12208  01B49C  6E01               	movwf	btemp^0,c
 12209  01B49E  0EFF               	movlw	255
 12210  01B4A0  20E2               	addwfc	fsr1h,w,c
 12211  01B4A2  6E02               	movwf	(btemp+1)^0,c
 12212  01B4A4  0060  F007  FFE6   	movff	btemp,postinc1
 12213  01B4AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12214                           
 12215                           ;stkvar	_fmt @ sp[(-4)+-3]
 12216  01B4B0  0EF9               	movlw	-7
 12217  01B4B2  006F FF8F FFE6     	movff	plusw1,postinc1
 12218  01B4B8  006F FF8F FFE6     	movff	plusw1,postinc1
 12219  01B4BE  0E00               	movlw	0
 12220  01B4C0  6EE6               	movwf	postinc1,c
 12221  01B4C2  0E00               	movlw	0
 12222  01B4C4  6EE6               	movwf	postinc1,c
 12223  01B4C6  ECFD  F0D4         	call	_vfprintf	;wreg free
 12224                           
 12225                           ; BSR set to: 0
 12226                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 12227  01B4CA  52E5               	movf	postdec1,f,c
 12228  01B4CC  52E5               	movf	postdec1,f,c
 12229  01B4CE  52E5               	movf	postdec1,f,c
 12230  01B4D0  50E7               	movf	indf1,w,c
 12231  01B4D2  5EE1               	subwf	fsr1l,f,c
 12232  01B4D4  0E00               	movlw	0
 12233  01B4D6  5AE2               	subwfb	fsr1h,f,c
 12234  01B4D8  0012               	return		;funcret
 12235  01B4DA                     __end_of_printf:
 12236                           	opt callstack 0
 12237                           
 12238 ;; *************** function _vfprintf *****************
 12239 ;; Defined at:
 12240 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12243 ;;		 -> f(6), NULL(0), 
 12244 ;;  fmt             2  [STACK] PTR const unsigned char 
 12245 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 12246 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12247 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12248 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12249 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12250 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12251 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12252 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12253 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12254 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12255 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12256 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12257 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12258 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12259 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12260 ;;  ap              2  [STACK] PTR PTR void 
 12261 ;;		 -> ap(2), ap(2), 
 12262 ;; Auto vars:     Size  Location     Type
 12263 ;;  cfmt            2  [STACK] PTR unsigned char 
 12264 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 12265 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12266 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12267 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12268 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12269 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12270 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12271 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12272 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12273 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12274 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12275 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12276 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12277 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12278 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  2  [STACK] int 
 12281 ;; Registers used:
 12282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12283 ;; Tracked objects:
 12284 ;;		On entry : 0/1
 12285 ;;		On exit  : 3F/0
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12292 ;;Total ram usage:        0 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; Hardware stack levels required when called:   22
 12295 ;; This function calls:
 12296 ;;		_vfpfcnvrt
 12297 ;; This function is called by:
 12298 ;;		_sprintf
 12299 ;;		_printf
 12300 ;; This function uses a reentrant model
 12301 ;;
 12302                           
 12303                           	psect	text51
 12304  01A9FA                     __ptext51:
 12305                           	opt callstack 0
 12306  01A9FA                     _vfprintf:
 12307                           	opt callstack 0
 12308                           
 12309                           ; BSR set to: 0
 12310                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12311  01A9FA  52E6               	movf	postinc1,f,c
 12312  01A9FC  52E6               	movf	postinc1,f,c
 12313                           
 12314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 12315                           ;stkvar	_fmt @ sp[(-2)+-4]
 12316                           
 12317                           ;incstack = 0
 12318 ;; hardware stack exceeded
 12319  01A9FE  0EFA               	movlw	-6
 12320  01AA00  006F FF8C  F00B    	movff	plusw1,btemp+10
 12321  01AA06  0EFB               	movlw	-5
 12322  01AA08  006F FF8C  F00C    	movff	plusw1,btemp+11
 12323                           
 12324                           ;stkvar	_cfmt @ sp[(-2)+0]
 12325  01AA0E  0EFF               	movlw	-1
 12326  01AA10  0060  F033  FFE3   	movff	btemp+11,plusw1
 12327  01AA16  0EFE               	movlw	-2
 12328  01AA18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12329                           
 12330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 12331  01AA1E  0100               	movlb	0	; () banked
 12332  01AA20  6B9A               	clrf	_nout& (0+255),b
 12333  01AA22  6B9B               	clrf	(_nout+1)& (0+255),b
 12334                           
 12335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12336  01AA24  D021               	goto	l12997
 12337  01AA26                     l12995:
 12338                           
 12339                           ; BSR set to: 0
 12340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 12341                           ;stkvar	_ap @ sp[(-2)+-6]
 12342  01AA26  0EF8               	movlw	-8
 12343  01AA28  006F FF8F FFE6     	movff	plusw1,postinc1
 12344  01AA2E  006F FF8F FFE6     	movff	plusw1,postinc1
 12345                           
 12346                           ;stkvar	_cfmt @ sp[(-4)+0]
 12347  01AA34  0EFC               	movlw	252
 12348  01AA36  24E1               	addwf	fsr1l,w,c
 12349  01AA38  6E01               	movwf	btemp^0,c
 12350  01AA3A  0EFF               	movlw	255
 12351  01AA3C  20E2               	addwfc	fsr1h,w,c
 12352  01AA3E  6E02               	movwf	(btemp+1)^0,c
 12353  01AA40  0060  F007  FFE6   	movff	btemp,postinc1
 12354  01AA46  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12355                           
 12356                           ;stkvar	_fp @ sp[(-6)+-2]
 12357  01AA4C  0EF8               	movlw	-8
 12358  01AA4E  006F FF8F FFE6     	movff	plusw1,postinc1
 12359  01AA54  006F FF8F FFE6     	movff	plusw1,postinc1
 12360  01AA5A  ECF4  F091         	call	_vfpfcnvrt	;wreg free
 12361  01AA5E  5001               	movf	btemp^0,w,c
 12362  01AA60  0100               	movlb	0	; () banked
 12363  01AA62  279A               	addwf	_nout& (0+255),f,b
 12364  01AA64  5002               	movf	(btemp+1)^0,w,c
 12365  01AA66  239B               	addwfc	(_nout+1)& (0+255),f,b
 12366  01AA68                     l12997:
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12370                           ;stkvar	_cfmt @ sp[(-2)+0]
 12371  01AA68  50E1               	movf	fsr1l,w,c
 12372  01AA6A  0FFE               	addlw	-2
 12373  01AA6C  6ED9               	movwf	fsr2l,c
 12374  01AA6E  50E2               	movf	fsr1h,w,c
 12375  01AA70  6EDA               	movwf	fsr2h,c
 12376  01AA72  0EFF               	movlw	255
 12377  01AA74  22DA               	addwfc	fsr2h,f,c
 12378  01AA76  006F FF7B FFF6     	movff	postinc2,tblptrl
 12379  01AA7C  006F FF77 FFF7     	movff	postdec2,tblptrh
 12380  01AA82                     	if	0	;tblptru may be non-zero
 12381  01AA82                     	endif
 12382  01AA82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12383  01AA82  0E00               	movlw	low (__mediumconst shr (0+16))
 12384  01AA84  6EF8               	movwf	tblptru,c
 12385  01AA86                     	endif
 12386  01AA86  0008               	tblrd		*
 12387  01AA88  50F5               	movf	tablat,w,c
 12388  01AA8A  0900               	iorlw	0
 12389  01AA8C  A4D8               	btfss	status,2,c
 12390  01AA8E  D7CB               	goto	l12995
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 12394  01AA90  0060  F268  F001   	movff	_nout,btemp
 12395  01AA96  0060  F26C  F002   	movff	_nout+1,btemp+1
 12396                           
 12397                           ; BSR set to: 0
 12398                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 12399  01AA9C  0EF8               	movlw	248
 12400  01AA9E  26E1               	addwf	fsr1l,f,c
 12401  01AAA0  0EFF               	movlw	255
 12402  01AAA2  22E2               	addwfc	fsr1h,f,c
 12403  01AAA4  0012               	return		;funcret
 12404  01AAA6                     __end_of_vfprintf:
 12405                           	opt callstack 0
 12406                           
 12407 ;; *************** function _vfpfcnvrt *****************
 12408 ;; Defined at:
 12409 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12412 ;;		 -> f(6), NULL(0), 
 12413 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 12414 ;;		 -> cfmt(2), 
 12415 ;;  ap              2  [STACK] PTR PTR void 
 12416 ;;		 -> ap(2), ap(2), 
 12417 ;; Auto vars:     Size  Location     Type
 12418 ;;  llu             8  [STACK] unsigned long long 
 12419 ;;  ll              8  [STACK] long long 
 12420 ;;  f               4  [STACK] long long 
 12421 ;;  ct              3  [STACK] unsigned char [3]
 12422 ;;  vp              3    0        PTR void 
 12423 ;;  cp              2  [STACK] PTR unsigned char 
 12424 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 12425 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 12426 ;;		 -> V(191), 
 12427 ;;  i               2    0        int 
 12428 ;;  done            2    0        int 
 12429 ;;  c               1  [STACK] unsigned char 
 12430 ;; Return value:  Size  Location     Type
 12431 ;;                  2  [STACK] int 
 12432 ;; Registers used:
 12433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12434 ;; Tracked objects:
 12435 ;;		On entry : 0/0
 12436 ;;		On exit  : 0/0
 12437 ;;		Unchanged: 0/0
 12438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12443 ;;Total ram usage:        0 bytes
 12444 ;; Hardware stack levels used:    1
 12445 ;; Hardware stack levels required when called:   21
 12446 ;; This function calls:
 12447 ;;		_atoi
 12448 ;;		_ctoa
 12449 ;;		_dtoa
 12450 ;;		_efgtoa
 12451 ;;		_fputc
 12452 ;;		_isdigit
 12453 ;;		_isupper
 12454 ;;		_stoa
 12455 ;;		_strncmp
 12456 ;;		_tolower
 12457 ;;		_utoa
 12458 ;;		_xtoa
 12459 ;; This function is called by:
 12460 ;;		_vfprintf
 12461 ;; This function uses a reentrant model
 12462 ;;
 12463                           
 12464                           	psect	text52
 12465  0123E8                     __ptext52:
 12466                           	opt callstack 0
 12467  0123E8                     _vfpfcnvrt:
 12468                           	opt callstack 0
 12469                           
 12470                           ; BSR set to: 0
 12471                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12472  0123E8  0E20               	movlw	32
 12473  0123EA  26E1               	addwf	fsr1l,f,c
 12474  0123EC  0E00               	movlw	0
 12475  0123EE  22E2               	addwfc	fsr1h,f,c
 12476                           
 12477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 12478                           ;stkvar	_fmt @ sp[(-32)+-4]
 12479                           
 12480                           ;incstack = 0
 12481 ;; hardware stack exceeded
 12482  0123F0  0EDC               	movlw	-36
 12483  0123F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12484  0123F8  0EDD               	movlw	-35
 12485  0123FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12486  012400  006F FF7B FFF6     	movff	postinc2,tblptrl
 12487  012406  006F FF77 FFF7     	movff	postdec2,tblptrh
 12488  01240C                     	if	0	;tblptru may be non-zero
 12489  01240C                     	endif
 12490  01240C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12491  01240C  0E00               	movlw	low (__mediumconst shr (0+16))
 12492  01240E  6EF8               	movwf	tblptru,c
 12493  012410                     	endif
 12494  012410  0008               	tblrd		*
 12495  012412  50F5               	movf	tablat,w,c
 12496  012414  0A25               	xorlw	37
 12497  012416  A4D8               	btfss	status,2,c
 12498  012418  EF9B  F099         	goto	l12957
 12499                           
 12500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 12501                           ;stkvar	_fmt @ sp[(-32)+-4]
 12502  01241C  0EDC               	movlw	-36
 12503  01241E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12504  012424  0EDD               	movlw	-35
 12505  012426  006F FF8F FFDA     	movff	plusw1,fsr2h
 12506  01242C  2ADE               	incf	postinc2,f,c
 12507  01242E  0E00               	movlw	0
 12508  012430  22DD               	addwfc	postdec2,f,c
 12509                           
 12510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 12511  012432  6A3A               	clrf	_width^0,c
 12512  012434  6A3B               	clrf	(_width+1)^0,c
 12513  012436  6A3E               	clrf	_flags^0,c
 12514  012438  6A3F               	clrf	(_flags+1)^0,c
 12515                           
 12516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 12517  01243A  683C               	setf	_prec^0,c
 12518  01243C  683D               	setf	(_prec+1)^0,c
 12519                           
 12520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 12521                           ;stkvar	_fmt @ sp[(-32)+-4]
 12522  01243E  0EDC               	movlw	-36
 12523  012440  006F FF8F FFD9     	movff	plusw1,fsr2l
 12524  012446  0EDD               	movlw	-35
 12525  012448  006F FF8F FFDA     	movff	plusw1,fsr2h
 12526  01244E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12527  012454  006F FF77 FFF7     	movff	postdec2,tblptrh
 12528  01245A                     	if	0	;tblptru may be non-zero
 12529  01245A                     	endif
 12530  01245A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12531  01245A  0E00               	movlw	low (__mediumconst shr (0+16))
 12532  01245C  6EF8               	movwf	tblptru,c
 12533  01245E                     	endif
 12534  01245E  0008               	tblrd		*
 12535  012460  50F5               	movf	tablat,w,c
 12536  012462  0A2A               	xorlw	42
 12537  012464  A4D8               	btfss	status,2,c
 12538  012466  D031               	goto	l12775
 12539                           
 12540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 12541                           ;stkvar	_fmt @ sp[(-32)+-4]
 12542  012468  0EDC               	movlw	-36
 12543  01246A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12544  012470  0EDD               	movlw	-35
 12545  012472  006F FF8F FFDA     	movff	plusw1,fsr2h
 12546  012478  2ADE               	incf	postinc2,f,c
 12547  01247A  0E00               	movlw	0
 12548  01247C  22DD               	addwfc	postdec2,f,c
 12549                           
 12550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 12551                           ;stkvar	_ap @ sp[(-32)+-6]
 12552  01247E  0EDA               	movlw	-38
 12553  012480  006F FF8F FFD9     	movff	plusw1,fsr2l
 12554  012486  0EDB               	movlw	-37
 12555  012488  006F FF8F FFDA     	movff	plusw1,fsr2h
 12556  01248E  0E02               	movlw	2
 12557  012490  5EDE               	subwf	postinc2,f,c
 12558  012492  0E00               	movlw	0
 12559  012494  5ADD               	subwfb	postdec2,f,c
 12560  012496  006F FF78  F00B    	movff	postinc2,btemp+10
 12561  01249C  006F FF74  F00C    	movff	postdec2,btemp+11
 12562  0124A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12563  0124A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12564  0124AE  006F FF78  F03A    	movff	postinc2,_width
 12565  0124B4  006F FF74  F03B    	movff	postdec2,_width+1
 12566                           
 12567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 12568  0124BA  AE3B               	btfss	(_width+1)^0,7,c
 12569  0124BC  D066               	goto	u12120
 12570                           
 12571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 12572  0124BE  803E               	bsf	_flags^0,0,c
 12573                           
 12574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 12575  0124C0  6C3A               	negf	_width^0,c
 12576  0124C2  1E3B               	comf	(_width+1)^0,f,c
 12577  0124C4  B0D8               	btfsc	status,0,c
 12578  0124C6  2A3B               	incf	(_width+1)^0,f,c
 12579  0124C8  D060               	goto	u12120
 12580  0124CA                     l12775:
 12581                           
 12582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 12583                           ;stkvar	_fmt @ sp[(-32)+-4]
 12584  0124CA  0EDC               	movlw	-36
 12585  0124CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12586  0124D2  0EDD               	movlw	-35
 12587  0124D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12588  0124DA  006F FF78  F00B    	movff	postinc2,btemp+10
 12589  0124E0  006F FF74  F00C    	movff	postdec2,btemp+11
 12590  0124E6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12591  0124EC  0060  F033  FFE6   	movff	btemp+11,postinc1
 12592  0124F2  ECCF  F0BC         	call	_atoi	;wreg free
 12593  0124F6  0060  F004  F03A   	movff	btemp,_width
 12594  0124FC  0060  F008  F03B   	movff	btemp+1,_width+1
 12595                           
 12596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12597  012502  D00B               	goto	l12779
 12598  012504                     l12777:
 12599                           
 12600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 12601                           ;stkvar	_fmt @ sp[(-32)+-4]
 12602  012504  0EDC               	movlw	-36
 12603  012506  006F FF8F FFD9     	movff	plusw1,fsr2l
 12604  01250C  0EDD               	movlw	-35
 12605  01250E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12606  012514  2ADE               	incf	postinc2,f,c
 12607  012516  0E00               	movlw	0
 12608  012518  22DD               	addwfc	postdec2,f,c
 12609  01251A                     l12779:
 12610  01251A  0ED0               	movlw	208
 12611  01251C  6E0B               	movwf	(btemp+10)^0,c
 12612  01251E  0EFF               	movlw	255
 12613  012520  6E0C               	movwf	(btemp+11)^0,c
 12614                           
 12615                           ;stkvar	_fmt @ sp[(-32)+-4]
 12616  012522  0EDC               	movlw	-36
 12617  012524  006F FF8F FFD9     	movff	plusw1,fsr2l
 12618  01252A  0EDD               	movlw	-35
 12619  01252C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12620  012532  006F FF7B FFF6     	movff	postinc2,tblptrl
 12621  012538  006F FF77 FFF7     	movff	postdec2,tblptrh
 12622  01253E                     	if	0	;tblptru may be non-zero
 12623  01253E                     	endif
 12624  01253E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12625  01253E  0E00               	movlw	low (__mediumconst shr (0+16))
 12626  012540  6EF8               	movwf	tblptru,c
 12627  012542                     	endif
 12628  012542  0008               	tblrd		*
 12629  012544  50F5               	movf	tablat,w,c
 12630  012546  6E09               	movwf	(btemp+8)^0,c
 12631  012548  6A0A               	clrf	(btemp+9)^0,c
 12632  01254A  500B               	movf	(btemp+10)^0,w,c
 12633  01254C  2609               	addwf	(btemp+8)^0,f,c
 12634  01254E  500C               	movf	(btemp+11)^0,w,c
 12635  012550  220A               	addwfc	(btemp+9)^0,f,c
 12636  012552  500A               	movf	(btemp+9)^0,w,c
 12637  012554  E106               	bnz	u12100
 12638  012556  0E0A               	movlw	10
 12639  012558  5C09               	subwf	(btemp+8)^0,w,c
 12640  01255A  B0D8               	btfsc	status,0,c
 12641  01255C  D002               	goto	u12100
 12642  01255E  0E01               	movlw	1
 12643  012560  D001               	goto	u12110
 12644  012562                     u12100:
 12645  012562  0E00               	movlw	0
 12646  012564                     u12110:
 12647  012564  6E0B               	movwf	(btemp+10)^0,c
 12648  012566  6A0C               	clrf	(btemp+11)^0,c
 12649                           
 12650                           ;stkvar	_vfpfcnvrt$5807 @ sp[(-32)+4]
 12651  012568  0EE4               	movlw	-28
 12652  01256A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12653  012570  0EE5               	movlw	-27
 12654  012572  0060  F033  FFE3   	movff	btemp+11,plusw1
 12655                           
 12656                           ;stkvar	_vfpfcnvrt$5807 @ sp[(-32)+4]
 12657  012578  0EE4               	movlw	-28
 12658  01257A  006F FF8C  F001    	movff	plusw1,btemp
 12659  012580  0EE5               	movlw	-27
 12660  012582  50E3               	movf	plusw1,w,c
 12661  012584  1001               	iorwf	btemp^0,w,c
 12662  012586  A4D8               	btfss	status,2,c
 12663  012588  D7BD               	goto	l12777
 12664  01258A                     u12120:
 12665                           
 12666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 12667                           ;stkvar	_fmt @ sp[(-32)+-4]
 12668  01258A  0EDC               	movlw	-36
 12669  01258C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12670  012592  0EDD               	movlw	-35
 12671  012594  006F FF8F FFDA     	movff	plusw1,fsr2h
 12672  01259A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12673  0125A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12674  0125A6                     	if	0	;tblptru may be non-zero
 12675  0125A6                     	endif
 12676  0125A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12677  0125A6  0E00               	movlw	low (__mediumconst shr (0+16))
 12678  0125A8  6EF8               	movwf	tblptru,c
 12679  0125AA                     	endif
 12680  0125AA  0008               	tblrd		*
 12681  0125AC  50F5               	movf	tablat,w,c
 12682  0125AE  0A2E               	xorlw	46
 12683  0125B0  A4D8               	btfss	status,2,c
 12684  0125B2  D0AC               	goto	u12170
 12685                           
 12686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 12687  0125B4  6A3C               	clrf	_prec^0,c
 12688  0125B6  6A3D               	clrf	(_prec+1)^0,c
 12689                           
 12690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 12691                           ;stkvar	_fmt @ sp[(-32)+-4]
 12692  0125B8  0EDC               	movlw	-36
 12693  0125BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12694  0125C0  0EDD               	movlw	-35
 12695  0125C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12696  0125C8  2ADE               	incf	postinc2,f,c
 12697  0125CA  0E00               	movlw	0
 12698  0125CC  22DD               	addwfc	postdec2,f,c
 12699                           
 12700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 12701                           ;stkvar	_fmt @ sp[(-32)+-4]
 12702  0125CE  0EDC               	movlw	-36
 12703  0125D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12704  0125D6  0EDD               	movlw	-35
 12705  0125D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12706  0125DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12707  0125E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12708  0125EA                     	if	0	;tblptru may be non-zero
 12709  0125EA                     	endif
 12710  0125EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12711  0125EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12712  0125EC  6EF8               	movwf	tblptru,c
 12713  0125EE                     	endif
 12714  0125EE  0008               	tblrd		*
 12715  0125F0  50F5               	movf	tablat,w,c
 12716  0125F2  0A2A               	xorlw	42
 12717  0125F4  A4D8               	btfss	status,2,c
 12718  0125F6  D02A               	goto	l12797
 12719                           
 12720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 12721                           ;stkvar	_fmt @ sp[(-32)+-4]
 12722  0125F8  0EDC               	movlw	-36
 12723  0125FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12724  012600  0EDD               	movlw	-35
 12725  012602  006F FF8F FFDA     	movff	plusw1,fsr2h
 12726  012608  2ADE               	incf	postinc2,f,c
 12727  01260A  0E00               	movlw	0
 12728  01260C  22DD               	addwfc	postdec2,f,c
 12729                           
 12730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 12731                           ;stkvar	_ap @ sp[(-32)+-6]
 12732  01260E  0EDA               	movlw	-38
 12733  012610  006F FF8F FFD9     	movff	plusw1,fsr2l
 12734  012616  0EDB               	movlw	-37
 12735  012618  006F FF8F FFDA     	movff	plusw1,fsr2h
 12736  01261E  0E02               	movlw	2
 12737  012620  5EDE               	subwf	postinc2,f,c
 12738  012622  0E00               	movlw	0
 12739  012624  5ADD               	subwfb	postdec2,f,c
 12740  012626  006F FF78  F00B    	movff	postinc2,btemp+10
 12741  01262C  006F FF74  F00C    	movff	postdec2,btemp+11
 12742  012632  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12743  012638  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12744  01263E  006F FF78  F03C    	movff	postinc2,_prec
 12745  012644  006F FF74  F03D    	movff	postdec2,_prec+1
 12746                           
 12747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 12748  01264A  D060               	goto	u12170
 12749  01264C                     l12797:
 12750                           
 12751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 12752                           ;stkvar	_fmt @ sp[(-32)+-4]
 12753  01264C  0EDC               	movlw	-36
 12754  01264E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12755  012654  0EDD               	movlw	-35
 12756  012656  006F FF8F FFDA     	movff	plusw1,fsr2h
 12757  01265C  006F FF78  F00B    	movff	postinc2,btemp+10
 12758  012662  006F FF74  F00C    	movff	postdec2,btemp+11
 12759  012668  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12760  01266E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12761  012674  ECCF  F0BC         	call	_atoi	;wreg free
 12762  012678  0060  F004  F03C   	movff	btemp,_prec
 12763  01267E  0060  F008  F03D   	movff	btemp+1,_prec+1
 12764                           
 12765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12766  012684  D00B               	goto	l12801
 12767  012686                     l12799:
 12768                           
 12769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 12770                           ;stkvar	_fmt @ sp[(-32)+-4]
 12771  012686  0EDC               	movlw	-36
 12772  012688  006F FF8F FFD9     	movff	plusw1,fsr2l
 12773  01268E  0EDD               	movlw	-35
 12774  012690  006F FF8F FFDA     	movff	plusw1,fsr2h
 12775  012696  2ADE               	incf	postinc2,f,c
 12776  012698  0E00               	movlw	0
 12777  01269A  22DD               	addwfc	postdec2,f,c
 12778  01269C                     l12801:
 12779  01269C  0ED0               	movlw	208
 12780  01269E  6E0B               	movwf	(btemp+10)^0,c
 12781  0126A0  0EFF               	movlw	255
 12782  0126A2  6E0C               	movwf	(btemp+11)^0,c
 12783                           
 12784                           ;stkvar	_fmt @ sp[(-32)+-4]
 12785  0126A4  0EDC               	movlw	-36
 12786  0126A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12787  0126AC  0EDD               	movlw	-35
 12788  0126AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12789  0126B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12790  0126BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12791  0126C0                     	if	0	;tblptru may be non-zero
 12792  0126C0                     	endif
 12793  0126C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12794  0126C0  0E00               	movlw	low (__mediumconst shr (0+16))
 12795  0126C2  6EF8               	movwf	tblptru,c
 12796  0126C4                     	endif
 12797  0126C4  0008               	tblrd		*
 12798  0126C6  50F5               	movf	tablat,w,c
 12799  0126C8  6E09               	movwf	(btemp+8)^0,c
 12800  0126CA  6A0A               	clrf	(btemp+9)^0,c
 12801  0126CC  500B               	movf	(btemp+10)^0,w,c
 12802  0126CE  2609               	addwf	(btemp+8)^0,f,c
 12803  0126D0  500C               	movf	(btemp+11)^0,w,c
 12804  0126D2  220A               	addwfc	(btemp+9)^0,f,c
 12805  0126D4  500A               	movf	(btemp+9)^0,w,c
 12806  0126D6  E106               	bnz	u12150
 12807  0126D8  0E0A               	movlw	10
 12808  0126DA  5C09               	subwf	(btemp+8)^0,w,c
 12809  0126DC  B0D8               	btfsc	status,0,c
 12810  0126DE  D002               	goto	u12150
 12811  0126E0  0E01               	movlw	1
 12812  0126E2  D001               	goto	u12160
 12813  0126E4                     u12150:
 12814  0126E4  0E00               	movlw	0
 12815  0126E6                     u12160:
 12816  0126E6  6E0B               	movwf	(btemp+10)^0,c
 12817  0126E8  6A0C               	clrf	(btemp+11)^0,c
 12818                           
 12819                           ;stkvar	_vfpfcnvrt$5808 @ sp[(-32)+0]
 12820  0126EA  0EE0               	movlw	-32
 12821  0126EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12822  0126F2  0EE1               	movlw	-31
 12823  0126F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12824                           
 12825                           ;stkvar	_vfpfcnvrt$5808 @ sp[(-32)+0]
 12826  0126FA  0EE0               	movlw	-32
 12827  0126FC  006F FF8C  F001    	movff	plusw1,btemp
 12828  012702  0EE1               	movlw	-31
 12829  012704  50E3               	movf	plusw1,w,c
 12830  012706  1001               	iorwf	btemp^0,w,c
 12831  012708  A4D8               	btfss	status,2,c
 12832  01270A  D7BD               	goto	l12799
 12833  01270C                     u12170:
 12834                           
 12835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12836                           ;stkvar	_fmt @ sp[(-32)+-4]
 12837  01270C  0EDC               	movlw	-36
 12838  01270E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12839  012714  0EDD               	movlw	-35
 12840  012716  006F FF8F FFDA     	movff	plusw1,fsr2h
 12841  01271C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12842  012722  006F FF77 FFF7     	movff	postdec2,tblptrh
 12843  012728                     	if	0	;tblptru may be non-zero
 12844  012728                     	endif
 12845  012728                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12846  012728  0E00               	movlw	low (__mediumconst shr (0+16))
 12847  01272A  6EF8               	movwf	tblptru,c
 12848  01272C                     	endif
 12849  01272C  0008               	tblrd		*
 12850  01272E  50F5               	movf	tablat,w,c
 12851  012730  6EE6               	movwf	postinc1,c
 12852  012732  0E00               	movlw	0
 12853  012734  6EE6               	movwf	postinc1,c
 12854  012736  EC04  F0D8         	call	_tolower	;wreg free
 12855                           
 12856                           ;stkvar	_ct @ sp[(-32)+26]
 12857  01273A  0EFA               	movlw	-6
 12858  01273C  0060  F007  FFE3   	movff	btemp,plusw1
 12859                           
 12860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12861                           ;stkvar	_ct @ sp[(-32)+26]
 12862  012742  0EFA               	movlw	-6
 12863  012744  50E3               	movf	plusw1,w,c
 12864  012746  B4D8               	btfsc	status,2,c
 12865  012748  D05B               	goto	l12817
 12866                           
 12867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12868                           ;stkvar	_ct @ sp[(-32)+26]
 12869  01274A  0EFB               	movlw	251
 12870  01274C  24E1               	addwf	fsr1l,w,c
 12871  01274E  6ED9               	movwf	fsr2l,c
 12872  012750  0EFF               	movlw	255
 12873  012752  20E2               	addwfc	fsr1h,w,c
 12874  012754  6EDA               	movwf	fsr2h,c
 12875                           
 12876                           ;stkvar	_fmt @ sp[(-32)+-4]
 12877  012756  0EDC               	movlw	-36
 12878  012758  006F FF8F FFE9     	movff	plusw1,fsr0l
 12879  01275E  0EDD               	movlw	-35
 12880  012760  006F FF8F FFEA     	movff	plusw1,fsr0h
 12881  012766  006F FFB8  F00B    	movff	postinc0,btemp+10
 12882  01276C  006F FFB4  F00C    	movff	postdec0,btemp+11
 12883  012772  0E01               	movlw	1
 12884  012774  260B               	addwf	(btemp+10)^0,f,c
 12885  012776  0E00               	movlw	0
 12886  012778  220C               	addwfc	(btemp+11)^0,f,c
 12887  01277A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12888  012780  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12889  012786                     	if	0	;tblptru may be non-zero
 12890  012786                     	endif
 12891  012786                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12892  012786  0E00               	movlw	low (__mediumconst shr (0+16))
 12893  012788  6EF8               	movwf	tblptru,c
 12894  01278A                     	endif
 12895  01278A  0008               	tblrd		*
 12896  01278C  50F5               	movf	tablat,w,c
 12897  01278E  6EE6               	movwf	postinc1,c
 12898  012790  0E00               	movlw	0
 12899  012792  6EE6               	movwf	postinc1,c
 12900  012794  EC04  F0D8         	call	_tolower	;wreg free
 12901  012798  5001               	movf	btemp^0,w,c
 12902  01279A  6EDF               	movwf	indf2,c
 12903                           
 12904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12905                           ;stkvar	_ct @ sp[(-32)+26]
 12906  01279C  0EFB               	movlw	251
 12907  01279E  24E1               	addwf	fsr1l,w,c
 12908  0127A0  6ED9               	movwf	fsr2l,c
 12909  0127A2  0EFF               	movlw	255
 12910  0127A4  20E2               	addwfc	fsr1h,w,c
 12911  0127A6  6EDA               	movwf	fsr2h,c
 12912  0127A8  50DF               	movf	indf2,w,c
 12913  0127AA  B4D8               	btfsc	status,2,c
 12914  0127AC  D029               	goto	l12817
 12915                           
 12916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12917                           ;stkvar	_ct @ sp[(-32)+26]
 12918  0127AE  0EFC               	movlw	252
 12919  0127B0  24E1               	addwf	fsr1l,w,c
 12920  0127B2  6ED9               	movwf	fsr2l,c
 12921  0127B4  0EFF               	movlw	255
 12922  0127B6  20E2               	addwfc	fsr1h,w,c
 12923  0127B8  6EDA               	movwf	fsr2h,c
 12924                           
 12925                           ;stkvar	_fmt @ sp[(-32)+-4]
 12926  0127BA  0EDC               	movlw	-36
 12927  0127BC  006F FF8F FFE9     	movff	plusw1,fsr0l
 12928  0127C2  0EDD               	movlw	-35
 12929  0127C4  006F FF8F FFEA     	movff	plusw1,fsr0h
 12930  0127CA  006F FFB8  F00B    	movff	postinc0,btemp+10
 12931  0127D0  006F FFB4  F00C    	movff	postdec0,btemp+11
 12932  0127D6  0E02               	movlw	2
 12933  0127D8  260B               	addwf	(btemp+10)^0,f,c
 12934  0127DA  0E00               	movlw	0
 12935  0127DC  220C               	addwfc	(btemp+11)^0,f,c
 12936  0127DE  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12937  0127E4  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12938  0127EA                     	if	0	;tblptru may be non-zero
 12939  0127EA                     	endif
 12940  0127EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12941  0127EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12942  0127EC  6EF8               	movwf	tblptru,c
 12943  0127EE                     	endif
 12944  0127EE  0008               	tblrd		*
 12945  0127F0  50F5               	movf	tablat,w,c
 12946  0127F2  6EE6               	movwf	postinc1,c
 12947  0127F4  0E00               	movlw	0
 12948  0127F6  6EE6               	movwf	postinc1,c
 12949  0127F8  EC04  F0D8         	call	_tolower	;wreg free
 12950  0127FC  5001               	movf	btemp^0,w,c
 12951  0127FE  6EDF               	movwf	indf2,c
 12952  012800                     l12817:
 12953                           
 12954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12955                           ;stkvar	_fmt @ sp[(-32)+-4]
 12956  012800  0EDC               	movlw	-36
 12957  012802  006F FF8F FFD9     	movff	plusw1,fsr2l
 12958  012808  0EDD               	movlw	-35
 12959  01280A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12960  012810  006F FF7B FFF6     	movff	postinc2,tblptrl
 12961  012816  006F FF77 FFF7     	movff	postdec2,tblptrh
 12962  01281C                     	if	0	;tblptru may be non-zero
 12963  01281C                     	endif
 12964  01281C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12965  01281C  0E00               	movlw	low (__mediumconst shr (0+16))
 12966  01281E  6EF8               	movwf	tblptru,c
 12967  012820                     	endif
 12968  012820  0008               	tblrd		*
 12969  012822  50F5               	movf	tablat,w,c
 12970  012824  0A63               	xorlw	99
 12971  012826  A4D8               	btfss	status,2,c
 12972  012828  D037               	goto	l12827
 12973                           
 12974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12975                           ;stkvar	_fmt @ sp[(-32)+-4]
 12976  01282A  0EDC               	movlw	-36
 12977  01282C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12978  012832  0EDD               	movlw	-35
 12979  012834  006F FF8F FFDA     	movff	plusw1,fsr2h
 12980  01283A  2ADE               	incf	postinc2,f,c
 12981  01283C  0E00               	movlw	0
 12982  01283E  22DD               	addwfc	postdec2,f,c
 12983                           
 12984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12985                           ;stkvar	_ap @ sp[(-32)+-6]
 12986  012840  0EDA               	movlw	-38
 12987  012842  006F FF8F FFD9     	movff	plusw1,fsr2l
 12988  012848  0EDB               	movlw	-37
 12989  01284A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12990  012850  0E02               	movlw	2
 12991  012852  5EDE               	subwf	postinc2,f,c
 12992  012854  0E00               	movlw	0
 12993  012856  5ADD               	subwfb	postdec2,f,c
 12994  012858  006F FF78  F00B    	movff	postinc2,btemp+10
 12995  01285E  006F FF74  F00C    	movff	postdec2,btemp+11
 12996  012864  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12997  01286A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12998  012870  50DF               	movf	indf2,w,c
 12999  012872  6E0C               	movwf	(btemp+11)^0,c
 13000                           
 13001                           ;stkvar	_c @ sp[(-32)+31]
 13002  012874  0EFF               	movlw	-1
 13003  012876  0060  F033  FFE3   	movff	btemp+11,plusw1
 13004                           
 13005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 13006                           ;stkvar	_c @ sp[(-32)+31]
 13007  01287C  0EFF               	movlw	-1
 13008  01287E  50E3               	movf	plusw1,w,c
 13009  012880  6EE6               	movwf	postinc1,c
 13010                           
 13011                           ;stkvar	_fp @ sp[(-33)+-2]
 13012  012882  0EDD               	movlw	-35
 13013  012884  006F FF8F FFE6     	movff	plusw1,postinc1
 13014  01288A  006F FF8F FFE6     	movff	plusw1,postinc1
 13015  012890  EC7E  F0D7         	call	_ctoa	;wreg free
 13016  012894  EFC5  F099         	goto	l2445
 13017  012898                     l12827:
 13018                           
 13019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 13020                           ;stkvar	_fmt @ sp[(-32)+-4]
 13021  012898  0EDC               	movlw	-36
 13022  01289A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13023  0128A0  0EDD               	movlw	-35
 13024  0128A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13025  0128A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13026  0128AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13027  0128B4                     	if	0	;tblptru may be non-zero
 13028  0128B4                     	endif
 13029  0128B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13030  0128B4  0E00               	movlw	low (__mediumconst shr (0+16))
 13031  0128B6  6EF8               	movwf	tblptru,c
 13032  0128B8                     	endif
 13033  0128B8  0008               	tblrd		*
 13034  0128BA  50F5               	movf	tablat,w,c
 13035  0128BC  0A64               	xorlw	100
 13036  0128BE  B4D8               	btfsc	status,2,c
 13037  0128C0  D015               	goto	u12220
 13038                           
 13039                           ;stkvar	_fmt @ sp[(-32)+-4]
 13040  0128C2  0EDC               	movlw	-36
 13041  0128C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13042  0128CA  0EDD               	movlw	-35
 13043  0128CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13044  0128D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13045  0128D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13046  0128DE                     	if	0	;tblptru may be non-zero
 13047  0128DE                     	endif
 13048  0128DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13049  0128DE  0E00               	movlw	low (__mediumconst shr (0+16))
 13050  0128E0  6EF8               	movwf	tblptru,c
 13051  0128E2                     	endif
 13052  0128E2  0008               	tblrd		*
 13053  0128E4  50F5               	movf	tablat,w,c
 13054  0128E6  0A69               	xorlw	105
 13055  0128E8  A4D8               	btfss	status,2,c
 13056  0128EA  D076               	goto	l12839
 13057  0128EC                     u12220:
 13058                           
 13059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 13060                           ;stkvar	_fmt @ sp[(-32)+-4]
 13061  0128EC  0EDC               	movlw	-36
 13062  0128EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13063  0128F4  0EDD               	movlw	-35
 13064  0128F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13065  0128FC  2ADE               	incf	postinc2,f,c
 13066  0128FE  0E00               	movlw	0
 13067  012900  22DD               	addwfc	postdec2,f,c
 13068                           
 13069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 13070                           ;stkvar	_ap @ sp[(-32)+-6]
 13071  012902  0EDA               	movlw	-38
 13072  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 13073  01290A  0EDB               	movlw	-37
 13074  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13075  012912  0E02               	movlw	2
 13076  012914  5EDE               	subwf	postinc2,f,c
 13077  012916  0E00               	movlw	0
 13078  012918  5ADD               	subwfb	postdec2,f,c
 13079  01291A  006F FF78  F00B    	movff	postinc2,btemp+10
 13080  012920  006F FF74  F00C    	movff	postdec2,btemp+11
 13081  012926  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13082  01292C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13083  012932  006F FF78  F00B    	movff	postinc2,btemp+10
 13084  012938  006F FF74  F00C    	movff	postdec2,btemp+11
 13085                           
 13086                           ;stkvar	_ll @ sp[(-32)+14]
 13087  01293E  0EEE               	movlw	-18
 13088  012940  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13089  012946  0EEF               	movlw	-17
 13090  012948  0060  F033  FFE3   	movff	btemp+11,plusw1
 13091  01294E  6A01               	clrf	btemp^0,c
 13092  012950  BEE3               	btfsc	plusw1,7,c
 13093  012952  6801               	setf	btemp^0,c
 13094  012954  0EF0               	movlw	-16
 13095  012956  0060  F007  FFE3   	movff	btemp,plusw1
 13096  01295C  0EF1               	movlw	-15
 13097  01295E  0060  F007  FFE3   	movff	btemp,plusw1
 13098  012964  0EF2               	movlw	-14
 13099  012966  0060  F007  FFE3   	movff	btemp,plusw1
 13100  01296C  0EF3               	movlw	-13
 13101  01296E  0060  F007  FFE3   	movff	btemp,plusw1
 13102  012974  0EF4               	movlw	-12
 13103  012976  0060  F007  FFE3   	movff	btemp,plusw1
 13104  01297C  0EF5               	movlw	-11
 13105  01297E  0060  F007  FFE3   	movff	btemp,plusw1
 13106  012984                     l12835:
 13107                           
 13108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 13109                           ;stkvar	_ll @ sp[(-32)+14]
 13110  012984  50E1               	movf	fsr1l,w,c
 13111  012986  0FEE               	addlw	-18
 13112  012988  6ED9               	movwf	fsr2l,c
 13113  01298A  50E2               	movf	fsr1h,w,c
 13114  01298C  6EDA               	movwf	fsr2h,c
 13115  01298E  0EFF               	movlw	255
 13116  012990  22DA               	addwfc	fsr2h,f,c
 13117  012992  006F FF7B FFE6     	movff	postinc2,postinc1
 13118  012998  006F FF7B FFE6     	movff	postinc2,postinc1
 13119  01299E  006F FF7B FFE6     	movff	postinc2,postinc1
 13120  0129A4  006F FF7B FFE6     	movff	postinc2,postinc1
 13121  0129AA  006F FF7B FFE6     	movff	postinc2,postinc1
 13122  0129B0  006F FF7B FFE6     	movff	postinc2,postinc1
 13123  0129B6  006F FF7B FFE6     	movff	postinc2,postinc1
 13124  0129BC  006F FF7B FFE6     	movff	postinc2,postinc1
 13125                           
 13126                           ;stkvar	_fp @ sp[(-40)+-2]
 13127  0129C2  0ED6               	movlw	-42
 13128  0129C4  006F FF8F FFE6     	movff	plusw1,postinc1
 13129  0129CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13130  0129D0  EC1F  F0AC         	call	_dtoa	;wreg free
 13131  0129D4  EFC5  F099         	goto	l2445
 13132  0129D8                     l12839:
 13133                           
 13134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 13135  0129D8  0E02               	movlw	2
 13136  0129DA  6EE6               	movwf	postinc1,c
 13137  0129DC  0E00               	movlw	0
 13138  0129DE  6EE6               	movwf	postinc1,c
 13139  0129E0  0EEA               	movlw	low STR_73
 13140  0129E2  6EE6               	movwf	postinc1,c
 13141  0129E4  0EFF               	movlw	high STR_73
 13142  0129E6  6EE6               	movwf	postinc1,c
 13143                           
 13144                           ;stkvar	_fmt @ sp[(-36)+-4]
 13145  0129E8  0ED8               	movlw	-40
 13146  0129EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13147  0129F0  0ED9               	movlw	-39
 13148  0129F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13149  0129F8  006F FF78  F00B    	movff	postinc2,btemp+10
 13150  0129FE  006F FF74  F00C    	movff	postdec2,btemp+11
 13151  012A04  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13152  012A0A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13153  012A10  EC4C  F0C0         	call	_strncmp	;wreg free
 13154  012A14  5001               	movf	btemp^0,w,c
 13155  012A16  1002               	iorwf	(btemp+1)^0,w,c
 13156  012A18  B4D8               	btfsc	status,2,c
 13157  012A1A  D022               	goto	u12240
 13158  012A1C  0E02               	movlw	2
 13159  012A1E  6EE6               	movwf	postinc1,c
 13160  012A20  0E00               	movlw	0
 13161  012A22  6EE6               	movwf	postinc1,c
 13162  012A24  0EF0               	movlw	low STR_77
 13163  012A26  6EE6               	movwf	postinc1,c
 13164  012A28  0EFF               	movlw	high STR_77
 13165  012A2A  6EE6               	movwf	postinc1,c
 13166                           
 13167                           ;stkvar	_fmt @ sp[(-36)+-4]
 13168  012A2C  0ED8               	movlw	-40
 13169  012A2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13170  012A34  0ED9               	movlw	-39
 13171  012A36  006F FF8F FFDA     	movff	plusw1,fsr2h
 13172  012A3C  006F FF78  F00B    	movff	postinc2,btemp+10
 13173  012A42  006F FF74  F00C    	movff	postdec2,btemp+11
 13174  012A48  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13175  012A4E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13176  012A54  EC4C  F0C0         	call	_strncmp	;wreg free
 13177  012A58  5001               	movf	btemp^0,w,c
 13178  012A5A  1002               	iorwf	(btemp+1)^0,w,c
 13179  012A5C  A4D8               	btfss	status,2,c
 13180  012A5E  D069               	goto	l12851
 13181  012A60                     u12240:
 13182                           
 13183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 13184                           ;stkvar	_fmt @ sp[(-32)+-4]
 13185  012A60  0EDC               	movlw	-36
 13186  012A62  006F FF8F FFD9     	movff	plusw1,fsr2l
 13187  012A68  0EDD               	movlw	-35
 13188  012A6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13189  012A70  0E02               	movlw	2
 13190  012A72  26DE               	addwf	postinc2,f,c
 13191  012A74  0E00               	movlw	0
 13192  012A76  22DD               	addwfc	postdec2,f,c
 13193                           
 13194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 13195                           ;stkvar	_ap @ sp[(-32)+-6]
 13196  012A78  0EDA               	movlw	-38
 13197  012A7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13198  012A80  0EDB               	movlw	-37
 13199  012A82  006F FF8F FFDA     	movff	plusw1,fsr2h
 13200  012A88  0E04               	movlw	4
 13201  012A8A  5EDE               	subwf	postinc2,f,c
 13202  012A8C  0E00               	movlw	0
 13203  012A8E  5ADD               	subwfb	postdec2,f,c
 13204  012A90  006F FF78  F00B    	movff	postinc2,btemp+10
 13205  012A96  006F FF74  F00C    	movff	postdec2,btemp+11
 13206  012A9C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13207  012AA2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13208  012AA8  006F FF78  F009    	movff	postinc2,btemp+8
 13209  012AAE  006F FF78  F00A    	movff	postinc2,btemp+9
 13210  012AB4  006F FF78  F00B    	movff	postinc2,btemp+10
 13211  012ABA  006F FF78  F00C    	movff	postinc2,btemp+11
 13212  012AC0  0060  F024  F011   	movff	btemp+8,btemp+16
 13213  012AC6  0060  F028  F012   	movff	btemp+9,btemp+17
 13214  012ACC  0060  F02C  F013   	movff	btemp+10,btemp+18
 13215  012AD2  0060  F030  F014   	movff	btemp+11,btemp+19
 13216  012AD8  6A15               	clrf	(btemp+20)^0,c
 13217  012ADA  BE14               	btfsc	(btemp+19)^0,7,c
 13218  012ADC  6815               	setf	(btemp+20)^0,c
 13219  012ADE  0060  F054  F016   	movff	btemp+20,btemp+21
 13220  012AE4  0060  F054  F017   	movff	btemp+20,btemp+22
 13221  012AEA  0060  F054  F018   	movff	btemp+20,btemp+23
 13222                           
 13223                           ;stkvar	_ll @ sp[(-32)+14]
 13224  012AF0  0EEE               	movlw	-18
 13225  012AF2  0060  F047  FFE3   	movff	btemp+16,plusw1
 13226  012AF8  0EEF               	movlw	-17
 13227  012AFA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13228  012B00  0EF0               	movlw	-16
 13229  012B02  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13230  012B08  0EF1               	movlw	-15
 13231  012B0A  0060  F053  FFE3   	movff	btemp+19,plusw1
 13232  012B10  0EF2               	movlw	-14
 13233  012B12  0060  F057  FFE3   	movff	btemp+20,plusw1
 13234  012B18  0EF3               	movlw	-13
 13235  012B1A  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13236  012B20  0EF4               	movlw	-12
 13237  012B22  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13238  012B28  0EF5               	movlw	-11
 13239  012B2A  0060  F063  FFE3   	movff	btemp+23,plusw1
 13240  012B30  D729               	goto	l12835
 13241  012B32                     l12851:
 13242                           
 13243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 13244                           ;stkvar	_ct @ sp[(-32)+26]
 13245  012B32  0EFA               	movlw	-6
 13246  012B34  006F FF8C  F001    	movff	plusw1,btemp
 13247  012B3A  0E66               	movlw	102
 13248  012B3C  1801               	xorwf	btemp^0,w,c
 13249  012B3E  A4D8               	btfss	status,2,c
 13250  012B40  D06E               	goto	l12863
 13251                           
 13252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 13253                           ;stkvar	_fmt @ sp[(-32)+-4]
 13254  012B42  0EDC               	movlw	-36
 13255  012B44  006F FF8F FFD9     	movff	plusw1,fsr2l
 13256  012B4A  0EDD               	movlw	-35
 13257  012B4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13258  012B52  006F FF7B FFF6     	movff	postinc2,tblptrl
 13259  012B58  006F FF77 FFF7     	movff	postdec2,tblptrh
 13260  012B5E                     	if	0	;tblptru may be non-zero
 13261  012B5E                     	endif
 13262  012B5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13263  012B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 13264  012B60  6EF8               	movwf	tblptru,c
 13265  012B62                     	endif
 13266                           
 13267                           ;stkvar	_c @ sp[(-32)+31]
 13268  012B62  0008               	tblrd		*
 13269  012B64  0EFF               	movlw	-1
 13270  012B66  006F FFD7 FFE3     	movff	tablat,plusw1
 13271                           
 13272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 13273                           ;stkvar	_fmt @ sp[(-32)+-4]
 13274  012B6C  0EDC               	movlw	-36
 13275  012B6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13276  012B74  0EDD               	movlw	-35
 13277  012B76  006F FF8F FFDA     	movff	plusw1,fsr2h
 13278  012B7C  2ADE               	incf	postinc2,f,c
 13279  012B7E  0E00               	movlw	0
 13280  012B80  22DD               	addwfc	postdec2,f,c
 13281                           
 13282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 13283                           ;stkvar	_ap @ sp[(-32)+-6]
 13284  012B82  0EDA               	movlw	-38
 13285  012B84  006F FF8F FFD9     	movff	plusw1,fsr2l
 13286  012B8A  0EDB               	movlw	-37
 13287  012B8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13288  012B92  0E04               	movlw	4
 13289  012B94  5EDE               	subwf	postinc2,f,c
 13290  012B96  0E00               	movlw	0
 13291  012B98  5ADD               	subwfb	postdec2,f,c
 13292  012B9A  006F FF78  F00B    	movff	postinc2,btemp+10
 13293  012BA0  006F FF74  F00C    	movff	postdec2,btemp+11
 13294  012BA6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13295  012BAC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13296  012BB2  006F FF78  F009    	movff	postinc2,btemp+8
 13297  012BB8  006F FF78  F00A    	movff	postinc2,btemp+9
 13298  012BBE  006F FF78  F00B    	movff	postinc2,btemp+10
 13299  012BC4  006F FF78  F00C    	movff	postinc2,btemp+11
 13300                           
 13301                           ;stkvar	_f @ sp[(-32)+22]
 13302  012BCA  0EF6               	movlw	-10
 13303  012BCC  0060  F027  FFE3   	movff	btemp+8,plusw1
 13304  012BD2  0EF7               	movlw	-9
 13305  012BD4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13306  012BDA  0EF8               	movlw	-8
 13307  012BDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13308  012BE2  0EF9               	movlw	-7
 13309  012BE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13310  012BEA                     l12859:
 13311                           
 13312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 13313                           ;stkvar	_c @ sp[(-32)+31]
 13314  012BEA  0EFF               	movlw	-1
 13315  012BEC  50E3               	movf	plusw1,w,c
 13316  012BEE  6EE6               	movwf	postinc1,c
 13317                           
 13318                           ;stkvar	_f @ sp[(-33)+22]
 13319  012BF0  0EF5               	movlw	-11
 13320  012BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 13321  012BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 13322  012BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 13323  012C04  006F FF8F FFE6     	movff	plusw1,postinc1
 13324                           
 13325                           ;stkvar	_fp @ sp[(-37)+-2]
 13326  012C0A  0ED9               	movlw	-39
 13327  012C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13328  012C12  006F FF8F FFE6     	movff	plusw1,postinc1
 13329  012C18  EC00  F080         	call	_efgtoa	;wreg free
 13330  012C1C  D3B6               	goto	l2445
 13331  012C1E                     l12863:
 13332                           
 13333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 13334  012C1E  0E02               	movlw	2
 13335  012C20  6EE6               	movwf	postinc1,c
 13336  012C22  0E00               	movlw	0
 13337  012C24  6EE6               	movwf	postinc1,c
 13338  012C26  0EED               	movlw	low STR_82
 13339  012C28  6EE6               	movwf	postinc1,c
 13340  012C2A  0EFF               	movlw	high STR_82
 13341  012C2C  6EE6               	movwf	postinc1,c
 13342                           
 13343                           ;stkvar	_ct @ sp[(-36)+26]
 13344  012C2E  0EF6               	movlw	246
 13345  012C30  24E1               	addwf	fsr1l,w,c
 13346  012C32  6E01               	movwf	btemp^0,c
 13347  012C34  0EFF               	movlw	255
 13348  012C36  20E2               	addwfc	fsr1h,w,c
 13349  012C38  6E02               	movwf	(btemp+1)^0,c
 13350  012C3A  0060  F007  FFE6   	movff	btemp,postinc1
 13351  012C40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13352  012C46  EC4C  F0C0         	call	_strncmp	;wreg free
 13353  012C4A  5001               	movf	btemp^0,w,c
 13354  012C4C  1002               	iorwf	(btemp+1)^0,w,c
 13355  012C4E  A4D8               	btfss	status,2,c
 13356  012C50  D096               	goto	l12883
 13357                           
 13358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 13359                           ;stkvar	_fmt @ sp[(-32)+-4]
 13360  012C52  0EDC               	movlw	-36
 13361  012C54  006F FF8F FFD9     	movff	plusw1,fsr2l
 13362  012C5A  0EDD               	movlw	-35
 13363  012C5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13364  012C62  006F FF78  F00B    	movff	postinc2,btemp+10
 13365  012C68  006F FF74  F00C    	movff	postdec2,btemp+11
 13366  012C6E  0E01               	movlw	1
 13367  012C70  260B               	addwf	(btemp+10)^0,f,c
 13368  012C72  0E00               	movlw	0
 13369  012C74  220C               	addwfc	(btemp+11)^0,f,c
 13370  012C76  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13371  012C7C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13372  012C82                     	if	0	;tblptru may be non-zero
 13373  012C82                     	endif
 13374  012C82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13375  012C82  0E00               	movlw	low (__mediumconst shr (0+16))
 13376  012C84  6EF8               	movwf	tblptru,c
 13377  012C86                     	endif
 13378                           
 13379                           ;stkvar	_c @ sp[(-32)+31]
 13380  012C86  0008               	tblrd		*
 13381  012C88  0EFF               	movlw	-1
 13382  012C8A  006F FFD7 FFE3     	movff	tablat,plusw1
 13383  012C90  0EBF               	movlw	191
 13384  012C92  6E0B               	movwf	(btemp+10)^0,c
 13385  012C94  0EFF               	movlw	255
 13386  012C96  6E0C               	movwf	(btemp+11)^0,c
 13387                           
 13388                           ;stkvar	_fmt @ sp[(-32)+-4]
 13389  012C98  0EDC               	movlw	-36
 13390  012C9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13391  012CA0  0EDD               	movlw	-35
 13392  012CA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13393  012CA8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13394  012CAE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13395  012CB4                     	if	0	;tblptru may be non-zero
 13396  012CB4                     	endif
 13397  012CB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13398  012CB4  0E00               	movlw	low (__mediumconst shr (0+16))
 13399  012CB6  6EF8               	movwf	tblptru,c
 13400  012CB8                     	endif
 13401  012CB8  0008               	tblrd		*
 13402  012CBA  50F5               	movf	tablat,w,c
 13403  012CBC  6E09               	movwf	(btemp+8)^0,c
 13404  012CBE  6A0A               	clrf	(btemp+9)^0,c
 13405  012CC0  500B               	movf	(btemp+10)^0,w,c
 13406  012CC2  2609               	addwf	(btemp+8)^0,f,c
 13407  012CC4  500C               	movf	(btemp+11)^0,w,c
 13408  012CC6  220A               	addwfc	(btemp+9)^0,f,c
 13409  012CC8  500A               	movf	(btemp+9)^0,w,c
 13410  012CCA  E106               	bnz	u12270
 13411  012CCC  0E1A               	movlw	26
 13412  012CCE  5C09               	subwf	(btemp+8)^0,w,c
 13413  012CD0  B0D8               	btfsc	status,0,c
 13414  012CD2  D002               	goto	u12270
 13415  012CD4  0E01               	movlw	1
 13416  012CD6  D001               	goto	u12280
 13417  012CD8                     u12270:
 13418  012CD8  0E00               	movlw	0
 13419  012CDA                     u12280:
 13420  012CDA  6E0B               	movwf	(btemp+10)^0,c
 13421  012CDC  6A0C               	clrf	(btemp+11)^0,c
 13422                           
 13423                           ;stkvar	_vfpfcnvrt$5819 @ sp[(-32)+2]
 13424  012CDE  0EE2               	movlw	-30
 13425  012CE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13426  012CE6  0EE3               	movlw	-29
 13427  012CE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13428                           
 13429                           ;stkvar	_vfpfcnvrt$5819 @ sp[(-32)+2]
 13430  012CEE  0EE2               	movlw	-30
 13431  012CF0  006F FF8C  F001    	movff	plusw1,btemp
 13432  012CF6  0EE3               	movlw	-29
 13433  012CF8  50E3               	movf	plusw1,w,c
 13434  012CFA  1001               	iorwf	btemp^0,w,c
 13435                           
 13436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 13437                           ;stkvar	_ap @ sp[(-32)+-6]
 13438                           
 13439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 13440                           
 13441                           ;stkvar	_f @ sp[(-32)+22]
 13442                           
 13443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 13444                           ;stkvar	_ap @ sp[(-32)+-6]
 13445  012CFC  0EDA               	movlw	-38
 13446  012CFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13447  012D04  0EDB               	movlw	-37
 13448  012D06  006F FF8F FFDA     	movff	plusw1,fsr2h
 13449  012D0C  0E04               	movlw	4
 13450  012D0E  5EDE               	subwf	postinc2,f,c
 13451  012D10  0E00               	movlw	0
 13452  012D12  5ADD               	subwfb	postdec2,f,c
 13453  012D14  006F FF78  F00B    	movff	postinc2,btemp+10
 13454  012D1A  006F FF74  F00C    	movff	postdec2,btemp+11
 13455  012D20  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13456  012D26  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13457  012D2C  006F FF78  F009    	movff	postinc2,btemp+8
 13458  012D32  006F FF78  F00A    	movff	postinc2,btemp+9
 13459  012D38  006F FF78  F00B    	movff	postinc2,btemp+10
 13460  012D3E  006F FF78  F00C    	movff	postinc2,btemp+11
 13461                           
 13462                           ;stkvar	_f @ sp[(-32)+22]
 13463  012D44  0EF6               	movlw	-10
 13464  012D46  0060  F027  FFE3   	movff	btemp+8,plusw1
 13465  012D4C  0EF7               	movlw	-9
 13466  012D4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13467  012D54  0EF8               	movlw	-8
 13468  012D56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13469  012D5C  0EF9               	movlw	-7
 13470  012D5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13471                           
 13472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 13473                           ;stkvar	_fmt @ sp[(-32)+-4]
 13474  012D64  0EDC               	movlw	-36
 13475  012D66  006F FF8F FFD9     	movff	plusw1,fsr2l
 13476  012D6C  0EDD               	movlw	-35
 13477  012D6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13478  012D74  0E02               	movlw	2
 13479  012D76  26DE               	addwf	postinc2,f,c
 13480  012D78  0E00               	movlw	0
 13481  012D7A  22DD               	addwfc	postdec2,f,c
 13482  012D7C  D736               	goto	l12859
 13483  012D7E                     l12883:
 13484                           
 13485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 13486                           ;stkvar	_fmt @ sp[(-32)+-4]
 13487  012D7E  0EDC               	movlw	-36
 13488  012D80  006F FF8F FFD9     	movff	plusw1,fsr2l
 13489  012D86  0EDD               	movlw	-35
 13490  012D88  006F FF8F FFDA     	movff	plusw1,fsr2h
 13491  012D8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13492  012D94  006F FF77 FFF7     	movff	postdec2,tblptrh
 13493  012D9A                     	if	0	;tblptru may be non-zero
 13494  012D9A                     	endif
 13495  012D9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13496  012D9A  0E00               	movlw	low (__mediumconst shr (0+16))
 13497  012D9C  6EF8               	movwf	tblptru,c
 13498  012D9E                     	endif
 13499  012D9E  0008               	tblrd		*
 13500  012DA0  50F5               	movf	tablat,w,c
 13501  012DA2  0A73               	xorlw	115
 13502  012DA4  A4D8               	btfss	status,2,c
 13503  012DA6  D042               	goto	l12893
 13504                           
 13505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 13506                           ;stkvar	_fmt @ sp[(-32)+-4]
 13507  012DA8  0EDC               	movlw	-36
 13508  012DAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13509  012DB0  0EDD               	movlw	-35
 13510  012DB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13511  012DB8  2ADE               	incf	postinc2,f,c
 13512  012DBA  0E00               	movlw	0
 13513  012DBC  22DD               	addwfc	postdec2,f,c
 13514                           
 13515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 13516                           ;stkvar	_ap @ sp[(-32)+-6]
 13517  012DBE  0EDA               	movlw	-38
 13518  012DC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13519  012DC6  0EDB               	movlw	-37
 13520  012DC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13521  012DCE  0E02               	movlw	2
 13522  012DD0  5EDE               	subwf	postinc2,f,c
 13523  012DD2  0E00               	movlw	0
 13524  012DD4  5ADD               	subwfb	postdec2,f,c
 13525  012DD6  006F FF78  F00B    	movff	postinc2,btemp+10
 13526  012DDC  006F FF74  F00C    	movff	postdec2,btemp+11
 13527  012DE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13528  012DE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13529  012DEE  006F FF78  F00B    	movff	postinc2,btemp+10
 13530  012DF4  006F FF74  F00C    	movff	postdec2,btemp+11
 13531                           
 13532                           ;stkvar	_cp @ sp[(-32)+29]
 13533  012DFA  0EFE               	movlw	-2
 13534  012DFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13535  012E02  0EFD               	movlw	-3
 13536  012E04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13537                           
 13538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 13539                           ;stkvar	_cp @ sp[(-32)+29]
 13540  012E0A  0EFD               	movlw	-3
 13541  012E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13542  012E12  006F FF8F FFE6     	movff	plusw1,postinc1
 13543                           
 13544                           ;stkvar	_fp @ sp[(-34)+-2]
 13545  012E18  0EDC               	movlw	-36
 13546  012E1A  006F FF8F FFE6     	movff	plusw1,postinc1
 13547  012E20  006F FF8F FFE6     	movff	plusw1,postinc1
 13548  012E26  EC30  F0BA         	call	_stoa	;wreg free
 13549  012E2A  D2AF               	goto	l2445
 13550  012E2C                     l12893:
 13551                           
 13552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 13553                           ;stkvar	_fmt @ sp[(-32)+-4]
 13554  012E2C  0EDC               	movlw	-36
 13555  012E2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13556  012E34  0EDD               	movlw	-35
 13557  012E36  006F FF8F FFDA     	movff	plusw1,fsr2h
 13558  012E3C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13559  012E42  006F FF77 FFF7     	movff	postdec2,tblptrh
 13560  012E48                     	if	0	;tblptru may be non-zero
 13561  012E48                     	endif
 13562  012E48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13563  012E48  0E00               	movlw	low (__mediumconst shr (0+16))
 13564  012E4A  6EF8               	movwf	tblptru,c
 13565  012E4C                     	endif
 13566  012E4C  0008               	tblrd		*
 13567  012E4E  50F5               	movf	tablat,w,c
 13568  012E50  0A75               	xorlw	117
 13569  012E52  A4D8               	btfss	status,2,c
 13570  012E54  D07C               	goto	l12903
 13571                           
 13572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 13573                           ;stkvar	_fmt @ sp[(-32)+-4]
 13574  012E56  0EDC               	movlw	-36
 13575  012E58  006F FF8F FFD9     	movff	plusw1,fsr2l
 13576  012E5E  0EDD               	movlw	-35
 13577  012E60  006F FF8F FFDA     	movff	plusw1,fsr2h
 13578  012E66  2ADE               	incf	postinc2,f,c
 13579  012E68  0E00               	movlw	0
 13580  012E6A  22DD               	addwfc	postdec2,f,c
 13581                           
 13582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13583                           ;stkvar	_ap @ sp[(-32)+-6]
 13584  012E6C  0EDA               	movlw	-38
 13585  012E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13586  012E74  0EDB               	movlw	-37
 13587  012E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 13588  012E7C  0E02               	movlw	2
 13589  012E7E  5EDE               	subwf	postinc2,f,c
 13590  012E80  0E00               	movlw	0
 13591  012E82  5ADD               	subwfb	postdec2,f,c
 13592  012E84  006F FF78  F00B    	movff	postinc2,btemp+10
 13593  012E8A  006F FF74  F00C    	movff	postdec2,btemp+11
 13594  012E90  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13595  012E96  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13596  012E9C  006F FF78  F00B    	movff	postinc2,btemp+10
 13597  012EA2  006F FF74  F00C    	movff	postdec2,btemp+11
 13598  012EA8  500B               	movf	(btemp+10)^0,w,c
 13599  012EAA  6E11               	movwf	(btemp+16)^0,c
 13600  012EAC  500C               	movf	(btemp+11)^0,w,c
 13601  012EAE  6E12               	movwf	(btemp+17)^0,c
 13602  012EB0  6A13               	clrf	(btemp+18)^0,c
 13603  012EB2  6A14               	clrf	(btemp+19)^0,c
 13604  012EB4  6A15               	clrf	(btemp+20)^0,c
 13605  012EB6  6A16               	clrf	(btemp+21)^0,c
 13606  012EB8  6A17               	clrf	(btemp+22)^0,c
 13607  012EBA  6A18               	clrf	(btemp+23)^0,c
 13608                           
 13609                           ;stkvar	_llu @ sp[(-32)+6]
 13610  012EBC  0EE6               	movlw	-26
 13611  012EBE  0060  F047  FFE3   	movff	btemp+16,plusw1
 13612  012EC4  0EE7               	movlw	-25
 13613  012EC6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13614  012ECC  0EE8               	movlw	-24
 13615  012ECE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13616  012ED4  0EE9               	movlw	-23
 13617  012ED6  0060  F053  FFE3   	movff	btemp+19,plusw1
 13618  012EDC  0EEA               	movlw	-22
 13619  012EDE  0060  F057  FFE3   	movff	btemp+20,plusw1
 13620  012EE4  0EEB               	movlw	-21
 13621  012EE6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13622  012EEC  0EEC               	movlw	-20
 13623  012EEE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13624  012EF4  0EED               	movlw	-19
 13625  012EF6  0060  F063  FFE3   	movff	btemp+23,plusw1
 13626                           
 13627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 13628                           ;stkvar	_llu @ sp[(-32)+6]
 13629  012EFC  50E1               	movf	fsr1l,w,c
 13630  012EFE  0FE6               	addlw	-26
 13631  012F00  6ED9               	movwf	fsr2l,c
 13632  012F02  50E2               	movf	fsr1h,w,c
 13633  012F04  6EDA               	movwf	fsr2h,c
 13634  012F06  0EFF               	movlw	255
 13635  012F08  22DA               	addwfc	fsr2h,f,c
 13636  012F0A  006F FF7B FFE6     	movff	postinc2,postinc1
 13637  012F10  006F FF7B FFE6     	movff	postinc2,postinc1
 13638  012F16  006F FF7B FFE6     	movff	postinc2,postinc1
 13639  012F1C  006F FF7B FFE6     	movff	postinc2,postinc1
 13640  012F22  006F FF7B FFE6     	movff	postinc2,postinc1
 13641  012F28  006F FF7B FFE6     	movff	postinc2,postinc1
 13642  012F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 13643  012F34  006F FF7B FFE6     	movff	postinc2,postinc1
 13644                           
 13645                           ;stkvar	_fp @ sp[(-40)+-2]
 13646  012F3A  0ED6               	movlw	-42
 13647  012F3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13648  012F42  006F FF8F FFE6     	movff	plusw1,postinc1
 13649  012F48  EC18  F0B4         	call	_utoa	;wreg free
 13650  012F4C  D21E               	goto	l2445
 13651  012F4E                     l12903:
 13652                           
 13653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 13654  012F4E  0E02               	movlw	2
 13655  012F50  6EE6               	movwf	postinc1,c
 13656  012F52  0E00               	movlw	0
 13657  012F54  6EE6               	movwf	postinc1,c
 13658  012F56  0EF3               	movlw	low STR_87
 13659  012F58  6EE6               	movwf	postinc1,c
 13660  012F5A  0EFF               	movlw	high STR_87
 13661  012F5C  6EE6               	movwf	postinc1,c
 13662                           
 13663                           ;stkvar	_fmt @ sp[(-36)+-4]
 13664  012F5E  0ED8               	movlw	-40
 13665  012F60  006F FF8F FFD9     	movff	plusw1,fsr2l
 13666  012F66  0ED9               	movlw	-39
 13667  012F68  006F FF8F FFDA     	movff	plusw1,fsr2h
 13668  012F6E  006F FF78  F00B    	movff	postinc2,btemp+10
 13669  012F74  006F FF74  F00C    	movff	postdec2,btemp+11
 13670  012F7A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13671  012F80  0060  F033  FFE6   	movff	btemp+11,postinc1
 13672  012F86  EC4C  F0C0         	call	_strncmp	;wreg free
 13673  012F8A  5001               	movf	btemp^0,w,c
 13674  012F8C  1002               	iorwf	(btemp+1)^0,w,c
 13675  012F8E  A4D8               	btfss	status,2,c
 13676  012F90  D039               	goto	l12913
 13677                           
 13678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 13679                           ;stkvar	_fmt @ sp[(-32)+-4]
 13680  012F92  0EDC               	movlw	-36
 13681  012F94  006F FF8F FFD9     	movff	plusw1,fsr2l
 13682  012F9A  0EDD               	movlw	-35
 13683  012F9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13684  012FA2  0E02               	movlw	2
 13685  012FA4  26DE               	addwf	postinc2,f,c
 13686  012FA6  0E00               	movlw	0
 13687  012FA8  22DD               	addwfc	postdec2,f,c
 13688                           
 13689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13690                           ;stkvar	_ap @ sp[(-32)+-6]
 13691  012FAA  0EDA               	movlw	-38
 13692  012FAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13693  012FB2  0EDB               	movlw	-37
 13694  012FB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13695  012FBA  0E04               	movlw	4
 13696  012FBC  5EDE               	subwf	postinc2,f,c
 13697  012FBE  0E00               	movlw	0
 13698  012FC0  5ADD               	subwfb	postdec2,f,c
 13699  012FC2  006F FF78  F00B    	movff	postinc2,btemp+10
 13700  012FC8  006F FF74  F00C    	movff	postdec2,btemp+11
 13701  012FCE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13702  012FD4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13703  012FDA  006F FF78  F009    	movff	postinc2,btemp+8
 13704  012FE0  006F FF78  F00A    	movff	postinc2,btemp+9
 13705  012FE6  006F FF78  F00B    	movff	postinc2,btemp+10
 13706  012FEC  006F FF78  F00C    	movff	postinc2,btemp+11
 13707  012FF2  5009               	movf	(btemp+8)^0,w,c
 13708  012FF4  6E11               	movwf	(btemp+16)^0,c
 13709  012FF6  500A               	movf	(btemp+9)^0,w,c
 13710  012FF8  6E12               	movwf	(btemp+17)^0,c
 13711  012FFA  500B               	movf	(btemp+10)^0,w,c
 13712  012FFC  6E13               	movwf	(btemp+18)^0,c
 13713  012FFE  500C               	movf	(btemp+11)^0,w,c
 13714  013000  6E14               	movwf	(btemp+19)^0,c
 13715  013002  D758               	goto	L11
 13716  013004                     l12913:
 13717                           
 13718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 13719                           ;stkvar	_fmt @ sp[(-32)+-4]
 13720  013004  0EDC               	movlw	-36
 13721  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 13722  01300C  0EDD               	movlw	-35
 13723  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13724  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 13725  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13726  013020                     	if	0	;tblptru may be non-zero
 13727  013020                     	endif
 13728  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13729  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 13730  013022  6EF8               	movwf	tblptru,c
 13731  013024                     	endif
 13732  013024  0008               	tblrd		*
 13733  013026  50F5               	movf	tablat,w,c
 13734  013028  0A78               	xorlw	120
 13735  01302A  B4D8               	btfsc	status,2,c
 13736  01302C  D015               	goto	u12340
 13737                           
 13738                           ;stkvar	_fmt @ sp[(-32)+-4]
 13739  01302E  0EDC               	movlw	-36
 13740  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 13741  013036  0EDD               	movlw	-35
 13742  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 13743  01303E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13744  013044  006F FF77 FFF7     	movff	postdec2,tblptrh
 13745  01304A                     	if	0	;tblptru may be non-zero
 13746  01304A                     	endif
 13747  01304A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13748  01304A  0E00               	movlw	low (__mediumconst shr (0+16))
 13749  01304C  6EF8               	movwf	tblptru,c
 13750  01304E                     	endif
 13751  01304E  0008               	tblrd		*
 13752  013050  50F5               	movf	tablat,w,c
 13753  013052  0A58               	xorlw	88
 13754  013054  A4D8               	btfss	status,2,c
 13755  013056  D094               	goto	l12927
 13756  013058                     u12340:
 13757                           
 13758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 13759                           ;stkvar	_fmt @ sp[(-32)+-4]
 13760  013058  0EDC               	movlw	-36
 13761  01305A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13762  013060  0EDD               	movlw	-35
 13763  013062  006F FF8F FFDA     	movff	plusw1,fsr2h
 13764  013068  006F FF7B FFF6     	movff	postinc2,tblptrl
 13765  01306E  006F FF77 FFF7     	movff	postdec2,tblptrh
 13766  013074                     	if	0	;tblptru may be non-zero
 13767  013074                     	endif
 13768  013074                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13769  013074  0E00               	movlw	low (__mediumconst shr (0+16))
 13770  013076  6EF8               	movwf	tblptru,c
 13771  013078                     	endif
 13772                           
 13773                           ;stkvar	_c @ sp[(-32)+31]
 13774  013078  0008               	tblrd		*
 13775  01307A  0EFF               	movlw	-1
 13776  01307C  006F FFD7 FFE3     	movff	tablat,plusw1
 13777                           
 13778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 13779                           ;stkvar	_fmt @ sp[(-32)+-4]
 13780  013082  0EDC               	movlw	-36
 13781  013084  006F FF8F FFD9     	movff	plusw1,fsr2l
 13782  01308A  0EDD               	movlw	-35
 13783  01308C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13784  013092  2ADE               	incf	postinc2,f,c
 13785  013094  0E00               	movlw	0
 13786  013096  22DD               	addwfc	postdec2,f,c
 13787                           
 13788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13789                           ;stkvar	_ap @ sp[(-32)+-6]
 13790  013098  0EDA               	movlw	-38
 13791  01309A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13792  0130A0  0EDB               	movlw	-37
 13793  0130A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13794  0130A8  0E02               	movlw	2
 13795  0130AA  5EDE               	subwf	postinc2,f,c
 13796  0130AC  0E00               	movlw	0
 13797  0130AE  5ADD               	subwfb	postdec2,f,c
 13798  0130B0  006F FF78  F00B    	movff	postinc2,btemp+10
 13799  0130B6  006F FF74  F00C    	movff	postdec2,btemp+11
 13800  0130BC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13801  0130C2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13802  0130C8  006F FF78  F00B    	movff	postinc2,btemp+10
 13803  0130CE  006F FF74  F00C    	movff	postdec2,btemp+11
 13804  0130D4  500B               	movf	(btemp+10)^0,w,c
 13805  0130D6  6E11               	movwf	(btemp+16)^0,c
 13806  0130D8  500C               	movf	(btemp+11)^0,w,c
 13807  0130DA  6E12               	movwf	(btemp+17)^0,c
 13808  0130DC  6A13               	clrf	(btemp+18)^0,c
 13809  0130DE  6A14               	clrf	(btemp+19)^0,c
 13810  0130E0  6A15               	clrf	(btemp+20)^0,c
 13811  0130E2  6A16               	clrf	(btemp+21)^0,c
 13812  0130E4  6A17               	clrf	(btemp+22)^0,c
 13813  0130E6  6A18               	clrf	(btemp+23)^0,c
 13814                           
 13815                           ;stkvar	_llu @ sp[(-32)+6]
 13816  0130E8  0EE6               	movlw	-26
 13817  0130EA  0060  F047  FFE3   	movff	btemp+16,plusw1
 13818  0130F0  0EE7               	movlw	-25
 13819  0130F2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13820  0130F8  0EE8               	movlw	-24
 13821  0130FA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13822  013100  0EE9               	movlw	-23
 13823  013102  0060  F053  FFE3   	movff	btemp+19,plusw1
 13824  013108  0EEA               	movlw	-22
 13825  01310A  0060  F057  FFE3   	movff	btemp+20,plusw1
 13826  013110  0EEB               	movlw	-21
 13827  013112  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13828  013118  0EEC               	movlw	-20
 13829  01311A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13830  013120  0EED               	movlw	-19
 13831  013122  0060  F063  FFE3   	movff	btemp+23,plusw1
 13832                           
 13833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13834                           ;stkvar	_c @ sp[(-32)+31]
 13835  013128  0EFF               	movlw	-1
 13836  01312A  50E3               	movf	plusw1,w,c
 13837  01312C  6EE6               	movwf	postinc1,c
 13838                           
 13839                           ;stkvar	_llu @ sp[(-33)+6]
 13840  01312E  50E1               	movf	fsr1l,w,c
 13841  013130  0FE5               	addlw	-27
 13842  013132  6ED9               	movwf	fsr2l,c
 13843  013134  50E2               	movf	fsr1h,w,c
 13844  013136  6EDA               	movwf	fsr2h,c
 13845  013138  0EFF               	movlw	255
 13846  01313A  22DA               	addwfc	fsr2h,f,c
 13847  01313C  006F FF7B FFE6     	movff	postinc2,postinc1
 13848  013142  006F FF7B FFE6     	movff	postinc2,postinc1
 13849  013148  006F FF7B FFE6     	movff	postinc2,postinc1
 13850  01314E  006F FF7B FFE6     	movff	postinc2,postinc1
 13851  013154  006F FF7B FFE6     	movff	postinc2,postinc1
 13852  01315A  006F FF7B FFE6     	movff	postinc2,postinc1
 13853  013160  006F FF7B FFE6     	movff	postinc2,postinc1
 13854  013166  006F FF7B FFE6     	movff	postinc2,postinc1
 13855                           
 13856                           ;stkvar	_fp @ sp[(-41)+-2]
 13857  01316C  0ED5               	movlw	-43
 13858  01316E  006F FF8F FFE6     	movff	plusw1,postinc1
 13859  013174  006F FF8F FFE6     	movff	plusw1,postinc1
 13860  01317A  EC85  F0B0         	call	_xtoa	;wreg free
 13861  01317E  D105               	goto	l2445
 13862  013180                     l12927:
 13863                           
 13864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13865  013180  0E02               	movlw	2
 13866  013182  6EE6               	movwf	postinc1,c
 13867  013184  0E00               	movlw	0
 13868  013186  6EE6               	movwf	postinc1,c
 13869  013188  0EF6               	movlw	low STR_92
 13870  01318A  6EE6               	movwf	postinc1,c
 13871  01318C  0EFF               	movlw	high STR_92
 13872  01318E  6EE6               	movwf	postinc1,c
 13873                           
 13874                           ;stkvar	_fmt @ sp[(-36)+-4]
 13875  013190  0ED8               	movlw	-40
 13876  013192  006F FF8F FFD9     	movff	plusw1,fsr2l
 13877  013198  0ED9               	movlw	-39
 13878  01319A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13879  0131A0  006F FF78  F00B    	movff	postinc2,btemp+10
 13880  0131A6  006F FF74  F00C    	movff	postdec2,btemp+11
 13881  0131AC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13882  0131B2  0060  F033  FFE6   	movff	btemp+11,postinc1
 13883  0131B8  EC4C  F0C0         	call	_strncmp	;wreg free
 13884  0131BC  5001               	movf	btemp^0,w,c
 13885  0131BE  1002               	iorwf	(btemp+1)^0,w,c
 13886  0131C0  B4D8               	btfsc	status,2,c
 13887  0131C2  D022               	goto	u12360
 13888  0131C4  0E02               	movlw	2
 13889  0131C6  6EE6               	movwf	postinc1,c
 13890  0131C8  0E00               	movlw	0
 13891  0131CA  6EE6               	movwf	postinc1,c
 13892  0131CC  0EE7               	movlw	low STR_96
 13893  0131CE  6EE6               	movwf	postinc1,c
 13894  0131D0  0EFF               	movlw	high STR_96
 13895  0131D2  6EE6               	movwf	postinc1,c
 13896                           
 13897                           ;stkvar	_fmt @ sp[(-36)+-4]
 13898  0131D4  0ED8               	movlw	-40
 13899  0131D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13900  0131DC  0ED9               	movlw	-39
 13901  0131DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13902  0131E4  006F FF78  F00B    	movff	postinc2,btemp+10
 13903  0131EA  006F FF74  F00C    	movff	postdec2,btemp+11
 13904  0131F0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13905  0131F6  0060  F033  FFE6   	movff	btemp+11,postinc1
 13906  0131FC  EC4C  F0C0         	call	_strncmp	;wreg free
 13907  013200  5001               	movf	btemp^0,w,c
 13908  013202  1002               	iorwf	(btemp+1)^0,w,c
 13909  013204  A4D8               	btfss	status,2,c
 13910  013206  D058               	goto	l12941
 13911  013208                     u12360:
 13912                           
 13913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13914                           ;stkvar	_fmt @ sp[(-32)+-4]
 13915  013208  0EDC               	movlw	-36
 13916  01320A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13917  013210  0EDD               	movlw	-35
 13918  013212  006F FF8F FFDA     	movff	plusw1,fsr2h
 13919  013218  006F FF78  F00B    	movff	postinc2,btemp+10
 13920  01321E  006F FF74  F00C    	movff	postdec2,btemp+11
 13921  013224  0E01               	movlw	1
 13922  013226  260B               	addwf	(btemp+10)^0,f,c
 13923  013228  0E00               	movlw	0
 13924  01322A  220C               	addwfc	(btemp+11)^0,f,c
 13925  01322C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13926  013232  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13927  013238                     	if	0	;tblptru may be non-zero
 13928  013238                     	endif
 13929  013238                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13930  013238  0E00               	movlw	low (__mediumconst shr (0+16))
 13931  01323A  6EF8               	movwf	tblptru,c
 13932  01323C                     	endif
 13933                           
 13934                           ;stkvar	_c @ sp[(-32)+31]
 13935  01323C  0008               	tblrd		*
 13936  01323E  0EFF               	movlw	-1
 13937  013240  006F FFD7 FFE3     	movff	tablat,plusw1
 13938                           
 13939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13940                           ;stkvar	_fmt @ sp[(-32)+-4]
 13941  013246  0EDC               	movlw	-36
 13942  013248  006F FF8F FFD9     	movff	plusw1,fsr2l
 13943  01324E  0EDD               	movlw	-35
 13944  013250  006F FF8F FFDA     	movff	plusw1,fsr2h
 13945  013256  0E02               	movlw	2
 13946  013258  26DE               	addwf	postinc2,f,c
 13947  01325A  0E00               	movlw	0
 13948  01325C  22DD               	addwfc	postdec2,f,c
 13949                           
 13950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13951                           ;stkvar	_ap @ sp[(-32)+-6]
 13952  01325E  0EDA               	movlw	-38
 13953  013260  006F FF8F FFD9     	movff	plusw1,fsr2l
 13954  013266  0EDB               	movlw	-37
 13955  013268  006F FF8F FFDA     	movff	plusw1,fsr2h
 13956  01326E  0E04               	movlw	4
 13957  013270  5EDE               	subwf	postinc2,f,c
 13958  013272  0E00               	movlw	0
 13959  013274  5ADD               	subwfb	postdec2,f,c
 13960  013276  006F FF78  F00B    	movff	postinc2,btemp+10
 13961  01327C  006F FF74  F00C    	movff	postdec2,btemp+11
 13962  013282  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13963  013288  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13964  01328E  006F FF78  F009    	movff	postinc2,btemp+8
 13965  013294  006F FF78  F00A    	movff	postinc2,btemp+9
 13966  01329A  006F FF78  F00B    	movff	postinc2,btemp+10
 13967  0132A0  006F FF78  F00C    	movff	postinc2,btemp+11
 13968  0132A6  5009               	movf	(btemp+8)^0,w,c
 13969  0132A8  6E11               	movwf	(btemp+16)^0,c
 13970  0132AA  500A               	movf	(btemp+9)^0,w,c
 13971  0132AC  6E12               	movwf	(btemp+17)^0,c
 13972  0132AE  500B               	movf	(btemp+10)^0,w,c
 13973  0132B0  6E13               	movwf	(btemp+18)^0,c
 13974  0132B2  500C               	movf	(btemp+11)^0,w,c
 13975  0132B4  6E14               	movwf	(btemp+19)^0,c
 13976  0132B6  D714               	goto	L12
 13977  0132B8                     l12941:
 13978                           
 13979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13980                           ;stkvar	_fmt @ sp[(-32)+-4]
 13981  0132B8  0EDC               	movlw	-36
 13982  0132BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13983  0132C0  0EDD               	movlw	-35
 13984  0132C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13985  0132C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13986  0132CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13987  0132D4                     	if	0	;tblptru may be non-zero
 13988  0132D4                     	endif
 13989  0132D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13990  0132D4  0E00               	movlw	low (__mediumconst shr (0+16))
 13991  0132D6  6EF8               	movwf	tblptru,c
 13992  0132D8                     	endif
 13993  0132D8  0008               	tblrd		*
 13994  0132DA  50F5               	movf	tablat,w,c
 13995  0132DC  0A25               	xorlw	37
 13996  0132DE  A4D8               	btfss	status,2,c
 13997  0132E0  D01A               	goto	l12951
 13998                           
 13999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 14000                           ;stkvar	_fmt @ sp[(-32)+-4]
 14001  0132E2  0EDC               	movlw	-36
 14002  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14003  0132EA  0EDD               	movlw	-35
 14004  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14005  0132F2  2ADE               	incf	postinc2,f,c
 14006  0132F4  0E00               	movlw	0
 14007  0132F6  22DD               	addwfc	postdec2,f,c
 14008                           
 14009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 14010                           ;stkvar	_fp @ sp[(-32)+-2]
 14011  0132F8  0EDE               	movlw	-34
 14012  0132FA  006F FF8F FFE6     	movff	plusw1,postinc1
 14013  013300  006F FF8F FFE6     	movff	plusw1,postinc1
 14014  013306  0E25               	movlw	37
 14015  013308  6EE6               	movwf	postinc1,c
 14016  01330A  0E00               	movlw	0
 14017  01330C  6EE6               	movwf	postinc1,c
 14018  01330E  ECE6  F0CC         	call	_fputc	;wreg free
 14019  013312                     l12947:
 14020                           
 14021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14022  013312  0E01               	movlw	1
 14023  013314  D00C               	goto	L13
 14024  013316                     l12951:
 14025                           
 14026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 14027                           ;stkvar	_fmt @ sp[(-32)+-4]
 14028  013316  0EDC               	movlw	-36
 14029  013318  006F FF8F FFD9     	movff	plusw1,fsr2l
 14030  01331E  0EDD               	movlw	-35
 14031  013320  006F FF8F FFDA     	movff	plusw1,fsr2h
 14032  013326  2ADE               	incf	postinc2,f,c
 14033  013328  0E00               	movlw	0
 14034  01332A  22DD               	addwfc	postdec2,f,c
 14035                           
 14036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 14037  01332C  0E00               	movlw	0
 14038  01332E                     L13:
 14039  01332E  6E01               	movwf	btemp^0,c
 14040  013330  0E00               	movlw	0
 14041  013332  6E02               	movwf	(btemp+1)^0,c
 14042  013334  D02A               	goto	l2445
 14043  013336                     l12957:
 14044                           
 14045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 14046                           ;stkvar	_fp @ sp[(-32)+-2]
 14047  013336  0EDE               	movlw	-34
 14048  013338  006F FF8F FFE6     	movff	plusw1,postinc1
 14049  01333E  006F FF8F FFE6     	movff	plusw1,postinc1
 14050                           
 14051                           ;stkvar	_fmt @ sp[(-34)+-4]
 14052  013344  0EDA               	movlw	-38
 14053  013346  006F FF8F FFD9     	movff	plusw1,fsr2l
 14054  01334C  0EDB               	movlw	-37
 14055  01334E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14056  013354  006F FF7B FFF6     	movff	postinc2,tblptrl
 14057  01335A  006F FF77 FFF7     	movff	postdec2,tblptrh
 14058  013360                     	if	0	;tblptru may be non-zero
 14059  013360                     	endif
 14060  013360                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14061  013360  0E00               	movlw	low (__mediumconst shr (0+16))
 14062  013362  6EF8               	movwf	tblptru,c
 14063  013364                     	endif
 14064  013364  0008               	tblrd		*
 14065  013366  50F5               	movf	tablat,w,c
 14066  013368  6EE6               	movwf	postinc1,c
 14067  01336A  0E00               	movlw	0
 14068  01336C  6EE6               	movwf	postinc1,c
 14069  01336E  ECE6  F0CC         	call	_fputc	;wreg free
 14070                           
 14071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 14072                           ;stkvar	_fmt @ sp[(-32)+-4]
 14073  013372  0EDC               	movlw	-36
 14074  013374  006F FF8F FFD9     	movff	plusw1,fsr2l
 14075  01337A  0EDD               	movlw	-35
 14076  01337C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14077  013382  2ADE               	incf	postinc2,f,c
 14078  013384  0E00               	movlw	0
 14079  013386  22DD               	addwfc	postdec2,f,c
 14080  013388  D7C4               	goto	l12947
 14081  01338A                     l2445:
 14082                           
 14083                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 14084  01338A  0EDA               	movlw	218
 14085  01338C  26E1               	addwf	fsr1l,f,c
 14086  01338E  0EFF               	movlw	255
 14087  013390  22E2               	addwfc	fsr1h,f,c
 14088  013392  0012               	return		;funcret
 14089  013394                     __end_of_vfpfcnvrt:
 14090                           	opt callstack 0
 14091                           
 14092 ;; *************** function _xtoa *****************
 14093 ;; Defined at:
 14094 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14097 ;;		 -> f(6), NULL(0), 
 14098 ;;  d               8  [STACK] unsigned long long 
 14099 ;;  x               1  [STACK] unsigned char 
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;  n               8  [STACK] unsigned long long 
 14102 ;;  c               2  [STACK] int 
 14103 ;;  i               2  [STACK] int 
 14104 ;;  w               2  [STACK] int 
 14105 ;;  p               2  [STACK] int 
 14106 ;; Return value:  Size  Location     Type
 14107 ;;                  2  [STACK] int 
 14108 ;; Registers used:
 14109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14110 ;; Tracked objects:
 14111 ;;		On entry : 0/0
 14112 ;;		On exit  : 0/0
 14113 ;;		Unchanged: 0/0
 14114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14119 ;;Total ram usage:        0 bytes
 14120 ;; Hardware stack levels used:    1
 14121 ;; Hardware stack levels required when called:   20
 14122 ;; This function calls:
 14123 ;;		_isalpha
 14124 ;;		_isupper
 14125 ;;		_pad
 14126 ;;		_toupper
 14127 ;; This function is called by:
 14128 ;;		_vfpfcnvrt
 14129 ;; This function uses a reentrant model
 14130 ;;
 14131                           
 14132                           	psect	text53
 14133  01610A                     __ptext53:
 14134                           	opt callstack 0
 14135  01610A                     _xtoa:
 14136                           	opt callstack 0
 14137                           
 14138                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14139  01610A  0E14               	movlw	20
 14140  01610C  26E1               	addwf	fsr1l,f,c
 14141  01610E  0E00               	movlw	0
 14142  016110  22E2               	addwfc	fsr1h,f,c
 14143                           
 14144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 14145                           
 14146                           ;incstack = 0
 14147 ;; hardware stack exceeded
 14148  016112  AE3D               	btfss	(_prec+1)^0,7,c
 14149                           
 14150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 14151  016114  923E               	bcf	_flags^0,1,c
 14152                           
 14153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 14154  016116  BE3D               	btfsc	(_prec+1)^0,7,c
 14155  016118  D005               	goto	u11900
 14156  01611A  503D               	movf	(_prec+1)^0,w,c
 14157  01611C  E110               	bnz	l12677
 14158  01611E  043C               	decf	_prec^0,w,c
 14159  016120  B0D8               	btfsc	status,0,c
 14160  016122  D00D               	goto	l12677
 14161  016124                     u11900:
 14162  016124  0E01               	movlw	1
 14163  016126  6E0B               	movwf	(btemp+10)^0,c
 14164  016128  0E00               	movlw	0
 14165  01612A  6E0C               	movwf	(btemp+11)^0,c
 14166                           
 14167                           ;stkvar	_p @ sp[(-20)+18]
 14168  01612C  0EFE               	movlw	-2
 14169  01612E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14170  016134  0EFF               	movlw	-1
 14171  016136  0060  F033  FFE3   	movff	btemp+11,plusw1
 14172  01613C  D008               	goto	l2395
 14173  01613E                     l12677:
 14174                           
 14175                           ;stkvar	_p @ sp[(-20)+18]
 14176  01613E  0EFE               	movlw	-2
 14177  016140  0060  F0F3  FFE3   	movff	_prec,plusw1
 14178  016146  0EFF               	movlw	-1
 14179  016148  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14180  01614E                     l2395:
 14181                           
 14182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 14183                           ;stkvar	_w @ sp[(-20)+16]
 14184  01614E  0EFC               	movlw	-4
 14185  016150  0060  F0EB  FFE3   	movff	_width,plusw1
 14186  016156  0EFD               	movlw	-3
 14187  016158  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14188                           
 14189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 14190  01615E  A83E               	btfss	_flags^0,4,c
 14191  016160  D00B               	goto	l12683
 14192                           
 14193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 14194                           ;stkvar	_w @ sp[(-20)+16]
 14195  016162  50E1               	movf	fsr1l,w,c
 14196  016164  0FFC               	addlw	-4
 14197  016166  6ED9               	movwf	fsr2l,c
 14198  016168  50E2               	movf	fsr1h,w,c
 14199  01616A  6EDA               	movwf	fsr2h,c
 14200  01616C  0EFF               	movlw	255
 14201  01616E  22DA               	addwfc	fsr2h,f,c
 14202  016170  0EFE               	movlw	254
 14203  016172  26DE               	addwf	postinc2,f,c
 14204  016174  0EFF               	movlw	255
 14205  016176  22DD               	addwfc	postdec2,f,c
 14206  016178                     l12683:
 14207                           
 14208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 14209                           ;stkvar	_d @ sp[(-20)+-10]
 14210  016178  0EE2               	movlw	226
 14211  01617A  24E1               	addwf	fsr1l,w,c
 14212  01617C  6ED9               	movwf	fsr2l,c
 14213  01617E  0EFF               	movlw	255
 14214  016180  20E2               	addwfc	fsr1h,w,c
 14215  016182  6EDA               	movwf	fsr2h,c
 14216                           
 14217                           ;stkvar	_n @ sp[(-20)+4]
 14218  016184  0E08               	movlw	8
 14219  016186  6E01               	movwf	btemp^0,c
 14220  016188  0EF0               	movlw	-16
 14221  01618A                     us1192999:
 14222  01618A  006F FF7B FFE3     	movff	postinc2,plusw1
 14223  016190  28E8               	incf	wreg,w,c
 14224  016192  2E01               	decfsz	btemp^0,f,c
 14225  016194  D7FA               	bra	us1192999
 14226                           
 14227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 14228  016196  0E4F               	movlw	79
 14229  016198  6E0B               	movwf	(btemp+10)^0,c
 14230  01619A  0E00               	movlw	0
 14231  01619C  6E0C               	movwf	(btemp+11)^0,c
 14232                           
 14233                           ;stkvar	_i @ sp[(-20)+14]
 14234  01619E  0EFA               	movlw	-6
 14235  0161A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14236  0161A6  0EFB               	movlw	-5
 14237  0161A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14238                           
 14239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 14240  0161AE  0102               	movlb	2	; () banked
 14241  0161B0  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14242                           
 14243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14244  0161B2  D0EE               	goto	l12721
 14245  0161B4                     l12689:
 14246                           
 14247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 14248                           ;stkvar	_i @ sp[(-20)+14]
 14249  0161B4  50E1               	movf	fsr1l,w,c
 14250  0161B6  0FFA               	addlw	-6
 14251  0161B8  6ED9               	movwf	fsr2l,c
 14252  0161BA  50E2               	movf	fsr1h,w,c
 14253  0161BC  6EDA               	movwf	fsr2h,c
 14254  0161BE  0EFF               	movlw	255
 14255  0161C0  22DA               	addwfc	fsr2h,f,c
 14256  0161C2  06DE               	decf	postinc2,f,c
 14257  0161C4  0E00               	movlw	0
 14258  0161C6  5ADD               	subwfb	postdec2,f,c
 14259                           
 14260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 14261                           ;stkvar	_n @ sp[(-20)+4]
 14262  0161C8  0EF0               	movlw	-16
 14263  0161CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14264  0161D0  0EF1               	movlw	-15
 14265  0161D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 14266  0161D8  0E0F               	movlw	15
 14267  0161DA  160B               	andwf	(btemp+10)^0,f,c
 14268  0161DC  0E00               	movlw	0
 14269  0161DE  160C               	andwf	(btemp+11)^0,f,c
 14270                           
 14271                           ;stkvar	_c @ sp[(-20)+12]
 14272  0161E0  0EF8               	movlw	-8
 14273  0161E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14274  0161E8  0EF9               	movlw	-7
 14275  0161EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14276                           
 14277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 14278                           ;stkvar	_c @ sp[(-20)+12]
 14279  0161F0  0EF9               	movlw	-7
 14280  0161F2  BEE3               	btfsc	plusw1,7,c
 14281  0161F4  D00F               	goto	l12697
 14282  0161F6  0EF9               	movlw	-7
 14283  0161F8  50E3               	movf	plusw1,w,c
 14284  0161FA  E108               	bnz	u11930
 14285  0161FC  0EF8               	movlw	-8
 14286  0161FE  006F FF8C  F001    	movff	plusw1,btemp
 14287  016204  0E0A               	movlw	10
 14288  016206  5E01               	subwf	btemp^0,f,c
 14289  016208  A0D8               	btfss	status,0,c
 14290  01620A  D004               	goto	l12697
 14291  01620C                     u11930:
 14292                           
 14293                           ;stkvar	_c @ sp[(-20)+12]
 14294  01620C  0EF8               	movlw	-8
 14295  01620E  50E3               	movf	plusw1,w,c
 14296  016210  0F57               	addlw	87
 14297  016212  D003               	goto	L14
 14298  016214                     l12697:
 14299                           
 14300                           ;stkvar	_c @ sp[(-20)+12]
 14301  016214  0EF8               	movlw	-8
 14302  016216  50E3               	movf	plusw1,w,c
 14303  016218  0F30               	addlw	48
 14304  01621A                     L14:
 14305  01621A  6E0B               	movwf	(btemp+10)^0,c
 14306  01621C  0EF9               	movlw	-7
 14307  01621E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14308  016224  0E00               	movlw	0
 14309  016226  220C               	addwfc	(btemp+11)^0,f,c
 14310                           
 14311                           ;stkvar	_c @ sp[(-20)+12]
 14312  016228  0EF8               	movlw	-8
 14313  01622A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14314  016230  0EF9               	movlw	-7
 14315  016232  0060  F033  FFE3   	movff	btemp+11,plusw1
 14316  016238  0EBF               	movlw	191
 14317  01623A  6E0B               	movwf	(btemp+10)^0,c
 14318  01623C  0EFF               	movlw	255
 14319  01623E  6E0C               	movwf	(btemp+11)^0,c
 14320                           
 14321                           ;stkvar	_x @ sp[(-20)+-11]
 14322  016240  0EE1               	movlw	-31
 14323  016242  50E3               	movf	plusw1,w,c
 14324  016244  6E09               	movwf	(btemp+8)^0,c
 14325  016246  6A0A               	clrf	(btemp+9)^0,c
 14326  016248  500B               	movf	(btemp+10)^0,w,c
 14327  01624A  2609               	addwf	(btemp+8)^0,f,c
 14328  01624C  500C               	movf	(btemp+11)^0,w,c
 14329  01624E  220A               	addwfc	(btemp+9)^0,f,c
 14330  016250  500A               	movf	(btemp+9)^0,w,c
 14331  016252  E106               	bnz	u11940
 14332  016254  0E1A               	movlw	26
 14333  016256  5C09               	subwf	(btemp+8)^0,w,c
 14334  016258  B0D8               	btfsc	status,0,c
 14335  01625A  D002               	goto	u11940
 14336  01625C  0E01               	movlw	1
 14337  01625E  D001               	goto	u11950
 14338  016260                     u11940:
 14339  016260  0E00               	movlw	0
 14340  016262                     u11950:
 14341  016262  6E0B               	movwf	(btemp+10)^0,c
 14342  016264  6A0C               	clrf	(btemp+11)^0,c
 14343                           
 14344                           ;stkvar	_xtoa$5792 @ sp[(-20)+2]
 14345  016266  0EEE               	movlw	-18
 14346  016268  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14347  01626E  0EEF               	movlw	-17
 14348  016270  0060  F033  FFE3   	movff	btemp+11,plusw1
 14349                           
 14350                           ;stkvar	_xtoa$5792 @ sp[(-20)+2]
 14351  016276  0EEE               	movlw	-18
 14352  016278  006F FF8C  F001    	movff	plusw1,btemp
 14353  01627E  0EEF               	movlw	-17
 14354  016280  50E3               	movf	plusw1,w,c
 14355  016282  1001               	iorwf	btemp^0,w,c
 14356  016284  B4D8               	btfsc	status,2,c
 14357  016286  D041               	goto	l12713
 14358  016288  0E9F               	movlw	159
 14359  01628A  6E0B               	movwf	(btemp+10)^0,c
 14360  01628C  0EFF               	movlw	255
 14361  01628E  6E0C               	movwf	(btemp+11)^0,c
 14362                           
 14363                           ;stkvar	_c @ sp[(-20)+12]
 14364  016290  0EF8               	movlw	-8
 14365  016292  006F FF8C  F009    	movff	plusw1,btemp+8
 14366  016298  0EF9               	movlw	-7
 14367  01629A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14368  0162A0  0E20               	movlw	32
 14369  0162A2  1209               	iorwf	(btemp+8)^0,f,c
 14370  0162A4  0E00               	movlw	0
 14371  0162A6  120A               	iorwf	(btemp+9)^0,f,c
 14372  0162A8  500B               	movf	(btemp+10)^0,w,c
 14373  0162AA  2609               	addwf	(btemp+8)^0,f,c
 14374  0162AC  500C               	movf	(btemp+11)^0,w,c
 14375  0162AE  220A               	addwfc	(btemp+9)^0,f,c
 14376  0162B0  500A               	movf	(btemp+9)^0,w,c
 14377  0162B2  E106               	bnz	u11970
 14378  0162B4  0E1A               	movlw	26
 14379  0162B6  5C09               	subwf	(btemp+8)^0,w,c
 14380  0162B8  B0D8               	btfsc	status,0,c
 14381  0162BA  D002               	goto	u11970
 14382  0162BC  0E01               	movlw	1
 14383  0162BE  D001               	goto	u11980
 14384  0162C0                     u11970:
 14385  0162C0  0E00               	movlw	0
 14386  0162C2                     u11980:
 14387  0162C2  6E0B               	movwf	(btemp+10)^0,c
 14388  0162C4  6A0C               	clrf	(btemp+11)^0,c
 14389                           
 14390                           ;stkvar	_xtoa$5793 @ sp[(-20)+0]
 14391  0162C6  0EEC               	movlw	-20
 14392  0162C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14393  0162CE  0EED               	movlw	-19
 14394  0162D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 14395                           
 14396                           ;stkvar	_xtoa$5793 @ sp[(-20)+0]
 14397  0162D6  0EEC               	movlw	-20
 14398  0162D8  006F FF8C  F001    	movff	plusw1,btemp
 14399  0162DE  0EED               	movlw	-19
 14400  0162E0  50E3               	movf	plusw1,w,c
 14401  0162E2  1001               	iorwf	btemp^0,w,c
 14402  0162E4  B4D8               	btfsc	status,2,c
 14403  0162E6  D011               	goto	l12713
 14404                           
 14405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 14406                           ;stkvar	_c @ sp[(-20)+12]
 14407  0162E8  0EF8               	movlw	-8
 14408  0162EA  006F FF8F FFE6     	movff	plusw1,postinc1
 14409  0162F0  006F FF8F FFE6     	movff	plusw1,postinc1
 14410  0162F6  ECC2  F0D7         	call	_toupper	;wreg free
 14411                           
 14412                           ;stkvar	_c @ sp[(-20)+12]
 14413  0162FA  0EF8               	movlw	-8
 14414  0162FC  0060  F007  FFE3   	movff	btemp,plusw1
 14415  016302  0EF9               	movlw	-7
 14416  016304  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14417  01630A                     l12713:
 14418                           
 14419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 14420                           ;stkvar	_c @ sp[(-20)+12]
 14421                           ;stkvar	_i @ sp[(-20)+14]
 14422  01630A  0EFA               	movlw	-6
 14423  01630C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14424  016312  0EFB               	movlw	-5
 14425  016314  006F FF8C  F00C    	movff	plusw1,btemp+11
 14426  01631A  0E97               	movlw	low _dbuf
 14427  01631C  240B               	addwf	(btemp+10)^0,w,c
 14428  01631E  6ED9               	movwf	fsr2l,c
 14429  016320  0E02               	movlw	high _dbuf
 14430  016322  200C               	addwfc	(btemp+11)^0,w,c
 14431  016324  6EDA               	movwf	fsr2h,c
 14432  016326  0EF8               	movlw	-8
 14433  016328  006F FF8F FFDF     	movff	plusw1,indf2
 14434                           
 14435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 14436                           ;stkvar	_p @ sp[(-20)+18]
 14437  01632E  50E1               	movf	fsr1l,w,c
 14438  016330  0FFE               	addlw	-2
 14439  016332  6ED9               	movwf	fsr2l,c
 14440  016334  50E2               	movf	fsr1h,w,c
 14441  016336  6EDA               	movwf	fsr2h,c
 14442  016338  0EFF               	movlw	255
 14443  01633A  22DA               	addwfc	fsr2h,f,c
 14444  01633C  06DE               	decf	postinc2,f,c
 14445  01633E  0E00               	movlw	0
 14446  016340  5ADD               	subwfb	postdec2,f,c
 14447                           
 14448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 14449                           ;stkvar	_w @ sp[(-20)+16]
 14450  016342  50E1               	movf	fsr1l,w,c
 14451  016344  0FFC               	addlw	-4
 14452  016346  6ED9               	movwf	fsr2l,c
 14453  016348  50E2               	movf	fsr1h,w,c
 14454  01634A  6EDA               	movwf	fsr2h,c
 14455  01634C  0EFF               	movlw	255
 14456  01634E  22DA               	addwfc	fsr2h,f,c
 14457  016350  06DE               	decf	postinc2,f,c
 14458  016352  0E00               	movlw	0
 14459  016354  5ADD               	subwfb	postdec2,f,c
 14460                           
 14461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 14462  016356  0E04               	movlw	4
 14463  016358  6E0C               	movwf	(btemp+11)^0,c
 14464                           
 14465                           ;stkvar	_n @ sp[(-20)+4]
 14466  01635A  50E1               	movf	fsr1l,w,c
 14467  01635C  0FF0               	addlw	-16
 14468  01635E  6ED9               	movwf	fsr2l,c
 14469  016360  50E2               	movf	fsr1h,w,c
 14470  016362  6EDA               	movwf	fsr2h,c
 14471  016364  0EFF               	movlw	255
 14472  016366  22DA               	addwfc	fsr2h,f,c
 14473  016368  280C               	incf	(btemp+11)^0,w,c
 14474  01636A  52DE               	movf	postinc2,f,c
 14475  01636C  D00F               	goto	u12000
 14476  01636E                     u12005:
 14477  01636E  52DE               	movf	postinc2,f,c
 14478  016370  52DE               	movf	postinc2,f,c
 14479  016372  52DE               	movf	postinc2,f,c
 14480  016374  52DE               	movf	postinc2,f,c
 14481  016376  52DE               	movf	postinc2,f,c
 14482  016378  52DE               	movf	postinc2,f,c
 14483  01637A  90D8               	bcf	status,0,c
 14484  01637C  32DD               	rrcf	postdec2,f,c
 14485  01637E  32DD               	rrcf	postdec2,f,c
 14486  016380  32DD               	rrcf	postdec2,f,c
 14487  016382  32DD               	rrcf	postdec2,f,c
 14488  016384  32DD               	rrcf	postdec2,f,c
 14489  016386  32DD               	rrcf	postdec2,f,c
 14490  016388  32DD               	rrcf	postdec2,f,c
 14491  01638A  32DE               	rrcf	postinc2,f,c
 14492  01638C                     u12000:
 14493  01638C  2EE8               	decfsz	wreg,f,c
 14494  01638E  D7EF               	goto	u12005
 14495  016390                     l12721:
 14496                           
 14497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14498                           ;stkvar	_i @ sp[(-20)+14]
 14499  016390  0EFB               	movlw	-5
 14500  016392  BEE3               	btfsc	plusw1,7,c
 14501  016394  D03A               	goto	u12050
 14502  016396  0EFB               	movlw	-5
 14503  016398  50E3               	movf	plusw1,w,c
 14504  01639A  E108               	bnz	u12010
 14505  01639C  0EFA               	movlw	-6
 14506  01639E  006F FF8C  F001    	movff	plusw1,btemp
 14507  0163A4  0E02               	movlw	2
 14508  0163A6  5E01               	subwf	btemp^0,f,c
 14509  0163A8  A0D8               	btfss	status,0,c
 14510  0163AA  D02F               	goto	u12050
 14511  0163AC                     u12010:
 14512                           
 14513                           ;stkvar	_n @ sp[(-20)+4]
 14514  0163AC  0EF0               	movlw	-16
 14515  0163AE  50E3               	movf	plusw1,w,c
 14516  0163B0  E115               	bnz	u12021
 14517  0163B2  0EF1               	movlw	-15
 14518  0163B4  50E3               	movf	plusw1,w,c
 14519  0163B6  E112               	bnz	u12021
 14520  0163B8  0EF2               	movlw	-14
 14521  0163BA  50E3               	movf	plusw1,w,c
 14522  0163BC  E10F               	bnz	u12021
 14523  0163BE  0EF3               	movlw	-13
 14524  0163C0  50E3               	movf	plusw1,w,c
 14525  0163C2  E10C               	bnz	u12021
 14526  0163C4  0EF4               	movlw	-12
 14527  0163C6  50E3               	movf	plusw1,w,c
 14528  0163C8  E109               	bnz	u12021
 14529  0163CA  0EF5               	movlw	-11
 14530  0163CC  50E3               	movf	plusw1,w,c
 14531  0163CE  E106               	bnz	u12021
 14532  0163D0  0EF6               	movlw	-10
 14533  0163D2  50E3               	movf	plusw1,w,c
 14534  0163D4  E103               	bnz	u12021
 14535  0163D6  0EF7               	movlw	-9
 14536  0163D8  50E3               	movf	plusw1,w,c
 14537  0163DA  A4D8               	btfss	status,2,c
 14538  0163DC                     u12021:
 14539  0163DC  D6EB               	goto	l12689
 14540                           
 14541                           ;stkvar	_p @ sp[(-20)+18]
 14542  0163DE  0EFF               	movlw	-1
 14543  0163E0  BEE3               	btfsc	plusw1,7,c
 14544  0163E2  D007               	goto	u12030
 14545  0163E4  0EFF               	movlw	-1
 14546  0163E6  50E3               	movf	plusw1,w,c
 14547  0163E8  E103               	bnz	u12031
 14548  0163EA  0EFE               	movlw	-2
 14549  0163EC  04E3               	decf	plusw1,w,c
 14550  0163EE  B0D8               	btfsc	status,0,c
 14551  0163F0                     u12031:
 14552  0163F0  D6E1               	goto	l12689
 14553  0163F2                     u12030:
 14554                           
 14555                           ;stkvar	_w @ sp[(-20)+16]
 14556  0163F2  0EFD               	movlw	-3
 14557  0163F4  BEE3               	btfsc	plusw1,7,c
 14558  0163F6  D009               	goto	u12050
 14559  0163F8  0EFD               	movlw	-3
 14560  0163FA  50E3               	movf	plusw1,w,c
 14561  0163FC  E104               	bnz	u12040
 14562  0163FE  0EFC               	movlw	-4
 14563  016400  04E3               	decf	plusw1,w,c
 14564  016402  A0D8               	btfss	status,0,c
 14565  016404  D002               	goto	u12050
 14566  016406                     u12040:
 14567  016406  B23E               	btfsc	_flags^0,1,c
 14568  016408  D6D5               	goto	l12689
 14569  01640A                     u12050:
 14570                           
 14571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 14572  01640A  A83E               	btfss	_flags^0,4,c
 14573  01640C  D036               	goto	l12737
 14574                           
 14575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 14576                           ;stkvar	_i @ sp[(-20)+14]
 14577  01640E  50E1               	movf	fsr1l,w,c
 14578  016410  0FFA               	addlw	-6
 14579  016412  6ED9               	movwf	fsr2l,c
 14580  016414  50E2               	movf	fsr1h,w,c
 14581  016416  6EDA               	movwf	fsr2h,c
 14582  016418  0EFF               	movlw	255
 14583  01641A  22DA               	addwfc	fsr2h,f,c
 14584  01641C  06DE               	decf	postinc2,f,c
 14585  01641E  0E00               	movlw	0
 14586  016420  5ADD               	subwfb	postdec2,f,c
 14587                           
 14588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 14589                           ;stkvar	_x @ sp[(-20)+-11]
 14590                           ;stkvar	_i @ sp[(-20)+14]
 14591  016422  0EFA               	movlw	-6
 14592  016424  006F FF8C  F00B    	movff	plusw1,btemp+10
 14593  01642A  0EFB               	movlw	-5
 14594  01642C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14595  016432  0E97               	movlw	low _dbuf
 14596  016434  240B               	addwf	(btemp+10)^0,w,c
 14597  016436  6ED9               	movwf	fsr2l,c
 14598  016438  0E02               	movlw	high _dbuf
 14599  01643A  200C               	addwfc	(btemp+11)^0,w,c
 14600  01643C  6EDA               	movwf	fsr2h,c
 14601  01643E  0EE1               	movlw	-31
 14602  016440  006F FF8F FFDF     	movff	plusw1,indf2
 14603                           
 14604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 14605                           ;stkvar	_i @ sp[(-20)+14]
 14606  016446  50E1               	movf	fsr1l,w,c
 14607  016448  0FFA               	addlw	-6
 14608  01644A  6ED9               	movwf	fsr2l,c
 14609  01644C  50E2               	movf	fsr1h,w,c
 14610  01644E  6EDA               	movwf	fsr2h,c
 14611  016450  0EFF               	movlw	255
 14612  016452  22DA               	addwfc	fsr2h,f,c
 14613  016454  06DE               	decf	postinc2,f,c
 14614  016456  0E00               	movlw	0
 14615  016458  5ADD               	subwfb	postdec2,f,c
 14616                           
 14617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 14618                           ;stkvar	_i @ sp[(-20)+14]
 14619  01645A  0EFA               	movlw	-6
 14620  01645C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14621  016462  0EFB               	movlw	-5
 14622  016464  006F FF8C  F00C    	movff	plusw1,btemp+11
 14623  01646A  0E97               	movlw	low _dbuf
 14624  01646C  240B               	addwf	(btemp+10)^0,w,c
 14625  01646E  6ED9               	movwf	fsr2l,c
 14626  016470  0E02               	movlw	high _dbuf
 14627  016472  200C               	addwfc	(btemp+11)^0,w,c
 14628  016474  6EDA               	movwf	fsr2h,c
 14629  016476  0E30               	movlw	48
 14630  016478  6EDF               	movwf	indf2,c
 14631  01647A                     l12737:
 14632                           
 14633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 14634                           ;stkvar	_w @ sp[(-20)+16]
 14635  01647A  0EFC               	movlw	-4
 14636  01647C  006F FF8F FFE6     	movff	plusw1,postinc1
 14637  016482  006F FF8F FFE6     	movff	plusw1,postinc1
 14638                           
 14639                           ;stkvar	_i @ sp[(-22)+14]
 14640  016488  0E97               	movlw	low _dbuf
 14641  01648A  6E0B               	movwf	(btemp+10)^0,c
 14642  01648C  0E02               	movlw	high _dbuf
 14643  01648E  6E0C               	movwf	(btemp+11)^0,c
 14644  016490  0EF8               	movlw	-8
 14645  016492  50E3               	movf	plusw1,w,c
 14646  016494  260B               	addwf	(btemp+10)^0,f,c
 14647  016496  0EF9               	movlw	-7
 14648  016498  50E3               	movf	plusw1,w,c
 14649  01649A  220C               	addwfc	(btemp+11)^0,f,c
 14650  01649C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14651  0164A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 14652                           
 14653                           ;stkvar	_fp @ sp[(-24)+-2]
 14654  0164A8  0EE6               	movlw	-26
 14655  0164AA  006F FF8F FFE6     	movff	plusw1,postinc1
 14656  0164B0  006F FF8F FFE6     	movff	plusw1,postinc1
 14657  0164B6  EC90  F0CE         	call	_pad	;wreg free
 14658                           
 14659                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 14660  0164BA  0EE1               	movlw	225
 14661  0164BC  26E1               	addwf	fsr1l,f,c
 14662  0164BE  0EFF               	movlw	255
 14663  0164C0  22E2               	addwfc	fsr1h,f,c
 14664  0164C2  0012               	return		;funcret
 14665  0164C4                     __end_of_xtoa:
 14666                           	opt callstack 0
 14667                           
 14668 ;; *************** function _toupper *****************
 14669 ;; Defined at:
 14670 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 14671 ;; Parameters:    Size  Location     Type
 14672 ;;  c               2  [STACK] int 
 14673 ;; Auto vars:     Size  Location     Type
 14674 ;;		None
 14675 ;; Return value:  Size  Location     Type
 14676 ;;                  2  [STACK] int 
 14677 ;; Registers used:
 14678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14679 ;; Tracked objects:
 14680 ;;		On entry : 0/2
 14681 ;;		On exit  : 0/0
 14682 ;;		Unchanged: 0/0
 14683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14688 ;;Total ram usage:        0 bytes
 14689 ;; Hardware stack levels used:    1
 14690 ;; Hardware stack levels required when called:   16
 14691 ;; This function calls:
 14692 ;;		_islower
 14693 ;; This function is called by:
 14694 ;;		_xtoa
 14695 ;; This function uses a reentrant model
 14696 ;;
 14697                           
 14698                           	psect	text54
 14699  01AF84                     __ptext54:
 14700                           	opt callstack 0
 14701  01AF84                     _toupper:
 14702                           	opt callstack 0
 14703                           
 14704                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14705  01AF84  52E6               	movf	postinc1,f,c
 14706  01AF86  52E6               	movf	postinc1,f,c
 14707                           
 14708                           ;stkvar	_c @ sp[(-2)+-2]
 14709                           
 14710                           ;incstack = 0
 14711 ;; hardware stack exceeded
 14712  01AF88  0EFC               	movlw	-4
 14713  01AF8A  50E3               	movf	plusw1,w,c
 14714  01AF8C  0F9F               	addlw	159
 14715  01AF8E  6E0B               	movwf	(btemp+10)^0,c
 14716  01AF90  0EFD               	movlw	-3
 14717  01AF92  006F FF8C  F00C    	movff	plusw1,btemp+11
 14718  01AF98  0EFF               	movlw	255
 14719  01AF9A  220C               	addwfc	(btemp+11)^0,f,c
 14720  01AF9C  500C               	movf	(btemp+11)^0,w,c
 14721  01AF9E  E106               	bnz	u6300
 14722  01AFA0  0E1A               	movlw	26
 14723  01AFA2  5C0B               	subwf	(btemp+10)^0,w,c
 14724  01AFA4  B0D8               	btfsc	status,0,c
 14725  01AFA6  D002               	goto	u6300
 14726  01AFA8  0E01               	movlw	1
 14727  01AFAA  D001               	goto	u6310
 14728  01AFAC                     u6300:
 14729  01AFAC  0E00               	movlw	0
 14730  01AFAE                     u6310:
 14731  01AFAE  6E0B               	movwf	(btemp+10)^0,c
 14732  01AFB0  6A0C               	clrf	(btemp+11)^0,c
 14733                           
 14734                           ;stkvar	_toupper$6599 @ sp[(-2)+0]
 14735  01AFB2  0EFE               	movlw	-2
 14736  01AFB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14737  01AFBA  0EFF               	movlw	-1
 14738  01AFBC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14739                           
 14740                           ;stkvar	_toupper$6599 @ sp[(-2)+0]
 14741  01AFC2  0EFE               	movlw	-2
 14742  01AFC4  006F FF8C  F001    	movff	plusw1,btemp
 14743  01AFCA  0EFF               	movlw	-1
 14744  01AFCC  50E3               	movf	plusw1,w,c
 14745  01AFCE  1001               	iorwf	btemp^0,w,c
 14746  01AFD0  B4D8               	btfsc	status,2,c
 14747  01AFD2  D00D               	goto	l8281
 14748                           
 14749                           ;stkvar	_c @ sp[(-2)+-2]
 14750  01AFD4  0EFC               	movlw	-4
 14751  01AFD6  006F FF8C  F001    	movff	plusw1,btemp
 14752  01AFDC  0EFD               	movlw	-3
 14753  01AFDE  006F FF8C  F002    	movff	plusw1,btemp+1
 14754  01AFE4  0E5F               	movlw	95
 14755  01AFE6  1601               	andwf	btemp^0,f,c
 14756  01AFE8  0E00               	movlw	0
 14757  01AFEA  1602               	andwf	(btemp+1)^0,f,c
 14758  01AFEC  D008               	goto	l3562
 14759  01AFEE                     l8281:
 14760                           
 14761                           ;stkvar	_c @ sp[(-2)+-2]
 14762  01AFEE  0EFC               	movlw	-4
 14763  01AFF0  006F FF8C  F001    	movff	plusw1,btemp
 14764  01AFF6  0EFD               	movlw	-3
 14765  01AFF8  006F FF8C  F002    	movff	plusw1,btemp+1
 14766  01AFFE                     l3562:
 14767                           
 14768                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14769  01AFFE  52E5               	movf	postdec1,f,c
 14770  01B000  52E5               	movf	postdec1,f,c
 14771  01B002  52E5               	movf	postdec1,f,c
 14772  01B004  52E5               	movf	postdec1,f,c
 14773  01B006  0012               	return		;funcret
 14774  01B008                     __end_of_toupper:
 14775                           	opt callstack 0
 14776                           
 14777 ;; *************** function _islower *****************
 14778 ;; Defined at:
 14779 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 14780 ;; Parameters:    Size  Location     Type
 14781 ;;  c               2  [STACK] int 
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;		None
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  2  [STACK] int 
 14786 ;; Registers used:
 14787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14788 ;; Tracked objects:
 14789 ;;		On entry : 0/0
 14790 ;;		On exit  : 0/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14797 ;;Total ram usage:        0 bytes
 14798 ;; Hardware stack levels used:    1
 14799 ;; Hardware stack levels required when called:   15
 14800 ;; This function calls:
 14801 ;;		Nothing
 14802 ;; This function is called by:
 14803 ;;		_toupper
 14804 ;; This function uses a reentrant model
 14805 ;;
 14806                           
 14807                           	psect	text55
 14808  01BE3C                     __ptext55:
 14809                           	opt callstack 0
 14810  01BE3C                     _islower:
 14811                           	opt callstack 0
 14812                           
 14813                           ;stkvar	_c @ sp[(0)+-2]
 14814                           
 14815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14816                           ;incstack = 0
 14817 ;; hardware stack exceeded
 14818  01BE3C  0EFE               	movlw	-2
 14819  01BE3E  50E3               	movf	plusw1,w,c
 14820  01BE40  0F9F               	addlw	159
 14821  01BE42  6E0B               	movwf	(btemp+10)^0,c
 14822  01BE44  0EFF               	movlw	-1
 14823  01BE46  006F FF8C  F00C    	movff	plusw1,btemp+11
 14824  01BE4C  0EFF               	movlw	255
 14825  01BE4E  220C               	addwfc	(btemp+11)^0,f,c
 14826  01BE50  500C               	movf	(btemp+11)^0,w,c
 14827  01BE52  E106               	bnz	u5940
 14828  01BE54  0E1A               	movlw	26
 14829  01BE56  5C0B               	subwf	(btemp+10)^0,w,c
 14830  01BE58  B0D8               	btfsc	status,0,c
 14831  01BE5A  D002               	goto	u5940
 14832  01BE5C  0E01               	movlw	1
 14833  01BE5E  D001               	goto	u5950
 14834  01BE60                     u5940:
 14835  01BE60  0E00               	movlw	0
 14836  01BE62                     u5950:
 14837  01BE62  6E01               	movwf	btemp^0,c
 14838  01BE64  6A02               	clrf	(btemp+1)^0,c
 14839                           
 14840                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14841  01BE66  52E5               	movf	postdec1,f,c
 14842  01BE68  52E5               	movf	postdec1,f,c
 14843  01BE6A  0012               	return		;funcret
 14844  01BE6C                     __end_of_islower:
 14845                           	opt callstack 0
 14846                           
 14847 ;; *************** function _isalpha *****************
 14848 ;; Defined at:
 14849 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  c               2  [STACK] int 
 14852 ;; Auto vars:     Size  Location     Type
 14853 ;;		None
 14854 ;; Return value:  Size  Location     Type
 14855 ;;                  2  [STACK] int 
 14856 ;; Registers used:
 14857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14858 ;; Tracked objects:
 14859 ;;		On entry : 0/0
 14860 ;;		On exit  : 0/0
 14861 ;;		Unchanged: 0/0
 14862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14867 ;;Total ram usage:        0 bytes
 14868 ;; Hardware stack levels used:    1
 14869 ;; Hardware stack levels required when called:   15
 14870 ;; This function calls:
 14871 ;;		Nothing
 14872 ;; This function is called by:
 14873 ;;		_xtoa
 14874 ;; This function uses a reentrant model
 14875 ;;
 14876                           
 14877                           	psect	text56
 14878  01BA22                     __ptext56:
 14879                           	opt callstack 0
 14880  01BA22                     _isalpha:
 14881                           	opt callstack 0
 14882                           
 14883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14884                           ;incstack = 0
 14885 ;; hardware stack exceeded
 14886  01BA22  0E9F               	movlw	159
 14887  01BA24  6E0B               	movwf	(btemp+10)^0,c
 14888  01BA26  0EFF               	movlw	255
 14889  01BA28  6E0C               	movwf	(btemp+11)^0,c
 14890                           
 14891                           ;stkvar	_c @ sp[(0)+-2]
 14892  01BA2A  0EFE               	movlw	-2
 14893  01BA2C  006F FF8C  F009    	movff	plusw1,btemp+8
 14894  01BA32  0EFF               	movlw	-1
 14895  01BA34  006F FF8C  F00A    	movff	plusw1,btemp+9
 14896  01BA3A  0E20               	movlw	32
 14897  01BA3C  1209               	iorwf	(btemp+8)^0,f,c
 14898  01BA3E  0E00               	movlw	0
 14899  01BA40  120A               	iorwf	(btemp+9)^0,f,c
 14900  01BA42  500B               	movf	(btemp+10)^0,w,c
 14901  01BA44  2609               	addwf	(btemp+8)^0,f,c
 14902  01BA46  500C               	movf	(btemp+11)^0,w,c
 14903  01BA48  220A               	addwfc	(btemp+9)^0,f,c
 14904  01BA4A  500A               	movf	(btemp+9)^0,w,c
 14905  01BA4C  E106               	bnz	u6280
 14906  01BA4E  0E1A               	movlw	26
 14907  01BA50  5C09               	subwf	(btemp+8)^0,w,c
 14908  01BA52  B0D8               	btfsc	status,0,c
 14909  01BA54  D002               	goto	u6280
 14910  01BA56  0E01               	movlw	1
 14911  01BA58  D001               	goto	u6290
 14912  01BA5A                     u6280:
 14913  01BA5A  0E00               	movlw	0
 14914  01BA5C                     u6290:
 14915  01BA5C  6E01               	movwf	btemp^0,c
 14916  01BA5E  6A02               	clrf	(btemp+1)^0,c
 14917                           
 14918                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14919  01BA60  52E5               	movf	postdec1,f,c
 14920  01BA62  52E5               	movf	postdec1,f,c
 14921  01BA64  0012               	return		;funcret
 14922  01BA66                     __end_of_isalpha:
 14923                           	opt callstack 0
 14924                           
 14925 ;; *************** function _utoa *****************
 14926 ;; Defined at:
 14927 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14928 ;; Parameters:    Size  Location     Type
 14929 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14930 ;;		 -> f(6), NULL(0), 
 14931 ;;  d               8  [STACK] unsigned long long 
 14932 ;; Auto vars:     Size  Location     Type
 14933 ;;  n               8  [STACK] unsigned long long 
 14934 ;;  i               2  [STACK] int 
 14935 ;;  w               2  [STACK] int 
 14936 ;;  p               2  [STACK] int 
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  2  [STACK] int 
 14939 ;; Registers used:
 14940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14950 ;;Total ram usage:        0 bytes
 14951 ;; Hardware stack levels used:    1
 14952 ;; Hardware stack levels required when called:   20
 14953 ;; This function calls:
 14954 ;;		___lodiv
 14955 ;;		___lomod
 14956 ;;		_pad
 14957 ;; This function is called by:
 14958 ;;		_vfpfcnvrt
 14959 ;; This function uses a reentrant model
 14960 ;;
 14961                           
 14962                           	psect	text57
 14963  016830                     __ptext57:
 14964                           	opt callstack 0
 14965  016830                     _utoa:
 14966                           	opt callstack 0
 14967                           
 14968                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14969  016830  0E0E               	movlw	14
 14970  016832  26E1               	addwf	fsr1l,f,c
 14971  016834  0E00               	movlw	0
 14972  016836  22E2               	addwfc	fsr1h,f,c
 14973                           
 14974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14975                           
 14976                           ;incstack = 0
 14977 ;; hardware stack exceeded
 14978  016838  AE3D               	btfss	(_prec+1)^0,7,c
 14979                           
 14980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14981  01683A  923E               	bcf	_flags^0,1,c
 14982                           
 14983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14984  01683C  BE3D               	btfsc	(_prec+1)^0,7,c
 14985  01683E  D005               	goto	u11820
 14986  016840  503D               	movf	(_prec+1)^0,w,c
 14987  016842  E110               	bnz	l12637
 14988  016844  043C               	decf	_prec^0,w,c
 14989  016846  B0D8               	btfsc	status,0,c
 14990  016848  D00D               	goto	l12637
 14991  01684A                     u11820:
 14992  01684A  0E01               	movlw	1
 14993  01684C  6E0B               	movwf	(btemp+10)^0,c
 14994  01684E  0E00               	movlw	0
 14995  016850  6E0C               	movwf	(btemp+11)^0,c
 14996                           
 14997                           ;stkvar	_p @ sp[(-14)+12]
 14998  016852  0EFE               	movlw	-2
 14999  016854  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15000  01685A  0EFF               	movlw	-1
 15001  01685C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15002  016862  D008               	goto	l2380
 15003  016864                     l12637:
 15004                           
 15005                           ;stkvar	_p @ sp[(-14)+12]
 15006  016864  0EFE               	movlw	-2
 15007  016866  0060  F0F3  FFE3   	movff	_prec,plusw1
 15008  01686C  0EFF               	movlw	-1
 15009  01686E  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15010  016874                     l2380:
 15011                           
 15012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 15013                           ;stkvar	_w @ sp[(-14)+10]
 15014  016874  0EFC               	movlw	-4
 15015  016876  0060  F0EB  FFE3   	movff	_width,plusw1
 15016  01687C  0EFD               	movlw	-3
 15017  01687E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15018                           
 15019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 15020                           ;stkvar	_d @ sp[(-14)+-10]
 15021  016884  0EE8               	movlw	232
 15022  016886  24E1               	addwf	fsr1l,w,c
 15023  016888  6ED9               	movwf	fsr2l,c
 15024  01688A  0EFF               	movlw	255
 15025  01688C  20E2               	addwfc	fsr1h,w,c
 15026  01688E  6EDA               	movwf	fsr2h,c
 15027                           
 15028                           ;stkvar	_n @ sp[(-14)+0]
 15029  016890  0E08               	movlw	8
 15030  016892  6E01               	movwf	btemp^0,c
 15031  016894  0EF2               	movlw	-14
 15032  016896                     us1183999:
 15033  016896  006F FF7B FFE3     	movff	postinc2,plusw1
 15034  01689C  28E8               	incf	wreg,w,c
 15035  01689E  2E01               	decfsz	btemp^0,f,c
 15036  0168A0  D7FA               	bra	us1183999
 15037                           
 15038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 15039  0168A2  0E4F               	movlw	79
 15040  0168A4  6E0B               	movwf	(btemp+10)^0,c
 15041  0168A6  0E00               	movlw	0
 15042  0168A8  6E0C               	movwf	(btemp+11)^0,c
 15043                           
 15044                           ;stkvar	_i @ sp[(-14)+8]
 15045  0168AA  0EFA               	movlw	-6
 15046  0168AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15047  0168B2  0EFB               	movlw	-5
 15048  0168B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15049                           
 15050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 15051  0168BA  0102               	movlb	2	; () banked
 15052  0168BC  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15053                           
 15054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15055  0168BE  D0FB               	goto	l12655
 15056  0168C0                     l12645:
 15057                           
 15058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 15059                           ;stkvar	_i @ sp[(-14)+8]
 15060  0168C0  50E1               	movf	fsr1l,w,c
 15061  0168C2  0FFA               	addlw	-6
 15062  0168C4  6ED9               	movwf	fsr2l,c
 15063  0168C6  50E2               	movf	fsr1h,w,c
 15064  0168C8  6EDA               	movwf	fsr2h,c
 15065  0168CA  0EFF               	movlw	255
 15066  0168CC  22DA               	addwfc	fsr2h,f,c
 15067  0168CE  06DE               	decf	postinc2,f,c
 15068  0168D0  0E00               	movlw	0
 15069  0168D2  5ADD               	subwfb	postdec2,f,c
 15070                           
 15071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 15072  0168D4  0E0A               	movlw	10
 15073  0168D6  6EE6               	movwf	postinc1,c
 15074  0168D8  0E00               	movlw	0
 15075  0168DA  6EE6               	movwf	postinc1,c
 15076  0168DC  0E00               	movlw	0
 15077  0168DE  6EE6               	movwf	postinc1,c
 15078  0168E0  0E00               	movlw	0
 15079  0168E2  6EE6               	movwf	postinc1,c
 15080  0168E4  0E00               	movlw	0
 15081  0168E6  6EE6               	movwf	postinc1,c
 15082  0168E8  0E00               	movlw	0
 15083  0168EA  6EE6               	movwf	postinc1,c
 15084  0168EC  0E00               	movlw	0
 15085  0168EE  6EE6               	movwf	postinc1,c
 15086  0168F0  0E00               	movlw	0
 15087  0168F2  6EE6               	movwf	postinc1,c
 15088                           
 15089                           ;stkvar	_n @ sp[(-22)+0]
 15090  0168F4  50E1               	movf	fsr1l,w,c
 15091  0168F6  0FEA               	addlw	-22
 15092  0168F8  6ED9               	movwf	fsr2l,c
 15093  0168FA  50E2               	movf	fsr1h,w,c
 15094  0168FC  6EDA               	movwf	fsr2h,c
 15095  0168FE  0EFF               	movlw	255
 15096  016900  22DA               	addwfc	fsr2h,f,c
 15097  016902  006F FF7B FFE6     	movff	postinc2,postinc1
 15098  016908  006F FF7B FFE6     	movff	postinc2,postinc1
 15099  01690E  006F FF7B FFE6     	movff	postinc2,postinc1
 15100  016914  006F FF7B FFE6     	movff	postinc2,postinc1
 15101  01691A  006F FF7B FFE6     	movff	postinc2,postinc1
 15102  016920  006F FF7B FFE6     	movff	postinc2,postinc1
 15103  016926  006F FF7B FFE6     	movff	postinc2,postinc1
 15104  01692C  006F FF7B FFE6     	movff	postinc2,postinc1
 15105  016932  EC14  F0CB         	call	___lomod	;wreg free
 15106  016936  52E5               	movf	postdec1,f,c
 15107  016938  006F FF9C  F018    	movff	indf1,btemp+23
 15108  01693E  52E5               	movf	postdec1,f,c
 15109  016940  006F FF9C  F017    	movff	indf1,btemp+22
 15110  016946  52E5               	movf	postdec1,f,c
 15111  016948  006F FF9C  F016    	movff	indf1,btemp+21
 15112  01694E  52E5               	movf	postdec1,f,c
 15113  016950  006F FF9C  F015    	movff	indf1,btemp+20
 15114  016956  52E5               	movf	postdec1,f,c
 15115  016958  006F FF9C  F014    	movff	indf1,btemp+19
 15116  01695E  52E5               	movf	postdec1,f,c
 15117  016960  006F FF9C  F013    	movff	indf1,btemp+18
 15118  016966  52E5               	movf	postdec1,f,c
 15119  016968  006F FF9C  F012    	movff	indf1,btemp+17
 15120  01696E  52E5               	movf	postdec1,f,c
 15121  016970  006F FF9C  F011    	movff	indf1,btemp+16
 15122  016976  0EF8               	movlw	248
 15123  016978  26E1               	addwf	fsr1l,f,c
 15124  01697A  0EFF               	movlw	255
 15125  01697C  22E2               	addwfc	fsr1h,f,c
 15126  01697E  0E30               	movlw	48
 15127  016980  2611               	addwf	(btemp+16)^0,f,c
 15128                           
 15129                           ;stkvar	_i @ sp[(-14)+8]
 15130  016982  0EFA               	movlw	-6
 15131  016984  006F FF8C  F00B    	movff	plusw1,btemp+10
 15132  01698A  0EFB               	movlw	-5
 15133  01698C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15134  016992  0E97               	movlw	low _dbuf
 15135  016994  240B               	addwf	(btemp+10)^0,w,c
 15136  016996  6ED9               	movwf	fsr2l,c
 15137  016998  0E02               	movlw	high _dbuf
 15138  01699A  200C               	addwfc	(btemp+11)^0,w,c
 15139  01699C  6EDA               	movwf	fsr2h,c
 15140  01699E  0060  F047  FFDF   	movff	btemp+16,indf2
 15141                           
 15142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 15143                           ;stkvar	_p @ sp[(-14)+12]
 15144  0169A4  50E1               	movf	fsr1l,w,c
 15145  0169A6  0FFE               	addlw	-2
 15146  0169A8  6ED9               	movwf	fsr2l,c
 15147  0169AA  50E2               	movf	fsr1h,w,c
 15148  0169AC  6EDA               	movwf	fsr2h,c
 15149  0169AE  0EFF               	movlw	255
 15150  0169B0  22DA               	addwfc	fsr2h,f,c
 15151  0169B2  06DE               	decf	postinc2,f,c
 15152  0169B4  0E00               	movlw	0
 15153  0169B6  5ADD               	subwfb	postdec2,f,c
 15154                           
 15155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 15156                           ;stkvar	_w @ sp[(-14)+10]
 15157  0169B8  50E1               	movf	fsr1l,w,c
 15158  0169BA  0FFC               	addlw	-4
 15159  0169BC  6ED9               	movwf	fsr2l,c
 15160  0169BE  50E2               	movf	fsr1h,w,c
 15161  0169C0  6EDA               	movwf	fsr2h,c
 15162  0169C2  0EFF               	movlw	255
 15163  0169C4  22DA               	addwfc	fsr2h,f,c
 15164  0169C6  06DE               	decf	postinc2,f,c
 15165  0169C8  0E00               	movlw	0
 15166  0169CA  5ADD               	subwfb	postdec2,f,c
 15167                           
 15168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 15169  0169CC  0E0A               	movlw	10
 15170  0169CE  6EE6               	movwf	postinc1,c
 15171  0169D0  0E00               	movlw	0
 15172  0169D2  6EE6               	movwf	postinc1,c
 15173  0169D4  0E00               	movlw	0
 15174  0169D6  6EE6               	movwf	postinc1,c
 15175  0169D8  0E00               	movlw	0
 15176  0169DA  6EE6               	movwf	postinc1,c
 15177  0169DC  0E00               	movlw	0
 15178  0169DE  6EE6               	movwf	postinc1,c
 15179  0169E0  0E00               	movlw	0
 15180  0169E2  6EE6               	movwf	postinc1,c
 15181  0169E4  0E00               	movlw	0
 15182  0169E6  6EE6               	movwf	postinc1,c
 15183  0169E8  0E00               	movlw	0
 15184  0169EA  6EE6               	movwf	postinc1,c
 15185                           
 15186                           ;stkvar	_n @ sp[(-22)+0]
 15187  0169EC  50E1               	movf	fsr1l,w,c
 15188  0169EE  0FEA               	addlw	-22
 15189  0169F0  6ED9               	movwf	fsr2l,c
 15190  0169F2  50E2               	movf	fsr1h,w,c
 15191  0169F4  6EDA               	movwf	fsr2h,c
 15192  0169F6  0EFF               	movlw	255
 15193  0169F8  22DA               	addwfc	fsr2h,f,c
 15194  0169FA  006F FF7B FFE6     	movff	postinc2,postinc1
 15195  016A00  006F FF7B FFE6     	movff	postinc2,postinc1
 15196  016A06  006F FF7B FFE6     	movff	postinc2,postinc1
 15197  016A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 15198  016A12  006F FF7B FFE6     	movff	postinc2,postinc1
 15199  016A18  006F FF7B FFE6     	movff	postinc2,postinc1
 15200  016A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 15201  016A24  006F FF7B FFE6     	movff	postinc2,postinc1
 15202  016A2A  EC91  F0C7         	call	___lodiv	;wreg free
 15203  016A2E  52E5               	movf	postdec1,f,c
 15204  016A30  006F FF9C  F018    	movff	indf1,btemp+23
 15205  016A36  52E5               	movf	postdec1,f,c
 15206  016A38  006F FF9C  F017    	movff	indf1,btemp+22
 15207  016A3E  52E5               	movf	postdec1,f,c
 15208  016A40  006F FF9C  F016    	movff	indf1,btemp+21
 15209  016A46  52E5               	movf	postdec1,f,c
 15210  016A48  006F FF9C  F015    	movff	indf1,btemp+20
 15211  016A4E  52E5               	movf	postdec1,f,c
 15212  016A50  006F FF9C  F014    	movff	indf1,btemp+19
 15213  016A56  52E5               	movf	postdec1,f,c
 15214  016A58  006F FF9C  F013    	movff	indf1,btemp+18
 15215  016A5E  52E5               	movf	postdec1,f,c
 15216  016A60  006F FF9C  F012    	movff	indf1,btemp+17
 15217  016A66  52E5               	movf	postdec1,f,c
 15218  016A68  006F FF9C  F011    	movff	indf1,btemp+16
 15219  016A6E  0EF8               	movlw	248
 15220  016A70  26E1               	addwf	fsr1l,f,c
 15221  016A72  0EFF               	movlw	255
 15222  016A74  22E2               	addwfc	fsr1h,f,c
 15223                           
 15224                           ;stkvar	_n @ sp[(-14)+0]
 15225  016A76  0EF2               	movlw	-14
 15226  016A78  0060  F047  FFE3   	movff	btemp+16,plusw1
 15227  016A7E  0EF3               	movlw	-13
 15228  016A80  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15229  016A86  0EF4               	movlw	-12
 15230  016A88  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15231  016A8E  0EF5               	movlw	-11
 15232  016A90  0060  F053  FFE3   	movff	btemp+19,plusw1
 15233  016A96  0EF6               	movlw	-10
 15234  016A98  0060  F057  FFE3   	movff	btemp+20,plusw1
 15235  016A9E  0EF7               	movlw	-9
 15236  016AA0  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15237  016AA6  0EF8               	movlw	-8
 15238  016AA8  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15239  016AAE  0EF9               	movlw	-7
 15240  016AB0  0060  F063  FFE3   	movff	btemp+23,plusw1
 15241  016AB6                     l12655:
 15242                           
 15243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15244                           ;stkvar	_i @ sp[(-14)+8]
 15245  016AB6  0EFA               	movlw	-6
 15246  016AB8  006F FF8C  F001    	movff	plusw1,btemp
 15247  016ABE  0EFB               	movlw	-5
 15248  016AC0  50E3               	movf	plusw1,w,c
 15249  016AC2  1001               	iorwf	btemp^0,w,c
 15250  016AC4  B4D8               	btfsc	status,2,c
 15251  016AC6  D02F               	goto	u11880
 15252                           
 15253                           ;stkvar	_n @ sp[(-14)+0]
 15254  016AC8  0EF2               	movlw	-14
 15255  016ACA  50E3               	movf	plusw1,w,c
 15256  016ACC  E115               	bnz	u11851
 15257  016ACE  0EF3               	movlw	-13
 15258  016AD0  50E3               	movf	plusw1,w,c
 15259  016AD2  E112               	bnz	u11851
 15260  016AD4  0EF4               	movlw	-12
 15261  016AD6  50E3               	movf	plusw1,w,c
 15262  016AD8  E10F               	bnz	u11851
 15263  016ADA  0EF5               	movlw	-11
 15264  016ADC  50E3               	movf	plusw1,w,c
 15265  016ADE  E10C               	bnz	u11851
 15266  016AE0  0EF6               	movlw	-10
 15267  016AE2  50E3               	movf	plusw1,w,c
 15268  016AE4  E109               	bnz	u11851
 15269  016AE6  0EF7               	movlw	-9
 15270  016AE8  50E3               	movf	plusw1,w,c
 15271  016AEA  E106               	bnz	u11851
 15272  016AEC  0EF8               	movlw	-8
 15273  016AEE  50E3               	movf	plusw1,w,c
 15274  016AF0  E103               	bnz	u11851
 15275  016AF2  0EF9               	movlw	-7
 15276  016AF4  50E3               	movf	plusw1,w,c
 15277  016AF6  A4D8               	btfss	status,2,c
 15278  016AF8                     u11851:
 15279  016AF8  D6E3               	goto	l12645
 15280                           
 15281                           ;stkvar	_p @ sp[(-14)+12]
 15282  016AFA  0EFF               	movlw	-1
 15283  016AFC  BEE3               	btfsc	plusw1,7,c
 15284  016AFE  D007               	goto	u11860
 15285  016B00  0EFF               	movlw	-1
 15286  016B02  50E3               	movf	plusw1,w,c
 15287  016B04  E103               	bnz	u11861
 15288  016B06  0EFE               	movlw	-2
 15289  016B08  04E3               	decf	plusw1,w,c
 15290  016B0A  B0D8               	btfsc	status,0,c
 15291  016B0C                     u11861:
 15292  016B0C  D6D9               	goto	l12645
 15293  016B0E                     u11860:
 15294                           
 15295                           ;stkvar	_w @ sp[(-14)+10]
 15296  016B0E  0EFD               	movlw	-3
 15297  016B10  BEE3               	btfsc	plusw1,7,c
 15298  016B12  D009               	goto	u11880
 15299  016B14  0EFD               	movlw	-3
 15300  016B16  50E3               	movf	plusw1,w,c
 15301  016B18  E104               	bnz	u11870
 15302  016B1A  0EFC               	movlw	-4
 15303  016B1C  04E3               	decf	plusw1,w,c
 15304  016B1E  A0D8               	btfss	status,0,c
 15305  016B20  D002               	goto	u11880
 15306  016B22                     u11870:
 15307  016B22  B23E               	btfsc	_flags^0,1,c
 15308  016B24  D6CD               	goto	l12645
 15309  016B26                     u11880:
 15310                           
 15311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 15312                           ;stkvar	_w @ sp[(-14)+10]
 15313  016B26  0EFC               	movlw	-4
 15314  016B28  006F FF8F FFE6     	movff	plusw1,postinc1
 15315  016B2E  006F FF8F FFE6     	movff	plusw1,postinc1
 15316                           
 15317                           ;stkvar	_i @ sp[(-16)+8]
 15318  016B34  0E97               	movlw	low _dbuf
 15319  016B36  6E0B               	movwf	(btemp+10)^0,c
 15320  016B38  0E02               	movlw	high _dbuf
 15321  016B3A  6E0C               	movwf	(btemp+11)^0,c
 15322  016B3C  0EF8               	movlw	-8
 15323  016B3E  50E3               	movf	plusw1,w,c
 15324  016B40  260B               	addwf	(btemp+10)^0,f,c
 15325  016B42  0EF9               	movlw	-7
 15326  016B44  50E3               	movf	plusw1,w,c
 15327  016B46  220C               	addwfc	(btemp+11)^0,f,c
 15328  016B48  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15329  016B4E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15330                           
 15331                           ;stkvar	_fp @ sp[(-18)+-2]
 15332  016B54  0EEC               	movlw	-20
 15333  016B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15334  016B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15335  016B62  EC90  F0CE         	call	_pad	;wreg free
 15336                           
 15337                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15338  016B66  0EE8               	movlw	232
 15339  016B68  26E1               	addwf	fsr1l,f,c
 15340  016B6A  0EFF               	movlw	255
 15341  016B6C  22E2               	addwfc	fsr1h,f,c
 15342  016B6E  0012               	return		;funcret
 15343  016B70                     __end_of_utoa:
 15344                           	opt callstack 0
 15345                           
 15346 ;; *************** function ___lomod *****************
 15347 ;; Defined at:
 15348 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;  dividend        8  [STACK] unsigned long long 
 15351 ;;  divisor         8  [STACK] unsigned long long 
 15352 ;; Auto vars:     Size  Location     Type
 15353 ;;  counter         1  [STACK] unsigned char 
 15354 ;; Return value:  Size  Location     Type
 15355 ;;                  8  [STACK] unsigned long long 
 15356 ;; Registers used:
 15357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15358 ;; Tracked objects:
 15359 ;;		On entry : 0/2
 15360 ;;		On exit  : 0/0
 15361 ;;		Unchanged: 0/0
 15362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15367 ;;Total ram usage:        0 bytes
 15368 ;; Hardware stack levels used:    1
 15369 ;; Hardware stack levels required when called:   15
 15370 ;; This function calls:
 15371 ;;		Nothing
 15372 ;; This function is called by:
 15373 ;;		_utoa
 15374 ;; This function uses a reentrant model
 15375 ;;
 15376                           
 15377                           	psect	text58
 15378  019628                     __ptext58:
 15379                           	opt callstack 0
 15380  019628                     ___lomod:
 15381                           	opt callstack 0
 15382                           
 15383                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15384  019628  52E6               	movf	postinc1,f,c
 15385                           
 15386                           ;stkvar	_divisor @ sp[(-1)+-16]
 15387                           
 15388                           ;incstack = 0
 15389 ;; hardware stack exceeded
 15390  01962A  0EEF               	movlw	-17
 15391  01962C  50E3               	movf	plusw1,w,c
 15392  01962E  E116               	bnz	u7430
 15393  019630  0EF0               	movlw	-16
 15394  019632  50E3               	movf	plusw1,w,c
 15395  019634  E113               	bnz	u7430
 15396  019636  0EF1               	movlw	-15
 15397  019638  50E3               	movf	plusw1,w,c
 15398  01963A  E110               	bnz	u7430
 15399  01963C  0EF2               	movlw	-14
 15400  01963E  50E3               	movf	plusw1,w,c
 15401  019640  E10D               	bnz	u7430
 15402  019642  0EF3               	movlw	-13
 15403  019644  50E3               	movf	plusw1,w,c
 15404  019646  E10A               	bnz	u7430
 15405  019648  0EF4               	movlw	-12
 15406  01964A  50E3               	movf	plusw1,w,c
 15407  01964C  E107               	bnz	u7430
 15408  01964E  0EF5               	movlw	-11
 15409  019650  50E3               	movf	plusw1,w,c
 15410  019652  E104               	bnz	u7430
 15411  019654  0EF6               	movlw	-10
 15412  019656  50E3               	movf	plusw1,w,c
 15413  019658  B4D8               	btfsc	status,2,c
 15414  01965A  D075               	goto	u7460
 15415  01965C                     u7430:
 15416                           
 15417                           ;stkvar	_counter @ sp[(-1)+0]
 15418  01965C  0EFF               	movlw	-1
 15419  01965E  6AE3               	clrf	plusw1,c
 15420  019660  D012               	goto	L15
 15421  019662                     l8891:
 15422                           
 15423                           ;stkvar	_divisor @ sp[(-1)+-16]
 15424  019662  90D8               	bcf	status,0,c
 15425  019664  0EEF               	movlw	-17
 15426  019666  36E3               	rlcf	plusw1,f,c
 15427  019668  0EF0               	movlw	-16
 15428  01966A  36E3               	rlcf	plusw1,f,c
 15429  01966C  0EF1               	movlw	-15
 15430  01966E  36E3               	rlcf	plusw1,f,c
 15431  019670  0EF2               	movlw	-14
 15432  019672  36E3               	rlcf	plusw1,f,c
 15433  019674  0EF3               	movlw	-13
 15434  019676  36E3               	rlcf	plusw1,f,c
 15435  019678  0EF4               	movlw	-12
 15436  01967A  36E3               	rlcf	plusw1,f,c
 15437  01967C  0EF5               	movlw	-11
 15438  01967E  36E3               	rlcf	plusw1,f,c
 15439  019680  0EF6               	movlw	-10
 15440  019682  36E3               	rlcf	plusw1,f,c
 15441                           
 15442                           ;stkvar	_counter @ sp[(-1)+0]
 15443  019684  0EFF               	movlw	-1
 15444  019686                     L15:
 15445  019686  2AE3               	incf	plusw1,f,c
 15446                           
 15447                           ;stkvar	_divisor @ sp[(-1)+-16]
 15448  019688  0EF6               	movlw	-10
 15449  01968A  AEE3               	btfss	plusw1,7,c
 15450  01968C  D7EA               	goto	l8891
 15451  01968E                     u7440:
 15452                           
 15453                           ;stkvar	_divisor @ sp[(-1)+-16]
 15454                           ;stkvar	_dividend @ sp[(-1)+-8]
 15455  01968E  50E1               	movf	fsr1l,w,c
 15456  019690  0FF7               	addlw	-9
 15457  019692  6ED9               	movwf	fsr2l,c
 15458  019694  50E2               	movf	fsr1h,w,c
 15459  019696  6EDA               	movwf	fsr2h,c
 15460  019698  0EFF               	movlw	255
 15461  01969A  22DA               	addwfc	fsr2h,f,c
 15462  01969C  0EEF               	movlw	-17
 15463  01969E  50E3               	movf	plusw1,w,c
 15464  0196A0  5CDE               	subwf	postinc2,w,c
 15465  0196A2  0EF0               	movlw	-16
 15466  0196A4  50E3               	movf	plusw1,w,c
 15467  0196A6  58DE               	subwfb	postinc2,w,c
 15468  0196A8  0EF1               	movlw	-15
 15469  0196AA  50E3               	movf	plusw1,w,c
 15470  0196AC  58DE               	subwfb	postinc2,w,c
 15471  0196AE  0EF2               	movlw	-14
 15472  0196B0  50E3               	movf	plusw1,w,c
 15473  0196B2  58DE               	subwfb	postinc2,w,c
 15474  0196B4  0EF3               	movlw	-13
 15475  0196B6  50E3               	movf	plusw1,w,c
 15476  0196B8  58DE               	subwfb	postinc2,w,c
 15477  0196BA  0EF4               	movlw	-12
 15478  0196BC  50E3               	movf	plusw1,w,c
 15479  0196BE  58DE               	subwfb	postinc2,w,c
 15480  0196C0  0EF5               	movlw	-11
 15481  0196C2  50E3               	movf	plusw1,w,c
 15482  0196C4  58DE               	subwfb	postinc2,w,c
 15483  0196C6  0EF6               	movlw	-10
 15484  0196C8  50E3               	movf	plusw1,w,c
 15485  0196CA  58DE               	subwfb	postinc2,w,c
 15486  0196CC  A0D8               	btfss	status,0,c
 15487  0196CE  D01F               	goto	l8899
 15488                           
 15489                           ;stkvar	_divisor @ sp[(-1)+-16]
 15490                           ;stkvar	_dividend @ sp[(-1)+-8]
 15491  0196D0  50E1               	movf	fsr1l,w,c
 15492  0196D2  0FF7               	addlw	-9
 15493  0196D4  6ED9               	movwf	fsr2l,c
 15494  0196D6  50E2               	movf	fsr1h,w,c
 15495  0196D8  6EDA               	movwf	fsr2h,c
 15496  0196DA  0EFF               	movlw	255
 15497  0196DC  22DA               	addwfc	fsr2h,f,c
 15498  0196DE  0EEF               	movlw	-17
 15499  0196E0  50E3               	movf	plusw1,w,c
 15500  0196E2  5EDE               	subwf	postinc2,f,c
 15501  0196E4  0EF0               	movlw	-16
 15502  0196E6  50E3               	movf	plusw1,w,c
 15503  0196E8  5ADE               	subwfb	postinc2,f,c
 15504  0196EA  0EF1               	movlw	-15
 15505  0196EC  50E3               	movf	plusw1,w,c
 15506  0196EE  5ADE               	subwfb	postinc2,f,c
 15507  0196F0  0EF2               	movlw	-14
 15508  0196F2  50E3               	movf	plusw1,w,c
 15509  0196F4  5ADE               	subwfb	postinc2,f,c
 15510  0196F6  0EF3               	movlw	-13
 15511  0196F8  50E3               	movf	plusw1,w,c
 15512  0196FA  5ADE               	subwfb	postinc2,f,c
 15513  0196FC  0EF4               	movlw	-12
 15514  0196FE  50E3               	movf	plusw1,w,c
 15515  019700  5ADE               	subwfb	postinc2,f,c
 15516  019702  0EF5               	movlw	-11
 15517  019704  50E3               	movf	plusw1,w,c
 15518  019706  5ADE               	subwfb	postinc2,f,c
 15519  019708  0EF6               	movlw	-10
 15520  01970A  50E3               	movf	plusw1,w,c
 15521  01970C  5ADE               	subwfb	postinc2,f,c
 15522  01970E                     l8899:
 15523                           
 15524                           ;stkvar	_divisor @ sp[(-1)+-16]
 15525  01970E  90D8               	bcf	status,0,c
 15526  019710  0EF6               	movlw	-10
 15527  019712  32E3               	rrcf	plusw1,f,c
 15528  019714  0EF5               	movlw	-11
 15529  019716  32E3               	rrcf	plusw1,f,c
 15530  019718  0EF4               	movlw	-12
 15531  01971A  32E3               	rrcf	plusw1,f,c
 15532  01971C  0EF3               	movlw	-13
 15533  01971E  32E3               	rrcf	plusw1,f,c
 15534  019720  0EF2               	movlw	-14
 15535  019722  32E3               	rrcf	plusw1,f,c
 15536  019724  0EF1               	movlw	-15
 15537  019726  32E3               	rrcf	plusw1,f,c
 15538  019728  0EF0               	movlw	-16
 15539  01972A  32E3               	rrcf	plusw1,f,c
 15540  01972C  0EEF               	movlw	-17
 15541  01972E  32E3               	rrcf	plusw1,f,c
 15542                           
 15543                           ;stkvar	_counter @ sp[(-1)+0]
 15544  019730  0EFF               	movlw	-1
 15545  019732  50E3               	movf	plusw1,w,c
 15546  019734  6E01               	movwf	btemp^0,c
 15547  019736  0E01               	movlw	1
 15548  019738  5E01               	subwf	btemp^0,f,c
 15549  01973A  0EFF               	movlw	-1
 15550  01973C  0060  F007  FFE3   	movff	btemp,plusw1
 15551  019742  A4D8               	btfss	status,2,c
 15552  019744  D7A4               	goto	u7440
 15553  019746                     u7460:
 15554                           
 15555                           ;stkvar	_dividend @ sp[(-1)+-8]
 15556  019746  0EF7               	movlw	247
 15557  019748  24E1               	addwf	fsr1l,w,c
 15558  01974A  6ED9               	movwf	fsr2l,c
 15559  01974C  0EFF               	movlw	255
 15560  01974E  20E2               	addwfc	fsr1h,w,c
 15561  019750  6EDA               	movwf	fsr2h,c
 15562                           
 15563                           ;stkvar	?___lomod @ sp[(-1)+-8]
 15564  019752  0E08               	movlw	8
 15565  019754  6E01               	movwf	btemp^0,c
 15566  019756  0EF7               	movlw	-9
 15567  019758                     us747999:
 15568  019758  006F FF7B FFE3     	movff	postinc2,plusw1
 15569  01975E  28E8               	incf	wreg,w,c
 15570  019760  2E01               	decfsz	btemp^0,f,c
 15571  019762  D7FA               	bra	us747999
 15572                           
 15573                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15574  019764  52E5               	movf	postdec1,f,c
 15575  019766  0012               	return		;funcret
 15576  019768                     __end_of___lomod:
 15577                           	opt callstack 0
 15578                           
 15579 ;; *************** function ___lodiv *****************
 15580 ;; Defined at:
 15581 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 15582 ;; Parameters:    Size  Location     Type
 15583 ;;  dividend        8  [STACK] unsigned long long 
 15584 ;;  divisor         8  [STACK] unsigned long long 
 15585 ;; Auto vars:     Size  Location     Type
 15586 ;;  quotient        8  [STACK] unsigned long long 
 15587 ;;  counter         1  [STACK] unsigned char 
 15588 ;; Return value:  Size  Location     Type
 15589 ;;                  8  [STACK] unsigned long long 
 15590 ;; Registers used:
 15591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15592 ;; Tracked objects:
 15593 ;;		On entry : 0/2
 15594 ;;		On exit  : 0/0
 15595 ;;		Unchanged: 0/0
 15596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15601 ;;Total ram usage:        0 bytes
 15602 ;; Hardware stack levels used:    1
 15603 ;; Hardware stack levels required when called:   15
 15604 ;; This function calls:
 15605 ;;		Nothing
 15606 ;; This function is called by:
 15607 ;;		_utoa
 15608 ;; This function uses a reentrant model
 15609 ;;
 15610                           
 15611                           	psect	text59
 15612  018F22                     __ptext59:
 15613                           	opt callstack 0
 15614  018F22                     ___lodiv:
 15615                           	opt callstack 0
 15616                           
 15617                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15618  018F22  0E09               	movlw	9
 15619  018F24  26E1               	addwf	fsr1l,f,c
 15620  018F26  0E00               	movlw	0
 15621  018F28  22E2               	addwfc	fsr1h,f,c
 15622                           
 15623                           ;stkvar	_quotient @ sp[(-9)+0]
 15624                           
 15625                           ;incstack = 0
 15626 ;; hardware stack exceeded
 15627  018F2A  0E07               	movlw	7
 15628  018F2C  6E01               	movwf	btemp^0,c
 15629  018F2E  0EF7               	movlw	-9
 15630  018F30                     u7371:
 15631  018F30  6AE3               	clrf	plusw1,c
 15632  018F32  2AE8               	incf	wreg,f,c
 15633  018F34  0601               	decf	btemp^0,f,c
 15634  018F36  E2FC               	bc	u7371
 15635                           
 15636                           ;stkvar	_divisor @ sp[(-9)+-16]
 15637  018F38  0EE7               	movlw	-25
 15638  018F3A  50E3               	movf	plusw1,w,c
 15639  018F3C  E116               	bnz	u7380
 15640  018F3E  0EE8               	movlw	-24
 15641  018F40  50E3               	movf	plusw1,w,c
 15642  018F42  E113               	bnz	u7380
 15643  018F44  0EE9               	movlw	-23
 15644  018F46  50E3               	movf	plusw1,w,c
 15645  018F48  E110               	bnz	u7380
 15646  018F4A  0EEA               	movlw	-22
 15647  018F4C  50E3               	movf	plusw1,w,c
 15648  018F4E  E10D               	bnz	u7380
 15649  018F50  0EEB               	movlw	-21
 15650  018F52  50E3               	movf	plusw1,w,c
 15651  018F54  E10A               	bnz	u7380
 15652  018F56  0EEC               	movlw	-20
 15653  018F58  50E3               	movf	plusw1,w,c
 15654  018F5A  E107               	bnz	u7380
 15655  018F5C  0EED               	movlw	-19
 15656  018F5E  50E3               	movf	plusw1,w,c
 15657  018F60  E104               	bnz	u7380
 15658  018F62  0EEE               	movlw	-18
 15659  018F64  50E3               	movf	plusw1,w,c
 15660  018F66  B4D8               	btfsc	status,2,c
 15661  018F68  D088               	goto	u7410
 15662  018F6A                     u7380:
 15663                           
 15664                           ;stkvar	_counter @ sp[(-9)+8]
 15665  018F6A  0EFF               	movlw	-1
 15666  018F6C  6AE3               	clrf	plusw1,c
 15667  018F6E  D012               	goto	L16
 15668  018F70                     l8867:
 15669                           
 15670                           ;stkvar	_divisor @ sp[(-9)+-16]
 15671  018F70  90D8               	bcf	status,0,c
 15672  018F72  0EE7               	movlw	-25
 15673  018F74  36E3               	rlcf	plusw1,f,c
 15674  018F76  0EE8               	movlw	-24
 15675  018F78  36E3               	rlcf	plusw1,f,c
 15676  018F7A  0EE9               	movlw	-23
 15677  018F7C  36E3               	rlcf	plusw1,f,c
 15678  018F7E  0EEA               	movlw	-22
 15679  018F80  36E3               	rlcf	plusw1,f,c
 15680  018F82  0EEB               	movlw	-21
 15681  018F84  36E3               	rlcf	plusw1,f,c
 15682  018F86  0EEC               	movlw	-20
 15683  018F88  36E3               	rlcf	plusw1,f,c
 15684  018F8A  0EED               	movlw	-19
 15685  018F8C  36E3               	rlcf	plusw1,f,c
 15686  018F8E  0EEE               	movlw	-18
 15687  018F90  36E3               	rlcf	plusw1,f,c
 15688                           
 15689                           ;stkvar	_counter @ sp[(-9)+8]
 15690  018F92  0EFF               	movlw	-1
 15691  018F94                     L16:
 15692  018F94  2AE3               	incf	plusw1,f,c
 15693                           
 15694                           ;stkvar	_divisor @ sp[(-9)+-16]
 15695  018F96  0EEE               	movlw	-18
 15696  018F98  AEE3               	btfss	plusw1,7,c
 15697  018F9A  D7EA               	goto	l8867
 15698  018F9C                     u7390:
 15699                           
 15700                           ;stkvar	_quotient @ sp[(-9)+0]
 15701  018F9C  90D8               	bcf	status,0,c
 15702  018F9E  0EF7               	movlw	-9
 15703  018FA0  36E3               	rlcf	plusw1,f,c
 15704  018FA2  0EF8               	movlw	-8
 15705  018FA4  36E3               	rlcf	plusw1,f,c
 15706  018FA6  0EF9               	movlw	-7
 15707  018FA8  36E3               	rlcf	plusw1,f,c
 15708  018FAA  0EFA               	movlw	-6
 15709  018FAC  36E3               	rlcf	plusw1,f,c
 15710  018FAE  0EFB               	movlw	-5
 15711  018FB0  36E3               	rlcf	plusw1,f,c
 15712  018FB2  0EFC               	movlw	-4
 15713  018FB4  36E3               	rlcf	plusw1,f,c
 15714  018FB6  0EFD               	movlw	-3
 15715  018FB8  36E3               	rlcf	plusw1,f,c
 15716  018FBA  0EFE               	movlw	-2
 15717  018FBC  36E3               	rlcf	plusw1,f,c
 15718                           
 15719                           ;stkvar	_divisor @ sp[(-9)+-16]
 15720                           ;stkvar	_dividend @ sp[(-9)+-8]
 15721  018FBE  50E1               	movf	fsr1l,w,c
 15722  018FC0  0FEF               	addlw	-17
 15723  018FC2  6ED9               	movwf	fsr2l,c
 15724  018FC4  50E2               	movf	fsr1h,w,c
 15725  018FC6  6EDA               	movwf	fsr2h,c
 15726  018FC8  0EFF               	movlw	255
 15727  018FCA  22DA               	addwfc	fsr2h,f,c
 15728  018FCC  0EE7               	movlw	-25
 15729  018FCE  50E3               	movf	plusw1,w,c
 15730  018FD0  5CDE               	subwf	postinc2,w,c
 15731  018FD2  0EE8               	movlw	-24
 15732  018FD4  50E3               	movf	plusw1,w,c
 15733  018FD6  58DE               	subwfb	postinc2,w,c
 15734  018FD8  0EE9               	movlw	-23
 15735  018FDA  50E3               	movf	plusw1,w,c
 15736  018FDC  58DE               	subwfb	postinc2,w,c
 15737  018FDE  0EEA               	movlw	-22
 15738  018FE0  50E3               	movf	plusw1,w,c
 15739  018FE2  58DE               	subwfb	postinc2,w,c
 15740  018FE4  0EEB               	movlw	-21
 15741  018FE6  50E3               	movf	plusw1,w,c
 15742  018FE8  58DE               	subwfb	postinc2,w,c
 15743  018FEA  0EEC               	movlw	-20
 15744  018FEC  50E3               	movf	plusw1,w,c
 15745  018FEE  58DE               	subwfb	postinc2,w,c
 15746  018FF0  0EED               	movlw	-19
 15747  018FF2  50E3               	movf	plusw1,w,c
 15748  018FF4  58DE               	subwfb	postinc2,w,c
 15749  018FF6  0EEE               	movlw	-18
 15750  018FF8  50E3               	movf	plusw1,w,c
 15751  018FFA  58DE               	subwfb	postinc2,w,c
 15752  018FFC  A0D8               	btfss	status,0,c
 15753  018FFE  D021               	goto	l8879
 15754                           
 15755                           ;stkvar	_divisor @ sp[(-9)+-16]
 15756                           ;stkvar	_dividend @ sp[(-9)+-8]
 15757  019000  50E1               	movf	fsr1l,w,c
 15758  019002  0FEF               	addlw	-17
 15759  019004  6ED9               	movwf	fsr2l,c
 15760  019006  50E2               	movf	fsr1h,w,c
 15761  019008  6EDA               	movwf	fsr2h,c
 15762  01900A  0EFF               	movlw	255
 15763  01900C  22DA               	addwfc	fsr2h,f,c
 15764  01900E  0EE7               	movlw	-25
 15765  019010  50E3               	movf	plusw1,w,c
 15766  019012  5EDE               	subwf	postinc2,f,c
 15767  019014  0EE8               	movlw	-24
 15768  019016  50E3               	movf	plusw1,w,c
 15769  019018  5ADE               	subwfb	postinc2,f,c
 15770  01901A  0EE9               	movlw	-23
 15771  01901C  50E3               	movf	plusw1,w,c
 15772  01901E  5ADE               	subwfb	postinc2,f,c
 15773  019020  0EEA               	movlw	-22
 15774  019022  50E3               	movf	plusw1,w,c
 15775  019024  5ADE               	subwfb	postinc2,f,c
 15776  019026  0EEB               	movlw	-21
 15777  019028  50E3               	movf	plusw1,w,c
 15778  01902A  5ADE               	subwfb	postinc2,f,c
 15779  01902C  0EEC               	movlw	-20
 15780  01902E  50E3               	movf	plusw1,w,c
 15781  019030  5ADE               	subwfb	postinc2,f,c
 15782  019032  0EED               	movlw	-19
 15783  019034  50E3               	movf	plusw1,w,c
 15784  019036  5ADE               	subwfb	postinc2,f,c
 15785  019038  0EEE               	movlw	-18
 15786  01903A  50E3               	movf	plusw1,w,c
 15787  01903C  5ADE               	subwfb	postinc2,f,c
 15788                           
 15789                           ;stkvar	_quotient @ sp[(-9)+0]
 15790  01903E  0EF7               	movlw	-9
 15791  019040  80E3               	bsf	plusw1,0,c
 15792  019042                     l8879:
 15793                           
 15794                           ;stkvar	_divisor @ sp[(-9)+-16]
 15795  019042  90D8               	bcf	status,0,c
 15796  019044  0EEE               	movlw	-18
 15797  019046  32E3               	rrcf	plusw1,f,c
 15798  019048  0EED               	movlw	-19
 15799  01904A  32E3               	rrcf	plusw1,f,c
 15800  01904C  0EEC               	movlw	-20
 15801  01904E  32E3               	rrcf	plusw1,f,c
 15802  019050  0EEB               	movlw	-21
 15803  019052  32E3               	rrcf	plusw1,f,c
 15804  019054  0EEA               	movlw	-22
 15805  019056  32E3               	rrcf	plusw1,f,c
 15806  019058  0EE9               	movlw	-23
 15807  01905A  32E3               	rrcf	plusw1,f,c
 15808  01905C  0EE8               	movlw	-24
 15809  01905E  32E3               	rrcf	plusw1,f,c
 15810  019060  0EE7               	movlw	-25
 15811  019062  32E3               	rrcf	plusw1,f,c
 15812                           
 15813                           ;stkvar	_counter @ sp[(-9)+8]
 15814  019064  0EFF               	movlw	-1
 15815  019066  50E3               	movf	plusw1,w,c
 15816  019068  6E01               	movwf	btemp^0,c
 15817  01906A  0E01               	movlw	1
 15818  01906C  5E01               	subwf	btemp^0,f,c
 15819  01906E  0EFF               	movlw	-1
 15820  019070  0060  F007  FFE3   	movff	btemp,plusw1
 15821  019076  A4D8               	btfss	status,2,c
 15822  019078  D791               	goto	u7390
 15823  01907A                     u7410:
 15824                           
 15825                           ;stkvar	_quotient @ sp[(-9)+0]
 15826  01907A  0EF7               	movlw	247
 15827  01907C  24E1               	addwf	fsr1l,w,c
 15828  01907E  6ED9               	movwf	fsr2l,c
 15829  019080  0EFF               	movlw	255
 15830  019082  20E2               	addwfc	fsr1h,w,c
 15831  019084  6EDA               	movwf	fsr2h,c
 15832                           
 15833                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15834  019086  0E08               	movlw	8
 15835  019088  6E01               	movwf	btemp^0,c
 15836  01908A  0EEF               	movlw	-17
 15837  01908C                     us742999:
 15838  01908C  006F FF7B FFE3     	movff	postinc2,plusw1
 15839  019092  28E8               	incf	wreg,w,c
 15840  019094  2E01               	decfsz	btemp^0,f,c
 15841  019096  D7FA               	bra	us742999
 15842                           
 15843                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15844  019098  0EF7               	movlw	247
 15845  01909A  26E1               	addwf	fsr1l,f,c
 15846  01909C  0EFF               	movlw	255
 15847  01909E  22E2               	addwfc	fsr1h,f,c
 15848  0190A0  0012               	return		;funcret
 15849  0190A2                     __end_of___lodiv:
 15850                           	opt callstack 0
 15851                           
 15852 ;; *************** function _strncmp *****************
 15853 ;; Defined at:
 15854 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15855 ;; Parameters:    Size  Location     Type
 15856 ;;  _l              2  [STACK] PTR const unsigned char 
 15857 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15858 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15859 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15860 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15861 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15862 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15863 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15864 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15865 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15866 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15867 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15868 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15869 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15870 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15871 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15872 ;;		 -> STR_1(21), 
 15873 ;;  _r              2  [STACK] PTR const unsigned char 
 15874 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15875 ;;		 -> STR_79(3), STR_75(3), 
 15876 ;;  n               2  [STACK] unsigned int 
 15877 ;; Auto vars:     Size  Location     Type
 15878 ;;  r               2  [STACK] PTR const unsigned char 
 15879 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15880 ;;		 -> STR_79(3), STR_75(3), 
 15881 ;;  l               2  [STACK] PTR const unsigned char 
 15882 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15883 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15884 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15885 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15886 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15887 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15888 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15889 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15890 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15891 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15892 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15893 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15894 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15895 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15896 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15897 ;;		 -> STR_1(21), 
 15898 ;; Return value:  Size  Location     Type
 15899 ;;                  2  [STACK] int 
 15900 ;; Registers used:
 15901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15902 ;; Tracked objects:
 15903 ;;		On entry : 0/0
 15904 ;;		On exit  : 0/0
 15905 ;;		Unchanged: 0/0
 15906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15911 ;;Total ram usage:        0 bytes
 15912 ;; Hardware stack levels used:    1
 15913 ;; Hardware stack levels required when called:   15
 15914 ;; This function calls:
 15915 ;;		Nothing
 15916 ;; This function is called by:
 15917 ;;		_vfpfcnvrt
 15918 ;; This function uses a reentrant model
 15919 ;;
 15920                           
 15921                           	psect	text60
 15922  018098                     __ptext60:
 15923                           	opt callstack 0
 15924  018098                     _strncmp:
 15925                           	opt callstack 0
 15926                           
 15927                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15928  018098  52E6               	movf	postinc1,f,c
 15929  01809A  52E6               	movf	postinc1,f,c
 15930  01809C  52E6               	movf	postinc1,f,c
 15931  01809E  52E6               	movf	postinc1,f,c
 15932                           
 15933                           ;stkvar	__l @ sp[(-4)+-2]
 15934                           
 15935                           ;incstack = 0
 15936 ;; hardware stack exceeded
 15937  0180A0  0EFA               	movlw	-6
 15938  0180A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15939  0180A8  0EFB               	movlw	-5
 15940  0180AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15941                           
 15942                           ;stkvar	_l @ sp[(-4)+2]
 15943  0180B0  0EFF               	movlw	-1
 15944  0180B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15945  0180B8  0EFE               	movlw	-2
 15946  0180BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15947                           
 15948                           ;stkvar	__r @ sp[(-4)+-4]
 15949  0180C0  0EF8               	movlw	-8
 15950  0180C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15951  0180C8  0EF9               	movlw	-7
 15952  0180CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15953                           
 15954                           ;stkvar	_r @ sp[(-4)+0]
 15955  0180D0  0EFD               	movlw	-3
 15956  0180D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15957  0180D8  0EFC               	movlw	-4
 15958  0180DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15959                           
 15960                           ;stkvar	_n @ sp[(-4)+-6]
 15961  0180E0  0EF6               	movlw	-10
 15962  0180E2  006F FF8C  F001    	movff	plusw1,btemp
 15963  0180E8  0E01               	movlw	1
 15964  0180EA  5E01               	subwf	btemp^0,f,c
 15965  0180EC  0EF6               	movlw	-10
 15966  0180EE  0060  F007  FFE3   	movff	btemp,plusw1
 15967  0180F4  0EF7               	movlw	-9
 15968  0180F6  006F FF8C  F001    	movff	plusw1,btemp
 15969  0180FC  0E00               	movlw	0
 15970  0180FE  5A01               	subwfb	btemp^0,f,c
 15971  018100  0EF7               	movlw	-9
 15972  018102  0060  F007  FFE3   	movff	btemp,plusw1
 15973  018108  0EF6               	movlw	-10
 15974  01810A  28E3               	incf	plusw1,w,c
 15975  01810C  E13F               	bnz	l9549
 15976  01810E  0EF7               	movlw	-9
 15977  018110  28E3               	incf	plusw1,w,c
 15978  018112  A4D8               	btfss	status,2,c
 15979  018114  D03B               	goto	l9549
 15980  018116  0E00               	movlw	0
 15981  018118  6E01               	movwf	btemp^0,c
 15982  01811A  0E00               	movlw	0
 15983  01811C  6E02               	movwf	(btemp+1)^0,c
 15984  01811E  D0C7               	goto	l3534
 15985  018120                     l9547:
 15986                           
 15987                           ;stkvar	_l @ sp[(-4)+2]
 15988  018120  0EFE               	movlw	-2
 15989  018122  50E3               	movf	plusw1,w,c
 15990  018124  0F01               	addlw	1
 15991  018126  6E01               	movwf	btemp^0,c
 15992  018128  0EFE               	movlw	-2
 15993  01812A  0060  F007  FFE3   	movff	btemp,plusw1
 15994  018130  6A01               	clrf	btemp^0,c
 15995  018132  0EFF               	movlw	-1
 15996  018134  50E3               	movf	plusw1,w,c
 15997  018136  2001               	addwfc	btemp^0,w,c
 15998  018138  6E01               	movwf	btemp^0,c
 15999  01813A  0EFF               	movlw	-1
 16000  01813C  0060  F007  FFE3   	movff	btemp,plusw1
 16001                           
 16002                           ;stkvar	_r @ sp[(-4)+0]
 16003  018142  0EFC               	movlw	-4
 16004  018144  50E3               	movf	plusw1,w,c
 16005  018146  0F01               	addlw	1
 16006  018148  6E01               	movwf	btemp^0,c
 16007  01814A  0EFC               	movlw	-4
 16008  01814C  0060  F007  FFE3   	movff	btemp,plusw1
 16009  018152  6A01               	clrf	btemp^0,c
 16010  018154  0EFD               	movlw	-3
 16011  018156  50E3               	movf	plusw1,w,c
 16012  018158  2001               	addwfc	btemp^0,w,c
 16013  01815A  6E01               	movwf	btemp^0,c
 16014  01815C  0EFD               	movlw	-3
 16015  01815E  0060  F007  FFE3   	movff	btemp,plusw1
 16016                           
 16017                           ;stkvar	_n @ sp[(-4)+-6]
 16018  018164  0EF6               	movlw	-10
 16019  018166  006F FF8C  F001    	movff	plusw1,btemp
 16020  01816C  0E01               	movlw	1
 16021  01816E  5E01               	subwf	btemp^0,f,c
 16022  018170  0EF6               	movlw	-10
 16023  018172  0060  F007  FFE3   	movff	btemp,plusw1
 16024  018178  0EF7               	movlw	-9
 16025  01817A  006F FF8C  F001    	movff	plusw1,btemp
 16026  018180  0E00               	movlw	0
 16027  018182  5A01               	subwfb	btemp^0,f,c
 16028  018184  0EF7               	movlw	-9
 16029  018186  0060  F007  FFE3   	movff	btemp,plusw1
 16030  01818C                     l9549:
 16031                           
 16032                           ;stkvar	_l @ sp[(-4)+2]
 16033  01818C  0EFE               	movlw	-2
 16034  01818E  006F FF8F FFF6     	movff	plusw1,tblptrl
 16035  018194  0EFF               	movlw	-1
 16036  018196  006F FF8F FFF7     	movff	plusw1,tblptrh
 16037  01819C  0E00               	movlw	low (__mediumconst shr (0+16))
 16038  01819E  6EF8               	movwf	tblptru,c
 16039  0181A0  0E1F               	movlw	(high __ramtop+-1)
 16040  0181A2  64F7               	cpfsgt	tblptrh,c
 16041  0181A4  D003               	bra	u8667
 16042  0181A6  0008               	tblrd		*
 16043  0181A8  50F5               	movf	tablat,w,c
 16044  0181AA  D007               	bra	u8660
 16045  0181AC                     u8667:
 16046  0181AC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16047  0181B2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16048  0181B8  50EF               	movf	indf0,w,c
 16049  0181BA                     u8660:
 16050  0181BA  0900               	iorlw	0
 16051  0181BC  B4D8               	btfsc	status,2,c
 16052  0181BE  D04A               	goto	u8700
 16053                           
 16054                           ;stkvar	_r @ sp[(-4)+0]
 16055  0181C0  50E1               	movf	fsr1l,w,c
 16056  0181C2  0FFC               	addlw	-4
 16057  0181C4  6ED9               	movwf	fsr2l,c
 16058  0181C6  50E2               	movf	fsr1h,w,c
 16059  0181C8  6EDA               	movwf	fsr2h,c
 16060  0181CA  0EFF               	movlw	255
 16061  0181CC  22DA               	addwfc	fsr2h,f,c
 16062  0181CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16063  0181D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16064  0181DA                     	if	0	;tblptru may be non-zero
 16065  0181DA                     	endif
 16066  0181DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16067  0181DA  0E00               	movlw	low (__mediumconst shr (0+16))
 16068  0181DC  6EF8               	movwf	tblptru,c
 16069  0181DE                     	endif
 16070  0181DE  0008               	tblrd		*
 16071  0181E0  50F5               	movf	tablat,w,c
 16072  0181E2  0900               	iorlw	0
 16073  0181E4  B4D8               	btfsc	status,2,c
 16074  0181E6  D036               	goto	u8700
 16075                           
 16076                           ;stkvar	_n @ sp[(-4)+-6]
 16077  0181E8  0EF6               	movlw	-10
 16078  0181EA  006F FF8C  F001    	movff	plusw1,btemp
 16079  0181F0  0EF7               	movlw	-9
 16080  0181F2  50E3               	movf	plusw1,w,c
 16081  0181F4  1001               	iorwf	btemp^0,w,c
 16082  0181F6  B4D8               	btfsc	status,2,c
 16083  0181F8  D02D               	goto	u8700
 16084                           
 16085                           ;stkvar	_r @ sp[(-4)+0]
 16086  0181FA  50E1               	movf	fsr1l,w,c
 16087  0181FC  0FFC               	addlw	-4
 16088  0181FE  6ED9               	movwf	fsr2l,c
 16089  018200  50E2               	movf	fsr1h,w,c
 16090  018202  6EDA               	movwf	fsr2h,c
 16091  018204  0EFF               	movlw	255
 16092  018206  22DA               	addwfc	fsr2h,f,c
 16093  018208  006F FF7B FFF6     	movff	postinc2,tblptrl
 16094  01820E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16095  018214                     	if	0	;tblptru may be non-zero
 16096  018214                     	endif
 16097  018214                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16098  018214  0E00               	movlw	low (__mediumconst shr (0+16))
 16099  018216  6EF8               	movwf	tblptru,c
 16100  018218                     	endif
 16101  018218  0008               	tblrd		*
 16102  01821A  006F FFD4  F00C    	movff	tablat,btemp+11
 16103                           
 16104                           ;stkvar	_l @ sp[(-4)+2]
 16105  018220  0EFE               	movlw	-2
 16106  018222  006F FF8F FFF6     	movff	plusw1,tblptrl
 16107  018228  0EFF               	movlw	-1
 16108  01822A  006F FF8F FFF7     	movff	plusw1,tblptrh
 16109  018230  0E00               	movlw	low (__mediumconst shr (0+16))
 16110  018232  6EF8               	movwf	tblptru,c
 16111  018234  0E1F               	movlw	(high __ramtop+-1)
 16112  018236  64F7               	cpfsgt	tblptrh,c
 16113  018238  D003               	bra	u8707
 16114  01823A  0008               	tblrd		*
 16115  01823C  50F5               	movf	tablat,w,c
 16116  01823E  D007               	bra	u8705
 16117  018240                     u8707:
 16118  018240  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16119  018246  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16120  01824C  50EF               	movf	indf0,w,c
 16121  01824E                     u8705:
 16122  01824E  180C               	xorwf	(btemp+11)^0,w,c
 16123  018250  B4D8               	btfsc	status,2,c
 16124  018252  D766               	goto	l9547
 16125  018254                     u8700:
 16126                           
 16127                           ;stkvar	_l @ sp[(-4)+2]
 16128  018254  0EFE               	movlw	-2
 16129  018256  006F FF8F FFF6     	movff	plusw1,tblptrl
 16130  01825C  0EFF               	movlw	-1
 16131  01825E  006F FF8F FFF7     	movff	plusw1,tblptrh
 16132  018264  0E00               	movlw	low (__mediumconst shr (0+16))
 16133  018266  6EF8               	movwf	tblptru,c
 16134  018268  0E1F               	movlw	(high __ramtop+-1)
 16135  01826A  64F7               	cpfsgt	tblptrh,c
 16136  01826C  D003               	bra	u8717
 16137  01826E  0008               	tblrd		*
 16138  018270  50F5               	movf	tablat,w,c
 16139  018272  D007               	bra	u8710
 16140  018274                     u8717:
 16141  018274  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16142  01827A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16143  018280  50EF               	movf	indf0,w,c
 16144  018282                     u8710:
 16145  018282  6E01               	movwf	btemp^0,c
 16146  018284  6A02               	clrf	(btemp+1)^0,c
 16147                           
 16148                           ;stkvar	_r @ sp[(-4)+0]
 16149  018286  50E1               	movf	fsr1l,w,c
 16150  018288  0FFC               	addlw	-4
 16151  01828A  6ED9               	movwf	fsr2l,c
 16152  01828C  50E2               	movf	fsr1h,w,c
 16153  01828E  6EDA               	movwf	fsr2h,c
 16154  018290  0EFF               	movlw	255
 16155  018292  22DA               	addwfc	fsr2h,f,c
 16156  018294  006F FF7B FFF6     	movff	postinc2,tblptrl
 16157  01829A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16158  0182A0                     	if	0	;tblptru may be non-zero
 16159  0182A0                     	endif
 16160  0182A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16161  0182A0  0E00               	movlw	low (__mediumconst shr (0+16))
 16162  0182A2  6EF8               	movwf	tblptru,c
 16163  0182A4                     	endif
 16164  0182A4  0008               	tblrd		*
 16165  0182A6  50F5               	movf	tablat,w,c
 16166  0182A8  5E01               	subwf	btemp^0,f,c
 16167  0182AA  0E00               	movlw	0
 16168  0182AC  5A02               	subwfb	(btemp+1)^0,f,c
 16169  0182AE                     l3534:
 16170                           
 16171                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 16172  0182AE  0EF6               	movlw	246
 16173  0182B0  26E1               	addwf	fsr1l,f,c
 16174  0182B2  0EFF               	movlw	255
 16175  0182B4  22E2               	addwfc	fsr1h,f,c
 16176  0182B6  0012               	return		;funcret
 16177  0182B8                     __end_of_strncmp:
 16178                           	opt callstack 0
 16179                           
 16180 ;; *************** function _stoa *****************
 16181 ;; Defined at:
 16182 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16183 ;; Parameters:    Size  Location     Type
 16184 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16185 ;;		 -> f(6), NULL(0), 
 16186 ;;  s               2  [STACK] PTR unsigned char 
 16187 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 16188 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 16189 ;;		 -> V(191), 
 16190 ;; Auto vars:     Size  Location     Type
 16191 ;;  nuls            7  [STACK] unsigned char [7]
 16192 ;;  l               2  [STACK] int 
 16193 ;;  p               2  [STACK] int 
 16194 ;;  cp              2  [STACK] PTR unsigned char 
 16195 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 16196 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 16197 ;;		 -> STR_3(5), V(191), 
 16198 ;;  w               2  [STACK] int 
 16199 ;;  i               2  [STACK] int 
 16200 ;; Return value:  Size  Location     Type
 16201 ;;                  2  [STACK] int 
 16202 ;; Registers used:
 16203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16204 ;; Tracked objects:
 16205 ;;		On entry : 0/0
 16206 ;;		On exit  : 0/0
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16213 ;;Total ram usage:        0 bytes
 16214 ;; Hardware stack levels used:    1
 16215 ;; Hardware stack levels required when called:   18
 16216 ;; This function calls:
 16217 ;;		_fputc
 16218 ;;		_strlen
 16219 ;; This function is called by:
 16220 ;;		_vfpfcnvrt
 16221 ;; This function uses a reentrant model
 16222 ;;
 16223                           
 16224                           	psect	text61
 16225  017460                     __ptext61:
 16226                           	opt callstack 0
 16227  017460                     _stoa:
 16228                           	opt callstack 0
 16229                           
 16230                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16231  017460  0E11               	movlw	17
 16232  017462  26E1               	addwf	fsr1l,f,c
 16233  017464  0E00               	movlw	0
 16234  017466  22E2               	addwfc	fsr1h,f,c
 16235                           
 16236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 16237                           
 16238                           ;incstack = 0
 16239 ;; hardware stack exceeded
 16240  017468  EE20  F100         	lfsr	2,stoa@F1166
 16241                           
 16242                           ;stkvar	_nuls @ sp[(-17)+0]
 16243  01746C  0E07               	movlw	7
 16244  01746E  6E01               	movwf	btemp^0,c
 16245  017470  0EEF               	movlw	-17
 16246  017472                     us1171999:
 16247  017472  006F FF7B FFE3     	movff	postinc2,plusw1
 16248  017478  28E8               	incf	wreg,w,c
 16249  01747A  2E01               	decfsz	btemp^0,f,c
 16250  01747C  D7FA               	bra	us1171999
 16251                           
 16252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 16253                           ;stkvar	_s @ sp[(-17)+-4]
 16254  01747E  0EEB               	movlw	-21
 16255  017480  006F FF8C  F00B    	movff	plusw1,btemp+10
 16256  017486  0EEC               	movlw	-20
 16257  017488  006F FF8C  F00C    	movff	plusw1,btemp+11
 16258                           
 16259                           ;stkvar	_cp @ sp[(-17)+11]
 16260  01748E  0EFB               	movlw	-5
 16261  017490  0060  F033  FFE3   	movff	btemp+11,plusw1
 16262  017496  0EFA               	movlw	-6
 16263  017498  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16264                           
 16265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 16266                           ;stkvar	_cp @ sp[(-17)+11]
 16267  01749E  0EFA               	movlw	-6
 16268  0174A0  006F FF8C  F001    	movff	plusw1,btemp
 16269  0174A6  0EFB               	movlw	-5
 16270  0174A8  50E3               	movf	plusw1,w,c
 16271  0174AA  1001               	iorwf	btemp^0,w,c
 16272  0174AC  A4D8               	btfss	status,2,c
 16273  0174AE  D00E               	goto	l12585
 16274                           
 16275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 16276                           ;stkvar	_nuls @ sp[(-17)+0]
 16277  0174B0  0EEF               	movlw	239
 16278  0174B2  24E1               	addwf	fsr1l,w,c
 16279  0174B4  6E0B               	movwf	(btemp+10)^0,c
 16280  0174B6  0EFF               	movlw	255
 16281  0174B8  20E2               	addwfc	fsr1h,w,c
 16282  0174BA  6E0C               	movwf	(btemp+11)^0,c
 16283                           
 16284                           ;stkvar	_cp @ sp[(-17)+11]
 16285  0174BC  0EFB               	movlw	-5
 16286  0174BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16287  0174C4  0EFA               	movlw	-6
 16288  0174C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16289  0174CC                     l12585:
 16290                           
 16291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 16292                           ;stkvar	_cp @ sp[(-17)+11]
 16293  0174CC  0EFA               	movlw	-6
 16294  0174CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16295  0174D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16296  0174DA  EC4F  F0D6         	call	_strlen	;wreg free
 16297                           
 16298                           ;stkvar	_l @ sp[(-17)+7]
 16299  0174DE  0EF6               	movlw	-10
 16300  0174E0  0060  F007  FFE3   	movff	btemp,plusw1
 16301  0174E6  0EF7               	movlw	-9
 16302  0174E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16303                           
 16304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 16305                           ;stkvar	_p @ sp[(-17)+9]
 16306  0174EE  0EF8               	movlw	-8
 16307  0174F0  0060  F0F3  FFE3   	movff	_prec,plusw1
 16308  0174F6  0EF9               	movlw	-7
 16309  0174F8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16310                           
 16311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 16312                           ;stkvar	_p @ sp[(-17)+9]
 16313  0174FE  0EF9               	movlw	-7
 16314  017500  BEE3               	btfsc	plusw1,7,c
 16315  017502  D023               	goto	l2359
 16316                           
 16317                           ;stkvar	_l @ sp[(-17)+7]
 16318                           ;stkvar	_p @ sp[(-17)+9]
 16319  017504  50E1               	movf	fsr1l,w,c
 16320  017506  0FF8               	addlw	-8
 16321  017508  6ED9               	movwf	fsr2l,c
 16322  01750A  50E2               	movf	fsr1h,w,c
 16323  01750C  6EDA               	movwf	fsr2h,c
 16324  01750E  0EFF               	movlw	255
 16325  017510  22DA               	addwfc	fsr2h,f,c
 16326  017512  0EF6               	movlw	-10
 16327  017514  50E3               	movf	plusw1,w,c
 16328  017516  5CDE               	subwf	postinc2,w,c
 16329  017518  50DE               	movf	postinc2,w,c
 16330  01751A  0A80               	xorlw	128
 16331  01751C  6E01               	movwf	btemp^0,c
 16332  01751E  0EF7               	movlw	-9
 16333  017520  50E3               	movf	plusw1,w,c
 16334  017522  0A80               	xorlw	128
 16335  017524  5801               	subwfb	btemp^0,w,c
 16336  017526  B0D8               	btfsc	status,0,c
 16337  017528  D010               	goto	l2359
 16338                           
 16339                           ;stkvar	_p @ sp[(-17)+9]
 16340                           ;stkvar	_l @ sp[(-17)+7]
 16341  01752A  0EF8               	movlw	-8
 16342  01752C  006F FF8C  F001    	movff	plusw1,btemp
 16343  017532  0EF6               	movlw	-10
 16344  017534  0060  F007  FFE3   	movff	btemp,plusw1
 16345  01753A  0EF9               	movlw	-7
 16346  01753C  006F FF8C  F001    	movff	plusw1,btemp
 16347  017542  0EF7               	movlw	-9
 16348  017544  0060  F007  FFE3   	movff	btemp,plusw1
 16349  01754A                     l2359:
 16350                           
 16351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 16352                           ;stkvar	_l @ sp[(-17)+7]
 16353                           ;stkvar	_p @ sp[(-17)+9]
 16354  01754A  0EF6               	movlw	-10
 16355  01754C  006F FF8C  F001    	movff	plusw1,btemp
 16356  017552  0EF8               	movlw	-8
 16357  017554  0060  F007  FFE3   	movff	btemp,plusw1
 16358  01755A  0EF7               	movlw	-9
 16359  01755C  006F FF8C  F001    	movff	plusw1,btemp
 16360  017562  0EF9               	movlw	-7
 16361  017564  0060  F007  FFE3   	movff	btemp,plusw1
 16362                           
 16363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 16364                           ;stkvar	_w @ sp[(-17)+13]
 16365  01756A  0EFC               	movlw	-4
 16366  01756C  0060  F0EB  FFE3   	movff	_width,plusw1
 16367  017572  0EFD               	movlw	-3
 16368  017574  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16369                           
 16370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 16371  01757A  A03E               	btfss	_flags^0,0,c
 16372  01757C  D01F               	goto	l12605
 16373  01757E  D031               	goto	u11760
 16374  017580                     l12601:
 16375                           
 16376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 16377                           ;stkvar	_fp @ sp[(-17)+-2]
 16378  017580  0EED               	movlw	-19
 16379  017582  006F FF8F FFE6     	movff	plusw1,postinc1
 16380  017588  006F FF8F FFE6     	movff	plusw1,postinc1
 16381  01758E  0E20               	movlw	32
 16382  017590  6EE6               	movwf	postinc1,c
 16383  017592  0E00               	movlw	0
 16384  017594  6EE6               	movwf	postinc1,c
 16385  017596  ECE6  F0CC         	call	_fputc	;wreg free
 16386                           
 16387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 16388                           ;stkvar	_l @ sp[(-17)+7]
 16389  01759A  0EF6               	movlw	-10
 16390  01759C  50E3               	movf	plusw1,w,c
 16391  01759E  0F01               	addlw	1
 16392  0175A0  6E01               	movwf	btemp^0,c
 16393  0175A2  0EF6               	movlw	-10
 16394  0175A4  0060  F007  FFE3   	movff	btemp,plusw1
 16395  0175AA  6A01               	clrf	btemp^0,c
 16396  0175AC  0EF7               	movlw	-9
 16397  0175AE  50E3               	movf	plusw1,w,c
 16398  0175B0  2001               	addwfc	btemp^0,w,c
 16399  0175B2  6E01               	movwf	btemp^0,c
 16400  0175B4  0EF7               	movlw	-9
 16401  0175B6  0060  F007  FFE3   	movff	btemp,plusw1
 16402  0175BC                     l12605:
 16403                           
 16404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 16405                           ;stkvar	_w @ sp[(-17)+13]
 16406                           ;stkvar	_l @ sp[(-17)+7]
 16407  0175BC  50E1               	movf	fsr1l,w,c
 16408  0175BE  0FF6               	addlw	-10
 16409  0175C0  6ED9               	movwf	fsr2l,c
 16410  0175C2  50E2               	movf	fsr1h,w,c
 16411  0175C4  6EDA               	movwf	fsr2h,c
 16412  0175C6  0EFF               	movlw	255
 16413  0175C8  22DA               	addwfc	fsr2h,f,c
 16414  0175CA  0EFC               	movlw	-4
 16415  0175CC  50E3               	movf	plusw1,w,c
 16416  0175CE  5CDE               	subwf	postinc2,w,c
 16417  0175D0  50DE               	movf	postinc2,w,c
 16418  0175D2  0A80               	xorlw	128
 16419  0175D4  6E01               	movwf	btemp^0,c
 16420  0175D6  0EFD               	movlw	-3
 16421  0175D8  50E3               	movf	plusw1,w,c
 16422  0175DA  0A80               	xorlw	128
 16423  0175DC  5801               	subwfb	btemp^0,w,c
 16424  0175DE  A0D8               	btfss	status,0,c
 16425  0175E0  D7CF               	goto	l12601
 16426  0175E2                     u11760:
 16427                           
 16428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 16429                           ;stkvar	_i @ sp[(-17)+15]
 16430  0175E2  0EFE               	movlw	-2
 16431  0175E4  6AE3               	clrf	plusw1,c
 16432  0175E6  0EFF               	movlw	-1
 16433  0175E8  6AE3               	clrf	plusw1,c
 16434                           
 16435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16436  0175EA  D045               	goto	l12615
 16437  0175EC                     l12609:
 16438                           
 16439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 16440                           ;stkvar	_fp @ sp[(-17)+-2]
 16441  0175EC  0EED               	movlw	-19
 16442  0175EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16443  0175F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16444                           
 16445                           ;stkvar	_cp @ sp[(-19)+11]
 16446  0175FA  0EF8               	movlw	-8
 16447  0175FC  006F FF8F FFF6     	movff	plusw1,tblptrl
 16448  017602  0EF9               	movlw	-7
 16449  017604  006F FF8F FFF7     	movff	plusw1,tblptrh
 16450  01760A  0E00               	movlw	low (__mediumconst shr (0+16))
 16451  01760C  6EF8               	movwf	tblptru,c
 16452  01760E  0E1F               	movlw	(high __ramtop+-1)
 16453  017610  64F7               	cpfsgt	tblptrh,c
 16454  017612  D003               	bra	u11777
 16455  017614  0008               	tblrd		*
 16456  017616  50F5               	movf	tablat,w,c
 16457  017618  D007               	bra	u11770
 16458  01761A                     u11777:
 16459  01761A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16460  017620  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16461  017626  50EF               	movf	indf0,w,c
 16462  017628                     u11770:
 16463  017628  6EE6               	movwf	postinc1,c
 16464  01762A  0E00               	movlw	0
 16465  01762C  6EE6               	movwf	postinc1,c
 16466  01762E  ECE6  F0CC         	call	_fputc	;wreg free
 16467                           
 16468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 16469                           ;stkvar	_cp @ sp[(-17)+11]
 16470  017632  0EFA               	movlw	-6
 16471  017634  50E3               	movf	plusw1,w,c
 16472  017636  0F01               	addlw	1
 16473  017638  6E01               	movwf	btemp^0,c
 16474  01763A  0EFA               	movlw	-6
 16475  01763C  0060  F007  FFE3   	movff	btemp,plusw1
 16476  017642  6A01               	clrf	btemp^0,c
 16477  017644  0EFB               	movlw	-5
 16478  017646  50E3               	movf	plusw1,w,c
 16479  017648  2001               	addwfc	btemp^0,w,c
 16480  01764A  6E01               	movwf	btemp^0,c
 16481  01764C  0EFB               	movlw	-5
 16482  01764E  0060  F007  FFE3   	movff	btemp,plusw1
 16483                           
 16484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 16485                           ;stkvar	_i @ sp[(-17)+15]
 16486  017654  0EFE               	movlw	-2
 16487  017656  50E3               	movf	plusw1,w,c
 16488  017658  0F01               	addlw	1
 16489  01765A  6E01               	movwf	btemp^0,c
 16490  01765C  0EFE               	movlw	-2
 16491  01765E  0060  F007  FFE3   	movff	btemp,plusw1
 16492  017664  6A01               	clrf	btemp^0,c
 16493  017666  0EFF               	movlw	-1
 16494  017668  50E3               	movf	plusw1,w,c
 16495  01766A  2001               	addwfc	btemp^0,w,c
 16496  01766C  6E01               	movwf	btemp^0,c
 16497  01766E  0EFF               	movlw	-1
 16498  017670  0060  F007  FFE3   	movff	btemp,plusw1
 16499  017676                     l12615:
 16500                           
 16501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16502                           ;stkvar	_p @ sp[(-17)+9]
 16503                           ;stkvar	_i @ sp[(-17)+15]
 16504  017676  50E1               	movf	fsr1l,w,c
 16505  017678  0FFE               	addlw	-2
 16506  01767A  6ED9               	movwf	fsr2l,c
 16507  01767C  50E2               	movf	fsr1h,w,c
 16508  01767E  6EDA               	movwf	fsr2h,c
 16509  017680  0EFF               	movlw	255
 16510  017682  22DA               	addwfc	fsr2h,f,c
 16511  017684  0EF8               	movlw	-8
 16512  017686  50E3               	movf	plusw1,w,c
 16513  017688  5CDE               	subwf	postinc2,w,c
 16514  01768A  50DE               	movf	postinc2,w,c
 16515  01768C  0A80               	xorlw	128
 16516  01768E  6E01               	movwf	btemp^0,c
 16517  017690  0EF9               	movlw	-7
 16518  017692  50E3               	movf	plusw1,w,c
 16519  017694  0A80               	xorlw	128
 16520  017696  5801               	subwfb	btemp^0,w,c
 16521  017698  A0D8               	btfss	status,0,c
 16522  01769A  D7A8               	goto	l12609
 16523                           
 16524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 16525  01769C  B03E               	btfsc	_flags^0,0,c
 16526  01769E  D01F               	goto	l12623
 16527  0176A0  D031               	goto	u11800
 16528  0176A2                     l12619:
 16529                           
 16530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 16531                           ;stkvar	_fp @ sp[(-17)+-2]
 16532  0176A2  0EED               	movlw	-19
 16533  0176A4  006F FF8F FFE6     	movff	plusw1,postinc1
 16534  0176AA  006F FF8F FFE6     	movff	plusw1,postinc1
 16535  0176B0  0E20               	movlw	32
 16536  0176B2  6EE6               	movwf	postinc1,c
 16537  0176B4  0E00               	movlw	0
 16538  0176B6  6EE6               	movwf	postinc1,c
 16539  0176B8  ECE6  F0CC         	call	_fputc	;wreg free
 16540                           
 16541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 16542                           ;stkvar	_l @ sp[(-17)+7]
 16543  0176BC  0EF6               	movlw	-10
 16544  0176BE  50E3               	movf	plusw1,w,c
 16545  0176C0  0F01               	addlw	1
 16546  0176C2  6E01               	movwf	btemp^0,c
 16547  0176C4  0EF6               	movlw	-10
 16548  0176C6  0060  F007  FFE3   	movff	btemp,plusw1
 16549  0176CC  6A01               	clrf	btemp^0,c
 16550  0176CE  0EF7               	movlw	-9
 16551  0176D0  50E3               	movf	plusw1,w,c
 16552  0176D2  2001               	addwfc	btemp^0,w,c
 16553  0176D4  6E01               	movwf	btemp^0,c
 16554  0176D6  0EF7               	movlw	-9
 16555  0176D8  0060  F007  FFE3   	movff	btemp,plusw1
 16556  0176DE                     l12623:
 16557                           
 16558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 16559                           ;stkvar	_w @ sp[(-17)+13]
 16560                           ;stkvar	_l @ sp[(-17)+7]
 16561  0176DE  50E1               	movf	fsr1l,w,c
 16562  0176E0  0FF6               	addlw	-10
 16563  0176E2  6ED9               	movwf	fsr2l,c
 16564  0176E4  50E2               	movf	fsr1h,w,c
 16565  0176E6  6EDA               	movwf	fsr2h,c
 16566  0176E8  0EFF               	movlw	255
 16567  0176EA  22DA               	addwfc	fsr2h,f,c
 16568  0176EC  0EFC               	movlw	-4
 16569  0176EE  50E3               	movf	plusw1,w,c
 16570  0176F0  5CDE               	subwf	postinc2,w,c
 16571  0176F2  50DE               	movf	postinc2,w,c
 16572  0176F4  0A80               	xorlw	128
 16573  0176F6  6E01               	movwf	btemp^0,c
 16574  0176F8  0EFD               	movlw	-3
 16575  0176FA  50E3               	movf	plusw1,w,c
 16576  0176FC  0A80               	xorlw	128
 16577  0176FE  5801               	subwfb	btemp^0,w,c
 16578  017700  A0D8               	btfss	status,0,c
 16579  017702  D7CF               	goto	l12619
 16580  017704                     u11800:
 16581                           
 16582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 16583                           ;stkvar	_l @ sp[(-17)+7]
 16584  017704  0EF6               	movlw	-10
 16585  017706  006F FF8C  F001    	movff	plusw1,btemp
 16586  01770C  0EF7               	movlw	-9
 16587  01770E  006F FF8C  F002    	movff	plusw1,btemp+1
 16588                           
 16589                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 16590  017714  0EEB               	movlw	235
 16591  017716  26E1               	addwf	fsr1l,f,c
 16592  017718  0EFF               	movlw	255
 16593  01771A  22E2               	addwfc	fsr1h,f,c
 16594  01771C  0012               	return		;funcret
 16595  01771E                     __end_of_stoa:
 16596                           	opt callstack 0
 16597                           
 16598 ;; *************** function _efgtoa *****************
 16599 ;; Defined at:
 16600 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16601 ;; Parameters:    Size  Location     Type
 16602 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16603 ;;		 -> f(6), NULL(0), 
 16604 ;;  f               4  [STACK] PTR struct _IO_FILE
 16605 ;;  c               1  [STACK] unsigned char 
 16606 ;; Auto vars:     Size  Location     Type
 16607 ;;  u               4  [STACK] unsigned char 
 16608 ;;  g               4  [STACK] unsigned char 
 16609 ;;  l               4  [STACK] unsigned char 
 16610 ;;  h               4  [STACK] unsigned char 
 16611 ;;  ou              4  [STACK] unsigned char 
 16612 ;;  n               2  [STACK] int 
 16613 ;;  e               2  [STACK] int 
 16614 ;;  i               2  [STACK] int 
 16615 ;;  w               2  [STACK] int 
 16616 ;;  p               2  [STACK] int 
 16617 ;;  sign            2  [STACK] int 
 16618 ;;  d               2  [STACK] int 
 16619 ;;  ne              2  [STACK] int 
 16620 ;;  m               2  [STACK] int 
 16621 ;;  pp              2  [STACK] int 
 16622 ;;  t               2  [STACK] int 
 16623 ;;  mode            1  [STACK] unsigned char 
 16624 ;;  nmode           1  [STACK] unsigned char 
 16625 ;; Return value:  Size  Location     Type
 16626 ;;                  2  [STACK] int 
 16627 ;; Registers used:
 16628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16629 ;; Tracked objects:
 16630 ;;		On entry : 0/0
 16631 ;;		On exit  : 0/0
 16632 ;;		Unchanged: 0/0
 16633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16638 ;;Total ram usage:        0 bytes
 16639 ;; Hardware stack levels used:    1
 16640 ;; Hardware stack levels required when called:   20
 16641 ;; This function calls:
 16642 ;;		___awdiv
 16643 ;;		___awmod
 16644 ;;		___fladd
 16645 ;;		___fldiv
 16646 ;;		___fleq
 16647 ;;		___flge
 16648 ;;		___flmul
 16649 ;;		___flneg
 16650 ;;		___flsub
 16651 ;;		___fltol
 16652 ;;		___fpclassifyf
 16653 ;;		_floorf
 16654 ;;		_isupper
 16655 ;;		_pad
 16656 ;;		_strcpy
 16657 ;;		_tolower
 16658 ;; This function is called by:
 16659 ;;		_vfpfcnvrt
 16660 ;; This function uses a reentrant model
 16661 ;;
 16662                           
 16663                           	psect	text62
 16664  010000                     __ptext62:
 16665                           	opt callstack 0
 16666  010000                     _efgtoa:
 16667                           	opt callstack 0
 16668                           
 16669                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16670  010000  0E38               	movlw	56
 16671  010002  26E1               	addwf	fsr1l,f,c
 16672  010004  0E00               	movlw	0
 16673  010006  22E2               	addwfc	fsr1h,f,c
 16674                           
 16675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 16676                           ;stkvar	_sign @ sp[(-56)+42]
 16677                           
 16678                           ;incstack = 0
 16679 ;; hardware stack exceeded
 16680  010008  0EF2               	movlw	-14
 16681  01000A  6AE3               	clrf	plusw1,c
 16682  01000C  0EF3               	movlw	-13
 16683  01000E  6AE3               	clrf	plusw1,c
 16684                           
 16685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 16686                           ;stkvar	_f @ sp[(-56)+-6]
 16687  010010  0EC2               	movlw	-62
 16688  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 16689  010018  0EC3               	movlw	-61
 16690  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16691  010020  0EC4               	movlw	-60
 16692  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 16693  010028  0EC5               	movlw	-59
 16694  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16695                           
 16696                           ;stkvar	_g @ sp[(-56)+16]
 16697  010030  0ED8               	movlw	-40
 16698  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 16699  010038  0ED9               	movlw	-39
 16700  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16701  010040  0EDA               	movlw	-38
 16702  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16703  010048  0EDB               	movlw	-37
 16704  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16705                           
 16706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 16707                           ;stkvar	_g @ sp[(-56)+16]
 16708  010050  0EDB               	movlw	-37
 16709  010052  AEE3               	btfss	plusw1,7,c
 16710  010054  D02B               	goto	l12283
 16711                           
 16712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 16713  010056  0E01               	movlw	1
 16714  010058  6E0B               	movwf	(btemp+10)^0,c
 16715  01005A  0E00               	movlw	0
 16716  01005C  6E0C               	movwf	(btemp+11)^0,c
 16717                           
 16718                           ;stkvar	_sign @ sp[(-56)+42]
 16719  01005E  0EF2               	movlw	-14
 16720  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16721  010066  0EF3               	movlw	-13
 16722  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 16723                           
 16724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 16725                           ;stkvar	_g @ sp[(-56)+16]
 16726  01006E  0ED8               	movlw	-40
 16727  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 16728  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 16729  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 16730  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 16731  010088  EC18  F0DC         	call	___flneg	;wreg free
 16732                           
 16733                           ;stkvar	_g @ sp[(-56)+16]
 16734  01008C  0ED8               	movlw	-40
 16735  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 16736  010094  0ED9               	movlw	-39
 16737  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16738  01009C  0EDA               	movlw	-38
 16739  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16740  0100A4  0EDB               	movlw	-37
 16741  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 16742  0100AC                     l12283:
 16743                           
 16744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 16745                           ;stkvar	_n @ sp[(-56)+32]
 16746  0100AC  0EE8               	movlw	-24
 16747  0100AE  6AE3               	clrf	plusw1,c
 16748  0100B0  0EE9               	movlw	-23
 16749  0100B2  6AE3               	clrf	plusw1,c
 16750                           
 16751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 16752                           ;stkvar	_w @ sp[(-56)+38]
 16753  0100B4  0EEE               	movlw	-18
 16754  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 16755  0100BC  0EEF               	movlw	-17
 16756  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16757                           
 16758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 16759                           ;stkvar	_sign @ sp[(-56)+42]
 16760  0100C4  0EF2               	movlw	-14
 16761  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 16762  0100CC  0EF3               	movlw	-13
 16763  0100CE  50E3               	movf	plusw1,w,c
 16764  0100D0  1001               	iorwf	btemp^0,w,c
 16765  0100D2  A4D8               	btfss	status,2,c
 16766  0100D4  D002               	goto	u11210
 16767  0100D6  A43E               	btfss	_flags^0,2,c
 16768  0100D8  D036               	goto	l12303
 16769  0100DA                     u11210:
 16770                           
 16771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 16772                           ;stkvar	_sign @ sp[(-56)+42]
 16773  0100DA  0EF2               	movlw	-14
 16774  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 16775  0100E2  0EF3               	movlw	-13
 16776  0100E4  50E3               	movf	plusw1,w,c
 16777  0100E6  1001               	iorwf	btemp^0,w,c
 16778  0100E8  A4D8               	btfss	status,2,c
 16779  0100EA  D002               	goto	l12295
 16780  0100EC  0E2B               	movlw	43
 16781  0100EE  D001               	goto	L17
 16782  0100F0                     l12295:
 16783  0100F0  0E2D               	movlw	45
 16784  0100F2                     L17:
 16785  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16786  0100F4  0E00               	movlw	0
 16787  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16788                           
 16789                           ;stkvar	_efgtoa$5754 @ sp[(-56)+10]
 16790  0100F8  0ED2               	movlw	-46
 16791  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16792  010100  0ED3               	movlw	-45
 16793  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16794                           
 16795                           ;stkvar	_efgtoa$5754 @ sp[(-56)+10]
 16796  010108  0ED2               	movlw	-46
 16797  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16798                           
 16799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16800                           ;stkvar	_n @ sp[(-56)+32]
 16801  010110  0EE8               	movlw	-24
 16802  010112  50E3               	movf	plusw1,w,c
 16803  010114  0F01               	addlw	1
 16804  010116  6E01               	movwf	btemp^0,c
 16805  010118  0EE8               	movlw	-24
 16806  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16807  010120  6A01               	clrf	btemp^0,c
 16808  010122  0EE9               	movlw	-23
 16809  010124  50E3               	movf	plusw1,w,c
 16810  010126  2001               	addwfc	btemp^0,w,c
 16811  010128  6E01               	movwf	btemp^0,c
 16812  01012A  0EE9               	movlw	-23
 16813  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16814                           
 16815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16816                           ;stkvar	_w @ sp[(-56)+38]
 16817  010132  50E1               	movf	fsr1l,w,c
 16818  010134  0FEE               	addlw	-18
 16819  010136  6ED9               	movwf	fsr2l,c
 16820  010138  50E2               	movf	fsr1h,w,c
 16821  01013A  6EDA               	movwf	fsr2h,c
 16822  01013C  0EFF               	movlw	255
 16823  01013E  22DA               	addwfc	fsr2h,f,c
 16824  010140  06DE               	decf	postinc2,f,c
 16825  010142  0E00               	movlw	0
 16826  010144  5ADD               	subwfb	postdec2,f,c
 16827  010146                     l12303:
 16828                           
 16829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16830                           ;stkvar	_g @ sp[(-56)+16]
 16831  010146  0ED8               	movlw	-40
 16832  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16833  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16834  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16835  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16836  010160  EC03  F0C6         	call	___fpclassifyf	;wreg free
 16837  010164  0401               	decf	btemp^0,w,c
 16838  010166  1002               	iorwf	(btemp+1)^0,w,c
 16839  010168  A4D8               	btfss	status,2,c
 16840  01016A  D076               	goto	l12321
 16841  01016C  0EBF               	movlw	191
 16842  01016E  6E0B               	movwf	(btemp+10)^0,c
 16843  010170  0EFF               	movlw	255
 16844  010172  6E0C               	movwf	(btemp+11)^0,c
 16845                           
 16846                           ;stkvar	_c @ sp[(-56)+-7]
 16847  010174  0EC1               	movlw	-63
 16848  010176  50E3               	movf	plusw1,w,c
 16849  010178  6E09               	movwf	(btemp+8)^0,c
 16850  01017A  6A0A               	clrf	(btemp+9)^0,c
 16851  01017C  500B               	movf	(btemp+10)^0,w,c
 16852  01017E  2609               	addwf	(btemp+8)^0,f,c
 16853  010180  500C               	movf	(btemp+11)^0,w,c
 16854  010182  220A               	addwfc	(btemp+9)^0,f,c
 16855  010184  500A               	movf	(btemp+9)^0,w,c
 16856  010186  E106               	bnz	u11240
 16857  010188  0E1A               	movlw	26
 16858  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16859  01018C  B0D8               	btfsc	status,0,c
 16860  01018E  D002               	goto	u11240
 16861  010190  0E01               	movlw	1
 16862  010192  D001               	goto	u11250
 16863  010194                     u11240:
 16864  010194  0E00               	movlw	0
 16865  010196                     u11250:
 16866  010196  6E0B               	movwf	(btemp+10)^0,c
 16867  010198  6A0C               	clrf	(btemp+11)^0,c
 16868                           
 16869                           ;stkvar	_efgtoa$5755 @ sp[(-56)+8]
 16870  01019A  0ED0               	movlw	-48
 16871  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16872  0101A2  0ED1               	movlw	-47
 16873  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16874                           
 16875                           ;stkvar	_efgtoa$5755 @ sp[(-56)+8]
 16876  0101AA  0ED0               	movlw	-48
 16877  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16878  0101B2  0ED1               	movlw	-47
 16879  0101B4  50E3               	movf	plusw1,w,c
 16880  0101B6  1001               	iorwf	btemp^0,w,c
 16881  0101B8  B4D8               	btfsc	status,2,c
 16882  0101BA  D017               	goto	l12313
 16883                           
 16884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16885  0101BC  0ED7               	movlw	low STR_65
 16886  0101BE  6EE6               	movwf	postinc1,c
 16887  0101C0  0EFF               	movlw	high STR_65
 16888  0101C2  6EE6               	movwf	postinc1,c
 16889                           
 16890                           ;stkvar	_n @ sp[(-58)+32]
 16891  0101C4  0E97               	movlw	low _dbuf
 16892  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16893  0101C8  0E02               	movlw	high _dbuf
 16894  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16895  0101CC  0EE6               	movlw	-26
 16896  0101CE  50E3               	movf	plusw1,w,c
 16897  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16898  0101D2  0EE7               	movlw	-25
 16899  0101D4  50E3               	movf	plusw1,w,c
 16900  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16901  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16902  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16903  0101E4  ECF9  F0D1         	call	_strcpy	;wreg free
 16904                           
 16905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16906  0101E8  D016               	goto	l12315
 16907  0101EA                     l12313:
 16908                           
 16909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16910  0101EA  0EDF               	movlw	low STR_66
 16911  0101EC  6EE6               	movwf	postinc1,c
 16912  0101EE  0EFF               	movlw	high STR_66
 16913  0101F0  6EE6               	movwf	postinc1,c
 16914                           
 16915                           ;stkvar	_n @ sp[(-58)+32]
 16916  0101F2  0E97               	movlw	low _dbuf
 16917  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16918  0101F6  0E02               	movlw	high _dbuf
 16919  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16920  0101FA  0EE6               	movlw	-26
 16921  0101FC  50E3               	movf	plusw1,w,c
 16922  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16923  010200  0EE7               	movlw	-25
 16924  010202  50E3               	movf	plusw1,w,c
 16925  010204  220C               	addwfc	(btemp+11)^0,f,c
 16926  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16927  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16928  010212  ECF9  F0D1         	call	_strcpy	;wreg free
 16929  010216                     l12315:
 16930                           
 16931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16932                           ;stkvar	_w @ sp[(-56)+38]
 16933  010216  50E1               	movf	fsr1l,w,c
 16934  010218  0FEE               	addlw	-18
 16935  01021A  6ED9               	movwf	fsr2l,c
 16936  01021C  50E2               	movf	fsr1h,w,c
 16937  01021E  6EDA               	movwf	fsr2h,c
 16938  010220  0EFF               	movlw	255
 16939  010222  22DA               	addwfc	fsr2h,f,c
 16940  010224  0EFD               	movlw	253
 16941  010226  26DE               	addwf	postinc2,f,c
 16942  010228  0EFF               	movlw	255
 16943  01022A  22DD               	addwfc	postdec2,f,c
 16944  01022C                     l12317:
 16945                           
 16946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16947                           ;stkvar	_w @ sp[(-56)+38]
 16948  01022C  0EEE               	movlw	-18
 16949  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16950  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16951  01023A  0E97               	movlw	low _dbuf
 16952  01023C  6EE6               	movwf	postinc1,c
 16953  01023E  0E02               	movlw	high _dbuf
 16954  010240  6EE6               	movwf	postinc1,c
 16955                           
 16956                           ;stkvar	_fp @ sp[(-60)+-2]
 16957  010242  0EC2               	movlw	-62
 16958  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16959  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16960  010250  EC90  F0CE         	call	_pad	;wreg free
 16961  010254  EF1D  F089         	goto	l2277
 16962  010258                     l12321:
 16963                           
 16964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16965                           ;stkvar	_g @ sp[(-56)+16]
 16966  010258  0ED8               	movlw	-40
 16967  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16968  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16969  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16970  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16971  010272  EC03  F0C6         	call	___fpclassifyf	;wreg free
 16972  010276  5001               	movf	btemp^0,w,c
 16973  010278  1002               	iorwf	(btemp+1)^0,w,c
 16974  01027A  A4D8               	btfss	status,2,c
 16975  01027C  D056               	goto	l12339
 16976  01027E  0EBF               	movlw	191
 16977  010280  6E0B               	movwf	(btemp+10)^0,c
 16978  010282  0EFF               	movlw	255
 16979  010284  6E0C               	movwf	(btemp+11)^0,c
 16980                           
 16981                           ;stkvar	_c @ sp[(-56)+-7]
 16982  010286  0EC1               	movlw	-63
 16983  010288  50E3               	movf	plusw1,w,c
 16984  01028A  6E09               	movwf	(btemp+8)^0,c
 16985  01028C  6A0A               	clrf	(btemp+9)^0,c
 16986  01028E  500B               	movf	(btemp+10)^0,w,c
 16987  010290  2609               	addwf	(btemp+8)^0,f,c
 16988  010292  500C               	movf	(btemp+11)^0,w,c
 16989  010294  220A               	addwfc	(btemp+9)^0,f,c
 16990  010296  500A               	movf	(btemp+9)^0,w,c
 16991  010298  E106               	bnz	u11280
 16992  01029A  0E1A               	movlw	26
 16993  01029C  5C09               	subwf	(btemp+8)^0,w,c
 16994  01029E  B0D8               	btfsc	status,0,c
 16995  0102A0  D002               	goto	u11280
 16996  0102A2  0E01               	movlw	1
 16997  0102A4  D001               	goto	u11290
 16998  0102A6                     u11280:
 16999  0102A6  0E00               	movlw	0
 17000  0102A8                     u11290:
 17001  0102A8  6E0B               	movwf	(btemp+10)^0,c
 17002  0102AA  6A0C               	clrf	(btemp+11)^0,c
 17003                           
 17004                           ;stkvar	_efgtoa$5759 @ sp[(-56)+6]
 17005  0102AC  0ECE               	movlw	-50
 17006  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17007  0102B4  0ECF               	movlw	-49
 17008  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17009                           
 17010                           ;stkvar	_efgtoa$5759 @ sp[(-56)+6]
 17011  0102BC  0ECE               	movlw	-50
 17012  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 17013  0102C4  0ECF               	movlw	-49
 17014  0102C6  50E3               	movf	plusw1,w,c
 17015  0102C8  1001               	iorwf	btemp^0,w,c
 17016  0102CA  B4D8               	btfsc	status,2,c
 17017  0102CC  D017               	goto	l12331
 17018                           
 17019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 17020  0102CE  0EDB               	movlw	low STR_69
 17021  0102D0  6EE6               	movwf	postinc1,c
 17022  0102D2  0EFF               	movlw	high STR_69
 17023  0102D4  6EE6               	movwf	postinc1,c
 17024                           
 17025                           ;stkvar	_n @ sp[(-58)+32]
 17026  0102D6  0E97               	movlw	low _dbuf
 17027  0102D8  6E0B               	movwf	(btemp+10)^0,c
 17028  0102DA  0E02               	movlw	high _dbuf
 17029  0102DC  6E0C               	movwf	(btemp+11)^0,c
 17030  0102DE  0EE6               	movlw	-26
 17031  0102E0  50E3               	movf	plusw1,w,c
 17032  0102E2  260B               	addwf	(btemp+10)^0,f,c
 17033  0102E4  0EE7               	movlw	-25
 17034  0102E6  50E3               	movf	plusw1,w,c
 17035  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 17036  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17037  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 17038  0102F6  ECF9  F0D1         	call	_strcpy	;wreg free
 17039                           
 17040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 17041  0102FA  D78D               	goto	l12315
 17042  0102FC                     l12331:
 17043                           
 17044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 17045  0102FC  0EE3               	movlw	low STR_70
 17046  0102FE  6EE6               	movwf	postinc1,c
 17047  010300  0EFF               	movlw	high STR_70
 17048  010302  6EE6               	movwf	postinc1,c
 17049                           
 17050                           ;stkvar	_n @ sp[(-58)+32]
 17051  010304  0E97               	movlw	low _dbuf
 17052  010306  6E0B               	movwf	(btemp+10)^0,c
 17053  010308  0E02               	movlw	high _dbuf
 17054  01030A  6E0C               	movwf	(btemp+11)^0,c
 17055  01030C  0EE6               	movlw	-26
 17056  01030E  50E3               	movf	plusw1,w,c
 17057  010310  260B               	addwf	(btemp+10)^0,f,c
 17058  010312  0EE7               	movlw	-25
 17059  010314  50E3               	movf	plusw1,w,c
 17060  010316  220C               	addwfc	(btemp+11)^0,f,c
 17061  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17062  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17063  010324  ECF9  F0D1         	call	_strcpy	;wreg free
 17064  010328  D776               	goto	l12315
 17065  01032A                     l12339:
 17066                           
 17067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 17068  01032A  0E00               	movlw	0
 17069  01032C  6E09               	movwf	(btemp+8)^0,c
 17070  01032E  0E00               	movlw	0
 17071  010330  6E0A               	movwf	(btemp+9)^0,c
 17072  010332  0E80               	movlw	128
 17073  010334  6E0B               	movwf	(btemp+10)^0,c
 17074  010336  0E3F               	movlw	63
 17075  010338  6E0C               	movwf	(btemp+11)^0,c
 17076                           
 17077                           ;stkvar	_u @ sp[(-56)+12]
 17078  01033A  0ED4               	movlw	-44
 17079  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 17080  010342  0ED5               	movlw	-43
 17081  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17082  01034A  0ED6               	movlw	-42
 17083  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17084  010352  0ED7               	movlw	-41
 17085  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 17086                           
 17087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 17088                           ;stkvar	_e @ sp[(-56)+34]
 17089  01035A  0EEA               	movlw	-22
 17090  01035C  6AE3               	clrf	plusw1,c
 17091  01035E  0EEB               	movlw	-21
 17092  010360  6AE3               	clrf	plusw1,c
 17093                           
 17094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 17095  010362  0E00               	movlw	0
 17096  010364  6EE6               	movwf	postinc1,c
 17097  010366  0E00               	movlw	0
 17098  010368  6EE6               	movwf	postinc1,c
 17099  01036A  0E00               	movlw	0
 17100  01036C  6EE6               	movwf	postinc1,c
 17101  01036E  0E00               	movlw	0
 17102  010370  6EE6               	movwf	postinc1,c
 17103                           
 17104                           ;stkvar	_g @ sp[(-60)+16]
 17105  010372  0ED4               	movlw	-44
 17106  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 17107  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 17108  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 17109  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 17110  01038C  EC33  F0D3         	call	___fleq	;wreg free
 17111  010390  A001               	btfss	btemp& (0+255),0,c
 17112  010392  D039               	goto	l12351
 17113  010394  D0BC               	goto	u11330
 17114  010396                     l12347:
 17115                           
 17116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 17117  010396  0E00               	movlw	0
 17118  010398  6EE6               	movwf	postinc1,c
 17119  01039A  0E00               	movlw	0
 17120  01039C  6EE6               	movwf	postinc1,c
 17121  01039E  0E20               	movlw	32
 17122  0103A0  6EE6               	movwf	postinc1,c
 17123  0103A2  0E41               	movlw	65
 17124  0103A4  6EE6               	movwf	postinc1,c
 17125                           
 17126                           ;stkvar	_u @ sp[(-60)+12]
 17127  0103A6  0ED0               	movlw	-48
 17128  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17129  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17130  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 17131  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 17132  0103C0  ECE5  F09E         	call	___flmul	;wreg free
 17133                           
 17134                           ;stkvar	_u @ sp[(-56)+12]
 17135  0103C4  0ED4               	movlw	-44
 17136  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 17137  0103CC  0ED5               	movlw	-43
 17138  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17139  0103D4  0ED6               	movlw	-42
 17140  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17141  0103DC  0ED7               	movlw	-41
 17142  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17143                           
 17144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 17145                           ;stkvar	_e @ sp[(-56)+34]
 17146  0103E4  0EEA               	movlw	-22
 17147  0103E6  50E3               	movf	plusw1,w,c
 17148  0103E8  0F01               	addlw	1
 17149  0103EA  6E01               	movwf	btemp^0,c
 17150  0103EC  0EEA               	movlw	-22
 17151  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 17152  0103F4  6A01               	clrf	btemp^0,c
 17153  0103F6  0EEB               	movlw	-21
 17154  0103F8  50E3               	movf	plusw1,w,c
 17155  0103FA  2001               	addwfc	btemp^0,w,c
 17156  0103FC  6E01               	movwf	btemp^0,c
 17157  0103FE  0EEB               	movlw	-21
 17158  010400  0060  F007  FFE3   	movff	btemp,plusw1
 17159  010406                     l12351:
 17160                           
 17161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 17162  010406  0E00               	movlw	0
 17163  010408  6EE6               	movwf	postinc1,c
 17164  01040A  0E00               	movlw	0
 17165  01040C  6EE6               	movwf	postinc1,c
 17166  01040E  0E20               	movlw	32
 17167  010410  6EE6               	movwf	postinc1,c
 17168  010412  0E41               	movlw	65
 17169  010414  6EE6               	movwf	postinc1,c
 17170                           
 17171                           ;stkvar	_u @ sp[(-60)+12]
 17172  010416  0ED0               	movlw	-48
 17173  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 17174  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 17175  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 17176  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 17177  010430  ECE5  F09E         	call	___flmul	;wreg free
 17178  010434  0060  F007  FFE6   	movff	btemp,postinc1
 17179  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17180  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17181  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 17182                           
 17183                           ;stkvar	_g @ sp[(-60)+16]
 17184  01044C  0ED4               	movlw	-44
 17185  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 17186  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 17187  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 17188  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 17189  010466  EC0A  F0C9         	call	___flge	;wreg free
 17190  01046A  A001               	btfss	btemp& (0+255),0,c
 17191  01046C  D032               	goto	l12357
 17192  01046E  D793               	goto	l12347
 17193  010470                     l12353:
 17194                           
 17195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 17196  010470  0E00               	movlw	0
 17197  010472  6EE6               	movwf	postinc1,c
 17198  010474  0E00               	movlw	0
 17199  010476  6EE6               	movwf	postinc1,c
 17200  010478  0E20               	movlw	32
 17201  01047A  6EE6               	movwf	postinc1,c
 17202  01047C  0E41               	movlw	65
 17203  01047E  6EE6               	movwf	postinc1,c
 17204                           
 17205                           ;stkvar	_u @ sp[(-60)+12]
 17206  010480  0ED0               	movlw	-48
 17207  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 17208  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 17209  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 17210  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 17211  01049A  ECD8  F0A6         	call	___fldiv	;wreg free
 17212                           
 17213                           ;stkvar	_u @ sp[(-56)+12]
 17214  01049E  0ED4               	movlw	-44
 17215  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 17216  0104A6  0ED5               	movlw	-43
 17217  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17218  0104AE  0ED6               	movlw	-42
 17219  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17220  0104B6  0ED7               	movlw	-41
 17221  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17222                           
 17223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 17224                           ;stkvar	_e @ sp[(-56)+34]
 17225  0104BE  50E1               	movf	fsr1l,w,c
 17226  0104C0  0FEA               	addlw	-22
 17227  0104C2  6ED9               	movwf	fsr2l,c
 17228  0104C4  50E2               	movf	fsr1h,w,c
 17229  0104C6  6EDA               	movwf	fsr2h,c
 17230  0104C8  0EFF               	movlw	255
 17231  0104CA  22DA               	addwfc	fsr2h,f,c
 17232  0104CC  06DE               	decf	postinc2,f,c
 17233  0104CE  0E00               	movlw	0
 17234  0104D0  5ADD               	subwfb	postdec2,f,c
 17235  0104D2                     l12357:
 17236                           
 17237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 17238                           ;stkvar	_u @ sp[(-56)+12]
 17239  0104D2  0ED4               	movlw	-44
 17240  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17241  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17242  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 17243  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 17244                           
 17245                           ;stkvar	_g @ sp[(-60)+16]
 17246  0104EC  0ED4               	movlw	-44
 17247  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17248  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17249  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 17250  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 17251  010506  EC0A  F0C9         	call	___flge	;wreg free
 17252  01050A  A001               	btfss	btemp& (0+255),0,c
 17253  01050C  D7B1               	goto	l12353
 17254  01050E                     u11330:
 17255                           
 17256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 17257                           ;stkvar	_c @ sp[(-56)+-7]
 17258  01050E  0EC1               	movlw	-63
 17259  010510  50E3               	movf	plusw1,w,c
 17260  010512  6EE6               	movwf	postinc1,c
 17261  010514  0E00               	movlw	0
 17262  010516  6EE6               	movwf	postinc1,c
 17263  010518  EC04  F0D8         	call	_tolower	;wreg free
 17264                           
 17265                           ;stkvar	_mode @ sp[(-56)+54]
 17266  01051C  0EFE               	movlw	-2
 17267  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 17268                           
 17269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 17270                           ;stkvar	_mode @ sp[(-56)+54]
 17271                           ;stkvar	_nmode @ sp[(-56)+55]
 17272  010524  0EFE               	movlw	-2
 17273  010526  006F FF8C  F001    	movff	plusw1,btemp
 17274  01052C  0EFF               	movlw	-1
 17275  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 17276                           
 17277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 17278                           ;stkvar	_mode @ sp[(-56)+54]
 17279  010534  0EFE               	movlw	-2
 17280  010536  006F FF8C  F001    	movff	plusw1,btemp
 17281  01053C  0E67               	movlw	103
 17282  01053E  1801               	xorwf	btemp^0,w,c
 17283  010540  A4D8               	btfss	status,2,c
 17284  010542  D025               	goto	l12375
 17285                           
 17286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 17287  010544  503C               	movf	_prec^0,w,c
 17288  010546  103D               	iorwf	(_prec+1)^0,w,c
 17289  010548  A4D8               	btfss	status,2,c
 17290  01054A  D004               	goto	l12369
 17291                           
 17292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 17293  01054C  0E00               	movlw	0
 17294  01054E  6E3D               	movwf	(_prec+1)^0,c
 17295  010550  0E01               	movlw	1
 17296  010552  6E3C               	movwf	_prec^0,c
 17297  010554                     l12369:
 17298                           
 17299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 17300  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 17301  010556  D005               	goto	u11360
 17302  010558  503D               	movf	(_prec+1)^0,w,c
 17303  01055A  E110               	bnz	l12373
 17304  01055C  043C               	decf	_prec^0,w,c
 17305  01055E  B0D8               	btfsc	status,0,c
 17306  010560  D00D               	goto	l12373
 17307  010562                     u11360:
 17308  010562  0E06               	movlw	6
 17309  010564  6E0B               	movwf	(btemp+10)^0,c
 17310  010566  0E00               	movlw	0
 17311  010568  6E0C               	movwf	(btemp+11)^0,c
 17312                           
 17313                           ;stkvar	_p @ sp[(-56)+40]
 17314  01056A  0EF0               	movlw	-16
 17315  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17316  010572  0EF1               	movlw	-15
 17317  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 17318  01057A  D00C               	goto	l12381
 17319  01057C                     l12373:
 17320                           
 17321                           ;stkvar	_p @ sp[(-56)+40]
 17322  01057C  0EF0               	movlw	-16
 17323  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 17324  010584  0EF1               	movlw	-15
 17325  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17326  01058C  D003               	goto	l12381
 17327  01058E                     l12375:
 17328                           
 17329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 17330  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 17331  010590  D7F5               	goto	l12373
 17332  010592  D7E7               	goto	u11360
 17333  010594                     l12381:
 17334                           
 17335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 17336                           ;stkvar	_mode @ sp[(-56)+54]
 17337  010594  0EFE               	movlw	-2
 17338  010596  006F FF8C  F001    	movff	plusw1,btemp
 17339  01059C  0E67               	movlw	103
 17340  01059E  1801               	xorwf	btemp^0,w,c
 17341  0105A0  A4D8               	btfss	status,2,c
 17342  0105A2  D02F               	goto	l12391
 17343                           
 17344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 17345                           ;stkvar	_e @ sp[(-56)+34]
 17346  0105A4  0EEB               	movlw	-21
 17347  0105A6  AEE3               	btfss	plusw1,7,c
 17348  0105A8  D00E               	goto	u11390
 17349  0105AA  0EEA               	movlw	-22
 17350  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 17351  0105B2  0EFC               	movlw	252
 17352  0105B4  5E01               	subwf	btemp^0,f,c
 17353  0105B6  0EEB               	movlw	-21
 17354  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 17355  0105BE  0EFF               	movlw	255
 17356  0105C0  5A01               	subwfb	btemp^0,f,c
 17357  0105C2  A0D8               	btfss	status,0,c
 17358  0105C4  D018               	goto	l12389
 17359  0105C6                     u11390:
 17360                           
 17361                           ;stkvar	_e @ sp[(-56)+34]
 17362                           ;stkvar	_p @ sp[(-56)+40]
 17363  0105C6  0EF0               	movlw	-16
 17364  0105C8  50E3               	movf	plusw1,w,c
 17365  0105CA  0FFF               	addlw	255
 17366  0105CC  6E0B               	movwf	(btemp+10)^0,c
 17367  0105CE  0EF1               	movlw	-15
 17368  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17369  0105D6  0EFF               	movlw	255
 17370  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 17371  0105DA  0EEA               	movlw	-22
 17372  0105DC  50E3               	movf	plusw1,w,c
 17373  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 17374  0105E0  500C               	movf	(btemp+11)^0,w,c
 17375  0105E2  0A80               	xorlw	128
 17376  0105E4  6E01               	movwf	btemp^0,c
 17377  0105E6  0EEB               	movlw	-21
 17378  0105E8  50E3               	movf	plusw1,w,c
 17379  0105EA  0A80               	xorlw	128
 17380  0105EC  5801               	subwfb	btemp^0,w,c
 17381  0105EE  A0D8               	btfss	status,0,c
 17382  0105F0  D002               	goto	l12389
 17383                           
 17384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 17385  0105F2  0E66               	movlw	102
 17386  0105F4  D001               	goto	L18
 17387  0105F6                     l12389:
 17388                           
 17389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 17390  0105F6  0E65               	movlw	101
 17391  0105F8                     L18:
 17392  0105F8  6E0C               	movwf	(btemp+11)^0,c
 17393                           
 17394                           ;stkvar	_nmode @ sp[(-56)+55]
 17395  0105FA  0EFF               	movlw	-1
 17396  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17397  010602                     l12391:
 17398                           
 17399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 17400                           ;stkvar	_p @ sp[(-56)+40]
 17401                           ;stkvar	_m @ sp[(-56)+48]
 17402  010602  0EF0               	movlw	-16
 17403  010604  006F FF8C  F001    	movff	plusw1,btemp
 17404  01060A  0EF8               	movlw	-8
 17405  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 17406  010612  0EF1               	movlw	-15
 17407  010614  006F FF8C  F001    	movff	plusw1,btemp
 17408  01061A  0EF9               	movlw	-7
 17409  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 17410                           
 17411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 17412                           ;stkvar	_mode @ sp[(-56)+54]
 17413  010622  0EFE               	movlw	-2
 17414  010624  006F FF8C  F001    	movff	plusw1,btemp
 17415  01062A  0E67               	movlw	103
 17416  01062C  1801               	xorwf	btemp^0,w,c
 17417  01062E  A4D8               	btfss	status,2,c
 17418  010630  D00B               	goto	u11430
 17419                           
 17420                           ;stkvar	_nmode @ sp[(-56)+55]
 17421  010632  0EFF               	movlw	-1
 17422  010634  006F FF8C  F001    	movff	plusw1,btemp
 17423  01063A  0E66               	movlw	102
 17424  01063C  1801               	xorwf	btemp^0,w,c
 17425  01063E  A4D8               	btfss	status,2,c
 17426  010640  D014               	goto	l2306
 17427                           
 17428                           ;stkvar	_e @ sp[(-56)+34]
 17429  010642  0EEB               	movlw	-21
 17430  010644  AEE3               	btfss	plusw1,7,c
 17431  010646  D011               	goto	l2306
 17432  010648                     u11430:
 17433                           
 17434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 17435                           ;stkvar	_m @ sp[(-56)+48]
 17436  010648  0EF8               	movlw	-8
 17437  01064A  50E3               	movf	plusw1,w,c
 17438  01064C  0F01               	addlw	1
 17439  01064E  6E01               	movwf	btemp^0,c
 17440  010650  0EF8               	movlw	-8
 17441  010652  0060  F007  FFE3   	movff	btemp,plusw1
 17442  010658  6A01               	clrf	btemp^0,c
 17443  01065A  0EF9               	movlw	-7
 17444  01065C  50E3               	movf	plusw1,w,c
 17445  01065E  2001               	addwfc	btemp^0,w,c
 17446  010660  6E01               	movwf	btemp^0,c
 17447  010662  0EF9               	movlw	-7
 17448  010664  0060  F007  FFE3   	movff	btemp,plusw1
 17449  01066A                     l2306:
 17450                           
 17451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 17452                           ;stkvar	_nmode @ sp[(-56)+55]
 17453  01066A  0EFF               	movlw	-1
 17454  01066C  006F FF8C  F001    	movff	plusw1,btemp
 17455  010672  0E66               	movlw	102
 17456  010674  1801               	xorwf	btemp^0,w,c
 17457  010676  A4D8               	btfss	status,2,c
 17458  010678  D03B               	goto	l12411
 17459                           
 17460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 17461                           ;stkvar	_e @ sp[(-56)+34]
 17462  01067A  0EEB               	movlw	-21
 17463  01067C  AEE3               	btfss	plusw1,7,c
 17464  01067E  D01C               	goto	l12407
 17465                           
 17466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 17467  010680  0E00               	movlw	0
 17468  010682  6E09               	movwf	(btemp+8)^0,c
 17469  010684  0E00               	movlw	0
 17470  010686  6E0A               	movwf	(btemp+9)^0,c
 17471  010688  0E80               	movlw	128
 17472  01068A  6E0B               	movwf	(btemp+10)^0,c
 17473  01068C  0E3F               	movlw	63
 17474  01068E  6E0C               	movwf	(btemp+11)^0,c
 17475                           
 17476                           ;stkvar	_u @ sp[(-56)+12]
 17477  010690  0ED4               	movlw	-44
 17478  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 17479  010698  0ED5               	movlw	-43
 17480  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17481  0106A0  0ED6               	movlw	-42
 17482  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17483  0106A8  0ED7               	movlw	-41
 17484  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17485                           
 17486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 17487                           ;stkvar	_e @ sp[(-56)+34]
 17488  0106B0  0EEA               	movlw	-22
 17489  0106B2  6AE3               	clrf	plusw1,c
 17490  0106B4  0EEB               	movlw	-21
 17491  0106B6  6AE3               	clrf	plusw1,c
 17492  0106B8                     l12407:
 17493                           
 17494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 17495                           ;stkvar	_mode @ sp[(-56)+54]
 17496  0106B8  0EFE               	movlw	-2
 17497  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 17498  0106C0  0E67               	movlw	103
 17499  0106C2  1801               	xorwf	btemp^0,w,c
 17500  0106C4  B4D8               	btfsc	status,2,c
 17501  0106C6  D014               	goto	l12411
 17502                           
 17503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 17504                           ;stkvar	_e @ sp[(-56)+34]
 17505                           ;stkvar	_m @ sp[(-56)+48]
 17506  0106C8  0EF8               	movlw	-8
 17507  0106CA  50E3               	movf	plusw1,w,c
 17508  0106CC  6E01               	movwf	btemp^0,c
 17509  0106CE  0EEA               	movlw	-22
 17510  0106D0  50E3               	movf	plusw1,w,c
 17511  0106D2  2601               	addwf	btemp^0,f,c
 17512  0106D4  0EF8               	movlw	-8
 17513  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 17514  0106DC  0EF9               	movlw	-7
 17515  0106DE  50E3               	movf	plusw1,w,c
 17516  0106E0  6E01               	movwf	btemp^0,c
 17517  0106E2  0EEB               	movlw	-21
 17518  0106E4  50E3               	movf	plusw1,w,c
 17519  0106E6  2201               	addwfc	btemp^0,f,c
 17520  0106E8  0EF9               	movlw	-7
 17521  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 17522  0106F0                     l12411:
 17523                           
 17524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 17525                           ;stkvar	_i @ sp[(-56)+36]
 17526  0106F0  0EEC               	movlw	-20
 17527  0106F2  6AE3               	clrf	plusw1,c
 17528  0106F4  0EED               	movlw	-19
 17529  0106F6  6AE3               	clrf	plusw1,c
 17530                           
 17531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 17532                           ;stkvar	_g @ sp[(-56)+16]
 17533  0106F8  0ED8               	movlw	-40
 17534  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 17535  010700  0ED9               	movlw	-39
 17536  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 17537  010708  0EDA               	movlw	-38
 17538  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17539  010710  0EDB               	movlw	-37
 17540  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 17541                           
 17542                           ;stkvar	_h @ sp[(-56)+24]
 17543  010718  0EE0               	movlw	-32
 17544  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17545  010720  0EE1               	movlw	-31
 17546  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17547  010728  0EE2               	movlw	-30
 17548  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17549  010730  0EE3               	movlw	-29
 17550  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 17551                           
 17552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 17553                           ;stkvar	_u @ sp[(-56)+12]
 17554  010738  0ED4               	movlw	-44
 17555  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 17556  010740  0ED5               	movlw	-43
 17557  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 17558  010748  0ED6               	movlw	-42
 17559  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17560  010750  0ED7               	movlw	-41
 17561  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 17562                           
 17563                           ;stkvar	_ou @ sp[(-56)+28]
 17564  010758  0EE4               	movlw	-28
 17565  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17566  010760  0EE5               	movlw	-27
 17567  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17568  010768  0EE6               	movlw	-26
 17569  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17570  010770  0EE7               	movlw	-25
 17571  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 17572                           
 17573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17574  010778  D0D6               	goto	l12427
 17575  01077A                     l12417:
 17576                           
 17577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 17578                           ;stkvar	_u @ sp[(-56)+12]
 17579  01077A  0ED4               	movlw	-44
 17580  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 17581  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 17582  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 17583  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 17584                           
 17585                           ;stkvar	_h @ sp[(-60)+24]
 17586  010794  0EDC               	movlw	-36
 17587  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 17588  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 17589  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17590  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17591  0107AE  ECD8  F0A6         	call	___fldiv	;wreg free
 17592  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 17593  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17594  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17595  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 17596  0107CA  EC62  F0B2         	call	_floorf	;wreg free
 17597                           
 17598                           ;stkvar	_l @ sp[(-56)+20]
 17599  0107CE  0EDC               	movlw	-36
 17600  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 17601  0107D6  0EDD               	movlw	-35
 17602  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17603  0107DE  0EDE               	movlw	-34
 17604  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17605  0107E6  0EDF               	movlw	-33
 17606  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17607                           
 17608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 17609                           ;stkvar	_l @ sp[(-56)+20]
 17610  0107EE  0EDC               	movlw	-36
 17611  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17612  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17613  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 17614  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 17615  010808  EC51  F0C8         	call	___fltol	;wreg free
 17616  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 17617  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 17618                           
 17619                           ;stkvar	_d @ sp[(-56)+44]
 17620  010818  0EF4               	movlw	-12
 17621  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17622  010820  0EF5               	movlw	-11
 17623  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 17624                           
 17625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 17626                           ;stkvar	_u @ sp[(-56)+12]
 17627  010828  0ED4               	movlw	-44
 17628  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 17629  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 17630  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 17631  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 17632                           
 17633                           ;stkvar	_l @ sp[(-60)+20]
 17634  010842  0ED8               	movlw	-40
 17635  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 17636  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 17637  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 17638  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 17639  01085C  ECE5  F09E         	call	___flmul	;wreg free
 17640  010860  0060  F007  FFE6   	movff	btemp,postinc1
 17641  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17642  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17643  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 17644                           
 17645                           ;stkvar	_h @ sp[(-60)+24]
 17646  010878  0EDC               	movlw	-36
 17647  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 17648  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 17649  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 17650  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 17651  010892  ECEE  F0DC         	call	___flsub	;wreg free
 17652                           
 17653                           ;stkvar	_h @ sp[(-56)+24]
 17654  010896  0EE0               	movlw	-32
 17655  010898  0060  F007  FFE3   	movff	btemp,plusw1
 17656  01089E  0EE1               	movlw	-31
 17657  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17658  0108A6  0EE2               	movlw	-30
 17659  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17660  0108AE  0EE3               	movlw	-29
 17661  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 17662                           
 17663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 17664  0108B6  0E00               	movlw	0
 17665  0108B8  6EE6               	movwf	postinc1,c
 17666  0108BA  0E00               	movlw	0
 17667  0108BC  6EE6               	movwf	postinc1,c
 17668  0108BE  0E20               	movlw	32
 17669  0108C0  6EE6               	movwf	postinc1,c
 17670  0108C2  0E41               	movlw	65
 17671  0108C4  6EE6               	movwf	postinc1,c
 17672                           
 17673                           ;stkvar	_u @ sp[(-60)+12]
 17674  0108C6  0ED0               	movlw	-48
 17675  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17676  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17677  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17678  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17679  0108E0  ECD8  F0A6         	call	___fldiv	;wreg free
 17680                           
 17681                           ;stkvar	_u @ sp[(-56)+12]
 17682  0108E4  0ED4               	movlw	-44
 17683  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 17684  0108EC  0ED5               	movlw	-43
 17685  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17686  0108F4  0ED6               	movlw	-42
 17687  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17688  0108FC  0ED7               	movlw	-41
 17689  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17690                           
 17691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 17692                           ;stkvar	_i @ sp[(-56)+36]
 17693  010904  0EEC               	movlw	-20
 17694  010906  50E3               	movf	plusw1,w,c
 17695  010908  0F01               	addlw	1
 17696  01090A  6E01               	movwf	btemp^0,c
 17697  01090C  0EEC               	movlw	-20
 17698  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 17699  010914  6A01               	clrf	btemp^0,c
 17700  010916  0EED               	movlw	-19
 17701  010918  50E3               	movf	plusw1,w,c
 17702  01091A  2001               	addwfc	btemp^0,w,c
 17703  01091C  6E01               	movwf	btemp^0,c
 17704  01091E  0EED               	movlw	-19
 17705  010920  0060  F007  FFE3   	movff	btemp,plusw1
 17706  010926                     l12427:
 17707                           
 17708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17709                           ;stkvar	_m @ sp[(-56)+48]
 17710                           ;stkvar	_i @ sp[(-56)+36]
 17711  010926  50E1               	movf	fsr1l,w,c
 17712  010928  0FEC               	addlw	-20
 17713  01092A  6ED9               	movwf	fsr2l,c
 17714  01092C  50E2               	movf	fsr1h,w,c
 17715  01092E  6EDA               	movwf	fsr2h,c
 17716  010930  0EFF               	movlw	255
 17717  010932  22DA               	addwfc	fsr2h,f,c
 17718  010934  0EF8               	movlw	-8
 17719  010936  50E3               	movf	plusw1,w,c
 17720  010938  5CDE               	subwf	postinc2,w,c
 17721  01093A  50DE               	movf	postinc2,w,c
 17722  01093C  0A80               	xorlw	128
 17723  01093E  6E01               	movwf	btemp^0,c
 17724  010940  0EF9               	movlw	-7
 17725  010942  50E3               	movf	plusw1,w,c
 17726  010944  0A80               	xorlw	128
 17727  010946  5801               	subwfb	btemp^0,w,c
 17728  010948  A0D8               	btfss	status,0,c
 17729  01094A  D717               	goto	l12417
 17730                           
 17731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 17732  01094C  0E00               	movlw	0
 17733  01094E  6EE6               	movwf	postinc1,c
 17734  010950  0E00               	movlw	0
 17735  010952  6EE6               	movwf	postinc1,c
 17736  010954  0EA0               	movlw	160
 17737  010956  6EE6               	movwf	postinc1,c
 17738  010958  0E40               	movlw	64
 17739  01095A  6EE6               	movwf	postinc1,c
 17740                           
 17741                           ;stkvar	_u @ sp[(-60)+12]
 17742  01095C  0ED0               	movlw	-48
 17743  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 17744  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 17745  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 17746  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 17747  010976  ECE5  F09E         	call	___flmul	;wreg free
 17748                           
 17749                           ;stkvar	_l @ sp[(-56)+20]
 17750  01097A  0EDC               	movlw	-36
 17751  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 17752  010982  0EDD               	movlw	-35
 17753  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17754  01098A  0EDE               	movlw	-34
 17755  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17756  010992  0EDF               	movlw	-33
 17757  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 17758                           
 17759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 17760                           ;stkvar	_l @ sp[(-56)+20]
 17761  01099A  0EDC               	movlw	-36
 17762  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 17763  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17764  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17765  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17766                           
 17767                           ;stkvar	_h @ sp[(-60)+24]
 17768  0109B4  0EDC               	movlw	-36
 17769  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17770  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 17771  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17772  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17773  0109CE  EC0A  F0C9         	call	___flge	;wreg free
 17774  0109D2  A001               	btfss	btemp& (0+255),0,c
 17775  0109D4  D021               	goto	u11500
 17776                           
 17777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 17778                           ;stkvar	_l @ sp[(-56)+20]
 17779                           
 17780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 17781                           
 17782                           ;stkvar	_l @ sp[(-56)+20]
 17783                           
 17784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17785  0109D6  0EDC               	movlw	-36
 17786  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17787  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17788  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17789  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17790                           
 17791                           ;stkvar	_h @ sp[(-60)+24]
 17792  0109F0  0EDC               	movlw	-36
 17793  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17794  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17795  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17796  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17797  010A0A  EC33  F0D3         	call	___fleq	;wreg free
 17798  010A0E  A001               	btfss	btemp& (0+255),0,c
 17799  010A10  D01B               	goto	l12441
 17800                           
 17801                           ;stkvar	_d @ sp[(-56)+44]
 17802  010A12  0EF4               	movlw	-12
 17803  010A14  B0E3               	btfsc	plusw1,0,c
 17804  010A16  D018               	goto	l12441
 17805  010A18                     u11500:
 17806                           
 17807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17808  010A18  0E00               	movlw	0
 17809  010A1A  6E09               	movwf	(btemp+8)^0,c
 17810  010A1C  0E00               	movlw	0
 17811  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17812  010A20  0E00               	movlw	0
 17813  010A22  6E0B               	movwf	(btemp+10)^0,c
 17814  010A24  0E00               	movlw	0
 17815  010A26  6E0C               	movwf	(btemp+11)^0,c
 17816                           
 17817                           ;stkvar	_l @ sp[(-56)+20]
 17818  010A28  0EDC               	movlw	-36
 17819  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17820  010A30  0EDD               	movlw	-35
 17821  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17822  010A38  0EDE               	movlw	-34
 17823  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17824  010A40  0EDF               	movlw	-33
 17825  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17826  010A48                     l12441:
 17827                           
 17828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17829                           ;stkvar	_l @ sp[(-56)+20]
 17830  010A48  0EDC               	movlw	-36
 17831  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17832  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17833  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17834  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17835                           
 17836                           ;stkvar	_g @ sp[(-60)+16]
 17837  010A62  0ED4               	movlw	-44
 17838  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17839  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17840  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17841  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17842  010A7C  ECFA  F0A2         	call	___fladd	;wreg free
 17843                           
 17844                           ;stkvar	_h @ sp[(-56)+24]
 17845  010A80  0EE0               	movlw	-32
 17846  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17847  010A88  0EE1               	movlw	-31
 17848  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17849  010A90  0EE2               	movlw	-30
 17850  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17851  010A98  0EE3               	movlw	-29
 17852  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17853                           
 17854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17855                           ;stkvar	_ou @ sp[(-56)+28]
 17856  010AA0  0EE4               	movlw	-28
 17857  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17858  010AA8  0EE5               	movlw	-27
 17859  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17860  010AB0  0EE6               	movlw	-26
 17861  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17862  010AB8  0EE7               	movlw	-25
 17863  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17864                           
 17865                           ;stkvar	_u @ sp[(-56)+12]
 17866  010AC0  0ED4               	movlw	-44
 17867  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17868  010AC8  0ED5               	movlw	-43
 17869  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17870  010AD0  0ED6               	movlw	-42
 17871  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17872  010AD8  0ED7               	movlw	-41
 17873  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17874                           
 17875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17876                           ;stkvar	_nmode @ sp[(-56)+55]
 17877  010AE0  0EFF               	movlw	-1
 17878  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17879  010AE8  0E65               	movlw	101
 17880  010AEA  1801               	xorwf	btemp^0,w,c
 17881  010AEC  B4D8               	btfsc	status,2,c
 17882  010AEE  D011               	goto	l12449
 17883                           
 17884                           ;stkvar	_e @ sp[(-56)+34]
 17885                           ;stkvar	_ne @ sp[(-56)+46]
 17886  010AF0  0EEA               	movlw	-22
 17887  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17888  010AF8  0EF6               	movlw	-10
 17889  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17890  010B00  0EEB               	movlw	-21
 17891  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17892  010B08  0EF7               	movlw	-9
 17893  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17894  010B10  D004               	goto	l2321
 17895  010B12                     l12449:
 17896                           
 17897                           ;stkvar	_ne @ sp[(-56)+46]
 17898  010B12  0EF6               	movlw	-10
 17899  010B14  6AE3               	clrf	plusw1,c
 17900  010B16  0EF7               	movlw	-9
 17901  010B18  6AE3               	clrf	plusw1,c
 17902  010B1A                     l2321:
 17903                           
 17904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17905                           ;stkvar	_pp @ sp[(-56)+50]
 17906  010B1A  0EFA               	movlw	-6
 17907  010B1C  6AE3               	clrf	plusw1,c
 17908  010B1E  0EFB               	movlw	-5
 17909  010B20  6AE3               	clrf	plusw1,c
 17910                           
 17911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17912                           ;stkvar	_t @ sp[(-56)+52]
 17913  010B22  0EFC               	movlw	-4
 17914  010B24  6AE3               	clrf	plusw1,c
 17915  010B26  0EFD               	movlw	-3
 17916  010B28  6AE3               	clrf	plusw1,c
 17917                           
 17918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17919                           ;stkvar	_i @ sp[(-56)+36]
 17920  010B2A  0EEC               	movlw	-20
 17921  010B2C  6AE3               	clrf	plusw1,c
 17922  010B2E  0EED               	movlw	-19
 17923  010B30  6AE3               	clrf	plusw1,c
 17924                           
 17925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17926  010B32  D1B7               	goto	l12501
 17927  010B34                     l12451:
 17928                           
 17929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17930                           ;stkvar	_u @ sp[(-56)+12]
 17931  010B34  0ED4               	movlw	-44
 17932  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17933  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17934  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17935  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17936                           
 17937                           ;stkvar	_h @ sp[(-60)+24]
 17938  010B4E  0EDC               	movlw	-36
 17939  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17940  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17941  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17942  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17943  010B68  ECD8  F0A6         	call	___fldiv	;wreg free
 17944  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17945  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17946  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17947  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17948  010B84  EC62  F0B2         	call	_floorf	;wreg free
 17949                           
 17950                           ;stkvar	_l @ sp[(-56)+20]
 17951  010B88  0EDC               	movlw	-36
 17952  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17953  010B90  0EDD               	movlw	-35
 17954  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17955  010B98  0EDE               	movlw	-34
 17956  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17957  010BA0  0EDF               	movlw	-33
 17958  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17959                           
 17960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17961                           ;stkvar	_l @ sp[(-56)+20]
 17962  010BA8  0EDC               	movlw	-36
 17963  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17964  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17965  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17966  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17967  010BC2  EC51  F0C8         	call	___fltol	;wreg free
 17968  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17969  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17970                           
 17971                           ;stkvar	_d @ sp[(-56)+44]
 17972  010BD2  0EF4               	movlw	-12
 17973  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17974  010BDA  0EF5               	movlw	-11
 17975  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17976                           
 17977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17978  010BE2  B83E               	btfsc	_flags^0,4,c
 17979  010BE4  D026               	goto	l12465
 17980                           
 17981                           ;stkvar	_d @ sp[(-56)+44]
 17982  010BE6  0EF4               	movlw	-12
 17983  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17984  010BEE  0EF5               	movlw	-11
 17985  010BF0  50E3               	movf	plusw1,w,c
 17986  010BF2  1001               	iorwf	btemp^0,w,c
 17987  010BF4  A4D8               	btfss	status,2,c
 17988  010BF6  D01D               	goto	l12465
 17989                           
 17990                           ;stkvar	_mode @ sp[(-56)+54]
 17991  010BF8  0EFE               	movlw	-2
 17992  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17993  010C00  0E67               	movlw	103
 17994  010C02  1801               	xorwf	btemp^0,w,c
 17995  010C04  A4D8               	btfss	status,2,c
 17996  010C06  D015               	goto	l12465
 17997                           
 17998                           ;stkvar	_ne @ sp[(-56)+46]
 17999  010C08  0EF7               	movlw	-9
 18000  010C0A  AEE3               	btfss	plusw1,7,c
 18001  010C0C  D012               	goto	l12465
 18002                           
 18003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 18004                           ;stkvar	_t @ sp[(-56)+52]
 18005  010C0E  0EFC               	movlw	-4
 18006  010C10  50E3               	movf	plusw1,w,c
 18007  010C12  0F01               	addlw	1
 18008  010C14  6E01               	movwf	btemp^0,c
 18009  010C16  0EFC               	movlw	-4
 18010  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 18011  010C1E  6A01               	clrf	btemp^0,c
 18012  010C20  0EFD               	movlw	-3
 18013  010C22  50E3               	movf	plusw1,w,c
 18014  010C24  2001               	addwfc	btemp^0,w,c
 18015  010C26  6E01               	movwf	btemp^0,c
 18016  010C28  0EFD               	movlw	-3
 18017  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 18018                           
 18019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 18020  010C30  D0AF               	goto	l12493
 18021  010C32                     l12465:
 18022                           
 18023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 18024                           ;stkvar	_pp @ sp[(-56)+50]
 18025  010C32  0EFA               	movlw	-6
 18026  010C34  006F FF8C  F001    	movff	plusw1,btemp
 18027  010C3A  0EFB               	movlw	-5
 18028  010C3C  50E3               	movf	plusw1,w,c
 18029  010C3E  1001               	iorwf	btemp^0,w,c
 18030  010C40  A4D8               	btfss	status,2,c
 18031  010C42  D070               	goto	l12485
 18032                           
 18033                           ;stkvar	_ne @ sp[(-56)+46]
 18034  010C44  0EF7               	movlw	-9
 18035  010C46  AEE3               	btfss	plusw1,7,c
 18036  010C48  D06D               	goto	l12485
 18037                           
 18038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 18039                           ;stkvar	_n @ sp[(-56)+32]
 18040  010C4A  0EE8               	movlw	-24
 18041  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18042  010C52  0EE9               	movlw	-23
 18043  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 18044  010C5A  0E97               	movlw	low _dbuf
 18045  010C5C  240B               	addwf	(btemp+10)^0,w,c
 18046  010C5E  6ED9               	movwf	fsr2l,c
 18047  010C60  0E02               	movlw	high _dbuf
 18048  010C62  200C               	addwfc	(btemp+11)^0,w,c
 18049  010C64  6EDA               	movwf	fsr2h,c
 18050  010C66  0E2E               	movlw	46
 18051  010C68  6EDF               	movwf	indf2,c
 18052                           
 18053                           ;stkvar	_n @ sp[(-56)+32]
 18054  010C6A  0EE8               	movlw	-24
 18055  010C6C  50E3               	movf	plusw1,w,c
 18056  010C6E  0F01               	addlw	1
 18057  010C70  6E01               	movwf	btemp^0,c
 18058  010C72  0EE8               	movlw	-24
 18059  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 18060  010C7A  6A01               	clrf	btemp^0,c
 18061  010C7C  0EE9               	movlw	-23
 18062  010C7E  50E3               	movf	plusw1,w,c
 18063  010C80  2001               	addwfc	btemp^0,w,c
 18064  010C82  6E01               	movwf	btemp^0,c
 18065  010C84  0EE9               	movlw	-23
 18066  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 18067                           
 18068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 18069                           ;stkvar	_w @ sp[(-56)+38]
 18070  010C8C  50E1               	movf	fsr1l,w,c
 18071  010C8E  0FEE               	addlw	-18
 18072  010C90  6ED9               	movwf	fsr2l,c
 18073  010C92  50E2               	movf	fsr1h,w,c
 18074  010C94  6EDA               	movwf	fsr2h,c
 18075  010C96  0EFF               	movlw	255
 18076  010C98  22DA               	addwfc	fsr2h,f,c
 18077  010C9A  06DE               	decf	postinc2,f,c
 18078  010C9C  0E00               	movlw	0
 18079  010C9E  5ADD               	subwfb	postdec2,f,c
 18080                           
 18081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 18082  010CA0  0E01               	movlw	1
 18083  010CA2  6E0B               	movwf	(btemp+10)^0,c
 18084  010CA4  0E00               	movlw	0
 18085  010CA6  6E0C               	movwf	(btemp+11)^0,c
 18086                           
 18087                           ;stkvar	_pp @ sp[(-56)+50]
 18088  010CA8  0EFA               	movlw	-6
 18089  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18090  010CB0  0EFB               	movlw	-5
 18091  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18092  010CB8  D035               	goto	l12485
 18093  010CBA                     l12477:
 18094                           
 18095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 18096                           ;stkvar	_n @ sp[(-56)+32]
 18097  010CBA  0EE8               	movlw	-24
 18098  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18099  010CC2  0EE9               	movlw	-23
 18100  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18101  010CCA  0E97               	movlw	low _dbuf
 18102  010CCC  240B               	addwf	(btemp+10)^0,w,c
 18103  010CCE  6ED9               	movwf	fsr2l,c
 18104  010CD0  0E02               	movlw	high _dbuf
 18105  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 18106  010CD4  6EDA               	movwf	fsr2h,c
 18107  010CD6  0E30               	movlw	48
 18108  010CD8  6EDF               	movwf	indf2,c
 18109                           
 18110                           ;stkvar	_n @ sp[(-56)+32]
 18111  010CDA  0EE8               	movlw	-24
 18112  010CDC  50E3               	movf	plusw1,w,c
 18113  010CDE  0F01               	addlw	1
 18114  010CE0  6E01               	movwf	btemp^0,c
 18115  010CE2  0EE8               	movlw	-24
 18116  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 18117  010CEA  6A01               	clrf	btemp^0,c
 18118  010CEC  0EE9               	movlw	-23
 18119  010CEE  50E3               	movf	plusw1,w,c
 18120  010CF0  2001               	addwfc	btemp^0,w,c
 18121  010CF2  6E01               	movwf	btemp^0,c
 18122  010CF4  0EE9               	movlw	-23
 18123  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 18124                           
 18125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 18126                           ;stkvar	_w @ sp[(-56)+38]
 18127  010CFC  50E1               	movf	fsr1l,w,c
 18128  010CFE  0FEE               	addlw	-18
 18129  010D00  6ED9               	movwf	fsr2l,c
 18130  010D02  50E2               	movf	fsr1h,w,c
 18131  010D04  6EDA               	movwf	fsr2h,c
 18132  010D06  0EFF               	movlw	255
 18133  010D08  22DA               	addwfc	fsr2h,f,c
 18134  010D0A  06DE               	decf	postinc2,f,c
 18135  010D0C  0E00               	movlw	0
 18136  010D0E  5ADD               	subwfb	postdec2,f,c
 18137                           
 18138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 18139                           ;stkvar	_t @ sp[(-56)+52]
 18140  010D10  50E1               	movf	fsr1l,w,c
 18141  010D12  0FFC               	addlw	-4
 18142  010D14  6ED9               	movwf	fsr2l,c
 18143  010D16  50E2               	movf	fsr1h,w,c
 18144  010D18  6EDA               	movwf	fsr2h,c
 18145  010D1A  0EFF               	movlw	255
 18146  010D1C  22DA               	addwfc	fsr2h,f,c
 18147  010D1E  06DE               	decf	postinc2,f,c
 18148  010D20  0E00               	movlw	0
 18149  010D22  5ADD               	subwfb	postdec2,f,c
 18150  010D24                     l12485:
 18151                           
 18152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 18153                           ;stkvar	_t @ sp[(-56)+52]
 18154  010D24  0EFC               	movlw	-4
 18155  010D26  006F FF8C  F001    	movff	plusw1,btemp
 18156  010D2C  0EFD               	movlw	-3
 18157  010D2E  50E3               	movf	plusw1,w,c
 18158  010D30  1001               	iorwf	btemp^0,w,c
 18159  010D32  A4D8               	btfss	status,2,c
 18160  010D34  D7C2               	goto	l12477
 18161                           
 18162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 18163                           ;stkvar	_n @ sp[(-56)+32]
 18164  010D36  0EE8               	movlw	-24
 18165  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18166  010D3E  0EE9               	movlw	-23
 18167  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18168  010D46  0E97               	movlw	low _dbuf
 18169  010D48  240B               	addwf	(btemp+10)^0,w,c
 18170  010D4A  6ED9               	movwf	fsr2l,c
 18171  010D4C  0E02               	movlw	high _dbuf
 18172  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 18173  010D50  6EDA               	movwf	fsr2h,c
 18174                           
 18175                           ;stkvar	_d @ sp[(-56)+44]
 18176  010D52  0EF4               	movlw	-12
 18177  010D54  50E3               	movf	plusw1,w,c
 18178  010D56  0F30               	addlw	48
 18179  010D58  6EDF               	movwf	indf2,c
 18180                           
 18181                           ;stkvar	_n @ sp[(-56)+32]
 18182  010D5A  0EE8               	movlw	-24
 18183  010D5C  50E3               	movf	plusw1,w,c
 18184  010D5E  0F01               	addlw	1
 18185  010D60  6E01               	movwf	btemp^0,c
 18186  010D62  0EE8               	movlw	-24
 18187  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 18188  010D6A  6A01               	clrf	btemp^0,c
 18189  010D6C  0EE9               	movlw	-23
 18190  010D6E  50E3               	movf	plusw1,w,c
 18191  010D70  2001               	addwfc	btemp^0,w,c
 18192  010D72  6E01               	movwf	btemp^0,c
 18193  010D74  0EE9               	movlw	-23
 18194  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 18195                           
 18196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 18197                           ;stkvar	_w @ sp[(-56)+38]
 18198  010D7C  50E1               	movf	fsr1l,w,c
 18199  010D7E  0FEE               	addlw	-18
 18200  010D80  6ED9               	movwf	fsr2l,c
 18201  010D82  50E2               	movf	fsr1h,w,c
 18202  010D84  6EDA               	movwf	fsr2h,c
 18203  010D86  0EFF               	movlw	255
 18204  010D88  22DA               	addwfc	fsr2h,f,c
 18205  010D8A  06DE               	decf	postinc2,f,c
 18206  010D8C  0E00               	movlw	0
 18207  010D8E  5ADD               	subwfb	postdec2,f,c
 18208  010D90                     l12493:
 18209                           
 18210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 18211                           ;stkvar	_u @ sp[(-56)+12]
 18212  010D90  0ED4               	movlw	-44
 18213  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 18214  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 18215  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 18216  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18217                           
 18218                           ;stkvar	_l @ sp[(-60)+20]
 18219  010DAA  0ED8               	movlw	-40
 18220  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 18221  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 18222  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 18223  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 18224  010DC4  ECE5  F09E         	call	___flmul	;wreg free
 18225  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 18226  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18227  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18228  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 18229                           
 18230                           ;stkvar	_h @ sp[(-60)+24]
 18231  010DE0  0EDC               	movlw	-36
 18232  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 18233  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 18234  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18235  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18236  010DFA  ECEE  F0DC         	call	___flsub	;wreg free
 18237                           
 18238                           ;stkvar	_h @ sp[(-56)+24]
 18239  010DFE  0EE0               	movlw	-32
 18240  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 18241  010E06  0EE1               	movlw	-31
 18242  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18243  010E0E  0EE2               	movlw	-30
 18244  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18245  010E16  0EE3               	movlw	-29
 18246  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 18247                           
 18248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 18249  010E1E  0E00               	movlw	0
 18250  010E20  6EE6               	movwf	postinc1,c
 18251  010E22  0E00               	movlw	0
 18252  010E24  6EE6               	movwf	postinc1,c
 18253  010E26  0E20               	movlw	32
 18254  010E28  6EE6               	movwf	postinc1,c
 18255  010E2A  0E41               	movlw	65
 18256  010E2C  6EE6               	movwf	postinc1,c
 18257                           
 18258                           ;stkvar	_u @ sp[(-60)+12]
 18259  010E2E  0ED0               	movlw	-48
 18260  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 18261  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 18262  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18263  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 18264  010E48  ECD8  F0A6         	call	___fldiv	;wreg free
 18265                           
 18266                           ;stkvar	_u @ sp[(-56)+12]
 18267  010E4C  0ED4               	movlw	-44
 18268  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 18269  010E54  0ED5               	movlw	-43
 18270  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18271  010E5C  0ED6               	movlw	-42
 18272  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18273  010E64  0ED7               	movlw	-41
 18274  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 18275                           
 18276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 18277                           ;stkvar	_ne @ sp[(-56)+46]
 18278  010E6C  50E1               	movf	fsr1l,w,c
 18279  010E6E  0FF6               	addlw	-10
 18280  010E70  6ED9               	movwf	fsr2l,c
 18281  010E72  50E2               	movf	fsr1h,w,c
 18282  010E74  6EDA               	movwf	fsr2h,c
 18283  010E76  0EFF               	movlw	255
 18284  010E78  22DA               	addwfc	fsr2h,f,c
 18285  010E7A  06DE               	decf	postinc2,f,c
 18286  010E7C  0E00               	movlw	0
 18287  010E7E  5ADD               	subwfb	postdec2,f,c
 18288                           
 18289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 18290                           ;stkvar	_i @ sp[(-56)+36]
 18291  010E80  0EEC               	movlw	-20
 18292  010E82  50E3               	movf	plusw1,w,c
 18293  010E84  0F01               	addlw	1
 18294  010E86  6E01               	movwf	btemp^0,c
 18295  010E88  0EEC               	movlw	-20
 18296  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 18297  010E90  6A01               	clrf	btemp^0,c
 18298  010E92  0EED               	movlw	-19
 18299  010E94  50E3               	movf	plusw1,w,c
 18300  010E96  2001               	addwfc	btemp^0,w,c
 18301  010E98  6E01               	movwf	btemp^0,c
 18302  010E9A  0EED               	movlw	-19
 18303  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 18304  010EA2                     l12501:
 18305                           
 18306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18307                           ;stkvar	_m @ sp[(-56)+48]
 18308                           ;stkvar	_i @ sp[(-56)+36]
 18309  010EA2  50E1               	movf	fsr1l,w,c
 18310  010EA4  0FEC               	addlw	-20
 18311  010EA6  6ED9               	movwf	fsr2l,c
 18312  010EA8  50E2               	movf	fsr1h,w,c
 18313  010EAA  6EDA               	movwf	fsr2h,c
 18314  010EAC  0EFF               	movlw	255
 18315  010EAE  22DA               	addwfc	fsr2h,f,c
 18316  010EB0  0EF8               	movlw	-8
 18317  010EB2  50E3               	movf	plusw1,w,c
 18318  010EB4  5CDE               	subwf	postinc2,w,c
 18319  010EB6  50DE               	movf	postinc2,w,c
 18320  010EB8  0A80               	xorlw	128
 18321  010EBA  6E01               	movwf	btemp^0,c
 18322  010EBC  0EF9               	movlw	-7
 18323  010EBE  50E3               	movf	plusw1,w,c
 18324  010EC0  0A80               	xorlw	128
 18325  010EC2  5801               	subwfb	btemp^0,w,c
 18326  010EC4  B0D8               	btfsc	status,0,c
 18327  010EC6  D00E               	goto	u11600
 18328                           
 18329                           ;stkvar	_n @ sp[(-56)+32]
 18330  010EC8  0EE9               	movlw	-23
 18331  010ECA  BEE3               	btfsc	plusw1,7,c
 18332  010ECC  D633               	goto	l12451
 18333  010ECE  0EE9               	movlw	-23
 18334  010ED0  50E3               	movf	plusw1,w,c
 18335  010ED2  E108               	bnz	u11600
 18336  010ED4  0EE8               	movlw	-24
 18337  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 18338  010EDC  0E4B               	movlw	75
 18339  010EDE  5E01               	subwf	btemp^0,f,c
 18340  010EE0  A0D8               	btfss	status,0,c
 18341  010EE2  D628               	goto	l12451
 18342  010EE4                     u11600:
 18343                           
 18344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 18345                           ;stkvar	_pp @ sp[(-56)+50]
 18346  010EE4  0EFA               	movlw	-6
 18347  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 18348  010EEC  0EFB               	movlw	-5
 18349  010EEE  50E3               	movf	plusw1,w,c
 18350  010EF0  1001               	iorwf	btemp^0,w,c
 18351  010EF2  B4D8               	btfsc	status,2,c
 18352  010EF4  A83E               	btfss	_flags^0,4,c
 18353  010EF6  D021               	goto	l12513
 18354                           
 18355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 18356                           ;stkvar	_n @ sp[(-56)+32]
 18357  010EF8  0EE8               	movlw	-24
 18358  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18359  010F00  0EE9               	movlw	-23
 18360  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 18361  010F08  0E97               	movlw	low _dbuf
 18362  010F0A  240B               	addwf	(btemp+10)^0,w,c
 18363  010F0C  6ED9               	movwf	fsr2l,c
 18364  010F0E  0E02               	movlw	high _dbuf
 18365  010F10  200C               	addwfc	(btemp+11)^0,w,c
 18366  010F12  6EDA               	movwf	fsr2h,c
 18367  010F14  0E2E               	movlw	46
 18368  010F16  6EDF               	movwf	indf2,c
 18369                           
 18370                           ;stkvar	_n @ sp[(-56)+32]
 18371  010F18  0EE8               	movlw	-24
 18372  010F1A  50E3               	movf	plusw1,w,c
 18373  010F1C  0F01               	addlw	1
 18374  010F1E  6E01               	movwf	btemp^0,c
 18375  010F20  0EE8               	movlw	-24
 18376  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 18377  010F28  6A01               	clrf	btemp^0,c
 18378  010F2A  0EE9               	movlw	-23
 18379  010F2C  50E3               	movf	plusw1,w,c
 18380  010F2E  2001               	addwfc	btemp^0,w,c
 18381  010F30  6E01               	movwf	btemp^0,c
 18382  010F32  0EE9               	movlw	-23
 18383  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 18384  010F3A                     l12513:
 18385                           
 18386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 18387                           ;stkvar	_n @ sp[(-56)+32]
 18388  010F3A  0EE8               	movlw	-24
 18389  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18390  010F42  0EE9               	movlw	-23
 18391  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 18392  010F4A  0E97               	movlw	low _dbuf
 18393  010F4C  240B               	addwf	(btemp+10)^0,w,c
 18394  010F4E  6ED9               	movwf	fsr2l,c
 18395  010F50  0E02               	movlw	high _dbuf
 18396  010F52  200C               	addwfc	(btemp+11)^0,w,c
 18397  010F54  6EDA               	movwf	fsr2h,c
 18398  010F56  0E00               	movlw	0
 18399  010F58  6EDF               	movwf	indf2,c
 18400                           
 18401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 18402                           ;stkvar	_nmode @ sp[(-56)+55]
 18403  010F5A  0EFF               	movlw	-1
 18404  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 18405  010F62  0E65               	movlw	101
 18406  010F64  1801               	xorwf	btemp^0,w,c
 18407  010F66  A4D8               	btfss	status,2,c
 18408  010F68  EF16  F081         	goto	l12317
 18409                           
 18410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 18411  010F6C  0E4F               	movlw	79
 18412  010F6E  6E0B               	movwf	(btemp+10)^0,c
 18413  010F70  0E00               	movlw	0
 18414  010F72  6E0C               	movwf	(btemp+11)^0,c
 18415                           
 18416                           ;stkvar	_i @ sp[(-56)+36]
 18417  010F74  0EEC               	movlw	-20
 18418  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18419  010F7C  0EED               	movlw	-19
 18420  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18421                           
 18422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 18423                           ;stkvar	_i @ sp[(-56)+36]
 18424  010F84  0EEC               	movlw	-20
 18425  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 18426  010F8C  0EED               	movlw	-19
 18427  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18428  010F94  0E97               	movlw	low _dbuf
 18429  010F96  240B               	addwf	(btemp+10)^0,w,c
 18430  010F98  6ED9               	movwf	fsr2l,c
 18431  010F9A  0E02               	movlw	high _dbuf
 18432  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 18433  010F9E  6EDA               	movwf	fsr2h,c
 18434  010FA0  0E00               	movlw	0
 18435  010FA2  6EDF               	movwf	indf2,c
 18436                           
 18437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 18438                           ;stkvar	_sign @ sp[(-56)+42]
 18439  010FA4  0EF2               	movlw	-14
 18440  010FA6  6AE3               	clrf	plusw1,c
 18441  010FA8  0EF3               	movlw	-13
 18442  010FAA  6AE3               	clrf	plusw1,c
 18443                           
 18444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 18445                           ;stkvar	_e @ sp[(-56)+34]
 18446  010FAC  0EEB               	movlw	-21
 18447  010FAE  AEE3               	btfss	plusw1,7,c
 18448  010FB0  D012               	goto	l12527
 18449                           
 18450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 18451  010FB2  0E01               	movlw	1
 18452  010FB4  6E0B               	movwf	(btemp+10)^0,c
 18453  010FB6  0E00               	movlw	0
 18454  010FB8  6E0C               	movwf	(btemp+11)^0,c
 18455                           
 18456                           ;stkvar	_sign @ sp[(-56)+42]
 18457  010FBA  0EF2               	movlw	-14
 18458  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18459  010FC2  0EF3               	movlw	-13
 18460  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18461                           
 18462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 18463                           ;stkvar	_e @ sp[(-56)+34]
 18464                           ;stkvar	_e @ sp[(-56)+34]
 18465  010FCA  0EEA               	movlw	-22
 18466  010FCC  6CE3               	negf	plusw1,c
 18467  010FCE  0EEB               	movlw	-21
 18468  010FD0  1EE3               	comf	plusw1,f,c
 18469  010FD2  B0D8               	btfsc	status,0,c
 18470  010FD4  2AE3               	incf	plusw1,f,c
 18471  010FD6                     l12527:
 18472                           
 18473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 18474  010FD6  0E02               	movlw	2
 18475  010FD8  6E0B               	movwf	(btemp+10)^0,c
 18476  010FDA  0E00               	movlw	0
 18477  010FDC  6E0C               	movwf	(btemp+11)^0,c
 18478                           
 18479                           ;stkvar	_p @ sp[(-56)+40]
 18480  010FDE  0EF0               	movlw	-16
 18481  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18482  010FE6  0EF1               	movlw	-15
 18483  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18484                           
 18485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18486  010FEE  D051               	goto	l12539
 18487  010FF0                     l12529:
 18488                           
 18489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 18490                           ;stkvar	_i @ sp[(-56)+36]
 18491  010FF0  50E1               	movf	fsr1l,w,c
 18492  010FF2  0FEC               	addlw	-20
 18493  010FF4  6ED9               	movwf	fsr2l,c
 18494  010FF6  50E2               	movf	fsr1h,w,c
 18495  010FF8  6EDA               	movwf	fsr2h,c
 18496  010FFA  0EFF               	movlw	255
 18497  010FFC  22DA               	addwfc	fsr2h,f,c
 18498  010FFE  06DE               	decf	postinc2,f,c
 18499  011000  0E00               	movlw	0
 18500  011002  5ADD               	subwfb	postdec2,f,c
 18501                           
 18502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 18503                           ;stkvar	_i @ sp[(-56)+36]
 18504  011004  0EEC               	movlw	-20
 18505  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 18506  01100C  0EED               	movlw	-19
 18507  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18508  011014  0E97               	movlw	low _dbuf
 18509  011016  240B               	addwf	(btemp+10)^0,w,c
 18510  011018  6ED9               	movwf	fsr2l,c
 18511  01101A  0E02               	movlw	high _dbuf
 18512  01101C  200C               	addwfc	(btemp+11)^0,w,c
 18513  01101E  6EDA               	movwf	fsr2h,c
 18514  011020  0E0A               	movlw	10
 18515  011022  6EE6               	movwf	postinc1,c
 18516  011024  0E00               	movlw	0
 18517  011026  6EE6               	movwf	postinc1,c
 18518                           
 18519                           ;stkvar	_e @ sp[(-58)+34]
 18520  011028  0EE8               	movlw	-24
 18521  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 18522  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 18523  011036  EC04  F0CE         	call	___awmod	;wreg free
 18524  01103A  5001               	movf	btemp^0,w,c
 18525  01103C  0F30               	addlw	48
 18526  01103E  6EDF               	movwf	indf2,c
 18527                           
 18528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 18529  011040  0E0A               	movlw	10
 18530  011042  6EE6               	movwf	postinc1,c
 18531  011044  0E00               	movlw	0
 18532  011046  6EE6               	movwf	postinc1,c
 18533                           
 18534                           ;stkvar	_e @ sp[(-58)+34]
 18535  011048  0EE8               	movlw	-24
 18536  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 18537  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 18538  011056  EC6D  F0CA         	call	___awdiv	;wreg free
 18539                           
 18540                           ;stkvar	_e @ sp[(-56)+34]
 18541  01105A  0EEA               	movlw	-22
 18542  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 18543  011062  0EEB               	movlw	-21
 18544  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18545                           
 18546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 18547                           ;stkvar	_p @ sp[(-56)+40]
 18548  01106A  50E1               	movf	fsr1l,w,c
 18549  01106C  0FF0               	addlw	-16
 18550  01106E  6ED9               	movwf	fsr2l,c
 18551  011070  50E2               	movf	fsr1h,w,c
 18552  011072  6EDA               	movwf	fsr2h,c
 18553  011074  0EFF               	movlw	255
 18554  011076  22DA               	addwfc	fsr2h,f,c
 18555  011078  06DE               	decf	postinc2,f,c
 18556  01107A  0E00               	movlw	0
 18557  01107C  5ADD               	subwfb	postdec2,f,c
 18558                           
 18559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 18560                           ;stkvar	_w @ sp[(-56)+38]
 18561  01107E  50E1               	movf	fsr1l,w,c
 18562  011080  0FEE               	addlw	-18
 18563  011082  6ED9               	movwf	fsr2l,c
 18564  011084  50E2               	movf	fsr1h,w,c
 18565  011086  6EDA               	movwf	fsr2h,c
 18566  011088  0EFF               	movlw	255
 18567  01108A  22DA               	addwfc	fsr2h,f,c
 18568  01108C  06DE               	decf	postinc2,f,c
 18569  01108E  0E00               	movlw	0
 18570  011090  5ADD               	subwfb	postdec2,f,c
 18571  011092                     l12539:
 18572                           
 18573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18574                           ;stkvar	_e @ sp[(-56)+34]
 18575  011092  0EEA               	movlw	-22
 18576  011094  006F FF8C  F001    	movff	plusw1,btemp
 18577  01109A  0EEB               	movlw	-21
 18578  01109C  50E3               	movf	plusw1,w,c
 18579  01109E  1001               	iorwf	btemp^0,w,c
 18580  0110A0  A4D8               	btfss	status,2,c
 18581  0110A2  D7A6               	goto	l12529
 18582                           
 18583                           ;stkvar	_p @ sp[(-56)+40]
 18584  0110A4  0EF1               	movlw	-15
 18585  0110A6  BEE3               	btfsc	plusw1,7,c
 18586  0110A8  D007               	goto	u11660
 18587  0110AA  0EF1               	movlw	-15
 18588  0110AC  50E3               	movf	plusw1,w,c
 18589  0110AE  E1A0               	bnz	l12529
 18590  0110B0  0EF0               	movlw	-16
 18591  0110B2  04E3               	decf	plusw1,w,c
 18592  0110B4  B0D8               	btfsc	status,0,c
 18593  0110B6  D79C               	goto	l12529
 18594  0110B8                     u11660:
 18595                           
 18596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 18597                           ;stkvar	_i @ sp[(-56)+36]
 18598  0110B8  50E1               	movf	fsr1l,w,c
 18599  0110BA  0FEC               	addlw	-20
 18600  0110BC  6ED9               	movwf	fsr2l,c
 18601  0110BE  50E2               	movf	fsr1h,w,c
 18602  0110C0  6EDA               	movwf	fsr2h,c
 18603  0110C2  0EFF               	movlw	255
 18604  0110C4  22DA               	addwfc	fsr2h,f,c
 18605  0110C6  06DE               	decf	postinc2,f,c
 18606  0110C8  0E00               	movlw	0
 18607  0110CA  5ADD               	subwfb	postdec2,f,c
 18608                           
 18609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 18610                           ;stkvar	_sign @ sp[(-56)+42]
 18611  0110CC  0EF2               	movlw	-14
 18612  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 18613  0110D4  0EF3               	movlw	-13
 18614  0110D6  50E3               	movf	plusw1,w,c
 18615  0110D8  1001               	iorwf	btemp^0,w,c
 18616  0110DA  A4D8               	btfss	status,2,c
 18617  0110DC  D002               	goto	l12549
 18618  0110DE  0E2B               	movlw	43
 18619  0110E0  D001               	goto	L19
 18620  0110E2                     l12549:
 18621  0110E2  0E2D               	movlw	45
 18622  0110E4                     L19:
 18623  0110E4  6E0B               	movwf	(btemp+10)^0,c
 18624  0110E6  0E00               	movlw	0
 18625  0110E8  6E0C               	movwf	(btemp+11)^0,c
 18626                           
 18627                           ;stkvar	_efgtoa$5763 @ sp[(-56)+4]
 18628  0110EA  0ECC               	movlw	-52
 18629  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18630  0110F2  0ECD               	movlw	-51
 18631  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18632                           
 18633                           ;stkvar	_efgtoa$5763 @ sp[(-56)+4]
 18634                           ;stkvar	_i @ sp[(-56)+36]
 18635  0110FA  0EEC               	movlw	-20
 18636  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18637  011102  0EED               	movlw	-19
 18638  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 18639  01110A  0E97               	movlw	low _dbuf
 18640  01110C  240B               	addwf	(btemp+10)^0,w,c
 18641  01110E  6ED9               	movwf	fsr2l,c
 18642  011110  0E02               	movlw	high _dbuf
 18643  011112  200C               	addwfc	(btemp+11)^0,w,c
 18644  011114  6EDA               	movwf	fsr2h,c
 18645  011116  0ECC               	movlw	-52
 18646  011118  006F FF8F FFDF     	movff	plusw1,indf2
 18647                           
 18648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 18649                           ;stkvar	_w @ sp[(-56)+38]
 18650  01111E  50E1               	movf	fsr1l,w,c
 18651  011120  0FEE               	addlw	-18
 18652  011122  6ED9               	movwf	fsr2l,c
 18653  011124  50E2               	movf	fsr1h,w,c
 18654  011126  6EDA               	movwf	fsr2h,c
 18655  011128  0EFF               	movlw	255
 18656  01112A  22DA               	addwfc	fsr2h,f,c
 18657  01112C  06DE               	decf	postinc2,f,c
 18658  01112E  0E00               	movlw	0
 18659  011130  5ADD               	subwfb	postdec2,f,c
 18660                           
 18661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 18662                           ;stkvar	_i @ sp[(-56)+36]
 18663  011132  50E1               	movf	fsr1l,w,c
 18664  011134  0FEC               	addlw	-20
 18665  011136  6ED9               	movwf	fsr2l,c
 18666  011138  50E2               	movf	fsr1h,w,c
 18667  01113A  6EDA               	movwf	fsr2h,c
 18668  01113C  0EFF               	movlw	255
 18669  01113E  22DA               	addwfc	fsr2h,f,c
 18670  011140  06DE               	decf	postinc2,f,c
 18671  011142  0E00               	movlw	0
 18672  011144  5ADD               	subwfb	postdec2,f,c
 18673  011146  0EBF               	movlw	191
 18674  011148  6E0B               	movwf	(btemp+10)^0,c
 18675  01114A  0EFF               	movlw	255
 18676  01114C  6E0C               	movwf	(btemp+11)^0,c
 18677                           
 18678                           ;stkvar	_c @ sp[(-56)+-7]
 18679  01114E  0EC1               	movlw	-63
 18680  011150  50E3               	movf	plusw1,w,c
 18681  011152  6E09               	movwf	(btemp+8)^0,c
 18682  011154  6A0A               	clrf	(btemp+9)^0,c
 18683  011156  500B               	movf	(btemp+10)^0,w,c
 18684  011158  2609               	addwf	(btemp+8)^0,f,c
 18685  01115A  500C               	movf	(btemp+11)^0,w,c
 18686  01115C  220A               	addwfc	(btemp+9)^0,f,c
 18687  01115E  500A               	movf	(btemp+9)^0,w,c
 18688  011160  E106               	bnz	u11680
 18689  011162  0E1A               	movlw	26
 18690  011164  5C09               	subwf	(btemp+8)^0,w,c
 18691  011166  B0D8               	btfsc	status,0,c
 18692  011168  D002               	goto	u11680
 18693  01116A  0E01               	movlw	1
 18694  01116C  D001               	goto	u11690
 18695  01116E                     u11680:
 18696  01116E  0E00               	movlw	0
 18697  011170                     u11690:
 18698  011170  6E0B               	movwf	(btemp+10)^0,c
 18699  011172  6A0C               	clrf	(btemp+11)^0,c
 18700                           
 18701                           ;stkvar	_efgtoa$5765 @ sp[(-56)+0]
 18702  011174  0EC8               	movlw	-56
 18703  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18704  01117C  0EC9               	movlw	-55
 18705  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18706                           
 18707                           ;stkvar	_efgtoa$5765 @ sp[(-56)+0]
 18708  011184  0EC8               	movlw	-56
 18709  011186  006F FF8C  F001    	movff	plusw1,btemp
 18710  01118C  0EC9               	movlw	-55
 18711  01118E  50E3               	movf	plusw1,w,c
 18712  011190  1001               	iorwf	btemp^0,w,c
 18713  011192  A4D8               	btfss	status,2,c
 18714  011194  D002               	goto	l12565
 18715  011196  0E65               	movlw	101
 18716  011198  D001               	goto	L20
 18717  01119A                     l12565:
 18718  01119A  0E45               	movlw	69
 18719  01119C                     L20:
 18720  01119C  6E0B               	movwf	(btemp+10)^0,c
 18721  01119E  0E00               	movlw	0
 18722  0111A0  6E0C               	movwf	(btemp+11)^0,c
 18723                           
 18724                           ;stkvar	_efgtoa$5764 @ sp[(-56)+2]
 18725  0111A2  0ECA               	movlw	-54
 18726  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18727  0111AA  0ECB               	movlw	-53
 18728  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18729                           
 18730                           ;stkvar	_efgtoa$5764 @ sp[(-56)+2]
 18731                           ;stkvar	_i @ sp[(-56)+36]
 18732  0111B2  0EEC               	movlw	-20
 18733  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18734  0111BA  0EED               	movlw	-19
 18735  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18736  0111C2  0E97               	movlw	low _dbuf
 18737  0111C4  240B               	addwf	(btemp+10)^0,w,c
 18738  0111C6  6ED9               	movwf	fsr2l,c
 18739  0111C8  0E02               	movlw	high _dbuf
 18740  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 18741  0111CC  6EDA               	movwf	fsr2h,c
 18742  0111CE  0ECA               	movlw	-54
 18743  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 18744                           
 18745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 18746                           ;stkvar	_w @ sp[(-56)+38]
 18747  0111D6  50E1               	movf	fsr1l,w,c
 18748  0111D8  0FEE               	addlw	-18
 18749  0111DA  6ED9               	movwf	fsr2l,c
 18750  0111DC  50E2               	movf	fsr1h,w,c
 18751  0111DE  6EDA               	movwf	fsr2h,c
 18752  0111E0  0EFF               	movlw	255
 18753  0111E2  22DA               	addwfc	fsr2h,f,c
 18754  0111E4  06DE               	decf	postinc2,f,c
 18755  0111E6  0E00               	movlw	0
 18756  0111E8  5ADD               	subwfb	postdec2,f,c
 18757                           
 18758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 18759                           ;stkvar	_i @ sp[(-56)+36]
 18760  0111EA  0EEC               	movlw	-20
 18761  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18762  0111F2  0EED               	movlw	-19
 18763  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18764  0111FA  0E97               	movlw	low _dbuf
 18765  0111FC  240B               	addwf	(btemp+10)^0,w,c
 18766  0111FE  6E09               	movwf	(btemp+8)^0,c
 18767  011200  0E02               	movlw	high _dbuf
 18768  011202  200C               	addwfc	(btemp+11)^0,w,c
 18769  011204  6E0A               	movwf	(btemp+9)^0,c
 18770  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 18771  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 18772                           
 18773                           ;stkvar	_n @ sp[(-58)+32]
 18774  011212  0E97               	movlw	low _dbuf
 18775  011214  6E0B               	movwf	(btemp+10)^0,c
 18776  011216  0E02               	movlw	high _dbuf
 18777  011218  6E0C               	movwf	(btemp+11)^0,c
 18778  01121A  0EE6               	movlw	-26
 18779  01121C  50E3               	movf	plusw1,w,c
 18780  01121E  260B               	addwf	(btemp+10)^0,f,c
 18781  011220  0EE7               	movlw	-25
 18782  011222  50E3               	movf	plusw1,w,c
 18783  011224  220C               	addwfc	(btemp+11)^0,f,c
 18784  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18785  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18786  011232  ECF9  F0D1         	call	_strcpy	;wreg free
 18787  011236  EF16  F081         	goto	l12317
 18788  01123A                     l2277:
 18789                           
 18790                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18791  01123A  0EC1               	movlw	193
 18792  01123C  26E1               	addwf	fsr1l,f,c
 18793  01123E  0EFF               	movlw	255
 18794  011240  22E2               	addwfc	fsr1h,f,c
 18795  011242  0012               	return		;funcret
 18796  011244                     __end_of_efgtoa:
 18797                           	opt callstack 0
 18798                           
 18799 ;; *************** function _tolower *****************
 18800 ;; Defined at:
 18801 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18802 ;; Parameters:    Size  Location     Type
 18803 ;;  c               2  [STACK] int 
 18804 ;; Auto vars:     Size  Location     Type
 18805 ;;		None
 18806 ;; Return value:  Size  Location     Type
 18807 ;;                  2  [STACK] int 
 18808 ;; Registers used:
 18809 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18810 ;; Tracked objects:
 18811 ;;		On entry : 0/0
 18812 ;;		On exit  : 0/0
 18813 ;;		Unchanged: 0/0
 18814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18819 ;;Total ram usage:        0 bytes
 18820 ;; Hardware stack levels used:    1
 18821 ;; Hardware stack levels required when called:   16
 18822 ;; This function calls:
 18823 ;;		_isupper
 18824 ;; This function is called by:
 18825 ;;		_efgtoa
 18826 ;;		_vfpfcnvrt
 18827 ;; This function uses a reentrant model
 18828 ;;
 18829                           
 18830                           	psect	text63
 18831  01B008                     __ptext63:
 18832                           	opt callstack 0
 18833  01B008                     _tolower:
 18834                           	opt callstack 0
 18835                           
 18836                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18837  01B008  52E6               	movf	postinc1,f,c
 18838  01B00A  52E6               	movf	postinc1,f,c
 18839                           
 18840                           ;stkvar	_c @ sp[(-2)+-2]
 18841                           
 18842                           ;incstack = 0
 18843 ;; hardware stack exceeded
 18844  01B00C  0EFC               	movlw	-4
 18845  01B00E  50E3               	movf	plusw1,w,c
 18846  01B010  0FBF               	addlw	191
 18847  01B012  6E0B               	movwf	(btemp+10)^0,c
 18848  01B014  0EFD               	movlw	-3
 18849  01B016  006F FF8C  F00C    	movff	plusw1,btemp+11
 18850  01B01C  0EFF               	movlw	255
 18851  01B01E  220C               	addwfc	(btemp+11)^0,f,c
 18852  01B020  500C               	movf	(btemp+11)^0,w,c
 18853  01B022  E106               	bnz	u6150
 18854  01B024  0E1A               	movlw	26
 18855  01B026  5C0B               	subwf	(btemp+10)^0,w,c
 18856  01B028  B0D8               	btfsc	status,0,c
 18857  01B02A  D002               	goto	u6150
 18858  01B02C  0E01               	movlw	1
 18859  01B02E  D001               	goto	u6160
 18860  01B030                     u6150:
 18861  01B030  0E00               	movlw	0
 18862  01B032                     u6160:
 18863  01B032  6E0B               	movwf	(btemp+10)^0,c
 18864  01B034  6A0C               	clrf	(btemp+11)^0,c
 18865                           
 18866                           ;stkvar	_tolower$6584 @ sp[(-2)+0]
 18867  01B036  0EFE               	movlw	-2
 18868  01B038  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18869  01B03E  0EFF               	movlw	-1
 18870  01B040  0060  F033  FFE3   	movff	btemp+11,plusw1
 18871                           
 18872                           ;stkvar	_tolower$6584 @ sp[(-2)+0]
 18873  01B046  0EFE               	movlw	-2
 18874  01B048  006F FF8C  F001    	movff	plusw1,btemp
 18875  01B04E  0EFF               	movlw	-1
 18876  01B050  50E3               	movf	plusw1,w,c
 18877  01B052  1001               	iorwf	btemp^0,w,c
 18878  01B054  B4D8               	btfsc	status,2,c
 18879  01B056  D00D               	goto	l8225
 18880                           
 18881                           ;stkvar	_c @ sp[(-2)+-2]
 18882  01B058  0EFC               	movlw	-4
 18883  01B05A  006F FF8C  F001    	movff	plusw1,btemp
 18884  01B060  0EFD               	movlw	-3
 18885  01B062  006F FF8C  F002    	movff	plusw1,btemp+1
 18886  01B068  0E20               	movlw	32
 18887  01B06A  1201               	iorwf	btemp^0,f,c
 18888  01B06C  0E00               	movlw	0
 18889  01B06E  1202               	iorwf	(btemp+1)^0,f,c
 18890  01B070  D008               	goto	l3549
 18891  01B072                     l8225:
 18892                           
 18893                           ;stkvar	_c @ sp[(-2)+-2]
 18894  01B072  0EFC               	movlw	-4
 18895  01B074  006F FF8C  F001    	movff	plusw1,btemp
 18896  01B07A  0EFD               	movlw	-3
 18897  01B07C  006F FF8C  F002    	movff	plusw1,btemp+1
 18898  01B082                     l3549:
 18899                           
 18900                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18901  01B082  52E5               	movf	postdec1,f,c
 18902  01B084  52E5               	movf	postdec1,f,c
 18903  01B086  52E5               	movf	postdec1,f,c
 18904  01B088  52E5               	movf	postdec1,f,c
 18905  01B08A  0012               	return		;funcret
 18906  01B08C                     __end_of_tolower:
 18907                           	opt callstack 0
 18908                           
 18909 ;; *************** function _isupper *****************
 18910 ;; Defined at:
 18911 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18912 ;; Parameters:    Size  Location     Type
 18913 ;;  c               2  [STACK] int 
 18914 ;; Auto vars:     Size  Location     Type
 18915 ;;		None
 18916 ;; Return value:  Size  Location     Type
 18917 ;;                  2  [STACK] int 
 18918 ;; Registers used:
 18919 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18920 ;; Tracked objects:
 18921 ;;		On entry : 0/0
 18922 ;;		On exit  : 0/0
 18923 ;;		Unchanged: 0/0
 18924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18929 ;;Total ram usage:        0 bytes
 18930 ;; Hardware stack levels used:    1
 18931 ;; Hardware stack levels required when called:   15
 18932 ;; This function calls:
 18933 ;;		Nothing
 18934 ;; This function is called by:
 18935 ;;		_efgtoa
 18936 ;;		_xtoa
 18937 ;;		_vfpfcnvrt
 18938 ;;		_tolower
 18939 ;; This function uses a reentrant model
 18940 ;;
 18941                           
 18942                           	psect	text64
 18943  01BE6C                     __ptext64:
 18944                           	opt callstack 0
 18945  01BE6C                     _isupper:
 18946                           	opt callstack 0
 18947                           
 18948                           ;stkvar	_c @ sp[(0)+-2]
 18949                           
 18950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18951                           ;incstack = 0
 18952 ;; hardware stack exceeded
 18953  01BE6C  0EFE               	movlw	-2
 18954  01BE6E  50E3               	movf	plusw1,w,c
 18955  01BE70  0FBF               	addlw	191
 18956  01BE72  6E0B               	movwf	(btemp+10)^0,c
 18957  01BE74  0EFF               	movlw	-1
 18958  01BE76  006F FF8C  F00C    	movff	plusw1,btemp+11
 18959  01BE7C  0EFF               	movlw	255
 18960  01BE7E  220C               	addwfc	(btemp+11)^0,f,c
 18961  01BE80  500C               	movf	(btemp+11)^0,w,c
 18962  01BE82  E106               	bnz	u5500
 18963  01BE84  0E1A               	movlw	26
 18964  01BE86  5C0B               	subwf	(btemp+10)^0,w,c
 18965  01BE88  B0D8               	btfsc	status,0,c
 18966  01BE8A  D002               	goto	u5500
 18967  01BE8C  0E01               	movlw	1
 18968  01BE8E  D001               	goto	u5510
 18969  01BE90                     u5500:
 18970  01BE90  0E00               	movlw	0
 18971  01BE92                     u5510:
 18972  01BE92  6E01               	movwf	btemp^0,c
 18973  01BE94  6A02               	clrf	(btemp+1)^0,c
 18974                           
 18975                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18976  01BE96  52E5               	movf	postdec1,f,c
 18977  01BE98  52E5               	movf	postdec1,f,c
 18978  01BE9A  0012               	return		;funcret
 18979  01BE9C                     __end_of_isupper:
 18980                           	opt callstack 0
 18981                           
 18982 ;; *************** function _strcpy *****************
 18983 ;; Defined at:
 18984 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18985 ;; Parameters:    Size  Location     Type
 18986 ;;  dest            2  [STACK] PTR unsigned char 
 18987 ;;		 -> dbuf(80), 
 18988 ;;  src             2  [STACK] PTR const unsigned char 
 18989 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18990 ;;		 -> dbuf(80), 
 18991 ;; Auto vars:     Size  Location     Type
 18992 ;;  d               2  [STACK] PTR unsigned char 
 18993 ;;		 -> dbuf(80), 
 18994 ;;  s               2  [STACK] PTR const unsigned char 
 18995 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18996 ;;		 -> dbuf(80), 
 18997 ;; Return value:  Size  Location     Type
 18998 ;;                  2  [STACK] PTR unsigned char 
 18999 ;; Registers used:
 19000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 19001 ;; Tracked objects:
 19002 ;;		On entry : 0/0
 19003 ;;		On exit  : 0/0
 19004 ;;		Unchanged: 0/0
 19005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19010 ;;Total ram usage:        0 bytes
 19011 ;; Hardware stack levels used:    1
 19012 ;; Hardware stack levels required when called:   15
 19013 ;; This function calls:
 19014 ;;		Nothing
 19015 ;; This function is called by:
 19016 ;;		_efgtoa
 19017 ;; This function uses a reentrant model
 19018 ;;
 19019                           
 19020                           	psect	text65
 19021  01A3F2                     __ptext65:
 19022                           	opt callstack 0
 19023  01A3F2                     _strcpy:
 19024                           	opt callstack 0
 19025                           
 19026                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19027  01A3F2  52E6               	movf	postinc1,f,c
 19028  01A3F4  52E6               	movf	postinc1,f,c
 19029  01A3F6  52E6               	movf	postinc1,f,c
 19030  01A3F8  52E6               	movf	postinc1,f,c
 19031                           
 19032                           ;stkvar	_src @ sp[(-4)+-4]
 19033                           
 19034                           ;incstack = 0
 19035 ;; hardware stack exceeded
 19036  01A3FA  0EF8               	movlw	-8
 19037  01A3FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19038  01A402  0EF9               	movlw	-7
 19039  01A404  006F FF8C  F00C    	movff	plusw1,btemp+11
 19040                           
 19041                           ;stkvar	_s @ sp[(-4)+2]
 19042  01A40A  0EFF               	movlw	-1
 19043  01A40C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19044  01A412  0EFE               	movlw	-2
 19045  01A414  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19046                           
 19047                           ;stkvar	_dest @ sp[(-4)+-2]
 19048  01A41A  0EFA               	movlw	-6
 19049  01A41C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19050  01A422  0EFB               	movlw	-5
 19051  01A424  006F FF8C  F00C    	movff	plusw1,btemp+11
 19052                           
 19053                           ;stkvar	_d @ sp[(-4)+0]
 19054  01A42A  0EFD               	movlw	-3
 19055  01A42C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19056  01A432  0EFC               	movlw	-4
 19057  01A434  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19058  01A43A                     l12179:
 19059                           
 19060                           ;stkvar	_s @ sp[(-4)+2]
 19061  01A43A  50E1               	movf	fsr1l,w,c
 19062  01A43C  0FFE               	addlw	-2
 19063  01A43E  6ED9               	movwf	fsr2l,c
 19064  01A440  50E2               	movf	fsr1h,w,c
 19065  01A442  6EDA               	movwf	fsr2h,c
 19066  01A444  0EFF               	movlw	255
 19067  01A446  22DA               	addwfc	fsr2h,f,c
 19068  01A448  006F FF7C  F00B    	movff	indf2,btemp+10
 19069  01A44E  0E01               	movlw	1
 19070  01A450  26DE               	addwf	postinc2,f,c
 19071  01A452  006F FF7C  F00C    	movff	indf2,btemp+11
 19072  01A458  0E00               	movlw	0
 19073  01A45A  22DD               	addwfc	postdec2,f,c
 19074  01A45C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 19075  01A462  0060  F033  FFF7   	movff	btemp+11,tblptrh
 19076  01A468  0E00               	movlw	low (__mediumconst shr (0+16))
 19077  01A46A  6EF8               	movwf	tblptru,c
 19078                           
 19079                           ;stkvar	_d @ sp[(-4)+0]
 19080  01A46C  50E1               	movf	fsr1l,w,c
 19081  01A46E  0FFC               	addlw	-4
 19082  01A470  6ED9               	movwf	fsr2l,c
 19083  01A472  50E2               	movf	fsr1h,w,c
 19084  01A474  6EDA               	movwf	fsr2h,c
 19085  01A476  0EFF               	movlw	255
 19086  01A478  22DA               	addwfc	fsr2h,f,c
 19087  01A47A  006F FF7C  F00B    	movff	indf2,btemp+10
 19088  01A480  0E01               	movlw	1
 19089  01A482  26DE               	addwf	postinc2,f,c
 19090  01A484  006F FF7C  F00C    	movff	indf2,btemp+11
 19091  01A48A  0E00               	movlw	0
 19092  01A48C  22DD               	addwfc	postdec2,f,c
 19093  01A48E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 19094  01A494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 19095  01A49A  0E1F               	movlw	(high __ramtop+-1)
 19096  01A49C  64F7               	cpfsgt	tblptrh,c
 19097  01A49E  D003               	bra	u10987
 19098  01A4A0  0008               	tblrd		*
 19099  01A4A2  50F5               	movf	tablat,w,c
 19100  01A4A4  D007               	bra	u10980
 19101  01A4A6                     u10987:
 19102  01A4A6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19103  01A4AC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19104  01A4B2  50EF               	movf	indf0,w,c
 19105  01A4B4                     u10980:
 19106  01A4B4  6EDF               	movwf	indf2,c
 19107  01A4B6  50DF               	movf	indf2,w,c
 19108  01A4B8  A4D8               	btfss	status,2,c
 19109  01A4BA  D7BF               	goto	l12179
 19110                           
 19111                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 19112  01A4BC  0EF8               	movlw	248
 19113  01A4BE  26E1               	addwf	fsr1l,f,c
 19114  01A4C0  0EFF               	movlw	255
 19115  01A4C2  22E2               	addwfc	fsr1h,f,c
 19116  01A4C4  0012               	return		;funcret
 19117  01A4C6                     __end_of_strcpy:
 19118                           	opt callstack 0
 19119                           
 19120 ;; *************** function _floorf *****************
 19121 ;; Defined at:
 19122 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 19123 ;; Parameters:    Size  Location     Type
 19124 ;;  x               4  [STACK] float 
 19125 ;; Auto vars:     Size  Location     Type
 19126 ;;  u               4  [STACK] struct .
 19127 ;;  m               4  [STACK] unsigned long 
 19128 ;;  e               2  [STACK] int 
 19129 ;; Return value:  Size  Location     Type
 19130 ;;                  4  [STACK] float 
 19131 ;; Registers used:
 19132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19133 ;; Tracked objects:
 19134 ;;		On entry : 0/0
 19135 ;;		On exit  : 0/0
 19136 ;;		Unchanged: 0/0
 19137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19142 ;;Total ram usage:        0 bytes
 19143 ;; Hardware stack levels used:    1
 19144 ;; Hardware stack levels required when called:   15
 19145 ;; This function calls:
 19146 ;;		Nothing
 19147 ;; This function is called by:
 19148 ;;		_efgtoa
 19149 ;; This function uses a reentrant model
 19150 ;;
 19151                           
 19152                           	psect	text66
 19153  0164C4                     __ptext66:
 19154                           	opt callstack 0
 19155  0164C4                     _floorf:
 19156                           	opt callstack 0
 19157                           
 19158                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19159  0164C4  0E0A               	movlw	10
 19160  0164C6  26E1               	addwf	fsr1l,f,c
 19161  0164C8  0E00               	movlw	0
 19162  0164CA  22E2               	addwfc	fsr1h,f,c
 19163                           
 19164                           ;incstack = 0
 19165 ;; hardware stack exceeded
 19166  0164CC  0060  F79C  F009   	movff	floorf@F524,btemp+8
 19167  0164D2  0060  F7A0  F00A   	movff	floorf@F524+1,btemp+9
 19168  0164D8  0060  F7A4  F00B   	movff	floorf@F524+2,btemp+10
 19169  0164DE  0060  F7A8  F00C   	movff	floorf@F524+3,btemp+11
 19170                           
 19171                           ;stkvar	_u @ sp[(-10)+0]
 19172  0164E4  0EF6               	movlw	-10
 19173  0164E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 19174  0164EC  0EF7               	movlw	-9
 19175  0164EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19176  0164F4  0EF8               	movlw	-8
 19177  0164F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19178  0164FC  0EF9               	movlw	-7
 19179  0164FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19180                           
 19181                           ;stkvar	_x @ sp[(-10)+-4]
 19182  016504  0EF2               	movlw	-14
 19183  016506  006F FF8C  F009    	movff	plusw1,btemp+8
 19184  01650C  0EF3               	movlw	-13
 19185  01650E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19186  016514  0EF4               	movlw	-12
 19187  016516  006F FF8C  F00B    	movff	plusw1,btemp+10
 19188  01651C  0EF5               	movlw	-11
 19189  01651E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19190                           
 19191                           ;stkvar	_u @ sp[(-10)+0]
 19192  016524  0EF6               	movlw	-10
 19193  016526  0060  F027  FFE3   	movff	btemp+8,plusw1
 19194  01652C  0EF7               	movlw	-9
 19195  01652E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19196  016534  0EF8               	movlw	-8
 19197  016536  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19198  01653C  0EF9               	movlw	-7
 19199  01653E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19200  016544  0E81               	movlw	129
 19201  016546  6E0B               	movwf	(btemp+10)^0,c
 19202  016548  0EFF               	movlw	255
 19203  01654A  6E0C               	movwf	(btemp+11)^0,c
 19204                           
 19205                           ;stkvar	_u @ sp[(-10)+0]
 19206  01654C  0EF6               	movlw	-10
 19207  01654E  006F FF8C  F005    	movff	plusw1,btemp+4
 19208  016554  0EF7               	movlw	-9
 19209  016556  006F FF8C  F006    	movff	plusw1,btemp+5
 19210  01655C  0EF8               	movlw	-8
 19211  01655E  006F FF8C  F007    	movff	plusw1,btemp+6
 19212  016564  0EF9               	movlw	-7
 19213  016566  006F FF8C  F008    	movff	plusw1,btemp+7
 19214  01656C  0E18               	movlw	24
 19215  01656E  D005               	goto	u6180
 19216  016570                     u6185:
 19217  016570  90D8               	bcf	status,0,c
 19218  016572  3208               	rrcf	(btemp+7)^0,f,c
 19219  016574  3207               	rrcf	(btemp+6)^0,f,c
 19220  016576  3206               	rrcf	(btemp+5)^0,f,c
 19221  016578  3205               	rrcf	(btemp+4)^0,f,c
 19222  01657A                     u6180:
 19223  01657A  2EE8               	decfsz	wreg,f,c
 19224  01657C  D7F9               	goto	u6185
 19225  01657E  0060  F014  F009   	movff	btemp+4,btemp+8
 19226  016584  0060  F018  F00A   	movff	btemp+5,btemp+9
 19227  01658A  0EFF               	movlw	255
 19228  01658C  1609               	andwf	(btemp+8)^0,f,c
 19229  01658E  0E00               	movlw	0
 19230  016590  160A               	andwf	(btemp+9)^0,f,c
 19231  016592  500B               	movf	(btemp+10)^0,w,c
 19232  016594  2609               	addwf	(btemp+8)^0,f,c
 19233  016596  500C               	movf	(btemp+11)^0,w,c
 19234  016598  220A               	addwfc	(btemp+9)^0,f,c
 19235                           
 19236                           ;stkvar	_e @ sp[(-10)+8]
 19237  01659A  0EFE               	movlw	-2
 19238  01659C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19239  0165A2  0EFF               	movlw	-1
 19240  0165A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19241                           
 19242                           ;stkvar	_e @ sp[(-10)+8]
 19243  0165AA  0EFF               	movlw	-1
 19244  0165AC  BEE3               	btfsc	plusw1,7,c
 19245  0165AE  D019               	goto	l8239
 19246  0165B0  0EFF               	movlw	-1
 19247  0165B2  50E3               	movf	plusw1,w,c
 19248  0165B4  E108               	bnz	u6190
 19249  0165B6  0EFE               	movlw	-2
 19250  0165B8  006F FF8C  F001    	movff	plusw1,btemp
 19251  0165BE  0E17               	movlw	23
 19252  0165C0  5E01               	subwf	btemp^0,f,c
 19253  0165C2  A0D8               	btfss	status,0,c
 19254  0165C4  D00E               	goto	l8239
 19255  0165C6                     u6190:
 19256                           
 19257                           ;stkvar	_x @ sp[(-10)+-4]
 19258  0165C6  0EF2               	movlw	-14
 19259  0165C8  006F FF8C  F001    	movff	plusw1,btemp
 19260  0165CE  0EF3               	movlw	-13
 19261  0165D0  006F FF8C  F002    	movff	plusw1,btemp+1
 19262  0165D6  0EF4               	movlw	-12
 19263  0165D8  006F FF8C  F003    	movff	plusw1,btemp+2
 19264  0165DE  0EF5               	movlw	-11
 19265  0165E0  D11F               	goto	L21
 19266  0165E2                     l8239:
 19267                           
 19268                           ;stkvar	_e @ sp[(-10)+8]
 19269  0165E2  0EFF               	movlw	-1
 19270  0165E4  BEE3               	btfsc	plusw1,7,c
 19271  0165E6  D0B4               	goto	l8255
 19272                           
 19273                           ;stkvar	_e @ sp[(-10)+8]
 19274  0165E8  0EFE               	movlw	-2
 19275  0165EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19276  0165F0  0EFF               	movlw	255
 19277  0165F2  6E05               	movwf	(btemp+4)^0,c
 19278  0165F4  0EFF               	movlw	255
 19279  0165F6  6E06               	movwf	(btemp+5)^0,c
 19280  0165F8  0E7F               	movlw	127
 19281  0165FA  6E07               	movwf	(btemp+6)^0,c
 19282  0165FC  0E00               	movlw	0
 19283  0165FE  6E08               	movwf	(btemp+7)^0,c
 19284  016600                     u6215:
 19285  016600  660C               	tstfsz	(btemp+11)^0,c
 19286  016602  D001               	goto	u6216
 19287  016604  D007               	goto	u6217
 19288  016606                     u6216:
 19289  016606  3408               	rlcf	(btemp+7)^0,w,c
 19290  016608  3208               	rrcf	(btemp+7)^0,f,c
 19291  01660A  3207               	rrcf	(btemp+6)^0,f,c
 19292  01660C  3206               	rrcf	(btemp+5)^0,f,c
 19293  01660E  3205               	rrcf	(btemp+4)^0,f,c
 19294  016610  2E0C               	decfsz	(btemp+11)^0,f,c
 19295  016612  D7F6               	goto	u6215
 19296  016614                     u6217:
 19297                           
 19298                           ;stkvar	_m @ sp[(-10)+4]
 19299  016614  0EFA               	movlw	-6
 19300  016616  0060  F017  FFE3   	movff	btemp+4,plusw1
 19301  01661C  0EFB               	movlw	-5
 19302  01661E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 19303  016624  0EFC               	movlw	-4
 19304  016626  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19305  01662C  0EFD               	movlw	-3
 19306  01662E  0060  F023  FFE3   	movff	btemp+7,plusw1
 19307                           
 19308                           ;stkvar	_m @ sp[(-10)+4]
 19309                           ;stkvar	_u @ sp[(-10)+0]
 19310  016634  0EF6               	movlw	-10
 19311  016636  006F FF8C  F009    	movff	plusw1,btemp+8
 19312  01663C  0EF7               	movlw	-9
 19313  01663E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19314  016644  0EF8               	movlw	-8
 19315  016646  006F FF8C  F00B    	movff	plusw1,btemp+10
 19316  01664C  0EF9               	movlw	-7
 19317  01664E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19318  016654  0EFA               	movlw	-6
 19319  016656  50E3               	movf	plusw1,w,c
 19320  016658  1609               	andwf	(btemp+8)^0,f,c
 19321  01665A  0EFB               	movlw	-5
 19322  01665C  50E3               	movf	plusw1,w,c
 19323  01665E  160A               	andwf	(btemp+9)^0,f,c
 19324  016660  0EFC               	movlw	-4
 19325  016662  50E3               	movf	plusw1,w,c
 19326  016664  160B               	andwf	(btemp+10)^0,f,c
 19327  016666  0EFD               	movlw	-3
 19328  016668  50E3               	movf	plusw1,w,c
 19329  01666A  160C               	andwf	(btemp+11)^0,f,c
 19330  01666C  5009               	movf	(btemp+8)^0,w,c
 19331  01666E  100A               	iorwf	(btemp+9)^0,w,c
 19332  016670  100B               	iorwf	(btemp+10)^0,w,c
 19333  016672  100C               	iorwf	(btemp+11)^0,w,c
 19334  016674  B4D8               	btfsc	status,2,c
 19335  016676  D7A7               	goto	u6190
 19336                           
 19337                           ;stkvar	_u @ sp[(-10)+0]
 19338  016678  0EF6               	movlw	-10
 19339  01667A  006F FF8C  F009    	movff	plusw1,btemp+8
 19340  016680  0EF7               	movlw	-9
 19341  016682  006F FF8C  F00A    	movff	plusw1,btemp+9
 19342  016688  0EF8               	movlw	-8
 19343  01668A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19344  016690  0EF9               	movlw	-7
 19345  016692  006F FF8C  F00C    	movff	plusw1,btemp+11
 19346  016698  0E20               	movlw	32
 19347  01669A  D005               	goto	u6230
 19348  01669C                     u6235:
 19349  01669C  90D8               	bcf	status,0,c
 19350  01669E  320C               	rrcf	(btemp+11)^0,f,c
 19351  0166A0  320B               	rrcf	(btemp+10)^0,f,c
 19352  0166A2  320A               	rrcf	(btemp+9)^0,f,c
 19353  0166A4  3209               	rrcf	(btemp+8)^0,f,c
 19354  0166A6                     u6230:
 19355  0166A6  2EE8               	decfsz	wreg,f,c
 19356  0166A8  D7F9               	goto	u6235
 19357  0166AA  5009               	movf	(btemp+8)^0,w,c
 19358  0166AC  B4D8               	btfsc	status,2,c
 19359  0166AE  D028               	goto	l8253
 19360                           
 19361                           ;stkvar	_m @ sp[(-10)+4]
 19362                           ;stkvar	_u @ sp[(-10)+0]
 19363  0166B0  0EF6               	movlw	-10
 19364  0166B2  50E3               	movf	plusw1,w,c
 19365  0166B4  6E01               	movwf	btemp^0,c
 19366  0166B6  0EFA               	movlw	-6
 19367  0166B8  50E3               	movf	plusw1,w,c
 19368  0166BA  2601               	addwf	btemp^0,f,c
 19369  0166BC  0EF6               	movlw	-10
 19370  0166BE  0060  F007  FFE3   	movff	btemp,plusw1
 19371  0166C4  0EF7               	movlw	-9
 19372  0166C6  50E3               	movf	plusw1,w,c
 19373  0166C8  6E01               	movwf	btemp^0,c
 19374  0166CA  0EFB               	movlw	-5
 19375  0166CC  50E3               	movf	plusw1,w,c
 19376  0166CE  2201               	addwfc	btemp^0,f,c
 19377  0166D0  0EF7               	movlw	-9
 19378  0166D2  0060  F007  FFE3   	movff	btemp,plusw1
 19379  0166D8  0EF8               	movlw	-8
 19380  0166DA  50E3               	movf	plusw1,w,c
 19381  0166DC  6E01               	movwf	btemp^0,c
 19382  0166DE  0EFC               	movlw	-4
 19383  0166E0  50E3               	movf	plusw1,w,c
 19384  0166E2  2201               	addwfc	btemp^0,f,c
 19385  0166E4  0EF8               	movlw	-8
 19386  0166E6  0060  F007  FFE3   	movff	btemp,plusw1
 19387  0166EC  0EF9               	movlw	-7
 19388  0166EE  50E3               	movf	plusw1,w,c
 19389  0166F0  6E01               	movwf	btemp^0,c
 19390  0166F2  0EFD               	movlw	-3
 19391  0166F4  50E3               	movf	plusw1,w,c
 19392  0166F6  2201               	addwfc	btemp^0,f,c
 19393  0166F8  0EF9               	movlw	-7
 19394  0166FA  0060  F007  FFE3   	movff	btemp,plusw1
 19395  016700                     l8253:
 19396                           
 19397                           ;stkvar	_m @ sp[(-10)+4]
 19398  016700  0EFA               	movlw	-6
 19399  016702  006F FF8C  F009    	movff	plusw1,btemp+8
 19400  016708  0EFB               	movlw	-5
 19401  01670A  006F FF8C  F00A    	movff	plusw1,btemp+9
 19402  016710  0EFC               	movlw	-4
 19403  016712  006F FF8C  F00B    	movff	plusw1,btemp+10
 19404  016718  0EFD               	movlw	-3
 19405  01671A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19406  016720  1C09               	comf	(btemp+8)^0,w,c
 19407  016722  6E05               	movwf	(btemp+4)^0,c
 19408  016724  1C0A               	comf	(btemp+9)^0,w,c
 19409  016726  6E06               	movwf	(btemp+5)^0,c
 19410  016728  1C0B               	comf	(btemp+10)^0,w,c
 19411  01672A  6E07               	movwf	(btemp+6)^0,c
 19412  01672C  1C0C               	comf	(btemp+11)^0,w,c
 19413  01672E  6E08               	movwf	(btemp+7)^0,c
 19414                           
 19415                           ;stkvar	_u @ sp[(-10)+0]
 19416  016730  50E1               	movf	fsr1l,w,c
 19417  016732  0FF6               	addlw	-10
 19418  016734  6ED9               	movwf	fsr2l,c
 19419  016736  50E2               	movf	fsr1h,w,c
 19420  016738  6EDA               	movwf	fsr2h,c
 19421  01673A  0EFF               	movlw	255
 19422  01673C  22DA               	addwfc	fsr2h,f,c
 19423  01673E  5005               	movf	(btemp+4)^0,w,c
 19424  016740  16DE               	andwf	postinc2,f,c
 19425  016742  5006               	movf	(btemp+5)^0,w,c
 19426  016744  16DE               	andwf	postinc2,f,c
 19427  016746  5007               	movf	(btemp+6)^0,w,c
 19428  016748  16DE               	andwf	postinc2,f,c
 19429  01674A  5008               	movf	(btemp+7)^0,w,c
 19430  01674C  16DE               	andwf	postinc2,f,c
 19431  01674E  D05B               	goto	l8263
 19432  016750                     l8255:
 19433                           
 19434                           ;stkvar	_u @ sp[(-10)+0]
 19435  016750  0EF6               	movlw	-10
 19436  016752  006F FF8C  F009    	movff	plusw1,btemp+8
 19437  016758  0EF7               	movlw	-9
 19438  01675A  006F FF8C  F00A    	movff	plusw1,btemp+9
 19439  016760  0EF8               	movlw	-8
 19440  016762  006F FF8C  F00B    	movff	plusw1,btemp+10
 19441  016768  0EF9               	movlw	-7
 19442  01676A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19443  016770  0E20               	movlw	32
 19444  016772  D005               	goto	u6250
 19445  016774                     u6255:
 19446  016774  90D8               	bcf	status,0,c
 19447  016776  320C               	rrcf	(btemp+11)^0,f,c
 19448  016778  320B               	rrcf	(btemp+10)^0,f,c
 19449  01677A  320A               	rrcf	(btemp+9)^0,f,c
 19450  01677C  3209               	rrcf	(btemp+8)^0,f,c
 19451  01677E                     u6250:
 19452  01677E  2EE8               	decfsz	wreg,f,c
 19453  016780  D7F9               	goto	u6255
 19454  016782  6609               	tstfsz	(btemp+8)^0,c
 19455  016784  D009               	goto	l8259
 19456                           
 19457                           ;stkvar	_u @ sp[(-10)+0]
 19458  016786  0EF6               	movlw	-10
 19459  016788  6AE3               	clrf	plusw1,c
 19460  01678A  0EF7               	movlw	-9
 19461  01678C  6AE3               	clrf	plusw1,c
 19462  01678E  0EF8               	movlw	-8
 19463  016790  6AE3               	clrf	plusw1,c
 19464  016792  0EF9               	movlw	-7
 19465  016794  6AE3               	clrf	plusw1,c
 19466  016796  D037               	goto	l8263
 19467  016798                     l8259:
 19468                           
 19469                           ;stkvar	_u @ sp[(-10)+0]
 19470  016798  0EF6               	movlw	-10
 19471  01679A  006F FF8C  F009    	movff	plusw1,btemp+8
 19472  0167A0  0EF7               	movlw	-9
 19473  0167A2  006F FF8C  F00A    	movff	plusw1,btemp+9
 19474  0167A8  0EF8               	movlw	-8
 19475  0167AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19476  0167B0  0EF9               	movlw	-7
 19477  0167B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19478  0167B8  90D8               	bcf	status,0,c
 19479  0167BA  3409               	rlcf	(btemp+8)^0,w,c
 19480  0167BC  6E05               	movwf	(btemp+4)^0,c
 19481  0167BE  340A               	rlcf	(btemp+9)^0,w,c
 19482  0167C0  6E06               	movwf	(btemp+5)^0,c
 19483  0167C2  340B               	rlcf	(btemp+10)^0,w,c
 19484  0167C4  6E07               	movwf	(btemp+6)^0,c
 19485  0167C6  340C               	rlcf	(btemp+11)^0,w,c
 19486  0167C8  6E08               	movwf	(btemp+7)^0,c
 19487  0167CA  5005               	movf	(btemp+4)^0,w,c
 19488  0167CC  1006               	iorwf	(btemp+5)^0,w,c
 19489  0167CE  1007               	iorwf	(btemp+6)^0,w,c
 19490  0167D0  1008               	iorwf	(btemp+7)^0,w,c
 19491  0167D2  B4D8               	btfsc	status,2,c
 19492  0167D4  D018               	goto	l8263
 19493  0167D6  0E00               	movlw	0
 19494  0167D8  6E09               	movwf	(btemp+8)^0,c
 19495  0167DA  0E00               	movlw	0
 19496  0167DC  6E0A               	movwf	(btemp+9)^0,c
 19497  0167DE  0E80               	movlw	128
 19498  0167E0  6E0B               	movwf	(btemp+10)^0,c
 19499  0167E2  0EBF               	movlw	191
 19500  0167E4  6E0C               	movwf	(btemp+11)^0,c
 19501                           
 19502                           ;stkvar	_u @ sp[(-10)+0]
 19503  0167E6  0EF6               	movlw	-10
 19504  0167E8  0060  F027  FFE3   	movff	btemp+8,plusw1
 19505  0167EE  0EF7               	movlw	-9
 19506  0167F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19507  0167F6  0EF8               	movlw	-8
 19508  0167F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19509  0167FE  0EF9               	movlw	-7
 19510  016800  0060  F033  FFE3   	movff	btemp+11,plusw1
 19511  016806                     l8263:
 19512                           
 19513                           ;stkvar	_u @ sp[(-10)+0]
 19514  016806  0EF6               	movlw	-10
 19515  016808  006F FF8C  F001    	movff	plusw1,btemp
 19516  01680E  0EF7               	movlw	-9
 19517  016810  006F FF8C  F002    	movff	plusw1,btemp+1
 19518  016816  0EF8               	movlw	-8
 19519  016818  006F FF8C  F003    	movff	plusw1,btemp+2
 19520  01681E  0EF9               	movlw	-7
 19521  016820                     L21:
 19522  016820  006F FF8C  F004    	movff	plusw1,btemp+3
 19523                           
 19524                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19525  016826  0EF2               	movlw	242
 19526  016828  26E1               	addwf	fsr1l,f,c
 19527  01682A  0EFF               	movlw	255
 19528  01682C  22E2               	addwfc	fsr1h,f,c
 19529  01682E  0012               	return		;funcret
 19530  016830                     __end_of_floorf:
 19531                           	opt callstack 0
 19532                           
 19533 ;; *************** function ___fpclassifyf *****************
 19534 ;; Defined at:
 19535 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 19536 ;; Parameters:    Size  Location     Type
 19537 ;;  x               4  [STACK] float 
 19538 ;; Auto vars:     Size  Location     Type
 19539 ;;  u               4  [STACK] struct .
 19540 ;;  e               2  [STACK] int 
 19541 ;; Return value:  Size  Location     Type
 19542 ;;                  2  [STACK] int 
 19543 ;; Registers used:
 19544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 19545 ;; Tracked objects:
 19546 ;;		On entry : 0/0
 19547 ;;		On exit  : 0/0
 19548 ;;		Unchanged: 0/0
 19549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19554 ;;Total ram usage:        0 bytes
 19555 ;; Hardware stack levels used:    1
 19556 ;; Hardware stack levels required when called:   15
 19557 ;; This function calls:
 19558 ;;		Nothing
 19559 ;; This function is called by:
 19560 ;;		_efgtoa
 19561 ;; This function uses a reentrant model
 19562 ;;
 19563                           
 19564                           	psect	text67
 19565  018C06                     __ptext67:
 19566                           	opt callstack 0
 19567  018C06                     ___fpclassifyf:
 19568                           	opt callstack 0
 19569                           
 19570                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19571  018C06  0E06               	movlw	6
 19572  018C08  26E1               	addwf	fsr1l,f,c
 19573  018C0A  0E00               	movlw	0
 19574  018C0C  22E2               	addwfc	fsr1h,f,c
 19575                           
 19576                           ;incstack = 0
 19577 ;; hardware stack exceeded
 19578  018C0E  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 19579  018C14  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 19580  018C1A  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 19581  018C20  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 19582                           
 19583                           ;stkvar	_u @ sp[(-6)+0]
 19584  018C26  0EFA               	movlw	-6
 19585  018C28  0060  F027  FFE3   	movff	btemp+8,plusw1
 19586  018C2E  0EFB               	movlw	-5
 19587  018C30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19588  018C36  0EFC               	movlw	-4
 19589  018C38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19590  018C3E  0EFD               	movlw	-3
 19591  018C40  0060  F033  FFE3   	movff	btemp+11,plusw1
 19592                           
 19593                           ;stkvar	_x @ sp[(-6)+-4]
 19594  018C46  0EF6               	movlw	-10
 19595  018C48  006F FF8C  F009    	movff	plusw1,btemp+8
 19596  018C4E  0EF7               	movlw	-9
 19597  018C50  006F FF8C  F00A    	movff	plusw1,btemp+9
 19598  018C56  0EF8               	movlw	-8
 19599  018C58  006F FF8C  F00B    	movff	plusw1,btemp+10
 19600  018C5E  0EF9               	movlw	-7
 19601  018C60  006F FF8C  F00C    	movff	plusw1,btemp+11
 19602                           
 19603                           ;stkvar	_u @ sp[(-6)+0]
 19604  018C66  0EFA               	movlw	-6
 19605  018C68  0060  F027  FFE3   	movff	btemp+8,plusw1
 19606  018C6E  0EFB               	movlw	-5
 19607  018C70  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19608  018C76  0EFC               	movlw	-4
 19609  018C78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19610  018C7E  0EFD               	movlw	-3
 19611  018C80  0060  F033  FFE3   	movff	btemp+11,plusw1
 19612                           
 19613                           ;stkvar	_u @ sp[(-6)+0]
 19614  018C86  0EFA               	movlw	-6
 19615  018C88  006F FF8C  F009    	movff	plusw1,btemp+8
 19616  018C8E  0EFB               	movlw	-5
 19617  018C90  006F FF8C  F00A    	movff	plusw1,btemp+9
 19618  018C96  0EFC               	movlw	-4
 19619  018C98  006F FF8C  F00B    	movff	plusw1,btemp+10
 19620  018C9E  0EFD               	movlw	-3
 19621  018CA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19622  018CA6  0E18               	movlw	24
 19623  018CA8  D005               	goto	u6060
 19624  018CAA                     u6065:
 19625  018CAA  90D8               	bcf	status,0,c
 19626  018CAC  320C               	rrcf	(btemp+11)^0,f,c
 19627  018CAE  320B               	rrcf	(btemp+10)^0,f,c
 19628  018CB0  320A               	rrcf	(btemp+9)^0,f,c
 19629  018CB2  3209               	rrcf	(btemp+8)^0,f,c
 19630  018CB4                     u6060:
 19631  018CB4  2EE8               	decfsz	wreg,f,c
 19632  018CB6  D7F9               	goto	u6065
 19633  018CB8  0060  F024  F007   	movff	btemp+8,btemp+6
 19634  018CBE  0060  F028  F008   	movff	btemp+9,btemp+7
 19635  018CC4  0EFF               	movlw	255
 19636  018CC6  1607               	andwf	(btemp+6)^0,f,c
 19637  018CC8  0E00               	movlw	0
 19638  018CCA  1608               	andwf	(btemp+7)^0,f,c
 19639                           
 19640                           ;stkvar	_e @ sp[(-6)+4]
 19641  018CCC  0EFE               	movlw	-2
 19642  018CCE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19643  018CD4  0EFF               	movlw	-1
 19644  018CD6  0060  F023  FFE3   	movff	btemp+7,plusw1
 19645                           
 19646                           ;stkvar	_e @ sp[(-6)+4]
 19647  018CDC  0EFE               	movlw	-2
 19648  018CDE  006F FF8C  F001    	movff	plusw1,btemp
 19649  018CE4  0EFF               	movlw	-1
 19650  018CE6  50E3               	movf	plusw1,w,c
 19651  018CE8  1001               	iorwf	btemp^0,w,c
 19652  018CEA  A4D8               	btfss	status,2,c
 19653  018CEC  D023               	goto	l8201
 19654                           
 19655                           ;stkvar	_u @ sp[(-6)+0]
 19656  018CEE  0EFA               	movlw	-6
 19657  018CF0  006F FF8C  F009    	movff	plusw1,btemp+8
 19658  018CF6  0EFB               	movlw	-5
 19659  018CF8  006F FF8C  F00A    	movff	plusw1,btemp+9
 19660  018CFE  0EFC               	movlw	-4
 19661  018D00  006F FF8C  F00B    	movff	plusw1,btemp+10
 19662  018D06  0EFD               	movlw	-3
 19663  018D08  006F FF8C  F00C    	movff	plusw1,btemp+11
 19664  018D0E  90D8               	bcf	status,0,c
 19665  018D10  3409               	rlcf	(btemp+8)^0,w,c
 19666  018D12  6E05               	movwf	(btemp+4)^0,c
 19667  018D14  340A               	rlcf	(btemp+9)^0,w,c
 19668  018D16  6E06               	movwf	(btemp+5)^0,c
 19669  018D18  340B               	rlcf	(btemp+10)^0,w,c
 19670  018D1A  6E07               	movwf	(btemp+6)^0,c
 19671  018D1C  340C               	rlcf	(btemp+11)^0,w,c
 19672  018D1E  6E08               	movwf	(btemp+7)^0,c
 19673  018D20  5005               	movf	(btemp+4)^0,w,c
 19674  018D22  1006               	iorwf	(btemp+5)^0,w,c
 19675  018D24  1007               	iorwf	(btemp+6)^0,w,c
 19676  018D26  1008               	iorwf	(btemp+7)^0,w,c
 19677  018D28  A4D8               	btfss	status,2,c
 19678  018D2A  D002               	goto	l8197
 19679  018D2C  0E02               	movlw	2
 19680  018D2E  D02E               	goto	L22
 19681  018D30                     l8197:
 19682  018D30  0E03               	movlw	3
 19683  018D32  D02C               	goto	L22
 19684  018D34                     l8201:
 19685                           
 19686                           ;stkvar	_e @ sp[(-6)+4]
 19687  018D34  0EFE               	movlw	-2
 19688  018D36  28E3               	incf	plusw1,w,c
 19689  018D38  E128               	bnz	l8207
 19690  018D3A  0EFF               	movlw	-1
 19691  018D3C  50E3               	movf	plusw1,w,c
 19692  018D3E  A4D8               	btfss	status,2,c
 19693  018D40  D024               	goto	l8207
 19694                           
 19695                           ;stkvar	_u @ sp[(-6)+0]
 19696  018D42  0EFA               	movlw	-6
 19697  018D44  006F FF8C  F009    	movff	plusw1,btemp+8
 19698  018D4A  0EFB               	movlw	-5
 19699  018D4C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19700  018D52  0EFC               	movlw	-4
 19701  018D54  006F FF8C  F00B    	movff	plusw1,btemp+10
 19702  018D5A  0EFD               	movlw	-3
 19703  018D5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19704  018D62  0E09               	movlw	9
 19705  018D64                     u6105:
 19706  018D64  90D8               	bcf	status,0,c
 19707  018D66  3609               	rlcf	(btemp+8)^0,f,c
 19708  018D68  360A               	rlcf	(btemp+9)^0,f,c
 19709  018D6A  360B               	rlcf	(btemp+10)^0,f,c
 19710  018D6C  360C               	rlcf	(btemp+11)^0,f,c
 19711  018D6E  2EE8               	decfsz	wreg,f,c
 19712  018D70  D7F9               	goto	u6105
 19713  018D72  5009               	movf	(btemp+8)^0,w,c
 19714  018D74  100A               	iorwf	(btemp+9)^0,w,c
 19715  018D76  100B               	iorwf	(btemp+10)^0,w,c
 19716  018D78  100C               	iorwf	(btemp+11)^0,w,c
 19717  018D7A  A4D8               	btfss	status,2,c
 19718  018D7C  D002               	goto	u6110
 19719  018D7E  0E01               	movlw	1
 19720  018D80  D001               	goto	u6120
 19721  018D82                     u6110:
 19722  018D82  0E00               	movlw	0
 19723  018D84                     u6120:
 19724  018D84  6E01               	movwf	btemp^0,c
 19725  018D86  6A02               	clrf	(btemp+1)^0,c
 19726  018D88  D004               	goto	l3159
 19727  018D8A                     l8207:
 19728  018D8A  0E04               	movlw	4
 19729  018D8C                     L22:
 19730  018D8C  6E01               	movwf	btemp^0,c
 19731  018D8E  0E00               	movlw	0
 19732  018D90  6E02               	movwf	(btemp+1)^0,c
 19733  018D92                     l3159:
 19734                           
 19735                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 19736  018D92  0EF6               	movlw	246
 19737  018D94  26E1               	addwf	fsr1l,f,c
 19738  018D96  0EFF               	movlw	255
 19739  018D98  22E2               	addwfc	fsr1h,f,c
 19740  018D9A  0012               	return		;funcret
 19741  018D9C                     __end_of___fpclassifyf:
 19742                           	opt callstack 0
 19743                           
 19744 ;; *************** function ___fltol *****************
 19745 ;; Defined at:
 19746 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 19747 ;; Parameters:    Size  Location     Type
 19748 ;;  f1              4  [STACK] int 
 19749 ;; Auto vars:     Size  Location     Type
 19750 ;;  exp1            1  [STACK] unsigned char 
 19751 ;;  sign1           1  [STACK] unsigned char 
 19752 ;; Return value:  Size  Location     Type
 19753 ;;                  4  [STACK] long 
 19754 ;; Registers used:
 19755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 19756 ;; Tracked objects:
 19757 ;;		On entry : 0/0
 19758 ;;		On exit  : 0/0
 19759 ;;		Unchanged: 0/0
 19760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19765 ;;Total ram usage:        0 bytes
 19766 ;; Hardware stack levels used:    1
 19767 ;; Hardware stack levels required when called:   15
 19768 ;; This function calls:
 19769 ;;		Nothing
 19770 ;; This function is called by:
 19771 ;;		_main
 19772 ;;		_convert_dac_raw
 19773 ;;		_calc_bsoc
 19774 ;;		_init_bsoc
 19775 ;;		_efgtoa
 19776 ;; This function uses a reentrant model
 19777 ;;
 19778                           
 19779                           	psect	text68
 19780  0190A2                     __ptext68:
 19781                           	opt callstack 0
 19782  0190A2                     ___fltol:
 19783                           	opt callstack 0
 19784                           
 19785                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19786  0190A2  52E6               	movf	postinc1,f,c
 19787  0190A4  52E6               	movf	postinc1,f,c
 19788                           
 19789                           ;stkvar	_f1 @ sp[(-2)+-4]
 19790                           
 19791                           ;incstack = 0
 19792 ;; hardware stack exceeded
 19793  0190A6  0EFA               	movlw	-6
 19794  0190A8  006F FF8C  F009    	movff	plusw1,btemp+8
 19795  0190AE  0EFB               	movlw	-5
 19796  0190B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 19797  0190B6  0EFC               	movlw	-4
 19798  0190B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19799  0190BE  0EFD               	movlw	-3
 19800  0190C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19801  0190C6  0E18               	movlw	24
 19802  0190C8  D005               	goto	u7270
 19803  0190CA                     u7275:
 19804  0190CA  90D8               	bcf	status,0,c
 19805  0190CC  320C               	rrcf	(btemp+11)^0,f,c
 19806  0190CE  320B               	rrcf	(btemp+10)^0,f,c
 19807  0190D0  320A               	rrcf	(btemp+9)^0,f,c
 19808  0190D2  3209               	rrcf	(btemp+8)^0,f,c
 19809  0190D4                     u7270:
 19810  0190D4  2EE8               	decfsz	wreg,f,c
 19811  0190D6  D7F9               	goto	u7275
 19812                           
 19813                           ;stkvar	_exp1 @ sp[(-2)+0]
 19814  0190D8  0EFE               	movlw	-2
 19815  0190DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19816  0190E0  0EFE               	movlw	-2
 19817  0190E2  50E3               	movf	plusw1,w,c
 19818  0190E4  A4D8               	btfss	status,2,c
 19819  0190E6  D006               	goto	l8827
 19820  0190E8                     u7280:
 19821  0190E8  0E00               	movlw	0
 19822  0190EA  6E01               	movwf	btemp^0,c
 19823  0190EC  6A02               	clrf	(btemp+1)^0,c
 19824  0190EE  6A03               	clrf	(btemp+2)^0,c
 19825  0190F0  6A04               	clrf	(btemp+3)^0,c
 19826  0190F2  D08B               	goto	l2775
 19827  0190F4                     l8827:
 19828                           
 19829                           ;stkvar	_f1 @ sp[(-2)+-4]
 19830  0190F4  0EFA               	movlw	-6
 19831  0190F6  006F FF8C  F009    	movff	plusw1,btemp+8
 19832  0190FC  0EFB               	movlw	-5
 19833  0190FE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19834  019104  0EFC               	movlw	-4
 19835  019106  006F FF8C  F00B    	movff	plusw1,btemp+10
 19836  01910C  0EFD               	movlw	-3
 19837  01910E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19838  019114  0E20               	movlw	32
 19839  019116  D005               	goto	u7290
 19840  019118                     u7295:
 19841  019118  90D8               	bcf	status,0,c
 19842  01911A  320C               	rrcf	(btemp+11)^0,f,c
 19843  01911C  320B               	rrcf	(btemp+10)^0,f,c
 19844  01911E  320A               	rrcf	(btemp+9)^0,f,c
 19845  019120  3209               	rrcf	(btemp+8)^0,f,c
 19846  019122                     u7290:
 19847  019122  2EE8               	decfsz	wreg,f,c
 19848  019124  D7F9               	goto	u7295
 19849                           
 19850                           ;stkvar	_sign1 @ sp[(-2)+1]
 19851  019126  0EFF               	movlw	-1
 19852  019128  0060  F027  FFE3   	movff	btemp+8,plusw1
 19853                           
 19854                           ;stkvar	_f1 @ sp[(-2)+-4]
 19855  01912E  0EFC               	movlw	-4
 19856  019130  8EE3               	bsf	plusw1,7,c
 19857                           
 19858                           ;stkvar	_f1 @ sp[(-2)+-4]
 19859  019132  50E1               	movf	fsr1l,w,c
 19860  019134  0FFA               	addlw	-6
 19861  019136  6ED9               	movwf	fsr2l,c
 19862  019138  50E2               	movf	fsr1h,w,c
 19863  01913A  6EDA               	movwf	fsr2h,c
 19864  01913C  0EFF               	movlw	255
 19865  01913E  22DA               	addwfc	fsr2h,f,c
 19866  019140  0EFF               	movlw	255
 19867  019142  16DE               	andwf	postinc2,f,c
 19868  019144  0EFF               	movlw	255
 19869  019146  16DE               	andwf	postinc2,f,c
 19870  019148  0EFF               	movlw	255
 19871  01914A  16DE               	andwf	postinc2,f,c
 19872  01914C  0E00               	movlw	0
 19873  01914E  16DE               	andwf	postinc2,f,c
 19874                           
 19875                           ;stkvar	_exp1 @ sp[(-2)+0]
 19876  019150  0EFE               	movlw	-2
 19877  019152  006F FF8C  F001    	movff	plusw1,btemp
 19878  019158  0E96               	movlw	150
 19879  01915A  5E01               	subwf	btemp^0,f,c
 19880  01915C  0EFE               	movlw	-2
 19881  01915E  0060  F007  FFE3   	movff	btemp,plusw1
 19882                           
 19883                           ;stkvar	_exp1 @ sp[(-2)+0]
 19884  019164  0EFE               	movlw	-2
 19885  019166  AEE3               	btfss	plusw1,7,c
 19886  019168  D014               	goto	l8845
 19887                           
 19888                           ;stkvar	_exp1 @ sp[(-2)+0]
 19889  01916A  0EFE               	movlw	-2
 19890  01916C  50E3               	movf	plusw1,w,c
 19891  01916E  0A80               	xorlw	128
 19892  019170  0F97               	addlw	151
 19893  019172  A0D8               	btfss	status,0,c
 19894  019174  D7B9               	goto	u7280
 19895  019176                     l8843:
 19896                           
 19897                           ;stkvar	_f1 @ sp[(-2)+-4]
 19898  019176  90D8               	bcf	status,0,c
 19899  019178  0EFD               	movlw	-3
 19900  01917A  32E3               	rrcf	plusw1,f,c
 19901  01917C  0EFC               	movlw	-4
 19902  01917E  32E3               	rrcf	plusw1,f,c
 19903  019180  0EFB               	movlw	-5
 19904  019182  32E3               	rrcf	plusw1,f,c
 19905  019184  0EFA               	movlw	-6
 19906  019186  32E3               	rrcf	plusw1,f,c
 19907                           
 19908                           ;stkvar	_exp1 @ sp[(-2)+0]
 19909  019188  0EFE               	movlw	-2
 19910  01918A  2AE3               	incf	plusw1,f,c
 19911  01918C  B4D8               	btfsc	status,2,c
 19912  01918E  D018               	goto	u7340
 19913  019190  D7F2               	goto	l8843
 19914  019192                     l8845:
 19915                           
 19916                           ;stkvar	_exp1 @ sp[(-2)+0]
 19917  019192  0EFE               	movlw	-2
 19918  019194  006F FF8C  F001    	movff	plusw1,btemp
 19919  01919A  0E1F               	movlw	31
 19920  01919C  6401               	cpfsgt	btemp^0,c
 19921  01919E  D00C               	goto	l8853
 19922  0191A0  D7A3               	goto	u7280
 19923  0191A2                     l8851:
 19924                           
 19925                           ;stkvar	_f1 @ sp[(-2)+-4]
 19926  0191A2  90D8               	bcf	status,0,c
 19927  0191A4  0EFA               	movlw	-6
 19928  0191A6  36E3               	rlcf	plusw1,f,c
 19929  0191A8  0EFB               	movlw	-5
 19930  0191AA  36E3               	rlcf	plusw1,f,c
 19931  0191AC  0EFC               	movlw	-4
 19932  0191AE  36E3               	rlcf	plusw1,f,c
 19933  0191B0  0EFD               	movlw	-3
 19934  0191B2  36E3               	rlcf	plusw1,f,c
 19935                           
 19936                           ;stkvar	_exp1 @ sp[(-2)+0]
 19937  0191B4  0EFE               	movlw	-2
 19938  0191B6  06E3               	decf	plusw1,f,c
 19939  0191B8                     l8853:
 19940                           
 19941                           ;stkvar	_exp1 @ sp[(-2)+0]
 19942  0191B8  0EFE               	movlw	-2
 19943  0191BA  50E3               	movf	plusw1,w,c
 19944  0191BC  A4D8               	btfss	status,2,c
 19945  0191BE  D7F1               	goto	l8851
 19946  0191C0                     u7340:
 19947                           
 19948                           ;stkvar	_sign1 @ sp[(-2)+1]
 19949  0191C0  0EFF               	movlw	-1
 19950  0191C2  50E3               	movf	plusw1,w,c
 19951  0191C4  B4D8               	btfsc	status,2,c
 19952  0191C6  D011               	goto	u7360
 19953                           
 19954                           ;stkvar	_f1 @ sp[(-2)+-4]
 19955                           ;stkvar	_f1 @ sp[(-2)+-4]
 19956  0191C8  0EFA               	movlw	-6
 19957  0191CA  6CE3               	negf	plusw1,c
 19958  0191CC  0EFB               	movlw	-5
 19959  0191CE  1EE3               	comf	plusw1,f,c
 19960  0191D0  0EFC               	movlw	-4
 19961  0191D2  1EE3               	comf	plusw1,f,c
 19962  0191D4  0EFD               	movlw	-3
 19963  0191D6  1EE3               	comf	plusw1,f,c
 19964  0191D8  E308               	bnc	u7360
 19965  0191DA  0EFB               	movlw	-5
 19966  0191DC  2AE3               	incf	plusw1,f,c
 19967  0191DE  E305               	bnc	u7360
 19968  0191E0  0EFC               	movlw	-4
 19969  0191E2  2AE3               	incf	plusw1,f,c
 19970  0191E4  E302               	bnc	u7360
 19971  0191E6  0EFD               	movlw	-3
 19972  0191E8  2AE3               	incf	plusw1,f,c
 19973  0191EA                     u7360:
 19974                           
 19975                           ;stkvar	_f1 @ sp[(-2)+-4]
 19976  0191EA  0EFA               	movlw	-6
 19977  0191EC  006F FF8C  F001    	movff	plusw1,btemp
 19978  0191F2  0EFB               	movlw	-5
 19979  0191F4  006F FF8C  F002    	movff	plusw1,btemp+1
 19980  0191FA  0EFC               	movlw	-4
 19981  0191FC  006F FF8C  F003    	movff	plusw1,btemp+2
 19982  019202  0EFD               	movlw	-3
 19983  019204  006F FF8C  F004    	movff	plusw1,btemp+3
 19984  01920A                     l2775:
 19985                           
 19986                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19987  01920A  0EFA               	movlw	250
 19988  01920C  26E1               	addwf	fsr1l,f,c
 19989  01920E  0EFF               	movlw	255
 19990  019210  22E2               	addwfc	fsr1h,f,c
 19991  019212  0012               	return		;funcret
 19992  019214                     __end_of___fltol:
 19993                           	opt callstack 0
 19994                           
 19995 ;; *************** function ___flneg *****************
 19996 ;; Defined at:
 19997 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 19998 ;; Parameters:    Size  Location     Type
 19999 ;;  f1              4  [STACK] long 
 20000 ;; Auto vars:     Size  Location     Type
 20001 ;;		None
 20002 ;; Return value:  Size  Location     Type
 20003 ;;                  4  [STACK] long 
 20004 ;; Registers used:
 20005 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 20006 ;; Tracked objects:
 20007 ;;		On entry : 0/0
 20008 ;;		On exit  : 0/0
 20009 ;;		Unchanged: 0/0
 20010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20015 ;;Total ram usage:        0 bytes
 20016 ;; Hardware stack levels used:    1
 20017 ;; Hardware stack levels required when called:   15
 20018 ;; This function calls:
 20019 ;;		Nothing
 20020 ;; This function is called by:
 20021 ;;		_calc_bsoc
 20022 ;;		_efgtoa
 20023 ;; This function uses a reentrant model
 20024 ;;
 20025                           
 20026                           	psect	text69
 20027  01B830                     __ptext69:
 20028                           	opt callstack 0
 20029  01B830                     ___flneg:
 20030                           	opt callstack 0
 20031                           
 20032                           ;stkvar	_f1 @ sp[(0)+-4]
 20033                           
 20034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20035                           ;incstack = 0
 20036 ;; hardware stack exceeded
 20037  01B830  0EFC               	movlw	-4
 20038  01B832  50E3               	movf	plusw1,w,c
 20039  01B834  E10A               	bnz	u7260
 20040  01B836  0EFD               	movlw	-3
 20041  01B838  50E3               	movf	plusw1,w,c
 20042  01B83A  E107               	bnz	u7260
 20043  01B83C  0EFE               	movlw	-2
 20044  01B83E  50E3               	movf	plusw1,w,c
 20045  01B840  E104               	bnz	u7260
 20046  01B842  0EFF               	movlw	-1
 20047  01B844  50E3               	movf	plusw1,w,c
 20048  01B846  B4D8               	btfsc	status,2,c
 20049  01B848  D002               	goto	l8817
 20050  01B84A                     u7260:
 20051                           
 20052                           ;stkvar	_f1 @ sp[(0)+-4]
 20053  01B84A  0EFF               	movlw	-1
 20054  01B84C  7EE3               	btg	plusw1,7,c
 20055  01B84E                     l8817:
 20056                           
 20057                           ;stkvar	_f1 @ sp[(0)+-4]
 20058  01B84E  0EFC               	movlw	-4
 20059  01B850  006F FF8C  F001    	movff	plusw1,btemp
 20060  01B856  0EFD               	movlw	-3
 20061  01B858  006F FF8C  F002    	movff	plusw1,btemp+1
 20062  01B85E  0EFE               	movlw	-2
 20063  01B860  006F FF8C  F003    	movff	plusw1,btemp+2
 20064  01B866  0EFF               	movlw	-1
 20065  01B868  006F FF8C  F004    	movff	plusw1,btemp+3
 20066                           
 20067                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20068  01B86E  52E5               	movf	postdec1,f,c
 20069  01B870  52E5               	movf	postdec1,f,c
 20070  01B872  52E5               	movf	postdec1,f,c
 20071  01B874  52E5               	movf	postdec1,f,c
 20072  01B876  0012               	return		;funcret
 20073  01B878                     __end_of___flneg:
 20074                           	opt callstack 0
 20075                           
 20076 ;; *************** function ___fleq *****************
 20077 ;; Defined at:
 20078 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 20079 ;; Parameters:    Size  Location     Type
 20080 ;;  ff1             4  [STACK] long 
 20081 ;;  ff2             4  [STACK] long 
 20082 ;; Auto vars:     Size  Location     Type
 20083 ;;		None
 20084 ;; Return value:  Size  Location     Type
 20085 ;;		None               void
 20086 ;; Registers used:
 20087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20088 ;; Tracked objects:
 20089 ;;		On entry : 0/0
 20090 ;;		On exit  : 0/0
 20091 ;;		Unchanged: 0/0
 20092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20097 ;;Total ram usage:        0 bytes
 20098 ;; Hardware stack levels used:    1
 20099 ;; Hardware stack levels required when called:   15
 20100 ;; This function calls:
 20101 ;;		Nothing
 20102 ;; This function is called by:
 20103 ;;		_efgtoa
 20104 ;; This function uses a reentrant model
 20105 ;;
 20106                           
 20107                           	psect	text70
 20108  01A666                     __ptext70:
 20109                           	opt callstack 0
 20110  01A666                     ___fleq:
 20111                           	opt callstack 0
 20112                           
 20113                           ;stkvar	_ff1 @ sp[(0)+-4]
 20114                           
 20115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20116                           ;incstack = 0
 20117 ;; hardware stack exceeded
 20118  01A666  50E1               	movf	fsr1l,w,c
 20119  01A668  0FFC               	addlw	-4
 20120  01A66A  6ED9               	movwf	fsr2l,c
 20121  01A66C  50E2               	movf	fsr1h,w,c
 20122  01A66E  6EDA               	movwf	fsr2h,c
 20123  01A670  0EFF               	movlw	255
 20124  01A672  22DA               	addwfc	fsr2h,f,c
 20125  01A674  0E00               	movlw	0
 20126  01A676  14DE               	andwf	postinc2,w,c
 20127  01A678  6E09               	movwf	(btemp+8)^0,c
 20128  01A67A  0E00               	movlw	0
 20129  01A67C  14DE               	andwf	postinc2,w,c
 20130  01A67E  6E0A               	movwf	(btemp+9)^0,c
 20131  01A680  0E80               	movlw	128
 20132  01A682  14DE               	andwf	postinc2,w,c
 20133  01A684  6E0B               	movwf	(btemp+10)^0,c
 20134  01A686  0E7F               	movlw	127
 20135  01A688  14DE               	andwf	postinc2,w,c
 20136  01A68A  6E0C               	movwf	(btemp+11)^0,c
 20137  01A68C  5009               	movf	(btemp+8)^0,w,c
 20138  01A68E  100A               	iorwf	(btemp+9)^0,w,c
 20139  01A690  100B               	iorwf	(btemp+10)^0,w,c
 20140  01A692  100C               	iorwf	(btemp+11)^0,w,c
 20141  01A694  A4D8               	btfss	status,2,c
 20142  01A696  D008               	goto	l8775
 20143                           
 20144                           ;stkvar	_ff1 @ sp[(0)+-4]
 20145  01A698  0EFC               	movlw	-4
 20146  01A69A  6AE3               	clrf	plusw1,c
 20147  01A69C  0EFD               	movlw	-3
 20148  01A69E  6AE3               	clrf	plusw1,c
 20149  01A6A0  0EFE               	movlw	-2
 20150  01A6A2  6AE3               	clrf	plusw1,c
 20151  01A6A4  0EFF               	movlw	-1
 20152  01A6A6  6AE3               	clrf	plusw1,c
 20153  01A6A8                     l8775:
 20154                           
 20155                           ;stkvar	_ff2 @ sp[(0)+-8]
 20156  01A6A8  50E1               	movf	fsr1l,w,c
 20157  01A6AA  0FF8               	addlw	-8
 20158  01A6AC  6ED9               	movwf	fsr2l,c
 20159  01A6AE  50E2               	movf	fsr1h,w,c
 20160  01A6B0  6EDA               	movwf	fsr2h,c
 20161  01A6B2  0EFF               	movlw	255
 20162  01A6B4  22DA               	addwfc	fsr2h,f,c
 20163  01A6B6  0E00               	movlw	0
 20164  01A6B8  14DE               	andwf	postinc2,w,c
 20165  01A6BA  6E09               	movwf	(btemp+8)^0,c
 20166  01A6BC  0E00               	movlw	0
 20167  01A6BE  14DE               	andwf	postinc2,w,c
 20168  01A6C0  6E0A               	movwf	(btemp+9)^0,c
 20169  01A6C2  0E80               	movlw	128
 20170  01A6C4  14DE               	andwf	postinc2,w,c
 20171  01A6C6  6E0B               	movwf	(btemp+10)^0,c
 20172  01A6C8  0E7F               	movlw	127
 20173  01A6CA  14DE               	andwf	postinc2,w,c
 20174  01A6CC  6E0C               	movwf	(btemp+11)^0,c
 20175  01A6CE  5009               	movf	(btemp+8)^0,w,c
 20176  01A6D0  100A               	iorwf	(btemp+9)^0,w,c
 20177  01A6D2  100B               	iorwf	(btemp+10)^0,w,c
 20178  01A6D4  100C               	iorwf	(btemp+11)^0,w,c
 20179  01A6D6  A4D8               	btfss	status,2,c
 20180  01A6D8  D008               	goto	l8779
 20181                           
 20182                           ;stkvar	_ff2 @ sp[(0)+-8]
 20183  01A6DA  0EF8               	movlw	-8
 20184  01A6DC  6AE3               	clrf	plusw1,c
 20185  01A6DE  0EF9               	movlw	-7
 20186  01A6E0  6AE3               	clrf	plusw1,c
 20187  01A6E2  0EFA               	movlw	-6
 20188  01A6E4  6AE3               	clrf	plusw1,c
 20189  01A6E6  0EFB               	movlw	-5
 20190  01A6E8  6AE3               	clrf	plusw1,c
 20191  01A6EA                     l8779:
 20192                           
 20193                           ;stkvar	_ff2 @ sp[(0)+-8]
 20194                           ;stkvar	_ff1 @ sp[(0)+-4]
 20195  01A6EA  50E1               	movf	fsr1l,w,c
 20196  01A6EC  0FFC               	addlw	-4
 20197  01A6EE  6ED9               	movwf	fsr2l,c
 20198  01A6F0  50E2               	movf	fsr1h,w,c
 20199  01A6F2  6EDA               	movwf	fsr2h,c
 20200  01A6F4  0EFF               	movlw	255
 20201  01A6F6  22DA               	addwfc	fsr2h,f,c
 20202  01A6F8  0EF8               	movlw	-8
 20203  01A6FA  50E3               	movf	plusw1,w,c
 20204  01A6FC  18DE               	xorwf	postinc2,w,c
 20205  01A6FE  E10D               	bnz	u7200
 20206  01A700  0EF9               	movlw	-7
 20207  01A702  50E3               	movf	plusw1,w,c
 20208  01A704  18DE               	xorwf	postinc2,w,c
 20209  01A706  E109               	bnz	u7200
 20210  01A708  0EFA               	movlw	-6
 20211  01A70A  50E3               	movf	plusw1,w,c
 20212  01A70C  18DE               	xorwf	postinc2,w,c
 20213  01A70E  E105               	bnz	u7200
 20214  01A710  0EFB               	movlw	-5
 20215  01A712  50E3               	movf	plusw1,w,c
 20216  01A714  18DE               	xorwf	postinc2,w,c
 20217  01A716  B4D8               	btfsc	status,2,c
 20218  01A718  D002               	goto	l8783
 20219  01A71A                     u7200:
 20220  01A71A  9001               	bcf	btemp& (0+255),0,c
 20221  01A71C  D001               	goto	l2737
 20222  01A71E                     l8783:
 20223  01A71E  8001               	bsf	btemp& (0+255),0,c
 20224  01A720                     l2737:
 20225                           
 20226                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 20227  01A720  0EF8               	movlw	248
 20228  01A722  26E1               	addwf	fsr1l,f,c
 20229  01A724  0EFF               	movlw	255
 20230  01A726  22E2               	addwfc	fsr1h,f,c
 20231  01A728  0012               	return		;funcret
 20232  01A72A                     __end_of___fleq:
 20233                           	opt callstack 0
 20234                           
 20235 ;; *************** function ___awmod *****************
 20236 ;; Defined at:
 20237 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 20238 ;; Parameters:    Size  Location     Type
 20239 ;;  dividend        2  [STACK] int 
 20240 ;;  divisor         2  [STACK] int 
 20241 ;; Auto vars:     Size  Location     Type
 20242 ;;  sign            1  [STACK] unsigned char 
 20243 ;;  counter         1  [STACK] unsigned char 
 20244 ;; Return value:  Size  Location     Type
 20245 ;;                  2  [STACK] int 
 20246 ;; Registers used:
 20247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20248 ;; Tracked objects:
 20249 ;;		On entry : 0/0
 20250 ;;		On exit  : 0/0
 20251 ;;		Unchanged: 0/0
 20252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20257 ;;Total ram usage:        0 bytes
 20258 ;; Hardware stack levels used:    1
 20259 ;; Hardware stack levels required when called:   15
 20260 ;; This function calls:
 20261 ;;		Nothing
 20262 ;; This function is called by:
 20263 ;;		_efgtoa
 20264 ;; This function uses a reentrant model
 20265 ;;
 20266                           
 20267                           	psect	text71
 20268  019C08                     __ptext71:
 20269                           	opt callstack 0
 20270  019C08                     ___awmod:
 20271                           	opt callstack 0
 20272                           
 20273                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20274  019C08  52E6               	movf	postinc1,f,c
 20275  019C0A  52E6               	movf	postinc1,f,c
 20276                           
 20277                           ;stkvar	_sign @ sp[(-2)+0]
 20278                           
 20279                           ;incstack = 0
 20280 ;; hardware stack exceeded
 20281  019C0C  0EFE               	movlw	-2
 20282  019C0E  6AE3               	clrf	plusw1,c
 20283                           
 20284                           ;stkvar	_dividend @ sp[(-2)+-2]
 20285  019C10  0EFD               	movlw	-3
 20286  019C12  AEE3               	btfss	plusw1,7,c
 20287  019C14  D009               	goto	l8741
 20288                           
 20289                           ;stkvar	_dividend @ sp[(-2)+-2]
 20290                           ;stkvar	_dividend @ sp[(-2)+-2]
 20291  019C16  0EFC               	movlw	-4
 20292  019C18  6CE3               	negf	plusw1,c
 20293  019C1A  0EFD               	movlw	-3
 20294  019C1C  1EE3               	comf	plusw1,f,c
 20295  019C1E  B0D8               	btfsc	status,0,c
 20296  019C20  2AE3               	incf	plusw1,f,c
 20297                           
 20298                           ;stkvar	_sign @ sp[(-2)+0]
 20299  019C22  0EFE               	movlw	-2
 20300  019C24  6AE3               	clrf	plusw1,c
 20301  019C26  2AE3               	incf	plusw1,f,c
 20302  019C28                     l8741:
 20303                           
 20304                           ;stkvar	_divisor @ sp[(-2)+-4]
 20305  019C28  0EFB               	movlw	-5
 20306  019C2A  AEE3               	btfss	plusw1,7,c
 20307  019C2C  D006               	goto	l8745
 20308                           
 20309                           ;stkvar	_divisor @ sp[(-2)+-4]
 20310                           ;stkvar	_divisor @ sp[(-2)+-4]
 20311  019C2E  0EFA               	movlw	-6
 20312  019C30  6CE3               	negf	plusw1,c
 20313  019C32  0EFB               	movlw	-5
 20314  019C34  1EE3               	comf	plusw1,f,c
 20315  019C36  B0D8               	btfsc	status,0,c
 20316  019C38  2AE3               	incf	plusw1,f,c
 20317  019C3A                     l8745:
 20318                           
 20319                           ;stkvar	_divisor @ sp[(-2)+-4]
 20320  019C3A  0EFA               	movlw	-6
 20321  019C3C  006F FF8C  F001    	movff	plusw1,btemp
 20322  019C42  0EFB               	movlw	-5
 20323  019C44  50E3               	movf	plusw1,w,c
 20324  019C46  1001               	iorwf	btemp^0,w,c
 20325  019C48  B4D8               	btfsc	status,2,c
 20326  019C4A  D053               	goto	u7160
 20327                           
 20328                           ;stkvar	_counter @ sp[(-2)+1]
 20329  019C4C  0EFF               	movlw	-1
 20330  019C4E  6AE3               	clrf	plusw1,c
 20331  019C50  D012               	goto	L23
 20332  019C52                     l8749:
 20333                           
 20334                           ;stkvar	_divisor @ sp[(-2)+-4]
 20335  019C52  0EFA               	movlw	-6
 20336  019C54  50E3               	movf	plusw1,w,c
 20337  019C56  90D8               	bcf	status,0,c
 20338  019C58  34E8               	rlcf	wreg,w,c
 20339  019C5A  6E01               	movwf	btemp^0,c
 20340  019C5C  0EFA               	movlw	-6
 20341  019C5E  0060  F007  FFE3   	movff	btemp,plusw1
 20342  019C64  0EFB               	movlw	-5
 20343  019C66  50E3               	movf	plusw1,w,c
 20344  019C68  34E8               	rlcf	wreg,w,c
 20345  019C6A  6E01               	movwf	btemp^0,c
 20346  019C6C  0EFB               	movlw	-5
 20347  019C6E  0060  F007  FFE3   	movff	btemp,plusw1
 20348                           
 20349                           ;stkvar	_counter @ sp[(-2)+1]
 20350  019C74  0EFF               	movlw	-1
 20351  019C76                     L23:
 20352  019C76  2AE3               	incf	plusw1,f,c
 20353                           
 20354                           ;stkvar	_divisor @ sp[(-2)+-4]
 20355  019C78  0EFB               	movlw	-5
 20356  019C7A  AEE3               	btfss	plusw1,7,c
 20357  019C7C  D7EA               	goto	l8749
 20358  019C7E                     u7140:
 20359                           
 20360                           ;stkvar	_divisor @ sp[(-2)+-4]
 20361  019C7E  0EFA               	movlw	-6
 20362  019C80  006F FF8C  F00B    	movff	plusw1,btemp+10
 20363  019C86  0EFB               	movlw	-5
 20364  019C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 20365                           
 20366                           ;stkvar	_dividend @ sp[(-2)+-2]
 20367  019C8E  0EFC               	movlw	-4
 20368  019C90  006F FF8C  F009    	movff	plusw1,btemp+8
 20369  019C96  0EFD               	movlw	-3
 20370  019C98  006F FF8C  F00A    	movff	plusw1,btemp+9
 20371  019C9E  500B               	movf	(btemp+10)^0,w,c
 20372  019CA0  5C09               	subwf	(btemp+8)^0,w,c
 20373  019CA2  500C               	movf	(btemp+11)^0,w,c
 20374  019CA4  580A               	subwfb	(btemp+9)^0,w,c
 20375  019CA6  A0D8               	btfss	status,0,c
 20376  019CA8  D014               	goto	l8759
 20377                           
 20378                           ;stkvar	_divisor @ sp[(-2)+-4]
 20379                           ;stkvar	_dividend @ sp[(-2)+-2]
 20380  019CAA  0EFC               	movlw	-4
 20381  019CAC  50E3               	movf	plusw1,w,c
 20382  019CAE  6E01               	movwf	btemp^0,c
 20383  019CB0  0EFA               	movlw	-6
 20384  019CB2  50E3               	movf	plusw1,w,c
 20385  019CB4  5E01               	subwf	btemp^0,f,c
 20386  019CB6  0EFC               	movlw	-4
 20387  019CB8  0060  F007  FFE3   	movff	btemp,plusw1
 20388  019CBE  0EFD               	movlw	-3
 20389  019CC0  50E3               	movf	plusw1,w,c
 20390  019CC2  6E01               	movwf	btemp^0,c
 20391  019CC4  0EFB               	movlw	-5
 20392  019CC6  50E3               	movf	plusw1,w,c
 20393  019CC8  5A01               	subwfb	btemp^0,f,c
 20394  019CCA  0EFD               	movlw	-3
 20395  019CCC  0060  F007  FFE3   	movff	btemp,plusw1
 20396  019CD2                     l8759:
 20397                           
 20398                           ;stkvar	_divisor @ sp[(-2)+-4]
 20399  019CD2  90D8               	bcf	status,0,c
 20400  019CD4  0EFB               	movlw	-5
 20401  019CD6  32E3               	rrcf	plusw1,f,c
 20402  019CD8  0EFA               	movlw	-6
 20403  019CDA  32E3               	rrcf	plusw1,f,c
 20404                           
 20405                           ;stkvar	_counter @ sp[(-2)+1]
 20406  019CDC  0EFF               	movlw	-1
 20407  019CDE  50E3               	movf	plusw1,w,c
 20408  019CE0  6E01               	movwf	btemp^0,c
 20409  019CE2  0E01               	movlw	1
 20410  019CE4  5E01               	subwf	btemp^0,f,c
 20411  019CE6  0EFF               	movlw	-1
 20412  019CE8  0060  F007  FFE3   	movff	btemp,plusw1
 20413  019CEE  A4D8               	btfss	status,2,c
 20414  019CF0  D7C6               	goto	u7140
 20415  019CF2                     u7160:
 20416                           
 20417                           ;stkvar	_sign @ sp[(-2)+0]
 20418  019CF2  0EFE               	movlw	-2
 20419  019CF4  50E3               	movf	plusw1,w,c
 20420  019CF6  B4D8               	btfsc	status,2,c
 20421  019CF8  D006               	goto	l8767
 20422                           
 20423                           ;stkvar	_dividend @ sp[(-2)+-2]
 20424                           ;stkvar	_dividend @ sp[(-2)+-2]
 20425  019CFA  0EFC               	movlw	-4
 20426  019CFC  6CE3               	negf	plusw1,c
 20427  019CFE  0EFD               	movlw	-3
 20428  019D00  1EE3               	comf	plusw1,f,c
 20429  019D02  B0D8               	btfsc	status,0,c
 20430  019D04  2AE3               	incf	plusw1,f,c
 20431  019D06                     l8767:
 20432                           
 20433                           ;stkvar	_dividend @ sp[(-2)+-2]
 20434  019D06  0EFC               	movlw	-4
 20435  019D08  006F FF8C  F001    	movff	plusw1,btemp
 20436  019D0E  0EFD               	movlw	-3
 20437  019D10  006F FF8C  F002    	movff	plusw1,btemp+1
 20438                           
 20439                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20440  019D16  0EFA               	movlw	250
 20441  019D18  26E1               	addwf	fsr1l,f,c
 20442  019D1A  0EFF               	movlw	255
 20443  019D1C  22E2               	addwfc	fsr1h,f,c
 20444  019D1E  0012               	return		;funcret
 20445  019D20                     __end_of___awmod:
 20446                           	opt callstack 0
 20447                           
 20448 ;; *************** function ___awdiv *****************
 20449 ;; Defined at:
 20450 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 20451 ;; Parameters:    Size  Location     Type
 20452 ;;  dividend        2  [STACK] int 
 20453 ;;  divisor         2  [STACK] int 
 20454 ;; Auto vars:     Size  Location     Type
 20455 ;;  quotient        2  [STACK] int 
 20456 ;;  sign            1  [STACK] unsigned char 
 20457 ;;  counter         1  [STACK] unsigned char 
 20458 ;; Return value:  Size  Location     Type
 20459 ;;                  2  [STACK] int 
 20460 ;; Registers used:
 20461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20462 ;; Tracked objects:
 20463 ;;		On entry : 0/0
 20464 ;;		On exit  : 0/0
 20465 ;;		Unchanged: 0/0
 20466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20471 ;;Total ram usage:        0 bytes
 20472 ;; Hardware stack levels used:    1
 20473 ;; Hardware stack levels required when called:   15
 20474 ;; This function calls:
 20475 ;;		Nothing
 20476 ;; This function is called by:
 20477 ;;		_efgtoa
 20478 ;; This function uses a reentrant model
 20479 ;;
 20480                           
 20481                           	psect	text72
 20482  0194DA                     __ptext72:
 20483                           	opt callstack 0
 20484  0194DA                     ___awdiv:
 20485                           	opt callstack 0
 20486                           
 20487                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20488  0194DA  52E6               	movf	postinc1,f,c
 20489  0194DC  52E6               	movf	postinc1,f,c
 20490  0194DE  52E6               	movf	postinc1,f,c
 20491  0194E0  52E6               	movf	postinc1,f,c
 20492                           
 20493                           ;stkvar	_sign @ sp[(-4)+2]
 20494                           
 20495                           ;incstack = 0
 20496 ;; hardware stack exceeded
 20497  0194E2  0EFE               	movlw	-2
 20498  0194E4  6AE3               	clrf	plusw1,c
 20499                           
 20500                           ;stkvar	_divisor @ sp[(-4)+-4]
 20501  0194E6  0EF9               	movlw	-7
 20502  0194E8  AEE3               	btfss	plusw1,7,c
 20503  0194EA  D009               	goto	l8695
 20504                           
 20505                           ;stkvar	_divisor @ sp[(-4)+-4]
 20506                           ;stkvar	_divisor @ sp[(-4)+-4]
 20507  0194EC  0EF8               	movlw	-8
 20508  0194EE  6CE3               	negf	plusw1,c
 20509  0194F0  0EF9               	movlw	-7
 20510  0194F2  1EE3               	comf	plusw1,f,c
 20511  0194F4  B0D8               	btfsc	status,0,c
 20512  0194F6  2AE3               	incf	plusw1,f,c
 20513                           
 20514                           ;stkvar	_sign @ sp[(-4)+2]
 20515  0194F8  0EFE               	movlw	-2
 20516  0194FA  6AE3               	clrf	plusw1,c
 20517  0194FC  2AE3               	incf	plusw1,f,c
 20518  0194FE                     l8695:
 20519                           
 20520                           ;stkvar	_dividend @ sp[(-4)+-2]
 20521  0194FE  0EFB               	movlw	-5
 20522  019500  AEE3               	btfss	plusw1,7,c
 20523  019502  D008               	goto	l8701
 20524                           
 20525                           ;stkvar	_dividend @ sp[(-4)+-2]
 20526                           ;stkvar	_dividend @ sp[(-4)+-2]
 20527  019504  0EFA               	movlw	-6
 20528  019506  6CE3               	negf	plusw1,c
 20529  019508  0EFB               	movlw	-5
 20530  01950A  1EE3               	comf	plusw1,f,c
 20531  01950C  B0D8               	btfsc	status,0,c
 20532  01950E  2AE3               	incf	plusw1,f,c
 20533                           
 20534                           ;stkvar	_sign @ sp[(-4)+2]
 20535  019510  0EFE               	movlw	-2
 20536  019512  70E3               	btg	plusw1,0,c
 20537  019514                     l8701:
 20538                           
 20539                           ;stkvar	_quotient @ sp[(-4)+0]
 20540  019514  0EFC               	movlw	-4
 20541  019516  6AE3               	clrf	plusw1,c
 20542  019518  0EFD               	movlw	-3
 20543  01951A  6AE3               	clrf	plusw1,c
 20544                           
 20545                           ;stkvar	_divisor @ sp[(-4)+-4]
 20546  01951C  0EF8               	movlw	-8
 20547  01951E  006F FF8C  F001    	movff	plusw1,btemp
 20548  019524  0EF9               	movlw	-7
 20549  019526  50E3               	movf	plusw1,w,c
 20550  019528  1001               	iorwf	btemp^0,w,c
 20551  01952A  B4D8               	btfsc	status,2,c
 20552  01952C  D066               	goto	u7090
 20553                           
 20554                           ;stkvar	_counter @ sp[(-4)+3]
 20555  01952E  0EFF               	movlw	-1
 20556  019530  6AE3               	clrf	plusw1,c
 20557  019532  D012               	goto	L24
 20558  019534                     l8707:
 20559                           
 20560                           ;stkvar	_divisor @ sp[(-4)+-4]
 20561  019534  0EF8               	movlw	-8
 20562  019536  50E3               	movf	plusw1,w,c
 20563  019538  90D8               	bcf	status,0,c
 20564  01953A  34E8               	rlcf	wreg,w,c
 20565  01953C  6E01               	movwf	btemp^0,c
 20566  01953E  0EF8               	movlw	-8
 20567  019540  0060  F007  FFE3   	movff	btemp,plusw1
 20568  019546  0EF9               	movlw	-7
 20569  019548  50E3               	movf	plusw1,w,c
 20570  01954A  34E8               	rlcf	wreg,w,c
 20571  01954C  6E01               	movwf	btemp^0,c
 20572  01954E  0EF9               	movlw	-7
 20573  019550  0060  F007  FFE3   	movff	btemp,plusw1
 20574                           
 20575                           ;stkvar	_counter @ sp[(-4)+3]
 20576  019556  0EFF               	movlw	-1
 20577  019558                     L24:
 20578  019558  2AE3               	incf	plusw1,f,c
 20579                           
 20580                           ;stkvar	_divisor @ sp[(-4)+-4]
 20581  01955A  0EF9               	movlw	-7
 20582  01955C  AEE3               	btfss	plusw1,7,c
 20583  01955E  D7EA               	goto	l8707
 20584  019560                     u7070:
 20585                           
 20586                           ;stkvar	_quotient @ sp[(-4)+0]
 20587  019560  0EFC               	movlw	-4
 20588  019562  50E3               	movf	plusw1,w,c
 20589  019564  90D8               	bcf	status,0,c
 20590  019566  34E8               	rlcf	wreg,w,c
 20591  019568  6E01               	movwf	btemp^0,c
 20592  01956A  0EFC               	movlw	-4
 20593  01956C  0060  F007  FFE3   	movff	btemp,plusw1
 20594  019572  0EFD               	movlw	-3
 20595  019574  50E3               	movf	plusw1,w,c
 20596  019576  34E8               	rlcf	wreg,w,c
 20597  019578  6E01               	movwf	btemp^0,c
 20598  01957A  0EFD               	movlw	-3
 20599  01957C  0060  F007  FFE3   	movff	btemp,plusw1
 20600                           
 20601                           ;stkvar	_divisor @ sp[(-4)+-4]
 20602  019582  0EF8               	movlw	-8
 20603  019584  006F FF8C  F00B    	movff	plusw1,btemp+10
 20604  01958A  0EF9               	movlw	-7
 20605  01958C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20606                           
 20607                           ;stkvar	_dividend @ sp[(-4)+-2]
 20608  019592  0EFA               	movlw	-6
 20609  019594  006F FF8C  F009    	movff	plusw1,btemp+8
 20610  01959A  0EFB               	movlw	-5
 20611  01959C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20612  0195A2  500B               	movf	(btemp+10)^0,w,c
 20613  0195A4  5C09               	subwf	(btemp+8)^0,w,c
 20614  0195A6  500C               	movf	(btemp+11)^0,w,c
 20615  0195A8  580A               	subwfb	(btemp+9)^0,w,c
 20616  0195AA  A0D8               	btfss	status,0,c
 20617  0195AC  D016               	goto	l8721
 20618                           
 20619                           ;stkvar	_divisor @ sp[(-4)+-4]
 20620                           ;stkvar	_dividend @ sp[(-4)+-2]
 20621  0195AE  0EFA               	movlw	-6
 20622  0195B0  50E3               	movf	plusw1,w,c
 20623  0195B2  6E01               	movwf	btemp^0,c
 20624  0195B4  0EF8               	movlw	-8
 20625  0195B6  50E3               	movf	plusw1,w,c
 20626  0195B8  5E01               	subwf	btemp^0,f,c
 20627  0195BA  0EFA               	movlw	-6
 20628  0195BC  0060  F007  FFE3   	movff	btemp,plusw1
 20629  0195C2  0EFB               	movlw	-5
 20630  0195C4  50E3               	movf	plusw1,w,c
 20631  0195C6  6E01               	movwf	btemp^0,c
 20632  0195C8  0EF9               	movlw	-7
 20633  0195CA  50E3               	movf	plusw1,w,c
 20634  0195CC  5A01               	subwfb	btemp^0,f,c
 20635  0195CE  0EFB               	movlw	-5
 20636  0195D0  0060  F007  FFE3   	movff	btemp,plusw1
 20637                           
 20638                           ;stkvar	_quotient @ sp[(-4)+0]
 20639  0195D6  0EFC               	movlw	-4
 20640  0195D8  80E3               	bsf	plusw1,0,c
 20641  0195DA                     l8721:
 20642                           
 20643                           ;stkvar	_divisor @ sp[(-4)+-4]
 20644  0195DA  90D8               	bcf	status,0,c
 20645  0195DC  0EF9               	movlw	-7
 20646  0195DE  32E3               	rrcf	plusw1,f,c
 20647  0195E0  0EF8               	movlw	-8
 20648  0195E2  32E3               	rrcf	plusw1,f,c
 20649                           
 20650                           ;stkvar	_counter @ sp[(-4)+3]
 20651  0195E4  0EFF               	movlw	-1
 20652  0195E6  50E3               	movf	plusw1,w,c
 20653  0195E8  6E01               	movwf	btemp^0,c
 20654  0195EA  0E01               	movlw	1
 20655  0195EC  5E01               	subwf	btemp^0,f,c
 20656  0195EE  0EFF               	movlw	-1
 20657  0195F0  0060  F007  FFE3   	movff	btemp,plusw1
 20658  0195F6  A4D8               	btfss	status,2,c
 20659  0195F8  D7B3               	goto	u7070
 20660  0195FA                     u7090:
 20661                           
 20662                           ;stkvar	_sign @ sp[(-4)+2]
 20663  0195FA  0EFE               	movlw	-2
 20664  0195FC  50E3               	movf	plusw1,w,c
 20665  0195FE  B4D8               	btfsc	status,2,c
 20666  019600  D006               	goto	l8729
 20667                           
 20668                           ;stkvar	_quotient @ sp[(-4)+0]
 20669                           ;stkvar	_quotient @ sp[(-4)+0]
 20670  019602  0EFC               	movlw	-4
 20671  019604  6CE3               	negf	plusw1,c
 20672  019606  0EFD               	movlw	-3
 20673  019608  1EE3               	comf	plusw1,f,c
 20674  01960A  B0D8               	btfsc	status,0,c
 20675  01960C  2AE3               	incf	plusw1,f,c
 20676  01960E                     l8729:
 20677                           
 20678                           ;stkvar	_quotient @ sp[(-4)+0]
 20679  01960E  0EFC               	movlw	-4
 20680  019610  006F FF8C  F001    	movff	plusw1,btemp
 20681  019616  0EFD               	movlw	-3
 20682  019618  006F FF8C  F002    	movff	plusw1,btemp+1
 20683                           
 20684                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20685  01961E  0EF8               	movlw	248
 20686  019620  26E1               	addwf	fsr1l,f,c
 20687  019622  0EFF               	movlw	255
 20688  019624  22E2               	addwfc	fsr1h,f,c
 20689  019626  0012               	return		;funcret
 20690  019628                     __end_of___awdiv:
 20691                           	opt callstack 0
 20692                           
 20693 ;; *************** function _dtoa *****************
 20694 ;; Defined at:
 20695 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20696 ;; Parameters:    Size  Location     Type
 20697 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20698 ;;		 -> f(6), NULL(0), 
 20699 ;;  d               8  [STACK] long long 
 20700 ;; Auto vars:     Size  Location     Type
 20701 ;;  n               8  [STACK] long long 
 20702 ;;  i               2  [STACK] int 
 20703 ;;  s               2  [STACK] int 
 20704 ;;  w               2  [STACK] int 
 20705 ;;  p               2  [STACK] int 
 20706 ;; Return value:  Size  Location     Type
 20707 ;;                  2  [STACK] int 
 20708 ;; Registers used:
 20709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 20710 ;; Tracked objects:
 20711 ;;		On entry : 0/0
 20712 ;;		On exit  : 0/0
 20713 ;;		Unchanged: 0/0
 20714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20719 ;;Total ram usage:        0 bytes
 20720 ;; Hardware stack levels used:    1
 20721 ;; Hardware stack levels required when called:   20
 20722 ;; This function calls:
 20723 ;;		___aodiv
 20724 ;;		___aomod
 20725 ;;		_abs
 20726 ;;		_pad
 20727 ;; This function is called by:
 20728 ;;		_vfpfcnvrt
 20729 ;; This function uses a reentrant model
 20730 ;;
 20731                           
 20732                           	psect	text73
 20733  01583E                     __ptext73:
 20734                           	opt callstack 0
 20735  01583E                     _dtoa:
 20736                           	opt callstack 0
 20737                           
 20738                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 20739  01583E  0E12               	movlw	18
 20740  015840  26E1               	addwf	fsr1l,f,c
 20741  015842  0E00               	movlw	0
 20742  015844  22E2               	addwfc	fsr1h,f,c
 20743                           
 20744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 20745                           ;stkvar	_d @ sp[(-18)+-10]
 20746                           
 20747                           ;incstack = 0
 20748 ;; hardware stack exceeded
 20749  015846  0EE4               	movlw	228
 20750  015848  24E1               	addwf	fsr1l,w,c
 20751  01584A  6ED9               	movwf	fsr2l,c
 20752  01584C  0EFF               	movlw	255
 20753  01584E  20E2               	addwfc	fsr1h,w,c
 20754  015850  6EDA               	movwf	fsr2h,c
 20755                           
 20756                           ;stkvar	_n @ sp[(-18)+2]
 20757  015852  0E08               	movlw	8
 20758  015854  6E01               	movwf	btemp^0,c
 20759  015856  0EF0               	movlw	-16
 20760  015858                     us1102999:
 20761  015858  006F FF7B FFE3     	movff	postinc2,plusw1
 20762  01585E  28E8               	incf	wreg,w,c
 20763  015860  2E01               	decfsz	btemp^0,f,c
 20764  015862  D7FA               	bra	us1102999
 20765                           
 20766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 20767                           ;stkvar	_n @ sp[(-18)+2]
 20768  015864  0EF7               	movlw	-9
 20769  015866  AEE3               	btfss	plusw1,7,c
 20770  015868  D002               	goto	u11030
 20771  01586A  0E01               	movlw	1
 20772  01586C  D001               	goto	u11040
 20773  01586E                     u11030:
 20774  01586E  0E00               	movlw	0
 20775  015870                     u11040:
 20776  015870  6E0B               	movwf	(btemp+10)^0,c
 20777  015872  6A0C               	clrf	(btemp+11)^0,c
 20778                           
 20779                           ;stkvar	_s @ sp[(-18)+12]
 20780  015874  0EFA               	movlw	-6
 20781  015876  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20782  01587C  0EFB               	movlw	-5
 20783  01587E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20784                           
 20785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20786                           ;stkvar	_s @ sp[(-18)+12]
 20787  015884  0EFA               	movlw	-6
 20788  015886  006F FF8C  F001    	movff	plusw1,btemp
 20789  01588C  0EFB               	movlw	-5
 20790  01588E  50E3               	movf	plusw1,w,c
 20791  015890  1001               	iorwf	btemp^0,w,c
 20792  015892  B4D8               	btfsc	status,2,c
 20793  015894  D025               	goto	u11060
 20794                           
 20795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20796                           ;stkvar	_n @ sp[(-18)+2]
 20797                           ;stkvar	_n @ sp[(-18)+2]
 20798  015896  0EF0               	movlw	-16
 20799  015898  6CE3               	negf	plusw1,c
 20800  01589A  0EF1               	movlw	-15
 20801  01589C  1EE3               	comf	plusw1,f,c
 20802  01589E  0EF2               	movlw	-14
 20803  0158A0  1EE3               	comf	plusw1,f,c
 20804  0158A2  0EF3               	movlw	-13
 20805  0158A4  1EE3               	comf	plusw1,f,c
 20806  0158A6  0EF4               	movlw	-12
 20807  0158A8  1EE3               	comf	plusw1,f,c
 20808  0158AA  0EF5               	movlw	-11
 20809  0158AC  1EE3               	comf	plusw1,f,c
 20810  0158AE  0EF6               	movlw	-10
 20811  0158B0  1EE3               	comf	plusw1,f,c
 20812  0158B2  0EF7               	movlw	-9
 20813  0158B4  1EE3               	comf	plusw1,f,c
 20814  0158B6  E314               	bnc	u11060
 20815  0158B8  0EF1               	movlw	-15
 20816  0158BA  2AE3               	incf	plusw1,f,c
 20817  0158BC  E311               	bnc	u11060
 20818  0158BE  0EF2               	movlw	-14
 20819  0158C0  2AE3               	incf	plusw1,f,c
 20820  0158C2  E30E               	bnc	u11060
 20821  0158C4  0EF3               	movlw	-13
 20822  0158C6  2AE3               	incf	plusw1,f,c
 20823  0158C8  E30B               	bnc	u11060
 20824  0158CA  0EF4               	movlw	-12
 20825  0158CC  2AE3               	incf	plusw1,f,c
 20826  0158CE  E308               	bnc	u11060
 20827  0158D0  0EF5               	movlw	-11
 20828  0158D2  2AE3               	incf	plusw1,f,c
 20829  0158D4  E305               	bnc	u11060
 20830  0158D6  0EF6               	movlw	-10
 20831  0158D8  2AE3               	incf	plusw1,f,c
 20832  0158DA  E302               	bnc	u11060
 20833  0158DC  0EF7               	movlw	-9
 20834  0158DE  2AE3               	incf	plusw1,f,c
 20835  0158E0                     u11060:
 20836                           
 20837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20838  0158E0  AE3D               	btfss	(_prec+1)^0,7,c
 20839                           
 20840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20841  0158E2  923E               	bcf	_flags^0,1,c
 20842                           
 20843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20844  0158E4  BE3D               	btfsc	(_prec+1)^0,7,c
 20845  0158E6  D005               	goto	u11080
 20846  0158E8  503D               	movf	(_prec+1)^0,w,c
 20847  0158EA  E110               	bnz	l12223
 20848  0158EC  043C               	decf	_prec^0,w,c
 20849  0158EE  B0D8               	btfsc	status,0,c
 20850  0158F0  D00D               	goto	l12223
 20851  0158F2                     u11080:
 20852  0158F2  0E01               	movlw	1
 20853  0158F4  6E0B               	movwf	(btemp+10)^0,c
 20854  0158F6  0E00               	movlw	0
 20855  0158F8  6E0C               	movwf	(btemp+11)^0,c
 20856                           
 20857                           ;stkvar	_p @ sp[(-18)+16]
 20858  0158FA  0EFE               	movlw	-2
 20859  0158FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20860  015902  0EFF               	movlw	-1
 20861  015904  0060  F033  FFE3   	movff	btemp+11,plusw1
 20862  01590A  D008               	goto	l2241
 20863  01590C                     l12223:
 20864                           
 20865                           ;stkvar	_p @ sp[(-18)+16]
 20866  01590C  0EFE               	movlw	-2
 20867  01590E  0060  F0F3  FFE3   	movff	_prec,plusw1
 20868  015914  0EFF               	movlw	-1
 20869  015916  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20870  01591C                     l2241:
 20871                           
 20872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20873                           ;stkvar	_w @ sp[(-18)+14]
 20874  01591C  0EFC               	movlw	-4
 20875  01591E  0060  F0EB  FFE3   	movff	_width,plusw1
 20876  015924  0EFD               	movlw	-3
 20877  015926  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20878                           
 20879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20880                           ;stkvar	_s @ sp[(-18)+12]
 20881  01592C  0EFA               	movlw	-6
 20882  01592E  006F FF8C  F001    	movff	plusw1,btemp
 20883  015934  0EFB               	movlw	-5
 20884  015936  50E3               	movf	plusw1,w,c
 20885  015938  1001               	iorwf	btemp^0,w,c
 20886  01593A  A4D8               	btfss	status,2,c
 20887  01593C  D002               	goto	u11100
 20888  01593E  A43E               	btfss	_flags^0,2,c
 20889  015940  D00A               	goto	l12231
 20890  015942                     u11100:
 20891                           
 20892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20893                           ;stkvar	_w @ sp[(-18)+14]
 20894  015942  50E1               	movf	fsr1l,w,c
 20895  015944  0FFC               	addlw	-4
 20896  015946  6ED9               	movwf	fsr2l,c
 20897  015948  50E2               	movf	fsr1h,w,c
 20898  01594A  6EDA               	movwf	fsr2h,c
 20899  01594C  0EFF               	movlw	255
 20900  01594E  22DA               	addwfc	fsr2h,f,c
 20901  015950  06DE               	decf	postinc2,f,c
 20902  015952  0E00               	movlw	0
 20903  015954  5ADD               	subwfb	postdec2,f,c
 20904  015956                     l12231:
 20905                           
 20906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20907  015956  0E4F               	movlw	79
 20908  015958  6E0B               	movwf	(btemp+10)^0,c
 20909  01595A  0E00               	movlw	0
 20910  01595C  6E0C               	movwf	(btemp+11)^0,c
 20911                           
 20912                           ;stkvar	_i @ sp[(-18)+10]
 20913  01595E  0EF8               	movlw	-8
 20914  015960  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20915  015966  0EF9               	movlw	-7
 20916  015968  0060  F033  FFE3   	movff	btemp+11,plusw1
 20917                           
 20918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20919  01596E  0102               	movlb	2	; () banked
 20920  015970  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20921                           
 20922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20923  015972  D109               	goto	l12245
 20924  015974                     l12235:
 20925                           
 20926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20927                           ;stkvar	_i @ sp[(-18)+10]
 20928  015974  50E1               	movf	fsr1l,w,c
 20929  015976  0FF8               	addlw	-8
 20930  015978  6ED9               	movwf	fsr2l,c
 20931  01597A  50E2               	movf	fsr1h,w,c
 20932  01597C  6EDA               	movwf	fsr2h,c
 20933  01597E  0EFF               	movlw	255
 20934  015980  22DA               	addwfc	fsr2h,f,c
 20935  015982  06DE               	decf	postinc2,f,c
 20936  015984  0E00               	movlw	0
 20937  015986  5ADD               	subwfb	postdec2,f,c
 20938                           
 20939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20940  015988  0E0A               	movlw	10
 20941  01598A  6EE6               	movwf	postinc1,c
 20942  01598C  0E00               	movlw	0
 20943  01598E  6EE6               	movwf	postinc1,c
 20944  015990  0E00               	movlw	0
 20945  015992  6EE6               	movwf	postinc1,c
 20946  015994  0E00               	movlw	0
 20947  015996  6EE6               	movwf	postinc1,c
 20948  015998  0E00               	movlw	0
 20949  01599A  6EE6               	movwf	postinc1,c
 20950  01599C  0E00               	movlw	0
 20951  01599E  6EE6               	movwf	postinc1,c
 20952  0159A0  0E00               	movlw	0
 20953  0159A2  6EE6               	movwf	postinc1,c
 20954  0159A4  0E00               	movlw	0
 20955  0159A6  6EE6               	movwf	postinc1,c
 20956                           
 20957                           ;stkvar	_n @ sp[(-26)+2]
 20958  0159A8  50E1               	movf	fsr1l,w,c
 20959  0159AA  0FE8               	addlw	-24
 20960  0159AC  6ED9               	movwf	fsr2l,c
 20961  0159AE  50E2               	movf	fsr1h,w,c
 20962  0159B0  6EDA               	movwf	fsr2h,c
 20963  0159B2  0EFF               	movlw	255
 20964  0159B4  22DA               	addwfc	fsr2h,f,c
 20965  0159B6  006F FF7B FFE6     	movff	postinc2,postinc1
 20966  0159BC  006F FF7B FFE6     	movff	postinc2,postinc1
 20967  0159C2  006F FF7B FFE6     	movff	postinc2,postinc1
 20968  0159C8  006F FF7B FFE6     	movff	postinc2,postinc1
 20969  0159CE  006F FF7B FFE6     	movff	postinc2,postinc1
 20970  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
 20971  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
 20972  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
 20973  0159E6  EC2C  F0BF         	call	___aomod	;wreg free
 20974  0159EA  52E5               	movf	postdec1,f,c
 20975  0159EC  006F FF9C  F018    	movff	indf1,btemp+23
 20976  0159F2  52E5               	movf	postdec1,f,c
 20977  0159F4  006F FF9C  F017    	movff	indf1,btemp+22
 20978  0159FA  52E5               	movf	postdec1,f,c
 20979  0159FC  006F FF9C  F016    	movff	indf1,btemp+21
 20980  015A02  52E5               	movf	postdec1,f,c
 20981  015A04  006F FF9C  F015    	movff	indf1,btemp+20
 20982  015A0A  52E5               	movf	postdec1,f,c
 20983  015A0C  006F FF9C  F014    	movff	indf1,btemp+19
 20984  015A12  52E5               	movf	postdec1,f,c
 20985  015A14  006F FF9C  F013    	movff	indf1,btemp+18
 20986  015A1A  52E5               	movf	postdec1,f,c
 20987  015A1C  006F FF9C  F012    	movff	indf1,btemp+17
 20988  015A22  52E5               	movf	postdec1,f,c
 20989  015A24  006F FF9C  F011    	movff	indf1,btemp+16
 20990  015A2A  0EF8               	movlw	248
 20991  015A2C  26E1               	addwf	fsr1l,f,c
 20992  015A2E  0EFF               	movlw	255
 20993  015A30  22E2               	addwfc	fsr1h,f,c
 20994  015A32  0060  F044  F00B   	movff	btemp+16,btemp+10
 20995  015A38  0060  F048  F00C   	movff	btemp+17,btemp+11
 20996  015A3E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20997  015A44  0060  F033  FFE6   	movff	btemp+11,postinc1
 20998  015A4A  ECCB  F0DC         	call	_abs	;wreg free
 20999  015A4E  0E30               	movlw	48
 21000  015A50  2601               	addwf	btemp^0,f,c
 21001                           
 21002                           ;stkvar	_i @ sp[(-18)+10]
 21003  015A52  0EF8               	movlw	-8
 21004  015A54  006F FF8C  F00B    	movff	plusw1,btemp+10
 21005  015A5A  0EF9               	movlw	-7
 21006  015A5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21007  015A62  0E97               	movlw	low _dbuf
 21008  015A64  240B               	addwf	(btemp+10)^0,w,c
 21009  015A66  6ED9               	movwf	fsr2l,c
 21010  015A68  0E02               	movlw	high _dbuf
 21011  015A6A  200C               	addwfc	(btemp+11)^0,w,c
 21012  015A6C  6EDA               	movwf	fsr2h,c
 21013  015A6E  0060  F007  FFDF   	movff	btemp,indf2
 21014                           
 21015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 21016                           ;stkvar	_p @ sp[(-18)+16]
 21017  015A74  50E1               	movf	fsr1l,w,c
 21018  015A76  0FFE               	addlw	-2
 21019  015A78  6ED9               	movwf	fsr2l,c
 21020  015A7A  50E2               	movf	fsr1h,w,c
 21021  015A7C  6EDA               	movwf	fsr2h,c
 21022  015A7E  0EFF               	movlw	255
 21023  015A80  22DA               	addwfc	fsr2h,f,c
 21024  015A82  06DE               	decf	postinc2,f,c
 21025  015A84  0E00               	movlw	0
 21026  015A86  5ADD               	subwfb	postdec2,f,c
 21027                           
 21028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 21029                           ;stkvar	_w @ sp[(-18)+14]
 21030  015A88  50E1               	movf	fsr1l,w,c
 21031  015A8A  0FFC               	addlw	-4
 21032  015A8C  6ED9               	movwf	fsr2l,c
 21033  015A8E  50E2               	movf	fsr1h,w,c
 21034  015A90  6EDA               	movwf	fsr2h,c
 21035  015A92  0EFF               	movlw	255
 21036  015A94  22DA               	addwfc	fsr2h,f,c
 21037  015A96  06DE               	decf	postinc2,f,c
 21038  015A98  0E00               	movlw	0
 21039  015A9A  5ADD               	subwfb	postdec2,f,c
 21040                           
 21041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 21042  015A9C  0E0A               	movlw	10
 21043  015A9E  6EE6               	movwf	postinc1,c
 21044  015AA0  0E00               	movlw	0
 21045  015AA2  6EE6               	movwf	postinc1,c
 21046  015AA4  0E00               	movlw	0
 21047  015AA6  6EE6               	movwf	postinc1,c
 21048  015AA8  0E00               	movlw	0
 21049  015AAA  6EE6               	movwf	postinc1,c
 21050  015AAC  0E00               	movlw	0
 21051  015AAE  6EE6               	movwf	postinc1,c
 21052  015AB0  0E00               	movlw	0
 21053  015AB2  6EE6               	movwf	postinc1,c
 21054  015AB4  0E00               	movlw	0
 21055  015AB6  6EE6               	movwf	postinc1,c
 21056  015AB8  0E00               	movlw	0
 21057  015ABA  6EE6               	movwf	postinc1,c
 21058                           
 21059                           ;stkvar	_n @ sp[(-26)+2]
 21060  015ABC  50E1               	movf	fsr1l,w,c
 21061  015ABE  0FE8               	addlw	-24
 21062  015AC0  6ED9               	movwf	fsr2l,c
 21063  015AC2  50E2               	movf	fsr1h,w,c
 21064  015AC4  6EDA               	movwf	fsr2h,c
 21065  015AC6  0EFF               	movlw	255
 21066  015AC8  22DA               	addwfc	fsr2h,f,c
 21067  015ACA  006F FF7B FFE6     	movff	postinc2,postinc1
 21068  015AD0  006F FF7B FFE6     	movff	postinc2,postinc1
 21069  015AD6  006F FF7B FFE6     	movff	postinc2,postinc1
 21070  015ADC  006F FF7B FFE6     	movff	postinc2,postinc1
 21071  015AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 21072  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 21073  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 21074  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 21075  015AFA  EC8F  F0BB         	call	___aodiv	;wreg free
 21076  015AFE  52E5               	movf	postdec1,f,c
 21077  015B00  006F FF9C  F018    	movff	indf1,btemp+23
 21078  015B06  52E5               	movf	postdec1,f,c
 21079  015B08  006F FF9C  F017    	movff	indf1,btemp+22
 21080  015B0E  52E5               	movf	postdec1,f,c
 21081  015B10  006F FF9C  F016    	movff	indf1,btemp+21
 21082  015B16  52E5               	movf	postdec1,f,c
 21083  015B18  006F FF9C  F015    	movff	indf1,btemp+20
 21084  015B1E  52E5               	movf	postdec1,f,c
 21085  015B20  006F FF9C  F014    	movff	indf1,btemp+19
 21086  015B26  52E5               	movf	postdec1,f,c
 21087  015B28  006F FF9C  F013    	movff	indf1,btemp+18
 21088  015B2E  52E5               	movf	postdec1,f,c
 21089  015B30  006F FF9C  F012    	movff	indf1,btemp+17
 21090  015B36  52E5               	movf	postdec1,f,c
 21091  015B38  006F FF9C  F011    	movff	indf1,btemp+16
 21092  015B3E  0EF8               	movlw	248
 21093  015B40  26E1               	addwf	fsr1l,f,c
 21094  015B42  0EFF               	movlw	255
 21095  015B44  22E2               	addwfc	fsr1h,f,c
 21096                           
 21097                           ;stkvar	_n @ sp[(-18)+2]
 21098  015B46  0EF0               	movlw	-16
 21099  015B48  0060  F047  FFE3   	movff	btemp+16,plusw1
 21100  015B4E  0EF1               	movlw	-15
 21101  015B50  0060  F04B  FFE3   	movff	btemp+17,plusw1
 21102  015B56  0EF2               	movlw	-14
 21103  015B58  0060  F04F  FFE3   	movff	btemp+18,plusw1
 21104  015B5E  0EF3               	movlw	-13
 21105  015B60  0060  F053  FFE3   	movff	btemp+19,plusw1
 21106  015B66  0EF4               	movlw	-12
 21107  015B68  0060  F057  FFE3   	movff	btemp+20,plusw1
 21108  015B6E  0EF5               	movlw	-11
 21109  015B70  0060  F05B  FFE3   	movff	btemp+21,plusw1
 21110  015B76  0EF6               	movlw	-10
 21111  015B78  0060  F05F  FFE3   	movff	btemp+22,plusw1
 21112  015B7E  0EF7               	movlw	-9
 21113  015B80  0060  F063  FFE3   	movff	btemp+23,plusw1
 21114  015B86                     l12245:
 21115                           
 21116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21117                           ;stkvar	_i @ sp[(-18)+10]
 21118  015B86  0EF9               	movlw	-7
 21119  015B88  BEE3               	btfsc	plusw1,7,c
 21120  015B8A  D036               	goto	u11150
 21121  015B8C  0EF9               	movlw	-7
 21122  015B8E  50E3               	movf	plusw1,w,c
 21123  015B90  E104               	bnz	u11110
 21124  015B92  0EF8               	movlw	-8
 21125  015B94  04E3               	decf	plusw1,w,c
 21126  015B96  A0D8               	btfss	status,0,c
 21127  015B98  D02F               	goto	u11150
 21128  015B9A                     u11110:
 21129                           
 21130                           ;stkvar	_n @ sp[(-18)+2]
 21131  015B9A  0EF0               	movlw	-16
 21132  015B9C  50E3               	movf	plusw1,w,c
 21133  015B9E  E115               	bnz	u11121
 21134  015BA0  0EF1               	movlw	-15
 21135  015BA2  50E3               	movf	plusw1,w,c
 21136  015BA4  E112               	bnz	u11121
 21137  015BA6  0EF2               	movlw	-14
 21138  015BA8  50E3               	movf	plusw1,w,c
 21139  015BAA  E10F               	bnz	u11121
 21140  015BAC  0EF3               	movlw	-13
 21141  015BAE  50E3               	movf	plusw1,w,c
 21142  015BB0  E10C               	bnz	u11121
 21143  015BB2  0EF4               	movlw	-12
 21144  015BB4  50E3               	movf	plusw1,w,c
 21145  015BB6  E109               	bnz	u11121
 21146  015BB8  0EF5               	movlw	-11
 21147  015BBA  50E3               	movf	plusw1,w,c
 21148  015BBC  E106               	bnz	u11121
 21149  015BBE  0EF6               	movlw	-10
 21150  015BC0  50E3               	movf	plusw1,w,c
 21151  015BC2  E103               	bnz	u11121
 21152  015BC4  0EF7               	movlw	-9
 21153  015BC6  50E3               	movf	plusw1,w,c
 21154  015BC8  A4D8               	btfss	status,2,c
 21155  015BCA                     u11121:
 21156  015BCA  D6D4               	goto	l12235
 21157                           
 21158                           ;stkvar	_p @ sp[(-18)+16]
 21159  015BCC  0EFF               	movlw	-1
 21160  015BCE  BEE3               	btfsc	plusw1,7,c
 21161  015BD0  D007               	goto	u11130
 21162  015BD2  0EFF               	movlw	-1
 21163  015BD4  50E3               	movf	plusw1,w,c
 21164  015BD6  E103               	bnz	u11131
 21165  015BD8  0EFE               	movlw	-2
 21166  015BDA  04E3               	decf	plusw1,w,c
 21167  015BDC  B0D8               	btfsc	status,0,c
 21168  015BDE                     u11131:
 21169  015BDE  D6CA               	goto	l12235
 21170  015BE0                     u11130:
 21171                           
 21172                           ;stkvar	_w @ sp[(-18)+14]
 21173  015BE0  0EFD               	movlw	-3
 21174  015BE2  BEE3               	btfsc	plusw1,7,c
 21175  015BE4  D009               	goto	u11150
 21176  015BE6  0EFD               	movlw	-3
 21177  015BE8  50E3               	movf	plusw1,w,c
 21178  015BEA  E104               	bnz	u11140
 21179  015BEC  0EFC               	movlw	-4
 21180  015BEE  04E3               	decf	plusw1,w,c
 21181  015BF0  A0D8               	btfss	status,0,c
 21182  015BF2  D002               	goto	u11150
 21183  015BF4                     u11140:
 21184  015BF4  B23E               	btfsc	_flags^0,1,c
 21185  015BF6  D6BE               	goto	l12235
 21186  015BF8                     u11150:
 21187                           
 21188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 21189                           ;stkvar	_s @ sp[(-18)+12]
 21190  015BF8  0EFA               	movlw	-6
 21191  015BFA  006F FF8C  F001    	movff	plusw1,btemp
 21192  015C00  0EFB               	movlw	-5
 21193  015C02  50E3               	movf	plusw1,w,c
 21194  015C04  1001               	iorwf	btemp^0,w,c
 21195  015C06  A4D8               	btfss	status,2,c
 21196  015C08  D002               	goto	u11170
 21197  015C0A  A43E               	btfss	_flags^0,2,c
 21198  015C0C  D033               	goto	l12269
 21199  015C0E                     u11170:
 21200                           
 21201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 21202                           ;stkvar	_i @ sp[(-18)+10]
 21203  015C0E  50E1               	movf	fsr1l,w,c
 21204  015C10  0FF8               	addlw	-8
 21205  015C12  6ED9               	movwf	fsr2l,c
 21206  015C14  50E2               	movf	fsr1h,w,c
 21207  015C16  6EDA               	movwf	fsr2h,c
 21208  015C18  0EFF               	movlw	255
 21209  015C1A  22DA               	addwfc	fsr2h,f,c
 21210  015C1C  06DE               	decf	postinc2,f,c
 21211  015C1E  0E00               	movlw	0
 21212  015C20  5ADD               	subwfb	postdec2,f,c
 21213                           
 21214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 21215                           ;stkvar	_s @ sp[(-18)+12]
 21216  015C22  0EFA               	movlw	-6
 21217  015C24  006F FF8C  F001    	movff	plusw1,btemp
 21218  015C2A  0EFB               	movlw	-5
 21219  015C2C  50E3               	movf	plusw1,w,c
 21220  015C2E  1001               	iorwf	btemp^0,w,c
 21221  015C30  A4D8               	btfss	status,2,c
 21222  015C32  D002               	goto	l12265
 21223  015C34  0E2B               	movlw	43
 21224  015C36  D001               	goto	L25
 21225  015C38                     l12265:
 21226  015C38  0E2D               	movlw	45
 21227  015C3A                     L25:
 21228  015C3A  6E0B               	movwf	(btemp+10)^0,c
 21229  015C3C  0E00               	movlw	0
 21230  015C3E  6E0C               	movwf	(btemp+11)^0,c
 21231                           
 21232                           ;stkvar	_dtoa$5731 @ sp[(-18)+0]
 21233  015C40  0EEE               	movlw	-18
 21234  015C42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21235  015C48  0EEF               	movlw	-17
 21236  015C4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21237                           
 21238                           ;stkvar	_dtoa$5731 @ sp[(-18)+0]
 21239                           ;stkvar	_i @ sp[(-18)+10]
 21240  015C50  0EF8               	movlw	-8
 21241  015C52  006F FF8C  F00B    	movff	plusw1,btemp+10
 21242  015C58  0EF9               	movlw	-7
 21243  015C5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21244  015C60  0E97               	movlw	low _dbuf
 21245  015C62  240B               	addwf	(btemp+10)^0,w,c
 21246  015C64  6ED9               	movwf	fsr2l,c
 21247  015C66  0E02               	movlw	high _dbuf
 21248  015C68  200C               	addwfc	(btemp+11)^0,w,c
 21249  015C6A  6EDA               	movwf	fsr2h,c
 21250  015C6C  0EEE               	movlw	-18
 21251  015C6E  006F FF8F FFDF     	movff	plusw1,indf2
 21252  015C74                     l12269:
 21253                           
 21254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 21255                           ;stkvar	_w @ sp[(-18)+14]
 21256  015C74  0EFC               	movlw	-4
 21257  015C76  006F FF8F FFE6     	movff	plusw1,postinc1
 21258  015C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 21259                           
 21260                           ;stkvar	_i @ sp[(-20)+10]
 21261  015C82  0E97               	movlw	low _dbuf
 21262  015C84  6E0B               	movwf	(btemp+10)^0,c
 21263  015C86  0E02               	movlw	high _dbuf
 21264  015C88  6E0C               	movwf	(btemp+11)^0,c
 21265  015C8A  0EF6               	movlw	-10
 21266  015C8C  50E3               	movf	plusw1,w,c
 21267  015C8E  260B               	addwf	(btemp+10)^0,f,c
 21268  015C90  0EF7               	movlw	-9
 21269  015C92  50E3               	movf	plusw1,w,c
 21270  015C94  220C               	addwfc	(btemp+11)^0,f,c
 21271  015C96  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21272  015C9C  0060  F033  FFE6   	movff	btemp+11,postinc1
 21273                           
 21274                           ;stkvar	_fp @ sp[(-22)+-2]
 21275  015CA2  0EE8               	movlw	-24
 21276  015CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 21277  015CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 21278  015CB0  EC90  F0CE         	call	_pad	;wreg free
 21279                           
 21280                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 21281  015CB4  0EE4               	movlw	228
 21282  015CB6  26E1               	addwf	fsr1l,f,c
 21283  015CB8  0EFF               	movlw	255
 21284  015CBA  22E2               	addwfc	fsr1h,f,c
 21285  015CBC  0012               	return		;funcret
 21286  015CBE                     __end_of_dtoa:
 21287                           	opt callstack 0
 21288                           
 21289 ;; *************** function _abs *****************
 21290 ;; Defined at:
 21291 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 21292 ;; Parameters:    Size  Location     Type
 21293 ;;  a               2  [STACK] int 
 21294 ;; Auto vars:     Size  Location     Type
 21295 ;;		None
 21296 ;; Return value:  Size  Location     Type
 21297 ;;                  2  [STACK] int 
 21298 ;; Registers used:
 21299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 21300 ;; Tracked objects:
 21301 ;;		On entry : 0/2
 21302 ;;		On exit  : 0/0
 21303 ;;		Unchanged: 0/0
 21304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21309 ;;Total ram usage:        0 bytes
 21310 ;; Hardware stack levels used:    1
 21311 ;; Hardware stack levels required when called:   15
 21312 ;; This function calls:
 21313 ;;		Nothing
 21314 ;; This function is called by:
 21315 ;;		_dtoa
 21316 ;; This function uses a reentrant model
 21317 ;;
 21318                           
 21319                           	psect	text74
 21320  01B996                     __ptext74:
 21321                           	opt callstack 0
 21322  01B996                     _abs:
 21323                           	opt callstack 0
 21324                           
 21325                           ;stkvar	_a @ sp[(0)+-2]
 21326                           
 21327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21328                           ;incstack = 0
 21329 ;; hardware stack exceeded
 21330  01B996  0EFF               	movlw	-1
 21331  01B998  BEE3               	btfsc	plusw1,7,c
 21332  01B99A  D007               	goto	u6050
 21333  01B99C  0EFF               	movlw	-1
 21334  01B99E  50E3               	movf	plusw1,w,c
 21335  01B9A0  E112               	bnz	l8183
 21336  01B9A2  0EFE               	movlw	-2
 21337  01B9A4  04E3               	decf	plusw1,w,c
 21338  01B9A6  B0D8               	btfsc	status,0,c
 21339  01B9A8  D00E               	goto	l8183
 21340  01B9AA                     u6050:
 21341                           
 21342                           ;stkvar	_a @ sp[(0)+-2]
 21343  01B9AA  0EFE               	movlw	-2
 21344  01B9AC  006F FF8C  F001    	movff	plusw1,btemp
 21345  01B9B2  1E01               	comf	btemp^0,f,c
 21346  01B9B4  0EFF               	movlw	-1
 21347  01B9B6  006F FF8C  F002    	movff	plusw1,btemp+1
 21348  01B9BC  1E02               	comf	(btemp+1)^0,f,c
 21349  01B9BE  2A01               	incf	btemp^0,f,c
 21350  01B9C0  B4D8               	btfsc	status,2,c
 21351  01B9C2  2A02               	incf	(btemp+1)^0,f,c
 21352  01B9C4  D008               	goto	l3167
 21353  01B9C6                     l8183:
 21354                           
 21355                           ;stkvar	_a @ sp[(0)+-2]
 21356  01B9C6  0EFE               	movlw	-2
 21357  01B9C8  006F FF8C  F001    	movff	plusw1,btemp
 21358  01B9CE  0EFF               	movlw	-1
 21359  01B9D0  006F FF8C  F002    	movff	plusw1,btemp+1
 21360  01B9D6                     l3167:
 21361                           
 21362                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 21363  01B9D6  52E5               	movf	postdec1,f,c
 21364  01B9D8  52E5               	movf	postdec1,f,c
 21365  01B9DA  0012               	return		;funcret
 21366  01B9DC                     __end_of_abs:
 21367                           	opt callstack 0
 21368                           
 21369 ;; *************** function ___aomod *****************
 21370 ;; Defined at:
 21371 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 21372 ;; Parameters:    Size  Location     Type
 21373 ;;  dividend        8  [STACK] long long 
 21374 ;;  divisor         8  [STACK] long long 
 21375 ;; Auto vars:     Size  Location     Type
 21376 ;;  sign            1  [STACK] unsigned char 
 21377 ;;  counter         1  [STACK] unsigned char 
 21378 ;; Return value:  Size  Location     Type
 21379 ;;                  8  [STACK] long long 
 21380 ;; Registers used:
 21381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21382 ;; Tracked objects:
 21383 ;;		On entry : 0/2
 21384 ;;		On exit  : 0/0
 21385 ;;		Unchanged: 0/0
 21386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21391 ;;Total ram usage:        0 bytes
 21392 ;; Hardware stack levels used:    1
 21393 ;; Hardware stack levels required when called:   15
 21394 ;; This function calls:
 21395 ;;		Nothing
 21396 ;; This function is called by:
 21397 ;;		_dtoa
 21398 ;; This function uses a reentrant model
 21399 ;;
 21400                           
 21401                           	psect	text75
 21402  017E58                     __ptext75:
 21403                           	opt callstack 0
 21404  017E58                     ___aomod:
 21405                           	opt callstack 0
 21406                           
 21407                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 21408  017E58  52E6               	movf	postinc1,f,c
 21409  017E5A  52E6               	movf	postinc1,f,c
 21410                           
 21411                           ;stkvar	_sign @ sp[(-2)+0]
 21412                           
 21413                           ;incstack = 0
 21414 ;; hardware stack exceeded
 21415  017E5C  0EFE               	movlw	-2
 21416  017E5E  6AE3               	clrf	plusw1,c
 21417                           
 21418                           ;stkvar	_dividend @ sp[(-2)+-8]
 21419  017E60  0EFD               	movlw	-3
 21420  017E62  AEE3               	btfss	plusw1,7,c
 21421  017E64  D028               	goto	l8341
 21422                           
 21423                           ;stkvar	_dividend @ sp[(-2)+-8]
 21424                           ;stkvar	_dividend @ sp[(-2)+-8]
 21425  017E66  0EF6               	movlw	-10
 21426  017E68  6CE3               	negf	plusw1,c
 21427  017E6A  0EF7               	movlw	-9
 21428  017E6C  1EE3               	comf	plusw1,f,c
 21429  017E6E  0EF8               	movlw	-8
 21430  017E70  1EE3               	comf	plusw1,f,c
 21431  017E72  0EF9               	movlw	-7
 21432  017E74  1EE3               	comf	plusw1,f,c
 21433  017E76  0EFA               	movlw	-6
 21434  017E78  1EE3               	comf	plusw1,f,c
 21435  017E7A  0EFB               	movlw	-5
 21436  017E7C  1EE3               	comf	plusw1,f,c
 21437  017E7E  0EFC               	movlw	-4
 21438  017E80  1EE3               	comf	plusw1,f,c
 21439  017E82  0EFD               	movlw	-3
 21440  017E84  1EE3               	comf	plusw1,f,c
 21441  017E86  E314               	bnc	u6480
 21442  017E88  0EF7               	movlw	-9
 21443  017E8A  2AE3               	incf	plusw1,f,c
 21444  017E8C  E311               	bnc	u6480
 21445  017E8E  0EF8               	movlw	-8
 21446  017E90  2AE3               	incf	plusw1,f,c
 21447  017E92  E30E               	bnc	u6480
 21448  017E94  0EF9               	movlw	-7
 21449  017E96  2AE3               	incf	plusw1,f,c
 21450  017E98  E30B               	bnc	u6480
 21451  017E9A  0EFA               	movlw	-6
 21452  017E9C  2AE3               	incf	plusw1,f,c
 21453  017E9E  E308               	bnc	u6480
 21454  017EA0  0EFB               	movlw	-5
 21455  017EA2  2AE3               	incf	plusw1,f,c
 21456  017EA4  E305               	bnc	u6480
 21457  017EA6  0EFC               	movlw	-4
 21458  017EA8  2AE3               	incf	plusw1,f,c
 21459  017EAA  E302               	bnc	u6480
 21460  017EAC  0EFD               	movlw	-3
 21461  017EAE  2AE3               	incf	plusw1,f,c
 21462  017EB0                     u6480:
 21463                           
 21464                           ;stkvar	_sign @ sp[(-2)+0]
 21465  017EB0  0EFE               	movlw	-2
 21466  017EB2  6AE3               	clrf	plusw1,c
 21467  017EB4  2AE3               	incf	plusw1,f,c
 21468  017EB6                     l8341:
 21469                           
 21470                           ;stkvar	_divisor @ sp[(-2)+-16]
 21471  017EB6  0EF5               	movlw	-11
 21472  017EB8  AEE3               	btfss	plusw1,7,c
 21473  017EBA  D025               	goto	u6500
 21474                           
 21475                           ;stkvar	_divisor @ sp[(-2)+-16]
 21476                           ;stkvar	_divisor @ sp[(-2)+-16]
 21477  017EBC  0EEE               	movlw	-18
 21478  017EBE  6CE3               	negf	plusw1,c
 21479  017EC0  0EEF               	movlw	-17
 21480  017EC2  1EE3               	comf	plusw1,f,c
 21481  017EC4  0EF0               	movlw	-16
 21482  017EC6  1EE3               	comf	plusw1,f,c
 21483  017EC8  0EF1               	movlw	-15
 21484  017ECA  1EE3               	comf	plusw1,f,c
 21485  017ECC  0EF2               	movlw	-14
 21486  017ECE  1EE3               	comf	plusw1,f,c
 21487  017ED0  0EF3               	movlw	-13
 21488  017ED2  1EE3               	comf	plusw1,f,c
 21489  017ED4  0EF4               	movlw	-12
 21490  017ED6  1EE3               	comf	plusw1,f,c
 21491  017ED8  0EF5               	movlw	-11
 21492  017EDA  1EE3               	comf	plusw1,f,c
 21493  017EDC  E314               	bnc	u6500
 21494  017EDE  0EEF               	movlw	-17
 21495  017EE0  2AE3               	incf	plusw1,f,c
 21496  017EE2  E311               	bnc	u6500
 21497  017EE4  0EF0               	movlw	-16
 21498  017EE6  2AE3               	incf	plusw1,f,c
 21499  017EE8  E30E               	bnc	u6500
 21500  017EEA  0EF1               	movlw	-15
 21501  017EEC  2AE3               	incf	plusw1,f,c
 21502  017EEE  E30B               	bnc	u6500
 21503  017EF0  0EF2               	movlw	-14
 21504  017EF2  2AE3               	incf	plusw1,f,c
 21505  017EF4  E308               	bnc	u6500
 21506  017EF6  0EF3               	movlw	-13
 21507  017EF8  2AE3               	incf	plusw1,f,c
 21508  017EFA  E305               	bnc	u6500
 21509  017EFC  0EF4               	movlw	-12
 21510  017EFE  2AE3               	incf	plusw1,f,c
 21511  017F00  E302               	bnc	u6500
 21512  017F02  0EF5               	movlw	-11
 21513  017F04  2AE3               	incf	plusw1,f,c
 21514  017F06                     u6500:
 21515                           
 21516                           ;stkvar	_divisor @ sp[(-2)+-16]
 21517  017F06  0EEE               	movlw	-18
 21518  017F08  50E3               	movf	plusw1,w,c
 21519  017F0A  E116               	bnz	u6510
 21520  017F0C  0EEF               	movlw	-17
 21521  017F0E  50E3               	movf	plusw1,w,c
 21522  017F10  E113               	bnz	u6510
 21523  017F12  0EF0               	movlw	-16
 21524  017F14  50E3               	movf	plusw1,w,c
 21525  017F16  E110               	bnz	u6510
 21526  017F18  0EF1               	movlw	-15
 21527  017F1A  50E3               	movf	plusw1,w,c
 21528  017F1C  E10D               	bnz	u6510
 21529  017F1E  0EF2               	movlw	-14
 21530  017F20  50E3               	movf	plusw1,w,c
 21531  017F22  E10A               	bnz	u6510
 21532  017F24  0EF3               	movlw	-13
 21533  017F26  50E3               	movf	plusw1,w,c
 21534  017F28  E107               	bnz	u6510
 21535  017F2A  0EF4               	movlw	-12
 21536  017F2C  50E3               	movf	plusw1,w,c
 21537  017F2E  E104               	bnz	u6510
 21538  017F30  0EF5               	movlw	-11
 21539  017F32  50E3               	movf	plusw1,w,c
 21540  017F34  B4D8               	btfsc	status,2,c
 21541  017F36  D075               	goto	u6540
 21542  017F38                     u6510:
 21543                           
 21544                           ;stkvar	_counter @ sp[(-2)+1]
 21545  017F38  0EFF               	movlw	-1
 21546  017F3A  6AE3               	clrf	plusw1,c
 21547  017F3C  D012               	goto	L26
 21548  017F3E                     l8349:
 21549                           
 21550                           ;stkvar	_divisor @ sp[(-2)+-16]
 21551  017F3E  90D8               	bcf	status,0,c
 21552  017F40  0EEE               	movlw	-18
 21553  017F42  36E3               	rlcf	plusw1,f,c
 21554  017F44  0EEF               	movlw	-17
 21555  017F46  36E3               	rlcf	plusw1,f,c
 21556  017F48  0EF0               	movlw	-16
 21557  017F4A  36E3               	rlcf	plusw1,f,c
 21558  017F4C  0EF1               	movlw	-15
 21559  017F4E  36E3               	rlcf	plusw1,f,c
 21560  017F50  0EF2               	movlw	-14
 21561  017F52  36E3               	rlcf	plusw1,f,c
 21562  017F54  0EF3               	movlw	-13
 21563  017F56  36E3               	rlcf	plusw1,f,c
 21564  017F58  0EF4               	movlw	-12
 21565  017F5A  36E3               	rlcf	plusw1,f,c
 21566  017F5C  0EF5               	movlw	-11
 21567  017F5E  36E3               	rlcf	plusw1,f,c
 21568                           
 21569                           ;stkvar	_counter @ sp[(-2)+1]
 21570  017F60  0EFF               	movlw	-1
 21571  017F62                     L26:
 21572  017F62  2AE3               	incf	plusw1,f,c
 21573                           
 21574                           ;stkvar	_divisor @ sp[(-2)+-16]
 21575  017F64  0EF5               	movlw	-11
 21576  017F66  AEE3               	btfss	plusw1,7,c
 21577  017F68  D7EA               	goto	l8349
 21578  017F6A                     u6520:
 21579                           
 21580                           ;stkvar	_divisor @ sp[(-2)+-16]
 21581                           ;stkvar	_dividend @ sp[(-2)+-8]
 21582  017F6A  50E1               	movf	fsr1l,w,c
 21583  017F6C  0FF6               	addlw	-10
 21584  017F6E  6ED9               	movwf	fsr2l,c
 21585  017F70  50E2               	movf	fsr1h,w,c
 21586  017F72  6EDA               	movwf	fsr2h,c
 21587  017F74  0EFF               	movlw	255
 21588  017F76  22DA               	addwfc	fsr2h,f,c
 21589  017F78  0EEE               	movlw	-18
 21590  017F7A  50E3               	movf	plusw1,w,c
 21591  017F7C  5CDE               	subwf	postinc2,w,c
 21592  017F7E  0EEF               	movlw	-17
 21593  017F80  50E3               	movf	plusw1,w,c
 21594  017F82  58DE               	subwfb	postinc2,w,c
 21595  017F84  0EF0               	movlw	-16
 21596  017F86  50E3               	movf	plusw1,w,c
 21597  017F88  58DE               	subwfb	postinc2,w,c
 21598  017F8A  0EF1               	movlw	-15
 21599  017F8C  50E3               	movf	plusw1,w,c
 21600  017F8E  58DE               	subwfb	postinc2,w,c
 21601  017F90  0EF2               	movlw	-14
 21602  017F92  50E3               	movf	plusw1,w,c
 21603  017F94  58DE               	subwfb	postinc2,w,c
 21604  017F96  0EF3               	movlw	-13
 21605  017F98  50E3               	movf	plusw1,w,c
 21606  017F9A  58DE               	subwfb	postinc2,w,c
 21607  017F9C  0EF4               	movlw	-12
 21608  017F9E  50E3               	movf	plusw1,w,c
 21609  017FA0  58DE               	subwfb	postinc2,w,c
 21610  017FA2  0EF5               	movlw	-11
 21611  017FA4  50E3               	movf	plusw1,w,c
 21612  017FA6  58DE               	subwfb	postinc2,w,c
 21613  017FA8  A0D8               	btfss	status,0,c
 21614  017FAA  D01F               	goto	l8357
 21615                           
 21616                           ;stkvar	_divisor @ sp[(-2)+-16]
 21617                           ;stkvar	_dividend @ sp[(-2)+-8]
 21618  017FAC  50E1               	movf	fsr1l,w,c
 21619  017FAE  0FF6               	addlw	-10
 21620  017FB0  6ED9               	movwf	fsr2l,c
 21621  017FB2  50E2               	movf	fsr1h,w,c
 21622  017FB4  6EDA               	movwf	fsr2h,c
 21623  017FB6  0EFF               	movlw	255
 21624  017FB8  22DA               	addwfc	fsr2h,f,c
 21625  017FBA  0EEE               	movlw	-18
 21626  017FBC  50E3               	movf	plusw1,w,c
 21627  017FBE  5EDE               	subwf	postinc2,f,c
 21628  017FC0  0EEF               	movlw	-17
 21629  017FC2  50E3               	movf	plusw1,w,c
 21630  017FC4  5ADE               	subwfb	postinc2,f,c
 21631  017FC6  0EF0               	movlw	-16
 21632  017FC8  50E3               	movf	plusw1,w,c
 21633  017FCA  5ADE               	subwfb	postinc2,f,c
 21634  017FCC  0EF1               	movlw	-15
 21635  017FCE  50E3               	movf	plusw1,w,c
 21636  017FD0  5ADE               	subwfb	postinc2,f,c
 21637  017FD2  0EF2               	movlw	-14
 21638  017FD4  50E3               	movf	plusw1,w,c
 21639  017FD6  5ADE               	subwfb	postinc2,f,c
 21640  017FD8  0EF3               	movlw	-13
 21641  017FDA  50E3               	movf	plusw1,w,c
 21642  017FDC  5ADE               	subwfb	postinc2,f,c
 21643  017FDE  0EF4               	movlw	-12
 21644  017FE0  50E3               	movf	plusw1,w,c
 21645  017FE2  5ADE               	subwfb	postinc2,f,c
 21646  017FE4  0EF5               	movlw	-11
 21647  017FE6  50E3               	movf	plusw1,w,c
 21648  017FE8  5ADE               	subwfb	postinc2,f,c
 21649  017FEA                     l8357:
 21650                           
 21651                           ;stkvar	_divisor @ sp[(-2)+-16]
 21652  017FEA  90D8               	bcf	status,0,c
 21653  017FEC  0EF5               	movlw	-11
 21654  017FEE  32E3               	rrcf	plusw1,f,c
 21655  017FF0  0EF4               	movlw	-12
 21656  017FF2  32E3               	rrcf	plusw1,f,c
 21657  017FF4  0EF3               	movlw	-13
 21658  017FF6  32E3               	rrcf	plusw1,f,c
 21659  017FF8  0EF2               	movlw	-14
 21660  017FFA  32E3               	rrcf	plusw1,f,c
 21661  017FFC  0EF1               	movlw	-15
 21662  017FFE  32E3               	rrcf	plusw1,f,c
 21663  018000  0EF0               	movlw	-16
 21664  018002  32E3               	rrcf	plusw1,f,c
 21665  018004  0EEF               	movlw	-17
 21666  018006  32E3               	rrcf	plusw1,f,c
 21667  018008  0EEE               	movlw	-18
 21668  01800A  32E3               	rrcf	plusw1,f,c
 21669                           
 21670                           ;stkvar	_counter @ sp[(-2)+1]
 21671  01800C  0EFF               	movlw	-1
 21672  01800E  50E3               	movf	plusw1,w,c
 21673  018010  6E01               	movwf	btemp^0,c
 21674  018012  0E01               	movlw	1
 21675  018014  5E01               	subwf	btemp^0,f,c
 21676  018016  0EFF               	movlw	-1
 21677  018018  0060  F007  FFE3   	movff	btemp,plusw1
 21678  01801E  A4D8               	btfss	status,2,c
 21679  018020  D7A4               	goto	u6520
 21680  018022                     u6540:
 21681                           
 21682                           ;stkvar	_sign @ sp[(-2)+0]
 21683  018022  0EFE               	movlw	-2
 21684  018024  50E3               	movf	plusw1,w,c
 21685  018026  B4D8               	btfsc	status,2,c
 21686  018028  D025               	goto	u6560
 21687                           
 21688                           ;stkvar	_dividend @ sp[(-2)+-8]
 21689                           ;stkvar	_dividend @ sp[(-2)+-8]
 21690  01802A  0EF6               	movlw	-10
 21691  01802C  6CE3               	negf	plusw1,c
 21692  01802E  0EF7               	movlw	-9
 21693  018030  1EE3               	comf	plusw1,f,c
 21694  018032  0EF8               	movlw	-8
 21695  018034  1EE3               	comf	plusw1,f,c
 21696  018036  0EF9               	movlw	-7
 21697  018038  1EE3               	comf	plusw1,f,c
 21698  01803A  0EFA               	movlw	-6
 21699  01803C  1EE3               	comf	plusw1,f,c
 21700  01803E  0EFB               	movlw	-5
 21701  018040  1EE3               	comf	plusw1,f,c
 21702  018042  0EFC               	movlw	-4
 21703  018044  1EE3               	comf	plusw1,f,c
 21704  018046  0EFD               	movlw	-3
 21705  018048  1EE3               	comf	plusw1,f,c
 21706  01804A  E314               	bnc	u6560
 21707  01804C  0EF7               	movlw	-9
 21708  01804E  2AE3               	incf	plusw1,f,c
 21709  018050  E311               	bnc	u6560
 21710  018052  0EF8               	movlw	-8
 21711  018054  2AE3               	incf	plusw1,f,c
 21712  018056  E30E               	bnc	u6560
 21713  018058  0EF9               	movlw	-7
 21714  01805A  2AE3               	incf	plusw1,f,c
 21715  01805C  E30B               	bnc	u6560
 21716  01805E  0EFA               	movlw	-6
 21717  018060  2AE3               	incf	plusw1,f,c
 21718  018062  E308               	bnc	u6560
 21719  018064  0EFB               	movlw	-5
 21720  018066  2AE3               	incf	plusw1,f,c
 21721  018068  E305               	bnc	u6560
 21722  01806A  0EFC               	movlw	-4
 21723  01806C  2AE3               	incf	plusw1,f,c
 21724  01806E  E302               	bnc	u6560
 21725  018070  0EFD               	movlw	-3
 21726  018072  2AE3               	incf	plusw1,f,c
 21727  018074                     u6560:
 21728                           
 21729                           ;stkvar	_dividend @ sp[(-2)+-8]
 21730  018074  0EF6               	movlw	246
 21731  018076  24E1               	addwf	fsr1l,w,c
 21732  018078  6ED9               	movwf	fsr2l,c
 21733  01807A  0EFF               	movlw	255
 21734  01807C  20E2               	addwfc	fsr1h,w,c
 21735  01807E  6EDA               	movwf	fsr2h,c
 21736                           
 21737                           ;stkvar	?___aomod @ sp[(-2)+-8]
 21738  018080  0E08               	movlw	8
 21739  018082  6E01               	movwf	btemp^0,c
 21740  018084  0EF6               	movlw	-10
 21741  018086                     us657999:
 21742  018086  006F FF7B FFE3     	movff	postinc2,plusw1
 21743  01808C  28E8               	incf	wreg,w,c
 21744  01808E  2E01               	decfsz	btemp^0,f,c
 21745  018090  D7FA               	bra	us657999
 21746                           
 21747                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 21748  018092  52E5               	movf	postdec1,f,c
 21749  018094  52E5               	movf	postdec1,f,c
 21750  018096  0012               	return		;funcret
 21751  018098                     __end_of___aomod:
 21752                           	opt callstack 0
 21753                           
 21754 ;; *************** function ___aodiv *****************
 21755 ;; Defined at:
 21756 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 21757 ;; Parameters:    Size  Location     Type
 21758 ;;  dividend        8  [STACK] long long 
 21759 ;;  divisor         8  [STACK] long long 
 21760 ;; Auto vars:     Size  Location     Type
 21761 ;;  quotient        8  [STACK] long long 
 21762 ;;  sign            1  [STACK] unsigned char 
 21763 ;;  counter         1  [STACK] unsigned char 
 21764 ;; Return value:  Size  Location     Type
 21765 ;;                  8  [STACK] long long 
 21766 ;; Registers used:
 21767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21768 ;; Tracked objects:
 21769 ;;		On entry : 0/2
 21770 ;;		On exit  : 0/0
 21771 ;;		Unchanged: 0/0
 21772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21777 ;;Total ram usage:        0 bytes
 21778 ;; Hardware stack levels used:    1
 21779 ;; Hardware stack levels required when called:   15
 21780 ;; This function calls:
 21781 ;;		Nothing
 21782 ;; This function is called by:
 21783 ;;		_dtoa
 21784 ;; This function uses a reentrant model
 21785 ;;
 21786                           
 21787                           	psect	text76
 21788  01771E                     __ptext76:
 21789                           	opt callstack 0
 21790  01771E                     ___aodiv:
 21791                           	opt callstack 0
 21792                           
 21793                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21794  01771E  0E0A               	movlw	10
 21795  017720  26E1               	addwf	fsr1l,f,c
 21796  017722  0E00               	movlw	0
 21797  017724  22E2               	addwfc	fsr1h,f,c
 21798                           
 21799                           ;stkvar	_sign @ sp[(-10)+8]
 21800                           
 21801                           ;incstack = 0
 21802 ;; hardware stack exceeded
 21803  017726  0EFE               	movlw	-2
 21804  017728  6AE3               	clrf	plusw1,c
 21805                           
 21806                           ;stkvar	_divisor @ sp[(-10)+-16]
 21807  01772A  0EED               	movlw	-19
 21808  01772C  AEE3               	btfss	plusw1,7,c
 21809  01772E  D028               	goto	l8297
 21810                           
 21811                           ;stkvar	_divisor @ sp[(-10)+-16]
 21812                           ;stkvar	_divisor @ sp[(-10)+-16]
 21813  017730  0EE6               	movlw	-26
 21814  017732  6CE3               	negf	plusw1,c
 21815  017734  0EE7               	movlw	-25
 21816  017736  1EE3               	comf	plusw1,f,c
 21817  017738  0EE8               	movlw	-24
 21818  01773A  1EE3               	comf	plusw1,f,c
 21819  01773C  0EE9               	movlw	-23
 21820  01773E  1EE3               	comf	plusw1,f,c
 21821  017740  0EEA               	movlw	-22
 21822  017742  1EE3               	comf	plusw1,f,c
 21823  017744  0EEB               	movlw	-21
 21824  017746  1EE3               	comf	plusw1,f,c
 21825  017748  0EEC               	movlw	-20
 21826  01774A  1EE3               	comf	plusw1,f,c
 21827  01774C  0EED               	movlw	-19
 21828  01774E  1EE3               	comf	plusw1,f,c
 21829  017750  E314               	bnc	u6360
 21830  017752  0EE7               	movlw	-25
 21831  017754  2AE3               	incf	plusw1,f,c
 21832  017756  E311               	bnc	u6360
 21833  017758  0EE8               	movlw	-24
 21834  01775A  2AE3               	incf	plusw1,f,c
 21835  01775C  E30E               	bnc	u6360
 21836  01775E  0EE9               	movlw	-23
 21837  017760  2AE3               	incf	plusw1,f,c
 21838  017762  E30B               	bnc	u6360
 21839  017764  0EEA               	movlw	-22
 21840  017766  2AE3               	incf	plusw1,f,c
 21841  017768  E308               	bnc	u6360
 21842  01776A  0EEB               	movlw	-21
 21843  01776C  2AE3               	incf	plusw1,f,c
 21844  01776E  E305               	bnc	u6360
 21845  017770  0EEC               	movlw	-20
 21846  017772  2AE3               	incf	plusw1,f,c
 21847  017774  E302               	bnc	u6360
 21848  017776  0EED               	movlw	-19
 21849  017778  2AE3               	incf	plusw1,f,c
 21850  01777A                     u6360:
 21851                           
 21852                           ;stkvar	_sign @ sp[(-10)+8]
 21853  01777A  0EFE               	movlw	-2
 21854  01777C  6AE3               	clrf	plusw1,c
 21855  01777E  2AE3               	incf	plusw1,f,c
 21856  017780                     l8297:
 21857                           
 21858                           ;stkvar	_dividend @ sp[(-10)+-8]
 21859  017780  0EF5               	movlw	-11
 21860  017782  AEE3               	btfss	plusw1,7,c
 21861  017784  D027               	goto	l8303
 21862                           
 21863                           ;stkvar	_dividend @ sp[(-10)+-8]
 21864                           ;stkvar	_dividend @ sp[(-10)+-8]
 21865  017786  0EEE               	movlw	-18
 21866  017788  6CE3               	negf	plusw1,c
 21867  01778A  0EEF               	movlw	-17
 21868  01778C  1EE3               	comf	plusw1,f,c
 21869  01778E  0EF0               	movlw	-16
 21870  017790  1EE3               	comf	plusw1,f,c
 21871  017792  0EF1               	movlw	-15
 21872  017794  1EE3               	comf	plusw1,f,c
 21873  017796  0EF2               	movlw	-14
 21874  017798  1EE3               	comf	plusw1,f,c
 21875  01779A  0EF3               	movlw	-13
 21876  01779C  1EE3               	comf	plusw1,f,c
 21877  01779E  0EF4               	movlw	-12
 21878  0177A0  1EE3               	comf	plusw1,f,c
 21879  0177A2  0EF5               	movlw	-11
 21880  0177A4  1EE3               	comf	plusw1,f,c
 21881  0177A6  E314               	bnc	u6380
 21882  0177A8  0EEF               	movlw	-17
 21883  0177AA  2AE3               	incf	plusw1,f,c
 21884  0177AC  E311               	bnc	u6380
 21885  0177AE  0EF0               	movlw	-16
 21886  0177B0  2AE3               	incf	plusw1,f,c
 21887  0177B2  E30E               	bnc	u6380
 21888  0177B4  0EF1               	movlw	-15
 21889  0177B6  2AE3               	incf	plusw1,f,c
 21890  0177B8  E30B               	bnc	u6380
 21891  0177BA  0EF2               	movlw	-14
 21892  0177BC  2AE3               	incf	plusw1,f,c
 21893  0177BE  E308               	bnc	u6380
 21894  0177C0  0EF3               	movlw	-13
 21895  0177C2  2AE3               	incf	plusw1,f,c
 21896  0177C4  E305               	bnc	u6380
 21897  0177C6  0EF4               	movlw	-12
 21898  0177C8  2AE3               	incf	plusw1,f,c
 21899  0177CA  E302               	bnc	u6380
 21900  0177CC  0EF5               	movlw	-11
 21901  0177CE  2AE3               	incf	plusw1,f,c
 21902  0177D0                     u6380:
 21903                           
 21904                           ;stkvar	_sign @ sp[(-10)+8]
 21905  0177D0  0EFE               	movlw	-2
 21906  0177D2  70E3               	btg	plusw1,0,c
 21907  0177D4                     l8303:
 21908                           
 21909                           ;stkvar	_quotient @ sp[(-10)+0]
 21910  0177D4  0E07               	movlw	7
 21911  0177D6  6E01               	movwf	btemp^0,c
 21912  0177D8  0EF6               	movlw	-10
 21913  0177DA                     u6391:
 21914  0177DA  6AE3               	clrf	plusw1,c
 21915  0177DC  2AE8               	incf	wreg,f,c
 21916  0177DE  0601               	decf	btemp^0,f,c
 21917  0177E0  E2FC               	bc	u6391
 21918                           
 21919                           ;stkvar	_divisor @ sp[(-10)+-16]
 21920  0177E2  0EE6               	movlw	-26
 21921  0177E4  50E3               	movf	plusw1,w,c
 21922  0177E6  E116               	bnz	u6400
 21923  0177E8  0EE7               	movlw	-25
 21924  0177EA  50E3               	movf	plusw1,w,c
 21925  0177EC  E113               	bnz	u6400
 21926  0177EE  0EE8               	movlw	-24
 21927  0177F0  50E3               	movf	plusw1,w,c
 21928  0177F2  E110               	bnz	u6400
 21929  0177F4  0EE9               	movlw	-23
 21930  0177F6  50E3               	movf	plusw1,w,c
 21931  0177F8  E10D               	bnz	u6400
 21932  0177FA  0EEA               	movlw	-22
 21933  0177FC  50E3               	movf	plusw1,w,c
 21934  0177FE  E10A               	bnz	u6400
 21935  017800  0EEB               	movlw	-21
 21936  017802  50E3               	movf	plusw1,w,c
 21937  017804  E107               	bnz	u6400
 21938  017806  0EEC               	movlw	-20
 21939  017808  50E3               	movf	plusw1,w,c
 21940  01780A  E104               	bnz	u6400
 21941  01780C  0EED               	movlw	-19
 21942  01780E  50E3               	movf	plusw1,w,c
 21943  017810  B4D8               	btfsc	status,2,c
 21944  017812  D088               	goto	u6430
 21945  017814                     u6400:
 21946                           
 21947                           ;stkvar	_counter @ sp[(-10)+9]
 21948  017814  0EFF               	movlw	-1
 21949  017816  6AE3               	clrf	plusw1,c
 21950  017818  D012               	goto	L27
 21951  01781A                     l8309:
 21952                           
 21953                           ;stkvar	_divisor @ sp[(-10)+-16]
 21954  01781A  90D8               	bcf	status,0,c
 21955  01781C  0EE6               	movlw	-26
 21956  01781E  36E3               	rlcf	plusw1,f,c
 21957  017820  0EE7               	movlw	-25
 21958  017822  36E3               	rlcf	plusw1,f,c
 21959  017824  0EE8               	movlw	-24
 21960  017826  36E3               	rlcf	plusw1,f,c
 21961  017828  0EE9               	movlw	-23
 21962  01782A  36E3               	rlcf	plusw1,f,c
 21963  01782C  0EEA               	movlw	-22
 21964  01782E  36E3               	rlcf	plusw1,f,c
 21965  017830  0EEB               	movlw	-21
 21966  017832  36E3               	rlcf	plusw1,f,c
 21967  017834  0EEC               	movlw	-20
 21968  017836  36E3               	rlcf	plusw1,f,c
 21969  017838  0EED               	movlw	-19
 21970  01783A  36E3               	rlcf	plusw1,f,c
 21971                           
 21972                           ;stkvar	_counter @ sp[(-10)+9]
 21973  01783C  0EFF               	movlw	-1
 21974  01783E                     L27:
 21975  01783E  2AE3               	incf	plusw1,f,c
 21976                           
 21977                           ;stkvar	_divisor @ sp[(-10)+-16]
 21978  017840  0EED               	movlw	-19
 21979  017842  AEE3               	btfss	plusw1,7,c
 21980  017844  D7EA               	goto	l8309
 21981  017846                     u6410:
 21982                           
 21983                           ;stkvar	_quotient @ sp[(-10)+0]
 21984  017846  90D8               	bcf	status,0,c
 21985  017848  0EF6               	movlw	-10
 21986  01784A  36E3               	rlcf	plusw1,f,c
 21987  01784C  0EF7               	movlw	-9
 21988  01784E  36E3               	rlcf	plusw1,f,c
 21989  017850  0EF8               	movlw	-8
 21990  017852  36E3               	rlcf	plusw1,f,c
 21991  017854  0EF9               	movlw	-7
 21992  017856  36E3               	rlcf	plusw1,f,c
 21993  017858  0EFA               	movlw	-6
 21994  01785A  36E3               	rlcf	plusw1,f,c
 21995  01785C  0EFB               	movlw	-5
 21996  01785E  36E3               	rlcf	plusw1,f,c
 21997  017860  0EFC               	movlw	-4
 21998  017862  36E3               	rlcf	plusw1,f,c
 21999  017864  0EFD               	movlw	-3
 22000  017866  36E3               	rlcf	plusw1,f,c
 22001                           
 22002                           ;stkvar	_divisor @ sp[(-10)+-16]
 22003                           ;stkvar	_dividend @ sp[(-10)+-8]
 22004  017868  50E1               	movf	fsr1l,w,c
 22005  01786A  0FEE               	addlw	-18
 22006  01786C  6ED9               	movwf	fsr2l,c
 22007  01786E  50E2               	movf	fsr1h,w,c
 22008  017870  6EDA               	movwf	fsr2h,c
 22009  017872  0EFF               	movlw	255
 22010  017874  22DA               	addwfc	fsr2h,f,c
 22011  017876  0EE6               	movlw	-26
 22012  017878  50E3               	movf	plusw1,w,c
 22013  01787A  5CDE               	subwf	postinc2,w,c
 22014  01787C  0EE7               	movlw	-25
 22015  01787E  50E3               	movf	plusw1,w,c
 22016  017880  58DE               	subwfb	postinc2,w,c
 22017  017882  0EE8               	movlw	-24
 22018  017884  50E3               	movf	plusw1,w,c
 22019  017886  58DE               	subwfb	postinc2,w,c
 22020  017888  0EE9               	movlw	-23
 22021  01788A  50E3               	movf	plusw1,w,c
 22022  01788C  58DE               	subwfb	postinc2,w,c
 22023  01788E  0EEA               	movlw	-22
 22024  017890  50E3               	movf	plusw1,w,c
 22025  017892  58DE               	subwfb	postinc2,w,c
 22026  017894  0EEB               	movlw	-21
 22027  017896  50E3               	movf	plusw1,w,c
 22028  017898  58DE               	subwfb	postinc2,w,c
 22029  01789A  0EEC               	movlw	-20
 22030  01789C  50E3               	movf	plusw1,w,c
 22031  01789E  58DE               	subwfb	postinc2,w,c
 22032  0178A0  0EED               	movlw	-19
 22033  0178A2  50E3               	movf	plusw1,w,c
 22034  0178A4  58DE               	subwfb	postinc2,w,c
 22035  0178A6  A0D8               	btfss	status,0,c
 22036  0178A8  D021               	goto	l8321
 22037                           
 22038                           ;stkvar	_divisor @ sp[(-10)+-16]
 22039                           ;stkvar	_dividend @ sp[(-10)+-8]
 22040  0178AA  50E1               	movf	fsr1l,w,c
 22041  0178AC  0FEE               	addlw	-18
 22042  0178AE  6ED9               	movwf	fsr2l,c
 22043  0178B0  50E2               	movf	fsr1h,w,c
 22044  0178B2  6EDA               	movwf	fsr2h,c
 22045  0178B4  0EFF               	movlw	255
 22046  0178B6  22DA               	addwfc	fsr2h,f,c
 22047  0178B8  0EE6               	movlw	-26
 22048  0178BA  50E3               	movf	plusw1,w,c
 22049  0178BC  5EDE               	subwf	postinc2,f,c
 22050  0178BE  0EE7               	movlw	-25
 22051  0178C0  50E3               	movf	plusw1,w,c
 22052  0178C2  5ADE               	subwfb	postinc2,f,c
 22053  0178C4  0EE8               	movlw	-24
 22054  0178C6  50E3               	movf	plusw1,w,c
 22055  0178C8  5ADE               	subwfb	postinc2,f,c
 22056  0178CA  0EE9               	movlw	-23
 22057  0178CC  50E3               	movf	plusw1,w,c
 22058  0178CE  5ADE               	subwfb	postinc2,f,c
 22059  0178D0  0EEA               	movlw	-22
 22060  0178D2  50E3               	movf	plusw1,w,c
 22061  0178D4  5ADE               	subwfb	postinc2,f,c
 22062  0178D6  0EEB               	movlw	-21
 22063  0178D8  50E3               	movf	plusw1,w,c
 22064  0178DA  5ADE               	subwfb	postinc2,f,c
 22065  0178DC  0EEC               	movlw	-20
 22066  0178DE  50E3               	movf	plusw1,w,c
 22067  0178E0  5ADE               	subwfb	postinc2,f,c
 22068  0178E2  0EED               	movlw	-19
 22069  0178E4  50E3               	movf	plusw1,w,c
 22070  0178E6  5ADE               	subwfb	postinc2,f,c
 22071                           
 22072                           ;stkvar	_quotient @ sp[(-10)+0]
 22073  0178E8  0EF6               	movlw	-10
 22074  0178EA  80E3               	bsf	plusw1,0,c
 22075  0178EC                     l8321:
 22076                           
 22077                           ;stkvar	_divisor @ sp[(-10)+-16]
 22078  0178EC  90D8               	bcf	status,0,c
 22079  0178EE  0EED               	movlw	-19
 22080  0178F0  32E3               	rrcf	plusw1,f,c
 22081  0178F2  0EEC               	movlw	-20
 22082  0178F4  32E3               	rrcf	plusw1,f,c
 22083  0178F6  0EEB               	movlw	-21
 22084  0178F8  32E3               	rrcf	plusw1,f,c
 22085  0178FA  0EEA               	movlw	-22
 22086  0178FC  32E3               	rrcf	plusw1,f,c
 22087  0178FE  0EE9               	movlw	-23
 22088  017900  32E3               	rrcf	plusw1,f,c
 22089  017902  0EE8               	movlw	-24
 22090  017904  32E3               	rrcf	plusw1,f,c
 22091  017906  0EE7               	movlw	-25
 22092  017908  32E3               	rrcf	plusw1,f,c
 22093  01790A  0EE6               	movlw	-26
 22094  01790C  32E3               	rrcf	plusw1,f,c
 22095                           
 22096                           ;stkvar	_counter @ sp[(-10)+9]
 22097  01790E  0EFF               	movlw	-1
 22098  017910  50E3               	movf	plusw1,w,c
 22099  017912  6E01               	movwf	btemp^0,c
 22100  017914  0E01               	movlw	1
 22101  017916  5E01               	subwf	btemp^0,f,c
 22102  017918  0EFF               	movlw	-1
 22103  01791A  0060  F007  FFE3   	movff	btemp,plusw1
 22104  017920  A4D8               	btfss	status,2,c
 22105  017922  D791               	goto	u6410
 22106  017924                     u6430:
 22107                           
 22108                           ;stkvar	_sign @ sp[(-10)+8]
 22109  017924  0EFE               	movlw	-2
 22110  017926  50E3               	movf	plusw1,w,c
 22111  017928  B4D8               	btfsc	status,2,c
 22112  01792A  D025               	goto	u6450
 22113                           
 22114                           ;stkvar	_quotient @ sp[(-10)+0]
 22115                           ;stkvar	_quotient @ sp[(-10)+0]
 22116  01792C  0EF6               	movlw	-10
 22117  01792E  6CE3               	negf	plusw1,c
 22118  017930  0EF7               	movlw	-9
 22119  017932  1EE3               	comf	plusw1,f,c
 22120  017934  0EF8               	movlw	-8
 22121  017936  1EE3               	comf	plusw1,f,c
 22122  017938  0EF9               	movlw	-7
 22123  01793A  1EE3               	comf	plusw1,f,c
 22124  01793C  0EFA               	movlw	-6
 22125  01793E  1EE3               	comf	plusw1,f,c
 22126  017940  0EFB               	movlw	-5
 22127  017942  1EE3               	comf	plusw1,f,c
 22128  017944  0EFC               	movlw	-4
 22129  017946  1EE3               	comf	plusw1,f,c
 22130  017948  0EFD               	movlw	-3
 22131  01794A  1EE3               	comf	plusw1,f,c
 22132  01794C  E314               	bnc	u6450
 22133  01794E  0EF7               	movlw	-9
 22134  017950  2AE3               	incf	plusw1,f,c
 22135  017952  E311               	bnc	u6450
 22136  017954  0EF8               	movlw	-8
 22137  017956  2AE3               	incf	plusw1,f,c
 22138  017958  E30E               	bnc	u6450
 22139  01795A  0EF9               	movlw	-7
 22140  01795C  2AE3               	incf	plusw1,f,c
 22141  01795E  E30B               	bnc	u6450
 22142  017960  0EFA               	movlw	-6
 22143  017962  2AE3               	incf	plusw1,f,c
 22144  017964  E308               	bnc	u6450
 22145  017966  0EFB               	movlw	-5
 22146  017968  2AE3               	incf	plusw1,f,c
 22147  01796A  E305               	bnc	u6450
 22148  01796C  0EFC               	movlw	-4
 22149  01796E  2AE3               	incf	plusw1,f,c
 22150  017970  E302               	bnc	u6450
 22151  017972  0EFD               	movlw	-3
 22152  017974  2AE3               	incf	plusw1,f,c
 22153  017976                     u6450:
 22154                           
 22155                           ;stkvar	_quotient @ sp[(-10)+0]
 22156  017976  0EF6               	movlw	246
 22157  017978  24E1               	addwf	fsr1l,w,c
 22158  01797A  6ED9               	movwf	fsr2l,c
 22159  01797C  0EFF               	movlw	255
 22160  01797E  20E2               	addwfc	fsr1h,w,c
 22161  017980  6EDA               	movwf	fsr2h,c
 22162                           
 22163                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 22164  017982  0E08               	movlw	8
 22165  017984  6E01               	movwf	btemp^0,c
 22166  017986  0EEE               	movlw	-18
 22167  017988                     us646999:
 22168  017988  006F FF7B FFE3     	movff	postinc2,plusw1
 22169  01798E  28E8               	incf	wreg,w,c
 22170  017990  2E01               	decfsz	btemp^0,f,c
 22171  017992  D7FA               	bra	us646999
 22172                           
 22173                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 22174  017994  0EF6               	movlw	246
 22175  017996  26E1               	addwf	fsr1l,f,c
 22176  017998  0EFF               	movlw	255
 22177  01799A  22E2               	addwfc	fsr1h,f,c
 22178  01799C  0012               	return		;funcret
 22179  01799E                     __end_of___aodiv:
 22180                           	opt callstack 0
 22181                           
 22182 ;; *************** function _ctoa *****************
 22183 ;; Defined at:
 22184 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22185 ;; Parameters:    Size  Location     Type
 22186 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22187 ;;		 -> f(6), NULL(0), 
 22188 ;;  c               1  [STACK] unsigned char 
 22189 ;; Auto vars:     Size  Location     Type
 22190 ;;  w               2  [STACK] int 
 22191 ;;  l               2    0        int 
 22192 ;; Return value:  Size  Location     Type
 22193 ;;                  2  [STACK] int 
 22194 ;; Registers used:
 22195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22196 ;; Tracked objects:
 22197 ;;		On entry : 0/0
 22198 ;;		On exit  : 0/0
 22199 ;;		Unchanged: 0/0
 22200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22205 ;;Total ram usage:        0 bytes
 22206 ;; Hardware stack levels used:    1
 22207 ;; Hardware stack levels required when called:   20
 22208 ;; This function calls:
 22209 ;;		_pad
 22210 ;; This function is called by:
 22211 ;;		_vfpfcnvrt
 22212 ;; This function uses a reentrant model
 22213 ;;
 22214                           
 22215                           	psect	text77
 22216  01AEFC                     __ptext77:
 22217                           	opt callstack 0
 22218  01AEFC                     _ctoa:
 22219                           	opt callstack 0
 22220                           
 22221                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22222  01AEFC  52E6               	movf	postinc1,f,c
 22223  01AEFE  52E6               	movf	postinc1,f,c
 22224                           
 22225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 22226                           
 22227                           ;incstack = 0
 22228 ;; hardware stack exceeded
 22229  01AF00  503A               	movf	_width^0,w,c
 22230  01AF02  103B               	iorwf	(_width+1)^0,w,c
 22231  01AF04  A4D8               	btfss	status,2,c
 22232  01AF06  D009               	goto	l12197
 22233                           
 22234                           ;stkvar	_w @ sp[(-2)+0]
 22235  01AF08  0EFE               	movlw	-2
 22236  01AF0A  0060  F0EB  FFE3   	movff	_width,plusw1
 22237  01AF10  0EFF               	movlw	-1
 22238  01AF12  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22239  01AF18  D016               	goto	l12199
 22240  01AF1A                     l12197:
 22241  01AF1A  0EFF               	movlw	255
 22242  01AF1C  6E0B               	movwf	(btemp+10)^0,c
 22243  01AF1E  0EFF               	movlw	255
 22244  01AF20  6E0C               	movwf	(btemp+11)^0,c
 22245  01AF22  0060  F0E8  F009   	movff	_width,btemp+8
 22246  01AF28  0060  F0EC  F00A   	movff	_width+1,btemp+9
 22247  01AF2E  500B               	movf	(btemp+10)^0,w,c
 22248  01AF30  2609               	addwf	(btemp+8)^0,f,c
 22249  01AF32  500C               	movf	(btemp+11)^0,w,c
 22250  01AF34  220A               	addwfc	(btemp+9)^0,f,c
 22251                           
 22252                           ;stkvar	_w @ sp[(-2)+0]
 22253  01AF36  0EFE               	movlw	-2
 22254  01AF38  0060  F027  FFE3   	movff	btemp+8,plusw1
 22255  01AF3E  0EFF               	movlw	-1
 22256  01AF40  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22257  01AF46                     l12199:
 22258                           
 22259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 22260                           ;stkvar	_c @ sp[(-2)+-3]
 22261  01AF46  0EFB               	movlw	-5
 22262  01AF48  006F FF8C  F297    	movff	plusw1,_dbuf
 22263                           
 22264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 22265  01AF4E  0102               	movlb	2	; () banked
 22266  01AF50  6B98               	clrf	(_dbuf+1)& (0+255),b
 22267                           
 22268                           ; BSR set to: 2
 22269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 22270                           ;stkvar	_w @ sp[(-2)+0]
 22271  01AF52  0EFE               	movlw	-2
 22272  01AF54  006F FF8F FFE6     	movff	plusw1,postinc1
 22273  01AF5A  006F FF8F FFE6     	movff	plusw1,postinc1
 22274  01AF60  0E97               	movlw	low _dbuf
 22275  01AF62  6EE6               	movwf	postinc1,c
 22276  01AF64  0E02               	movlw	high _dbuf
 22277  01AF66  6EE6               	movwf	postinc1,c
 22278                           
 22279                           ;stkvar	_fp @ sp[(-6)+-2]
 22280  01AF68  0EF8               	movlw	-8
 22281  01AF6A  006F FF8F FFE6     	movff	plusw1,postinc1
 22282  01AF70  006F FF8F FFE6     	movff	plusw1,postinc1
 22283  01AF76  EC90  F0CE         	call	_pad	;wreg free
 22284                           
 22285                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 22286  01AF7A  0EFB               	movlw	251
 22287  01AF7C  26E1               	addwf	fsr1l,f,c
 22288  01AF7E  0EFF               	movlw	255
 22289  01AF80  22E2               	addwfc	fsr1h,f,c
 22290  01AF82  0012               	return		;funcret
 22291  01AF84                     __end_of_ctoa:
 22292                           	opt callstack 0
 22293                           
 22294 ;; *************** function _pad *****************
 22295 ;; Defined at:
 22296 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22297 ;; Parameters:    Size  Location     Type
 22298 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22299 ;;		 -> f(6), NULL(0), 
 22300 ;;  buf             2  [STACK] PTR unsigned char 
 22301 ;;		 -> dbuf(80), 
 22302 ;;  p               2  [STACK] int 
 22303 ;; Auto vars:     Size  Location     Type
 22304 ;;  w               2  [STACK] int 
 22305 ;;  i               2  [STACK] int 
 22306 ;; Return value:  Size  Location     Type
 22307 ;;                  2  [STACK] int 
 22308 ;; Registers used:
 22309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22310 ;; Tracked objects:
 22311 ;;		On entry : 0/2
 22312 ;;		On exit  : 0/0
 22313 ;;		Unchanged: 0/0
 22314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22319 ;;Total ram usage:        0 bytes
 22320 ;; Hardware stack levels used:    1
 22321 ;; Hardware stack levels required when called:   19
 22322 ;; This function calls:
 22323 ;;		_fputc
 22324 ;;		_fputs
 22325 ;;		_strlen
 22326 ;; This function is called by:
 22327 ;;		_ctoa
 22328 ;;		_dtoa
 22329 ;;		_efgtoa
 22330 ;;		_utoa
 22331 ;;		_xtoa
 22332 ;; This function uses a reentrant model
 22333 ;;
 22334                           
 22335                           	psect	text78
 22336  019D20                     __ptext78:
 22337                           	opt callstack 0
 22338  019D20                     _pad:
 22339                           	opt callstack 0
 22340                           
 22341                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22342  019D20  52E6               	movf	postinc1,f,c
 22343  019D22  52E6               	movf	postinc1,f,c
 22344  019D24  52E6               	movf	postinc1,f,c
 22345  019D26  52E6               	movf	postinc1,f,c
 22346                           
 22347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 22348                           
 22349                           ;incstack = 0
 22350 ;; hardware stack exceeded
 22351  019D28  A03E               	btfss	_flags^0,0,c
 22352  019D2A  D010               	goto	l12159
 22353                           
 22354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 22355                           ;stkvar	_fp @ sp[(-4)+-2]
 22356  019D2C  0EFA               	movlw	-6
 22357  019D2E  006F FF8F FFE6     	movff	plusw1,postinc1
 22358  019D34  006F FF8F FFE6     	movff	plusw1,postinc1
 22359                           
 22360                           ;stkvar	_buf @ sp[(-6)+-4]
 22361  019D3A  0EF6               	movlw	-10
 22362  019D3C  006F FF8F FFE6     	movff	plusw1,postinc1
 22363  019D42  006F FF8F FFE6     	movff	plusw1,postinc1
 22364  019D48  ECA0  F0D6         	call	_fputs	;wreg free
 22365  019D4C                     l12159:
 22366                           
 22367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 22368                           ;stkvar	_p @ sp[(-4)+-6]
 22369  019D4C  0EF7               	movlw	-9
 22370  019D4E  BEE3               	btfsc	plusw1,7,c
 22371  019D50  D011               	goto	l12163
 22372                           
 22373                           ;stkvar	_p @ sp[(-4)+-6]
 22374                           ;stkvar	_w @ sp[(-4)+0]
 22375  019D52  0EF6               	movlw	-10
 22376  019D54  006F FF8C  F001    	movff	plusw1,btemp
 22377  019D5A  0EFC               	movlw	-4
 22378  019D5C  0060  F007  FFE3   	movff	btemp,plusw1
 22379  019D62  0EF7               	movlw	-9
 22380  019D64  006F FF8C  F001    	movff	plusw1,btemp
 22381  019D6A  0EFD               	movlw	-3
 22382  019D6C  0060  F007  FFE3   	movff	btemp,plusw1
 22383  019D72  D004               	goto	l2221
 22384  019D74                     l12163:
 22385                           
 22386                           ;stkvar	_w @ sp[(-4)+0]
 22387  019D74  0EFC               	movlw	-4
 22388  019D76  6AE3               	clrf	plusw1,c
 22389  019D78  0EFD               	movlw	-3
 22390  019D7A  6AE3               	clrf	plusw1,c
 22391  019D7C                     l2221:
 22392                           
 22393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 22394                           ;stkvar	_i @ sp[(-4)+2]
 22395  019D7C  0EFE               	movlw	-2
 22396  019D7E  6AE3               	clrf	plusw1,c
 22397  019D80  0EFF               	movlw	-1
 22398  019D82  6AE3               	clrf	plusw1,c
 22399                           
 22400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22401  019D84  D01E               	goto	l12169
 22402  019D86                     l12165:
 22403                           
 22404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 22405                           ;stkvar	_fp @ sp[(-4)+-2]
 22406  019D86  0EFA               	movlw	-6
 22407  019D88  006F FF8F FFE6     	movff	plusw1,postinc1
 22408  019D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 22409  019D94  0E20               	movlw	32
 22410  019D96  6EE6               	movwf	postinc1,c
 22411  019D98  0E00               	movlw	0
 22412  019D9A  6EE6               	movwf	postinc1,c
 22413  019D9C  ECE6  F0CC         	call	_fputc	;wreg free
 22414                           
 22415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 22416                           ;stkvar	_i @ sp[(-4)+2]
 22417  019DA0  0EFE               	movlw	-2
 22418  019DA2  50E3               	movf	plusw1,w,c
 22419  019DA4  0F01               	addlw	1
 22420  019DA6  6E01               	movwf	btemp^0,c
 22421  019DA8  0EFE               	movlw	-2
 22422  019DAA  0060  F007  FFE3   	movff	btemp,plusw1
 22423  019DB0  6A01               	clrf	btemp^0,c
 22424  019DB2  0EFF               	movlw	-1
 22425  019DB4  50E3               	movf	plusw1,w,c
 22426  019DB6  2001               	addwfc	btemp^0,w,c
 22427  019DB8  6E01               	movwf	btemp^0,c
 22428  019DBA  0EFF               	movlw	-1
 22429  019DBC  0060  F007  FFE3   	movff	btemp,plusw1
 22430  019DC2                     l12169:
 22431                           
 22432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22433                           ;stkvar	_w @ sp[(-4)+0]
 22434                           ;stkvar	_i @ sp[(-4)+2]
 22435  019DC2  50E1               	movf	fsr1l,w,c
 22436  019DC4  0FFE               	addlw	-2
 22437  019DC6  6ED9               	movwf	fsr2l,c
 22438  019DC8  50E2               	movf	fsr1h,w,c
 22439  019DCA  6EDA               	movwf	fsr2h,c
 22440  019DCC  0EFF               	movlw	255
 22441  019DCE  22DA               	addwfc	fsr2h,f,c
 22442  019DD0  0EFC               	movlw	-4
 22443  019DD2  50E3               	movf	plusw1,w,c
 22444  019DD4  5CDE               	subwf	postinc2,w,c
 22445  019DD6  50DE               	movf	postinc2,w,c
 22446  019DD8  0A80               	xorlw	128
 22447  019DDA  6E01               	movwf	btemp^0,c
 22448  019DDC  0EFD               	movlw	-3
 22449  019DDE  50E3               	movf	plusw1,w,c
 22450  019DE0  0A80               	xorlw	128
 22451  019DE2  5801               	subwfb	btemp^0,w,c
 22452  019DE4  A0D8               	btfss	status,0,c
 22453  019DE6  D7CF               	goto	l12165
 22454                           
 22455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 22456  019DE8  B03E               	btfsc	_flags^0,0,c
 22457  019DEA  D010               	goto	l12173
 22458                           
 22459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 22460                           ;stkvar	_fp @ sp[(-4)+-2]
 22461  019DEC  0EFA               	movlw	-6
 22462  019DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 22463  019DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 22464                           
 22465                           ;stkvar	_buf @ sp[(-6)+-4]
 22466  019DFA  0EF6               	movlw	-10
 22467  019DFC  006F FF8F FFE6     	movff	plusw1,postinc1
 22468  019E02  006F FF8F FFE6     	movff	plusw1,postinc1
 22469  019E08  ECA0  F0D6         	call	_fputs	;wreg free
 22470  019E0C                     l12173:
 22471                           
 22472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 22473                           ;stkvar	_w @ sp[(-4)+0]
 22474                           ;stkvar	_buf @ sp[(-4)+-4]
 22475  019E0C  0EF8               	movlw	-8
 22476  019E0E  006F FF8F FFE6     	movff	plusw1,postinc1
 22477  019E14  006F FF8F FFE6     	movff	plusw1,postinc1
 22478  019E1A  EC4F  F0D6         	call	_strlen	;wreg free
 22479  019E1E  0EFC               	movlw	-4
 22480  019E20  50E3               	movf	plusw1,w,c
 22481  019E22  2601               	addwf	btemp^0,f,c
 22482  019E24  0EFD               	movlw	-3
 22483  019E26  50E3               	movf	plusw1,w,c
 22484  019E28  2202               	addwfc	(btemp+1)^0,f,c
 22485                           
 22486                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 22487  019E2A  0EF6               	movlw	246
 22488  019E2C  26E1               	addwf	fsr1l,f,c
 22489  019E2E  0EFF               	movlw	255
 22490  019E30  22E2               	addwfc	fsr1h,f,c
 22491  019E32  0012               	return		;funcret
 22492  019E34                     __end_of_pad:
 22493                           	opt callstack 0
 22494                           
 22495 ;; *************** function _strlen *****************
 22496 ;; Defined at:
 22497 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 22498 ;; Parameters:    Size  Location     Type
 22499 ;;  s               2  [STACK] PTR const unsigned char 
 22500 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22501 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22502 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22503 ;;		 -> V(191), 
 22504 ;; Auto vars:     Size  Location     Type
 22505 ;;  a               2  [STACK] PTR const unsigned char 
 22506 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22507 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22508 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22509 ;;		 -> V(191), 
 22510 ;; Return value:  Size  Location     Type
 22511 ;;                  2  [STACK] unsigned int 
 22512 ;; Registers used:
 22513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 22514 ;; Tracked objects:
 22515 ;;		On entry : 0/0
 22516 ;;		On exit  : 0/0
 22517 ;;		Unchanged: 0/0
 22518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22523 ;;Total ram usage:        0 bytes
 22524 ;; Hardware stack levels used:    1
 22525 ;; Hardware stack levels required when called:   15
 22526 ;; This function calls:
 22527 ;;		Nothing
 22528 ;; This function is called by:
 22529 ;;		_eaDogM_WriteString
 22530 ;;		_spinners
 22531 ;;		_calc_bsoc
 22532 ;;		_pad
 22533 ;;		_stoa
 22534 ;; This function uses a reentrant model
 22535 ;;
 22536                           
 22537                           	psect	text79
 22538  01AC9E                     __ptext79:
 22539                           	opt callstack 0
 22540  01AC9E                     _strlen:
 22541                           	opt callstack 0
 22542                           
 22543                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22544  01AC9E  52E6               	movf	postinc1,f,c
 22545  01ACA0  52E6               	movf	postinc1,f,c
 22546                           
 22547                           ;stkvar	_s @ sp[(-2)+-2]
 22548                           
 22549                           ;incstack = 0
 22550 ;; hardware stack exceeded
 22551  01ACA2  0EFC               	movlw	-4
 22552  01ACA4  006F FF8C  F00B    	movff	plusw1,btemp+10
 22553  01ACAA  0EFD               	movlw	-3
 22554  01ACAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22555                           
 22556                           ;stkvar	_a @ sp[(-2)+0]
 22557  01ACB2  0EFF               	movlw	-1
 22558  01ACB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 22559  01ACBA  0EFE               	movlw	-2
 22560  01ACBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22561  01ACC2  D011               	goto	l7873
 22562  01ACC4                     l7871:
 22563                           
 22564                           ;stkvar	_s @ sp[(-2)+-2]
 22565  01ACC4  0EFC               	movlw	-4
 22566  01ACC6  50E3               	movf	plusw1,w,c
 22567  01ACC8  0F01               	addlw	1
 22568  01ACCA  6E01               	movwf	btemp^0,c
 22569  01ACCC  0EFC               	movlw	-4
 22570  01ACCE  0060  F007  FFE3   	movff	btemp,plusw1
 22571  01ACD4  6A01               	clrf	btemp^0,c
 22572  01ACD6  0EFD               	movlw	-3
 22573  01ACD8  50E3               	movf	plusw1,w,c
 22574  01ACDA  2001               	addwfc	btemp^0,w,c
 22575  01ACDC  6E01               	movwf	btemp^0,c
 22576  01ACDE  0EFD               	movlw	-3
 22577  01ACE0  0060  F007  FFE3   	movff	btemp,plusw1
 22578  01ACE6                     l7873:
 22579                           
 22580                           ;stkvar	_s @ sp[(-2)+-2]
 22581  01ACE6  0EFC               	movlw	-4
 22582  01ACE8  006F FF8F FFF6     	movff	plusw1,tblptrl
 22583  01ACEE  0EFD               	movlw	-3
 22584  01ACF0  006F FF8F FFF7     	movff	plusw1,tblptrh
 22585  01ACF6  0E00               	movlw	low (__mediumconst shr (0+16))
 22586  01ACF8  6EF8               	movwf	tblptru,c
 22587  01ACFA  0E1F               	movlw	(high __ramtop+-1)
 22588  01ACFC  64F7               	cpfsgt	tblptrh,c
 22589  01ACFE  D003               	bra	u5477
 22590  01AD00  0008               	tblrd		*
 22591  01AD02  50F5               	movf	tablat,w,c
 22592  01AD04  D007               	bra	u5470
 22593  01AD06                     u5477:
 22594  01AD06  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22595  01AD0C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22596  01AD12  50EF               	movf	indf0,w,c
 22597  01AD14                     u5470:
 22598  01AD14  0900               	iorlw	0
 22599  01AD16  A4D8               	btfss	status,2,c
 22600  01AD18  D7D5               	goto	l7871
 22601                           
 22602                           ;stkvar	_a @ sp[(-2)+0]
 22603                           ;stkvar	_s @ sp[(-2)+-2]
 22604  01AD1A  0EFC               	movlw	-4
 22605  01AD1C  006F FF8C  F001    	movff	plusw1,btemp
 22606  01AD22  0EFD               	movlw	-3
 22607  01AD24  006F FF8C  F002    	movff	plusw1,btemp+1
 22608  01AD2A  0EFE               	movlw	-2
 22609  01AD2C  50E3               	movf	plusw1,w,c
 22610  01AD2E  5E01               	subwf	btemp^0,f,c
 22611  01AD30  0EFF               	movlw	-1
 22612  01AD32  50E3               	movf	plusw1,w,c
 22613  01AD34  5A02               	subwfb	(btemp+1)^0,f,c
 22614                           
 22615                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 22616  01AD36  52E5               	movf	postdec1,f,c
 22617  01AD38  52E5               	movf	postdec1,f,c
 22618  01AD3A  52E5               	movf	postdec1,f,c
 22619  01AD3C  52E5               	movf	postdec1,f,c
 22620  01AD3E  0012               	return		;funcret
 22621  01AD40                     __end_of_strlen:
 22622                           	opt callstack 0
 22623                           
 22624 ;; *************** function _fputs *****************
 22625 ;; Defined at:
 22626 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 22627 ;; Parameters:    Size  Location     Type
 22628 ;;  s               2  [STACK] PTR const unsigned char 
 22629 ;;		 -> dbuf(80), 
 22630 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22631 ;;		 -> f(6), NULL(0), 
 22632 ;; Auto vars:     Size  Location     Type
 22633 ;;  i               2  [STACK] int 
 22634 ;;  c               1  [STACK] unsigned char 
 22635 ;; Return value:  Size  Location     Type
 22636 ;;                  2  [STACK] int 
 22637 ;; Registers used:
 22638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22639 ;; Tracked objects:
 22640 ;;		On entry : 0/2
 22641 ;;		On exit  : 0/0
 22642 ;;		Unchanged: 0/0
 22643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22648 ;;Total ram usage:        0 bytes
 22649 ;; Hardware stack levels used:    1
 22650 ;; Hardware stack levels required when called:   18
 22651 ;; This function calls:
 22652 ;;		_fputc
 22653 ;; This function is called by:
 22654 ;;		_pad
 22655 ;; This function uses a reentrant model
 22656 ;;
 22657                           
 22658                           	psect	text80
 22659  01AD40                     __ptext80:
 22660                           	opt callstack 0
 22661  01AD40                     _fputs:
 22662                           	opt callstack 0
 22663                           
 22664                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22665  01AD40  52E6               	movf	postinc1,f,c
 22666  01AD42  52E6               	movf	postinc1,f,c
 22667  01AD44  52E6               	movf	postinc1,f,c
 22668                           
 22669                           ;stkvar	_i @ sp[(-3)+0]
 22670                           
 22671                           ;incstack = 0
 22672 ;; hardware stack exceeded
 22673  01AD46  0EFD               	movlw	-3
 22674  01AD48  6AE3               	clrf	plusw1,c
 22675  01AD4A  0EFE               	movlw	-2
 22676  01AD4C  6AE3               	clrf	plusw1,c
 22677  01AD4E  D01F               	goto	l12111
 22678  01AD50                     l12107:
 22679                           
 22680                           ;stkvar	_fp @ sp[(-3)+-4]
 22681  01AD50  0EF9               	movlw	-7
 22682  01AD52  006F FF8F FFE6     	movff	plusw1,postinc1
 22683  01AD58  006F FF8F FFE6     	movff	plusw1,postinc1
 22684                           
 22685                           ;stkvar	_c @ sp[(-5)+2]
 22686  01AD5E  0EFD               	movlw	-3
 22687  01AD60  50E3               	movf	plusw1,w,c
 22688  01AD62  6EE6               	movwf	postinc1,c
 22689  01AD64  0E00               	movlw	0
 22690  01AD66  6EE6               	movwf	postinc1,c
 22691  01AD68  ECE6  F0CC         	call	_fputc	;wreg free
 22692                           
 22693                           ;stkvar	_i @ sp[(-3)+0]
 22694  01AD6C  0EFD               	movlw	-3
 22695  01AD6E  50E3               	movf	plusw1,w,c
 22696  01AD70  0F01               	addlw	1
 22697  01AD72  6E01               	movwf	btemp^0,c
 22698  01AD74  0EFD               	movlw	-3
 22699  01AD76  0060  F007  FFE3   	movff	btemp,plusw1
 22700  01AD7C  6A01               	clrf	btemp^0,c
 22701  01AD7E  0EFE               	movlw	-2
 22702  01AD80  50E3               	movf	plusw1,w,c
 22703  01AD82  2001               	addwfc	btemp^0,w,c
 22704  01AD84  6E01               	movwf	btemp^0,c
 22705  01AD86  0EFE               	movlw	-2
 22706  01AD88  0060  F007  FFE3   	movff	btemp,plusw1
 22707  01AD8E                     l12111:
 22708                           
 22709                           ;stkvar	_i @ sp[(-3)+0]
 22710  01AD8E  0EFD               	movlw	-3
 22711  01AD90  006F FF8C  F00B    	movff	plusw1,btemp+10
 22712  01AD96  0EFE               	movlw	-2
 22713  01AD98  006F FF8C  F00C    	movff	plusw1,btemp+11
 22714                           
 22715                           ;stkvar	_s @ sp[(-3)+-2]
 22716  01AD9E  0EFB               	movlw	-5
 22717  01ADA0  006F FF8C  F009    	movff	plusw1,btemp+8
 22718  01ADA6  0EFC               	movlw	-4
 22719  01ADA8  006F FF8C  F00A    	movff	plusw1,btemp+9
 22720  01ADAE  500B               	movf	(btemp+10)^0,w,c
 22721  01ADB0  2409               	addwf	(btemp+8)^0,w,c
 22722  01ADB2  6ED9               	movwf	fsr2l,c
 22723  01ADB4  500C               	movf	(btemp+11)^0,w,c
 22724  01ADB6  200A               	addwfc	(btemp+9)^0,w,c
 22725  01ADB8  6EDA               	movwf	fsr2h,c
 22726  01ADBA  50DF               	movf	indf2,w,c
 22727  01ADBC  6E0C               	movwf	(btemp+11)^0,c
 22728                           
 22729                           ;stkvar	_c @ sp[(-3)+2]
 22730  01ADBE  0EFF               	movlw	-1
 22731  01ADC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22732  01ADC6  0EFF               	movlw	-1
 22733  01ADC8  50E3               	movf	plusw1,w,c
 22734  01ADCA  A4D8               	btfss	status,2,c
 22735  01ADCC  D7C1               	goto	l12107
 22736                           
 22737                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22738  01ADCE  0EF9               	movlw	249
 22739  01ADD0  26E1               	addwf	fsr1l,f,c
 22740  01ADD2  0EFF               	movlw	255
 22741  01ADD4  22E2               	addwfc	fsr1h,f,c
 22742  01ADD6  0012               	return		;funcret
 22743  01ADD8                     __end_of_fputs:
 22744                           	opt callstack 0
 22745                           
 22746 ;; *************** function _fputc *****************
 22747 ;; Defined at:
 22748 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 22749 ;; Parameters:    Size  Location     Type
 22750 ;;  c               2  [STACK] int 
 22751 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22752 ;;		 -> f(6), NULL(0), 
 22753 ;; Auto vars:     Size  Location     Type
 22754 ;;		None
 22755 ;; Return value:  Size  Location     Type
 22756 ;;                  2  [STACK] int 
 22757 ;; Registers used:
 22758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22759 ;; Tracked objects:
 22760 ;;		On entry : 0/0
 22761 ;;		On exit  : 0/0
 22762 ;;		Unchanged: 0/0
 22763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22768 ;;Total ram usage:        0 bytes
 22769 ;; Hardware stack levels used:    1
 22770 ;; Hardware stack levels required when called:   17
 22771 ;; This function calls:
 22772 ;;		_putch
 22773 ;; This function is called by:
 22774 ;;		_pad
 22775 ;;		_stoa
 22776 ;;		_vfpfcnvrt
 22777 ;;		_fputs
 22778 ;; This function uses a reentrant model
 22779 ;;
 22780                           
 22781                           	psect	text81
 22782  0199CC                     __ptext81:
 22783                           	opt callstack 0
 22784  0199CC                     _fputc:
 22785                           	opt callstack 0
 22786                           
 22787                           ;stkvar	_fp @ sp[(0)+-4]
 22788                           
 22789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22790                           ;incstack = 0
 22791 ;; hardware stack exceeded
 22792  0199CC  0EFC               	movlw	-4
 22793  0199CE  006F FF8C  F001    	movff	plusw1,btemp
 22794  0199D4  0EFD               	movlw	-3
 22795  0199D6  50E3               	movf	plusw1,w,c
 22796  0199D8  1001               	iorwf	btemp^0,w,c
 22797  0199DA  B4D8               	btfsc	status,2,c
 22798  0199DC  D009               	goto	u10850
 22799                           
 22800                           ;stkvar	_fp @ sp[(0)+-4]
 22801  0199DE  0EFC               	movlw	-4
 22802  0199E0  006F FF8C  F001    	movff	plusw1,btemp
 22803  0199E6  0EFD               	movlw	-3
 22804  0199E8  50E3               	movf	plusw1,w,c
 22805  0199EA  1001               	iorwf	btemp^0,w,c
 22806  0199EC  A4D8               	btfss	status,2,c
 22807  0199EE  D006               	goto	l12095
 22808  0199F0                     u10850:
 22809                           
 22810                           ;stkvar	_c @ sp[(0)+-2]
 22811  0199F0  0EFE               	movlw	-2
 22812  0199F2  50E3               	movf	plusw1,w,c
 22813  0199F4  6EE6               	movwf	postinc1,c
 22814  0199F6  EC0C  F0E2         	call	_putch	;wreg free
 22815  0199FA  D075               	goto	l3267
 22816  0199FC                     l12095:
 22817                           
 22818                           ;stkvar	_fp @ sp[(0)+-4]
 22819  0199FC  0EFC               	movlw	-4
 22820  0199FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22821  019A04  0EFD               	movlw	-3
 22822  019A06  006F FF8C  F00C    	movff	plusw1,btemp+11
 22823  019A0C  0E04               	movlw	4
 22824  019A0E  240B               	addwf	(btemp+10)^0,w,c
 22825  019A10  6ED9               	movwf	fsr2l,c
 22826  019A12  0E00               	movlw	0
 22827  019A14  200C               	addwfc	(btemp+11)^0,w,c
 22828  019A16  6EDA               	movwf	fsr2h,c
 22829  019A18  50DE               	movf	postinc2,w,c
 22830  019A1A  10DE               	iorwf	postinc2,w,c
 22831  019A1C  B4D8               	btfsc	status,2,c
 22832  019A1E  D026               	goto	u10870
 22833                           
 22834                           ;stkvar	_fp @ sp[(0)+-4]
 22835  019A20  0EFC               	movlw	-4
 22836  019A22  006F FF8C  F00B    	movff	plusw1,btemp+10
 22837  019A28  0EFD               	movlw	-3
 22838  019A2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22839  019A30  0E04               	movlw	4
 22840  019A32  240B               	addwf	(btemp+10)^0,w,c
 22841  019A34  6ED9               	movwf	fsr2l,c
 22842  019A36  0E00               	movlw	0
 22843  019A38  200C               	addwfc	(btemp+11)^0,w,c
 22844  019A3A  6EDA               	movwf	fsr2h,c
 22845                           
 22846                           ;stkvar	_fp @ sp[(0)+-4]
 22847  019A3C  0EFC               	movlw	-4
 22848  019A3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22849  019A44  0EFD               	movlw	-3
 22850  019A46  006F FF8C  F00C    	movff	plusw1,btemp+11
 22851  019A4C  0E02               	movlw	2
 22852  019A4E  240B               	addwf	(btemp+10)^0,w,c
 22853  019A50  6EE9               	movwf	fsr0l,c
 22854  019A52  0E00               	movlw	0
 22855  019A54  200C               	addwfc	(btemp+11)^0,w,c
 22856  019A56  6EEA               	movwf	fsr0h,c
 22857  019A58  50DE               	movf	postinc2,w,c
 22858  019A5A  5CEE               	subwf	postinc0,w,c
 22859  019A5C  50EE               	movf	postinc0,w,c
 22860  019A5E  0A80               	xorlw	128
 22861  019A60  6E01               	movwf	btemp^0,c
 22862  019A62  50DE               	movf	postinc2,w,c
 22863  019A64  0A80               	xorlw	128
 22864  019A66  5801               	subwfb	btemp^0,w,c
 22865  019A68  B0D8               	btfsc	status,0,c
 22866  019A6A  D03D               	goto	l3267
 22867  019A6C                     u10870:
 22868                           
 22869                           ;stkvar	_c @ sp[(0)+-2]
 22870                           ;stkvar	_fp @ sp[(0)+-4]
 22871  019A6C  0EFC               	movlw	-4
 22872  019A6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22873  019A74  0EFD               	movlw	-3
 22874  019A76  006F FF8C  F00C    	movff	plusw1,btemp+11
 22875  019A7C  0E02               	movlw	2
 22876  019A7E  240B               	addwf	(btemp+10)^0,w,c
 22877  019A80  6ED9               	movwf	fsr2l,c
 22878  019A82  0E00               	movlw	0
 22879  019A84  200C               	addwfc	(btemp+11)^0,w,c
 22880  019A86  6EDA               	movwf	fsr2h,c
 22881  019A88  006F FF78  F00B    	movff	postinc2,btemp+10
 22882  019A8E  006F FF74  F00C    	movff	postdec2,btemp+11
 22883                           
 22884                           ;stkvar	_fp @ sp[(0)+-4]
 22885  019A94  0EFC               	movlw	-4
 22886  019A96  006F FF8F FFD9     	movff	plusw1,fsr2l
 22887  019A9C  0EFD               	movlw	-3
 22888  019A9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 22889  019AA4  006F FF78  F009    	movff	postinc2,btemp+8
 22890  019AAA  006F FF74  F00A    	movff	postdec2,btemp+9
 22891  019AB0  500B               	movf	(btemp+10)^0,w,c
 22892  019AB2  2409               	addwf	(btemp+8)^0,w,c
 22893  019AB4  6ED9               	movwf	fsr2l,c
 22894  019AB6  500C               	movf	(btemp+11)^0,w,c
 22895  019AB8  200A               	addwfc	(btemp+9)^0,w,c
 22896  019ABA  6EDA               	movwf	fsr2h,c
 22897  019ABC  0EFE               	movlw	-2
 22898  019ABE  006F FF8F FFDF     	movff	plusw1,indf2
 22899                           
 22900                           ;stkvar	_fp @ sp[(0)+-4]
 22901  019AC4  0EFC               	movlw	-4
 22902  019AC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22903  019ACC  0EFD               	movlw	-3
 22904  019ACE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22905  019AD4  0E02               	movlw	2
 22906  019AD6  240B               	addwf	(btemp+10)^0,w,c
 22907  019AD8  6ED9               	movwf	fsr2l,c
 22908  019ADA  0E00               	movlw	0
 22909  019ADC  200C               	addwfc	(btemp+11)^0,w,c
 22910  019ADE  6EDA               	movwf	fsr2h,c
 22911  019AE0  2ADE               	incf	postinc2,f,c
 22912  019AE2  0E00               	movlw	0
 22913  019AE4  22DD               	addwfc	postdec2,f,c
 22914  019AE6                     l3267:
 22915                           
 22916                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22917  019AE6  52E5               	movf	postdec1,f,c
 22918  019AE8  52E5               	movf	postdec1,f,c
 22919  019AEA  52E5               	movf	postdec1,f,c
 22920  019AEC  52E5               	movf	postdec1,f,c
 22921  019AEE  0012               	return		;funcret
 22922  019AF0                     __end_of_fputc:
 22923                           	opt callstack 0
 22924                           
 22925 ;; *************** function _putch *****************
 22926 ;; Defined at:
 22927 ;;		line 421 in file "eadog.c"
 22928 ;; Parameters:    Size  Location     Type
 22929 ;;  c               1  [STACK] unsigned char 
 22930 ;; Auto vars:     Size  Location     Type
 22931 ;;		None
 22932 ;; Return value:  Size  Location     Type
 22933 ;;                  1  [STACK] void 
 22934 ;; Registers used:
 22935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22936 ;; Tracked objects:
 22937 ;;		On entry : 0/0
 22938 ;;		On exit  : 0/0
 22939 ;;		Unchanged: 0/0
 22940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22945 ;;Total ram usage:        0 bytes
 22946 ;; Hardware stack levels used:    1
 22947 ;; Hardware stack levels required when called:   16
 22948 ;; This function calls:
 22949 ;;		_ringBufS_put_dma
 22950 ;; This function is called by:
 22951 ;;		_fputc
 22952 ;; This function uses a reentrant model
 22953 ;;
 22954                           
 22955                           	psect	text82
 22956  01C418                     __ptext82:
 22957                           	opt callstack 0
 22958  01C418                     _putch:
 22959                           	opt callstack 0
 22960                           
 22961                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22962                           ;stkvar	_c @ sp[(0)+-1]
 22963                           
 22964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22965                           ;incstack = 0
 22966 ;; hardware stack exceeded
 22967  01C418  0EFF               	movlw	-1
 22968  01C41A  50E3               	movf	plusw1,w,c
 22969  01C41C  6EE6               	movwf	postinc1,c
 22970  01C41E  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 22971  01C424  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 22972  01C42A  EC53  F0D5         	call	_ringBufS_put_dma	;wreg free
 22973                           
 22974                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22975  01C42E  52E5               	movf	postdec1,f,c
 22976  01C430  0012               	return		;funcret
 22977  01C432                     __end_of_putch:
 22978                           	opt callstack 0
 22979                           
 22980 ;; *************** function _ringBufS_put_dma *****************
 22981 ;; Defined at:
 22982 ;;		line 67 in file "ringbufs.c"
 22983 ;; Parameters:    Size  Location     Type
 22984 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22985 ;;		 -> ring_buf1(67), 
 22986 ;;  c               1  [STACK] const unsigned char 
 22987 ;; Auto vars:     Size  Location     Type
 22988 ;;		None
 22989 ;; Return value:  Size  Location     Type
 22990 ;;                  1  [STACK] void 
 22991 ;; Registers used:
 22992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22993 ;; Tracked objects:
 22994 ;;		On entry : 0/0
 22995 ;;		On exit  : 0/0
 22996 ;;		Unchanged: 0/0
 22997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23002 ;;Total ram usage:        0 bytes
 23003 ;; Hardware stack levels used:    1
 23004 ;; Hardware stack levels required when called:   15
 23005 ;; This function calls:
 23006 ;;		Nothing
 23007 ;; This function is called by:
 23008 ;;		_putch
 23009 ;; This function uses a reentrant model
 23010 ;;
 23011                           
 23012                           	psect	text83
 23013  01AAA6                     __ptext83:
 23014                           	opt callstack 0
 23015  01AAA6                     _ringBufS_put_dma:
 23016                           	opt callstack 0
 23017                           
 23018                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 23019                           ;stkvar	__this @ sp[(0)+-2]
 23020                           
 23021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23022                           ;incstack = 0
 23023 ;; hardware stack exceeded
 23024  01AAA6  0EFE               	movlw	-2
 23025  01AAA8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23026  01AAAE  0EFF               	movlw	-1
 23027  01AAB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23028  01AAB6  0E42               	movlw	66
 23029  01AAB8  240B               	addwf	(btemp+10)^0,w,c
 23030  01AABA  6ED9               	movwf	fsr2l,c
 23031  01AABC  0E00               	movlw	0
 23032  01AABE  200C               	addwfc	(btemp+11)^0,w,c
 23033  01AAC0  6EDA               	movwf	fsr2h,c
 23034  01AAC2  0E40               	movlw	64
 23035  01AAC4  60DF               	cpfslt	indf2,c
 23036  01AAC6  D040               	goto	l1597
 23037                           
 23038                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 23039                           ;stkvar	_c @ sp[(0)+-3]
 23040                           ;stkvar	__this @ sp[(0)+-2]
 23041  01AAC8  0EFE               	movlw	-2
 23042  01AACA  006F FF8C  F00B    	movff	plusw1,btemp+10
 23043  01AAD0  0EFF               	movlw	-1
 23044  01AAD2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23045  01AAD8  0E40               	movlw	64
 23046  01AADA  240B               	addwf	(btemp+10)^0,w,c
 23047  01AADC  6ED9               	movwf	fsr2l,c
 23048  01AADE  0E00               	movlw	0
 23049  01AAE0  200C               	addwfc	(btemp+11)^0,w,c
 23050  01AAE2  6EDA               	movwf	fsr2h,c
 23051  01AAE4  50DF               	movf	indf2,w,c
 23052  01AAE6  6E0C               	movwf	(btemp+11)^0,c
 23053                           
 23054                           ;stkvar	__this @ sp[(0)+-2]
 23055  01AAE8  0EFE               	movlw	-2
 23056  01AAEA  006F FF8C  F009    	movff	plusw1,btemp+8
 23057  01AAF0  0EFF               	movlw	-1
 23058  01AAF2  006F FF8C  F00A    	movff	plusw1,btemp+9
 23059  01AAF8  500C               	movf	(btemp+11)^0,w,c
 23060  01AAFA  2409               	addwf	(btemp+8)^0,w,c
 23061  01AAFC  6ED9               	movwf	fsr2l,c
 23062  01AAFE  0E00               	movlw	0
 23063  01AB00  200A               	addwfc	(btemp+9)^0,w,c
 23064  01AB02  6EDA               	movwf	fsr2h,c
 23065  01AB04  0EFD               	movlw	-3
 23066  01AB06  006F FF8F FFDF     	movff	plusw1,indf2
 23067                           
 23068                           ;ringbufs.c: 71:   ++_this->head;
 23069                           ;stkvar	__this @ sp[(0)+-2]
 23070  01AB0C  0EFE               	movlw	-2
 23071  01AB0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23072  01AB14  0EFF               	movlw	-1
 23073  01AB16  006F FF8C  F00C    	movff	plusw1,btemp+11
 23074  01AB1C  0E40               	movlw	64
 23075  01AB1E  240B               	addwf	(btemp+10)^0,w,c
 23076  01AB20  6ED9               	movwf	fsr2l,c
 23077  01AB22  0E00               	movlw	0
 23078  01AB24  200C               	addwfc	(btemp+11)^0,w,c
 23079  01AB26  6EDA               	movwf	fsr2h,c
 23080  01AB28  2ADF               	incf	indf2,f,c
 23081                           
 23082                           ;ringbufs.c: 72:   ++_this->count;
 23083                           ;stkvar	__this @ sp[(0)+-2]
 23084  01AB2A  0EFE               	movlw	-2
 23085  01AB2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23086  01AB32  0EFF               	movlw	-1
 23087  01AB34  006F FF8C  F00C    	movff	plusw1,btemp+11
 23088  01AB3A  0E42               	movlw	66
 23089  01AB3C  240B               	addwf	(btemp+10)^0,w,c
 23090  01AB3E  6ED9               	movwf	fsr2l,c
 23091  01AB40  0E00               	movlw	0
 23092  01AB42  200C               	addwfc	(btemp+11)^0,w,c
 23093  01AB44  6EDA               	movwf	fsr2h,c
 23094  01AB46  2ADF               	incf	indf2,f,c
 23095  01AB48                     l1597:
 23096                           
 23097                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 23098  01AB48  52E5               	movf	postdec1,f,c
 23099  01AB4A  52E5               	movf	postdec1,f,c
 23100  01AB4C  52E5               	movf	postdec1,f,c
 23101  01AB4E  0012               	return		;funcret
 23102  01AB50                     __end_of_ringBufS_put_dma:
 23103                           	opt callstack 0
 23104                           
 23105 ;; *************** function _atoi *****************
 23106 ;; Defined at:
 23107 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 23108 ;; Parameters:    Size  Location     Type
 23109 ;;  s               2  [STACK] PTR const unsigned char 
 23110 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 23111 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 23112 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 23113 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 23114 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 23115 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 23116 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 23117 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 23118 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 23119 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 23120 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 23121 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 23122 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 23123 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 23124 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 23125 ;; Auto vars:     Size  Location     Type
 23126 ;;  n               2  [STACK] int 
 23127 ;;  neg             2  [STACK] int 
 23128 ;; Return value:  Size  Location     Type
 23129 ;;                  2  [STACK] int 
 23130 ;; Registers used:
 23131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 23132 ;; Tracked objects:
 23133 ;;		On entry : 0/0
 23134 ;;		On exit  : 0/0
 23135 ;;		Unchanged: 0/0
 23136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23141 ;;Total ram usage:        0 bytes
 23142 ;; Hardware stack levels used:    1
 23143 ;; Hardware stack levels required when called:   16
 23144 ;; This function calls:
 23145 ;;		_isdigit
 23146 ;;		_isspace
 23147 ;; This function is called by:
 23148 ;;		_vfpfcnvrt
 23149 ;; This function uses a reentrant model
 23150 ;;
 23151                           
 23152                           	psect	text84
 23153  01799E                     __ptext84:
 23154                           	opt callstack 0
 23155  01799E                     _atoi:
 23156                           	opt callstack 0
 23157                           
 23158                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23159  01799E  0E09               	movlw	9
 23160  0179A0  26E1               	addwf	fsr1l,f,c
 23161  0179A2  0E00               	movlw	0
 23162  0179A4  22E2               	addwfc	fsr1h,f,c
 23163                           
 23164                           ;stkvar	_n @ sp[(-9)+5]
 23165                           
 23166                           ;incstack = 0
 23167 ;; hardware stack exceeded
 23168  0179A6  0EFC               	movlw	-4
 23169  0179A8  6AE3               	clrf	plusw1,c
 23170  0179AA  0EFD               	movlw	-3
 23171  0179AC  6AE3               	clrf	plusw1,c
 23172                           
 23173                           ;stkvar	_neg @ sp[(-9)+7]
 23174  0179AE  0EFE               	movlw	-2
 23175  0179B0  6AE3               	clrf	plusw1,c
 23176  0179B2  0EFF               	movlw	-1
 23177  0179B4  6AE3               	clrf	plusw1,c
 23178  0179B6  D011               	goto	l9497
 23179  0179B8                     l9495:
 23180                           
 23181                           ;stkvar	_s @ sp[(-9)+-2]
 23182  0179B8  0EF5               	movlw	-11
 23183  0179BA  50E3               	movf	plusw1,w,c
 23184  0179BC  0F01               	addlw	1
 23185  0179BE  6E01               	movwf	btemp^0,c
 23186  0179C0  0EF5               	movlw	-11
 23187  0179C2  0060  F007  FFE3   	movff	btemp,plusw1
 23188  0179C8  6A01               	clrf	btemp^0,c
 23189  0179CA  0EF6               	movlw	-10
 23190  0179CC  50E3               	movf	plusw1,w,c
 23191  0179CE  2001               	addwfc	btemp^0,w,c
 23192  0179D0  6E01               	movwf	btemp^0,c
 23193  0179D2  0EF6               	movlw	-10
 23194  0179D4  0060  F007  FFE3   	movff	btemp,plusw1
 23195  0179DA                     l9497:
 23196                           
 23197                           ;stkvar	_atoi$6314 @ sp[(-9)+4]
 23198  0179DA  0EFB               	movlw	-5
 23199  0179DC  6AE3               	clrf	plusw1,c
 23200  0179DE  2AE3               	incf	plusw1,f,c
 23201                           
 23202                           ;stkvar	_s @ sp[(-9)+-2]
 23203  0179E0  50E1               	movf	fsr1l,w,c
 23204  0179E2  0FF5               	addlw	-11
 23205  0179E4  6ED9               	movwf	fsr2l,c
 23206  0179E6  50E2               	movf	fsr1h,w,c
 23207  0179E8  6EDA               	movwf	fsr2h,c
 23208  0179EA  0EFF               	movlw	255
 23209  0179EC  22DA               	addwfc	fsr2h,f,c
 23210  0179EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 23211  0179F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 23212  0179FA                     	if	0	;tblptru may be non-zero
 23213  0179FA                     	endif
 23214  0179FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23215  0179FA  0E00               	movlw	low (__mediumconst shr (0+16))
 23216  0179FC  6EF8               	movwf	tblptru,c
 23217  0179FE                     	endif
 23218  0179FE  0008               	tblrd		*
 23219  017A00  50F5               	movf	tablat,w,c
 23220  017A02  0A20               	xorlw	32
 23221  017A04  B4D8               	btfsc	status,2,c
 23222  017A06  D023               	goto	l9505
 23223  017A08  0EF7               	movlw	247
 23224  017A0A  6E0B               	movwf	(btemp+10)^0,c
 23225  017A0C  0EFF               	movlw	255
 23226  017A0E  6E0C               	movwf	(btemp+11)^0,c
 23227                           
 23228                           ;stkvar	_s @ sp[(-9)+-2]
 23229  017A10  50E1               	movf	fsr1l,w,c
 23230  017A12  0FF5               	addlw	-11
 23231  017A14  6ED9               	movwf	fsr2l,c
 23232  017A16  50E2               	movf	fsr1h,w,c
 23233  017A18  6EDA               	movwf	fsr2h,c
 23234  017A1A  0EFF               	movlw	255
 23235  017A1C  22DA               	addwfc	fsr2h,f,c
 23236  017A1E  006F FF7B FFF6     	movff	postinc2,tblptrl
 23237  017A24  006F FF77 FFF7     	movff	postdec2,tblptrh
 23238  017A2A                     	if	0	;tblptru may be non-zero
 23239  017A2A                     	endif
 23240  017A2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23241  017A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 23242  017A2C  6EF8               	movwf	tblptru,c
 23243  017A2E                     	endif
 23244  017A2E  0008               	tblrd		*
 23245  017A30  50F5               	movf	tablat,w,c
 23246  017A32  6E09               	movwf	(btemp+8)^0,c
 23247  017A34  6A0A               	clrf	(btemp+9)^0,c
 23248  017A36  500B               	movf	(btemp+10)^0,w,c
 23249  017A38  2609               	addwf	(btemp+8)^0,f,c
 23250  017A3A  500C               	movf	(btemp+11)^0,w,c
 23251  017A3C  220A               	addwfc	(btemp+9)^0,f,c
 23252  017A3E  500A               	movf	(btemp+9)^0,w,c
 23253  017A40  E104               	bnz	u8590
 23254  017A42  0E05               	movlw	5
 23255  017A44  5C09               	subwf	(btemp+8)^0,w,c
 23256  017A46  A0D8               	btfss	status,0,c
 23257  017A48  D002               	goto	l9505
 23258  017A4A                     u8590:
 23259                           
 23260                           ;stkvar	_atoi$6314 @ sp[(-9)+4]
 23261  017A4A  0EFB               	movlw	-5
 23262  017A4C  6AE3               	clrf	plusw1,c
 23263  017A4E                     l9505:
 23264                           
 23265                           ;stkvar	_atoi$6314 @ sp[(-9)+4]
 23266  017A4E  0EFB               	movlw	-5
 23267  017A50  50E3               	movf	plusw1,w,c
 23268  017A52  6E0B               	movwf	(btemp+10)^0,c
 23269  017A54  6A0C               	clrf	(btemp+11)^0,c
 23270                           
 23271                           ;stkvar	_atoi$6313 @ sp[(-9)+2]
 23272  017A56  0EF9               	movlw	-7
 23273  017A58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23274  017A5E  0EFA               	movlw	-6
 23275  017A60  0060  F033  FFE3   	movff	btemp+11,plusw1
 23276                           
 23277                           ;stkvar	_atoi$6313 @ sp[(-9)+2]
 23278  017A66  0EF9               	movlw	-7
 23279  017A68  006F FF8C  F001    	movff	plusw1,btemp
 23280  017A6E  0EFA               	movlw	-6
 23281  017A70  50E3               	movf	plusw1,w,c
 23282  017A72  1001               	iorwf	btemp^0,w,c
 23283  017A74  B4D8               	btfsc	status,2,c
 23284  017A76  D01F               	goto	l9515
 23285  017A78  D79F               	goto	l9495
 23286  017A7A                     l9511:
 23287  017A7A  0E01               	movlw	1
 23288  017A7C  6E0B               	movwf	(btemp+10)^0,c
 23289  017A7E  0E00               	movlw	0
 23290  017A80  6E0C               	movwf	(btemp+11)^0,c
 23291                           
 23292                           ;stkvar	_neg @ sp[(-9)+7]
 23293  017A82  0EFE               	movlw	-2
 23294  017A84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23295  017A8A  0EFF               	movlw	-1
 23296  017A8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23297  017A92                     l9513:
 23298                           
 23299                           ;stkvar	_s @ sp[(-9)+-2]
 23300  017A92  0EF5               	movlw	-11
 23301  017A94  50E3               	movf	plusw1,w,c
 23302  017A96  0F01               	addlw	1
 23303  017A98  6E01               	movwf	btemp^0,c
 23304  017A9A  0EF5               	movlw	-11
 23305  017A9C  0060  F007  FFE3   	movff	btemp,plusw1
 23306  017AA2  6A01               	clrf	btemp^0,c
 23307  017AA4  0EF6               	movlw	-10
 23308  017AA6  50E3               	movf	plusw1,w,c
 23309  017AA8  2001               	addwfc	btemp^0,w,c
 23310  017AAA  6E01               	movwf	btemp^0,c
 23311  017AAC  0EF6               	movlw	-10
 23312  017AAE  0060  F007  FFE3   	movff	btemp,plusw1
 23313  017AB4  D053               	goto	l9521
 23314  017AB6                     l9515:
 23315                           
 23316                           ;stkvar	_s @ sp[(-9)+-2]
 23317  017AB6  50E1               	movf	fsr1l,w,c
 23318  017AB8  0FF5               	addlw	-11
 23319  017ABA  6ED9               	movwf	fsr2l,c
 23320  017ABC  50E2               	movf	fsr1h,w,c
 23321  017ABE  6EDA               	movwf	fsr2h,c
 23322  017AC0  0EFF               	movlw	255
 23323  017AC2  22DA               	addwfc	fsr2h,f,c
 23324  017AC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 23325  017ACA  006F FF77 FFF7     	movff	postdec2,tblptrh
 23326  017AD0                     	if	0	;tblptru may be non-zero
 23327  017AD0                     	endif
 23328  017AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23329  017AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 23330  017AD2  6EF8               	movwf	tblptru,c
 23331  017AD4                     	endif
 23332  017AD4  0008               	tblrd		*
 23333  017AD6  50F5               	movf	tablat,w,c
 23334  017AD8  6E0B               	movwf	(btemp+10)^0,c
 23335  017ADA  6A0C               	clrf	(btemp+11)^0,c
 23336                           
 23337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23338                           ; Switch size 1, requested type "simple"
 23339                           ; Number of cases is 1, Range of values is 0 to 0
 23340                           ; switch strategies available:
 23341                           ; Name         Instructions Cycles
 23342                           ; simple_byte            4     3 (average)
 23343                           ;	Chosen strategy is simple_byte
 23344  017ADC  500C               	movf	(btemp+11)^0,w,c
 23345  017ADE  0A00               	xorlw	0	; case 0
 23346  017AE0  A4D8               	btfss	status,2,c
 23347  017AE2  D03C               	goto	l9521
 23348                           
 23349                           ; Switch size 1, requested type "simple"
 23350                           ; Number of cases is 2, Range of values is 43 to 45
 23351                           ; switch strategies available:
 23352                           ; Name         Instructions Cycles
 23353                           ; simple_byte            7     4 (average)
 23354                           ;	Chosen strategy is simple_byte
 23355  017AE4  500B               	movf	(btemp+10)^0,w,c
 23356  017AE6  0A2B               	xorlw	43	; case 43
 23357  017AE8  B4D8               	btfsc	status,2,c
 23358  017AEA  D7D3               	goto	l9513
 23359  017AEC  0A06               	xorlw	6	; case 45
 23360  017AEE  B4D8               	btfsc	status,2,c
 23361  017AF0  D7C4               	goto	l9511
 23362  017AF2  D034               	goto	l9521
 23363  017AF4                     l9517:
 23364                           
 23365                           ;stkvar	_n @ sp[(-9)+5]
 23366  017AF4  0EFC               	movlw	-4
 23367  017AF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23368  017AFC  0EFD               	movlw	-3
 23369  017AFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23370  017B04  0E0A               	movlw	10
 23371  017B06  020B               	mulwf	(btemp+10)^0,c
 23372  017B08  006F FFCC  F009    	movff	prodl,btemp+8
 23373  017B0E  006F FFD0  F00A    	movff	prodh,btemp+9
 23374  017B14  020C               	mulwf	(btemp+11)^0,c
 23375  017B16  50F3               	movf	prodl,w,c
 23376  017B18  260A               	addwf	(btemp+9)^0,f,c
 23377                           
 23378                           ;stkvar	_s @ sp[(-9)+-2]
 23379  017B1A  50E1               	movf	fsr1l,w,c
 23380  017B1C  0FF5               	addlw	-11
 23381  017B1E  6ED9               	movwf	fsr2l,c
 23382  017B20  50E2               	movf	fsr1h,w,c
 23383  017B22  6EDA               	movwf	fsr2h,c
 23384  017B24  0EFF               	movlw	255
 23385  017B26  22DA               	addwfc	fsr2h,f,c
 23386  017B28  006F FF7B FFF6     	movff	postinc2,tblptrl
 23387  017B2E  006F FF77 FFF7     	movff	postdec2,tblptrh
 23388  017B34                     	if	0	;tblptru may be non-zero
 23389  017B34                     	endif
 23390  017B34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23391  017B34  0E00               	movlw	low (__mediumconst shr (0+16))
 23392  017B36  6EF8               	movwf	tblptru,c
 23393  017B38                     	endif
 23394  017B38  0008               	tblrd		*
 23395  017B3A  50F5               	movf	tablat,w,c
 23396  017B3C  5E09               	subwf	(btemp+8)^0,f,c
 23397  017B3E  0E00               	movlw	0
 23398  017B40  5A0A               	subwfb	(btemp+9)^0,f,c
 23399  017B42  0E30               	movlw	48
 23400  017B44  2609               	addwf	(btemp+8)^0,f,c
 23401  017B46  0E00               	movlw	0
 23402  017B48  220A               	addwfc	(btemp+9)^0,f,c
 23403                           
 23404                           ;stkvar	_n @ sp[(-9)+5]
 23405  017B4A  0EFC               	movlw	-4
 23406  017B4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23407  017B52  0EFD               	movlw	-3
 23408  017B54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23409  017B5A  D79B               	goto	l9513
 23410  017B5C                     l9521:
 23411  017B5C  0ED0               	movlw	208
 23412  017B5E  6E0B               	movwf	(btemp+10)^0,c
 23413  017B60  0EFF               	movlw	255
 23414  017B62  6E0C               	movwf	(btemp+11)^0,c
 23415                           
 23416                           ;stkvar	_s @ sp[(-9)+-2]
 23417  017B64  50E1               	movf	fsr1l,w,c
 23418  017B66  0FF5               	addlw	-11
 23419  017B68  6ED9               	movwf	fsr2l,c
 23420  017B6A  50E2               	movf	fsr1h,w,c
 23421  017B6C  6EDA               	movwf	fsr2h,c
 23422  017B6E  0EFF               	movlw	255
 23423  017B70  22DA               	addwfc	fsr2h,f,c
 23424  017B72  006F FF7B FFF6     	movff	postinc2,tblptrl
 23425  017B78  006F FF77 FFF7     	movff	postdec2,tblptrh
 23426  017B7E                     	if	0	;tblptru may be non-zero
 23427  017B7E                     	endif
 23428  017B7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23429  017B7E  0E00               	movlw	low (__mediumconst shr (0+16))
 23430  017B80  6EF8               	movwf	tblptru,c
 23431  017B82                     	endif
 23432  017B82  0008               	tblrd		*
 23433  017B84  50F5               	movf	tablat,w,c
 23434  017B86  6E09               	movwf	(btemp+8)^0,c
 23435  017B88  6A0A               	clrf	(btemp+9)^0,c
 23436  017B8A  500B               	movf	(btemp+10)^0,w,c
 23437  017B8C  2609               	addwf	(btemp+8)^0,f,c
 23438  017B8E  500C               	movf	(btemp+11)^0,w,c
 23439  017B90  220A               	addwfc	(btemp+9)^0,f,c
 23440  017B92  500A               	movf	(btemp+9)^0,w,c
 23441  017B94  E106               	bnz	u8610
 23442  017B96  0E0A               	movlw	10
 23443  017B98  5C09               	subwf	(btemp+8)^0,w,c
 23444  017B9A  B0D8               	btfsc	status,0,c
 23445  017B9C  D002               	goto	u8610
 23446  017B9E  0E01               	movlw	1
 23447  017BA0  D001               	goto	u8620
 23448  017BA2                     u8610:
 23449  017BA2  0E00               	movlw	0
 23450  017BA4                     u8620:
 23451  017BA4  6E0B               	movwf	(btemp+10)^0,c
 23452  017BA6  6A0C               	clrf	(btemp+11)^0,c
 23453                           
 23454                           ;stkvar	_atoi$6315 @ sp[(-9)+0]
 23455  017BA8  0EF7               	movlw	-9
 23456  017BAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23457  017BB0  0EF8               	movlw	-8
 23458  017BB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 23459                           
 23460                           ;stkvar	_atoi$6315 @ sp[(-9)+0]
 23461  017BB8  0EF7               	movlw	-9
 23462  017BBA  006F FF8C  F001    	movff	plusw1,btemp
 23463  017BC0  0EF8               	movlw	-8
 23464  017BC2  50E3               	movf	plusw1,w,c
 23465  017BC4  1001               	iorwf	btemp^0,w,c
 23466  017BC6  A4D8               	btfss	status,2,c
 23467  017BC8  D795               	goto	l9517
 23468                           
 23469                           ;stkvar	_neg @ sp[(-9)+7]
 23470  017BCA  0EFE               	movlw	-2
 23471  017BCC  006F FF8C  F001    	movff	plusw1,btemp
 23472  017BD2  0EFF               	movlw	-1
 23473  017BD4  50E3               	movf	plusw1,w,c
 23474  017BD6  1001               	iorwf	btemp^0,w,c
 23475  017BD8  A4D8               	btfss	status,2,c
 23476  017BDA  D00E               	goto	l9531
 23477                           
 23478                           ;stkvar	_n @ sp[(-9)+5]
 23479  017BDC  0EFC               	movlw	-4
 23480  017BDE  006F FF8C  F001    	movff	plusw1,btemp
 23481  017BE4  1E01               	comf	btemp^0,f,c
 23482  017BE6  0EFD               	movlw	-3
 23483  017BE8  006F FF8C  F002    	movff	plusw1,btemp+1
 23484  017BEE  1E02               	comf	(btemp+1)^0,f,c
 23485  017BF0  2A01               	incf	btemp^0,f,c
 23486  017BF2  B4D8               	btfsc	status,2,c
 23487  017BF4  2A02               	incf	(btemp+1)^0,f,c
 23488  017BF6  D008               	goto	l3198
 23489  017BF8                     l9531:
 23490                           
 23491                           ;stkvar	_n @ sp[(-9)+5]
 23492  017BF8  0EFC               	movlw	-4
 23493  017BFA  006F FF8C  F001    	movff	plusw1,btemp
 23494  017C00  0EFD               	movlw	-3
 23495  017C02  006F FF8C  F002    	movff	plusw1,btemp+1
 23496  017C08                     l3198:
 23497                           
 23498                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23499  017C08  0EF5               	movlw	245
 23500  017C0A  26E1               	addwf	fsr1l,f,c
 23501  017C0C  0EFF               	movlw	255
 23502  017C0E  22E2               	addwfc	fsr1h,f,c
 23503  017C10  0012               	return		;funcret
 23504  017C12                     __end_of_atoi:
 23505                           	opt callstack 0
 23506                           
 23507 ;; *************** function _isspace *****************
 23508 ;; Defined at:
 23509 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 23510 ;; Parameters:    Size  Location     Type
 23511 ;;  c               2  [STACK] int 
 23512 ;; Auto vars:     Size  Location     Type
 23513 ;;		None
 23514 ;; Return value:  Size  Location     Type
 23515 ;;                  2  [STACK] int 
 23516 ;; Registers used:
 23517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23518 ;; Tracked objects:
 23519 ;;		On entry : 0/0
 23520 ;;		On exit  : 0/0
 23521 ;;		Unchanged: 0/0
 23522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23527 ;;Total ram usage:        0 bytes
 23528 ;; Hardware stack levels used:    1
 23529 ;; Hardware stack levels required when called:   15
 23530 ;; This function calls:
 23531 ;;		Nothing
 23532 ;; This function is called by:
 23533 ;;		_atoi
 23534 ;; This function uses a reentrant model
 23535 ;;
 23536                           
 23537                           	psect	text85
 23538  01B6AA                     __ptext85:
 23539                           	opt callstack 0
 23540  01B6AA                     _isspace:
 23541                           	opt callstack 0
 23542                           
 23543                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23544  01B6AA  52E6               	movf	postinc1,f,c
 23545                           
 23546                           ;stkvar	_isspace$6364 @ sp[(-1)+0]
 23547                           
 23548                           ;incstack = 0
 23549 ;; hardware stack exceeded
 23550  01B6AC  0EFF               	movlw	-1
 23551  01B6AE  6AE3               	clrf	plusw1,c
 23552  01B6B0  2AE3               	incf	plusw1,f,c
 23553                           
 23554                           ;stkvar	_c @ sp[(-1)+-2]
 23555  01B6B2  0EFD               	movlw	-3
 23556  01B6B4  006F FF8C  F001    	movff	plusw1,btemp
 23557  01B6BA  0E20               	movlw	32
 23558  01B6BC  1801               	xorwf	btemp^0,w,c
 23559  01B6BE  E104               	bnz	u7480
 23560  01B6C0  0EFE               	movlw	-2
 23561  01B6C2  50E3               	movf	plusw1,w,c
 23562  01B6C4  B4D8               	btfsc	status,2,c
 23563  01B6C6  D012               	goto	l8915
 23564  01B6C8                     u7480:
 23565                           
 23566                           ;stkvar	_c @ sp[(-1)+-2]
 23567  01B6C8  0EFD               	movlw	-3
 23568  01B6CA  50E3               	movf	plusw1,w,c
 23569  01B6CC  0FF7               	addlw	247
 23570  01B6CE  6E0B               	movwf	(btemp+10)^0,c
 23571  01B6D0  0EFE               	movlw	-2
 23572  01B6D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23573  01B6D8  0EFF               	movlw	255
 23574  01B6DA  220C               	addwfc	(btemp+11)^0,f,c
 23575  01B6DC  500C               	movf	(btemp+11)^0,w,c
 23576  01B6DE  E104               	bnz	u7490
 23577  01B6E0  0E05               	movlw	5
 23578  01B6E2  5C0B               	subwf	(btemp+10)^0,w,c
 23579  01B6E4  A0D8               	btfss	status,0,c
 23580  01B6E6  D002               	goto	l8915
 23581  01B6E8                     u7490:
 23582                           
 23583                           ;stkvar	_isspace$6364 @ sp[(-1)+0]
 23584  01B6E8  0EFF               	movlw	-1
 23585  01B6EA  6AE3               	clrf	plusw1,c
 23586  01B6EC                     l8915:
 23587                           
 23588                           ;stkvar	_isspace$6364 @ sp[(-1)+0]
 23589  01B6EC  0EFF               	movlw	-1
 23590  01B6EE  50E3               	movf	plusw1,w,c
 23591  01B6F0  6E01               	movwf	btemp^0,c
 23592  01B6F2  6A02               	clrf	(btemp+1)^0,c
 23593                           
 23594                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23595  01B6F4  52E5               	movf	postdec1,f,c
 23596  01B6F6  52E5               	movf	postdec1,f,c
 23597  01B6F8  52E5               	movf	postdec1,f,c
 23598  01B6FA  0012               	return		;funcret
 23599  01B6FC                     __end_of_isspace:
 23600                           	opt callstack 0
 23601                           
 23602 ;; *************** function _isdigit *****************
 23603 ;; Defined at:
 23604 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 23605 ;; Parameters:    Size  Location     Type
 23606 ;;  c               2  [STACK] int 
 23607 ;; Auto vars:     Size  Location     Type
 23608 ;;		None
 23609 ;; Return value:  Size  Location     Type
 23610 ;;                  2  [STACK] int 
 23611 ;; Registers used:
 23612 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23613 ;; Tracked objects:
 23614 ;;		On entry : 0/0
 23615 ;;		On exit  : 0/0
 23616 ;;		Unchanged: 0/0
 23617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23622 ;;Total ram usage:        0 bytes
 23623 ;; Hardware stack levels used:    1
 23624 ;; Hardware stack levels required when called:   15
 23625 ;; This function calls:
 23626 ;;		Nothing
 23627 ;; This function is called by:
 23628 ;;		_vfpfcnvrt
 23629 ;;		_atoi
 23630 ;; This function uses a reentrant model
 23631 ;;
 23632                           
 23633                           	psect	text86
 23634  01BE9C                     __ptext86:
 23635                           	opt callstack 0
 23636  01BE9C                     _isdigit:
 23637                           	opt callstack 0
 23638                           
 23639                           ;stkvar	_c @ sp[(0)+-2]
 23640                           
 23641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23642                           ;incstack = 0
 23643 ;; hardware stack exceeded
 23644  01BE9C  0EFE               	movlw	-2
 23645  01BE9E  50E3               	movf	plusw1,w,c
 23646  01BEA0  0FD0               	addlw	208
 23647  01BEA2  6E0B               	movwf	(btemp+10)^0,c
 23648  01BEA4  0EFF               	movlw	-1
 23649  01BEA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23650  01BEAC  0EFF               	movlw	255
 23651  01BEAE  220C               	addwfc	(btemp+11)^0,f,c
 23652  01BEB0  500C               	movf	(btemp+11)^0,w,c
 23653  01BEB2  E106               	bnz	u6330
 23654  01BEB4  0E0A               	movlw	10
 23655  01BEB6  5C0B               	subwf	(btemp+10)^0,w,c
 23656  01BEB8  B0D8               	btfsc	status,0,c
 23657  01BEBA  D002               	goto	u6330
 23658  01BEBC  0E01               	movlw	1
 23659  01BEBE  D001               	goto	u6340
 23660  01BEC0                     u6330:
 23661  01BEC0  0E00               	movlw	0
 23662  01BEC2                     u6340:
 23663  01BEC2  6E01               	movwf	btemp^0,c
 23664  01BEC4  6A02               	clrf	(btemp+1)^0,c
 23665                           
 23666                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23667  01BEC6  52E5               	movf	postdec1,f,c
 23668  01BEC8  52E5               	movf	postdec1,f,c
 23669  01BECA  0012               	return		;funcret
 23670  01BECC                     __end_of_isdigit:
 23671                           	opt callstack 0
 23672                           
 23673 ;; *************** function _set_vterm *****************
 23674 ;; Defined at:
 23675 ;;		line 107 in file "mconfig.c"
 23676 ;; Parameters:    Size  Location     Type
 23677 ;;  vterm           1  [STACK] const unsigned char 
 23678 ;; Auto vars:     Size  Location     Type
 23679 ;;		None
 23680 ;; Return value:  Size  Location     Type
 23681 ;;                  1  [STACK] unsigned char 
 23682 ;; Registers used:
 23683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 23684 ;; Tracked objects:
 23685 ;;		On entry : 0/1
 23686 ;;		On exit  : 0/0
 23687 ;;		Unchanged: 0/0
 23688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23693 ;;Total ram usage:        0 bytes
 23694 ;; Hardware stack levels used:    1
 23695 ;; Hardware stack levels required when called:   15
 23696 ;; This function calls:
 23697 ;;		Nothing
 23698 ;; This function is called by:
 23699 ;;		_main
 23700 ;;		_check_help
 23701 ;; This function uses a reentrant model
 23702 ;;
 23703                           
 23704                           	psect	text87
 23705  01C3BE                     __ptext87:
 23706                           	opt callstack 0
 23707  01C3BE                     _set_vterm:
 23708                           	opt callstack 15
 23709                           
 23710                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 23711                           ;stkvar	_vterm @ sp[(0)+-1]
 23712                           
 23713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23714                           ;incstack = 0
 23715  01C3BE  0EFF               	movlw	-1
 23716  01C3C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23717  01C3C6  0E03               	movlw	3
 23718  01C3C8  160C               	andwf	(btemp+11)^0,f,c
 23719  01C3CA  EE22  F20A         	lfsr	2,_D+480
 23720  01C3CE  50DF               	movf	223,w,c
 23721  01C3D0  180C               	xorwf	(btemp+11)^0,w,c
 23722  01C3D2  0BFE               	andlw	-2
 23723  01C3D4  180C               	xorwf	(btemp+11)^0,w,c
 23724  01C3D6  6EDF               	movwf	223,c
 23725                           
 23726                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23727  01C3D8  52E5               	movf	postdec1,f,c
 23728  01C3DA  0012               	return		;funcret
 23729  01C3DC                     __end_of_set_vterm:
 23730                           	opt callstack 0
 23731                           
 23732 ;; *************** function _set_temp_display_help *****************
 23733 ;; Defined at:
 23734 ;;		line 211 in file "mconfig.c"
 23735 ;; Parameters:    Size  Location     Type
 23736 ;;  new_response    1  [STACK] const enum E16509
 23737 ;; Auto vars:     Size  Location     Type
 23738 ;;		None
 23739 ;; Return value:  Size  Location     Type
 23740 ;;                  1  [STACK] enum E16509
 23741 ;; Registers used:
 23742 ;;		wreg, fsr1l, fsr1h
 23743 ;; Tracked objects:
 23744 ;;		On entry : 0/1
 23745 ;;		On exit  : 3F/1
 23746 ;;		Unchanged: 0/0
 23747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23752 ;;Total ram usage:        0 bytes
 23753 ;; Hardware stack levels used:    1
 23754 ;; Hardware stack levels required when called:   15
 23755 ;; This function calls:
 23756 ;;		Nothing
 23757 ;; This function is called by:
 23758 ;;		_check_help
 23759 ;; This function uses a reentrant model
 23760 ;;
 23761                           
 23762                           	psect	text88
 23763  01C506                     __ptext88:
 23764                           	opt callstack 0
 23765  01C506                     _set_temp_display_help:
 23766                           	opt callstack 14
 23767                           
 23768                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 23769                           
 23770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23771                           ;incstack = 0
 23772  01C506  0101               	movlb	1	; () banked
 23773  01C508  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 23774                           
 23775                           ; BSR set to: 1
 23776                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 23777                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23778  01C50A  0EFF               	movlw	-1
 23779  01C50C  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 23780                           
 23781                           ; BSR set to: 1
 23782                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23783  01C512  52E5               	movf	postdec1,f,c
 23784  01C514  0012               	return		;funcret
 23785  01C516                     __end_of_set_temp_display_help:
 23786                           	opt callstack 0
 23787                           
 23788 ;; *************** function _set_display_info *****************
 23789 ;; Defined at:
 23790 ;;		line 200 in file "mconfig.c"
 23791 ;; Parameters:    Size  Location     Type
 23792 ;;  new_response    1  [STACK] const enum E16509
 23793 ;; Auto vars:     Size  Location     Type
 23794 ;;		None
 23795 ;; Return value:  Size  Location     Type
 23796 ;;                  1  [STACK] enum E16994
 23797 ;; Registers used:
 23798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23799 ;; Tracked objects:
 23800 ;;		On entry : 0/1
 23801 ;;		On exit  : 0/0
 23802 ;;		Unchanged: 0/0
 23803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23808 ;;Total ram usage:        0 bytes
 23809 ;; Hardware stack levels used:    1
 23810 ;; Hardware stack levels required when called:   16
 23811 ;; This function calls:
 23812 ;;		_TimerDone
 23813 ;; This function is called by:
 23814 ;;		_main
 23815 ;;		_check_help
 23816 ;; This function uses a reentrant model
 23817 ;;
 23818                           
 23819                           	psect	text89
 23820  01C3DC                     __ptext89:
 23821                           	opt callstack 0
 23822  01C3DC                     _set_display_info:
 23823                           	opt callstack 14
 23824                           
 23825                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23826                           
 23827                           ; BSR set to: 1
 23828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23829                           ;incstack = 0
 23830  01C3DC  0E07               	movlw	7
 23831  01C3DE  6EE6               	movwf	postinc1,c
 23832  01C3E0  ECE9  F0DF         	call	_TimerDone	;wreg free
 23833  01C3E4  5001               	movf	btemp^0,w,c
 23834  01C3E6  B4D8               	btfsc	status,2,c
 23835  01C3E8  D006               	goto	l1732
 23836                           
 23837                           ;mconfig.c: 205:   old_info = V.response.info;
 23838  01C3EA  0101               	movlb	1	; () banked
 23839  01C3EC  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 23840                           
 23841                           ; BSR set to: 1
 23842                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23843                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23844  01C3EE  0EFF               	movlw	-1
 23845  01C3F0  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 23846  01C3F6                     l1732:
 23847                           
 23848                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23849  01C3F6  52E5               	movf	postdec1,f,c
 23850  01C3F8  0012               	return		;funcret
 23851  01C3FA                     __end_of_set_display_info:
 23852                           	opt callstack 0
 23853                           
 23854 ;; *************** function _mode_lamp_dim *****************
 23855 ;; Defined at:
 23856 ;;		line 13 in file "mconfig.c"
 23857 ;; Parameters:    Size  Location     Type
 23858 ;;  level           2  [STACK] const unsigned short 
 23859 ;; Auto vars:     Size  Location     Type
 23860 ;;		None
 23861 ;; Return value:  Size  Location     Type
 23862 ;;                  1  [STACK] void 
 23863 ;; Registers used:
 23864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23865 ;; Tracked objects:
 23866 ;;		On entry : 0/1
 23867 ;;		On exit  : 0/0
 23868 ;;		Unchanged: 0/0
 23869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23874 ;;Total ram usage:        0 bytes
 23875 ;; Hardware stack levels used:    1
 23876 ;; Hardware stack levels required when called:   16
 23877 ;; This function calls:
 23878 ;;		_PWM8_LoadDutyValue
 23879 ;; This function is called by:
 23880 ;;		_main
 23881 ;;		_check_help
 23882 ;; This function uses a reentrant model
 23883 ;;
 23884                           
 23885                           	psect	text90
 23886  01C44E                     __ptext90:
 23887                           	opt callstack 0
 23888  01C44E                     _mode_lamp_dim:
 23889                           	opt callstack 14
 23890                           
 23891                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23892                           ;stkvar	_level @ sp[(0)+-2]
 23893                           
 23894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23895                           ;incstack = 0
 23896  01C44E  0EFE               	movlw	-2
 23897  01C450  006F FF8F FFE6     	movff	plusw1,postinc1
 23898  01C456  006F FF8F FFE6     	movff	plusw1,postinc1
 23899  01C45C  EC33  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23900                           
 23901                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23902  01C460  52E5               	movf	postdec1,f,c
 23903  01C462  52E5               	movf	postdec1,f,c
 23904  01C464  0012               	return		;funcret
 23905  01C466                     __end_of_mode_lamp_dim:
 23906                           	opt callstack 0
 23907                           
 23908 ;; *************** function _mode_lamp_bright *****************
 23909 ;; Defined at:
 23910 ;;		line 18 in file "mconfig.c"
 23911 ;; Parameters:    Size  Location     Type
 23912 ;;		None
 23913 ;; Auto vars:     Size  Location     Type
 23914 ;;		None
 23915 ;; Return value:  Size  Location     Type
 23916 ;;                  1  [STACK] void 
 23917 ;; Registers used:
 23918 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23919 ;; Tracked objects:
 23920 ;;		On entry : 0/0
 23921 ;;		On exit  : 0/0
 23922 ;;		Unchanged: 0/0
 23923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23928 ;;Total ram usage:        0 bytes
 23929 ;; Hardware stack levels used:    1
 23930 ;; Hardware stack levels required when called:   16
 23931 ;; This function calls:
 23932 ;;		_PWM8_LoadDutyValue
 23933 ;; This function is called by:
 23934 ;;		_check_help
 23935 ;; This function uses a reentrant model
 23936 ;;
 23937                           
 23938                           	psect	text91
 23939  01C534                     __ptext91:
 23940                           	opt callstack 0
 23941  01C534                     _mode_lamp_bright:
 23942                           	opt callstack 13
 23943                           
 23944                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23945                           
 23946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23947                           ;incstack = 0
 23948  01C534  0E2C               	movlw	44
 23949  01C536  6EE6               	movwf	postinc1,c
 23950  01C538  0E01               	movlw	1
 23951  01C53A  6EE6               	movwf	postinc1,c
 23952  01C53C  EC33  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23953                           
 23954                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23955  01C540  0012               	return		;funcret
 23956  01C542                     __end_of_mode_lamp_bright:
 23957                           	opt callstack 0
 23958                           
 23959 ;; *************** function _PWM8_LoadDutyValue *****************
 23960 ;; Defined at:
 23961 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23962 ;; Parameters:    Size  Location     Type
 23963 ;;  dutyValue       2  [STACK] unsigned short 
 23964 ;; Auto vars:     Size  Location     Type
 23965 ;;		None
 23966 ;; Return value:  Size  Location     Type
 23967 ;;                  1  [STACK] void 
 23968 ;; Registers used:
 23969 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23970 ;; Tracked objects:
 23971 ;;		On entry : 0/1
 23972 ;;		On exit  : 0/0
 23973 ;;		Unchanged: 0/0
 23974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;Total ram usage:        0 bytes
 23980 ;; Hardware stack levels used:    1
 23981 ;; Hardware stack levels required when called:   15
 23982 ;; This function calls:
 23983 ;;		Nothing
 23984 ;; This function is called by:
 23985 ;;		_mode_lamp_dim
 23986 ;;		_mode_lamp_bright
 23987 ;; This function uses a reentrant model
 23988 ;;
 23989                           
 23990                           	psect	text92
 23991  01BA66                     __ptext92:
 23992                           	opt callstack 0
 23993  01BA66                     _PWM8_LoadDutyValue:
 23994                           	opt callstack 14
 23995                           
 23996                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 23997                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23998                           
 23999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24000                           ;incstack = 0
 24001  01BA66  0EFE               	movlw	-2
 24002  01BA68  006F FF8C  F00B    	movff	plusw1,btemp+10
 24003  01BA6E  0EFF               	movlw	-1
 24004  01BA70  006F FF8C  F00C    	movff	plusw1,btemp+11
 24005  01BA76  90D8               	bcf	status,0,c
 24006  01BA78  320C               	rrcf	(btemp+11)^0,f,c
 24007  01BA7A  320B               	rrcf	(btemp+10)^0,f,c
 24008  01BA7C  90D8               	bcf	status,0,c
 24009  01BA7E  320C               	rrcf	(btemp+11)^0,f,c
 24010  01BA80  320B               	rrcf	(btemp+10)^0,f,c
 24011  01BA82  500B               	movf	(btemp+10)^0,w,c
 24012  01BA84  6E61               	movwf	97,c	;volatile
 24013                           
 24014                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 24015                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24016  01BA86  0EFE               	movlw	-2
 24017  01BA88  006F FF8C  F00C    	movff	plusw1,btemp+11
 24018  01BA8E  0E03               	movlw	3
 24019  01BA90  160C               	andwf	(btemp+11)^0,f,c
 24020  01BA92  0E06               	movlw	6
 24021  01BA94  6E01               	movwf	btemp^0,c
 24022  01BA96                     u9435:
 24023  01BA96  90D8               	bcf	status,0,c
 24024  01BA98  360C               	rlcf	(btemp+11)^0,f,c
 24025  01BA9A  2E01               	decfsz	btemp^0,f,c
 24026  01BA9C  D7FC               	goto	u9435
 24027  01BA9E  500C               	movf	(btemp+11)^0,w,c
 24028  01BAA0  6E60               	movwf	96,c	;volatile
 24029                           
 24030                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24031  01BAA2  52E5               	movf	postdec1,f,c
 24032  01BAA4  52E5               	movf	postdec1,f,c
 24033  01BAA6  0012               	return		;funcret
 24034  01BAA8                     __end_of_PWM8_LoadDutyValue:
 24035                           	opt callstack 0
 24036                           
 24037 ;; *************** function _help_button *****************
 24038 ;; Defined at:
 24039 ;;		line 26 in file "mconfig.c"
 24040 ;; Parameters:    Size  Location     Type
 24041 ;;		None
 24042 ;; Auto vars:     Size  Location     Type
 24043 ;;		None
 24044 ;; Return value:  Size  Location     Type
 24045 ;;                  1  [STACK] _Bool 
 24046 ;; Registers used:
 24047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24048 ;; Tracked objects:
 24049 ;;		On entry : 0/1
 24050 ;;		On exit  : 0/0
 24051 ;;		Unchanged: 0/0
 24052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24057 ;;Total ram usage:        0 bytes
 24058 ;; Hardware stack levels used:    1
 24059 ;; Hardware stack levels required when called:   16
 24060 ;; This function calls:
 24061 ;;		_StartTimer
 24062 ;;		_TimerDone
 24063 ;; This function is called by:
 24064 ;;		_check_help
 24065 ;; This function uses a reentrant model
 24066 ;;
 24067                           
 24068                           	psect	text93
 24069  01BC60                     __ptext93:
 24070                           	opt callstack 0
 24071  01BC60                     _help_button:
 24072                           	opt callstack 13
 24073                           
 24074                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 24075                           
 24076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24077                           ;incstack = 0
 24078  01BC60  B0CB               	btfsc	203,0,c	;volatile
 24079  01BC62  D00C               	goto	l1675
 24080                           
 24081                           ;mconfig.c: 29:   V.help = 1;
 24082  01BC64  0101               	movlb	1	; () banked
 24083  01BC66  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 24084                           
 24085                           ; BSR set to: 1
 24086                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 24087  01BC68  0E08               	movlw	8
 24088  01BC6A  6EE6               	movwf	postinc1,c
 24089  01BC6C  ECE9  F0DF         	call	_TimerDone	;wreg free
 24090  01BC70  5001               	movf	btemp^0,w,c
 24091  01BC72  B4D8               	btfsc	status,2,c
 24092  01BC74  D003               	goto	l1675
 24093                           
 24094                           ;mconfig.c: 31:    return 1;
 24095  01BC76  0E01               	movlw	1
 24096  01BC78  6E01               	movwf	btemp^0,c
 24097  01BC7A  0012               	return	
 24098  01BC7C                     l1675:
 24099                           
 24100                           ;mconfig.c: 34:  if (!V.help)
 24101  01BC7C  0101               	movlb	1	; () banked
 24102  01BC7E  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 24103  01BC80  D008               	goto	l10643
 24104                           
 24105                           ; BSR set to: 1
 24106                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 24107  01BC82  0E2C               	movlw	44
 24108  01BC84  6EE6               	movwf	postinc1,c
 24109  01BC86  0E01               	movlw	1
 24110  01BC88  6EE6               	movwf	postinc1,c
 24111  01BC8A  0E08               	movlw	8
 24112  01BC8C  6EE6               	movwf	postinc1,c
 24113  01BC8E  EC94  F0DD         	call	_StartTimer	;wreg free
 24114  01BC92                     l10643:
 24115                           
 24116                           ;mconfig.c: 37:  return 0;
 24117  01BC92  0E00               	movlw	0
 24118  01BC94  6E01               	movwf	btemp^0,c
 24119                           
 24120                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 24121  01BC96  0012               	return		;funcret
 24122  01BC98                     __end_of_help_button:
 24123                           	opt callstack 0
 24124                           
 24125 ;; *************** function _TimerDone *****************
 24126 ;; Defined at:
 24127 ;;		line 20 in file "timers.c"
 24128 ;; Parameters:    Size  Location     Type
 24129 ;;  timer           1  [STACK] const unsigned char 
 24130 ;; Auto vars:     Size  Location     Type
 24131 ;;		None
 24132 ;; Return value:  Size  Location     Type
 24133 ;;                  1  [STACK] _Bool 
 24134 ;; Registers used:
 24135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24136 ;; Tracked objects:
 24137 ;;		On entry : 0/1
 24138 ;;		On exit  : 0/0
 24139 ;;		Unchanged: 0/0
 24140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24145 ;;Total ram usage:        0 bytes
 24146 ;; Hardware stack levels used:    1
 24147 ;; Hardware stack levels required when called:   15
 24148 ;; This function calls:
 24149 ;;		Nothing
 24150 ;; This function is called by:
 24151 ;;		_main
 24152 ;;		_WaitMs
 24153 ;;		_help_button
 24154 ;;		_check_help
 24155 ;;		_set_display_info
 24156 ;;		_update_adc_result
 24157 ;;		_esr_check
 24158 ;; This function uses a reentrant model
 24159 ;;
 24160                           
 24161                           	psect	text94
 24162  01BFD2                     __ptext94:
 24163                           	opt callstack 0
 24164  01BFD2                     _TimerDone:
 24165                           	opt callstack 14
 24166                           
 24167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24168                           ;incstack = 0
 24169  01BFD2  0004               	clrwdt		;# 
 24170                           
 24171                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 24172                           ;stkvar	_timer @ sp[(0)+-1]
 24173  01BFD4  0EFF               	movlw	-1
 24174  01BFD6  50E3               	movf	plusw1,w,c
 24175  01BFD8  0D02               	mullw	2
 24176  01BFDA  0E7D               	movlw	low _tickCount
 24177  01BFDC  24F3               	addwf	243,w,c
 24178  01BFDE  6ED9               	movwf	fsr2l,c
 24179  01BFE0  0E02               	movlw	high _tickCount
 24180  01BFE2  20F4               	addwfc	prodh,w,c
 24181  01BFE4  6EDA               	movwf	fsr2h,c
 24182  01BFE6  50DE               	movf	postinc2,w,c
 24183  01BFE8  10DE               	iorwf	postinc2,w,c
 24184  01BFEA  A4D8               	btfss	status,2,c
 24185  01BFEC  D002               	goto	l9929
 24186                           
 24187                           ;timers.c: 24:   return 1;
 24188  01BFEE  0E01               	movlw	1
 24189  01BFF0  D001               	goto	L28
 24190  01BFF2                     l9929:
 24191                           
 24192                           ;timers.c: 26:  return 0;
 24193  01BFF2  0E00               	movlw	0
 24194  01BFF4                     L28:
 24195  01BFF4  6E01               	movwf	btemp^0,c
 24196                           
 24197                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24198  01BFF6  52E5               	movf	postdec1,f,c
 24199  01BFF8  0012               	return		;funcret
 24200  01BFFA                     __end_of_TimerDone:
 24201                           	opt callstack 0
 24202                           
 24203 ;; *************** function _StartTimer *****************
 24204 ;; Defined at:
 24205 ;;		line 12 in file "timers.c"
 24206 ;; Parameters:    Size  Location     Type
 24207 ;;  timer           1  [STACK] const unsigned char 
 24208 ;;  count           2  [STACK] const unsigned short 
 24209 ;; Auto vars:     Size  Location     Type
 24210 ;;		None
 24211 ;; Return value:  Size  Location     Type
 24212 ;;                  1  [STACK] void 
 24213 ;; Registers used:
 24214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24215 ;; Tracked objects:
 24216 ;;		On entry : 0/0
 24217 ;;		On exit  : 0/0
 24218 ;;		Unchanged: 0/0
 24219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24224 ;;Total ram usage:        0 bytes
 24225 ;; Hardware stack levels used:    1
 24226 ;; Hardware stack levels required when called:   15
 24227 ;; This function calls:
 24228 ;;		Nothing
 24229 ;; This function is called by:
 24230 ;;		_main
 24231 ;;		_WaitMs
 24232 ;;		_help_button
 24233 ;;		_check_help
 24234 ;;		_update_adc_result
 24235 ;;		_calc_bsoc
 24236 ;;		_esr_check
 24237 ;; This function uses a reentrant model
 24238 ;;
 24239                           
 24240                           	psect	text95
 24241  01BB28                     __ptext95:
 24242                           	opt callstack 0
 24243  01BB28                     _StartTimer:
 24244                           	opt callstack 0
 24245                           
 24246                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 24247                           ;stkvar	_count @ sp[(0)+-3]
 24248                           
 24249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24250                           ;incstack = 0
 24251 ;; hardware stack exceeded
 24252  01BB28  0EFD               	movlw	-3
 24253  01BB2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24254  01BB30  0EFE               	movlw	-2
 24255  01BB32  006F FF8C  F00C    	movff	plusw1,btemp+11
 24256  01BB38  90D8               	bcf	status,0,c
 24257  01BB3A  340B               	rlcf	(btemp+10)^0,w,c
 24258  01BB3C  6E09               	movwf	(btemp+8)^0,c
 24259  01BB3E  340C               	rlcf	(btemp+11)^0,w,c
 24260  01BB40  6E0A               	movwf	(btemp+9)^0,c
 24261                           
 24262                           ;stkvar	_timer @ sp[(0)+-1]
 24263  01BB42  0EFF               	movlw	-1
 24264  01BB44  50E3               	movf	plusw1,w,c
 24265  01BB46  0D02               	mullw	2
 24266  01BB48  0E7D               	movlw	low _tickCount
 24267  01BB4A  24F3               	addwf	243,w,c
 24268  01BB4C  6ED9               	movwf	fsr2l,c
 24269  01BB4E  0E02               	movlw	high _tickCount
 24270  01BB50  20F4               	addwfc	prodh,w,c
 24271  01BB52  6EDA               	movwf	fsr2h,c
 24272  01BB54  0060  F027  FFDE   	movff	btemp+8,postinc2
 24273  01BB5A  0060  F02B  FFDD   	movff	btemp+9,postdec2
 24274                           
 24275                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 24276  01BB60  52E5               	movf	postdec1,f,c
 24277  01BB62  52E5               	movf	postdec1,f,c
 24278  01BB64  52E5               	movf	postdec1,f,c
 24279  01BB66  0012               	return		;funcret
 24280  01BB68                     __end_of_StartTimer:
 24281                           	opt callstack 0
 24282                           
 24283 ;; *************** function _display_info *****************
 24284 ;; Defined at:
 24285 ;;		line 190 in file "mconfig.c"
 24286 ;; Parameters:    Size  Location     Type
 24287 ;;		None
 24288 ;; Auto vars:     Size  Location     Type
 24289 ;;		None
 24290 ;; Return value:  Size  Location     Type
 24291 ;;                  1  [STACK] enum E16509
 24292 ;; Registers used:
 24293 ;;		btemp
 24294 ;; Tracked objects:
 24295 ;;		On entry : 0/1
 24296 ;;		On exit  : 0/0
 24297 ;;		Unchanged: 0/0
 24298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24303 ;;Total ram usage:        0 bytes
 24304 ;; Hardware stack levels used:    1
 24305 ;; Hardware stack levels required when called:   15
 24306 ;; This function calls:
 24307 ;;		Nothing
 24308 ;; This function is called by:
 24309 ;;		_check_help
 24310 ;; This function uses a reentrant model
 24311 ;;
 24312                           
 24313                           	psect	text96
 24314  01C5B6                     __ptext96:
 24315                           	opt callstack 0
 24316  01C5B6                     _display_info:
 24317                           	opt callstack 14
 24318                           
 24319                           ;mconfig.c: 192:  return V.response.info;
 24320                           
 24321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24322                           ;incstack = 0
 24323  01C5B6  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 24324                           
 24325                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24326  01C5BC  0012               	return		;funcret
 24327  01C5BE                     __end_of_display_info:
 24328                           	opt callstack 0
 24329                           
 24330 ;; *************** function _display_help *****************
 24331 ;; Defined at:
 24332 ;;		line 195 in file "mconfig.c"
 24333 ;; Parameters:    Size  Location     Type
 24334 ;;		None
 24335 ;; Auto vars:     Size  Location     Type
 24336 ;;		None
 24337 ;; Return value:  Size  Location     Type
 24338 ;;                  1  [STACK] enum E16509
 24339 ;; Registers used:
 24340 ;;		btemp
 24341 ;; Tracked objects:
 24342 ;;		On entry : 3F/1
 24343 ;;		On exit  : 0/0
 24344 ;;		Unchanged: 0/0
 24345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24350 ;;Total ram usage:        0 bytes
 24351 ;; Hardware stack levels used:    1
 24352 ;; Hardware stack levels required when called:   15
 24353 ;; This function calls:
 24354 ;;		Nothing
 24355 ;; This function is called by:
 24356 ;;		_check_help
 24357 ;; This function uses a reentrant model
 24358 ;;
 24359                           
 24360                           	psect	text97
 24361  01C5BE                     __ptext97:
 24362                           	opt callstack 0
 24363  01C5BE                     _display_help:
 24364                           	opt callstack 14
 24365                           
 24366                           ;mconfig.c: 197:  return V.response.help_temp;
 24367                           
 24368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24369                           ;incstack = 0
 24370  01C5BE  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 24371                           
 24372                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24373  01C5C4  0012               	return		;funcret
 24374  01C5C6                     __end_of_display_help:
 24375                           	opt callstack 0
 24376                           
 24377 ;; *************** function _check_enter_button *****************
 24378 ;; Defined at:
 24379 ;;		line 42 in file "hid.c"
 24380 ;; Parameters:    Size  Location     Type
 24381 ;;  h               2  [STACK] PTR struct H_data
 24382 ;;		 -> H(7), 
 24383 ;; Auto vars:     Size  Location     Type
 24384 ;;		None
 24385 ;; Return value:  Size  Location     Type
 24386 ;;                  1  [STACK] _Bool 
 24387 ;; Registers used:
 24388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 24389 ;; Tracked objects:
 24390 ;;		On entry : 0/0
 24391 ;;		On exit  : 0/0
 24392 ;;		Unchanged: 0/0
 24393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24398 ;;Total ram usage:        0 bytes
 24399 ;; Hardware stack levels used:    1
 24400 ;; Hardware stack levels required when called:   15
 24401 ;; This function calls:
 24402 ;;		Nothing
 24403 ;; This function is called by:
 24404 ;;		_main
 24405 ;; This function uses a reentrant model
 24406 ;;
 24407                           
 24408                           	psect	text98
 24409  01B1FC                     __ptext98:
 24410                           	opt callstack 0
 24411  01B1FC                     _check_enter_button:
 24412                           	opt callstack 15
 24413                           
 24414                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 24415                           ;stkvar	_h @ sp[(0)+-2]
 24416                           
 24417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24418                           ;incstack = 0
 24419  01B1FC  0EFE               	movlw	-2
 24420  01B1FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24421  01B204  0EFF               	movlw	-1
 24422  01B206  006F FF8C  F00C    	movff	plusw1,btemp+11
 24423  01B20C  0E04               	movlw	4
 24424  01B20E  240B               	addwf	(btemp+10)^0,w,c
 24425  01B210  6ED9               	movwf	fsr2l,c
 24426  01B212  0E00               	movlw	0
 24427  01B214  200C               	addwfc	(btemp+11)^0,w,c
 24428  01B216  6EDA               	movwf	fsr2h,c
 24429  01B218  50DF               	movf	indf2,w,c
 24430  01B21A  A4D8               	btfss	status,2,c
 24431  01B21C  D023               	goto	l13295
 24432                           
 24433                           ;stkvar	_h @ sp[(0)+-2]
 24434  01B21E  0EFE               	movlw	-2
 24435  01B220  006F FF8C  F00B    	movff	plusw1,btemp+10
 24436  01B226  0EFF               	movlw	-1
 24437  01B228  006F FF8C  F00C    	movff	plusw1,btemp+11
 24438  01B22E  0E05               	movlw	5
 24439  01B230  240B               	addwf	(btemp+10)^0,w,c
 24440  01B232  6ED9               	movwf	fsr2l,c
 24441  01B234  0E00               	movlw	0
 24442  01B236  200C               	addwfc	(btemp+11)^0,w,c
 24443  01B238  6EDA               	movwf	fsr2h,c
 24444  01B23A  50DF               	movf	indf2,w,c
 24445  01B23C  A4D8               	btfss	status,2,c
 24446  01B23E  D012               	goto	l13295
 24447                           
 24448                           ;hid.c: 45:   h->wait_enter = 1;
 24449                           ;stkvar	_h @ sp[(0)+-2]
 24450  01B240  0EFE               	movlw	-2
 24451  01B242  006F FF8C  F00B    	movff	plusw1,btemp+10
 24452  01B248  0EFF               	movlw	-1
 24453  01B24A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24454  01B250  0E04               	movlw	4
 24455  01B252  240B               	addwf	(btemp+10)^0,w,c
 24456  01B254  6ED9               	movwf	fsr2l,c
 24457  01B256  0E00               	movlw	0
 24458  01B258  200C               	addwfc	(btemp+11)^0,w,c
 24459  01B25A  6EDA               	movwf	fsr2h,c
 24460  01B25C  0E01               	movlw	1
 24461  01B25E  6EDF               	movwf	indf2,c
 24462                           
 24463                           ;hid.c: 46:   return 1;
 24464  01B260  0E01               	movlw	1
 24465  01B262  D001               	goto	L29
 24466  01B264                     l13295:
 24467                           
 24468                           ;hid.c: 48:  return 0;
 24469  01B264  0E00               	movlw	0
 24470  01B266                     L29:
 24471  01B266  6E01               	movwf	btemp^0,c
 24472                           
 24473                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24474  01B268  52E5               	movf	postdec1,f,c
 24475  01B26A  52E5               	movf	postdec1,f,c
 24476  01B26C  0012               	return		;funcret
 24477  01B26E                     __end_of_check_enter_button:
 24478                           	opt callstack 0
 24479                           
 24480 ;; *************** function _calc_ror_data *****************
 24481 ;; Defined at:
 24482 ;;		line 102 in file "mbmc.c"
 24483 ;; Parameters:    Size  Location     Type
 24484 ;;		None
 24485 ;; Auto vars:     Size  Location     Type
 24486 ;;		None
 24487 ;; Return value:  Size  Location     Type
 24488 ;;                  1  [STACK] void 
 24489 ;; Registers used:
 24490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24491 ;; Tracked objects:
 24492 ;;		On entry : 0/39
 24493 ;;		On exit  : 0/0
 24494 ;;		Unchanged: 0/0
 24495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24500 ;;Total ram usage:        0 bytes
 24501 ;; Hardware stack levels used:    1
 24502 ;; Hardware stack levels required when called:   18
 24503 ;; This function calls:
 24504 ;;		___flge
 24505 ;;		___flsub
 24506 ;;		_conv_raw_result
 24507 ;;		_fabsf
 24508 ;; This function is called by:
 24509 ;;		_main
 24510 ;; This function uses a reentrant model
 24511 ;;
 24512                           
 24513                           	psect	text99
 24514  018D9C                     __ptext99:
 24515                           	opt callstack 0
 24516  018D9C                     _calc_ror_data:
 24517                           	opt callstack 12
 24518                           
 24519                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 24520                           
 24521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24522                           ;incstack = 0
 24523  018D9C  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 24524  018DA2  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 24525  018DA8  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 24526  018DAE  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 24527  018DB4  0E00               	movlw	0
 24528  018DB6  6EE6               	movwf	postinc1,c
 24529  018DB8  0E00               	movlw	0
 24530  018DBA  6EE6               	movwf	postinc1,c
 24531  018DBC  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24532  018DC0  0060  F007  FFE6   	movff	btemp,postinc1
 24533  018DC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24534  018DCC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24535  018DD2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24536  018DD8  ECEE  F0DC         	call	___flsub	;wreg free
 24537  018DDC  0060  F007  FFE6   	movff	btemp,postinc1
 24538  018DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24539  018DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24540  018DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24541  018DF4  ECA6  F0D4         	call	_fabsf	;wreg free
 24542  018DF8  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 24543  018DFE  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 24544  018E04  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 24545  018E0A  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 24546                           
 24547                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 24548  018E10  0E00               	movlw	0
 24549  018E12  6EE6               	movwf	postinc1,c
 24550  018E14  0E00               	movlw	0
 24551  018E16  6EE6               	movwf	postinc1,c
 24552  018E18  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24553  018E1C  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 24554  018E22  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 24555  018E28  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 24556  018E2E  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 24557                           
 24558                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 24559  018E34  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 24560  018E3A  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 24561  018E40  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 24562  018E46  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 24563  018E4C  0E00               	movlw	0
 24564  018E4E  6EE6               	movwf	postinc1,c
 24565  018E50  0E04               	movlw	4
 24566  018E52  6EE6               	movwf	postinc1,c
 24567  018E54  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24568  018E58  0060  F007  FFE6   	movff	btemp,postinc1
 24569  018E5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24570  018E64  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24571  018E6A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24572  018E70  ECEE  F0DC         	call	___flsub	;wreg free
 24573  018E74  0060  F007  FFE6   	movff	btemp,postinc1
 24574  018E7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24575  018E80  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24576  018E86  0060  F013  FFE6   	movff	btemp+3,postinc1
 24577  018E8C  ECA6  F0D4         	call	_fabsf	;wreg free
 24578  018E90  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 24579  018E96  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 24580  018E9C  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 24581  018EA2  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 24582                           
 24583                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 24584  018EA8  0EE7               	movlw	231
 24585  018EAA  6EE6               	movwf	postinc1,c
 24586  018EAC  0E1D               	movlw	29
 24587  018EAE  6EE6               	movwf	postinc1,c
 24588  018EB0  0EA7               	movlw	167
 24589  018EB2  6EE6               	movwf	postinc1,c
 24590  018EB4  0E3B               	movlw	59
 24591  018EB6  6EE6               	movwf	postinc1,c
 24592  018EB8  EE21  F36B         	lfsr	2,_C+108	;volatile
 24593  018EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 24594  018EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 24595  018EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 24596  018ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 24597  018ED4  EC0A  F0C9         	call	___flge	;wreg free
 24598  018ED8  B001               	btfsc	btemp& (0+255),0,c
 24599  018EDA  D010               	goto	l11109
 24600                           
 24601                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 24602  018EDC  0EB0               	movlw	176
 24603  018EDE  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 24604  018EE4  0E03               	movlw	3
 24605  018EE6  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 24606  018EEC  0E67               	movlw	103
 24607  018EEE  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 24608  018EF4  0E3C               	movlw	60
 24609  018EF6  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 24610  018EFC                     l11109:
 24611                           
 24612                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 24613  018EFC  0E00               	movlw	0
 24614  018EFE  6EE6               	movwf	postinc1,c
 24615  018F00  0E04               	movlw	4
 24616  018F02  6EE6               	movwf	postinc1,c
 24617  018F04  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24618  018F08  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 24619  018F0E  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 24620  018F14  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 24621  018F1A  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 24622                           
 24623                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24624  018F20  0012               	return		;funcret
 24625  018F22                     __end_of_calc_ror_data:
 24626                           	opt callstack 0
 24627                           
 24628 ;; *************** function _fabsf *****************
 24629 ;; Defined at:
 24630 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 24631 ;; Parameters:    Size  Location     Type
 24632 ;;  x               4  [STACK] float 
 24633 ;; Auto vars:     Size  Location     Type
 24634 ;;  u               4  [STACK] struct .
 24635 ;; Return value:  Size  Location     Type
 24636 ;;                  4  [STACK] float 
 24637 ;; Registers used:
 24638 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24639 ;; Tracked objects:
 24640 ;;		On entry : 0/0
 24641 ;;		On exit  : 0/0
 24642 ;;		Unchanged: 0/0
 24643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24648 ;;Total ram usage:        0 bytes
 24649 ;; Hardware stack levels used:    1
 24650 ;; Hardware stack levels required when called:   15
 24651 ;; This function calls:
 24652 ;;		Nothing
 24653 ;; This function is called by:
 24654 ;;		_main
 24655 ;;		_calc_ror_data
 24656 ;;		_calc_bsoc
 24657 ;;		_esr_check
 24658 ;; This function uses a reentrant model
 24659 ;;
 24660                           
 24661                           	psect	text100
 24662  01A94C                     __ptext100:
 24663                           	opt callstack 0
 24664  01A94C                     _fabsf:
 24665                           	opt callstack 0
 24666                           
 24667                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24668  01A94C  52E6               	movf	postinc1,f,c
 24669  01A94E  52E6               	movf	postinc1,f,c
 24670  01A950  52E6               	movf	postinc1,f,c
 24671  01A952  52E6               	movf	postinc1,f,c
 24672                           
 24673                           ;incstack = 0
 24674 ;; hardware stack exceeded
 24675  01A954  0060  F180  F009   	movff	fabsf@F463,btemp+8
 24676  01A95A  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 24677  01A960  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 24678  01A966  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 24679                           
 24680                           ;stkvar	_u @ sp[(-4)+0]
 24681  01A96C  0EFC               	movlw	-4
 24682  01A96E  0060  F027  FFE3   	movff	btemp+8,plusw1
 24683  01A974  0EFD               	movlw	-3
 24684  01A976  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24685  01A97C  0EFE               	movlw	-2
 24686  01A97E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24687  01A984  0EFF               	movlw	-1
 24688  01A986  0060  F033  FFE3   	movff	btemp+11,plusw1
 24689                           
 24690                           ;stkvar	_x @ sp[(-4)+-4]
 24691  01A98C  0EF8               	movlw	-8
 24692  01A98E  006F FF8C  F009    	movff	plusw1,btemp+8
 24693  01A994  0EF9               	movlw	-7
 24694  01A996  006F FF8C  F00A    	movff	plusw1,btemp+9
 24695  01A99C  0EFA               	movlw	-6
 24696  01A99E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24697  01A9A4  0EFB               	movlw	-5
 24698  01A9A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24699                           
 24700                           ;stkvar	_u @ sp[(-4)+0]
 24701  01A9AC  0EFC               	movlw	-4
 24702  01A9AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 24703  01A9B4  0EFD               	movlw	-3
 24704  01A9B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24705  01A9BC  0EFE               	movlw	-2
 24706  01A9BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24707  01A9C4  0EFF               	movlw	-1
 24708  01A9C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24709                           
 24710                           ;stkvar	_u @ sp[(-4)+0]
 24711  01A9CC  0EFF               	movlw	-1
 24712  01A9CE  9EE3               	bcf	plusw1,7,c
 24713                           
 24714                           ;stkvar	_u @ sp[(-4)+0]
 24715  01A9D0  0EFC               	movlw	-4
 24716  01A9D2  006F FF8C  F001    	movff	plusw1,btemp
 24717  01A9D8  0EFD               	movlw	-3
 24718  01A9DA  006F FF8C  F002    	movff	plusw1,btemp+1
 24719  01A9E0  0EFE               	movlw	-2
 24720  01A9E2  006F FF8C  F003    	movff	plusw1,btemp+2
 24721  01A9E8  0EFF               	movlw	-1
 24722  01A9EA  006F FF8C  F004    	movff	plusw1,btemp+3
 24723                           
 24724                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24725  01A9F0  0EF8               	movlw	248
 24726  01A9F2  26E1               	addwf	fsr1l,f,c
 24727  01A9F4  0EFF               	movlw	255
 24728  01A9F6  22E2               	addwfc	fsr1h,f,c
 24729  01A9F8  0012               	return		;funcret
 24730  01A9FA                     __end_of_fabsf:
 24731                           	opt callstack 0
 24732                           
 24733 ;; *************** function _conv_raw_result *****************
 24734 ;; Defined at:
 24735 ;;		line 122 in file "daq.c"
 24736 ;; Parameters:    Size  Location     Type
 24737 ;;  chan            1  [STACK] const enum E16590
 24738 ;;  to_what         1  [STACK] const enum E16652
 24739 ;; Auto vars:     Size  Location     Type
 24740 ;;		None
 24741 ;; Return value:  Size  Location     Type
 24742 ;;                  4  [STACK] float 
 24743 ;; Registers used:
 24744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24745 ;; Tracked objects:
 24746 ;;		On entry : 0/39
 24747 ;;		On exit  : 0/0
 24748 ;;		Unchanged: 0/0
 24749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24754 ;;Total ram usage:        0 bytes
 24755 ;; Hardware stack levels used:    1
 24756 ;; Hardware stack levels required when called:   17
 24757 ;; This function calls:
 24758 ;;		___fladd
 24759 ;;		___fldiv
 24760 ;;		___flmul
 24761 ;;		___flsub
 24762 ;;		___xxtofl
 24763 ;;		_get_raw_result
 24764 ;;		_nanf
 24765 ;; This function is called by:
 24766 ;;		_main
 24767 ;;		_convert_adc_data
 24768 ;;		_calc_ror_data
 24769 ;;		_check_day_time
 24770 ;;		_init_bsoc
 24771 ;;		_esr_check
 24772 ;; This function uses a reentrant model
 24773 ;;
 24774                           
 24775                           	psect	text101
 24776  01532A                     __ptext101:
 24777                           	opt callstack 0
 24778  01532A                     _conv_raw_result:
 24779                           	opt callstack 0
 24780                           
 24781                           ;daq.c: 122: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 123: {;daq.c: 125:  switch (to_what) {
 24782                           
 24783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24784                           ;incstack = 0
 24785 ;; hardware stack exceeded
 24786  01532A  D276               	goto	l9911
 24787  01532C                     l9857:
 24788                           
 24789                           ;daq.c: 127:   if (!(0b0011110001110111 >> chan & 0x1))
 24790                           ;stkvar	_chan @ sp[(0)+-1]
 24791  01532C  0EFF               	movlw	-1
 24792  01532E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24793  015334  0E77               	movlw	119
 24794  015336  6E09               	movwf	(btemp+8)^0,c
 24795  015338  0E3C               	movlw	60
 24796  01533A  6E0A               	movwf	(btemp+9)^0,c
 24797  01533C  2A0C               	incf	(btemp+11)^0,f,c
 24798  01533E  D003               	goto	u9154
 24799  015340                     u9155:
 24800  015340  340A               	rlcf	(btemp+9)^0,w,c
 24801  015342  320A               	rrcf	(btemp+9)^0,f,c
 24802  015344  3209               	rrcf	(btemp+8)^0,f,c
 24803  015346                     u9154:
 24804  015346  2E0C               	decfsz	(btemp+11)^0,f,c
 24805  015348  D7FB               	goto	u9155
 24806  01534A  B009               	btfsc	(btemp+8)^0,0,c
 24807  01534C  D007               	goto	l9863
 24808                           
 24809                           ;daq.c: 128:    return nanf("");
 24810  01534E  0E49               	movlw	low (STR_64+120)
 24811  015350  6EE6               	movwf	postinc1,c
 24812  015352  0EFC               	movlw	high (STR_64+120)
 24813  015354  6EE6               	movwf	postinc1,c
 24814  015356  EC6D  F0DA         	call	_nanf	;wreg free
 24815  01535A  D26E               	goto	l1816
 24816  01535C                     l9863:
 24817                           
 24818                           ;daq.c: 130:   if (0b0000000000000011 >> chan & 0x1) {
 24819                           ;stkvar	_chan @ sp[(0)+-1]
 24820  01535C  0EFF               	movlw	-1
 24821  01535E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24822  015364  0E03               	movlw	3
 24823  015366  6E09               	movwf	(btemp+8)^0,c
 24824  015368  0E00               	movlw	0
 24825  01536A  6E0A               	movwf	(btemp+9)^0,c
 24826  01536C  2A0C               	incf	(btemp+11)^0,f,c
 24827  01536E  D003               	goto	u9174
 24828  015370                     u9175:
 24829  015370  340A               	rlcf	(btemp+9)^0,w,c
 24830  015372  320A               	rrcf	(btemp+9)^0,f,c
 24831  015374  3209               	rrcf	(btemp+8)^0,f,c
 24832  015376                     u9174:
 24833  015376  2E0C               	decfsz	(btemp+11)^0,f,c
 24834  015378  D7FB               	goto	u9175
 24835  01537A  A009               	btfss	(btemp+8)^0,0,c
 24836  01537C  D11F               	goto	l9877
 24837                           
 24838                           ;daq.c: 131:    if (0b0000000000000001 >> chan & 0x1) {
 24839                           ;stkvar	_chan @ sp[(0)+-1]
 24840  01537E  0EFF               	movlw	-1
 24841  015380  006F FF8C  F00C    	movff	plusw1,btemp+11
 24842  015386  0E01               	movlw	1
 24843  015388  6E09               	movwf	(btemp+8)^0,c
 24844  01538A  0E00               	movlw	0
 24845  01538C  6E0A               	movwf	(btemp+9)^0,c
 24846  01538E  2A0C               	incf	(btemp+11)^0,f,c
 24847  015390  D003               	goto	u9194
 24848  015392                     u9195:
 24849  015392  340A               	rlcf	(btemp+9)^0,w,c
 24850  015394  320A               	rrcf	(btemp+9)^0,f,c
 24851  015396  3209               	rrcf	(btemp+8)^0,f,c
 24852  015398                     u9194:
 24853  015398  2E0C               	decfsz	(btemp+11)^0,f,c
 24854  01539A  D7FB               	goto	u9195
 24855  01539C  A009               	btfss	(btemp+8)^0,0,c
 24856  01539E  D087               	goto	l9873
 24857                           
 24858                           ;daq.c: 132:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24859  0153A0  0060  F367  FFE6   	movff	_R+42,postinc1
 24860  0153A6  0060  F36B  FFE6   	movff	_R+43,postinc1
 24861  0153AC  0060  F36F  FFE6   	movff	_R+44,postinc1
 24862  0153B2  0060  F373  FFE6   	movff	_R+45,postinc1
 24863  0153B8  0E7B               	movlw	123
 24864  0153BA  6EE6               	movwf	postinc1,c
 24865  0153BC  0E14               	movlw	20
 24866  0153BE  6EE6               	movwf	postinc1,c
 24867  0153C0  0EAE               	movlw	174
 24868  0153C2  6EE6               	movwf	postinc1,c
 24869  0153C4  0E3D               	movlw	61
 24870  0153C6  6EE6               	movwf	postinc1,c
 24871  0153C8  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 24872  0153CE  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 24873  0153D4  0E00               	movlw	0
 24874  0153D6  BE0A               	btfsc	(btemp+9)^0,7,c
 24875  0153D8  0EFF               	movlw	255
 24876  0153DA  6E0B               	movwf	(btemp+10)^0,c
 24877  0153DC  6E0C               	movwf	(btemp+11)^0,c
 24878  0153DE  0060  F027  FFE6   	movff	btemp+8,postinc1
 24879  0153E4  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24880  0153EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24881  0153F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 24882  0153F6  0E01               	movlw	1
 24883  0153F8  6EE6               	movwf	postinc1,c
 24884  0153FA  EC65  F0C2         	call	___xxtofl	;wreg free
 24885  0153FE  0060  F007  FFE6   	movff	btemp,postinc1
 24886  015404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24887  01540A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24888  015410  0060  F013  FFE6   	movff	btemp+3,postinc1
 24889                           
 24890                           ;stkvar	_chan @ sp[(-12)+-1]
 24891  015416  0EF3               	movlw	-13
 24892  015418  50E3               	movf	plusw1,w,c
 24893  01541A  6EE6               	movwf	postinc1,c
 24894  01541C  ECFD  F0E1         	call	_get_raw_result	;wreg free
 24895  015420  0060  F004  F00B   	movff	btemp,btemp+10
 24896  015426  0060  F008  F00C   	movff	btemp+1,btemp+11
 24897  01542C  500B               	movf	(btemp+10)^0,w,c
 24898  01542E  6E05               	movwf	(btemp+4)^0,c
 24899  015430  500C               	movf	(btemp+11)^0,w,c
 24900  015432  6E06               	movwf	(btemp+5)^0,c
 24901  015434  6A07               	clrf	(btemp+6)^0,c
 24902  015436  6A08               	clrf	(btemp+7)^0,c
 24903  015438  0060  F017  FFE6   	movff	btemp+4,postinc1
 24904  01543E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24905  015444  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24906  01544A  0060  F023  FFE6   	movff	btemp+7,postinc1
 24907  015450  0E00               	movlw	0
 24908  015452  6EE6               	movwf	postinc1,c
 24909  015454  EC65  F0C2         	call	___xxtofl	;wreg free
 24910  015458  0060  F007  FFE6   	movff	btemp,postinc1
 24911  01545E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24912  015464  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24913  01546A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24914  015470  ECEE  F0DC         	call	___flsub	;wreg free
 24915  015474  0060  F007  FFE6   	movff	btemp,postinc1
 24916  01547A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24917  015480  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24918  015486  0060  F013  FFE6   	movff	btemp+3,postinc1
 24919  01548C  ECE5  F09E         	call	___flmul	;wreg free
 24920  015490  0060  F007  FFE6   	movff	btemp,postinc1
 24921  015496  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24922  01549C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24923  0154A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24924  0154A8  ECFA  F0A2         	call	___fladd	;wreg free
 24925  0154AC  D1C5               	goto	l1816
 24926  0154AE                     l9873:
 24927                           
 24928                           ;daq.c: 134:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24929  0154AE  0060  F377  FFE6   	movff	_R+46,postinc1
 24930  0154B4  0060  F37B  FFE6   	movff	_R+47,postinc1
 24931  0154BA  0060  F37F  FFE6   	movff	_R+48,postinc1
 24932  0154C0  0060  F383  FFE6   	movff	_R+49,postinc1
 24933  0154C6  0E29               	movlw	41
 24934  0154C8  6EE6               	movwf	postinc1,c
 24935  0154CA  0E5C               	movlw	92
 24936  0154CC  6EE6               	movwf	postinc1,c
 24937  0154CE  0E0F               	movlw	15
 24938  0154D0  6EE6               	movwf	postinc1,c
 24939  0154D2  0E3D               	movlw	61
 24940  0154D4  6EE6               	movwf	postinc1,c
 24941  0154D6  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 24942  0154DC  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 24943  0154E2  0E00               	movlw	0
 24944  0154E4  BE0A               	btfsc	(btemp+9)^0,7,c
 24945  0154E6  0EFF               	movlw	255
 24946  0154E8  6E0B               	movwf	(btemp+10)^0,c
 24947  0154EA  6E0C               	movwf	(btemp+11)^0,c
 24948  0154EC  0060  F027  FFE6   	movff	btemp+8,postinc1
 24949  0154F2  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24950  0154F8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24951  0154FE  0060  F033  FFE6   	movff	btemp+11,postinc1
 24952  015504  0E01               	movlw	1
 24953  015506  6EE6               	movwf	postinc1,c
 24954  015508  EC65  F0C2         	call	___xxtofl	;wreg free
 24955  01550C  0060  F007  FFE6   	movff	btemp,postinc1
 24956  015512  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24957  015518  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24958  01551E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24959                           
 24960                           ;stkvar	_chan @ sp[(-12)+-1]
 24961  015524  0EF3               	movlw	-13
 24962  015526  50E3               	movf	plusw1,w,c
 24963  015528  6EE6               	movwf	postinc1,c
 24964  01552A  ECFD  F0E1         	call	_get_raw_result	;wreg free
 24965  01552E  0060  F004  F00B   	movff	btemp,btemp+10
 24966  015534  0060  F008  F00C   	movff	btemp+1,btemp+11
 24967  01553A  500B               	movf	(btemp+10)^0,w,c
 24968  01553C  6E05               	movwf	(btemp+4)^0,c
 24969  01553E  500C               	movf	(btemp+11)^0,w,c
 24970  015540  6E06               	movwf	(btemp+5)^0,c
 24971  015542  6A07               	clrf	(btemp+6)^0,c
 24972  015544  6A08               	clrf	(btemp+7)^0,c
 24973  015546  0060  F017  FFE6   	movff	btemp+4,postinc1
 24974  01554C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24975  015552  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24976  015558  0060  F023  FFE6   	movff	btemp+7,postinc1
 24977  01555E  0E00               	movlw	0
 24978  015560  6EE6               	movwf	postinc1,c
 24979  015562  EC65  F0C2         	call	___xxtofl	;wreg free
 24980  015566  0060  F007  FFE6   	movff	btemp,postinc1
 24981  01556C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24982  015572  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24983  015578  0060  F013  FFE6   	movff	btemp+3,postinc1
 24984  01557E  ECEE  F0DC         	call	___flsub	;wreg free
 24985  015582  0060  F007  FFE6   	movff	btemp,postinc1
 24986  015588  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24987  01558E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24988  015594  0060  F013  FFE6   	movff	btemp+3,postinc1
 24989  01559A  ECE5  F09E         	call	___flmul	;wreg free
 24990  01559E  0060  F007  FFE6   	movff	btemp,postinc1
 24991  0155A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24992  0155AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24993  0155B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 24994  0155B6  ECFA  F0A2         	call	___fladd	;wreg free
 24995  0155BA  D13E               	goto	l1816
 24996  0155BC                     l9877:
 24997                           
 24998                           ;daq.c: 137:    if (0b0000100000000000 >> chan & 0x1) {
 24999                           ;stkvar	_chan @ sp[(0)+-1]
 25000  0155BC  0EFF               	movlw	-1
 25001  0155BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25002  0155C4  0E00               	movlw	0
 25003  0155C6  6E09               	movwf	(btemp+8)^0,c
 25004  0155C8  0E08               	movlw	8
 25005  0155CA  6E0A               	movwf	(btemp+9)^0,c
 25006  0155CC  2A0C               	incf	(btemp+11)^0,f,c
 25007  0155CE  D003               	goto	u9214
 25008  0155D0                     u9215:
 25009  0155D0  340A               	rlcf	(btemp+9)^0,w,c
 25010  0155D2  320A               	rrcf	(btemp+9)^0,f,c
 25011  0155D4  3209               	rrcf	(btemp+8)^0,f,c
 25012  0155D6                     u9214:
 25013  0155D6  2E0C               	decfsz	(btemp+11)^0,f,c
 25014  0155D8  D7FB               	goto	u9215
 25015  0155DA  A009               	btfss	(btemp+8)^0,0,c
 25016  0155DC  D008               	goto	l9885
 25017                           
 25018                           ;daq.c: 138:     return 25.0;
 25019  0155DE  0E00               	movlw	0
 25020  0155E0  6E01               	movwf	btemp^0,c
 25021  0155E2  0E00               	movlw	0
 25022  0155E4  6E02               	movwf	(btemp+1)^0,c
 25023  0155E6  0EC8               	movlw	200
 25024  0155E8  6E03               	movwf	(btemp+2)^0,c
 25025  0155EA  0E41               	movlw	65
 25026  0155EC  D113               	goto	L30
 25027  0155EE                     l9885:
 25028                           
 25029                           ;daq.c: 140:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25030  0155EE  0E00               	movlw	0
 25031  0155F0  6EE6               	movwf	postinc1,c
 25032  0155F2  0E00               	movlw	0
 25033  0155F4  6EE6               	movwf	postinc1,c
 25034  0155F6  0E7A               	movlw	122
 25035  0155F8  6EE6               	movwf	postinc1,c
 25036  0155FA  0E44               	movlw	68
 25037  0155FC  6EE6               	movwf	postinc1,c
 25038  0155FE  0E61               	movlw	97
 25039  015600  6EE6               	movwf	postinc1,c
 25040  015602  0E03               	movlw	3
 25041  015604  6EE6               	movwf	postinc1,c
 25042  015606  0E84               	movlw	132
 25043  015608  6EE6               	movwf	postinc1,c
 25044  01560A  0E40               	movlw	64
 25045  01560C  6EE6               	movwf	postinc1,c
 25046                           
 25047                           ;stkvar	_chan @ sp[(-8)+-1]
 25048  01560E  0EF7               	movlw	-9
 25049  015610  50E3               	movf	plusw1,w,c
 25050  015612  6EE6               	movwf	postinc1,c
 25051  015614  ECFD  F0E1         	call	_get_raw_result	;wreg free
 25052  015618  0060  F004  F00B   	movff	btemp,btemp+10
 25053  01561E  0060  F008  F00C   	movff	btemp+1,btemp+11
 25054  015624  500B               	movf	(btemp+10)^0,w,c
 25055  015626  6E05               	movwf	(btemp+4)^0,c
 25056  015628  500C               	movf	(btemp+11)^0,w,c
 25057  01562A  6E06               	movwf	(btemp+5)^0,c
 25058  01562C  6A07               	clrf	(btemp+6)^0,c
 25059  01562E  6A08               	clrf	(btemp+7)^0,c
 25060  015630  0060  F017  FFE6   	movff	btemp+4,postinc1
 25061  015636  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25062  01563C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25063  015642  0060  F023  FFE6   	movff	btemp+7,postinc1
 25064  015648  0E00               	movlw	0
 25065  01564A  6EE6               	movwf	postinc1,c
 25066  01564C  EC65  F0C2         	call	___xxtofl	;wreg free
 25067  015650  0060  F007  FFE6   	movff	btemp,postinc1
 25068  015656  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25069  01565C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25070  015662  0060  F013  FFE6   	movff	btemp+3,postinc1
 25071  015668  ECE5  F09E         	call	___flmul	;wreg free
 25072  01566C  0060  F007  FFE6   	movff	btemp,postinc1
 25073  015672  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25074  015678  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25075  01567E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25076  015684  ECD8  F0A6         	call	___fldiv	;wreg free
 25077  015688  D0D7               	goto	l1816
 25078  01568A                     l9889:
 25079                           
 25080                           ;daq.c: 145:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 25081                           ;stkvar	_chan @ sp[(0)+-1]
 25082  01568A  0EFF               	movlw	-1
 25083  01568C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25084  015692  0E03               	movlw	3
 25085  015694  6E09               	movwf	(btemp+8)^0,c
 25086  015696  0E00               	movlw	0
 25087  015698  6E0A               	movwf	(btemp+9)^0,c
 25088  01569A  2A0C               	incf	(btemp+11)^0,f,c
 25089  01569C  D003               	goto	u9234
 25090  01569E                     u9235:
 25091  01569E  340A               	rlcf	(btemp+9)^0,w,c
 25092  0156A0  320A               	rrcf	(btemp+9)^0,f,c
 25093  0156A2  3209               	rrcf	(btemp+8)^0,f,c
 25094  0156A4                     u9234:
 25095  0156A4  2E0C               	decfsz	(btemp+11)^0,f,c
 25096  0156A6  D7FB               	goto	u9235
 25097  0156A8  B009               	btfsc	(btemp+8)^0,0,c
 25098  0156AA  D011               	goto	u9260
 25099                           
 25100                           ;stkvar	_chan @ sp[(0)+-1]
 25101  0156AC  0EFF               	movlw	-1
 25102  0156AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25103  0156B4  0E00               	movlw	0
 25104  0156B6  6E09               	movwf	(btemp+8)^0,c
 25105  0156B8  0E08               	movlw	8
 25106  0156BA  6E0A               	movwf	(btemp+9)^0,c
 25107  0156BC  2A0C               	incf	(btemp+11)^0,f,c
 25108  0156BE  D003               	goto	u9254
 25109  0156C0                     u9255:
 25110  0156C0  340A               	rlcf	(btemp+9)^0,w,c
 25111  0156C2  320A               	rrcf	(btemp+9)^0,f,c
 25112  0156C4  3209               	rrcf	(btemp+8)^0,f,c
 25113  0156C6                     u9254:
 25114  0156C6  2E0C               	decfsz	(btemp+11)^0,f,c
 25115  0156C8  D7FB               	goto	u9255
 25116  0156CA  A009               	btfss	(btemp+8)^0,0,c
 25117  0156CC  D04E               	goto	l9897
 25118  0156CE                     u9260:
 25119                           
 25120                           ;daq.c: 146:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 25121  0156CE  0E00               	movlw	0
 25122  0156D0  6EE6               	movwf	postinc1,c
 25123  0156D2  0E00               	movlw	0
 25124  0156D4  6EE6               	movwf	postinc1,c
 25125  0156D6  0E7A               	movlw	122
 25126  0156D8  6EE6               	movwf	postinc1,c
 25127  0156DA  0E44               	movlw	68
 25128  0156DC  6EE6               	movwf	postinc1,c
 25129  0156DE  0E00               	movlw	0
 25130  0156E0  6EE6               	movwf	postinc1,c
 25131  0156E2  0E00               	movlw	0
 25132  0156E4  6EE6               	movwf	postinc1,c
 25133  0156E6  0E20               	movlw	32
 25134  0156E8  6EE6               	movwf	postinc1,c
 25135  0156EA  0E3F               	movlw	63
 25136  0156EC  6EE6               	movwf	postinc1,c
 25137                           
 25138                           ;stkvar	_chan @ sp[(-8)+-1]
 25139  0156EE  0EF7               	movlw	-9
 25140  0156F0  50E3               	movf	plusw1,w,c
 25141  0156F2  6EE6               	movwf	postinc1,c
 25142  0156F4  ECFD  F0E1         	call	_get_raw_result	;wreg free
 25143  0156F8  0060  F004  F00B   	movff	btemp,btemp+10
 25144  0156FE  0060  F008  F00C   	movff	btemp+1,btemp+11
 25145  015704  500B               	movf	(btemp+10)^0,w,c
 25146  015706  6E05               	movwf	(btemp+4)^0,c
 25147  015708  500C               	movf	(btemp+11)^0,w,c
 25148  01570A  6E06               	movwf	(btemp+5)^0,c
 25149  01570C  6A07               	clrf	(btemp+6)^0,c
 25150  01570E  6A08               	clrf	(btemp+7)^0,c
 25151  015710  0060  F017  FFE6   	movff	btemp+4,postinc1
 25152  015716  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25153  01571C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25154  015722  0060  F023  FFE6   	movff	btemp+7,postinc1
 25155  015728  0E00               	movlw	0
 25156  01572A  6EE6               	movwf	postinc1,c
 25157  01572C  EC65  F0C2         	call	___xxtofl	;wreg free
 25158  015730  0060  F007  FFE6   	movff	btemp,postinc1
 25159  015736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25160  01573C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25161  015742  0060  F013  FFE6   	movff	btemp+3,postinc1
 25162  015748  ECE5  F09E         	call	___flmul	;wreg free
 25163  01574C  0060  F007  FFE6   	movff	btemp,postinc1
 25164  015752  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25165  015758  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25166  01575E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25167  015764  ECD8  F0A6         	call	___fldiv	;wreg free
 25168  015768  D067               	goto	l1816
 25169  01576A                     l9897:
 25170                           
 25171                           ;daq.c: 148:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25172  01576A  0E00               	movlw	0
 25173  01576C  6EE6               	movwf	postinc1,c
 25174  01576E  0E00               	movlw	0
 25175  015770  6EE6               	movwf	postinc1,c
 25176  015772  0E7A               	movlw	122
 25177  015774  6EE6               	movwf	postinc1,c
 25178  015776  0E44               	movlw	68
 25179  015778  6EE6               	movwf	postinc1,c
 25180  01577A  0E61               	movlw	97
 25181  01577C  6EE6               	movwf	postinc1,c
 25182  01577E  0E03               	movlw	3
 25183  015780  6EE6               	movwf	postinc1,c
 25184  015782  0E84               	movlw	132
 25185  015784  6EE6               	movwf	postinc1,c
 25186  015786  0E40               	movlw	64
 25187  015788  6EE6               	movwf	postinc1,c
 25188                           
 25189                           ;stkvar	_chan @ sp[(-8)+-1]
 25190  01578A  0EF7               	movlw	-9
 25191  01578C  50E3               	movf	plusw1,w,c
 25192  01578E  6EE6               	movwf	postinc1,c
 25193  015790  ECFD  F0E1         	call	_get_raw_result	;wreg free
 25194  015794  0060  F004  F00B   	movff	btemp,btemp+10
 25195  01579A  0060  F008  F00C   	movff	btemp+1,btemp+11
 25196  0157A0  500B               	movf	(btemp+10)^0,w,c
 25197  0157A2  6E05               	movwf	(btemp+4)^0,c
 25198  0157A4  500C               	movf	(btemp+11)^0,w,c
 25199  0157A6  6E06               	movwf	(btemp+5)^0,c
 25200  0157A8  6A07               	clrf	(btemp+6)^0,c
 25201  0157AA  6A08               	clrf	(btemp+7)^0,c
 25202  0157AC  0060  F017  FFE6   	movff	btemp+4,postinc1
 25203  0157B2  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25204  0157B8  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25205  0157BE  0060  F023  FFE6   	movff	btemp+7,postinc1
 25206  0157C4  0E00               	movlw	0
 25207  0157C6  6EE6               	movwf	postinc1,c
 25208  0157C8  EC65  F0C2         	call	___xxtofl	;wreg free
 25209  0157CC  0060  F007  FFE6   	movff	btemp,postinc1
 25210  0157D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25211  0157D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25212  0157DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25213  0157E4  ECE5  F09E         	call	___flmul	;wreg free
 25214  0157E8  0060  F007  FFE6   	movff	btemp,postinc1
 25215  0157EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25216  0157F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25217  0157FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 25218  015800  ECD8  F0A6         	call	___fldiv	;wreg free
 25219  015804  D019               	goto	l1816
 25220  015806                     l9903:
 25221                           
 25222                           ;daq.c: 151:   return 0.0;
 25223  015806  0E00               	movlw	0
 25224  015808  6E01               	movwf	btemp^0,c
 25225  01580A  0E00               	movlw	0
 25226  01580C  6E02               	movwf	(btemp+1)^0,c
 25227  01580E  0E00               	movlw	0
 25228  015810  6E03               	movwf	(btemp+2)^0,c
 25229  015812  0E00               	movlw	0
 25230  015814                     L30:
 25231  015814  6E04               	movwf	(btemp+3)^0,c
 25232  015816  D010               	goto	l1816
 25233  015818                     l9911:
 25234                           
 25235                           ;stkvar	_to_what @ sp[(0)+-2]
 25236  015818  0EFE               	movlw	-2
 25237  01581A  50E3               	movf	plusw1,w,c
 25238  01581C  6E0B               	movwf	(btemp+10)^0,c
 25239  01581E  6A0C               	clrf	(btemp+11)^0,c
 25240                           
 25241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25242                           ; Switch size 1, requested type "simple"
 25243                           ; Number of cases is 1, Range of values is 0 to 0
 25244                           ; switch strategies available:
 25245                           ; Name         Instructions Cycles
 25246                           ; simple_byte            4     3 (average)
 25247                           ;	Chosen strategy is simple_byte
 25248  015820  500C               	movf	(btemp+11)^0,w,c
 25249  015822  0A00               	xorlw	0	; case 0
 25250  015824  A4D8               	btfss	status,2,c
 25251  015826  D7EF               	goto	l9903
 25252                           
 25253                           ; Switch size 1, requested type "simple"
 25254                           ; Number of cases is 2, Range of values is 0 to 1
 25255                           ; switch strategies available:
 25256                           ; Name         Instructions Cycles
 25257                           ; simple_byte            7     4 (average)
 25258                           ;	Chosen strategy is simple_byte
 25259  015828  500B               	movf	(btemp+10)^0,w,c
 25260  01582A  0A00               	xorlw	0	; case 0
 25261  01582C  B4D8               	btfsc	status,2,c
 25262  01582E  D57E               	goto	l9857
 25263  015830  0A01               	xorlw	1	; case 1
 25264  015832  B4D8               	btfsc	status,2,c
 25265  015834  D72A               	goto	l9889
 25266  015836  D7E7               	goto	l9903
 25267  015838                     l1816:
 25268                           
 25269                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25270  015838  52E5               	movf	postdec1,f,c
 25271  01583A  52E5               	movf	postdec1,f,c
 25272  01583C  0012               	return		;funcret
 25273  01583E                     __end_of_conv_raw_result:
 25274                           	opt callstack 0
 25275                           
 25276 ;; *************** function _nanf *****************
 25277 ;; Defined at:
 25278 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 25279 ;; Parameters:    Size  Location     Type
 25280 ;;  s               2  [STACK] PTR const unsigned char 
 25281 ;;		 -> STR_101(1), STR_63(1), 
 25282 ;; Auto vars:     Size  Location     Type
 25283 ;;  u               4  [STACK] struct .
 25284 ;; Return value:  Size  Location     Type
 25285 ;;                  4  [STACK] float 
 25286 ;; Registers used:
 25287 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25288 ;; Tracked objects:
 25289 ;;		On entry : 0/39
 25290 ;;		On exit  : 0/0
 25291 ;;		Unchanged: 0/0
 25292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25297 ;;Total ram usage:        0 bytes
 25298 ;; Hardware stack levels used:    1
 25299 ;; Hardware stack levels required when called:   15
 25300 ;; This function calls:
 25301 ;;		Nothing
 25302 ;; This function is called by:
 25303 ;;		_conv_raw_result
 25304 ;; This function uses a reentrant model
 25305 ;;
 25306                           
 25307                           	psect	text102
 25308  01B4DA                     __ptext102:
 25309                           	opt callstack 0
 25310  01B4DA                     _nanf:
 25311                           	opt callstack 0
 25312                           
 25313                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25314  01B4DA  52E6               	movf	postinc1,f,c
 25315  01B4DC  52E6               	movf	postinc1,f,c
 25316  01B4DE  52E6               	movf	postinc1,f,c
 25317  01B4E0  52E6               	movf	postinc1,f,c
 25318                           
 25319                           ;incstack = 0
 25320 ;; hardware stack exceeded
 25321  01B4E2  0EFF               	movlw	255
 25322  01B4E4  6E09               	movwf	(btemp+8)^0,c
 25323  01B4E6  0EFF               	movlw	255
 25324  01B4E8  6E0A               	movwf	(btemp+9)^0,c
 25325  01B4EA  0EFF               	movlw	255
 25326  01B4EC  6E0B               	movwf	(btemp+10)^0,c
 25327  01B4EE  0E7F               	movlw	127
 25328  01B4F0  6E0C               	movwf	(btemp+11)^0,c
 25329                           
 25330                           ;stkvar	_u @ sp[(-4)+0]
 25331  01B4F2  0EFC               	movlw	-4
 25332  01B4F4  0060  F027  FFE3   	movff	btemp+8,plusw1
 25333  01B4FA  0EFD               	movlw	-3
 25334  01B4FC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25335  01B502  0EFE               	movlw	-2
 25336  01B504  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25337  01B50A  0EFF               	movlw	-1
 25338  01B50C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25339                           
 25340                           ;stkvar	_u @ sp[(-4)+0]
 25341  01B512  0EFC               	movlw	-4
 25342  01B514  006F FF8C  F001    	movff	plusw1,btemp
 25343  01B51A  0EFD               	movlw	-3
 25344  01B51C  006F FF8C  F002    	movff	plusw1,btemp+1
 25345  01B522  0EFE               	movlw	-2
 25346  01B524  006F FF8C  F003    	movff	plusw1,btemp+2
 25347  01B52A  0EFF               	movlw	-1
 25348  01B52C  006F FF8C  F004    	movff	plusw1,btemp+3
 25349                           
 25350                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25351  01B532  0EFA               	movlw	250
 25352  01B534  26E1               	addwf	fsr1l,f,c
 25353  01B536  0EFF               	movlw	255
 25354  01B538  22E2               	addwfc	fsr1h,f,c
 25355  01B53A  0012               	return		;funcret
 25356  01B53C                     __end_of_nanf:
 25357                           	opt callstack 0
 25358                           
 25359 ;; *************** function _get_raw_result *****************
 25360 ;; Defined at:
 25361 ;;		line 114 in file "daq.c"
 25362 ;; Parameters:    Size  Location     Type
 25363 ;;  index           1  [STACK] const enum E16590
 25364 ;; Auto vars:     Size  Location     Type
 25365 ;;		None
 25366 ;; Return value:  Size  Location     Type
 25367 ;;                  2  [STACK] unsigned short 
 25368 ;; Registers used:
 25369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 25370 ;; Tracked objects:
 25371 ;;		On entry : 0/1
 25372 ;;		On exit  : 0/0
 25373 ;;		Unchanged: 0/0
 25374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25379 ;;Total ram usage:        0 bytes
 25380 ;; Hardware stack levels used:    1
 25381 ;; Hardware stack levels required when called:   15
 25382 ;; This function calls:
 25383 ;;		Nothing
 25384 ;; This function is called by:
 25385 ;;		_main
 25386 ;;		_conv_raw_result
 25387 ;; This function uses a reentrant model
 25388 ;;
 25389                           
 25390                           	psect	text103
 25391  01C3FA                     __ptext103:
 25392                           	opt callstack 0
 25393  01C3FA                     _get_raw_result:
 25394                           	opt callstack 0
 25395                           
 25396                           ;daq.c: 114: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 115: {;daq.c
      +                          : 116:  return R.raw_adc[index];
 25397                           ;stkvar	_index @ sp[(0)+-1]
 25398                           
 25399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25400                           ;incstack = 0
 25401 ;; hardware stack exceeded
 25402  01C3FA  0EFF               	movlw	-1
 25403  01C3FC  50E3               	movf	plusw1,w,c
 25404  01C3FE  0D02               	mullw	2
 25405  01C400  50F3               	movf	243,w,c
 25406  01C402  0FAF               	addlw	low _R
 25407  01C404  6ED9               	movwf	fsr2l,c
 25408  01C406  6ADA               	clrf	fsr2h,c
 25409  01C408  006F FF78  F001    	movff	postinc2,btemp
 25410  01C40E  006F FF74  F002    	movff	postdec2,btemp+1
 25411                           
 25412                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 25413  01C414  52E5               	movf	postdec1,f,c
 25414  01C416  0012               	return		;funcret
 25415  01C418                     __end_of_get_raw_result:
 25416                           	opt callstack 0
 25417                           
 25418 ;; *************** function ___xxtofl *****************
 25419 ;; Defined at:
 25420 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 25421 ;; Parameters:    Size  Location     Type
 25422 ;;  sign            1  [STACK] unsigned char 
 25423 ;;  val             4  [STACK] long 
 25424 ;; Auto vars:     Size  Location     Type
 25425 ;;  arg             4  [STACK] unsigned long 
 25426 ;;  exp             1  [STACK] unsigned char 
 25427 ;; Return value:  Size  Location     Type
 25428 ;;                  4  [STACK] unsigned char 
 25429 ;; Registers used:
 25430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25431 ;; Tracked objects:
 25432 ;;		On entry : 0/0
 25433 ;;		On exit  : 0/0
 25434 ;;		Unchanged: 0/0
 25435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25440 ;;Total ram usage:        0 bytes
 25441 ;; Hardware stack levels used:    1
 25442 ;; Hardware stack levels required when called:   15
 25443 ;; This function calls:
 25444 ;;		Nothing
 25445 ;; This function is called by:
 25446 ;;		_conv_raw_result
 25447 ;;		_init_bsoc
 25448 ;; This function uses a reentrant model
 25449 ;;
 25450                           
 25451                           	psect	text104
 25452  0184CA                     __ptext104:
 25453                           	opt callstack 0
 25454  0184CA                     ___xxtofl:
 25455                           	opt callstack 0
 25456                           
 25457                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25458  0184CA  0E05               	movlw	5
 25459  0184CC  26E1               	addwf	fsr1l,f,c
 25460  0184CE  0E00               	movlw	0
 25461  0184D0  22E2               	addwfc	fsr1h,f,c
 25462                           
 25463                           ;stkvar	_sign @ sp[(-5)+-1]
 25464                           
 25465                           ;incstack = 0
 25466 ;; hardware stack exceeded
 25467  0184D2  0EFA               	movlw	-6
 25468  0184D4  50E3               	movf	plusw1,w,c
 25469  0184D6  B4D8               	btfsc	status,2,c
 25470  0184D8  D01D               	goto	l9805
 25471                           
 25472                           ;stkvar	_val @ sp[(-5)+-5]
 25473  0184DA  0EF9               	movlw	-7
 25474  0184DC  AEE3               	btfss	plusw1,7,c
 25475  0184DE  D01A               	goto	l9805
 25476                           
 25477                           ;stkvar	_val @ sp[(-5)+-5]
 25478  0184E0  0EF6               	movlw	-10
 25479  0184E2  006F FF8C  F009    	movff	plusw1,btemp+8
 25480  0184E8  0EF7               	movlw	-9
 25481  0184EA  006F FF8C  F00A    	movff	plusw1,btemp+9
 25482  0184F0  0EF8               	movlw	-8
 25483  0184F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25484  0184F8  0EF9               	movlw	-7
 25485  0184FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25486  018500  1E09               	comf	(btemp+8)^0,f,c
 25487  018502  1E0A               	comf	(btemp+9)^0,f,c
 25488  018504  1E0B               	comf	(btemp+10)^0,f,c
 25489  018506  1E0C               	comf	(btemp+11)^0,f,c
 25490  018508  2A09               	incf	(btemp+8)^0,f,c
 25491  01850A  0E00               	movlw	0
 25492  01850C  220A               	addwfc	(btemp+9)^0,f,c
 25493  01850E  220B               	addwfc	(btemp+10)^0,f,c
 25494  018510  220C               	addwfc	(btemp+11)^0,f,c
 25495  018512  D010               	goto	L31
 25496  018514                     l9805:
 25497                           
 25498                           ;stkvar	_val @ sp[(-5)+-5]
 25499  018514  0EF6               	movlw	-10
 25500  018516  006F FF8C  F009    	movff	plusw1,btemp+8
 25501  01851C  0EF7               	movlw	-9
 25502  01851E  006F FF8C  F00A    	movff	plusw1,btemp+9
 25503  018524  0EF8               	movlw	-8
 25504  018526  006F FF8C  F00B    	movff	plusw1,btemp+10
 25505  01852C  0EF9               	movlw	-7
 25506  01852E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25507  018534                     L31:
 25508                           
 25509                           ;stkvar	_arg @ sp[(-5)+0]
 25510  018534  0EFB               	movlw	-5
 25511  018536  0060  F027  FFE3   	movff	btemp+8,plusw1
 25512  01853C  0EFC               	movlw	-4
 25513  01853E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25514  018544  0EFD               	movlw	-3
 25515  018546  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25516  01854C  0EFE               	movlw	-2
 25517  01854E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25518                           
 25519                           ;stkvar	_val @ sp[(-5)+-5]
 25520  018554  0EF6               	movlw	-10
 25521  018556  50E3               	movf	plusw1,w,c
 25522  018558  E113               	bnz	l9813
 25523  01855A  0EF7               	movlw	-9
 25524  01855C  50E3               	movf	plusw1,w,c
 25525  01855E  E110               	bnz	l9813
 25526  018560  0EF8               	movlw	-8
 25527  018562  50E3               	movf	plusw1,w,c
 25528  018564  E10D               	bnz	l9813
 25529  018566  0EF9               	movlw	-7
 25530  018568  50E3               	movf	plusw1,w,c
 25531  01856A  A4D8               	btfss	status,2,c
 25532  01856C  D009               	goto	l9813
 25533  01856E  0E00               	movlw	0
 25534  018570  6E01               	movwf	btemp^0,c
 25535  018572  0E00               	movlw	0
 25536  018574  6E02               	movwf	(btemp+1)^0,c
 25537  018576  0E00               	movlw	0
 25538  018578  6E03               	movwf	(btemp+2)^0,c
 25539  01857A  0E00               	movlw	0
 25540  01857C  6E04               	movwf	(btemp+3)^0,c
 25541  01857E  D0A2               	goto	l3136
 25542  018580                     l9813:
 25543  018580  0E96               	movlw	150
 25544  018582  6E0C               	movwf	(btemp+11)^0,c
 25545                           
 25546                           ;stkvar	_exp @ sp[(-5)+4]
 25547  018584  0EFF               	movlw	-1
 25548  018586  0060  F033  FFE3   	movff	btemp+11,plusw1
 25549  01858C  D00B               	goto	l9817
 25550  01858E                     l9815:
 25551                           
 25552                           ;stkvar	_exp @ sp[(-5)+4]
 25553  01858E  0EFF               	movlw	-1
 25554  018590  2AE3               	incf	plusw1,f,c
 25555                           
 25556                           ;stkvar	_arg @ sp[(-5)+0]
 25557  018592  90D8               	bcf	status,0,c
 25558  018594  0EFE               	movlw	-2
 25559  018596  32E3               	rrcf	plusw1,f,c
 25560  018598  0EFD               	movlw	-3
 25561  01859A  32E3               	rrcf	plusw1,f,c
 25562  01859C  0EFC               	movlw	-4
 25563  01859E  32E3               	rrcf	plusw1,f,c
 25564  0185A0  0EFB               	movlw	-5
 25565  0185A2  32E3               	rrcf	plusw1,f,c
 25566  0185A4                     l9817:
 25567                           
 25568                           ;stkvar	_arg @ sp[(-5)+0]
 25569  0185A4  50E1               	movf	fsr1l,w,c
 25570  0185A6  0FFB               	addlw	-5
 25571  0185A8  6ED9               	movwf	fsr2l,c
 25572  0185AA  50E2               	movf	fsr1h,w,c
 25573  0185AC  6EDA               	movwf	fsr2h,c
 25574  0185AE  0EFF               	movlw	255
 25575  0185B0  22DA               	addwfc	fsr2h,f,c
 25576  0185B2  52DE               	movf	postinc2,f,c
 25577  0185B4  52DE               	movf	postinc2,f,c
 25578  0185B6  52DE               	movf	postinc2,f,c
 25579  0185B8  0EFE               	movlw	254
 25580  0185BA  14DD               	andwf	postdec2,w,c
 25581  0185BC  B4D8               	btfsc	status,2,c
 25582  0185BE  D018               	goto	l9825
 25583  0185C0  D7E6               	goto	l9815
 25584  0185C2                     l9819:
 25585                           
 25586                           ;stkvar	_exp @ sp[(-5)+4]
 25587  0185C2  0EFF               	movlw	-1
 25588  0185C4  2AE3               	incf	plusw1,f,c
 25589                           
 25590                           ;stkvar	_arg @ sp[(-5)+0]
 25591  0185C6  50E1               	movf	fsr1l,w,c
 25592  0185C8  0FFB               	addlw	-5
 25593  0185CA  6ED9               	movwf	fsr2l,c
 25594  0185CC  50E2               	movf	fsr1h,w,c
 25595  0185CE  6EDA               	movwf	fsr2h,c
 25596  0185D0  0EFF               	movlw	255
 25597  0185D2  22DA               	addwfc	fsr2h,f,c
 25598  0185D4  2ADE               	incf	postinc2,f,c
 25599  0185D6  0E00               	movlw	0
 25600  0185D8  22DE               	addwfc	postinc2,f,c
 25601  0185DA  22DE               	addwfc	postinc2,f,c
 25602  0185DC  22DE               	addwfc	postinc2,f,c
 25603                           
 25604                           ;stkvar	_arg @ sp[(-5)+0]
 25605  0185DE  90D8               	bcf	status,0,c
 25606  0185E0  0EFE               	movlw	-2
 25607  0185E2  32E3               	rrcf	plusw1,f,c
 25608  0185E4  0EFD               	movlw	-3
 25609  0185E6  32E3               	rrcf	plusw1,f,c
 25610  0185E8  0EFC               	movlw	-4
 25611  0185EA  32E3               	rrcf	plusw1,f,c
 25612  0185EC  0EFB               	movlw	-5
 25613  0185EE  32E3               	rrcf	plusw1,f,c
 25614  0185F0                     l9825:
 25615                           
 25616                           ;stkvar	_arg @ sp[(-5)+0]
 25617  0185F0  50E1               	movf	fsr1l,w,c
 25618  0185F2  0FFB               	addlw	-5
 25619  0185F4  6ED9               	movwf	fsr2l,c
 25620  0185F6  50E2               	movf	fsr1h,w,c
 25621  0185F8  6EDA               	movwf	fsr2h,c
 25622  0185FA  0EFF               	movlw	255
 25623  0185FC  22DA               	addwfc	fsr2h,f,c
 25624  0185FE  52DE               	movf	postinc2,f,c
 25625  018600  52DE               	movf	postinc2,f,c
 25626  018602  52DE               	movf	postinc2,f,c
 25627  018604  0EFF               	movlw	255
 25628  018606  14DD               	andwf	postdec2,w,c
 25629  018608  B4D8               	btfsc	status,2,c
 25630  01860A  D00C               	goto	l9829
 25631  01860C  D7DA               	goto	l9819
 25632  01860E                     l9827:
 25633                           
 25634                           ;stkvar	_exp @ sp[(-5)+4]
 25635  01860E  0EFF               	movlw	-1
 25636  018610  06E3               	decf	plusw1,f,c
 25637                           
 25638                           ;stkvar	_arg @ sp[(-5)+0]
 25639  018612  90D8               	bcf	status,0,c
 25640  018614  0EFB               	movlw	-5
 25641  018616  36E3               	rlcf	plusw1,f,c
 25642  018618  0EFC               	movlw	-4
 25643  01861A  36E3               	rlcf	plusw1,f,c
 25644  01861C  0EFD               	movlw	-3
 25645  01861E  36E3               	rlcf	plusw1,f,c
 25646  018620  0EFE               	movlw	-2
 25647  018622  36E3               	rlcf	plusw1,f,c
 25648  018624                     l9829:
 25649                           
 25650                           ;stkvar	_arg @ sp[(-5)+0]
 25651  018624  0EFD               	movlw	-3
 25652  018626  BEE3               	btfsc	plusw1,7,c
 25653  018628  D007               	goto	u9110
 25654                           
 25655                           ;stkvar	_exp @ sp[(-5)+4]
 25656  01862A  0EFF               	movlw	-1
 25657  01862C  006F FF8C  F001    	movff	plusw1,btemp
 25658  018632  0E02               	movlw	2
 25659  018634  6001               	cpfslt	btemp^0,c
 25660  018636  D7EB               	goto	l9827
 25661  018638                     u9110:
 25662                           
 25663                           ;stkvar	_exp @ sp[(-5)+4]
 25664  018638  0EFF               	movlw	-1
 25665  01863A  B0E3               	btfsc	plusw1,0,c
 25666  01863C  D002               	goto	l9837
 25667                           
 25668                           ;stkvar	_arg @ sp[(-5)+0]
 25669  01863E  0EFD               	movlw	-3
 25670  018640  9EE3               	bcf	plusw1,7,c
 25671  018642                     l9837:
 25672                           
 25673                           ;stkvar	_exp @ sp[(-5)+4]
 25674  018642  50E1               	movf	fsr1l,w,c
 25675  018644  0FFF               	addlw	-1
 25676  018646  6ED9               	movwf	fsr2l,c
 25677  018648  50E2               	movf	fsr1h,w,c
 25678  01864A  6EDA               	movwf	fsr2h,c
 25679  01864C  0EFF               	movlw	255
 25680  01864E  22DA               	addwfc	fsr2h,f,c
 25681  018650  90D8               	bcf	status,0,c
 25682  018652  32DF               	rrcf	indf2,f,c
 25683                           
 25684                           ;stkvar	_exp @ sp[(-5)+4]
 25685  018654  0EFF               	movlw	-1
 25686  018656  006F FF8C  F00C    	movff	plusw1,btemp+11
 25687  01865C  0060  F030  F005   	movff	btemp+11,btemp+4
 25688  018662  6A06               	clrf	(btemp+5)^0,c
 25689  018664  6A07               	clrf	(btemp+6)^0,c
 25690  018666  6A08               	clrf	(btemp+7)^0,c
 25691  018668  0060  F014  F008   	movff	btemp+4,btemp+7
 25692  01866E  6A07               	clrf	(btemp+6)^0,c
 25693  018670  6A06               	clrf	(btemp+5)^0,c
 25694  018672  6A05               	clrf	(btemp+4)^0,c
 25695                           
 25696                           ;stkvar	_arg @ sp[(-5)+0]
 25697  018674  50E1               	movf	fsr1l,w,c
 25698  018676  0FFB               	addlw	-5
 25699  018678  6ED9               	movwf	fsr2l,c
 25700  01867A  50E2               	movf	fsr1h,w,c
 25701  01867C  6EDA               	movwf	fsr2h,c
 25702  01867E  0EFF               	movlw	255
 25703  018680  22DA               	addwfc	fsr2h,f,c
 25704  018682  5005               	movf	(btemp+4)^0,w,c
 25705  018684  12DE               	iorwf	postinc2,f,c
 25706  018686  5006               	movf	(btemp+5)^0,w,c
 25707  018688  12DE               	iorwf	postinc2,f,c
 25708  01868A  5007               	movf	(btemp+6)^0,w,c
 25709  01868C  12DE               	iorwf	postinc2,f,c
 25710  01868E  5008               	movf	(btemp+7)^0,w,c
 25711  018690  12DE               	iorwf	postinc2,f,c
 25712                           
 25713                           ;stkvar	_sign @ sp[(-5)+-1]
 25714  018692  0EFA               	movlw	-6
 25715  018694  50E3               	movf	plusw1,w,c
 25716  018696  B4D8               	btfsc	status,2,c
 25717  018698  D005               	goto	l9847
 25718                           
 25719                           ;stkvar	_val @ sp[(-5)+-5]
 25720  01869A  0EF9               	movlw	-7
 25721  01869C  AEE3               	btfss	plusw1,7,c
 25722  01869E  D002               	goto	l9847
 25723                           
 25724                           ;stkvar	_arg @ sp[(-5)+0]
 25725  0186A0  0EFE               	movlw	-2
 25726  0186A2  8EE3               	bsf	plusw1,7,c
 25727  0186A4                     l9847:
 25728                           
 25729                           ;stkvar	_arg @ sp[(-5)+0]
 25730  0186A4  0EFB               	movlw	-5
 25731  0186A6  006F FF8C  F001    	movff	plusw1,btemp
 25732  0186AC  0EFC               	movlw	-4
 25733  0186AE  006F FF8C  F002    	movff	plusw1,btemp+1
 25734  0186B4  0EFD               	movlw	-3
 25735  0186B6  006F FF8C  F003    	movff	plusw1,btemp+2
 25736  0186BC  0EFE               	movlw	-2
 25737  0186BE  006F FF8C  F004    	movff	plusw1,btemp+3
 25738  0186C4                     l3136:
 25739                           
 25740                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 25741  0186C4  0EF6               	movlw	246
 25742  0186C6  26E1               	addwf	fsr1l,f,c
 25743  0186C8  0EFF               	movlw	255
 25744  0186CA  22E2               	addwfc	fsr1h,f,c
 25745  0186CC  0012               	return		;funcret
 25746  0186CE                     __end_of___xxtofl:
 25747                           	opt callstack 0
 25748                           
 25749 ;; *************** function ___fldiv *****************
 25750 ;; Defined at:
 25751 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 25752 ;; Parameters:    Size  Location     Type
 25753 ;;  b               4  [STACK] unsigned char 
 25754 ;;  a               4  [STACK] unsigned char 
 25755 ;; Auto vars:     Size  Location     Type
 25756 ;;  grs             4  [STACK] unsigned long 
 25757 ;;  rem             4  [STACK] unsigned long 
 25758 ;;  new_exp         2  [STACK] short 
 25759 ;;  aexp            1  [STACK] unsigned char 
 25760 ;;  bexp            1  [STACK] unsigned char 
 25761 ;;  sign            1  [STACK] unsigned char 
 25762 ;; Return value:  Size  Location     Type
 25763 ;;                  4  [STACK] unsigned char 
 25764 ;; Registers used:
 25765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 25766 ;; Tracked objects:
 25767 ;;		On entry : 0/0
 25768 ;;		On exit  : 0/0
 25769 ;;		Unchanged: 0/0
 25770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25775 ;;Total ram usage:        0 bytes
 25776 ;; Hardware stack levels used:    1
 25777 ;; Hardware stack levels required when called:   15
 25778 ;; This function calls:
 25779 ;;		Nothing
 25780 ;; This function is called by:
 25781 ;;		_conv_raw_result
 25782 ;;		_convert_dac_raw
 25783 ;;		_calc_bsoc
 25784 ;;		_init_bsoc
 25785 ;;		_esr_check
 25786 ;;		_efgtoa
 25787 ;; This function uses a reentrant model
 25788 ;;
 25789                           
 25790                           	psect	text105
 25791  014DB0                     __ptext105:
 25792                           	opt callstack 0
 25793  014DB0                     ___fldiv:
 25794                           	opt callstack 0
 25795                           
 25796                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25797  014DB0  0E0D               	movlw	13
 25798  014DB2  26E1               	addwf	fsr1l,f,c
 25799  014DB4  0E00               	movlw	0
 25800  014DB6  22E2               	addwfc	fsr1h,f,c
 25801                           
 25802                           ;stkvar	_b @ sp[(-13)+-4]
 25803                           
 25804                           ;incstack = 0
 25805 ;; hardware stack exceeded
 25806  014DB8  0EF2               	movlw	242
 25807  014DBA  24E1               	addwf	fsr1l,w,c
 25808  014DBC  6ED9               	movwf	fsr2l,c
 25809  014DBE  0EFF               	movlw	255
 25810  014DC0  20E2               	addwfc	fsr1h,w,c
 25811  014DC2  6EDA               	movwf	fsr2h,c
 25812  014DC4  50DF               	movf	indf2,w,c
 25813  014DC6  6E0C               	movwf	(btemp+11)^0,c
 25814  014DC8  0E80               	movlw	128
 25815  014DCA  160C               	andwf	(btemp+11)^0,f,c
 25816                           
 25817                           ;stkvar	_sign @ sp[(-13)+12]
 25818  014DCC  0EFF               	movlw	-1
 25819  014DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25820                           
 25821                           ;stkvar	_b @ sp[(-13)+-4]
 25822  014DD4  0EF2               	movlw	242
 25823  014DD6  24E1               	addwf	fsr1l,w,c
 25824  014DD8  6ED9               	movwf	fsr2l,c
 25825  014DDA  0EFF               	movlw	255
 25826  014DDC  20E2               	addwfc	fsr1h,w,c
 25827  014DDE  6EDA               	movwf	fsr2h,c
 25828  014DE0  50DF               	movf	indf2,w,c
 25829  014DE2  6E0C               	movwf	(btemp+11)^0,c
 25830  014DE4  90D8               	bcf	status,0,c
 25831  014DE6  340C               	rlcf	(btemp+11)^0,w,c
 25832  014DE8  6E0B               	movwf	(btemp+10)^0,c
 25833                           
 25834                           ;stkvar	_bexp @ sp[(-13)+11]
 25835  014DEA  0EFE               	movlw	-2
 25836  014DEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25837                           
 25838                           ;stkvar	_b @ sp[(-13)+-4]
 25839  014DF2  0EF1               	movlw	241
 25840  014DF4  24E1               	addwf	fsr1l,w,c
 25841  014DF6  6ED9               	movwf	fsr2l,c
 25842  014DF8  0EFF               	movlw	255
 25843  014DFA  20E2               	addwfc	fsr1h,w,c
 25844  014DFC  6EDA               	movwf	fsr2h,c
 25845  014DFE  AEDF               	btfss	indf2,7,c
 25846  014E00  D002               	goto	l8377
 25847                           
 25848                           ;stkvar	_bexp @ sp[(-13)+11]
 25849  014E02  0EFE               	movlw	-2
 25850  014E04  80E3               	bsf	plusw1,0,c
 25851  014E06                     l8377:
 25852                           
 25853                           ;stkvar	_bexp @ sp[(-13)+11]
 25854  014E06  0EFE               	movlw	-2
 25855  014E08  50E3               	movf	plusw1,w,c
 25856  014E0A  B4D8               	btfsc	status,2,c
 25857  014E0C  D027               	goto	l8387
 25858                           
 25859                           ;stkvar	_bexp @ sp[(-13)+11]
 25860  014E0E  0EFE               	movlw	-2
 25861  014E10  28E3               	incf	plusw1,w,c
 25862  014E12  A4D8               	btfss	status,2,c
 25863  014E14  D018               	goto	l8383
 25864  014E16  0E00               	movlw	0
 25865  014E18  6E09               	movwf	(btemp+8)^0,c
 25866  014E1A  0E00               	movlw	0
 25867  014E1C  6E0A               	movwf	(btemp+9)^0,c
 25868  014E1E  0E00               	movlw	0
 25869  014E20  6E0B               	movwf	(btemp+10)^0,c
 25870  014E22  0E00               	movlw	0
 25871  014E24  6E0C               	movwf	(btemp+11)^0,c
 25872                           
 25873                           ;stkvar	_b @ sp[(-13)+-4]
 25874  014E26  0EEF               	movlw	-17
 25875  014E28  0060  F027  FFE3   	movff	btemp+8,plusw1
 25876  014E2E  0EF0               	movlw	-16
 25877  014E30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25878  014E36  0EF1               	movlw	-15
 25879  014E38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25880  014E3E  0EF2               	movlw	-14
 25881  014E40  0060  F033  FFE3   	movff	btemp+11,plusw1
 25882  014E46                     l8383:
 25883                           
 25884                           ;stkvar	_b @ sp[(-13)+-4]
 25885  014E46  0EF1               	movlw	-15
 25886  014E48  8EE3               	bsf	plusw1,7,c
 25887                           
 25888                           ;stkvar	_b @ sp[(-13)+-4]
 25889  014E4A  0EF2               	movlw	242
 25890  014E4C  24E1               	addwf	fsr1l,w,c
 25891  014E4E  6ED9               	movwf	fsr2l,c
 25892  014E50  0EFF               	movlw	255
 25893  014E52  20E2               	addwfc	fsr1h,w,c
 25894  014E54  6EDA               	movwf	fsr2h,c
 25895  014E56  0E00               	movlw	0
 25896  014E58  6EDF               	movwf	indf2,c
 25897  014E5A  D018               	goto	l8389
 25898  014E5C                     l8387:
 25899  014E5C  0E00               	movlw	0
 25900  014E5E  6E09               	movwf	(btemp+8)^0,c
 25901  014E60  0E00               	movlw	0
 25902  014E62  6E0A               	movwf	(btemp+9)^0,c
 25903  014E64  0E00               	movlw	0
 25904  014E66  6E0B               	movwf	(btemp+10)^0,c
 25905  014E68  0E00               	movlw	0
 25906  014E6A  6E0C               	movwf	(btemp+11)^0,c
 25907                           
 25908                           ;stkvar	_b @ sp[(-13)+-4]
 25909  014E6C  0EEF               	movlw	-17
 25910  014E6E  0060  F027  FFE3   	movff	btemp+8,plusw1
 25911  014E74  0EF0               	movlw	-16
 25912  014E76  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25913  014E7C  0EF1               	movlw	-15
 25914  014E7E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25915  014E84  0EF2               	movlw	-14
 25916  014E86  0060  F033  FFE3   	movff	btemp+11,plusw1
 25917  014E8C                     l8389:
 25918                           
 25919                           ;stkvar	_a @ sp[(-13)+-8]
 25920  014E8C  0EEE               	movlw	238
 25921  014E8E  24E1               	addwf	fsr1l,w,c
 25922  014E90  6ED9               	movwf	fsr2l,c
 25923  014E92  0EFF               	movlw	255
 25924  014E94  20E2               	addwfc	fsr1h,w,c
 25925  014E96  6EDA               	movwf	fsr2h,c
 25926  014E98  50DF               	movf	indf2,w,c
 25927  014E9A  6E0C               	movwf	(btemp+11)^0,c
 25928  014E9C  0E80               	movlw	128
 25929  014E9E  160C               	andwf	(btemp+11)^0,f,c
 25930                           
 25931                           ;stkvar	_sign @ sp[(-13)+12]
 25932  014EA0  50E1               	movf	fsr1l,w,c
 25933  014EA2  0FFF               	addlw	-1
 25934  014EA4  6ED9               	movwf	fsr2l,c
 25935  014EA6  50E2               	movf	fsr1h,w,c
 25936  014EA8  6EDA               	movwf	fsr2h,c
 25937  014EAA  0EFF               	movlw	255
 25938  014EAC  22DA               	addwfc	fsr2h,f,c
 25939  014EAE  500C               	movf	(btemp+11)^0,w,c
 25940  014EB0  1ADF               	xorwf	indf2,f,c
 25941                           
 25942                           ;stkvar	_a @ sp[(-13)+-8]
 25943  014EB2  0EEE               	movlw	238
 25944  014EB4  24E1               	addwf	fsr1l,w,c
 25945  014EB6  6ED9               	movwf	fsr2l,c
 25946  014EB8  0EFF               	movlw	255
 25947  014EBA  20E2               	addwfc	fsr1h,w,c
 25948  014EBC  6EDA               	movwf	fsr2h,c
 25949  014EBE  50DF               	movf	indf2,w,c
 25950  014EC0  6E0C               	movwf	(btemp+11)^0,c
 25951  014EC2  90D8               	bcf	status,0,c
 25952  014EC4  340C               	rlcf	(btemp+11)^0,w,c
 25953  014EC6  6E0B               	movwf	(btemp+10)^0,c
 25954                           
 25955                           ;stkvar	_aexp @ sp[(-13)+10]
 25956  014EC8  0EFD               	movlw	-3
 25957  014ECA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25958                           
 25959                           ;stkvar	_a @ sp[(-13)+-8]
 25960  014ED0  0EED               	movlw	237
 25961  014ED2  24E1               	addwf	fsr1l,w,c
 25962  014ED4  6ED9               	movwf	fsr2l,c
 25963  014ED6  0EFF               	movlw	255
 25964  014ED8  20E2               	addwfc	fsr1h,w,c
 25965  014EDA  6EDA               	movwf	fsr2h,c
 25966  014EDC  AEDF               	btfss	indf2,7,c
 25967  014EDE  D002               	goto	l8397
 25968                           
 25969                           ;stkvar	_aexp @ sp[(-13)+10]
 25970  014EE0  0EFD               	movlw	-3
 25971  014EE2  80E3               	bsf	plusw1,0,c
 25972  014EE4                     l8397:
 25973                           
 25974                           ;stkvar	_aexp @ sp[(-13)+10]
 25975  014EE4  0EFD               	movlw	-3
 25976  014EE6  50E3               	movf	plusw1,w,c
 25977  014EE8  B4D8               	btfsc	status,2,c
 25978  014EEA  D027               	goto	l8407
 25979                           
 25980                           ;stkvar	_aexp @ sp[(-13)+10]
 25981  014EEC  0EFD               	movlw	-3
 25982  014EEE  28E3               	incf	plusw1,w,c
 25983  014EF0  A4D8               	btfss	status,2,c
 25984  014EF2  D018               	goto	l8403
 25985  014EF4  0E00               	movlw	0
 25986  014EF6  6E09               	movwf	(btemp+8)^0,c
 25987  014EF8  0E00               	movlw	0
 25988  014EFA  6E0A               	movwf	(btemp+9)^0,c
 25989  014EFC  0E00               	movlw	0
 25990  014EFE  6E0B               	movwf	(btemp+10)^0,c
 25991  014F00  0E00               	movlw	0
 25992  014F02  6E0C               	movwf	(btemp+11)^0,c
 25993                           
 25994                           ;stkvar	_a @ sp[(-13)+-8]
 25995  014F04  0EEB               	movlw	-21
 25996  014F06  0060  F027  FFE3   	movff	btemp+8,plusw1
 25997  014F0C  0EEC               	movlw	-20
 25998  014F0E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25999  014F14  0EED               	movlw	-19
 26000  014F16  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26001  014F1C  0EEE               	movlw	-18
 26002  014F1E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26003  014F24                     l8403:
 26004                           
 26005                           ;stkvar	_a @ sp[(-13)+-8]
 26006  014F24  0EED               	movlw	-19
 26007  014F26  8EE3               	bsf	plusw1,7,c
 26008                           
 26009                           ;stkvar	_a @ sp[(-13)+-8]
 26010  014F28  0EEE               	movlw	238
 26011  014F2A  24E1               	addwf	fsr1l,w,c
 26012  014F2C  6ED9               	movwf	fsr2l,c
 26013  014F2E  0EFF               	movlw	255
 26014  014F30  20E2               	addwfc	fsr1h,w,c
 26015  014F32  6EDA               	movwf	fsr2h,c
 26016  014F34  0E00               	movlw	0
 26017  014F36  6EDF               	movwf	indf2,c
 26018  014F38  D018               	goto	l8409
 26019  014F3A                     l8407:
 26020  014F3A  0E00               	movlw	0
 26021  014F3C  6E09               	movwf	(btemp+8)^0,c
 26022  014F3E  0E00               	movlw	0
 26023  014F40  6E0A               	movwf	(btemp+9)^0,c
 26024  014F42  0E00               	movlw	0
 26025  014F44  6E0B               	movwf	(btemp+10)^0,c
 26026  014F46  0E00               	movlw	0
 26027  014F48  6E0C               	movwf	(btemp+11)^0,c
 26028                           
 26029                           ;stkvar	_a @ sp[(-13)+-8]
 26030  014F4A  0EEB               	movlw	-21
 26031  014F4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26032  014F52  0EEC               	movlw	-20
 26033  014F54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26034  014F5A  0EED               	movlw	-19
 26035  014F5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26036  014F62  0EEE               	movlw	-18
 26037  014F64  0060  F033  FFE3   	movff	btemp+11,plusw1
 26038  014F6A                     l8409:
 26039                           
 26040                           ;stkvar	_a @ sp[(-13)+-8]
 26041  014F6A  0EEB               	movlw	-21
 26042  014F6C  50E3               	movf	plusw1,w,c
 26043  014F6E  E139               	bnz	l8421
 26044  014F70  0EEC               	movlw	-20
 26045  014F72  50E3               	movf	plusw1,w,c
 26046  014F74  E136               	bnz	l8421
 26047  014F76  0EED               	movlw	-19
 26048  014F78  50E3               	movf	plusw1,w,c
 26049  014F7A  E133               	bnz	l8421
 26050  014F7C  0EEE               	movlw	-18
 26051  014F7E  50E3               	movf	plusw1,w,c
 26052  014F80  A4D8               	btfss	status,2,c
 26053  014F82  D02F               	goto	l8421
 26054                           
 26055                           ;stkvar	_b @ sp[(-13)+-4]
 26056  014F84  0EEF               	movlw	-17
 26057  014F86  6AE3               	clrf	plusw1,c
 26058  014F88  0EF0               	movlw	-16
 26059  014F8A  6AE3               	clrf	plusw1,c
 26060  014F8C  0EF1               	movlw	-15
 26061  014F8E  6AE3               	clrf	plusw1,c
 26062  014F90  0EF2               	movlw	-14
 26063  014F92  6AE3               	clrf	plusw1,c
 26064                           
 26065                           ;stkvar	_b @ sp[(-13)+-4]
 26066  014F94  0EF1               	movlw	241
 26067  014F96  24E1               	addwf	fsr1l,w,c
 26068  014F98  6ED9               	movwf	fsr2l,c
 26069  014F9A  0EFF               	movlw	255
 26070  014F9C  20E2               	addwfc	fsr1h,w,c
 26071  014F9E  6EDA               	movwf	fsr2h,c
 26072  014FA0  0E80               	movlw	128
 26073  014FA2  12DE               	iorwf	postinc2,f,c
 26074  014FA4  0E7F               	movlw	127
 26075  014FA6  12DD               	iorwf	postdec2,f,c
 26076  014FA8                     l8415:
 26077                           
 26078                           ;stkvar	_sign @ sp[(-13)+12]
 26079  014FA8  0EFF               	movlw	-1
 26080  014FAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26081                           
 26082                           ;stkvar	_b @ sp[(-13)+-4]
 26083  014FB0  0EF2               	movlw	242
 26084  014FB2  24E1               	addwf	fsr1l,w,c
 26085  014FB4  6ED9               	movwf	fsr2l,c
 26086  014FB6  0EFF               	movlw	255
 26087  014FB8  20E2               	addwfc	fsr1h,w,c
 26088  014FBA  6EDA               	movwf	fsr2h,c
 26089  014FBC  500C               	movf	(btemp+11)^0,w,c
 26090  014FBE  12DF               	iorwf	indf2,f,c
 26091                           
 26092                           ;stkvar	_b @ sp[(-13)+-4]
 26093  014FC0  0EEF               	movlw	-17
 26094  014FC2  006F FF8C  F001    	movff	plusw1,btemp
 26095  014FC8  0EF0               	movlw	-16
 26096  014FCA  006F FF8C  F002    	movff	plusw1,btemp+1
 26097  014FD0  0EF1               	movlw	-15
 26098  014FD2  006F FF8C  F003    	movff	plusw1,btemp+2
 26099  014FD8  0EF2               	movlw	-14
 26100  014FDA  006F FF8C  F004    	movff	plusw1,btemp+3
 26101  014FE0  D19F               	goto	l3060
 26102  014FE2                     l8421:
 26103                           
 26104                           ;stkvar	_bexp @ sp[(-13)+11]
 26105  014FE2  0EFE               	movlw	-2
 26106  014FE4  50E3               	movf	plusw1,w,c
 26107  014FE6  A4D8               	btfss	status,2,c
 26108  014FE8  D009               	goto	l8429
 26109  014FEA  0E00               	movlw	0
 26110  014FEC  6E01               	movwf	btemp^0,c
 26111  014FEE  0E00               	movlw	0
 26112  014FF0  6E02               	movwf	(btemp+1)^0,c
 26113  014FF2  0E00               	movlw	0
 26114  014FF4  6E03               	movwf	(btemp+2)^0,c
 26115  014FF6  0E00               	movlw	0
 26116  014FF8  6E04               	movwf	(btemp+3)^0,c
 26117  014FFA  D192               	goto	l3060
 26118  014FFC                     l8429:
 26119                           
 26120                           ;stkvar	_bexp @ sp[(-13)+11]
 26121  014FFC  0EFE               	movlw	-2
 26122  014FFE  50E3               	movf	plusw1,w,c
 26123  015000  6E0B               	movwf	(btemp+10)^0,c
 26124  015002  6A0C               	clrf	(btemp+11)^0,c
 26125                           
 26126                           ;stkvar	_aexp @ sp[(-13)+10]
 26127  015004  0EFD               	movlw	-3
 26128  015006  50E3               	movf	plusw1,w,c
 26129  015008  5E0B               	subwf	(btemp+10)^0,f,c
 26130  01500A  0E00               	movlw	0
 26131  01500C  5A0C               	subwfb	(btemp+11)^0,f,c
 26132  01500E  0E7F               	movlw	127
 26133  015010  260B               	addwf	(btemp+10)^0,f,c
 26134  015012  0E00               	movlw	0
 26135  015014  220C               	addwfc	(btemp+11)^0,f,c
 26136                           
 26137                           ;stkvar	_new_exp @ sp[(-13)+8]
 26138  015016  0EFB               	movlw	-5
 26139  015018  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26140  01501E  0EFC               	movlw	-4
 26141  015020  0060  F033  FFE3   	movff	btemp+11,plusw1
 26142                           
 26143                           ;stkvar	_b @ sp[(-13)+-4]
 26144  015026  0EEF               	movlw	-17
 26145  015028  006F FF8C  F009    	movff	plusw1,btemp+8
 26146  01502E  0EF0               	movlw	-16
 26147  015030  006F FF8C  F00A    	movff	plusw1,btemp+9
 26148  015036  0EF1               	movlw	-15
 26149  015038  006F FF8C  F00B    	movff	plusw1,btemp+10
 26150  01503E  0EF2               	movlw	-14
 26151  015040  006F FF8C  F00C    	movff	plusw1,btemp+11
 26152                           
 26153                           ;stkvar	_rem @ sp[(-13)+4]
 26154  015046  0EF7               	movlw	-9
 26155  015048  0060  F027  FFE3   	movff	btemp+8,plusw1
 26156  01504E  0EF8               	movlw	-8
 26157  015050  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26158  015056  0EF9               	movlw	-7
 26159  015058  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26160  01505E  0EFA               	movlw	-6
 26161  015060  0060  F033  FFE3   	movff	btemp+11,plusw1
 26162                           
 26163                           ;stkvar	_b @ sp[(-13)+-4]
 26164  015066  0EEF               	movlw	-17
 26165  015068  6AE3               	clrf	plusw1,c
 26166  01506A  0EF0               	movlw	-16
 26167  01506C  6AE3               	clrf	plusw1,c
 26168  01506E  0EF1               	movlw	-15
 26169  015070  6AE3               	clrf	plusw1,c
 26170  015072  0EF2               	movlw	-14
 26171  015074  6AE3               	clrf	plusw1,c
 26172                           
 26173                           ;stkvar	_grs @ sp[(-13)+0]
 26174  015076  0EF3               	movlw	-13
 26175  015078  6AE3               	clrf	plusw1,c
 26176  01507A  0EF4               	movlw	-12
 26177  01507C  6AE3               	clrf	plusw1,c
 26178  01507E  0EF5               	movlw	-11
 26179  015080  6AE3               	clrf	plusw1,c
 26180  015082  0EF6               	movlw	-10
 26181  015084  6AE3               	clrf	plusw1,c
 26182                           
 26183                           ;stkvar	_aexp @ sp[(-13)+10]
 26184  015086  0EFD               	movlw	-3
 26185  015088  6AE3               	clrf	plusw1,c
 26186  01508A  D050               	goto	l8457
 26187  01508C                     l8439:
 26188                           
 26189                           ;stkvar	_aexp @ sp[(-13)+10]
 26190  01508C  0EFD               	movlw	-3
 26191  01508E  50E3               	movf	plusw1,w,c
 26192  015090  B4D8               	btfsc	status,2,c
 26193  015092  D020               	goto	l8449
 26194                           
 26195                           ;stkvar	_rem @ sp[(-13)+4]
 26196  015094  90D8               	bcf	status,0,c
 26197  015096  0EF7               	movlw	-9
 26198  015098  36E3               	rlcf	plusw1,f,c
 26199  01509A  0EF8               	movlw	-8
 26200  01509C  36E3               	rlcf	plusw1,f,c
 26201  01509E  0EF9               	movlw	-7
 26202  0150A0  36E3               	rlcf	plusw1,f,c
 26203  0150A2  0EFA               	movlw	-6
 26204  0150A4  36E3               	rlcf	plusw1,f,c
 26205                           
 26206                           ;stkvar	_b @ sp[(-13)+-4]
 26207  0150A6  90D8               	bcf	status,0,c
 26208  0150A8  0EEF               	movlw	-17
 26209  0150AA  36E3               	rlcf	plusw1,f,c
 26210  0150AC  0EF0               	movlw	-16
 26211  0150AE  36E3               	rlcf	plusw1,f,c
 26212  0150B0  0EF1               	movlw	-15
 26213  0150B2  36E3               	rlcf	plusw1,f,c
 26214  0150B4  0EF2               	movlw	-14
 26215  0150B6  36E3               	rlcf	plusw1,f,c
 26216                           
 26217                           ;stkvar	_grs @ sp[(-13)+0]
 26218  0150B8  0EF6               	movlw	-10
 26219  0150BA  AEE3               	btfss	plusw1,7,c
 26220  0150BC  D002               	goto	l8447
 26221                           
 26222                           ;stkvar	_b @ sp[(-13)+-4]
 26223  0150BE  0EEF               	movlw	-17
 26224  0150C0  80E3               	bsf	plusw1,0,c
 26225  0150C2                     l8447:
 26226                           
 26227                           ;stkvar	_grs @ sp[(-13)+0]
 26228  0150C2  90D8               	bcf	status,0,c
 26229  0150C4  0EF3               	movlw	-13
 26230  0150C6  36E3               	rlcf	plusw1,f,c
 26231  0150C8  0EF4               	movlw	-12
 26232  0150CA  36E3               	rlcf	plusw1,f,c
 26233  0150CC  0EF5               	movlw	-11
 26234  0150CE  36E3               	rlcf	plusw1,f,c
 26235  0150D0  0EF6               	movlw	-10
 26236  0150D2  36E3               	rlcf	plusw1,f,c
 26237  0150D4                     l8449:
 26238                           
 26239                           ;stkvar	_a @ sp[(-13)+-8]
 26240                           ;stkvar	_rem @ sp[(-13)+4]
 26241  0150D4  50E1               	movf	fsr1l,w,c
 26242  0150D6  0FF7               	addlw	-9
 26243  0150D8  6ED9               	movwf	fsr2l,c
 26244  0150DA  50E2               	movf	fsr1h,w,c
 26245  0150DC  6EDA               	movwf	fsr2h,c
 26246  0150DE  0EFF               	movlw	255
 26247  0150E0  22DA               	addwfc	fsr2h,f,c
 26248  0150E2  0EEB               	movlw	-21
 26249  0150E4  50E3               	movf	plusw1,w,c
 26250  0150E6  5CDE               	subwf	postinc2,w,c
 26251  0150E8  0EEC               	movlw	-20
 26252  0150EA  50E3               	movf	plusw1,w,c
 26253  0150EC  58DE               	subwfb	postinc2,w,c
 26254  0150EE  0EED               	movlw	-19
 26255  0150F0  50E3               	movf	plusw1,w,c
 26256  0150F2  58DE               	subwfb	postinc2,w,c
 26257  0150F4  0EEE               	movlw	-18
 26258  0150F6  50E3               	movf	plusw1,w,c
 26259  0150F8  58DE               	subwfb	postinc2,w,c
 26260  0150FA  A0D8               	btfss	status,0,c
 26261  0150FC  D015               	goto	l8455
 26262                           
 26263                           ;stkvar	_grs @ sp[(-13)+0]
 26264  0150FE  0EF6               	movlw	-10
 26265  015100  8CE3               	bsf	plusw1,6,c
 26266                           
 26267                           ;stkvar	_a @ sp[(-13)+-8]
 26268                           ;stkvar	_rem @ sp[(-13)+4]
 26269  015102  50E1               	movf	fsr1l,w,c
 26270  015104  0FF7               	addlw	-9
 26271  015106  6ED9               	movwf	fsr2l,c
 26272  015108  50E2               	movf	fsr1h,w,c
 26273  01510A  6EDA               	movwf	fsr2h,c
 26274  01510C  0EFF               	movlw	255
 26275  01510E  22DA               	addwfc	fsr2h,f,c
 26276  015110  0EEB               	movlw	-21
 26277  015112  50E3               	movf	plusw1,w,c
 26278  015114  5EDE               	subwf	postinc2,f,c
 26279  015116  0EEC               	movlw	-20
 26280  015118  50E3               	movf	plusw1,w,c
 26281  01511A  5ADE               	subwfb	postinc2,f,c
 26282  01511C  0EED               	movlw	-19
 26283  01511E  50E3               	movf	plusw1,w,c
 26284  015120  5ADE               	subwfb	postinc2,f,c
 26285  015122  0EEE               	movlw	-18
 26286  015124  50E3               	movf	plusw1,w,c
 26287  015126  5ADE               	subwfb	postinc2,f,c
 26288  015128                     l8455:
 26289                           
 26290                           ;stkvar	_aexp @ sp[(-13)+10]
 26291  015128  0EFD               	movlw	-3
 26292  01512A  2AE3               	incf	plusw1,f,c
 26293  01512C                     l8457:
 26294                           
 26295                           ;stkvar	_aexp @ sp[(-13)+10]
 26296  01512C  0EFD               	movlw	-3
 26297  01512E  006F FF8C  F001    	movff	plusw1,btemp
 26298  015134  0E19               	movlw	25
 26299  015136  6401               	cpfsgt	btemp^0,c
 26300  015138  D7A9               	goto	l8439
 26301                           
 26302                           ;stkvar	_rem @ sp[(-13)+4]
 26303  01513A  0EF7               	movlw	-9
 26304  01513C  50E3               	movf	plusw1,w,c
 26305  01513E  E10A               	bnz	u6700
 26306  015140  0EF8               	movlw	-8
 26307  015142  50E3               	movf	plusw1,w,c
 26308  015144  E107               	bnz	u6700
 26309  015146  0EF9               	movlw	-7
 26310  015148  50E3               	movf	plusw1,w,c
 26311  01514A  E104               	bnz	u6700
 26312  01514C  0EFA               	movlw	-6
 26313  01514E  50E3               	movf	plusw1,w,c
 26314  015150  B4D8               	btfsc	status,2,c
 26315  015152  D024               	goto	l8473
 26316  015154                     u6700:
 26317                           
 26318                           ;stkvar	_grs @ sp[(-13)+0]
 26319  015154  0EF3               	movlw	-13
 26320  015156  80E3               	bsf	plusw1,0,c
 26321  015158  D021               	goto	l8473
 26322  01515A                     l8463:
 26323                           
 26324                           ;stkvar	_b @ sp[(-13)+-4]
 26325  01515A  90D8               	bcf	status,0,c
 26326  01515C  0EEF               	movlw	-17
 26327  01515E  36E3               	rlcf	plusw1,f,c
 26328  015160  0EF0               	movlw	-16
 26329  015162  36E3               	rlcf	plusw1,f,c
 26330  015164  0EF1               	movlw	-15
 26331  015166  36E3               	rlcf	plusw1,f,c
 26332  015168  0EF2               	movlw	-14
 26333  01516A  36E3               	rlcf	plusw1,f,c
 26334                           
 26335                           ;stkvar	_grs @ sp[(-13)+0]
 26336  01516C  0EF6               	movlw	-10
 26337  01516E  AEE3               	btfss	plusw1,7,c
 26338  015170  D002               	goto	l8469
 26339                           
 26340                           ;stkvar	_b @ sp[(-13)+-4]
 26341  015172  0EEF               	movlw	-17
 26342  015174  80E3               	bsf	plusw1,0,c
 26343  015176                     l8469:
 26344                           
 26345                           ;stkvar	_grs @ sp[(-13)+0]
 26346  015176  90D8               	bcf	status,0,c
 26347  015178  0EF3               	movlw	-13
 26348  01517A  36E3               	rlcf	plusw1,f,c
 26349  01517C  0EF4               	movlw	-12
 26350  01517E  36E3               	rlcf	plusw1,f,c
 26351  015180  0EF5               	movlw	-11
 26352  015182  36E3               	rlcf	plusw1,f,c
 26353  015184  0EF6               	movlw	-10
 26354  015186  36E3               	rlcf	plusw1,f,c
 26355                           
 26356                           ;stkvar	_new_exp @ sp[(-13)+8]
 26357  015188  50E1               	movf	fsr1l,w,c
 26358  01518A  0FFB               	addlw	-5
 26359  01518C  6ED9               	movwf	fsr2l,c
 26360  01518E  50E2               	movf	fsr1h,w,c
 26361  015190  6EDA               	movwf	fsr2h,c
 26362  015192  0EFF               	movlw	255
 26363  015194  22DA               	addwfc	fsr2h,f,c
 26364  015196  06DE               	decf	postinc2,f,c
 26365  015198  0E00               	movlw	0
 26366  01519A  5ADD               	subwfb	postdec2,f,c
 26367  01519C                     l8473:
 26368                           
 26369                           ;stkvar	_b @ sp[(-13)+-4]
 26370  01519C  0EF1               	movlw	-15
 26371  01519E  AEE3               	btfss	plusw1,7,c
 26372  0151A0  D7DC               	goto	l8463
 26373                           
 26374                           ;stkvar	_aexp @ sp[(-13)+10]
 26375  0151A2  0EFD               	movlw	-3
 26376  0151A4  6AE3               	clrf	plusw1,c
 26377                           
 26378                           ;stkvar	_grs @ sp[(-13)+0]
 26379  0151A6  0EF6               	movlw	-10
 26380  0151A8  AEE3               	btfss	plusw1,7,c
 26381  0151AA  D020               	goto	l8487
 26382                           
 26383                           ;stkvar	_grs @ sp[(-13)+0]
 26384  0151AC  50E1               	movf	fsr1l,w,c
 26385  0151AE  0FF3               	addlw	-13
 26386  0151B0  6ED9               	movwf	fsr2l,c
 26387  0151B2  50E2               	movf	fsr1h,w,c
 26388  0151B4  6EDA               	movwf	fsr2h,c
 26389  0151B6  0EFF               	movlw	255
 26390  0151B8  22DA               	addwfc	fsr2h,f,c
 26391  0151BA  0EFF               	movlw	255
 26392  0151BC  14DE               	andwf	postinc2,w,c
 26393  0151BE  6E09               	movwf	(btemp+8)^0,c
 26394  0151C0  0EFF               	movlw	255
 26395  0151C2  14DE               	andwf	postinc2,w,c
 26396  0151C4  6E0A               	movwf	(btemp+9)^0,c
 26397  0151C6  0EFF               	movlw	255
 26398  0151C8  14DE               	andwf	postinc2,w,c
 26399  0151CA  6E0B               	movwf	(btemp+10)^0,c
 26400  0151CC  0E7F               	movlw	127
 26401  0151CE  14DE               	andwf	postinc2,w,c
 26402  0151D0  6E0C               	movwf	(btemp+11)^0,c
 26403  0151D2  5009               	movf	(btemp+8)^0,w,c
 26404  0151D4  100A               	iorwf	(btemp+9)^0,w,c
 26405  0151D6  100B               	iorwf	(btemp+10)^0,w,c
 26406  0151D8  100C               	iorwf	(btemp+11)^0,w,c
 26407  0151DA  B4D8               	btfsc	status,2,c
 26408  0151DC  D004               	goto	l8483
 26409  0151DE                     u6740:
 26410                           
 26411                           ;stkvar	_aexp @ sp[(-13)+10]
 26412  0151DE  0EFD               	movlw	-3
 26413  0151E0  6AE3               	clrf	plusw1,c
 26414  0151E2  2AE3               	incf	plusw1,f,c
 26415  0151E4  D003               	goto	l8487
 26416  0151E6                     l8483:
 26417                           
 26418                           ;stkvar	_b @ sp[(-13)+-4]
 26419  0151E6  0EEF               	movlw	-17
 26420  0151E8  B0E3               	btfsc	plusw1,0,c
 26421  0151EA  D7F9               	goto	u6740
 26422  0151EC                     l8487:
 26423                           
 26424                           ;stkvar	_aexp @ sp[(-13)+10]
 26425  0151EC  0EFD               	movlw	-3
 26426  0151EE  50E3               	movf	plusw1,w,c
 26427  0151F0  B4D8               	btfsc	status,2,c
 26428  0151F2  D036               	goto	l8497
 26429                           
 26430                           ;stkvar	_b @ sp[(-13)+-4]
 26431  0151F4  50E1               	movf	fsr1l,w,c
 26432  0151F6  0FEF               	addlw	-17
 26433  0151F8  6ED9               	movwf	fsr2l,c
 26434  0151FA  50E2               	movf	fsr1h,w,c
 26435  0151FC  6EDA               	movwf	fsr2h,c
 26436  0151FE  0EFF               	movlw	255
 26437  015200  22DA               	addwfc	fsr2h,f,c
 26438  015202  2ADE               	incf	postinc2,f,c
 26439  015204  0E00               	movlw	0
 26440  015206  22DE               	addwfc	postinc2,f,c
 26441  015208  22DE               	addwfc	postinc2,f,c
 26442  01520A  22DE               	addwfc	postinc2,f,c
 26443                           
 26444                           ;stkvar	_b @ sp[(-13)+-4]
 26445  01520C  0EF2               	movlw	-14
 26446  01520E  A0E3               	btfss	plusw1,0,c
 26447  015210  D027               	goto	l8497
 26448  015212  0E01               	movlw	1
 26449  015214  6E0C               	movwf	(btemp+11)^0,c
 26450                           
 26451                           ;stkvar	_b @ sp[(-13)+-4]
 26452  015216  50E1               	movf	fsr1l,w,c
 26453  015218  0FEF               	addlw	-17
 26454  01521A  6ED9               	movwf	fsr2l,c
 26455  01521C  50E2               	movf	fsr1h,w,c
 26456  01521E  6EDA               	movwf	fsr2h,c
 26457  015220  0EFF               	movlw	255
 26458  015222  22DA               	addwfc	fsr2h,f,c
 26459  015224  280C               	incf	(btemp+11)^0,w,c
 26460  015226  52DE               	movf	postinc2,f,c
 26461  015228  D008               	goto	u6780
 26462  01522A                     u6785:
 26463  01522A  52DE               	movf	postinc2,f,c
 26464  01522C  90D8               	bcf	status,0,c
 26465  01522E  BEDC               	btfsc	preinc2,7,c
 26466  015230  80D8               	bsf	status,0,c
 26467  015232  32DD               	rrcf	postdec2,f,c
 26468  015234  32DD               	rrcf	postdec2,f,c
 26469  015236  32DD               	rrcf	postdec2,f,c
 26470  015238  32DE               	rrcf	postinc2,f,c
 26471  01523A                     u6780:
 26472  01523A  2EE8               	decfsz	wreg,f,c
 26473  01523C  D7F6               	goto	u6785
 26474                           
 26475                           ;stkvar	_new_exp @ sp[(-13)+8]
 26476  01523E  0EFB               	movlw	-5
 26477  015240  50E3               	movf	plusw1,w,c
 26478  015242  0F01               	addlw	1
 26479  015244  6E01               	movwf	btemp^0,c
 26480  015246  0EFB               	movlw	-5
 26481  015248  0060  F007  FFE3   	movff	btemp,plusw1
 26482  01524E  6A01               	clrf	btemp^0,c
 26483  015250  0EFC               	movlw	-4
 26484  015252  50E3               	movf	plusw1,w,c
 26485  015254  2001               	addwfc	btemp^0,w,c
 26486  015256  6E01               	movwf	btemp^0,c
 26487  015258  0EFC               	movlw	-4
 26488  01525A  0060  F007  FFE3   	movff	btemp,plusw1
 26489  015260                     l8497:
 26490                           
 26491                           ;stkvar	_new_exp @ sp[(-13)+8]
 26492  015260  0EFC               	movlw	-4
 26493  015262  BEE3               	btfsc	plusw1,7,c
 26494  015264  D01B               	goto	l8503
 26495  015266  0EFC               	movlw	-4
 26496  015268  50E3               	movf	plusw1,w,c
 26497  01526A  E104               	bnz	u6790
 26498  01526C  0EFB               	movlw	-5
 26499  01526E  28E3               	incf	plusw1,w,c
 26500  015270  A0D8               	btfss	status,0,c
 26501  015272  D014               	goto	l8503
 26502  015274                     u6790:
 26503  015274  0EFF               	movlw	255
 26504  015276  6E0B               	movwf	(btemp+10)^0,c
 26505  015278  0E00               	movlw	0
 26506  01527A  6E0C               	movwf	(btemp+11)^0,c
 26507                           
 26508                           ;stkvar	_new_exp @ sp[(-13)+8]
 26509  01527C  0EFB               	movlw	-5
 26510  01527E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26511  015284  0EFC               	movlw	-4
 26512  015286  0060  F033  FFE3   	movff	btemp+11,plusw1
 26513                           
 26514                           ;stkvar	_b @ sp[(-13)+-4]
 26515  01528C  0EEF               	movlw	-17
 26516  01528E  6AE3               	clrf	plusw1,c
 26517  015290  0EF0               	movlw	-16
 26518  015292  6AE3               	clrf	plusw1,c
 26519  015294  0EF1               	movlw	-15
 26520  015296  6AE3               	clrf	plusw1,c
 26521  015298  0EF2               	movlw	-14
 26522  01529A  6AE3               	clrf	plusw1,c
 26523  01529C                     l8503:
 26524                           
 26525                           ;stkvar	_new_exp @ sp[(-13)+8]
 26526  01529C  0EFC               	movlw	-4
 26527  01529E  BEE3               	btfsc	plusw1,7,c
 26528  0152A0  D007               	goto	u6800
 26529  0152A2  0EFC               	movlw	-4
 26530  0152A4  50E3               	movf	plusw1,w,c
 26531  0152A6  E112               	bnz	l8509
 26532  0152A8  0EFB               	movlw	-5
 26533  0152AA  04E3               	decf	plusw1,w,c
 26534  0152AC  B0D8               	btfsc	status,0,c
 26535  0152AE  D00E               	goto	l8509
 26536  0152B0                     u6800:
 26537                           
 26538                           ;stkvar	_new_exp @ sp[(-13)+8]
 26539  0152B0  0EFB               	movlw	-5
 26540  0152B2  6AE3               	clrf	plusw1,c
 26541  0152B4  0EFC               	movlw	-4
 26542  0152B6  6AE3               	clrf	plusw1,c
 26543                           
 26544                           ;stkvar	_b @ sp[(-13)+-4]
 26545  0152B8  0EEF               	movlw	-17
 26546  0152BA  6AE3               	clrf	plusw1,c
 26547  0152BC  0EF0               	movlw	-16
 26548  0152BE  6AE3               	clrf	plusw1,c
 26549  0152C0  0EF1               	movlw	-15
 26550  0152C2  6AE3               	clrf	plusw1,c
 26551  0152C4  0EF2               	movlw	-14
 26552  0152C6  6AE3               	clrf	plusw1,c
 26553                           
 26554                           ;stkvar	_sign @ sp[(-13)+12]
 26555  0152C8  0EFF               	movlw	-1
 26556  0152CA  6AE3               	clrf	plusw1,c
 26557  0152CC                     l8509:
 26558                           
 26559                           ;stkvar	_new_exp @ sp[(-13)+8]
 26560                           ;stkvar	_bexp @ sp[(-13)+11]
 26561  0152CC  0EFB               	movlw	-5
 26562  0152CE  006F FF8C  F001    	movff	plusw1,btemp
 26563  0152D4  0EFE               	movlw	-2
 26564  0152D6  0060  F007  FFE3   	movff	btemp,plusw1
 26565                           
 26566                           ;stkvar	_bexp @ sp[(-13)+11]
 26567  0152DC  0EFE               	movlw	-2
 26568  0152DE  A0E3               	btfss	plusw1,0,c
 26569  0152E0  D009               	goto	l8515
 26570                           
 26571                           ;stkvar	_b @ sp[(-13)+-4]
 26572  0152E2  0EF1               	movlw	241
 26573  0152E4  24E1               	addwf	fsr1l,w,c
 26574  0152E6  6ED9               	movwf	fsr2l,c
 26575  0152E8  0EFF               	movlw	255
 26576  0152EA  20E2               	addwfc	fsr1h,w,c
 26577  0152EC  6EDA               	movwf	fsr2h,c
 26578  0152EE  0E00               	movlw	0
 26579  0152F0  8EDB               	bsf	plusw2,7,c
 26580  0152F2  D008               	goto	l8517
 26581  0152F4                     l8515:
 26582                           
 26583                           ;stkvar	_b @ sp[(-13)+-4]
 26584  0152F4  0EF1               	movlw	241
 26585  0152F6  24E1               	addwf	fsr1l,w,c
 26586  0152F8  6ED9               	movwf	fsr2l,c
 26587  0152FA  0EFF               	movlw	255
 26588  0152FC  20E2               	addwfc	fsr1h,w,c
 26589  0152FE  6EDA               	movwf	fsr2h,c
 26590  015300  0E7F               	movlw	127
 26591  015302  16DF               	andwf	indf2,f,c
 26592  015304                     l8517:
 26593                           
 26594                           ;stkvar	_b @ sp[(-13)+-4]
 26595  015304  0EF2               	movlw	242
 26596  015306  24E1               	addwf	fsr1l,w,c
 26597  015308  6ED9               	movwf	fsr2l,c
 26598  01530A  0EFF               	movlw	255
 26599  01530C  20E2               	addwfc	fsr1h,w,c
 26600  01530E  6EDA               	movwf	fsr2h,c
 26601                           
 26602                           ;stkvar	_bexp @ sp[(-13)+11]
 26603  015310  0EFE               	movlw	-2
 26604  015312  006F FF8C  F00C    	movff	plusw1,btemp+11
 26605  015318  90D8               	bcf	status,0,c
 26606  01531A  300C               	rrcf	(btemp+11)^0,w,c
 26607  01531C  6EDF               	movwf	indf2,c
 26608  01531E  D644               	goto	l8415
 26609  015320                     l3060:
 26610                           
 26611                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26612  015320  0EEB               	movlw	235
 26613  015322  26E1               	addwf	fsr1l,f,c
 26614  015324  0EFF               	movlw	255
 26615  015326  22E2               	addwfc	fsr1h,f,c
 26616  015328  0012               	return		;funcret
 26617  01532A                     __end_of___fldiv:
 26618                           	opt callstack 0
 26619                           
 26620 ;; *************** function ___flge *****************
 26621 ;; Defined at:
 26622 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 26623 ;; Parameters:    Size  Location     Type
 26624 ;;  ff1             4  [STACK] unsigned char 
 26625 ;;  ff2             4  [STACK] unsigned char 
 26626 ;; Auto vars:     Size  Location     Type
 26627 ;;		None
 26628 ;; Return value:  Size  Location     Type
 26629 ;;		None               void
 26630 ;; Registers used:
 26631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26632 ;; Tracked objects:
 26633 ;;		On entry : 0/0
 26634 ;;		On exit  : 0/0
 26635 ;;		Unchanged: 0/0
 26636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26641 ;;Total ram usage:        0 bytes
 26642 ;; Hardware stack levels used:    1
 26643 ;; Hardware stack levels required when called:   15
 26644 ;; This function calls:
 26645 ;;		Nothing
 26646 ;; This function is called by:
 26647 ;;		_main
 26648 ;;		_convert_dac_raw
 26649 ;;		_calc_ror_data
 26650 ;;		_check_day_time
 26651 ;;		_calc_bsoc
 26652 ;;		_efgtoa
 26653 ;; This function uses a reentrant model
 26654 ;;
 26655                           
 26656                           	psect	text106
 26657  019214                     __ptext106:
 26658                           	opt callstack 0
 26659  019214                     ___flge:
 26660                           	opt callstack 0
 26661                           
 26662                           ;stkvar	_ff1 @ sp[(0)+-4]
 26663                           
 26664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26665                           ;incstack = 0
 26666 ;; hardware stack exceeded
 26667  019214  50E1               	movf	fsr1l,w,c
 26668  019216  0FFC               	addlw	-4
 26669  019218  6ED9               	movwf	fsr2l,c
 26670  01921A  50E2               	movf	fsr1h,w,c
 26671  01921C  6EDA               	movwf	fsr2h,c
 26672  01921E  0EFF               	movlw	255
 26673  019220  22DA               	addwfc	fsr2h,f,c
 26674  019222  0E00               	movlw	0
 26675  019224  14DE               	andwf	postinc2,w,c
 26676  019226  6E09               	movwf	(btemp+8)^0,c
 26677  019228  0E00               	movlw	0
 26678  01922A  14DE               	andwf	postinc2,w,c
 26679  01922C  6E0A               	movwf	(btemp+9)^0,c
 26680  01922E  0E80               	movlw	128
 26681  019230  14DE               	andwf	postinc2,w,c
 26682  019232  6E0B               	movwf	(btemp+10)^0,c
 26683  019234  0E7F               	movlw	127
 26684  019236  14DE               	andwf	postinc2,w,c
 26685  019238  6E0C               	movwf	(btemp+11)^0,c
 26686  01923A  5009               	movf	(btemp+8)^0,w,c
 26687  01923C  100A               	iorwf	(btemp+9)^0,w,c
 26688  01923E  100B               	iorwf	(btemp+10)^0,w,c
 26689  019240  100C               	iorwf	(btemp+11)^0,w,c
 26690  019242  A4D8               	btfss	status,2,c
 26691  019244  D008               	goto	l8791
 26692                           
 26693                           ;stkvar	_ff1 @ sp[(0)+-4]
 26694  019246  0EFC               	movlw	-4
 26695  019248  6AE3               	clrf	plusw1,c
 26696  01924A  0EFD               	movlw	-3
 26697  01924C  6AE3               	clrf	plusw1,c
 26698  01924E  0EFE               	movlw	-2
 26699  019250  6AE3               	clrf	plusw1,c
 26700  019252  0EFF               	movlw	-1
 26701  019254  6AE3               	clrf	plusw1,c
 26702  019256                     l8791:
 26703                           
 26704                           ;stkvar	_ff2 @ sp[(0)+-8]
 26705  019256  50E1               	movf	fsr1l,w,c
 26706  019258  0FF8               	addlw	-8
 26707  01925A  6ED9               	movwf	fsr2l,c
 26708  01925C  50E2               	movf	fsr1h,w,c
 26709  01925E  6EDA               	movwf	fsr2h,c
 26710  019260  0EFF               	movlw	255
 26711  019262  22DA               	addwfc	fsr2h,f,c
 26712  019264  0E00               	movlw	0
 26713  019266  14DE               	andwf	postinc2,w,c
 26714  019268  6E09               	movwf	(btemp+8)^0,c
 26715  01926A  0E00               	movlw	0
 26716  01926C  14DE               	andwf	postinc2,w,c
 26717  01926E  6E0A               	movwf	(btemp+9)^0,c
 26718  019270  0E80               	movlw	128
 26719  019272  14DE               	andwf	postinc2,w,c
 26720  019274  6E0B               	movwf	(btemp+10)^0,c
 26721  019276  0E7F               	movlw	127
 26722  019278  14DE               	andwf	postinc2,w,c
 26723  01927A  6E0C               	movwf	(btemp+11)^0,c
 26724  01927C  5009               	movf	(btemp+8)^0,w,c
 26725  01927E  100A               	iorwf	(btemp+9)^0,w,c
 26726  019280  100B               	iorwf	(btemp+10)^0,w,c
 26727  019282  100C               	iorwf	(btemp+11)^0,w,c
 26728  019284  A4D8               	btfss	status,2,c
 26729  019286  D008               	goto	l2741
 26730                           
 26731                           ;stkvar	_ff2 @ sp[(0)+-8]
 26732  019288  0EF8               	movlw	-8
 26733  01928A  6AE3               	clrf	plusw1,c
 26734  01928C  0EF9               	movlw	-7
 26735  01928E  6AE3               	clrf	plusw1,c
 26736  019290  0EFA               	movlw	-6
 26737  019292  6AE3               	clrf	plusw1,c
 26738  019294  0EFB               	movlw	-5
 26739  019296  6AE3               	clrf	plusw1,c
 26740  019298                     l2741:
 26741                           
 26742                           ;stkvar	_ff1 @ sp[(0)+-4]
 26743  019298  0EFF               	movlw	-1
 26744  01929A  AEE3               	btfss	plusw1,7,c
 26745  01929C  D024               	goto	l8797
 26746                           
 26747                           ;stkvar	_ff1 @ sp[(0)+-4]
 26748  01929E  0E00               	movlw	0
 26749  0192A0  6E09               	movwf	(btemp+8)^0,c
 26750  0192A2  0E00               	movlw	0
 26751  0192A4  6E0A               	movwf	(btemp+9)^0,c
 26752  0192A6  0E00               	movlw	0
 26753  0192A8  6E0B               	movwf	(btemp+10)^0,c
 26754  0192AA  0E80               	movlw	128
 26755  0192AC  6E0C               	movwf	(btemp+11)^0,c
 26756  0192AE  0EFC               	movlw	-4
 26757  0192B0  50E3               	movf	plusw1,w,c
 26758  0192B2  5E09               	subwf	(btemp+8)^0,f,c
 26759  0192B4  0EFD               	movlw	-3
 26760  0192B6  50E3               	movf	plusw1,w,c
 26761  0192B8  5A0A               	subwfb	(btemp+9)^0,f,c
 26762  0192BA  0EFE               	movlw	-2
 26763  0192BC  50E3               	movf	plusw1,w,c
 26764  0192BE  5A0B               	subwfb	(btemp+10)^0,f,c
 26765  0192C0  0EFF               	movlw	-1
 26766  0192C2  50E3               	movf	plusw1,w,c
 26767  0192C4  5A0C               	subwfb	(btemp+11)^0,f,c
 26768                           
 26769                           ;stkvar	_ff1 @ sp[(0)+-4]
 26770  0192C6  0EFC               	movlw	-4
 26771  0192C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 26772  0192CE  0EFD               	movlw	-3
 26773  0192D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26774  0192D6  0EFE               	movlw	-2
 26775  0192D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26776  0192DE  0EFF               	movlw	-1
 26777  0192E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26778  0192E6                     l8797:
 26779                           
 26780                           ;stkvar	_ff2 @ sp[(0)+-8]
 26781  0192E6  0EFB               	movlw	-5
 26782  0192E8  AEE3               	btfss	plusw1,7,c
 26783  0192EA  D024               	goto	l8801
 26784                           
 26785                           ;stkvar	_ff2 @ sp[(0)+-8]
 26786  0192EC  0E00               	movlw	0
 26787  0192EE  6E09               	movwf	(btemp+8)^0,c
 26788  0192F0  0E00               	movlw	0
 26789  0192F2  6E0A               	movwf	(btemp+9)^0,c
 26790  0192F4  0E00               	movlw	0
 26791  0192F6  6E0B               	movwf	(btemp+10)^0,c
 26792  0192F8  0E80               	movlw	128
 26793  0192FA  6E0C               	movwf	(btemp+11)^0,c
 26794  0192FC  0EF8               	movlw	-8
 26795  0192FE  50E3               	movf	plusw1,w,c
 26796  019300  5E09               	subwf	(btemp+8)^0,f,c
 26797  019302  0EF9               	movlw	-7
 26798  019304  50E3               	movf	plusw1,w,c
 26799  019306  5A0A               	subwfb	(btemp+9)^0,f,c
 26800  019308  0EFA               	movlw	-6
 26801  01930A  50E3               	movf	plusw1,w,c
 26802  01930C  5A0B               	subwfb	(btemp+10)^0,f,c
 26803  01930E  0EFB               	movlw	-5
 26804  019310  50E3               	movf	plusw1,w,c
 26805  019312  5A0C               	subwfb	(btemp+11)^0,f,c
 26806                           
 26807                           ;stkvar	_ff2 @ sp[(0)+-8]
 26808  019314  0EF8               	movlw	-8
 26809  019316  0060  F027  FFE3   	movff	btemp+8,plusw1
 26810  01931C  0EF9               	movlw	-7
 26811  01931E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26812  019324  0EFA               	movlw	-6
 26813  019326  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26814  01932C  0EFB               	movlw	-5
 26815  01932E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26816  019334                     l8801:
 26817                           
 26818                           ;stkvar	_ff1 @ sp[(0)+-4]
 26819  019334  0EFF               	movlw	-1
 26820  019336  7EE3               	btg	plusw1,7,c
 26821                           
 26822                           ;stkvar	_ff2 @ sp[(0)+-8]
 26823  019338  0EFB               	movlw	-5
 26824  01933A  7EE3               	btg	plusw1,7,c
 26825                           
 26826                           ;stkvar	_ff2 @ sp[(0)+-8]
 26827                           ;stkvar	_ff1 @ sp[(0)+-4]
 26828  01933C  50E1               	movf	fsr1l,w,c
 26829  01933E  0FFC               	addlw	-4
 26830  019340  6ED9               	movwf	fsr2l,c
 26831  019342  50E2               	movf	fsr1h,w,c
 26832  019344  6EDA               	movwf	fsr2h,c
 26833  019346  0EFF               	movlw	255
 26834  019348  22DA               	addwfc	fsr2h,f,c
 26835  01934A  0EF8               	movlw	-8
 26836  01934C  50E3               	movf	plusw1,w,c
 26837  01934E  5CDE               	subwf	postinc2,w,c
 26838  019350  0EF9               	movlw	-7
 26839  019352  50E3               	movf	plusw1,w,c
 26840  019354  58DE               	subwfb	postinc2,w,c
 26841  019356  0EFA               	movlw	-6
 26842  019358  50E3               	movf	plusw1,w,c
 26843  01935A  58DE               	subwfb	postinc2,w,c
 26844  01935C  0EFB               	movlw	-5
 26845  01935E  50E3               	movf	plusw1,w,c
 26846  019360  58DE               	subwfb	postinc2,w,c
 26847  019362  B0D8               	btfsc	status,0,c
 26848  019364  D002               	goto	l8809
 26849  019366  9001               	bcf	btemp& (0+255),0,c
 26850  019368  D001               	goto	l2748
 26851  01936A                     l8809:
 26852  01936A  8001               	bsf	btemp& (0+255),0,c
 26853  01936C                     l2748:
 26854                           
 26855                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26856  01936C  0EF8               	movlw	248
 26857  01936E  26E1               	addwf	fsr1l,f,c
 26858  019370  0EFF               	movlw	255
 26859  019372  22E2               	addwfc	fsr1h,f,c
 26860  019374  0012               	return		;funcret
 26861  019376                     __end_of___flge:
 26862                           	opt callstack 0
 26863                           
 26864 ;; *************** function _calc_model_data *****************
 26865 ;; Defined at:
 26866 ;;		line 67 in file "mbmc.c"
 26867 ;; Parameters:    Size  Location     Type
 26868 ;;		None
 26869 ;; Auto vars:     Size  Location     Type
 26870 ;;		None
 26871 ;; Return value:  Size  Location     Type
 26872 ;;                  1  [STACK] void 
 26873 ;; Registers used:
 26874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26875 ;; Tracked objects:
 26876 ;;		On entry : 0/1
 26877 ;;		On exit  : 3F/39
 26878 ;;		Unchanged: 0/0
 26879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26884 ;;Total ram usage:        0 bytes
 26885 ;; Hardware stack levels used:    1
 26886 ;; Hardware stack levels required when called:   18
 26887 ;; This function calls:
 26888 ;;		___fladd
 26889 ;;		___flmul
 26890 ;;		___flsub
 26891 ;;		_lp_filter
 26892 ;;		_start_bsoc
 26893 ;;		_stop_bsoc
 26894 ;; This function is called by:
 26895 ;;		_main
 26896 ;; This function uses a reentrant model
 26897 ;;
 26898                           
 26899                           	psect	text107
 26900  015CBE                     __ptext107:
 26901                           	opt callstack 0
 26902  015CBE                     _calc_model_data:
 26903                           	opt callstack 12
 26904                           
 26905                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26906                           
 26907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26908                           ;incstack = 0
 26909  015CBE  ECF0  F0E2         	call	_stop_bsoc	;wreg free
 26910                           
 26911                           ; BSR set to: 57
 26912                           ;mbmc.c: 72:  if (!V.calib) {
 26913  015CC2  0101               	movlb	1	; () banked
 26914  015CC4  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 26915  015CC6  A4D8               	btfss	status,2,c
 26916  015CC8  D219               	goto	l11275
 26917                           
 26918                           ; BSR set to: 1
 26919                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26920  015CCA  EE21  F2FF         	lfsr	2,_C
 26921  015CCE  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26922  015CD4  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26923  015CDA  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26924  015CE0  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26925                           
 26926                           ; BSR set to: 1
 26927                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26928  015CE6  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 26929  015CEC  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26930  015CF2  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26931  015CF8  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26932  015CFE  EE21  F343         	lfsr	2,_C+68	;volatile
 26933  015D02  006F FF7B FFE6     	movff	postinc2,postinc1
 26934  015D08  006F FF7B FFE6     	movff	postinc2,postinc1
 26935  015D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 26936  015D14  006F FF7B FFE6     	movff	postinc2,postinc1
 26937  015D1A  ECEE  F0DC         	call	___flsub	;wreg free
 26938  015D1E  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26939  015D24  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26940  015D2A  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26941  015D30  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26942                           
 26943                           ;mbmc.c: 75:   bcror = C.c_bat;
 26944  015D36  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 26945  015D3A  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26946  015D3E  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26947  015D42  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26948                           
 26949                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26950  015D46  EE21  F303         	lfsr	2,_C+4	;volatile
 26951  015D4A  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26952  015D50  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26953  015D56  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26954  015D5C  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26955                           
 26956                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26957  015D62  EE21  F30F         	lfsr	2,_C+16	;volatile
 26958  015D66  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26959  015D6C  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26960  015D72  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26961  015D78  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26962                           
 26963                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26964  015D7E  EE21  F333         	lfsr	2,_C+52	;volatile
 26965  015D82  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26966  015D88  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26967  015D8E  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26968  015D94  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26969                           
 26970                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26971  015D9A  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 26972  015DA0  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26973  015DA6  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26974  015DAC  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26975  015DB2  EE21  F353         	lfsr	2,_C+84	;volatile
 26976  015DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 26977  015DBC  006F FF7B FFE6     	movff	postinc2,postinc1
 26978  015DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 26979  015DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 26980  015DCE  ECEE  F0DC         	call	___flsub	;wreg free
 26981  015DD2  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26982  015DD8  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26983  015DDE  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26984  015DE4  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26985                           
 26986                           ;mbmc.c: 80:   bvror = C.v_bat;
 26987  015DEA  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 26988  015DEE  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26989  015DF2  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26990  015DF6  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26991                           
 26992                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26993  015DFA  EE21  F313         	lfsr	2,_C+20	;volatile
 26994  015DFE  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 26995  015E04  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 26996  015E0A  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 26997  015E10  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 26998                           
 26999                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 27000  015E16  EE21  F307         	lfsr	2,_C+8	;volatile
 27001  015E1A  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 27002  015E20  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 27003  015E26  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 27004  015E2C  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 27005                           
 27006                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 27007  015E32  EE21  F32F         	lfsr	2,_C+48	;volatile
 27008  015E36  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 27009  015E3C  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 27010  015E42  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 27011  015E48  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 27012                           
 27013                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 27014  015E4E  0E01               	movlw	1
 27015  015E50  6EE6               	movwf	postinc1,c
 27016  015E52  0E10               	movlw	16
 27017  015E54  6EE6               	movwf	postinc1,c
 27018  015E56  EE21  F2FF         	lfsr	2,_C
 27019  015E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 27020  015E60  006F FF7B FFE6     	movff	postinc2,postinc1
 27021  015E66  006F FF7B FFE6     	movff	postinc2,postinc1
 27022  015E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 27023  015E72  EE21  F303         	lfsr	2,_C+4	;volatile
 27024  015E76  006F FF7B FFE6     	movff	postinc2,postinc1
 27025  015E7C  006F FF7B FFE6     	movff	postinc2,postinc1
 27026  015E82  006F FF7B FFE6     	movff	postinc2,postinc1
 27027  015E88  006F FF7B FFE6     	movff	postinc2,postinc1
 27028  015E8E  ECEE  F0DC         	call	___flsub	;wreg free
 27029  015E92  0060  F007  FFE6   	movff	btemp,postinc1
 27030  015E98  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27031  015E9E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27032  015EA4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27033  015EAA  EC55  F0C4         	call	_lp_filter	;wreg free
 27034  015EAE  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 27035  015EB4  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 27036  015EBA  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 27037  015EC0  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 27038                           
 27039                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 27040  015EC6  0E01               	movlw	1
 27041  015EC8  6EE6               	movwf	postinc1,c
 27042  015ECA  0E11               	movlw	17
 27043  015ECC  6EE6               	movwf	postinc1,c
 27044  015ECE  EE21  F353         	lfsr	2,_C+84	;volatile
 27045  015ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 27046  015ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 27047  015EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27048  015EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27049  015EEA  EE21  F33F         	lfsr	2,_C+64	;volatile
 27050  015EEE  006F FF7B FFE6     	movff	postinc2,postinc1
 27051  015EF4  006F FF7B FFE6     	movff	postinc2,postinc1
 27052  015EFA  006F FF7B FFE6     	movff	postinc2,postinc1
 27053  015F00  006F FF7B FFE6     	movff	postinc2,postinc1
 27054  015F06  ECE5  F09E         	call	___flmul	;wreg free
 27055  015F0A  0060  F007  FFE6   	movff	btemp,postinc1
 27056  015F10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27057  015F16  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27058  015F1C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27059  015F22  EC55  F0C4         	call	_lp_filter	;wreg free
 27060  015F26  0060  F004  F773   	movff	btemp,_C+116	;volatile
 27061  015F2C  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 27062  015F32  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 27063  015F38  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 27064                           
 27065                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 27066  015F3E  0E01               	movlw	1
 27067  015F40  6EE6               	movwf	postinc1,c
 27068  015F42  0E12               	movlw	18
 27069  015F44  6EE6               	movwf	postinc1,c
 27070  015F46  EE21  F34F         	lfsr	2,_C+80	;volatile
 27071  015F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 27072  015F50  006F FF7B FFE6     	movff	postinc2,postinc1
 27073  015F56  006F FF7B FFE6     	movff	postinc2,postinc1
 27074  015F5C  006F FF7B FFE6     	movff	postinc2,postinc1
 27075  015F62  EE21  F347         	lfsr	2,_C+72	;volatile
 27076  015F66  006F FF7B FFE6     	movff	postinc2,postinc1
 27077  015F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 27078  015F72  006F FF7B FFE6     	movff	postinc2,postinc1
 27079  015F78  006F FF7B FFE6     	movff	postinc2,postinc1
 27080  015F7E  ECE5  F09E         	call	___flmul	;wreg free
 27081  015F82  0060  F007  FFE6   	movff	btemp,postinc1
 27082  015F88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27083  015F8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27084  015F94  0060  F013  FFE6   	movff	btemp+3,postinc1
 27085  015F9A  EC55  F0C4         	call	_lp_filter	;wreg free
 27086  015F9E  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 27087  015FA4  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 27088  015FAA  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 27089  015FB0  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 27090                           
 27091                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 27092  015FB6  0E01               	movlw	1
 27093  015FB8  6EE6               	movwf	postinc1,c
 27094  015FBA  0E13               	movlw	19
 27095  015FBC  6EE6               	movwf	postinc1,c
 27096  015FBE  0E00               	movlw	0
 27097  015FC0  6EE6               	movwf	postinc1,c
 27098  015FC2  0E00               	movlw	0
 27099  015FC4  6EE6               	movwf	postinc1,c
 27100  015FC6  0E60               	movlw	96
 27101  015FC8  6EE6               	movwf	postinc1,c
 27102  015FCA  0EC1               	movlw	193
 27103  015FCC  6EE6               	movwf	postinc1,c
 27104  015FCE  EE21  F363         	lfsr	2,_C+100	;volatile
 27105  015FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 27106  015FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 27107  015FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27108  015FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27109  015FEA  EE21  F33F         	lfsr	2,_C+64	;volatile
 27110  015FEE  006F FF7B FFE6     	movff	postinc2,postinc1
 27111  015FF4  006F FF7B FFE6     	movff	postinc2,postinc1
 27112  015FFA  006F FF7B FFE6     	movff	postinc2,postinc1
 27113  016000  006F FF7B FFE6     	movff	postinc2,postinc1
 27114  016006  ECE5  F09E         	call	___flmul	;wreg free
 27115  01600A  0060  F007  FFE6   	movff	btemp,postinc1
 27116  016010  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27117  016016  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27118  01601C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27119  016022  ECFA  F0A2         	call	___fladd	;wreg free
 27120  016026  0060  F007  FFE6   	movff	btemp,postinc1
 27121  01602C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27122  016032  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27123  016038  0060  F013  FFE6   	movff	btemp+3,postinc1
 27124  01603E  EC55  F0C4         	call	_lp_filter	;wreg free
 27125  016042  0060  F004  F777   	movff	btemp,_C+120	;volatile
 27126  016048  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 27127  01604E  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 27128  016054  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 27129                           
 27130                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 27131  01605A  0E01               	movlw	1
 27132  01605C  6EE6               	movwf	postinc1,c
 27133  01605E  0E14               	movlw	20
 27134  016060  6EE6               	movwf	postinc1,c
 27135  016062  EE21  F353         	lfsr	2,_C+84	;volatile
 27136  016066  006F FF7B FFE6     	movff	postinc2,postinc1
 27137  01606C  006F FF7B FFE6     	movff	postinc2,postinc1
 27138  016072  006F FF7B FFE6     	movff	postinc2,postinc1
 27139  016078  006F FF7B FFE6     	movff	postinc2,postinc1
 27140  01607E  EE21  F343         	lfsr	2,_C+68	;volatile
 27141  016082  006F FF7B FFE6     	movff	postinc2,postinc1
 27142  016088  006F FF7B FFE6     	movff	postinc2,postinc1
 27143  01608E  006F FF7B FFE6     	movff	postinc2,postinc1
 27144  016094  006F FF7B FFE6     	movff	postinc2,postinc1
 27145  01609A  ECE5  F09E         	call	___flmul	;wreg free
 27146  01609E  0060  F007  FFE6   	movff	btemp,postinc1
 27147  0160A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27148  0160AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27149  0160B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27150  0160B6  EC55  F0C4         	call	_lp_filter	;wreg free
 27151  0160BA  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 27152  0160C0  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 27153  0160C6  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 27154  0160CC  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 27155                           
 27156                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 27157  0160D2  EE21  F377         	lfsr	2,_C+120	;volatile
 27158  0160D6  0E03               	movlw	3
 27159  0160D8  AEDB               	btfss	plusw2,7,c
 27160  0160DA  D010               	goto	l11275
 27161                           
 27162                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 27163  0160DC  0E17               	movlw	23
 27164  0160DE  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 27165  0160E4  0EB7               	movlw	183
 27166  0160E6  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 27167  0160EC  0ED1               	movlw	209
 27168  0160EE  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 27169  0160F4  0E38               	movlw	56
 27170  0160F6  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 27171  0160FC                     l11275:
 27172                           
 27173                           ;mbmc.c: 95:  start_bsoc();
 27174  0160FC  EC7F  F0E1         	call	_start_bsoc	;wreg free
 27175                           
 27176                           ; BSR set to: 57
 27177                           ;mbmc.c: 96:  C.update = 1;
 27178  016100  0E01               	movlw	1
 27179  016102  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 27180                           
 27181                           ; BSR set to: 57
 27182                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27183  016108  0012               	return		;funcret
 27184  01610A                     __end_of_calc_model_data:
 27185                           	opt callstack 0
 27186                           
 27187 ;; *************** function _stop_bsoc *****************
 27188 ;; Defined at:
 27189 ;;		line 129 in file "bsoc.c"
 27190 ;; Parameters:    Size  Location     Type
 27191 ;;		None
 27192 ;; Auto vars:     Size  Location     Type
 27193 ;;		None
 27194 ;; Return value:  Size  Location     Type
 27195 ;;                  1  [STACK] void 
 27196 ;; Registers used:
 27197 ;;		None
 27198 ;; Tracked objects:
 27199 ;;		On entry : 0/1
 27200 ;;		On exit  : 3F/39
 27201 ;;		Unchanged: 0/0
 27202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27207 ;;Total ram usage:        0 bytes
 27208 ;; Hardware stack levels used:    1
 27209 ;; Hardware stack levels required when called:   15
 27210 ;; This function calls:
 27211 ;;		Nothing
 27212 ;; This function is called by:
 27213 ;;		_calc_model_data
 27214 ;; This function uses a reentrant model
 27215 ;;
 27216                           
 27217                           	psect	text108
 27218  01C5E0                     __ptext108:
 27219                           	opt callstack 0
 27220  01C5E0                     _stop_bsoc:
 27221                           	opt callstack 14
 27222                           
 27223                           ;bsoc.c: 132:  PIE6bits.TMR3IE = 0;
 27224                           
 27225                           ; BSR set to: 57
 27226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27227                           ;incstack = 0
 27228  01C5E0  0139               	movlb	57	; () banked
 27229  01C5E2  9D96               	bcf	150,6,b	;volatile
 27230                           
 27231                           ; BSR set to: 57
 27232                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27233  01C5E4  0012               	return		;funcret
 27234  01C5E6                     __end_of_stop_bsoc:
 27235                           	opt callstack 0
 27236                           
 27237 ;; *************** function _start_bsoc *****************
 27238 ;; Defined at:
 27239 ;;		line 120 in file "bsoc.c"
 27240 ;; Parameters:    Size  Location     Type
 27241 ;;		None
 27242 ;; Auto vars:     Size  Location     Type
 27243 ;;		None
 27244 ;; Return value:  Size  Location     Type
 27245 ;;                  1  [STACK] void 
 27246 ;; Registers used:
 27247 ;;		wreg, status,2, status,0, btemp+11
 27248 ;; Tracked objects:
 27249 ;;		On entry : 0/1
 27250 ;;		On exit  : 3F/39
 27251 ;;		Unchanged: 0/0
 27252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27257 ;;Total ram usage:        0 bytes
 27258 ;; Hardware stack levels used:    1
 27259 ;; Hardware stack levels required when called:   15
 27260 ;; This function calls:
 27261 ;;		Nothing
 27262 ;; This function is called by:
 27263 ;;		_calc_model_data
 27264 ;; This function uses a reentrant model
 27265 ;;
 27266                           
 27267                           	psect	text109
 27268  01C2FE                     __ptext109:
 27269                           	opt callstack 0
 27270  01C2FE                     _start_bsoc:
 27271                           	opt callstack 14
 27272                           
 27273                           ;bsoc.c: 123:  PIE6bits.TMR3IE = 1;
 27274                           
 27275                           ; BSR set to: 57
 27276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27277                           ;incstack = 0
 27278  01C2FE  0139               	movlb	57	; () banked
 27279  01C300  8D96               	bsf	150,6,b	;volatile
 27280                           
 27281                           ; BSR set to: 57
 27282  01C302  A4BE               	btfss	190,2,c	;volatile
 27283  01C304  D002               	goto	u9750
 27284  01C306  0E01               	movlw	1
 27285  01C308  D001               	goto	u9756
 27286  01C30A                     u9750:
 27287  01C30A  0E00               	movlw	0
 27288  01C30C                     u9756:
 27289  01C30C  0AFF               	xorlw	255
 27290  01C30E  6E0C               	movwf	(btemp+11)^0,c
 27291  01C310  460C               	rlncf	(btemp+11)^0,f,c
 27292  01C312  460C               	rlncf	(btemp+11)^0,f,c
 27293  01C314  50BE               	movf	190,w,c	;volatile
 27294  01C316  180C               	xorwf	(btemp+11)^0,w,c
 27295  01C318  0BFB               	andlw	-5
 27296  01C31A  180C               	xorwf	(btemp+11)^0,w,c
 27297  01C31C  6EBE               	movwf	190,c	;volatile
 27298                           
 27299                           ; BSR set to: 57
 27300                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 27301  01C31E  0012               	return		;funcret
 27302  01C320                     __end_of_start_bsoc:
 27303                           	opt callstack 0
 27304                           
 27305 ;; *************** function _lp_filter *****************
 27306 ;; Defined at:
 27307 ;;		line 29 in file "mbmc.c"
 27308 ;; Parameters:    Size  Location     Type
 27309 ;;  new             4  [STACK] const float 
 27310 ;;  bn              1  [STACK] const unsigned char 
 27311 ;;  slow            1  [STACK] const char 
 27312 ;; Auto vars:     Size  Location     Type
 27313 ;;  lp_speed        4  [STACK] float 
 27314 ;; Return value:  Size  Location     Type
 27315 ;;                  4  [STACK] float 
 27316 ;; Registers used:
 27317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27318 ;; Tracked objects:
 27319 ;;		On entry : 0/1
 27320 ;;		On exit  : 0/0
 27321 ;;		Unchanged: 0/0
 27322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27327 ;;Total ram usage:        0 bytes
 27328 ;; Hardware stack levels used:    1
 27329 ;; Hardware stack levels required when called:   17
 27330 ;; This function calls:
 27331 ;;		___fladd
 27332 ;;		___flmul
 27333 ;;		___flsub
 27334 ;; This function is called by:
 27335 ;;		_main
 27336 ;;		_convert_adc_data
 27337 ;;		_calc_model_data
 27338 ;; This function uses a reentrant model
 27339 ;;
 27340                           
 27341                           	psect	text110
 27342  0188AA                     __ptext110:
 27343                           	opt callstack 0
 27344  0188AA                     _lp_filter:
 27345                           	opt callstack 0
 27346                           
 27347                           ; BSR set to: 57
 27348                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27349  0188AA  52E6               	movf	postinc1,f,c
 27350  0188AC  52E6               	movf	postinc1,f,c
 27351  0188AE  52E6               	movf	postinc1,f,c
 27352  0188B0  52E6               	movf	postinc1,f,c
 27353                           
 27354                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 27355                           ;stkvar	_bn @ sp[(-4)+-5]
 27356                           
 27357                           ;incstack = 0
 27358  0188B2  0EF7               	movlw	-9
 27359  0188B4  006F FF8C  F001    	movff	plusw1,btemp
 27360  0188BA  0E14               	movlw	20
 27361  0188BC  6401               	cpfsgt	btemp^0,c
 27362  0188BE  D011               	goto	l10593
 27363  0188C0                     u9610:
 27364                           
 27365                           ;mbmc.c: 35:   return new;
 27366                           ;stkvar	_new @ sp[(-4)+-4]
 27367  0188C0  0EF8               	movlw	-8
 27368  0188C2  006F FF8C  F001    	movff	plusw1,btemp
 27369  0188C8  0EF9               	movlw	-7
 27370  0188CA  006F FF8C  F002    	movff	plusw1,btemp+1
 27371  0188D0  0EFA               	movlw	-6
 27372  0188D2  006F FF8C  F003    	movff	plusw1,btemp+2
 27373  0188D8  0EFB               	movlw	-5
 27374  0188DA  006F FF8C  F004    	movff	plusw1,btemp+3
 27375  0188E0  D0BD               	goto	l1915
 27376  0188E2                     l10593:
 27377                           
 27378                           ;mbmc.c: 37:  if (slow == (-1)) {
 27379                           ;stkvar	_slow @ sp[(-4)+-6]
 27380  0188E2  0EF6               	movlw	-10
 27381  0188E4  28E3               	incf	plusw1,w,c
 27382  0188E6  A4D8               	btfss	status,2,c
 27383  0188E8  D012               	goto	l10601
 27384                           
 27385                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 27386                           ;stkvar	_bn @ sp[(-4)+-5]
 27387  0188EA  0EF7               	movlw	-9
 27388  0188EC  50E3               	movf	plusw1,w,c
 27389  0188EE  0D04               	mullw	4
 27390  0188F0  0E00               	movlw	low lp_filter@smooth
 27391  0188F2  24F3               	addwf	243,w,c
 27392  0188F4  6ED9               	movwf	fsr2l,c
 27393  0188F6  0E02               	movlw	high lp_filter@smooth
 27394  0188F8  20F4               	addwfc	prodh,w,c
 27395  0188FA  6EDA               	movwf	fsr2h,c
 27396  0188FC  0E00               	movlw	0
 27397  0188FE  6EDE               	movwf	postinc2,c
 27398  018900  0E00               	movlw	0
 27399  018902  6EDE               	movwf	postinc2,c
 27400  018904  0E00               	movlw	0
 27401  018906  6EDE               	movwf	postinc2,c
 27402  018908  0E00               	movlw	0
 27403  01890A  6EDD               	movwf	postdec2,c
 27404  01890C  D7D9               	goto	u9610
 27405  01890E                     l10601:
 27406                           
 27407                           ;mbmc.c: 42:  if (slow) {
 27408                           ;stkvar	_slow @ sp[(-4)+-6]
 27409  01890E  0EF6               	movlw	-10
 27410  018910  50E3               	movf	plusw1,w,c
 27411  018912  B4D8               	btfsc	status,2,c
 27412  018914  D006               	goto	l10605
 27413                           
 27414                           ;mbmc.c: 43:   lp_speed = 0.033;
 27415  018916  0E02               	movlw	2
 27416  018918  6E09               	movwf	(btemp+8)^0,c
 27417  01891A  0E2B               	movlw	43
 27418  01891C  6E0A               	movwf	(btemp+9)^0,c
 27419  01891E  0E07               	movlw	7
 27420  018920  D005               	goto	L32
 27421  018922                     l10605:
 27422                           
 27423                           ;mbmc.c: 45:   lp_speed = 0.066;
 27424  018922  0E02               	movlw	2
 27425  018924  6E09               	movwf	(btemp+8)^0,c
 27426  018926  0E2B               	movlw	43
 27427  018928  6E0A               	movwf	(btemp+9)^0,c
 27428  01892A  0E87               	movlw	135
 27429  01892C                     L32:
 27430  01892C  6E0B               	movwf	(btemp+10)^0,c
 27431  01892E  0E3D               	movlw	61
 27432  018930  6E0C               	movwf	(btemp+11)^0,c
 27433                           
 27434                           ;stkvar	_lp_speed @ sp[(-4)+0]
 27435  018932  0EFC               	movlw	-4
 27436  018934  0060  F027  FFE3   	movff	btemp+8,plusw1
 27437  01893A  0EFD               	movlw	-3
 27438  01893C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27439  018942  0EFE               	movlw	-2
 27440  018944  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27441  01894A  0EFF               	movlw	-1
 27442  01894C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27443                           
 27444                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 27445                           ;stkvar	_bn @ sp[(-4)+-5]
 27446  018952  0EF7               	movlw	-9
 27447  018954  50E3               	movf	plusw1,w,c
 27448  018956  0D04               	mullw	4
 27449  018958  0E00               	movlw	low lp_filter@smooth
 27450  01895A  24F3               	addwf	243,w,c
 27451  01895C  6ED9               	movwf	fsr2l,c
 27452  01895E  0E02               	movlw	high lp_filter@smooth
 27453  018960  20F4               	addwfc	prodh,w,c
 27454  018962  6EDA               	movwf	fsr2h,c
 27455  018964  006F FF7B FFE6     	movff	postinc2,postinc1
 27456  01896A  006F FF7B FFE6     	movff	postinc2,postinc1
 27457  018970  006F FF7B FFE6     	movff	postinc2,postinc1
 27458  018976  006F FF7B FFE6     	movff	postinc2,postinc1
 27459                           
 27460                           ;stkvar	_lp_speed @ sp[(-8)+0]
 27461  01897C  0EF8               	movlw	-8
 27462  01897E  006F FF8F FFE6     	movff	plusw1,postinc1
 27463  018984  006F FF8F FFE6     	movff	plusw1,postinc1
 27464  01898A  006F FF8F FFE6     	movff	plusw1,postinc1
 27465  018990  006F FF8F FFE6     	movff	plusw1,postinc1
 27466                           
 27467                           ;stkvar	_bn @ sp[(-12)+-5]
 27468  018996  0EEF               	movlw	-17
 27469  018998  50E3               	movf	plusw1,w,c
 27470  01899A  0D04               	mullw	4
 27471  01899C  0E00               	movlw	low lp_filter@smooth
 27472  01899E  24F3               	addwf	243,w,c
 27473  0189A0  6ED9               	movwf	fsr2l,c
 27474  0189A2  0E02               	movlw	high lp_filter@smooth
 27475  0189A4  20F4               	addwfc	prodh,w,c
 27476  0189A6  6EDA               	movwf	fsr2h,c
 27477  0189A8  006F FF7B FFE6     	movff	postinc2,postinc1
 27478  0189AE  006F FF7B FFE6     	movff	postinc2,postinc1
 27479  0189B4  006F FF7B FFE6     	movff	postinc2,postinc1
 27480  0189BA  006F FF7B FFE6     	movff	postinc2,postinc1
 27481                           
 27482                           ;stkvar	_new @ sp[(-16)+-4]
 27483  0189C0  0EEC               	movlw	-20
 27484  0189C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27485  0189C8  006F FF8F FFE6     	movff	plusw1,postinc1
 27486  0189CE  006F FF8F FFE6     	movff	plusw1,postinc1
 27487  0189D4  006F FF8F FFE6     	movff	plusw1,postinc1
 27488  0189DA  ECEE  F0DC         	call	___flsub	;wreg free
 27489  0189DE  0060  F007  FFE6   	movff	btemp,postinc1
 27490  0189E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27491  0189EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27492  0189F0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27493  0189F6  ECE5  F09E         	call	___flmul	;wreg free
 27494  0189FA  0060  F007  FFE6   	movff	btemp,postinc1
 27495  018A00  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27496  018A06  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27497  018A0C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27498  018A12  ECFA  F0A2         	call	___fladd	;wreg free
 27499                           
 27500                           ;stkvar	_bn @ sp[(-4)+-5]
 27501  018A16  0EF7               	movlw	-9
 27502  018A18  50E3               	movf	plusw1,w,c
 27503  018A1A  0D04               	mullw	4
 27504  018A1C  0E00               	movlw	low lp_filter@smooth
 27505  018A1E  24F3               	addwf	243,w,c
 27506  018A20  6ED9               	movwf	fsr2l,c
 27507  018A22  0E02               	movlw	high lp_filter@smooth
 27508  018A24  20F4               	addwfc	prodh,w,c
 27509  018A26  6EDA               	movwf	fsr2h,c
 27510  018A28  0060  F007  FFDE   	movff	btemp,postinc2
 27511  018A2E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 27512  018A34  0060  F00F  FFDE   	movff	btemp+2,postinc2
 27513  018A3A  0060  F013  FFDD   	movff	btemp+3,postdec2
 27514  018A40  52DD               	movf	postdec2,f,c
 27515  018A42  52DD               	movf	postdec2,f,c
 27516  018A44  006F FF78  F001    	movff	postinc2,btemp
 27517  018A4A  006F FF78  F002    	movff	postinc2,btemp+1
 27518  018A50  006F FF78  F003    	movff	postinc2,btemp+2
 27519  018A56  006F FF78  F004    	movff	postinc2,btemp+3
 27520  018A5C                     l1915:
 27521                           
 27522                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 27523  018A5C  0EF6               	movlw	246
 27524  018A5E  26E1               	addwf	fsr1l,f,c
 27525  018A60  0EFF               	movlw	255
 27526  018A62  22E2               	addwfc	fsr1h,f,c
 27527  018A64  0012               	return		;funcret
 27528  018A66                     __end_of_lp_filter:
 27529                           	opt callstack 0
 27530                           
 27531 ;; *************** function ___flsub *****************
 27532 ;; Defined at:
 27533 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27534 ;; Parameters:    Size  Location     Type
 27535 ;;  b               4  [STACK] float 
 27536 ;;  a               4  [STACK] float 
 27537 ;; Auto vars:     Size  Location     Type
 27538 ;;		None
 27539 ;; Return value:  Size  Location     Type
 27540 ;;                  4  [STACK] float 
 27541 ;; Registers used:
 27542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27543 ;; Tracked objects:
 27544 ;;		On entry : 0/0
 27545 ;;		On exit  : 0/0
 27546 ;;		Unchanged: 0/0
 27547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27552 ;;Total ram usage:        0 bytes
 27553 ;; Hardware stack levels used:    1
 27554 ;; Hardware stack levels required when called:   16
 27555 ;; This function calls:
 27556 ;;		___fladd
 27557 ;; This function is called by:
 27558 ;;		_conv_raw_result
 27559 ;;		_lp_filter
 27560 ;;		_calc_model_data
 27561 ;;		_calc_ror_data
 27562 ;;		_esr_check
 27563 ;;		_efgtoa
 27564 ;; This function uses a reentrant model
 27565 ;;
 27566                           
 27567                           	psect	text111
 27568  01B9DC                     __ptext111:
 27569                           	opt callstack 0
 27570  01B9DC                     ___flsub:
 27571                           	opt callstack 0
 27572                           
 27573                           ;stkvar	_a @ sp[(0)+-8]
 27574                           
 27575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27576                           ;incstack = 0
 27577 ;; hardware stack exceeded
 27578  01B9DC  0EFB               	movlw	-5
 27579  01B9DE  7EE3               	btg	plusw1,7,c
 27580                           
 27581                           ;stkvar	_a @ sp[(0)+-8]
 27582  01B9E0  0EF8               	movlw	-8
 27583  01B9E2  006F FF8F FFE6     	movff	plusw1,postinc1
 27584  01B9E8  006F FF8F FFE6     	movff	plusw1,postinc1
 27585  01B9EE  006F FF8F FFE6     	movff	plusw1,postinc1
 27586  01B9F4  006F FF8F FFE6     	movff	plusw1,postinc1
 27587                           
 27588                           ;stkvar	_b @ sp[(-4)+-4]
 27589  01B9FA  0EF8               	movlw	-8
 27590  01B9FC  006F FF8F FFE6     	movff	plusw1,postinc1
 27591  01BA02  006F FF8F FFE6     	movff	plusw1,postinc1
 27592  01BA08  006F FF8F FFE6     	movff	plusw1,postinc1
 27593  01BA0E  006F FF8F FFE6     	movff	plusw1,postinc1
 27594  01BA14  ECFA  F0A2         	call	___fladd	;wreg free
 27595                           
 27596                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27597  01BA18  0EF8               	movlw	248
 27598  01BA1A  26E1               	addwf	fsr1l,f,c
 27599  01BA1C  0EFF               	movlw	255
 27600  01BA1E  22E2               	addwfc	fsr1h,f,c
 27601  01BA20  0012               	return		;funcret
 27602  01BA22                     __end_of___flsub:
 27603                           	opt callstack 0
 27604                           
 27605 ;; *************** function ___fladd *****************
 27606 ;; Defined at:
 27607 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27608 ;; Parameters:    Size  Location     Type
 27609 ;;  b               4  [STACK] float 
 27610 ;;  a               4  [STACK] float 
 27611 ;; Auto vars:     Size  Location     Type
 27612 ;;  grs             1  [STACK] unsigned char 
 27613 ;;  bexp            1  [STACK] unsigned char 
 27614 ;;  aexp            1  [STACK] unsigned char 
 27615 ;;  signs           1  [STACK] unsigned char 
 27616 ;; Return value:  Size  Location     Type
 27617 ;;                  4  [STACK] unsigned char 
 27618 ;; Registers used:
 27619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27620 ;; Tracked objects:
 27621 ;;		On entry : 0/0
 27622 ;;		On exit  : 0/0
 27623 ;;		Unchanged: 0/0
 27624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27629 ;;Total ram usage:        0 bytes
 27630 ;; Hardware stack levels used:    1
 27631 ;; Hardware stack levels required when called:   15
 27632 ;; This function calls:
 27633 ;;		Nothing
 27634 ;; This function is called by:
 27635 ;;		_main
 27636 ;;		_conv_raw_result
 27637 ;;		_lp_filter
 27638 ;;		_calc_model_data
 27639 ;;		_efgtoa
 27640 ;;		___asfladd
 27641 ;;		___flsub
 27642 ;; This function uses a reentrant model
 27643 ;;
 27644                           
 27645                           	psect	text112
 27646  0145F4                     __ptext112:
 27647                           	opt callstack 0
 27648  0145F4                     ___fladd:
 27649                           	opt callstack 0
 27650                           
 27651                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27652  0145F4  52E6               	movf	postinc1,f,c
 27653  0145F6  52E6               	movf	postinc1,f,c
 27654  0145F8  52E6               	movf	postinc1,f,c
 27655  0145FA  52E6               	movf	postinc1,f,c
 27656                           
 27657                           ;stkvar	_b @ sp[(-4)+-4]
 27658                           
 27659                           ;incstack = 0
 27660 ;; hardware stack exceeded
 27661  0145FC  0EFB               	movlw	251
 27662  0145FE  24E1               	addwf	fsr1l,w,c
 27663  014600  6ED9               	movwf	fsr2l,c
 27664  014602  0EFF               	movlw	255
 27665  014604  20E2               	addwfc	fsr1h,w,c
 27666  014606  6EDA               	movwf	fsr2h,c
 27667  014608  50DF               	movf	indf2,w,c
 27668  01460A  6E0C               	movwf	(btemp+11)^0,c
 27669  01460C  0E80               	movlw	128
 27670  01460E  160C               	andwf	(btemp+11)^0,f,c
 27671                           
 27672                           ;stkvar	_signs @ sp[(-4)+3]
 27673  014610  0EFF               	movlw	-1
 27674  014612  0060  F033  FFE3   	movff	btemp+11,plusw1
 27675                           
 27676                           ;stkvar	_b @ sp[(-4)+-4]
 27677  014618  0EFB               	movlw	251
 27678  01461A  24E1               	addwf	fsr1l,w,c
 27679  01461C  6ED9               	movwf	fsr2l,c
 27680  01461E  0EFF               	movlw	255
 27681  014620  20E2               	addwfc	fsr1h,w,c
 27682  014622  6EDA               	movwf	fsr2h,c
 27683  014624  50DF               	movf	indf2,w,c
 27684  014626  6E0C               	movwf	(btemp+11)^0,c
 27685  014628  90D8               	bcf	status,0,c
 27686  01462A  340C               	rlcf	(btemp+11)^0,w,c
 27687  01462C  6E0B               	movwf	(btemp+10)^0,c
 27688                           
 27689                           ;stkvar	_bexp @ sp[(-4)+1]
 27690  01462E  0EFD               	movlw	-3
 27691  014630  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27692                           
 27693                           ;stkvar	_b @ sp[(-4)+-4]
 27694  014636  0EFA               	movlw	250
 27695  014638  24E1               	addwf	fsr1l,w,c
 27696  01463A  6ED9               	movwf	fsr2l,c
 27697  01463C  0EFF               	movlw	255
 27698  01463E  20E2               	addwfc	fsr1h,w,c
 27699  014640  6EDA               	movwf	fsr2h,c
 27700  014642  AEDF               	btfss	indf2,7,c
 27701  014644  D002               	goto	l7899
 27702                           
 27703                           ;stkvar	_bexp @ sp[(-4)+1]
 27704  014646  0EFD               	movlw	-3
 27705  014648  80E3               	bsf	plusw1,0,c
 27706  01464A                     l7899:
 27707                           
 27708                           ;stkvar	_bexp @ sp[(-4)+1]
 27709  01464A  0EFD               	movlw	-3
 27710  01464C  50E3               	movf	plusw1,w,c
 27711  01464E  B4D8               	btfsc	status,2,c
 27712  014650  D027               	goto	l7909
 27713                           
 27714                           ;stkvar	_bexp @ sp[(-4)+1]
 27715  014652  0EFD               	movlw	-3
 27716  014654  28E3               	incf	plusw1,w,c
 27717  014656  A4D8               	btfss	status,2,c
 27718  014658  D018               	goto	l7905
 27719  01465A  0E00               	movlw	0
 27720  01465C  6E09               	movwf	(btemp+8)^0,c
 27721  01465E  0E00               	movlw	0
 27722  014660  6E0A               	movwf	(btemp+9)^0,c
 27723  014662  0E00               	movlw	0
 27724  014664  6E0B               	movwf	(btemp+10)^0,c
 27725  014666  0E00               	movlw	0
 27726  014668  6E0C               	movwf	(btemp+11)^0,c
 27727                           
 27728                           ;stkvar	_b @ sp[(-4)+-4]
 27729  01466A  0EF8               	movlw	-8
 27730  01466C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27731  014672  0EF9               	movlw	-7
 27732  014674  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27733  01467A  0EFA               	movlw	-6
 27734  01467C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27735  014682  0EFB               	movlw	-5
 27736  014684  0060  F033  FFE3   	movff	btemp+11,plusw1
 27737  01468A                     l7905:
 27738                           
 27739                           ;stkvar	_b @ sp[(-4)+-4]
 27740  01468A  0EFA               	movlw	-6
 27741  01468C  8EE3               	bsf	plusw1,7,c
 27742                           
 27743                           ;stkvar	_b @ sp[(-4)+-4]
 27744  01468E  0EFB               	movlw	251
 27745  014690  24E1               	addwf	fsr1l,w,c
 27746  014692  6ED9               	movwf	fsr2l,c
 27747  014694  0EFF               	movlw	255
 27748  014696  20E2               	addwfc	fsr1h,w,c
 27749  014698  6EDA               	movwf	fsr2h,c
 27750  01469A  0E00               	movlw	0
 27751  01469C  6EDF               	movwf	indf2,c
 27752  01469E  D018               	goto	l7911
 27753  0146A0                     l7909:
 27754  0146A0  0E00               	movlw	0
 27755  0146A2  6E09               	movwf	(btemp+8)^0,c
 27756  0146A4  0E00               	movlw	0
 27757  0146A6  6E0A               	movwf	(btemp+9)^0,c
 27758  0146A8  0E00               	movlw	0
 27759  0146AA  6E0B               	movwf	(btemp+10)^0,c
 27760  0146AC  0E00               	movlw	0
 27761  0146AE  6E0C               	movwf	(btemp+11)^0,c
 27762                           
 27763                           ;stkvar	_b @ sp[(-4)+-4]
 27764  0146B0  0EF8               	movlw	-8
 27765  0146B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27766  0146B8  0EF9               	movlw	-7
 27767  0146BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27768  0146C0  0EFA               	movlw	-6
 27769  0146C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27770  0146C8  0EFB               	movlw	-5
 27771  0146CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27772  0146D0                     l7911:
 27773                           
 27774                           ;stkvar	_a @ sp[(-4)+-8]
 27775  0146D0  0EF7               	movlw	247
 27776  0146D2  24E1               	addwf	fsr1l,w,c
 27777  0146D4  6ED9               	movwf	fsr2l,c
 27778  0146D6  0EFF               	movlw	255
 27779  0146D8  20E2               	addwfc	fsr1h,w,c
 27780  0146DA  6EDA               	movwf	fsr2h,c
 27781  0146DC  50DF               	movf	indf2,w,c
 27782  0146DE  6E0C               	movwf	(btemp+11)^0,c
 27783  0146E0  0E80               	movlw	128
 27784  0146E2  160C               	andwf	(btemp+11)^0,f,c
 27785                           
 27786                           ;stkvar	_aexp @ sp[(-4)+2]
 27787  0146E4  0EFE               	movlw	-2
 27788  0146E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27789                           
 27790                           ;stkvar	_signs @ sp[(-4)+3]
 27791                           ;stkvar	_aexp @ sp[(-4)+2]
 27792  0146EC  50E1               	movf	fsr1l,w,c
 27793  0146EE  0FFE               	addlw	-2
 27794  0146F0  6ED9               	movwf	fsr2l,c
 27795  0146F2  50E2               	movf	fsr1h,w,c
 27796  0146F4  6EDA               	movwf	fsr2h,c
 27797  0146F6  0EFF               	movlw	255
 27798  0146F8  22DA               	addwfc	fsr2h,f,c
 27799  0146FA  0EFF               	movlw	-1
 27800  0146FC  50E3               	movf	plusw1,w,c
 27801  0146FE  18DE               	xorwf	postinc2,w,c
 27802  014700  B4D8               	btfsc	status,2,c
 27803  014702  D002               	goto	l7917
 27804                           
 27805                           ;stkvar	_signs @ sp[(-4)+3]
 27806  014704  0EFF               	movlw	-1
 27807  014706  8CE3               	bsf	plusw1,6,c
 27808  014708                     l7917:
 27809                           
 27810                           ;stkvar	_a @ sp[(-4)+-8]
 27811  014708  0EF7               	movlw	247
 27812  01470A  24E1               	addwf	fsr1l,w,c
 27813  01470C  6ED9               	movwf	fsr2l,c
 27814  01470E  0EFF               	movlw	255
 27815  014710  20E2               	addwfc	fsr1h,w,c
 27816  014712  6EDA               	movwf	fsr2h,c
 27817  014714  50DF               	movf	indf2,w,c
 27818  014716  6E0C               	movwf	(btemp+11)^0,c
 27819  014718  90D8               	bcf	status,0,c
 27820  01471A  340C               	rlcf	(btemp+11)^0,w,c
 27821  01471C  6E0B               	movwf	(btemp+10)^0,c
 27822                           
 27823                           ;stkvar	_aexp @ sp[(-4)+2]
 27824  01471E  0EFE               	movlw	-2
 27825  014720  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27826                           
 27827                           ;stkvar	_a @ sp[(-4)+-8]
 27828  014726  0EF6               	movlw	246
 27829  014728  24E1               	addwf	fsr1l,w,c
 27830  01472A  6ED9               	movwf	fsr2l,c
 27831  01472C  0EFF               	movlw	255
 27832  01472E  20E2               	addwfc	fsr1h,w,c
 27833  014730  6EDA               	movwf	fsr2h,c
 27834  014732  AEDF               	btfss	indf2,7,c
 27835  014734  D002               	goto	l7923
 27836                           
 27837                           ;stkvar	_aexp @ sp[(-4)+2]
 27838  014736  0EFE               	movlw	-2
 27839  014738  80E3               	bsf	plusw1,0,c
 27840  01473A                     l7923:
 27841                           
 27842                           ;stkvar	_aexp @ sp[(-4)+2]
 27843  01473A  0EFE               	movlw	-2
 27844  01473C  50E3               	movf	plusw1,w,c
 27845  01473E  B4D8               	btfsc	status,2,c
 27846  014740  D027               	goto	l7933
 27847                           
 27848                           ;stkvar	_aexp @ sp[(-4)+2]
 27849  014742  0EFE               	movlw	-2
 27850  014744  28E3               	incf	plusw1,w,c
 27851  014746  A4D8               	btfss	status,2,c
 27852  014748  D018               	goto	l7929
 27853  01474A  0E00               	movlw	0
 27854  01474C  6E09               	movwf	(btemp+8)^0,c
 27855  01474E  0E00               	movlw	0
 27856  014750  6E0A               	movwf	(btemp+9)^0,c
 27857  014752  0E00               	movlw	0
 27858  014754  6E0B               	movwf	(btemp+10)^0,c
 27859  014756  0E00               	movlw	0
 27860  014758  6E0C               	movwf	(btemp+11)^0,c
 27861                           
 27862                           ;stkvar	_a @ sp[(-4)+-8]
 27863  01475A  0EF4               	movlw	-12
 27864  01475C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27865  014762  0EF5               	movlw	-11
 27866  014764  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27867  01476A  0EF6               	movlw	-10
 27868  01476C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27869  014772  0EF7               	movlw	-9
 27870  014774  0060  F033  FFE3   	movff	btemp+11,plusw1
 27871  01477A                     l7929:
 27872                           
 27873                           ;stkvar	_a @ sp[(-4)+-8]
 27874  01477A  0EF6               	movlw	-10
 27875  01477C  8EE3               	bsf	plusw1,7,c
 27876                           
 27877                           ;stkvar	_a @ sp[(-4)+-8]
 27878  01477E  0EF7               	movlw	247
 27879  014780  24E1               	addwf	fsr1l,w,c
 27880  014782  6ED9               	movwf	fsr2l,c
 27881  014784  0EFF               	movlw	255
 27882  014786  20E2               	addwfc	fsr1h,w,c
 27883  014788  6EDA               	movwf	fsr2h,c
 27884  01478A  0E00               	movlw	0
 27885  01478C  6EDF               	movwf	indf2,c
 27886  01478E  D018               	goto	l7935
 27887  014790                     l7933:
 27888  014790  0E00               	movlw	0
 27889  014792  6E09               	movwf	(btemp+8)^0,c
 27890  014794  0E00               	movlw	0
 27891  014796  6E0A               	movwf	(btemp+9)^0,c
 27892  014798  0E00               	movlw	0
 27893  01479A  6E0B               	movwf	(btemp+10)^0,c
 27894  01479C  0E00               	movlw	0
 27895  01479E  6E0C               	movwf	(btemp+11)^0,c
 27896                           
 27897                           ;stkvar	_a @ sp[(-4)+-8]
 27898  0147A0  0EF4               	movlw	-12
 27899  0147A2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27900  0147A8  0EF5               	movlw	-11
 27901  0147AA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27902  0147B0  0EF6               	movlw	-10
 27903  0147B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27904  0147B8  0EF7               	movlw	-9
 27905  0147BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27906  0147C0                     l7935:
 27907                           
 27908                           ;stkvar	_bexp @ sp[(-4)+1]
 27909                           ;stkvar	_aexp @ sp[(-4)+2]
 27910  0147C0  50E1               	movf	fsr1l,w,c
 27911  0147C2  0FFE               	addlw	-2
 27912  0147C4  6ED9               	movwf	fsr2l,c
 27913  0147C6  50E2               	movf	fsr1h,w,c
 27914  0147C8  6EDA               	movwf	fsr2h,c
 27915  0147CA  0EFF               	movlw	255
 27916  0147CC  22DA               	addwfc	fsr2h,f,c
 27917  0147CE  0EFD               	movlw	-3
 27918  0147D0  50E3               	movf	plusw1,w,c
 27919  0147D2  5CDE               	subwf	postinc2,w,c
 27920  0147D4  B0D8               	btfsc	status,0,c
 27921  0147D6  D0A4               	goto	l7971
 27922                           
 27923                           ;stkvar	_signs @ sp[(-4)+3]
 27924  0147D8  0EFF               	movlw	-1
 27925  0147DA  ACE3               	btfss	plusw1,6,c
 27926  0147DC  D002               	goto	l7941
 27927                           
 27928                           ;stkvar	_signs @ sp[(-4)+3]
 27929  0147DE  0EFF               	movlw	-1
 27930  0147E0  7EE3               	btg	plusw1,7,c
 27931  0147E2                     l7941:
 27932                           
 27933                           ;stkvar	_bexp @ sp[(-4)+1]
 27934                           ;stkvar	_grs @ sp[(-4)+0]
 27935  0147E2  0EFD               	movlw	-3
 27936  0147E4  006F FF8C  F001    	movff	plusw1,btemp
 27937  0147EA  0EFC               	movlw	-4
 27938  0147EC  0060  F007  FFE3   	movff	btemp,plusw1
 27939                           
 27940                           ;stkvar	_aexp @ sp[(-4)+2]
 27941                           ;stkvar	_bexp @ sp[(-4)+1]
 27942  0147F2  0EFE               	movlw	-2
 27943  0147F4  006F FF8C  F001    	movff	plusw1,btemp
 27944  0147FA  0EFD               	movlw	-3
 27945  0147FC  0060  F007  FFE3   	movff	btemp,plusw1
 27946                           
 27947                           ;stkvar	_grs @ sp[(-4)+0]
 27948                           ;stkvar	_aexp @ sp[(-4)+2]
 27949  014802  0EFC               	movlw	-4
 27950  014804  006F FF8C  F001    	movff	plusw1,btemp
 27951  01480A  0EFE               	movlw	-2
 27952  01480C  0060  F007  FFE3   	movff	btemp,plusw1
 27953                           
 27954                           ;stkvar	_b @ sp[(-4)+-4]
 27955                           ;stkvar	_grs @ sp[(-4)+0]
 27956  014812  0EF8               	movlw	-8
 27957  014814  006F FF8C  F001    	movff	plusw1,btemp
 27958  01481A  0EFC               	movlw	-4
 27959  01481C  0060  F007  FFE3   	movff	btemp,plusw1
 27960                           
 27961                           ;stkvar	_a @ sp[(-4)+-8]
 27962                           ;stkvar	_b @ sp[(-4)+-4]
 27963  014822  0EF4               	movlw	-12
 27964  014824  006F FF8C  F001    	movff	plusw1,btemp
 27965  01482A  0EF8               	movlw	-8
 27966  01482C  0060  F007  FFE3   	movff	btemp,plusw1
 27967                           
 27968                           ;stkvar	_grs @ sp[(-4)+0]
 27969                           ;stkvar	_a @ sp[(-4)+-8]
 27970  014832  0EFC               	movlw	-4
 27971  014834  006F FF8C  F001    	movff	plusw1,btemp
 27972  01483A  0EF4               	movlw	-12
 27973  01483C  0060  F007  FFE3   	movff	btemp,plusw1
 27974                           
 27975                           ;stkvar	_b @ sp[(-4)+-4]
 27976  014842  0EF9               	movlw	249
 27977  014844  24E1               	addwf	fsr1l,w,c
 27978  014846  6ED9               	movwf	fsr2l,c
 27979  014848  0EFF               	movlw	255
 27980  01484A  20E2               	addwfc	fsr1h,w,c
 27981  01484C  6EDA               	movwf	fsr2h,c
 27982  01484E  50DF               	movf	indf2,w,c
 27983  014850  6E0C               	movwf	(btemp+11)^0,c
 27984                           
 27985                           ;stkvar	_grs @ sp[(-4)+0]
 27986  014852  0EFC               	movlw	-4
 27987  014854  0060  F033  FFE3   	movff	btemp+11,plusw1
 27988                           
 27989                           ;stkvar	_a @ sp[(-4)+-8]
 27990  01485A  0EF5               	movlw	245
 27991  01485C  24E1               	addwf	fsr1l,w,c
 27992  01485E  6ED9               	movwf	fsr2l,c
 27993  014860  0EFF               	movlw	255
 27994  014862  20E2               	addwfc	fsr1h,w,c
 27995  014864  6EDA               	movwf	fsr2h,c
 27996                           
 27997                           ;stkvar	_b @ sp[(-4)+-4]
 27998  014866  0EF9               	movlw	249
 27999  014868  24E1               	addwf	fsr1l,w,c
 28000  01486A  6EE9               	movwf	fsr0l,c
 28001  01486C  0EFF               	movlw	255
 28002  01486E  20E2               	addwfc	fsr1h,w,c
 28003  014870  6EEA               	movwf	fsr0h,c
 28004  014872  006F FF7F FFEF     	movff	indf2,indf0
 28005                           
 28006                           ;stkvar	_grs @ sp[(-4)+0]
 28007                           ;stkvar	_a @ sp[(-4)+-8]
 28008  014878  0EF5               	movlw	245
 28009  01487A  24E1               	addwf	fsr1l,w,c
 28010  01487C  6ED9               	movwf	fsr2l,c
 28011  01487E  0EFF               	movlw	255
 28012  014880  20E2               	addwfc	fsr1h,w,c
 28013  014882  6EDA               	movwf	fsr2h,c
 28014  014884  0EFC               	movlw	-4
 28015  014886  006F FF8F FFDF     	movff	plusw1,indf2
 28016                           
 28017                           ;stkvar	_b @ sp[(-4)+-4]
 28018  01488C  0EFA               	movlw	250
 28019  01488E  24E1               	addwf	fsr1l,w,c
 28020  014890  6ED9               	movwf	fsr2l,c
 28021  014892  0EFF               	movlw	255
 28022  014894  20E2               	addwfc	fsr1h,w,c
 28023  014896  6EDA               	movwf	fsr2h,c
 28024  014898  50DF               	movf	indf2,w,c
 28025  01489A  6E0C               	movwf	(btemp+11)^0,c
 28026                           
 28027                           ;stkvar	_grs @ sp[(-4)+0]
 28028  01489C  0EFC               	movlw	-4
 28029  01489E  0060  F033  FFE3   	movff	btemp+11,plusw1
 28030                           
 28031                           ;stkvar	_a @ sp[(-4)+-8]
 28032  0148A4  0EF6               	movlw	246
 28033  0148A6  24E1               	addwf	fsr1l,w,c
 28034  0148A8  6ED9               	movwf	fsr2l,c
 28035  0148AA  0EFF               	movlw	255
 28036  0148AC  20E2               	addwfc	fsr1h,w,c
 28037  0148AE  6EDA               	movwf	fsr2h,c
 28038                           
 28039                           ;stkvar	_b @ sp[(-4)+-4]
 28040  0148B0  0EFA               	movlw	250
 28041  0148B2  24E1               	addwf	fsr1l,w,c
 28042  0148B4  6EE9               	movwf	fsr0l,c
 28043  0148B6  0EFF               	movlw	255
 28044  0148B8  20E2               	addwfc	fsr1h,w,c
 28045  0148BA  6EEA               	movwf	fsr0h,c
 28046  0148BC  006F FF7F FFEF     	movff	indf2,indf0
 28047                           
 28048                           ;stkvar	_grs @ sp[(-4)+0]
 28049                           ;stkvar	_a @ sp[(-4)+-8]
 28050  0148C2  0EF6               	movlw	246
 28051  0148C4  24E1               	addwf	fsr1l,w,c
 28052  0148C6  6ED9               	movwf	fsr2l,c
 28053  0148C8  0EFF               	movlw	255
 28054  0148CA  20E2               	addwfc	fsr1h,w,c
 28055  0148CC  6EDA               	movwf	fsr2h,c
 28056  0148CE  0EFC               	movlw	-4
 28057  0148D0  006F FF8F FFDF     	movff	plusw1,indf2
 28058                           
 28059                           ;stkvar	_b @ sp[(-4)+-4]
 28060  0148D6  0EFB               	movlw	251
 28061  0148D8  24E1               	addwf	fsr1l,w,c
 28062  0148DA  6ED9               	movwf	fsr2l,c
 28063  0148DC  0EFF               	movlw	255
 28064  0148DE  20E2               	addwfc	fsr1h,w,c
 28065  0148E0  6EDA               	movwf	fsr2h,c
 28066  0148E2  50DF               	movf	indf2,w,c
 28067  0148E4  6E0C               	movwf	(btemp+11)^0,c
 28068                           
 28069                           ;stkvar	_grs @ sp[(-4)+0]
 28070  0148E6  0EFC               	movlw	-4
 28071  0148E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28072                           
 28073                           ;stkvar	_a @ sp[(-4)+-8]
 28074  0148EE  0EF7               	movlw	247
 28075  0148F0  24E1               	addwf	fsr1l,w,c
 28076  0148F2  6ED9               	movwf	fsr2l,c
 28077  0148F4  0EFF               	movlw	255
 28078  0148F6  20E2               	addwfc	fsr1h,w,c
 28079  0148F8  6EDA               	movwf	fsr2h,c
 28080                           
 28081                           ;stkvar	_b @ sp[(-4)+-4]
 28082  0148FA  0EFB               	movlw	251
 28083  0148FC  24E1               	addwf	fsr1l,w,c
 28084  0148FE  6EE9               	movwf	fsr0l,c
 28085  014900  0EFF               	movlw	255
 28086  014902  20E2               	addwfc	fsr1h,w,c
 28087  014904  6EEA               	movwf	fsr0h,c
 28088  014906  006F FF7F FFEF     	movff	indf2,indf0
 28089                           
 28090                           ;stkvar	_grs @ sp[(-4)+0]
 28091                           ;stkvar	_a @ sp[(-4)+-8]
 28092  01490C  0EF7               	movlw	247
 28093  01490E  24E1               	addwf	fsr1l,w,c
 28094  014910  6ED9               	movwf	fsr2l,c
 28095  014912  0EFF               	movlw	255
 28096  014914  20E2               	addwfc	fsr1h,w,c
 28097  014916  6EDA               	movwf	fsr2h,c
 28098  014918  0EFC               	movlw	-4
 28099  01491A  006F FF8F FFDF     	movff	plusw1,indf2
 28100  014920                     l7971:
 28101                           
 28102                           ;stkvar	_grs @ sp[(-4)+0]
 28103  014920  0EFC               	movlw	-4
 28104  014922  6AE3               	clrf	plusw1,c
 28105                           
 28106                           ;stkvar	_aexp @ sp[(-4)+2]
 28107  014924  0EFE               	movlw	-2
 28108  014926  50E3               	movf	plusw1,w,c
 28109  014928  6E0B               	movwf	(btemp+10)^0,c
 28110  01492A  6A0C               	clrf	(btemp+11)^0,c
 28111                           
 28112                           ;stkvar	_bexp @ sp[(-4)+1]
 28113  01492C  0EFD               	movlw	-3
 28114  01492E  50E3               	movf	plusw1,w,c
 28115  014930  5E0B               	subwf	(btemp+10)^0,f,c
 28116  014932  0E00               	movlw	0
 28117  014934  5A0C               	subwfb	(btemp+11)^0,f,c
 28118  014936  BE0C               	btfsc	(btemp+11)^0,7,c
 28119  014938  D062               	goto	l7995
 28120  01493A  500C               	movf	(btemp+11)^0,w,c
 28121  01493C  E104               	bnz	u5610
 28122  01493E  0E1A               	movlw	26
 28123  014940  5C0B               	subwf	(btemp+10)^0,w,c
 28124  014942  A0D8               	btfss	status,0,c
 28125  014944  D05C               	goto	l7995
 28126  014946                     u5610:
 28127                           
 28128                           ;stkvar	_b @ sp[(-4)+-4]
 28129  014946  0EF8               	movlw	-8
 28130  014948  50E3               	movf	plusw1,w,c
 28131  01494A  E10A               	bnz	u5621
 28132  01494C  0EF9               	movlw	-7
 28133  01494E  50E3               	movf	plusw1,w,c
 28134  014950  E107               	bnz	u5621
 28135  014952  0EFA               	movlw	-6
 28136  014954  50E3               	movf	plusw1,w,c
 28137  014956  E104               	bnz	u5621
 28138  014958  0EFB               	movlw	-5
 28139  01495A  50E3               	movf	plusw1,w,c
 28140  01495C  B4D8               	btfsc	status,2,c
 28141  01495E  D003               	goto	u5620
 28142  014960                     u5621:
 28143  014960  6A0C               	clrf	(btemp+11)^0,c
 28144  014962  2A0C               	incf	(btemp+11)^0,f,c
 28145  014964  D001               	goto	u5638
 28146  014966                     u5620:
 28147  014966  6A0C               	clrf	(btemp+11)^0,c
 28148  014968                     u5638:
 28149                           
 28150                           ;stkvar	_grs @ sp[(-4)+0]
 28151  014968  0EFC               	movlw	-4
 28152  01496A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28153                           
 28154                           ;stkvar	_b @ sp[(-4)+-4]
 28155  014970  0EF8               	movlw	-8
 28156  014972  6AE3               	clrf	plusw1,c
 28157  014974  0EF9               	movlw	-7
 28158  014976  6AE3               	clrf	plusw1,c
 28159  014978  0EFA               	movlw	-6
 28160  01497A  6AE3               	clrf	plusw1,c
 28161  01497C  0EFB               	movlw	-5
 28162  01497E  6AE3               	clrf	plusw1,c
 28163                           
 28164                           ;stkvar	_aexp @ sp[(-4)+2]
 28165                           ;stkvar	_bexp @ sp[(-4)+1]
 28166  014980  0EFE               	movlw	-2
 28167  014982  006F FF8C  F001    	movff	plusw1,btemp
 28168  014988  0EFD               	movlw	-3
 28169  01498A  0060  F007  FFE3   	movff	btemp,plusw1
 28170  014990  D042               	goto	u5670
 28171  014992                     l7981:
 28172                           
 28173                           ;stkvar	_grs @ sp[(-4)+0]
 28174  014992  0EFC               	movlw	-4
 28175  014994  A0E3               	btfss	plusw1,0,c
 28176  014996  D00D               	goto	l7985
 28177                           
 28178                           ;stkvar	_grs @ sp[(-4)+0]
 28179  014998  0EFC               	movlw	-4
 28180  01499A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28181  0149A0  90D8               	bcf	status,0,c
 28182  0149A2  320C               	rrcf	(btemp+11)^0,f,c
 28183  0149A4  0E01               	movlw	1
 28184  0149A6  120C               	iorwf	(btemp+11)^0,f,c
 28185                           
 28186                           ;stkvar	_grs @ sp[(-4)+0]
 28187  0149A8  0EFC               	movlw	-4
 28188  0149AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28189  0149B0  D009               	goto	l7987
 28190  0149B2                     l7985:
 28191                           
 28192                           ;stkvar	_grs @ sp[(-4)+0]
 28193  0149B2  50E1               	movf	fsr1l,w,c
 28194  0149B4  0FFC               	addlw	-4
 28195  0149B6  6ED9               	movwf	fsr2l,c
 28196  0149B8  50E2               	movf	fsr1h,w,c
 28197  0149BA  6EDA               	movwf	fsr2h,c
 28198  0149BC  0EFF               	movlw	255
 28199  0149BE  22DA               	addwfc	fsr2h,f,c
 28200  0149C0  90D8               	bcf	status,0,c
 28201  0149C2  32DF               	rrcf	indf2,f,c
 28202  0149C4                     l7987:
 28203                           
 28204                           ;stkvar	_b @ sp[(-4)+-4]
 28205  0149C4  0EF8               	movlw	-8
 28206  0149C6  A0E3               	btfss	plusw1,0,c
 28207  0149C8  D002               	goto	l7991
 28208                           
 28209                           ;stkvar	_grs @ sp[(-4)+0]
 28210  0149CA  0EFC               	movlw	-4
 28211  0149CC  8EE3               	bsf	plusw1,7,c
 28212  0149CE                     l7991:
 28213  0149CE  0E01               	movlw	1
 28214  0149D0  6E0C               	movwf	(btemp+11)^0,c
 28215                           
 28216                           ;stkvar	_b @ sp[(-4)+-4]
 28217  0149D2  50E1               	movf	fsr1l,w,c
 28218  0149D4  0FF8               	addlw	-8
 28219  0149D6  6ED9               	movwf	fsr2l,c
 28220  0149D8  50E2               	movf	fsr1h,w,c
 28221  0149DA  6EDA               	movwf	fsr2h,c
 28222  0149DC  0EFF               	movlw	255
 28223  0149DE  22DA               	addwfc	fsr2h,f,c
 28224  0149E0  280C               	incf	(btemp+11)^0,w,c
 28225  0149E2  52DE               	movf	postinc2,f,c
 28226  0149E4  D008               	goto	u5660
 28227  0149E6                     u5665:
 28228  0149E6  52DE               	movf	postinc2,f,c
 28229  0149E8  90D8               	bcf	status,0,c
 28230  0149EA  BEDC               	btfsc	preinc2,7,c
 28231  0149EC  80D8               	bsf	status,0,c
 28232  0149EE  32DD               	rrcf	postdec2,f,c
 28233  0149F0  32DD               	rrcf	postdec2,f,c
 28234  0149F2  32DD               	rrcf	postdec2,f,c
 28235  0149F4  32DE               	rrcf	postinc2,f,c
 28236  0149F6                     u5660:
 28237  0149F6  2EE8               	decfsz	wreg,f,c
 28238  0149F8  D7F6               	goto	u5665
 28239                           
 28240                           ;stkvar	_bexp @ sp[(-4)+1]
 28241  0149FA  0EFD               	movlw	-3
 28242  0149FC  2AE3               	incf	plusw1,f,c
 28243  0149FE                     l7995:
 28244                           
 28245                           ;stkvar	_aexp @ sp[(-4)+2]
 28246                           ;stkvar	_bexp @ sp[(-4)+1]
 28247  0149FE  50E1               	movf	fsr1l,w,c
 28248  014A00  0FFD               	addlw	-3
 28249  014A02  6ED9               	movwf	fsr2l,c
 28250  014A04  50E2               	movf	fsr1h,w,c
 28251  014A06  6EDA               	movwf	fsr2h,c
 28252  014A08  0EFF               	movlw	255
 28253  014A0A  22DA               	addwfc	fsr2h,f,c
 28254  014A0C  0EFE               	movlw	-2
 28255  014A0E  50E3               	movf	plusw1,w,c
 28256  014A10  5CDE               	subwf	postinc2,w,c
 28257  014A12  A0D8               	btfss	status,0,c
 28258  014A14  D7BE               	goto	l7981
 28259  014A16                     u5670:
 28260                           
 28261                           ;stkvar	_signs @ sp[(-4)+3]
 28262  014A16  0EFF               	movlw	-1
 28263  014A18  BCE3               	btfsc	plusw1,6,c
 28264  014A1A  D066               	goto	l8023
 28265                           
 28266                           ;stkvar	_bexp @ sp[(-4)+1]
 28267  014A1C  0EFD               	movlw	-3
 28268  014A1E  50E3               	movf	plusw1,w,c
 28269  014A20  B4D8               	btfsc	status,2,c
 28270  014A22  D0F2               	goto	u5770
 28271                           
 28272                           ;stkvar	_a @ sp[(-4)+-8]
 28273                           ;stkvar	_b @ sp[(-4)+-4]
 28274  014A24  0EF8               	movlw	-8
 28275  014A26  50E3               	movf	plusw1,w,c
 28276  014A28  6E01               	movwf	btemp^0,c
 28277  014A2A  0EF4               	movlw	-12
 28278  014A2C  50E3               	movf	plusw1,w,c
 28279  014A2E  2601               	addwf	btemp^0,f,c
 28280  014A30  0EF8               	movlw	-8
 28281  014A32  0060  F007  FFE3   	movff	btemp,plusw1
 28282  014A38  0EF9               	movlw	-7
 28283  014A3A  50E3               	movf	plusw1,w,c
 28284  014A3C  6E01               	movwf	btemp^0,c
 28285  014A3E  0EF5               	movlw	-11
 28286  014A40  50E3               	movf	plusw1,w,c
 28287  014A42  2201               	addwfc	btemp^0,f,c
 28288  014A44  0EF9               	movlw	-7
 28289  014A46  0060  F007  FFE3   	movff	btemp,plusw1
 28290  014A4C  0EFA               	movlw	-6
 28291  014A4E  50E3               	movf	plusw1,w,c
 28292  014A50  6E01               	movwf	btemp^0,c
 28293  014A52  0EF6               	movlw	-10
 28294  014A54  50E3               	movf	plusw1,w,c
 28295  014A56  2201               	addwfc	btemp^0,f,c
 28296  014A58  0EFA               	movlw	-6
 28297  014A5A  0060  F007  FFE3   	movff	btemp,plusw1
 28298  014A60  0EFB               	movlw	-5
 28299  014A62  50E3               	movf	plusw1,w,c
 28300  014A64  6E01               	movwf	btemp^0,c
 28301  014A66  0EF7               	movlw	-9
 28302  014A68  50E3               	movf	plusw1,w,c
 28303  014A6A  2201               	addwfc	btemp^0,f,c
 28304  014A6C  0EFB               	movlw	-5
 28305  014A6E  0060  F007  FFE3   	movff	btemp,plusw1
 28306                           
 28307                           ;stkvar	_b @ sp[(-4)+-4]
 28308  014A74  0EFB               	movlw	-5
 28309  014A76  A0E3               	btfss	plusw1,0,c
 28310  014A78  D101               	goto	u5810
 28311                           
 28312                           ;stkvar	_grs @ sp[(-4)+0]
 28313  014A7A  0EFC               	movlw	-4
 28314  014A7C  A0E3               	btfss	plusw1,0,c
 28315  014A7E  D00D               	goto	l8013
 28316                           
 28317                           ;stkvar	_grs @ sp[(-4)+0]
 28318  014A80  0EFC               	movlw	-4
 28319  014A82  006F FF8C  F00C    	movff	plusw1,btemp+11
 28320  014A88  90D8               	bcf	status,0,c
 28321  014A8A  320C               	rrcf	(btemp+11)^0,f,c
 28322  014A8C  0E01               	movlw	1
 28323  014A8E  120C               	iorwf	(btemp+11)^0,f,c
 28324                           
 28325                           ;stkvar	_grs @ sp[(-4)+0]
 28326  014A90  0EFC               	movlw	-4
 28327  014A92  0060  F033  FFE3   	movff	btemp+11,plusw1
 28328  014A98  D009               	goto	l8015
 28329  014A9A                     l8013:
 28330                           
 28331                           ;stkvar	_grs @ sp[(-4)+0]
 28332  014A9A  50E1               	movf	fsr1l,w,c
 28333  014A9C  0FFC               	addlw	-4
 28334  014A9E  6ED9               	movwf	fsr2l,c
 28335  014AA0  50E2               	movf	fsr1h,w,c
 28336  014AA2  6EDA               	movwf	fsr2h,c
 28337  014AA4  0EFF               	movlw	255
 28338  014AA6  22DA               	addwfc	fsr2h,f,c
 28339  014AA8  90D8               	bcf	status,0,c
 28340  014AAA  32DF               	rrcf	indf2,f,c
 28341  014AAC                     l8015:
 28342                           
 28343                           ;stkvar	_b @ sp[(-4)+-4]
 28344  014AAC  0EF8               	movlw	-8
 28345  014AAE  A0E3               	btfss	plusw1,0,c
 28346  014AB0  D002               	goto	l8019
 28347                           
 28348                           ;stkvar	_grs @ sp[(-4)+0]
 28349  014AB2  0EFC               	movlw	-4
 28350  014AB4  8EE3               	bsf	plusw1,7,c
 28351  014AB6                     l8019:
 28352  014AB6  0E01               	movlw	1
 28353  014AB8  6E0C               	movwf	(btemp+11)^0,c
 28354                           
 28355                           ;stkvar	_b @ sp[(-4)+-4]
 28356  014ABA  50E1               	movf	fsr1l,w,c
 28357  014ABC  0FF8               	addlw	-8
 28358  014ABE  6ED9               	movwf	fsr2l,c
 28359  014AC0  50E2               	movf	fsr1h,w,c
 28360  014AC2  6EDA               	movwf	fsr2h,c
 28361  014AC4  0EFF               	movlw	255
 28362  014AC6  22DA               	addwfc	fsr2h,f,c
 28363  014AC8  280C               	incf	(btemp+11)^0,w,c
 28364  014ACA  52DE               	movf	postinc2,f,c
 28365  014ACC  D008               	goto	u5730
 28366  014ACE                     u5735:
 28367  014ACE  52DE               	movf	postinc2,f,c
 28368  014AD0  90D8               	bcf	status,0,c
 28369  014AD2  BEDC               	btfsc	preinc2,7,c
 28370  014AD4  80D8               	bsf	status,0,c
 28371  014AD6  32DD               	rrcf	postdec2,f,c
 28372  014AD8  32DD               	rrcf	postdec2,f,c
 28373  014ADA  32DD               	rrcf	postdec2,f,c
 28374  014ADC  32DE               	rrcf	postinc2,f,c
 28375  014ADE                     u5730:
 28376  014ADE  2EE8               	decfsz	wreg,f,c
 28377  014AE0  D7F6               	goto	u5735
 28378                           
 28379                           ;stkvar	_bexp @ sp[(-4)+1]
 28380  014AE2  0EFD               	movlw	-3
 28381  014AE4  2AE3               	incf	plusw1,f,c
 28382  014AE6  D0CA               	goto	u5810
 28383  014AE8                     l8023:
 28384                           
 28385                           ;stkvar	_a @ sp[(-4)+-8]
 28386                           ;stkvar	_b @ sp[(-4)+-4]
 28387  014AE8  50E1               	movf	fsr1l,w,c
 28388  014AEA  0FF8               	addlw	-8
 28389  014AEC  6ED9               	movwf	fsr2l,c
 28390  014AEE  50E2               	movf	fsr1h,w,c
 28391  014AF0  6EDA               	movwf	fsr2h,c
 28392  014AF2  0EFF               	movlw	255
 28393  014AF4  22DA               	addwfc	fsr2h,f,c
 28394  014AF6  0EF4               	movlw	-12
 28395  014AF8  50E3               	movf	plusw1,w,c
 28396  014AFA  5CDE               	subwf	postinc2,w,c
 28397  014AFC  0EF5               	movlw	-11
 28398  014AFE  50E3               	movf	plusw1,w,c
 28399  014B00  58DE               	subwfb	postinc2,w,c
 28400  014B02  0EF6               	movlw	-10
 28401  014B04  50E3               	movf	plusw1,w,c
 28402  014B06  58DE               	subwfb	postinc2,w,c
 28403  014B08  50DE               	movf	postinc2,w,c
 28404  014B0A  0A80               	xorlw	128
 28405  014B0C  6E01               	movwf	btemp^0,c
 28406  014B0E  0EF7               	movlw	-9
 28407  014B10  50E3               	movf	plusw1,w,c
 28408  014B12  0A80               	xorlw	128
 28409  014B14  5801               	subwfb	btemp^0,w,c
 28410  014B16  B0D8               	btfsc	status,0,c
 28411  014B18  D053               	goto	l8035
 28412                           
 28413                           ;stkvar	_b @ sp[(-4)+-4]
 28414                           ;stkvar	_a @ sp[(-4)+-8]
 28415  014B1A  0EF4               	movlw	-12
 28416  014B1C  006F FF8C  F009    	movff	plusw1,btemp+8
 28417  014B22  0EF5               	movlw	-11
 28418  014B24  006F FF8C  F00A    	movff	plusw1,btemp+9
 28419  014B2A  0EF6               	movlw	-10
 28420  014B2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 28421  014B32  0EF7               	movlw	-9
 28422  014B34  006F FF8C  F00C    	movff	plusw1,btemp+11
 28423  014B3A  0EF8               	movlw	-8
 28424  014B3C  50E3               	movf	plusw1,w,c
 28425  014B3E  5E09               	subwf	(btemp+8)^0,f,c
 28426  014B40  0EF9               	movlw	-7
 28427  014B42  50E3               	movf	plusw1,w,c
 28428  014B44  5A0A               	subwfb	(btemp+9)^0,f,c
 28429  014B46  0EFA               	movlw	-6
 28430  014B48  50E3               	movf	plusw1,w,c
 28431  014B4A  5A0B               	subwfb	(btemp+10)^0,f,c
 28432  014B4C  0EFB               	movlw	-5
 28433  014B4E  50E3               	movf	plusw1,w,c
 28434  014B50  5A0C               	subwfb	(btemp+11)^0,f,c
 28435  014B52  0EFF               	movlw	255
 28436  014B54  2409               	addwf	(btemp+8)^0,w,c
 28437  014B56  6E05               	movwf	(btemp+4)^0,c
 28438  014B58  0EFF               	movlw	255
 28439  014B5A  200A               	addwfc	(btemp+9)^0,w,c
 28440  014B5C  6E06               	movwf	(btemp+5)^0,c
 28441  014B5E  0EFF               	movlw	255
 28442  014B60  200B               	addwfc	(btemp+10)^0,w,c
 28443  014B62  6E07               	movwf	(btemp+6)^0,c
 28444  014B64  0EFF               	movlw	255
 28445  014B66  200C               	addwfc	(btemp+11)^0,w,c
 28446  014B68  6E08               	movwf	(btemp+7)^0,c
 28447                           
 28448                           ;stkvar	_b @ sp[(-4)+-4]
 28449  014B6A  0EF8               	movlw	-8
 28450  014B6C  0060  F017  FFE3   	movff	btemp+4,plusw1
 28451  014B72  0EF9               	movlw	-7
 28452  014B74  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28453  014B7A  0EFA               	movlw	-6
 28454  014B7C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28455  014B82  0EFB               	movlw	-5
 28456  014B84  0060  F023  FFE3   	movff	btemp+7,plusw1
 28457                           
 28458                           ;stkvar	_signs @ sp[(-4)+3]
 28459  014B8A  0EFF               	movlw	-1
 28460  014B8C  7EE3               	btg	plusw1,7,c
 28461                           
 28462                           ;stkvar	_grs @ sp[(-4)+0]
 28463  014B8E  0EFC               	movlw	-4
 28464  014B90  50E3               	movf	plusw1,w,c
 28465  014B92  0800               	sublw	0
 28466  014B94  6E0C               	movwf	(btemp+11)^0,c
 28467                           
 28468                           ;stkvar	_grs @ sp[(-4)+0]
 28469  014B96  0EFC               	movlw	-4
 28470  014B98  0060  F033  FFE3   	movff	btemp+11,plusw1
 28471                           
 28472                           ;stkvar	_grs @ sp[(-4)+0]
 28473  014B9E  0EFC               	movlw	-4
 28474  014BA0  50E3               	movf	plusw1,w,c
 28475  014BA2  A4D8               	btfss	status,2,c
 28476  014BA4  D020               	goto	l8037
 28477                           
 28478                           ;stkvar	_b @ sp[(-4)+-4]
 28479  014BA6  50E1               	movf	fsr1l,w,c
 28480  014BA8  0FF8               	addlw	-8
 28481  014BAA  6ED9               	movwf	fsr2l,c
 28482  014BAC  50E2               	movf	fsr1h,w,c
 28483  014BAE  6EDA               	movwf	fsr2h,c
 28484  014BB0  0EFF               	movlw	255
 28485  014BB2  22DA               	addwfc	fsr2h,f,c
 28486  014BB4  2ADE               	incf	postinc2,f,c
 28487  014BB6  0E00               	movlw	0
 28488  014BB8  22DE               	addwfc	postinc2,f,c
 28489  014BBA  22DE               	addwfc	postinc2,f,c
 28490  014BBC  22DE               	addwfc	postinc2,f,c
 28491  014BBE  D013               	goto	l8037
 28492  014BC0                     l8035:
 28493                           
 28494                           ;stkvar	_a @ sp[(-4)+-8]
 28495                           ;stkvar	_b @ sp[(-4)+-4]
 28496  014BC0  50E1               	movf	fsr1l,w,c
 28497  014BC2  0FF8               	addlw	-8
 28498  014BC4  6ED9               	movwf	fsr2l,c
 28499  014BC6  50E2               	movf	fsr1h,w,c
 28500  014BC8  6EDA               	movwf	fsr2h,c
 28501  014BCA  0EFF               	movlw	255
 28502  014BCC  22DA               	addwfc	fsr2h,f,c
 28503  014BCE  0EF4               	movlw	-12
 28504  014BD0  50E3               	movf	plusw1,w,c
 28505  014BD2  5EDE               	subwf	postinc2,f,c
 28506  014BD4  0EF5               	movlw	-11
 28507  014BD6  50E3               	movf	plusw1,w,c
 28508  014BD8  5ADE               	subwfb	postinc2,f,c
 28509  014BDA  0EF6               	movlw	-10
 28510  014BDC  50E3               	movf	plusw1,w,c
 28511  014BDE  5ADE               	subwfb	postinc2,f,c
 28512  014BE0  0EF7               	movlw	-9
 28513  014BE2  50E3               	movf	plusw1,w,c
 28514  014BE4  5ADE               	subwfb	postinc2,f,c
 28515  014BE6                     l8037:
 28516                           
 28517                           ;stkvar	_b @ sp[(-4)+-4]
 28518  014BE6  0EF8               	movlw	-8
 28519  014BE8  50E3               	movf	plusw1,w,c
 28520  014BEA  E145               	bnz	l8059
 28521  014BEC  0EF9               	movlw	-7
 28522  014BEE  50E3               	movf	plusw1,w,c
 28523  014BF0  E142               	bnz	l8059
 28524  014BF2  0EFA               	movlw	-6
 28525  014BF4  50E3               	movf	plusw1,w,c
 28526  014BF6  E13F               	bnz	l8059
 28527  014BF8  0EFB               	movlw	-5
 28528  014BFA  50E3               	movf	plusw1,w,c
 28529  014BFC  A4D8               	btfss	status,2,c
 28530  014BFE  D03B               	goto	l8059
 28531                           
 28532                           ;stkvar	_grs @ sp[(-4)+0]
 28533  014C00  0EFC               	movlw	-4
 28534  014C02  50E3               	movf	plusw1,w,c
 28535  014C04  A4D8               	btfss	status,2,c
 28536  014C06  D037               	goto	l8059
 28537  014C08                     u5770:
 28538  014C08  0E00               	movlw	0
 28539  014C0A  6E01               	movwf	btemp^0,c
 28540  014C0C  0E00               	movlw	0
 28541  014C0E  6E02               	movwf	(btemp+1)^0,c
 28542  014C10  0E00               	movlw	0
 28543  014C12  6E03               	movwf	(btemp+2)^0,c
 28544  014C14  0E00               	movlw	0
 28545  014C16  6E04               	movwf	(btemp+3)^0,c
 28546  014C18  D0C6               	goto	l3015
 28547  014C1A                     l8045:
 28548                           
 28549                           ;stkvar	_b @ sp[(-4)+-4]
 28550  014C1A  90D8               	bcf	status,0,c
 28551  014C1C  0EF8               	movlw	-8
 28552  014C1E  36E3               	rlcf	plusw1,f,c
 28553  014C20  0EF9               	movlw	-7
 28554  014C22  36E3               	rlcf	plusw1,f,c
 28555  014C24  0EFA               	movlw	-6
 28556  014C26  36E3               	rlcf	plusw1,f,c
 28557  014C28  0EFB               	movlw	-5
 28558  014C2A  36E3               	rlcf	plusw1,f,c
 28559                           
 28560                           ;stkvar	_grs @ sp[(-4)+0]
 28561  014C2C  0EFC               	movlw	-4
 28562  014C2E  AEE3               	btfss	plusw1,7,c
 28563  014C30  D002               	goto	l3027
 28564                           
 28565                           ;stkvar	_b @ sp[(-4)+-4]
 28566  014C32  0EF8               	movlw	-8
 28567  014C34  80E3               	bsf	plusw1,0,c
 28568  014C36                     l3027:
 28569                           
 28570                           ;stkvar	_grs @ sp[(-4)+0]
 28571  014C36  0EFC               	movlw	-4
 28572  014C38  A0E3               	btfss	plusw1,0,c
 28573  014C3A  D00E               	goto	l8053
 28574                           
 28575                           ;stkvar	_grs @ sp[(-4)+0]
 28576  014C3C  0EFC               	movlw	-4
 28577  014C3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28578  014C44  90D8               	bcf	status,0,c
 28579  014C46  340C               	rlcf	(btemp+11)^0,w,c
 28580  014C48  6E0B               	movwf	(btemp+10)^0,c
 28581  014C4A  0E01               	movlw	1
 28582  014C4C  120B               	iorwf	(btemp+10)^0,f,c
 28583                           
 28584                           ;stkvar	_grs @ sp[(-4)+0]
 28585  014C4E  0EFC               	movlw	-4
 28586  014C50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28587  014C56  D009               	goto	l8055
 28588  014C58                     l8053:
 28589                           
 28590                           ;stkvar	_grs @ sp[(-4)+0]
 28591  014C58  50E1               	movf	fsr1l,w,c
 28592  014C5A  0FFC               	addlw	-4
 28593  014C5C  6ED9               	movwf	fsr2l,c
 28594  014C5E  50E2               	movf	fsr1h,w,c
 28595  014C60  6EDA               	movwf	fsr2h,c
 28596  014C62  0EFF               	movlw	255
 28597  014C64  22DA               	addwfc	fsr2h,f,c
 28598  014C66  90D8               	bcf	status,0,c
 28599  014C68  36DF               	rlcf	indf2,f,c
 28600  014C6A                     l8055:
 28601                           
 28602                           ;stkvar	_bexp @ sp[(-4)+1]
 28603  014C6A  0EFD               	movlw	-3
 28604  014C6C  50E3               	movf	plusw1,w,c
 28605  014C6E  B4D8               	btfsc	status,2,c
 28606  014C70  D002               	goto	l8059
 28607                           
 28608                           ;stkvar	_bexp @ sp[(-4)+1]
 28609  014C72  0EFD               	movlw	-3
 28610  014C74  06E3               	decf	plusw1,f,c
 28611  014C76                     l8059:
 28612                           
 28613                           ;stkvar	_b @ sp[(-4)+-4]
 28614  014C76  0EFA               	movlw	-6
 28615  014C78  AEE3               	btfss	plusw1,7,c
 28616  014C7A  D7CF               	goto	l8045
 28617  014C7C                     u5810:
 28618                           
 28619                           ;stkvar	_aexp @ sp[(-4)+2]
 28620  014C7C  0EFE               	movlw	-2
 28621  014C7E  6AE3               	clrf	plusw1,c
 28622                           
 28623                           ;stkvar	_grs @ sp[(-4)+0]
 28624  014C80  0EFC               	movlw	-4
 28625  014C82  AEE3               	btfss	plusw1,7,c
 28626  014C84  D00F               	goto	l8073
 28627                           
 28628                           ;stkvar	_grs @ sp[(-4)+0]
 28629  014C86  0EFC               	movlw	-4
 28630  014C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 28631  014C8E  0E7F               	movlw	127
 28632  014C90  160C               	andwf	(btemp+11)^0,f,c
 28633  014C92  B4D8               	btfsc	status,2,c
 28634  014C94  D004               	goto	l8069
 28635  014C96                     u5830:
 28636                           
 28637                           ;stkvar	_aexp @ sp[(-4)+2]
 28638  014C96  0EFE               	movlw	-2
 28639  014C98  6AE3               	clrf	plusw1,c
 28640  014C9A  2AE3               	incf	plusw1,f,c
 28641  014C9C  D003               	goto	l8073
 28642  014C9E                     l8069:
 28643                           
 28644                           ;stkvar	_b @ sp[(-4)+-4]
 28645  014C9E  0EF8               	movlw	-8
 28646  014CA0  B0E3               	btfsc	plusw1,0,c
 28647  014CA2  D7F9               	goto	u5830
 28648  014CA4                     l8073:
 28649                           
 28650                           ;stkvar	_aexp @ sp[(-4)+2]
 28651  014CA4  0EFE               	movlw	-2
 28652  014CA6  50E3               	movf	plusw1,w,c
 28653  014CA8  B4D8               	btfsc	status,2,c
 28654  014CAA  D02B               	goto	l8085
 28655                           
 28656                           ;stkvar	_b @ sp[(-4)+-4]
 28657  014CAC  50E1               	movf	fsr1l,w,c
 28658  014CAE  0FF8               	addlw	-8
 28659  014CB0  6ED9               	movwf	fsr2l,c
 28660  014CB2  50E2               	movf	fsr1h,w,c
 28661  014CB4  6EDA               	movwf	fsr2h,c
 28662  014CB6  0EFF               	movlw	255
 28663  014CB8  22DA               	addwfc	fsr2h,f,c
 28664  014CBA  2ADE               	incf	postinc2,f,c
 28665  014CBC  0E00               	movlw	0
 28666  014CBE  22DE               	addwfc	postinc2,f,c
 28667  014CC0  22DE               	addwfc	postinc2,f,c
 28668  014CC2  22DE               	addwfc	postinc2,f,c
 28669                           
 28670                           ;stkvar	_b @ sp[(-4)+-4]
 28671  014CC4  0EFB               	movlw	-5
 28672  014CC6  A0E3               	btfss	plusw1,0,c
 28673  014CC8  D01C               	goto	l8085
 28674  014CCA  0E01               	movlw	1
 28675  014CCC  6E0C               	movwf	(btemp+11)^0,c
 28676                           
 28677                           ;stkvar	_b @ sp[(-4)+-4]
 28678  014CCE  50E1               	movf	fsr1l,w,c
 28679  014CD0  0FF8               	addlw	-8
 28680  014CD2  6ED9               	movwf	fsr2l,c
 28681  014CD4  50E2               	movf	fsr1h,w,c
 28682  014CD6  6EDA               	movwf	fsr2h,c
 28683  014CD8  0EFF               	movlw	255
 28684  014CDA  22DA               	addwfc	fsr2h,f,c
 28685  014CDC  280C               	incf	(btemp+11)^0,w,c
 28686  014CDE  52DE               	movf	postinc2,f,c
 28687  014CE0  D008               	goto	u5870
 28688  014CE2                     u5875:
 28689  014CE2  52DE               	movf	postinc2,f,c
 28690  014CE4  90D8               	bcf	status,0,c
 28691  014CE6  BEDC               	btfsc	preinc2,7,c
 28692  014CE8  80D8               	bsf	status,0,c
 28693  014CEA  32DD               	rrcf	postdec2,f,c
 28694  014CEC  32DD               	rrcf	postdec2,f,c
 28695  014CEE  32DD               	rrcf	postdec2,f,c
 28696  014CF0  32DE               	rrcf	postinc2,f,c
 28697  014CF2                     u5870:
 28698  014CF2  2EE8               	decfsz	wreg,f,c
 28699  014CF4  D7F6               	goto	u5875
 28700                           
 28701                           ;stkvar	_bexp @ sp[(-4)+1]
 28702  014CF6  0EFD               	movlw	-3
 28703  014CF8  28E3               	incf	plusw1,w,c
 28704  014CFA  B4D8               	btfsc	status,2,c
 28705  014CFC  D002               	goto	l8085
 28706                           
 28707                           ;stkvar	_bexp @ sp[(-4)+1]
 28708  014CFE  0EFD               	movlw	-3
 28709  014D00  2AE3               	incf	plusw1,f,c
 28710  014D02                     l8085:
 28711                           
 28712                           ;stkvar	_bexp @ sp[(-4)+1]
 28713  014D02  0EFD               	movlw	-3
 28714  014D04  28E3               	incf	plusw1,w,c
 28715  014D06  B4D8               	btfsc	status,2,c
 28716  014D08  D004               	goto	u5900
 28717                           
 28718                           ;stkvar	_bexp @ sp[(-4)+1]
 28719  014D0A  0EFD               	movlw	-3
 28720  014D0C  50E3               	movf	plusw1,w,c
 28721  014D0E  A4D8               	btfss	status,2,c
 28722  014D10  D00E               	goto	l8095
 28723  014D12                     u5900:
 28724                           
 28725                           ;stkvar	_b @ sp[(-4)+-4]
 28726  014D12  0EF8               	movlw	-8
 28727  014D14  6AE3               	clrf	plusw1,c
 28728  014D16  0EF9               	movlw	-7
 28729  014D18  6AE3               	clrf	plusw1,c
 28730  014D1A  0EFA               	movlw	-6
 28731  014D1C  6AE3               	clrf	plusw1,c
 28732  014D1E  0EFB               	movlw	-5
 28733  014D20  6AE3               	clrf	plusw1,c
 28734                           
 28735                           ;stkvar	_bexp @ sp[(-4)+1]
 28736  014D22  0EFD               	movlw	-3
 28737  014D24  50E3               	movf	plusw1,w,c
 28738  014D26  A4D8               	btfss	status,2,c
 28739  014D28  D002               	goto	l8095
 28740                           
 28741                           ;stkvar	_signs @ sp[(-4)+3]
 28742  014D2A  0EFF               	movlw	-1
 28743  014D2C  6AE3               	clrf	plusw1,c
 28744  014D2E                     l8095:
 28745                           
 28746                           ;stkvar	_bexp @ sp[(-4)+1]
 28747  014D2E  0EFD               	movlw	-3
 28748  014D30  A0E3               	btfss	plusw1,0,c
 28749  014D32  D009               	goto	l8099
 28750                           
 28751                           ;stkvar	_b @ sp[(-4)+-4]
 28752  014D34  0EFA               	movlw	250
 28753  014D36  24E1               	addwf	fsr1l,w,c
 28754  014D38  6ED9               	movwf	fsr2l,c
 28755  014D3A  0EFF               	movlw	255
 28756  014D3C  20E2               	addwfc	fsr1h,w,c
 28757  014D3E  6EDA               	movwf	fsr2h,c
 28758  014D40  0E00               	movlw	0
 28759  014D42  8EDB               	bsf	plusw2,7,c
 28760  014D44  D008               	goto	l8101
 28761  014D46                     l8099:
 28762                           
 28763                           ;stkvar	_b @ sp[(-4)+-4]
 28764  014D46  0EFA               	movlw	250
 28765  014D48  24E1               	addwf	fsr1l,w,c
 28766  014D4A  6ED9               	movwf	fsr2l,c
 28767  014D4C  0EFF               	movlw	255
 28768  014D4E  20E2               	addwfc	fsr1h,w,c
 28769  014D50  6EDA               	movwf	fsr2h,c
 28770  014D52  0E7F               	movlw	127
 28771  014D54  16DF               	andwf	indf2,f,c
 28772  014D56                     l8101:
 28773                           
 28774                           ;stkvar	_b @ sp[(-4)+-4]
 28775  014D56  0EFB               	movlw	251
 28776  014D58  24E1               	addwf	fsr1l,w,c
 28777  014D5A  6ED9               	movwf	fsr2l,c
 28778  014D5C  0EFF               	movlw	255
 28779  014D5E  20E2               	addwfc	fsr1h,w,c
 28780  014D60  6EDA               	movwf	fsr2h,c
 28781                           
 28782                           ;stkvar	_bexp @ sp[(-4)+1]
 28783  014D62  0EFD               	movlw	-3
 28784  014D64  006F FF8C  F00C    	movff	plusw1,btemp+11
 28785  014D6A  90D8               	bcf	status,0,c
 28786  014D6C  300C               	rrcf	(btemp+11)^0,w,c
 28787  014D6E  6EDF               	movwf	indf2,c
 28788                           
 28789                           ;stkvar	_signs @ sp[(-4)+3]
 28790  014D70  0EFF               	movlw	-1
 28791  014D72  AEE3               	btfss	plusw1,7,c
 28792  014D74  D008               	goto	l8107
 28793                           
 28794                           ;stkvar	_b @ sp[(-4)+-4]
 28795  014D76  0EFB               	movlw	251
 28796  014D78  24E1               	addwf	fsr1l,w,c
 28797  014D7A  6ED9               	movwf	fsr2l,c
 28798  014D7C  0EFF               	movlw	255
 28799  014D7E  20E2               	addwfc	fsr1h,w,c
 28800  014D80  6EDA               	movwf	fsr2h,c
 28801  014D82  0E00               	movlw	0
 28802  014D84  8EDB               	bsf	plusw2,7,c
 28803  014D86                     l8107:
 28804                           
 28805                           ;stkvar	_b @ sp[(-4)+-4]
 28806  014D86  0EF8               	movlw	-8
 28807  014D88  006F FF8C  F001    	movff	plusw1,btemp
 28808  014D8E  0EF9               	movlw	-7
 28809  014D90  006F FF8C  F002    	movff	plusw1,btemp+1
 28810  014D96  0EFA               	movlw	-6
 28811  014D98  006F FF8C  F003    	movff	plusw1,btemp+2
 28812  014D9E  0EFB               	movlw	-5
 28813  014DA0  006F FF8C  F004    	movff	plusw1,btemp+3
 28814  014DA6                     l3015:
 28815                           
 28816                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28817  014DA6  0EF4               	movlw	244
 28818  014DA8  26E1               	addwf	fsr1l,f,c
 28819  014DAA  0EFF               	movlw	255
 28820  014DAC  22E2               	addwfc	fsr1h,f,c
 28821  014DAE  0012               	return		;funcret
 28822  014DB0                     __end_of___fladd:
 28823                           	opt callstack 0
 28824                           
 28825 ;; *************** function ___flmul *****************
 28826 ;; Defined at:
 28827 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28828 ;; Parameters:    Size  Location     Type
 28829 ;;  b               4  [STACK] unsigned char 
 28830 ;;  a               4  [STACK] unsigned char 
 28831 ;; Auto vars:     Size  Location     Type
 28832 ;;  prod            4  [STACK] struct .
 28833 ;;  grs             4  [STACK] unsigned long 
 28834 ;;  temp            2  [STACK] struct .
 28835 ;;  bexp            1  [STACK] unsigned char 
 28836 ;;  aexp            1  [STACK] unsigned char 
 28837 ;;  sign            1  [STACK] unsigned char 
 28838 ;; Return value:  Size  Location     Type
 28839 ;;                  4  [STACK] unsigned char 
 28840 ;; Registers used:
 28841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28842 ;; Tracked objects:
 28843 ;;		On entry : 0/0
 28844 ;;		On exit  : 0/0
 28845 ;;		Unchanged: 0/0
 28846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28851 ;;Total ram usage:        0 bytes
 28852 ;; Hardware stack levels used:    1
 28853 ;; Hardware stack levels required when called:   15
 28854 ;; This function calls:
 28855 ;;		Nothing
 28856 ;; This function is called by:
 28857 ;;		_conv_raw_result
 28858 ;;		_lp_filter
 28859 ;;		_calc_model_data
 28860 ;;		_calc_bsoc
 28861 ;;		_init_bsoc
 28862 ;;		_efgtoa
 28863 ;; This function uses a reentrant model
 28864 ;;
 28865                           
 28866                           	psect	text113
 28867  013DCA                     __ptext113:
 28868                           	opt callstack 0
 28869  013DCA                     ___flmul:
 28870                           	opt callstack 0
 28871                           
 28872                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28873  013DCA  0E0D               	movlw	13
 28874  013DCC  26E1               	addwf	fsr1l,f,c
 28875  013DCE  0E00               	movlw	0
 28876  013DD0  22E2               	addwfc	fsr1h,f,c
 28877                           
 28878                           ;stkvar	_b @ sp[(-13)+-4]
 28879                           
 28880                           ;incstack = 0
 28881 ;; hardware stack exceeded
 28882  013DD2  0EF2               	movlw	242
 28883  013DD4  24E1               	addwf	fsr1l,w,c
 28884  013DD6  6ED9               	movwf	fsr2l,c
 28885  013DD8  0EFF               	movlw	255
 28886  013DDA  20E2               	addwfc	fsr1h,w,c
 28887  013DDC  6EDA               	movwf	fsr2h,c
 28888  013DDE  50DF               	movf	indf2,w,c
 28889  013DE0  6E0C               	movwf	(btemp+11)^0,c
 28890  013DE2  0E80               	movlw	128
 28891  013DE4  160C               	andwf	(btemp+11)^0,f,c
 28892                           
 28893                           ;stkvar	_sign @ sp[(-13)+12]
 28894  013DE6  0EFF               	movlw	-1
 28895  013DE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28896                           
 28897                           ;stkvar	_b @ sp[(-13)+-4]
 28898  013DEE  0EF2               	movlw	242
 28899  013DF0  24E1               	addwf	fsr1l,w,c
 28900  013DF2  6ED9               	movwf	fsr2l,c
 28901  013DF4  0EFF               	movlw	255
 28902  013DF6  20E2               	addwfc	fsr1h,w,c
 28903  013DF8  6EDA               	movwf	fsr2h,c
 28904  013DFA  50DF               	movf	indf2,w,c
 28905  013DFC  6E0C               	movwf	(btemp+11)^0,c
 28906  013DFE  90D8               	bcf	status,0,c
 28907  013E00  340C               	rlcf	(btemp+11)^0,w,c
 28908  013E02  6E0B               	movwf	(btemp+10)^0,c
 28909                           
 28910                           ;stkvar	_bexp @ sp[(-13)+10]
 28911  013E04  0EFD               	movlw	-3
 28912  013E06  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28913                           
 28914                           ;stkvar	_b @ sp[(-13)+-4]
 28915  013E0C  0EF1               	movlw	241
 28916  013E0E  24E1               	addwf	fsr1l,w,c
 28917  013E10  6ED9               	movwf	fsr2l,c
 28918  013E12  0EFF               	movlw	255
 28919  013E14  20E2               	addwfc	fsr1h,w,c
 28920  013E16  6EDA               	movwf	fsr2h,c
 28921  013E18  AEDF               	btfss	indf2,7,c
 28922  013E1A  D002               	goto	l8533
 28923                           
 28924                           ;stkvar	_bexp @ sp[(-13)+10]
 28925  013E1C  0EFD               	movlw	-3
 28926  013E1E  80E3               	bsf	plusw1,0,c
 28927  013E20                     l8533:
 28928                           
 28929                           ;stkvar	_bexp @ sp[(-13)+10]
 28930  013E20  0EFD               	movlw	-3
 28931  013E22  50E3               	movf	plusw1,w,c
 28932  013E24  B4D8               	btfsc	status,2,c
 28933  013E26  D01F               	goto	l8541
 28934                           
 28935                           ;stkvar	_bexp @ sp[(-13)+10]
 28936  013E28  0EFD               	movlw	-3
 28937  013E2A  28E3               	incf	plusw1,w,c
 28938  013E2C  A4D8               	btfss	status,2,c
 28939  013E2E  D018               	goto	l8539
 28940  013E30  0E00               	movlw	0
 28941  013E32  6E09               	movwf	(btemp+8)^0,c
 28942  013E34  0E00               	movlw	0
 28943  013E36  6E0A               	movwf	(btemp+9)^0,c
 28944  013E38  0E00               	movlw	0
 28945  013E3A  6E0B               	movwf	(btemp+10)^0,c
 28946  013E3C  0E00               	movlw	0
 28947  013E3E  6E0C               	movwf	(btemp+11)^0,c
 28948                           
 28949                           ;stkvar	_b @ sp[(-13)+-4]
 28950  013E40  0EEF               	movlw	-17
 28951  013E42  0060  F027  FFE3   	movff	btemp+8,plusw1
 28952  013E48  0EF0               	movlw	-16
 28953  013E4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28954  013E50  0EF1               	movlw	-15
 28955  013E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28956  013E58  0EF2               	movlw	-14
 28957  013E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28958  013E60                     l8539:
 28959                           
 28960                           ;stkvar	_b @ sp[(-13)+-4]
 28961  013E60  0EF1               	movlw	-15
 28962  013E62  8EE3               	bsf	plusw1,7,c
 28963  013E64  D018               	goto	l8543
 28964  013E66                     l8541:
 28965  013E66  0E00               	movlw	0
 28966  013E68  6E09               	movwf	(btemp+8)^0,c
 28967  013E6A  0E00               	movlw	0
 28968  013E6C  6E0A               	movwf	(btemp+9)^0,c
 28969  013E6E  0E00               	movlw	0
 28970  013E70  6E0B               	movwf	(btemp+10)^0,c
 28971  013E72  0E00               	movlw	0
 28972  013E74  6E0C               	movwf	(btemp+11)^0,c
 28973                           
 28974                           ;stkvar	_b @ sp[(-13)+-4]
 28975  013E76  0EEF               	movlw	-17
 28976  013E78  0060  F027  FFE3   	movff	btemp+8,plusw1
 28977  013E7E  0EF0               	movlw	-16
 28978  013E80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28979  013E86  0EF1               	movlw	-15
 28980  013E88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28981  013E8E  0EF2               	movlw	-14
 28982  013E90  0060  F033  FFE3   	movff	btemp+11,plusw1
 28983  013E96                     l8543:
 28984                           
 28985                           ;stkvar	_a @ sp[(-13)+-8]
 28986  013E96  0EEE               	movlw	238
 28987  013E98  24E1               	addwf	fsr1l,w,c
 28988  013E9A  6ED9               	movwf	fsr2l,c
 28989  013E9C  0EFF               	movlw	255
 28990  013E9E  20E2               	addwfc	fsr1h,w,c
 28991  013EA0  6EDA               	movwf	fsr2h,c
 28992  013EA2  50DF               	movf	indf2,w,c
 28993  013EA4  6E0C               	movwf	(btemp+11)^0,c
 28994  013EA6  0E80               	movlw	128
 28995  013EA8  160C               	andwf	(btemp+11)^0,f,c
 28996                           
 28997                           ;stkvar	_sign @ sp[(-13)+12]
 28998  013EAA  50E1               	movf	fsr1l,w,c
 28999  013EAC  0FFF               	addlw	-1
 29000  013EAE  6ED9               	movwf	fsr2l,c
 29001  013EB0  50E2               	movf	fsr1h,w,c
 29002  013EB2  6EDA               	movwf	fsr2h,c
 29003  013EB4  0EFF               	movlw	255
 29004  013EB6  22DA               	addwfc	fsr2h,f,c
 29005  013EB8  500C               	movf	(btemp+11)^0,w,c
 29006  013EBA  1ADF               	xorwf	indf2,f,c
 29007                           
 29008                           ;stkvar	_a @ sp[(-13)+-8]
 29009  013EBC  0EEE               	movlw	238
 29010  013EBE  24E1               	addwf	fsr1l,w,c
 29011  013EC0  6ED9               	movwf	fsr2l,c
 29012  013EC2  0EFF               	movlw	255
 29013  013EC4  20E2               	addwfc	fsr1h,w,c
 29014  013EC6  6EDA               	movwf	fsr2h,c
 29015  013EC8  50DF               	movf	indf2,w,c
 29016  013ECA  6E0C               	movwf	(btemp+11)^0,c
 29017  013ECC  90D8               	bcf	status,0,c
 29018  013ECE  340C               	rlcf	(btemp+11)^0,w,c
 29019  013ED0  6E0B               	movwf	(btemp+10)^0,c
 29020                           
 29021                           ;stkvar	_aexp @ sp[(-13)+11]
 29022  013ED2  0EFE               	movlw	-2
 29023  013ED4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29024                           
 29025                           ;stkvar	_a @ sp[(-13)+-8]
 29026  013EDA  0EED               	movlw	237
 29027  013EDC  24E1               	addwf	fsr1l,w,c
 29028  013EDE  6ED9               	movwf	fsr2l,c
 29029  013EE0  0EFF               	movlw	255
 29030  013EE2  20E2               	addwfc	fsr1h,w,c
 29031  013EE4  6EDA               	movwf	fsr2h,c
 29032  013EE6  AEDF               	btfss	indf2,7,c
 29033  013EE8  D002               	goto	l8551
 29034                           
 29035                           ;stkvar	_aexp @ sp[(-13)+11]
 29036  013EEA  0EFE               	movlw	-2
 29037  013EEC  80E3               	bsf	plusw1,0,c
 29038  013EEE                     l8551:
 29039                           
 29040                           ;stkvar	_aexp @ sp[(-13)+11]
 29041  013EEE  0EFE               	movlw	-2
 29042  013EF0  50E3               	movf	plusw1,w,c
 29043  013EF2  B4D8               	btfsc	status,2,c
 29044  013EF4  D01F               	goto	l8559
 29045                           
 29046                           ;stkvar	_aexp @ sp[(-13)+11]
 29047  013EF6  0EFE               	movlw	-2
 29048  013EF8  28E3               	incf	plusw1,w,c
 29049  013EFA  A4D8               	btfss	status,2,c
 29050  013EFC  D018               	goto	l8557
 29051  013EFE  0E00               	movlw	0
 29052  013F00  6E09               	movwf	(btemp+8)^0,c
 29053  013F02  0E00               	movlw	0
 29054  013F04  6E0A               	movwf	(btemp+9)^0,c
 29055  013F06  0E00               	movlw	0
 29056  013F08  6E0B               	movwf	(btemp+10)^0,c
 29057  013F0A  0E00               	movlw	0
 29058  013F0C  6E0C               	movwf	(btemp+11)^0,c
 29059                           
 29060                           ;stkvar	_a @ sp[(-13)+-8]
 29061  013F0E  0EEB               	movlw	-21
 29062  013F10  0060  F027  FFE3   	movff	btemp+8,plusw1
 29063  013F16  0EEC               	movlw	-20
 29064  013F18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29065  013F1E  0EED               	movlw	-19
 29066  013F20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29067  013F26  0EEE               	movlw	-18
 29068  013F28  0060  F033  FFE3   	movff	btemp+11,plusw1
 29069  013F2E                     l8557:
 29070                           
 29071                           ;stkvar	_a @ sp[(-13)+-8]
 29072  013F2E  0EED               	movlw	-19
 29073  013F30  8EE3               	bsf	plusw1,7,c
 29074  013F32  D018               	goto	l8561
 29075  013F34                     l8559:
 29076  013F34  0E00               	movlw	0
 29077  013F36  6E09               	movwf	(btemp+8)^0,c
 29078  013F38  0E00               	movlw	0
 29079  013F3A  6E0A               	movwf	(btemp+9)^0,c
 29080  013F3C  0E00               	movlw	0
 29081  013F3E  6E0B               	movwf	(btemp+10)^0,c
 29082  013F40  0E00               	movlw	0
 29083  013F42  6E0C               	movwf	(btemp+11)^0,c
 29084                           
 29085                           ;stkvar	_a @ sp[(-13)+-8]
 29086  013F44  0EEB               	movlw	-21
 29087  013F46  0060  F027  FFE3   	movff	btemp+8,plusw1
 29088  013F4C  0EEC               	movlw	-20
 29089  013F4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29090  013F54  0EED               	movlw	-19
 29091  013F56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29092  013F5C  0EEE               	movlw	-18
 29093  013F5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29094  013F64                     l8561:
 29095                           
 29096                           ;stkvar	_aexp @ sp[(-13)+11]
 29097  013F64  0EFE               	movlw	-2
 29098  013F66  50E3               	movf	plusw1,w,c
 29099  013F68  B4D8               	btfsc	status,2,c
 29100  013F6A  D004               	goto	u6890
 29101                           
 29102                           ;stkvar	_bexp @ sp[(-13)+10]
 29103  013F6C  0EFD               	movlw	-3
 29104  013F6E  50E3               	movf	plusw1,w,c
 29105  013F70  A4D8               	btfss	status,2,c
 29106  013F72  D009               	goto	l8569
 29107  013F74                     u6890:
 29108  013F74  0E00               	movlw	0
 29109  013F76  6E01               	movwf	btemp^0,c
 29110  013F78  0E00               	movlw	0
 29111  013F7A  6E02               	movwf	(btemp+1)^0,c
 29112  013F7C  0E00               	movlw	0
 29113  013F7E  6E03               	movwf	(btemp+2)^0,c
 29114  013F80  0E00               	movlw	0
 29115  013F82  6E04               	movwf	(btemp+3)^0,c
 29116  013F84  D332               	goto	l3096
 29117  013F86                     l8569:
 29118                           
 29119                           ;stkvar	_b @ sp[(-13)+-4]
 29120  013F86  0EEF               	movlw	-17
 29121  013F88  006F FF8C  F00C    	movff	plusw1,btemp+11
 29122                           
 29123                           ;stkvar	_a @ sp[(-13)+-8]
 29124  013F8E  0EED               	movlw	237
 29125  013F90  24E1               	addwf	fsr1l,w,c
 29126  013F92  6ED9               	movwf	fsr2l,c
 29127  013F94  0EFF               	movlw	255
 29128  013F96  20E2               	addwfc	fsr1h,w,c
 29129  013F98  6EDA               	movwf	fsr2h,c
 29130  013F9A  50DF               	movf	indf2,w,c
 29131  013F9C  020C               	mulwf	(btemp+11)^0,c
 29132                           
 29133                           ;stkvar	_temp @ sp[(-13)+8]
 29134  013F9E  0EFB               	movlw	-5
 29135  013FA0  006F FFCF FFE3     	movff	prodl,plusw1
 29136  013FA6  0EFC               	movlw	-4
 29137  013FA8  006F FFD3 FFE3     	movff	prodh,plusw1
 29138                           
 29139                           ;stkvar	_temp @ sp[(-13)+8]
 29140  013FAE  0EFB               	movlw	-5
 29141  013FB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29142  013FB6  0060  F030  F005   	movff	btemp+11,btemp+4
 29143  013FBC  6A06               	clrf	(btemp+5)^0,c
 29144  013FBE  6A07               	clrf	(btemp+6)^0,c
 29145  013FC0  6A08               	clrf	(btemp+7)^0,c
 29146                           
 29147                           ;stkvar	_grs @ sp[(-13)+4]
 29148  013FC2  0EF7               	movlw	-9
 29149  013FC4  0060  F017  FFE3   	movff	btemp+4,plusw1
 29150  013FCA  0EF8               	movlw	-8
 29151  013FCC  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29152  013FD2  0EF9               	movlw	-7
 29153  013FD4  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29154  013FDA  0EFA               	movlw	-6
 29155  013FDC  0060  F023  FFE3   	movff	btemp+7,plusw1
 29156                           
 29157                           ;stkvar	_temp @ sp[(-13)+8]
 29158  013FE2  0EFC               	movlw	252
 29159  013FE4  24E1               	addwf	fsr1l,w,c
 29160  013FE6  6ED9               	movwf	fsr2l,c
 29161  013FE8  0EFF               	movlw	255
 29162  013FEA  20E2               	addwfc	fsr1h,w,c
 29163  013FEC  6EDA               	movwf	fsr2h,c
 29164  013FEE  50DF               	movf	indf2,w,c
 29165  013FF0  6E0C               	movwf	(btemp+11)^0,c
 29166  013FF2  0060  F030  F005   	movff	btemp+11,btemp+4
 29167  013FF8  6A06               	clrf	(btemp+5)^0,c
 29168  013FFA  6A07               	clrf	(btemp+6)^0,c
 29169  013FFC  6A08               	clrf	(btemp+7)^0,c
 29170                           
 29171                           ;stkvar	_prod @ sp[(-13)+0]
 29172  013FFE  0EF3               	movlw	-13
 29173  014000  0060  F017  FFE3   	movff	btemp+4,plusw1
 29174  014006  0EF4               	movlw	-12
 29175  014008  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29176  01400E  0EF5               	movlw	-11
 29177  014010  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29178  014016  0EF6               	movlw	-10
 29179  014018  0060  F023  FFE3   	movff	btemp+7,plusw1
 29180                           
 29181                           ;stkvar	_b @ sp[(-13)+-4]
 29182  01401E  0EF0               	movlw	240
 29183  014020  24E1               	addwf	fsr1l,w,c
 29184  014022  6ED9               	movwf	fsr2l,c
 29185  014024  0EFF               	movlw	255
 29186  014026  20E2               	addwfc	fsr1h,w,c
 29187  014028  6EDA               	movwf	fsr2h,c
 29188  01402A  50DF               	movf	indf2,w,c
 29189  01402C  6E0C               	movwf	(btemp+11)^0,c
 29190                           
 29191                           ;stkvar	_a @ sp[(-13)+-8]
 29192  01402E  0EEC               	movlw	236
 29193  014030  24E1               	addwf	fsr1l,w,c
 29194  014032  6ED9               	movwf	fsr2l,c
 29195  014034  0EFF               	movlw	255
 29196  014036  20E2               	addwfc	fsr1h,w,c
 29197  014038  6EDA               	movwf	fsr2h,c
 29198  01403A  50DF               	movf	indf2,w,c
 29199  01403C  020C               	mulwf	(btemp+11)^0,c
 29200                           
 29201                           ;stkvar	_temp @ sp[(-13)+8]
 29202  01403E  0EFB               	movlw	-5
 29203  014040  006F FFCF FFE3     	movff	prodl,plusw1
 29204  014046  0EFC               	movlw	-4
 29205  014048  006F FFD3 FFE3     	movff	prodh,plusw1
 29206                           
 29207                           ;stkvar	_grs @ sp[(-13)+4]
 29208  01404E  50E1               	movf	fsr1l,w,c
 29209  014050  0FF7               	addlw	-9
 29210  014052  6ED9               	movwf	fsr2l,c
 29211  014054  50E2               	movf	fsr1h,w,c
 29212  014056  6EDA               	movwf	fsr2h,c
 29213  014058  0EFF               	movlw	255
 29214  01405A  22DA               	addwfc	fsr2h,f,c
 29215                           
 29216                           ;stkvar	_temp @ sp[(-13)+8]
 29217  01405C  0EFB               	movlw	-5
 29218  01405E  50E3               	movf	plusw1,w,c
 29219  014060  26DE               	addwf	postinc2,f,c
 29220  014062  0E00               	movlw	0
 29221  014064  22DE               	addwfc	postinc2,f,c
 29222  014066  22DE               	addwfc	postinc2,f,c
 29223  014068  22DE               	addwfc	postinc2,f,c
 29224                           
 29225                           ;stkvar	_prod @ sp[(-13)+0]
 29226  01406A  50E1               	movf	fsr1l,w,c
 29227  01406C  0FF3               	addlw	-13
 29228  01406E  6ED9               	movwf	fsr2l,c
 29229  014070  50E2               	movf	fsr1h,w,c
 29230  014072  6EDA               	movwf	fsr2h,c
 29231  014074  0EFF               	movlw	255
 29232  014076  22DA               	addwfc	fsr2h,f,c
 29233                           
 29234                           ;stkvar	_temp @ sp[(-13)+8]
 29235  014078  0EFC               	movlw	252
 29236  01407A  24E1               	addwf	fsr1l,w,c
 29237  01407C  6EE9               	movwf	fsr0l,c
 29238  01407E  0EFF               	movlw	255
 29239  014080  20E2               	addwfc	fsr1h,w,c
 29240  014082  6EEA               	movwf	fsr0h,c
 29241  014084  50EF               	movf	indf0,w,c
 29242  014086  26DE               	addwf	postinc2,f,c
 29243  014088  0E00               	movlw	0
 29244  01408A  22DE               	addwfc	postinc2,f,c
 29245  01408C  22DE               	addwfc	postinc2,f,c
 29246  01408E  22DE               	addwfc	postinc2,f,c
 29247                           
 29248                           ;stkvar	_b @ sp[(-13)+-4]
 29249  014090  0EF1               	movlw	241
 29250  014092  24E1               	addwf	fsr1l,w,c
 29251  014094  6ED9               	movwf	fsr2l,c
 29252  014096  0EFF               	movlw	255
 29253  014098  20E2               	addwfc	fsr1h,w,c
 29254  01409A  6EDA               	movwf	fsr2h,c
 29255  01409C  50DF               	movf	indf2,w,c
 29256  01409E  6E0C               	movwf	(btemp+11)^0,c
 29257                           
 29258                           ;stkvar	_a @ sp[(-13)+-8]
 29259  0140A0  0EEB               	movlw	-21
 29260  0140A2  50E3               	movf	plusw1,w,c
 29261  0140A4  020C               	mulwf	(btemp+11)^0,c
 29262                           
 29263                           ;stkvar	_temp @ sp[(-13)+8]
 29264  0140A6  0EFB               	movlw	-5
 29265  0140A8  006F FFCF FFE3     	movff	prodl,plusw1
 29266  0140AE  0EFC               	movlw	-4
 29267  0140B0  006F FFD3 FFE3     	movff	prodh,plusw1
 29268                           
 29269                           ;stkvar	_grs @ sp[(-13)+4]
 29270  0140B6  50E1               	movf	fsr1l,w,c
 29271  0140B8  0FF7               	addlw	-9
 29272  0140BA  6ED9               	movwf	fsr2l,c
 29273  0140BC  50E2               	movf	fsr1h,w,c
 29274  0140BE  6EDA               	movwf	fsr2h,c
 29275  0140C0  0EFF               	movlw	255
 29276  0140C2  22DA               	addwfc	fsr2h,f,c
 29277                           
 29278                           ;stkvar	_temp @ sp[(-13)+8]
 29279  0140C4  0EFB               	movlw	-5
 29280  0140C6  50E3               	movf	plusw1,w,c
 29281  0140C8  26DE               	addwf	postinc2,f,c
 29282  0140CA  0E00               	movlw	0
 29283  0140CC  22DE               	addwfc	postinc2,f,c
 29284  0140CE  22DE               	addwfc	postinc2,f,c
 29285  0140D0  22DE               	addwfc	postinc2,f,c
 29286                           
 29287                           ;stkvar	_prod @ sp[(-13)+0]
 29288  0140D2  50E1               	movf	fsr1l,w,c
 29289  0140D4  0FF3               	addlw	-13
 29290  0140D6  6ED9               	movwf	fsr2l,c
 29291  0140D8  50E2               	movf	fsr1h,w,c
 29292  0140DA  6EDA               	movwf	fsr2h,c
 29293  0140DC  0EFF               	movlw	255
 29294  0140DE  22DA               	addwfc	fsr2h,f,c
 29295                           
 29296                           ;stkvar	_temp @ sp[(-13)+8]
 29297  0140E0  0EFC               	movlw	252
 29298  0140E2  24E1               	addwf	fsr1l,w,c
 29299  0140E4  6EE9               	movwf	fsr0l,c
 29300  0140E6  0EFF               	movlw	255
 29301  0140E8  20E2               	addwfc	fsr1h,w,c
 29302  0140EA  6EEA               	movwf	fsr0h,c
 29303  0140EC  50EF               	movf	indf0,w,c
 29304  0140EE  26DE               	addwf	postinc2,f,c
 29305  0140F0  0E00               	movlw	0
 29306  0140F2  22DE               	addwfc	postinc2,f,c
 29307  0140F4  22DE               	addwfc	postinc2,f,c
 29308  0140F6  22DE               	addwfc	postinc2,f,c
 29309                           
 29310                           ;stkvar	_grs @ sp[(-13)+4]
 29311  0140F8  50E1               	movf	fsr1l,w,c
 29312  0140FA  0FF7               	addlw	-9
 29313  0140FC  6ED9               	movwf	fsr2l,c
 29314  0140FE  50E2               	movf	fsr1h,w,c
 29315  014100  6EDA               	movwf	fsr2h,c
 29316  014102  0EFF               	movlw	255
 29317  014104  22DA               	addwfc	fsr2h,f,c
 29318  014106  0E08               	movlw	8
 29319  014108                     u6905:
 29320  014108  90D8               	bcf	status,0,c
 29321  01410A  36DE               	rlcf	postinc2,f,c
 29322  01410C  36DE               	rlcf	postinc2,f,c
 29323  01410E  36DE               	rlcf	postinc2,f,c
 29324  014110  36DD               	rlcf	postdec2,f,c
 29325  014112  52DD               	movf	postdec2,f,c
 29326  014114  52DD               	movf	postdec2,f,c
 29327  014116  2EE8               	decfsz	wreg,f,c
 29328  014118  D7F7               	goto	u6905
 29329                           
 29330                           ;stkvar	_b @ sp[(-13)+-4]
 29331  01411A  0EF0               	movlw	240
 29332  01411C  24E1               	addwf	fsr1l,w,c
 29333  01411E  6ED9               	movwf	fsr2l,c
 29334  014120  0EFF               	movlw	255
 29335  014122  20E2               	addwfc	fsr1h,w,c
 29336  014124  6EDA               	movwf	fsr2h,c
 29337  014126  50DF               	movf	indf2,w,c
 29338  014128  6E0C               	movwf	(btemp+11)^0,c
 29339                           
 29340                           ;stkvar	_a @ sp[(-13)+-8]
 29341  01412A  0EEB               	movlw	-21
 29342  01412C  50E3               	movf	plusw1,w,c
 29343  01412E  020C               	mulwf	(btemp+11)^0,c
 29344                           
 29345                           ;stkvar	_temp @ sp[(-13)+8]
 29346  014130  0EFB               	movlw	-5
 29347  014132  006F FFCF FFE3     	movff	prodl,plusw1
 29348  014138  0EFC               	movlw	-4
 29349  01413A  006F FFD3 FFE3     	movff	prodh,plusw1
 29350                           
 29351                           ;stkvar	_temp @ sp[(-13)+8]
 29352  014140  0EFB               	movlw	-5
 29353  014142  006F FF8C  F00B    	movff	plusw1,btemp+10
 29354  014148  0EFC               	movlw	-4
 29355  01414A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29356                           
 29357                           ;stkvar	_grs @ sp[(-13)+4]
 29358  014150  50E1               	movf	fsr1l,w,c
 29359  014152  0FF7               	addlw	-9
 29360  014154  6ED9               	movwf	fsr2l,c
 29361  014156  50E2               	movf	fsr1h,w,c
 29362  014158  6EDA               	movwf	fsr2h,c
 29363  01415A  0EFF               	movlw	255
 29364  01415C  22DA               	addwfc	fsr2h,f,c
 29365  01415E  500B               	movf	(btemp+10)^0,w,c
 29366  014160  26DE               	addwf	postinc2,f,c
 29367  014162  500C               	movf	(btemp+11)^0,w,c
 29368  014164  22DE               	addwfc	postinc2,f,c
 29369  014166  0E00               	movlw	0
 29370  014168  22DE               	addwfc	postinc2,f,c
 29371  01416A  22DE               	addwfc	postinc2,f,c
 29372                           
 29373                           ;stkvar	_b @ sp[(-13)+-4]
 29374  01416C  0EEF               	movlw	-17
 29375  01416E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29376                           
 29377                           ;stkvar	_a @ sp[(-13)+-8]
 29378  014174  0EEC               	movlw	236
 29379  014176  24E1               	addwf	fsr1l,w,c
 29380  014178  6ED9               	movwf	fsr2l,c
 29381  01417A  0EFF               	movlw	255
 29382  01417C  20E2               	addwfc	fsr1h,w,c
 29383  01417E  6EDA               	movwf	fsr2h,c
 29384  014180  50DF               	movf	indf2,w,c
 29385  014182  020C               	mulwf	(btemp+11)^0,c
 29386                           
 29387                           ;stkvar	_temp @ sp[(-13)+8]
 29388  014184  0EFB               	movlw	-5
 29389  014186  006F FFCF FFE3     	movff	prodl,plusw1
 29390  01418C  0EFC               	movlw	-4
 29391  01418E  006F FFD3 FFE3     	movff	prodh,plusw1
 29392                           
 29393                           ;stkvar	_temp @ sp[(-13)+8]
 29394  014194  0EFB               	movlw	-5
 29395  014196  006F FF8C  F00B    	movff	plusw1,btemp+10
 29396  01419C  0EFC               	movlw	-4
 29397  01419E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29398                           
 29399                           ;stkvar	_grs @ sp[(-13)+4]
 29400  0141A4  50E1               	movf	fsr1l,w,c
 29401  0141A6  0FF7               	addlw	-9
 29402  0141A8  6ED9               	movwf	fsr2l,c
 29403  0141AA  50E2               	movf	fsr1h,w,c
 29404  0141AC  6EDA               	movwf	fsr2h,c
 29405  0141AE  0EFF               	movlw	255
 29406  0141B0  22DA               	addwfc	fsr2h,f,c
 29407  0141B2  500B               	movf	(btemp+10)^0,w,c
 29408  0141B4  26DE               	addwf	postinc2,f,c
 29409  0141B6  500C               	movf	(btemp+11)^0,w,c
 29410  0141B8  22DE               	addwfc	postinc2,f,c
 29411  0141BA  0E00               	movlw	0
 29412  0141BC  22DE               	addwfc	postinc2,f,c
 29413  0141BE  22DE               	addwfc	postinc2,f,c
 29414                           
 29415                           ;stkvar	_grs @ sp[(-13)+4]
 29416  0141C0  50E1               	movf	fsr1l,w,c
 29417  0141C2  0FF7               	addlw	-9
 29418  0141C4  6ED9               	movwf	fsr2l,c
 29419  0141C6  50E2               	movf	fsr1h,w,c
 29420  0141C8  6EDA               	movwf	fsr2h,c
 29421  0141CA  0EFF               	movlw	255
 29422  0141CC  22DA               	addwfc	fsr2h,f,c
 29423  0141CE  0E08               	movlw	8
 29424  0141D0                     u6915:
 29425  0141D0  90D8               	bcf	status,0,c
 29426  0141D2  36DE               	rlcf	postinc2,f,c
 29427  0141D4  36DE               	rlcf	postinc2,f,c
 29428  0141D6  36DE               	rlcf	postinc2,f,c
 29429  0141D8  36DD               	rlcf	postdec2,f,c
 29430  0141DA  52DD               	movf	postdec2,f,c
 29431  0141DC  52DD               	movf	postdec2,f,c
 29432  0141DE  2EE8               	decfsz	wreg,f,c
 29433  0141E0  D7F7               	goto	u6915
 29434                           
 29435                           ;stkvar	_b @ sp[(-13)+-4]
 29436  0141E2  0EEF               	movlw	-17
 29437  0141E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29438                           
 29439                           ;stkvar	_a @ sp[(-13)+-8]
 29440  0141EA  0EEB               	movlw	-21
 29441  0141EC  50E3               	movf	plusw1,w,c
 29442  0141EE  020C               	mulwf	(btemp+11)^0,c
 29443                           
 29444                           ;stkvar	_temp @ sp[(-13)+8]
 29445  0141F0  0EFB               	movlw	-5
 29446  0141F2  006F FFCF FFE3     	movff	prodl,plusw1
 29447  0141F8  0EFC               	movlw	-4
 29448  0141FA  006F FFD3 FFE3     	movff	prodh,plusw1
 29449                           
 29450                           ;stkvar	_temp @ sp[(-13)+8]
 29451  014200  0EFB               	movlw	-5
 29452  014202  006F FF8C  F00B    	movff	plusw1,btemp+10
 29453  014208  0EFC               	movlw	-4
 29454  01420A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29455                           
 29456                           ;stkvar	_grs @ sp[(-13)+4]
 29457  014210  50E1               	movf	fsr1l,w,c
 29458  014212  0FF7               	addlw	-9
 29459  014214  6ED9               	movwf	fsr2l,c
 29460  014216  50E2               	movf	fsr1h,w,c
 29461  014218  6EDA               	movwf	fsr2h,c
 29462  01421A  0EFF               	movlw	255
 29463  01421C  22DA               	addwfc	fsr2h,f,c
 29464  01421E  500B               	movf	(btemp+10)^0,w,c
 29465  014220  26DE               	addwf	postinc2,f,c
 29466  014222  500C               	movf	(btemp+11)^0,w,c
 29467  014224  22DE               	addwfc	postinc2,f,c
 29468  014226  0E00               	movlw	0
 29469  014228  22DE               	addwfc	postinc2,f,c
 29470  01422A  22DE               	addwfc	postinc2,f,c
 29471                           
 29472                           ;stkvar	_b @ sp[(-13)+-4]
 29473  01422C  0EF0               	movlw	240
 29474  01422E  24E1               	addwf	fsr1l,w,c
 29475  014230  6ED9               	movwf	fsr2l,c
 29476  014232  0EFF               	movlw	255
 29477  014234  20E2               	addwfc	fsr1h,w,c
 29478  014236  6EDA               	movwf	fsr2h,c
 29479  014238  50DF               	movf	indf2,w,c
 29480  01423A  6E0C               	movwf	(btemp+11)^0,c
 29481                           
 29482                           ;stkvar	_a @ sp[(-13)+-8]
 29483  01423C  0EED               	movlw	237
 29484  01423E  24E1               	addwf	fsr1l,w,c
 29485  014240  6ED9               	movwf	fsr2l,c
 29486  014242  0EFF               	movlw	255
 29487  014244  20E2               	addwfc	fsr1h,w,c
 29488  014246  6EDA               	movwf	fsr2h,c
 29489  014248  50DF               	movf	indf2,w,c
 29490  01424A  020C               	mulwf	(btemp+11)^0,c
 29491                           
 29492                           ;stkvar	_temp @ sp[(-13)+8]
 29493  01424C  0EFB               	movlw	-5
 29494  01424E  006F FFCF FFE3     	movff	prodl,plusw1
 29495  014254  0EFC               	movlw	-4
 29496  014256  006F FFD3 FFE3     	movff	prodh,plusw1
 29497                           
 29498                           ;stkvar	_temp @ sp[(-13)+8]
 29499  01425C  0EFB               	movlw	-5
 29500  01425E  006F FF8C  F00B    	movff	plusw1,btemp+10
 29501  014264  0EFC               	movlw	-4
 29502  014266  006F FF8C  F00C    	movff	plusw1,btemp+11
 29503                           
 29504                           ;stkvar	_prod @ sp[(-13)+0]
 29505  01426C  50E1               	movf	fsr1l,w,c
 29506  01426E  0FF3               	addlw	-13
 29507  014270  6ED9               	movwf	fsr2l,c
 29508  014272  50E2               	movf	fsr1h,w,c
 29509  014274  6EDA               	movwf	fsr2h,c
 29510  014276  0EFF               	movlw	255
 29511  014278  22DA               	addwfc	fsr2h,f,c
 29512  01427A  500B               	movf	(btemp+10)^0,w,c
 29513  01427C  26DE               	addwf	postinc2,f,c
 29514  01427E  500C               	movf	(btemp+11)^0,w,c
 29515  014280  22DE               	addwfc	postinc2,f,c
 29516  014282  0E00               	movlw	0
 29517  014284  22DE               	addwfc	postinc2,f,c
 29518  014286  22DE               	addwfc	postinc2,f,c
 29519                           
 29520                           ;stkvar	_b @ sp[(-13)+-4]
 29521  014288  0EF1               	movlw	241
 29522  01428A  24E1               	addwf	fsr1l,w,c
 29523  01428C  6ED9               	movwf	fsr2l,c
 29524  01428E  0EFF               	movlw	255
 29525  014290  20E2               	addwfc	fsr1h,w,c
 29526  014292  6EDA               	movwf	fsr2h,c
 29527  014294  50DF               	movf	indf2,w,c
 29528  014296  6E0C               	movwf	(btemp+11)^0,c
 29529                           
 29530                           ;stkvar	_a @ sp[(-13)+-8]
 29531  014298  0EEC               	movlw	236
 29532  01429A  24E1               	addwf	fsr1l,w,c
 29533  01429C  6ED9               	movwf	fsr2l,c
 29534  01429E  0EFF               	movlw	255
 29535  0142A0  20E2               	addwfc	fsr1h,w,c
 29536  0142A2  6EDA               	movwf	fsr2h,c
 29537  0142A4  50DF               	movf	indf2,w,c
 29538  0142A6  020C               	mulwf	(btemp+11)^0,c
 29539                           
 29540                           ;stkvar	_temp @ sp[(-13)+8]
 29541  0142A8  0EFB               	movlw	-5
 29542  0142AA  006F FFCF FFE3     	movff	prodl,plusw1
 29543  0142B0  0EFC               	movlw	-4
 29544  0142B2  006F FFD3 FFE3     	movff	prodh,plusw1
 29545                           
 29546                           ;stkvar	_temp @ sp[(-13)+8]
 29547  0142B8  0EFB               	movlw	-5
 29548  0142BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 29549  0142C0  0EFC               	movlw	-4
 29550  0142C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 29551                           
 29552                           ;stkvar	_prod @ sp[(-13)+0]
 29553  0142C8  50E1               	movf	fsr1l,w,c
 29554  0142CA  0FF3               	addlw	-13
 29555  0142CC  6ED9               	movwf	fsr2l,c
 29556  0142CE  50E2               	movf	fsr1h,w,c
 29557  0142D0  6EDA               	movwf	fsr2h,c
 29558  0142D2  0EFF               	movlw	255
 29559  0142D4  22DA               	addwfc	fsr2h,f,c
 29560  0142D6  500B               	movf	(btemp+10)^0,w,c
 29561  0142D8  26DE               	addwf	postinc2,f,c
 29562  0142DA  500C               	movf	(btemp+11)^0,w,c
 29563  0142DC  22DE               	addwfc	postinc2,f,c
 29564  0142DE  0E00               	movlw	0
 29565  0142E0  22DE               	addwfc	postinc2,f,c
 29566  0142E2  22DE               	addwfc	postinc2,f,c
 29567                           
 29568                           ;stkvar	_b @ sp[(-13)+-4]
 29569  0142E4  0EF1               	movlw	241
 29570  0142E6  24E1               	addwf	fsr1l,w,c
 29571  0142E8  6ED9               	movwf	fsr2l,c
 29572  0142EA  0EFF               	movlw	255
 29573  0142EC  20E2               	addwfc	fsr1h,w,c
 29574  0142EE  6EDA               	movwf	fsr2h,c
 29575  0142F0  50DF               	movf	indf2,w,c
 29576  0142F2  6E0C               	movwf	(btemp+11)^0,c
 29577                           
 29578                           ;stkvar	_a @ sp[(-13)+-8]
 29579  0142F4  0EED               	movlw	237
 29580  0142F6  24E1               	addwf	fsr1l,w,c
 29581  0142F8  6ED9               	movwf	fsr2l,c
 29582  0142FA  0EFF               	movlw	255
 29583  0142FC  20E2               	addwfc	fsr1h,w,c
 29584  0142FE  6EDA               	movwf	fsr2h,c
 29585  014300  50DF               	movf	indf2,w,c
 29586  014302  020C               	mulwf	(btemp+11)^0,c
 29587                           
 29588                           ;stkvar	_temp @ sp[(-13)+8]
 29589  014304  0EFB               	movlw	-5
 29590  014306  006F FFCF FFE3     	movff	prodl,plusw1
 29591  01430C  0EFC               	movlw	-4
 29592  01430E  006F FFD3 FFE3     	movff	prodh,plusw1
 29593                           
 29594                           ;stkvar	_temp @ sp[(-13)+8]
 29595  014314  0EFB               	movlw	-5
 29596  014316  006F FF8C  F00B    	movff	plusw1,btemp+10
 29597  01431C  0EFC               	movlw	-4
 29598  01431E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29599  014324  500B               	movf	(btemp+10)^0,w,c
 29600  014326  6E05               	movwf	(btemp+4)^0,c
 29601  014328  500C               	movf	(btemp+11)^0,w,c
 29602  01432A  6E06               	movwf	(btemp+5)^0,c
 29603  01432C  6A07               	clrf	(btemp+6)^0,c
 29604  01432E  6A08               	clrf	(btemp+7)^0,c
 29605  014330  0060  F01C  F008   	movff	btemp+6,btemp+7
 29606  014336  0060  F018  F007   	movff	btemp+5,btemp+6
 29607  01433C  0060  F014  F006   	movff	btemp+4,btemp+5
 29608  014342  6A05               	clrf	(btemp+4)^0,c
 29609                           
 29610                           ;stkvar	_prod @ sp[(-13)+0]
 29611  014344  50E1               	movf	fsr1l,w,c
 29612  014346  0FF3               	addlw	-13
 29613  014348  6ED9               	movwf	fsr2l,c
 29614  01434A  50E2               	movf	fsr1h,w,c
 29615  01434C  6EDA               	movwf	fsr2h,c
 29616  01434E  0EFF               	movlw	255
 29617  014350  22DA               	addwfc	fsr2h,f,c
 29618  014352  5005               	movf	(btemp+4)^0,w,c
 29619  014354  26DE               	addwf	postinc2,f,c
 29620  014356  5006               	movf	(btemp+5)^0,w,c
 29621  014358  22DE               	addwfc	postinc2,f,c
 29622  01435A  5007               	movf	(btemp+6)^0,w,c
 29623  01435C  22DE               	addwfc	postinc2,f,c
 29624  01435E  5008               	movf	(btemp+7)^0,w,c
 29625  014360  22DE               	addwfc	postinc2,f,c
 29626                           
 29627                           ;stkvar	_prod @ sp[(-13)+0]
 29628  014362  50E1               	movf	fsr1l,w,c
 29629  014364  0FF3               	addlw	-13
 29630  014366  6ED9               	movwf	fsr2l,c
 29631  014368  50E2               	movf	fsr1h,w,c
 29632  01436A  6EDA               	movwf	fsr2h,c
 29633  01436C  0EFF               	movlw	255
 29634  01436E  22DA               	addwfc	fsr2h,f,c
 29635                           
 29636                           ;stkvar	_grs @ sp[(-13)+4]
 29637  014370  0EFA               	movlw	250
 29638  014372  24E1               	addwf	fsr1l,w,c
 29639  014374  6EE9               	movwf	fsr0l,c
 29640  014376  0EFF               	movlw	255
 29641  014378  20E2               	addwfc	fsr1h,w,c
 29642  01437A  6EEA               	movwf	fsr0h,c
 29643  01437C  50EF               	movf	indf0,w,c
 29644  01437E  26DE               	addwf	postinc2,f,c
 29645  014380  0E00               	movlw	0
 29646  014382  22DE               	addwfc	postinc2,f,c
 29647  014384  22DE               	addwfc	postinc2,f,c
 29648  014386  22DE               	addwfc	postinc2,f,c
 29649                           
 29650                           ;stkvar	_grs @ sp[(-13)+4]
 29651  014388  50E1               	movf	fsr1l,w,c
 29652  01438A  0FF7               	addlw	-9
 29653  01438C  6ED9               	movwf	fsr2l,c
 29654  01438E  50E2               	movf	fsr1h,w,c
 29655  014390  6EDA               	movwf	fsr2h,c
 29656  014392  0EFF               	movlw	255
 29657  014394  22DA               	addwfc	fsr2h,f,c
 29658  014396  0E08               	movlw	8
 29659  014398                     u6925:
 29660  014398  90D8               	bcf	status,0,c
 29661  01439A  36DE               	rlcf	postinc2,f,c
 29662  01439C  36DE               	rlcf	postinc2,f,c
 29663  01439E  36DE               	rlcf	postinc2,f,c
 29664  0143A0  36DD               	rlcf	postdec2,f,c
 29665  0143A2  52DD               	movf	postdec2,f,c
 29666  0143A4  52DD               	movf	postdec2,f,c
 29667  0143A6  2EE8               	decfsz	wreg,f,c
 29668  0143A8  D7F7               	goto	u6925
 29669  0143AA  0E82               	movlw	130
 29670  0143AC  6E0B               	movwf	(btemp+10)^0,c
 29671  0143AE  0EFF               	movlw	255
 29672  0143B0  6E0C               	movwf	(btemp+11)^0,c
 29673                           
 29674                           ;stkvar	_bexp @ sp[(-13)+10]
 29675  0143B2  0EFD               	movlw	-3
 29676  0143B4  50E3               	movf	plusw1,w,c
 29677  0143B6  6E09               	movwf	(btemp+8)^0,c
 29678  0143B8  6A0A               	clrf	(btemp+9)^0,c
 29679                           
 29680                           ;stkvar	_aexp @ sp[(-13)+11]
 29681  0143BA  0EFE               	movlw	-2
 29682  0143BC  50E3               	movf	plusw1,w,c
 29683  0143BE  2609               	addwf	(btemp+8)^0,f,c
 29684  0143C0  0E00               	movlw	0
 29685  0143C2  220A               	addwfc	(btemp+9)^0,f,c
 29686  0143C4  500B               	movf	(btemp+10)^0,w,c
 29687  0143C6  2609               	addwf	(btemp+8)^0,f,c
 29688  0143C8  500C               	movf	(btemp+11)^0,w,c
 29689  0143CA  220A               	addwfc	(btemp+9)^0,f,c
 29690                           
 29691                           ;stkvar	_temp @ sp[(-13)+8]
 29692  0143CC  0EFB               	movlw	-5
 29693  0143CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 29694  0143D4  0EFC               	movlw	-4
 29695  0143D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29696  0143DC  D021               	goto	l8631
 29697  0143DE                     l8621:
 29698                           
 29699                           ;stkvar	_prod @ sp[(-13)+0]
 29700  0143DE  90D8               	bcf	status,0,c
 29701  0143E0  0EF3               	movlw	-13
 29702  0143E2  36E3               	rlcf	plusw1,f,c
 29703  0143E4  0EF4               	movlw	-12
 29704  0143E6  36E3               	rlcf	plusw1,f,c
 29705  0143E8  0EF5               	movlw	-11
 29706  0143EA  36E3               	rlcf	plusw1,f,c
 29707  0143EC  0EF6               	movlw	-10
 29708  0143EE  36E3               	rlcf	plusw1,f,c
 29709                           
 29710                           ;stkvar	_grs @ sp[(-13)+4]
 29711  0143F0  0EFA               	movlw	-6
 29712  0143F2  AEE3               	btfss	plusw1,7,c
 29713  0143F4  D002               	goto	l8627
 29714                           
 29715                           ;stkvar	_prod @ sp[(-13)+0]
 29716  0143F6  0EF3               	movlw	-13
 29717  0143F8  80E3               	bsf	plusw1,0,c
 29718  0143FA                     l8627:
 29719                           
 29720                           ;stkvar	_grs @ sp[(-13)+4]
 29721  0143FA  90D8               	bcf	status,0,c
 29722  0143FC  0EF7               	movlw	-9
 29723  0143FE  36E3               	rlcf	plusw1,f,c
 29724  014400  0EF8               	movlw	-8
 29725  014402  36E3               	rlcf	plusw1,f,c
 29726  014404  0EF9               	movlw	-7
 29727  014406  36E3               	rlcf	plusw1,f,c
 29728  014408  0EFA               	movlw	-6
 29729  01440A  36E3               	rlcf	plusw1,f,c
 29730                           
 29731                           ;stkvar	_temp @ sp[(-13)+8]
 29732  01440C  50E1               	movf	fsr1l,w,c
 29733  01440E  0FFB               	addlw	-5
 29734  014410  6ED9               	movwf	fsr2l,c
 29735  014412  50E2               	movf	fsr1h,w,c
 29736  014414  6EDA               	movwf	fsr2h,c
 29737  014416  0EFF               	movlw	255
 29738  014418  22DA               	addwfc	fsr2h,f,c
 29739  01441A  06DE               	decf	postinc2,f,c
 29740  01441C  0E00               	movlw	0
 29741  01441E  5ADD               	subwfb	postdec2,f,c
 29742  014420                     l8631:
 29743                           
 29744                           ;stkvar	_prod @ sp[(-13)+0]
 29745  014420  0EF5               	movlw	-11
 29746  014422  AEE3               	btfss	plusw1,7,c
 29747  014424  D7DC               	goto	l8621
 29748                           
 29749                           ;stkvar	_aexp @ sp[(-13)+11]
 29750  014426  0EFE               	movlw	-2
 29751  014428  6AE3               	clrf	plusw1,c
 29752                           
 29753                           ;stkvar	_grs @ sp[(-13)+4]
 29754  01442A  0EFA               	movlw	-6
 29755  01442C  AEE3               	btfss	plusw1,7,c
 29756  01442E  D020               	goto	l8645
 29757                           
 29758                           ;stkvar	_grs @ sp[(-13)+4]
 29759  014430  50E1               	movf	fsr1l,w,c
 29760  014432  0FF7               	addlw	-9
 29761  014434  6ED9               	movwf	fsr2l,c
 29762  014436  50E2               	movf	fsr1h,w,c
 29763  014438  6EDA               	movwf	fsr2h,c
 29764  01443A  0EFF               	movlw	255
 29765  01443C  22DA               	addwfc	fsr2h,f,c
 29766  01443E  0EFF               	movlw	255
 29767  014440  14DE               	andwf	postinc2,w,c
 29768  014442  6E09               	movwf	(btemp+8)^0,c
 29769  014444  0EFF               	movlw	255
 29770  014446  14DE               	andwf	postinc2,w,c
 29771  014448  6E0A               	movwf	(btemp+9)^0,c
 29772  01444A  0EFF               	movlw	255
 29773  01444C  14DE               	andwf	postinc2,w,c
 29774  01444E  6E0B               	movwf	(btemp+10)^0,c
 29775  014450  0E7F               	movlw	127
 29776  014452  14DE               	andwf	postinc2,w,c
 29777  014454  6E0C               	movwf	(btemp+11)^0,c
 29778  014456  5009               	movf	(btemp+8)^0,w,c
 29779  014458  100A               	iorwf	(btemp+9)^0,w,c
 29780  01445A  100B               	iorwf	(btemp+10)^0,w,c
 29781  01445C  100C               	iorwf	(btemp+11)^0,w,c
 29782  01445E  B4D8               	btfsc	status,2,c
 29783  014460  D004               	goto	l8641
 29784  014462                     u6960:
 29785                           
 29786                           ;stkvar	_aexp @ sp[(-13)+11]
 29787  014462  0EFE               	movlw	-2
 29788  014464  6AE3               	clrf	plusw1,c
 29789  014466  2AE3               	incf	plusw1,f,c
 29790  014468  D003               	goto	l8645
 29791  01446A                     l8641:
 29792                           
 29793                           ;stkvar	_prod @ sp[(-13)+0]
 29794  01446A  0EF3               	movlw	-13
 29795  01446C  B0E3               	btfsc	plusw1,0,c
 29796  01446E  D7F9               	goto	u6960
 29797  014470                     l8645:
 29798                           
 29799                           ;stkvar	_aexp @ sp[(-13)+11]
 29800  014470  0EFE               	movlw	-2
 29801  014472  50E3               	movf	plusw1,w,c
 29802  014474  B4D8               	btfsc	status,2,c
 29803  014476  D036               	goto	l8655
 29804                           
 29805                           ;stkvar	_prod @ sp[(-13)+0]
 29806  014478  50E1               	movf	fsr1l,w,c
 29807  01447A  0FF3               	addlw	-13
 29808  01447C  6ED9               	movwf	fsr2l,c
 29809  01447E  50E2               	movf	fsr1h,w,c
 29810  014480  6EDA               	movwf	fsr2h,c
 29811  014482  0EFF               	movlw	255
 29812  014484  22DA               	addwfc	fsr2h,f,c
 29813  014486  2ADE               	incf	postinc2,f,c
 29814  014488  0E00               	movlw	0
 29815  01448A  22DE               	addwfc	postinc2,f,c
 29816  01448C  22DE               	addwfc	postinc2,f,c
 29817  01448E  22DE               	addwfc	postinc2,f,c
 29818                           
 29819                           ;stkvar	_prod @ sp[(-13)+0]
 29820  014490  0EF6               	movlw	-10
 29821  014492  A0E3               	btfss	plusw1,0,c
 29822  014494  D027               	goto	l8655
 29823  014496  0E01               	movlw	1
 29824  014498  6E0C               	movwf	(btemp+11)^0,c
 29825                           
 29826                           ;stkvar	_prod @ sp[(-13)+0]
 29827  01449A  50E1               	movf	fsr1l,w,c
 29828  01449C  0FF3               	addlw	-13
 29829  01449E  6ED9               	movwf	fsr2l,c
 29830  0144A0  50E2               	movf	fsr1h,w,c
 29831  0144A2  6EDA               	movwf	fsr2h,c
 29832  0144A4  0EFF               	movlw	255
 29833  0144A6  22DA               	addwfc	fsr2h,f,c
 29834  0144A8  280C               	incf	(btemp+11)^0,w,c
 29835  0144AA  52DE               	movf	postinc2,f,c
 29836  0144AC  D008               	goto	u7000
 29837  0144AE                     u7005:
 29838  0144AE  52DE               	movf	postinc2,f,c
 29839  0144B0  90D8               	bcf	status,0,c
 29840  0144B2  BEDC               	btfsc	preinc2,7,c
 29841  0144B4  80D8               	bsf	status,0,c
 29842  0144B6  32DD               	rrcf	postdec2,f,c
 29843  0144B8  32DD               	rrcf	postdec2,f,c
 29844  0144BA  32DD               	rrcf	postdec2,f,c
 29845  0144BC  32DE               	rrcf	postinc2,f,c
 29846  0144BE                     u7000:
 29847  0144BE  2EE8               	decfsz	wreg,f,c
 29848  0144C0  D7F6               	goto	u7005
 29849                           
 29850                           ;stkvar	_temp @ sp[(-13)+8]
 29851  0144C2  0EFB               	movlw	-5
 29852  0144C4  50E3               	movf	plusw1,w,c
 29853  0144C6  0F01               	addlw	1
 29854  0144C8  6E01               	movwf	btemp^0,c
 29855  0144CA  0EFB               	movlw	-5
 29856  0144CC  0060  F007  FFE3   	movff	btemp,plusw1
 29857  0144D2  6A01               	clrf	btemp^0,c
 29858  0144D4  0EFC               	movlw	-4
 29859  0144D6  50E3               	movf	plusw1,w,c
 29860  0144D8  2001               	addwfc	btemp^0,w,c
 29861  0144DA  6E01               	movwf	btemp^0,c
 29862  0144DC  0EFC               	movlw	-4
 29863  0144DE  0060  F007  FFE3   	movff	btemp,plusw1
 29864  0144E4                     l8655:
 29865                           
 29866                           ;stkvar	_temp @ sp[(-13)+8]
 29867  0144E4  0EFC               	movlw	-4
 29868  0144E6  BEE3               	btfsc	plusw1,7,c
 29869  0144E8  D020               	goto	l8659
 29870  0144EA  0EFC               	movlw	-4
 29871  0144EC  50E3               	movf	plusw1,w,c
 29872  0144EE  E104               	bnz	u7010
 29873  0144F0  0EFB               	movlw	-5
 29874  0144F2  28E3               	incf	plusw1,w,c
 29875  0144F4  A0D8               	btfss	status,0,c
 29876  0144F6  D019               	goto	l8659
 29877  0144F8                     u7010:
 29878  0144F8  0E00               	movlw	0
 29879  0144FA  6E09               	movwf	(btemp+8)^0,c
 29880  0144FC  0E00               	movlw	0
 29881  0144FE  6E0A               	movwf	(btemp+9)^0,c
 29882  014500  0E80               	movlw	128
 29883  014502  6E0B               	movwf	(btemp+10)^0,c
 29884  014504  0E7F               	movlw	127
 29885  014506  6E0C               	movwf	(btemp+11)^0,c
 29886                           
 29887                           ;stkvar	_prod @ sp[(-13)+0]
 29888  014508  0EF3               	movlw	-13
 29889  01450A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29890  014510  0EF4               	movlw	-12
 29891  014512  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29892  014518  0EF5               	movlw	-11
 29893  01451A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29894  014520  0EF6               	movlw	-10
 29895  014522  0060  F033  FFE3   	movff	btemp+11,plusw1
 29896  014528  D044               	goto	l8675
 29897  01452A                     l8659:
 29898                           
 29899                           ;stkvar	_temp @ sp[(-13)+8]
 29900  01452A  0EFC               	movlw	-4
 29901  01452C  BEE3               	btfsc	plusw1,7,c
 29902  01452E  D007               	goto	u7020
 29903  014530  0EFC               	movlw	-4
 29904  014532  50E3               	movf	plusw1,w,c
 29905  014534  E10F               	bnz	l8665
 29906  014536  0EFB               	movlw	-5
 29907  014538  04E3               	decf	plusw1,w,c
 29908  01453A  B0D8               	btfsc	status,0,c
 29909  01453C  D00B               	goto	l8665
 29910  01453E                     u7020:
 29911                           
 29912                           ;stkvar	_prod @ sp[(-13)+0]
 29913  01453E  0EF3               	movlw	-13
 29914  014540  6AE3               	clrf	plusw1,c
 29915  014542  0EF4               	movlw	-12
 29916  014544  6AE3               	clrf	plusw1,c
 29917  014546  0EF5               	movlw	-11
 29918  014548  6AE3               	clrf	plusw1,c
 29919  01454A  0EF6               	movlw	-10
 29920  01454C  6AE3               	clrf	plusw1,c
 29921                           
 29922                           ;stkvar	_sign @ sp[(-13)+12]
 29923  01454E  0EFF               	movlw	-1
 29924  014550  6AE3               	clrf	plusw1,c
 29925  014552  D02F               	goto	l8675
 29926  014554                     l8665:
 29927                           
 29928                           ;stkvar	_temp @ sp[(-13)+8]
 29929                           ;stkvar	_bexp @ sp[(-13)+10]
 29930  014554  0EFB               	movlw	-5
 29931  014556  006F FF8C  F001    	movff	plusw1,btemp
 29932  01455C  0EFD               	movlw	-3
 29933  01455E  0060  F007  FFE3   	movff	btemp,plusw1
 29934                           
 29935                           ;stkvar	_prod @ sp[(-13)+0]
 29936  014564  50E1               	movf	fsr1l,w,c
 29937  014566  0FF3               	addlw	-13
 29938  014568  6ED9               	movwf	fsr2l,c
 29939  01456A  50E2               	movf	fsr1h,w,c
 29940  01456C  6EDA               	movwf	fsr2h,c
 29941  01456E  0EFF               	movlw	255
 29942  014570  22DA               	addwfc	fsr2h,f,c
 29943  014572  0EFF               	movlw	255
 29944  014574  16DE               	andwf	postinc2,f,c
 29945  014576  0EFF               	movlw	255
 29946  014578  16DE               	andwf	postinc2,f,c
 29947  01457A  0E7F               	movlw	127
 29948  01457C  16DE               	andwf	postinc2,f,c
 29949  01457E  0E00               	movlw	0
 29950  014580  16DE               	andwf	postinc2,f,c
 29951                           
 29952                           ;stkvar	_bexp @ sp[(-13)+10]
 29953  014582  0EFD               	movlw	-3
 29954  014584  A0E3               	btfss	plusw1,0,c
 29955  014586  D008               	goto	l8673
 29956                           
 29957                           ;stkvar	_prod @ sp[(-13)+0]
 29958  014588  0EF5               	movlw	245
 29959  01458A  24E1               	addwf	fsr1l,w,c
 29960  01458C  6ED9               	movwf	fsr2l,c
 29961  01458E  0EFF               	movlw	255
 29962  014590  20E2               	addwfc	fsr1h,w,c
 29963  014592  6EDA               	movwf	fsr2h,c
 29964  014594  0E00               	movlw	0
 29965  014596  8EDB               	bsf	plusw2,7,c
 29966  014598                     l8673:
 29967                           
 29968                           ;stkvar	_prod @ sp[(-13)+0]
 29969  014598  0EF6               	movlw	246
 29970  01459A  24E1               	addwf	fsr1l,w,c
 29971  01459C  6ED9               	movwf	fsr2l,c
 29972  01459E  0EFF               	movlw	255
 29973  0145A0  20E2               	addwfc	fsr1h,w,c
 29974  0145A2  6EDA               	movwf	fsr2h,c
 29975                           
 29976                           ;stkvar	_bexp @ sp[(-13)+10]
 29977  0145A4  0EFD               	movlw	-3
 29978  0145A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 29979  0145AC  90D8               	bcf	status,0,c
 29980  0145AE  300C               	rrcf	(btemp+11)^0,w,c
 29981  0145B0  6EDF               	movwf	indf2,c
 29982  0145B2                     l8675:
 29983                           
 29984                           ;stkvar	_sign @ sp[(-13)+12]
 29985  0145B2  0EFF               	movlw	-1
 29986  0145B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29987                           
 29988                           ;stkvar	_prod @ sp[(-13)+0]
 29989  0145BA  0EF6               	movlw	246
 29990  0145BC  24E1               	addwf	fsr1l,w,c
 29991  0145BE  6ED9               	movwf	fsr2l,c
 29992  0145C0  0EFF               	movlw	255
 29993  0145C2  20E2               	addwfc	fsr1h,w,c
 29994  0145C4  6EDA               	movwf	fsr2h,c
 29995  0145C6  500C               	movf	(btemp+11)^0,w,c
 29996  0145C8  12DF               	iorwf	indf2,f,c
 29997                           
 29998                           ;stkvar	_prod @ sp[(-13)+0]
 29999  0145CA  0EF3               	movlw	-13
 30000  0145CC  006F FF8C  F001    	movff	plusw1,btemp
 30001  0145D2  0EF4               	movlw	-12
 30002  0145D4  006F FF8C  F002    	movff	plusw1,btemp+1
 30003  0145DA  0EF5               	movlw	-11
 30004  0145DC  006F FF8C  F003    	movff	plusw1,btemp+2
 30005  0145E2  0EF6               	movlw	-10
 30006  0145E4  006F FF8C  F004    	movff	plusw1,btemp+3
 30007  0145EA                     l3096:
 30008                           
 30009                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30010  0145EA  0EEB               	movlw	235
 30011  0145EC  26E1               	addwf	fsr1l,f,c
 30012  0145EE  0EFF               	movlw	255
 30013  0145F0  22E2               	addwfc	fsr1h,f,c
 30014  0145F2  0012               	return		;funcret
 30015  0145F4                     __end_of___flmul:
 30016                           	opt callstack 0
 30017                           
 30018 ;; *************** function _SYSTEM_Initialize *****************
 30019 ;; Defined at:
 30020 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30021 ;; Parameters:    Size  Location     Type
 30022 ;;		None
 30023 ;; Auto vars:     Size  Location     Type
 30024 ;;		None
 30025 ;; Return value:  Size  Location     Type
 30026 ;;                  1  [STACK] void 
 30027 ;; Registers used:
 30028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 30029 ;; Tracked objects:
 30030 ;;		On entry : 0/0
 30031 ;;		On exit  : 3F/3C
 30032 ;;		Unchanged: 0/0
 30033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30038 ;;Total ram usage:        0 bytes
 30039 ;; Hardware stack levels used:    1
 30040 ;; Hardware stack levels required when called:   17
 30041 ;; This function calls:
 30042 ;;		_ADCC_Initialize
 30043 ;;		_CLKREF_Initialize
 30044 ;;		_DMA1_Initialize
 30045 ;;		_DMA2_Initialize
 30046 ;;		_EXT_INT_Initialize
 30047 ;;		_FVR_Initialize
 30048 ;;		_INTERRUPT_Initialize
 30049 ;;		_OSCILLATOR_Initialize
 30050 ;;		_PIN_MANAGER_Initialize
 30051 ;;		_PMD_Initialize
 30052 ;;		_PWM8_Initialize
 30053 ;;		_SPI1_Initialize
 30054 ;;		_TMR2_Initialize
 30055 ;;		_TMR3_Initialize
 30056 ;;		_TMR5_Initialize
 30057 ;;		_TMR6_Initialize
 30058 ;;		_UART1_Initialize
 30059 ;;		_UART2_Initialize
 30060 ;; This function is called by:
 30061 ;;		_main
 30062 ;; This function uses a reentrant model
 30063 ;;
 30064                           
 30065                           	psect	text114
 30066  01B7E6                     __ptext114:
 30067                           	opt callstack 0
 30068  01B7E6                     _SYSTEM_Initialize:
 30069                           	opt callstack 13
 30070                           
 30071                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30072                           
 30073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30074                           ;incstack = 0
 30075  01B7E6  ECD7  F0D9         	call	_INTERRUPT_Initialize	;wreg free
 30076                           
 30077                           ; BSR set to: 57
 30078                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30079  01B7EA  EC60  F0E2         	call	_PMD_Initialize	;wreg free
 30080                           
 30081                           ; BSR set to: 57
 30082                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30083  01B7EE  EC35  F0D7         	call	_PIN_MANAGER_Initialize	;wreg free
 30084                           
 30085                           ; BSR set to: 58
 30086                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30087  01B7F2  EC55  F0E2         	call	_OSCILLATOR_Initialize	;wreg free
 30088                           
 30089                           ; BSR set to: 57
 30090                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 30091  01B7F6  ECE3  F0E2         	call	_FVR_Initialize	;wreg free
 30092                           
 30093                           ; BSR set to: 62
 30094                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 30095  01B7FA  EC6C  F0D9         	call	_ADCC_Initialize	;wreg free
 30096                           
 30097                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 30098  01B7FE  EC33  F0E2         	call	_TMR2_Initialize	;wreg free
 30099                           
 30100                           ; BSR set to: 57
 30101                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 30102  01B802  EC4A  F0E2         	call	_PWM8_Initialize	;wreg free
 30103                           
 30104                           ; BSR set to: 63
 30105                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 30106  01B806  ECEC  F0DE         	call	_EXT_INT_Initialize	;wreg free
 30107                           
 30108                           ; BSR set to: 57
 30109                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 30110  01B80A  ECC0  F0DF         	call	_TMR6_Initialize	;wreg free
 30111                           
 30112                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 30113  01B80E  EC84  F0DC         	call	_TMR3_Initialize	;wreg free
 30114                           
 30115                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 30116  01B812  EC60  F0DC         	call	_TMR5_Initialize	;wreg free
 30117                           
 30118                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 30119  01B816  EC3C  F0DC         	call	_UART1_Initialize	;wreg free
 30120                           
 30121                           ; BSR set to: 57
 30122                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 30123  01B81A  EC9E  F0DA         	call	_UART2_Initialize	;wreg free
 30124                           
 30125                           ; BSR set to: 57
 30126                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 30127  01B81E  EC3F  F0E2         	call	_SPI1_Initialize	;wreg free
 30128                           
 30129                           ; BSR set to: 61
 30130                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 30131  01B822  EC28  F0DB         	call	_DMA2_Initialize	;wreg free
 30132                           
 30133                           ; BSR set to: 59
 30134                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 30135  01B826  EC37  F0D9         	call	_DMA1_Initialize	;wreg free
 30136                           
 30137                           ; BSR set to: 59
 30138                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 30139  01B82A  ECB7  F0E2         	call	_CLKREF_Initialize	;wreg free
 30140                           
 30141                           ; BSR set to: 60
 30142                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30143  01B82E  0012               	return		;funcret
 30144  01B830                     __end_of_SYSTEM_Initialize:
 30145                           	opt callstack 0
 30146                           
 30147 ;; *************** function _UART2_Initialize *****************
 30148 ;; Defined at:
 30149 ;;		line 78 in file "mcc_generated_files/uart2.c"
 30150 ;; Parameters:    Size  Location     Type
 30151 ;;		None
 30152 ;; Auto vars:     Size  Location     Type
 30153 ;;		None
 30154 ;; Return value:  Size  Location     Type
 30155 ;;                  1  [STACK] void 
 30156 ;; Registers used:
 30157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30158 ;; Tracked objects:
 30159 ;;		On entry : 3F/39
 30160 ;;		On exit  : 3F/39
 30161 ;;		Unchanged: 0/0
 30162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30167 ;;Total ram usage:        0 bytes
 30168 ;; Hardware stack levels used:    1
 30169 ;; Hardware stack levels required when called:   16
 30170 ;; This function calls:
 30171 ;;		_UART2_SetRxInterruptHandler
 30172 ;;		_UART2_SetTxInterruptHandler
 30173 ;; This function is called by:
 30174 ;;		_SYSTEM_Initialize
 30175 ;; This function uses a reentrant model
 30176 ;;
 30177                           
 30178                           	psect	text115
 30179  01B53C                     __ptext115:
 30180                           	opt callstack 0
 30181  01B53C                     _UART2_Initialize:
 30182                           	opt callstack 13
 30183                           
 30184                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 30185                           
 30186                           ; BSR set to: 60
 30187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30188                           ;incstack = 0
 30189  01B53C  0139               	movlb	57	; () banked
 30190  01B53E  9596               	bcf	150,2,b	;volatile
 30191                           
 30192                           ; BSR set to: 57
 30193                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 30194  01B540  0E62               	movlw	low _UART2_Receive_ISR
 30195  01B542  6EE6               	movwf	postinc1,c
 30196  01B544  0EC3               	movlw	high _UART2_Receive_ISR
 30197  01B546  6EE6               	movwf	postinc1,c
 30198  01B548  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 30199  01B54A  6EE6               	movwf	postinc1,c
 30200  01B54C  EC11  F0E0         	call	_UART2_SetRxInterruptHandler	;wreg free
 30201                           
 30202                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 30203  01B550  0139               	movlb	57	; () banked
 30204  01B552  9796               	bcf	150,3,b	;volatile
 30205                           
 30206                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 30207  01B554  0E54               	movlw	low _UART2_Transmit_ISR
 30208  01B556  6EE6               	movwf	postinc1,c
 30209  01B558  0EBF               	movlw	high _UART2_Transmit_ISR
 30210  01B55A  6EE6               	movwf	postinc1,c
 30211  01B55C  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 30212  01B55E  6EE6               	movwf	postinc1,c
 30213  01B560  ECFD  F0DF         	call	_UART2_SetTxInterruptHandler	;wreg free
 30214                           
 30215                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 30216  01B564  013D               	movlb	61	; () banked
 30217  01B566  6BD4               	clrf	212,b	;volatile
 30218                           
 30219                           ; BSR set to: 61
 30220                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 30221  01B568  6BD6               	clrf	214,b	;volatile
 30222                           
 30223                           ; BSR set to: 61
 30224                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 30225  01B56A  6BD8               	clrf	216,b	;volatile
 30226                           
 30227                           ; BSR set to: 61
 30228                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 30229  01B56C  0EB0               	movlw	176
 30230  01B56E  6FDA               	movwf	218,b	;volatile
 30231                           
 30232                           ; BSR set to: 61
 30233                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 30234  01B570  0E80               	movlw	128
 30235  01B572  6FDB               	movwf	219,b	;volatile
 30236                           
 30237                           ; BSR set to: 61
 30238                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 30239  01B574  6BDC               	clrf	220,b	;volatile
 30240                           
 30241                           ; BSR set to: 61
 30242                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 30243  01B576  0E82               	movlw	130
 30244  01B578  6FDD               	movwf	221,b	;volatile
 30245                           
 30246                           ; BSR set to: 61
 30247                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 30248  01B57A  0E06               	movlw	6
 30249  01B57C  6FDE               	movwf	222,b	;volatile
 30250                           
 30251                           ; BSR set to: 61
 30252                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 30253  01B57E  6BDF               	clrf	223,b	;volatile
 30254                           
 30255                           ; BSR set to: 61
 30256                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 30257  01B580  6BE0               	clrf	224,b	;volatile
 30258                           
 30259                           ; BSR set to: 61
 30260                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 30261  01B582  6BE1               	clrf	225,b	;volatile
 30262                           
 30263                           ; BSR set to: 61
 30264                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 30265  01B584  6BE2               	clrf	226,b	;volatile
 30266                           
 30267                           ; BSR set to: 61
 30268                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 30269  01B586  0100               	movlb	0	; () banked
 30270  01B588  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 30271                           
 30272                           ; BSR set to: 0
 30273                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 30274  01B58A  6A46               	clrf	_uart2TxTail^0,c	;volatile
 30275                           
 30276                           ; BSR set to: 0
 30277                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 30278  01B58C  0E40               	movlw	64
 30279  01B58E  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 30280                           
 30281                           ; BSR set to: 0
 30282                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 30283  01B590  6A44               	clrf	_uart2RxHead^0,c	;volatile
 30284                           
 30285                           ; BSR set to: 0
 30286                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 30287  01B592  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 30288                           
 30289                           ; BSR set to: 0
 30290                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 30291  01B594  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 30292                           
 30293                           ; BSR set to: 0
 30294                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 30295  01B596  0139               	movlb	57	; () banked
 30296  01B598  8596               	bsf	150,2,b	;volatile
 30297                           
 30298                           ; BSR set to: 57
 30299                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30300  01B59A  0012               	return		;funcret
 30301  01B59C                     __end_of_UART2_Initialize:
 30302                           	opt callstack 0
 30303                           
 30304 ;; *************** function _UART2_SetTxInterruptHandler *****************
 30305 ;; Defined at:
 30306 ;;		line 252 in file "mcc_generated_files/uart2.c"
 30307 ;; Parameters:    Size  Location     Type
 30308 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30309 ;;		 -> UART2_Transmit_ISR(1), 
 30310 ;; Auto vars:     Size  Location     Type
 30311 ;;		None
 30312 ;; Return value:  Size  Location     Type
 30313 ;;                  1  [STACK] void 
 30314 ;; Registers used:
 30315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30316 ;; Tracked objects:
 30317 ;;		On entry : 3F/39
 30318 ;;		On exit  : 0/0
 30319 ;;		Unchanged: 0/0
 30320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30325 ;;Total ram usage:        0 bytes
 30326 ;; Hardware stack levels used:    1
 30327 ;; Hardware stack levels required when called:   15
 30328 ;; This function calls:
 30329 ;;		Nothing
 30330 ;; This function is called by:
 30331 ;;		_UART2_Initialize
 30332 ;; This function uses a reentrant model
 30333 ;;
 30334                           
 30335                           	psect	text116
 30336  01BFFA                     __ptext116:
 30337                           	opt callstack 0
 30338  01BFFA                     _UART2_SetTxInterruptHandler:
 30339                           	opt callstack 13
 30340                           
 30341                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 30342                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30343                           
 30344                           ; BSR set to: 57
 30345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30346                           ;incstack = 0
 30347  01BFFA  50E1               	movf	fsr1l,w,c
 30348  01BFFC  0FFD               	addlw	-3
 30349  01BFFE  6ED9               	movwf	fsr2l,c
 30350  01C000  50E2               	movf	fsr1h,w,c
 30351  01C002  6EDA               	movwf	fsr2h,c
 30352  01C004  0EFF               	movlw	255
 30353  01C006  22DA               	addwfc	fsr2h,f,c
 30354  01C008  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 30355  01C00E  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 30356  01C014  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 30357                           
 30358                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30359  01C01A  52E5               	movf	postdec1,f,c
 30360  01C01C  52E5               	movf	postdec1,f,c
 30361  01C01E  52E5               	movf	postdec1,f,c
 30362  01C020  0012               	return		;funcret
 30363  01C022                     __end_of_UART2_SetTxInterruptHandler:
 30364                           	opt callstack 0
 30365                           
 30366 ;; *************** function _UART2_SetRxInterruptHandler *****************
 30367 ;; Defined at:
 30368 ;;		line 248 in file "mcc_generated_files/uart2.c"
 30369 ;; Parameters:    Size  Location     Type
 30370 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30371 ;;		 -> UART2_Receive_ISR(1), 
 30372 ;; Auto vars:     Size  Location     Type
 30373 ;;		None
 30374 ;; Return value:  Size  Location     Type
 30375 ;;                  1  [STACK] void 
 30376 ;; Registers used:
 30377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30378 ;; Tracked objects:
 30379 ;;		On entry : 3F/39
 30380 ;;		On exit  : 0/0
 30381 ;;		Unchanged: 0/0
 30382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30387 ;;Total ram usage:        0 bytes
 30388 ;; Hardware stack levels used:    1
 30389 ;; Hardware stack levels required when called:   15
 30390 ;; This function calls:
 30391 ;;		Nothing
 30392 ;; This function is called by:
 30393 ;;		_UART2_Initialize
 30394 ;; This function uses a reentrant model
 30395 ;;
 30396                           
 30397                           	psect	text117
 30398  01C022                     __ptext117:
 30399                           	opt callstack 0
 30400  01C022                     _UART2_SetRxInterruptHandler:
 30401                           	opt callstack 13
 30402                           
 30403                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 30404                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30405                           
 30406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30407                           ;incstack = 0
 30408  01C022  50E1               	movf	fsr1l,w,c
 30409  01C024  0FFD               	addlw	-3
 30410  01C026  6ED9               	movwf	fsr2l,c
 30411  01C028  50E2               	movf	fsr1h,w,c
 30412  01C02A  6EDA               	movwf	fsr2h,c
 30413  01C02C  0EFF               	movlw	255
 30414  01C02E  22DA               	addwfc	fsr2h,f,c
 30415  01C030  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 30416  01C036  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 30417  01C03C  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 30418                           
 30419                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30420  01C042  52E5               	movf	postdec1,f,c
 30421  01C044  52E5               	movf	postdec1,f,c
 30422  01C046  52E5               	movf	postdec1,f,c
 30423  01C048  0012               	return		;funcret
 30424  01C04A                     __end_of_UART2_SetRxInterruptHandler:
 30425                           	opt callstack 0
 30426                           
 30427 ;; *************** function _UART1_Initialize *****************
 30428 ;; Defined at:
 30429 ;;		line 75 in file "mcc_generated_files/uart1.c"
 30430 ;; Parameters:    Size  Location     Type
 30431 ;;		None
 30432 ;; Auto vars:     Size  Location     Type
 30433 ;;		None
 30434 ;; Return value:  Size  Location     Type
 30435 ;;                  1  [STACK] void 
 30436 ;; Registers used:
 30437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30438 ;; Tracked objects:
 30439 ;;		On entry : 0/39
 30440 ;;		On exit  : 3F/39
 30441 ;;		Unchanged: 0/0
 30442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30447 ;;Total ram usage:        0 bytes
 30448 ;; Hardware stack levels used:    1
 30449 ;; Hardware stack levels required when called:   16
 30450 ;; This function calls:
 30451 ;;		_UART1_SetRxInterruptHandler
 30452 ;; This function is called by:
 30453 ;;		_SYSTEM_Initialize
 30454 ;; This function uses a reentrant model
 30455 ;;
 30456                           
 30457                           	psect	text118
 30458  01B878                     __ptext118:
 30459                           	opt callstack 0
 30460  01B878                     _UART1_Initialize:
 30461                           	opt callstack 13
 30462                           
 30463                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 30464                           
 30465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30466                           ;incstack = 0
 30467  01B878  0139               	movlb	57	; () banked
 30468  01B87A  9793               	bcf	147,3,b	;volatile
 30469                           
 30470                           ; BSR set to: 57
 30471                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30472  01B87C  0E20               	movlw	low _UART1_Receive_ISR
 30473  01B87E  6EE6               	movwf	postinc1,c
 30474  01B880  0EC3               	movlw	high _UART1_Receive_ISR
 30475  01B882  6EE6               	movwf	postinc1,c
 30476  01B884  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 30477  01B886  6EE6               	movwf	postinc1,c
 30478  01B888  EC25  F0E0         	call	_UART1_SetRxInterruptHandler	;wreg free
 30479                           
 30480                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 30481  01B88C  013D               	movlb	61	; () banked
 30482  01B88E  6BEC               	clrf	236,b	;volatile
 30483                           
 30484                           ; BSR set to: 61
 30485                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 30486  01B890  6BED               	clrf	237,b	;volatile
 30487                           
 30488                           ; BSR set to: 61
 30489                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 30490  01B892  6BEE               	clrf	238,b	;volatile
 30491                           
 30492                           ; BSR set to: 61
 30493                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 30494  01B894  6BEF               	clrf	239,b	;volatile
 30495                           
 30496                           ; BSR set to: 61
 30497                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 30498  01B896  6BF0               	clrf	240,b	;volatile
 30499                           
 30500                           ; BSR set to: 61
 30501                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 30502  01B898  6BF1               	clrf	241,b	;volatile
 30503                           
 30504                           ; BSR set to: 61
 30505                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 30506  01B89A  0EB0               	movlw	176
 30507  01B89C  6FF2               	movwf	242,b	;volatile
 30508                           
 30509                           ; BSR set to: 61
 30510                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 30511  01B89E  0E80               	movlw	128
 30512  01B8A0  6FF3               	movwf	243,b	;volatile
 30513                           
 30514                           ; BSR set to: 61
 30515                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 30516  01B8A2  6BF4               	clrf	244,b	;volatile
 30517                           
 30518                           ; BSR set to: 61
 30519                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 30520  01B8A4  0E8A               	movlw	138
 30521  01B8A6  6FF5               	movwf	245,b	;volatile
 30522                           
 30523                           ; BSR set to: 61
 30524                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 30525  01B8A8  6BF6               	clrf	246,b	;volatile
 30526                           
 30527                           ; BSR set to: 61
 30528                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 30529  01B8AA  6BF7               	clrf	247,b	;volatile
 30530                           
 30531                           ; BSR set to: 61
 30532                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 30533  01B8AC  6BF8               	clrf	248,b	;volatile
 30534                           
 30535                           ; BSR set to: 61
 30536                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 30537  01B8AE  6BF9               	clrf	249,b	;volatile
 30538                           
 30539                           ; BSR set to: 61
 30540                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 30541  01B8B0  6BFA               	clrf	250,b	;volatile
 30542                           
 30543                           ; BSR set to: 61
 30544                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 30545  01B8B2  6A47               	clrf	_uart1RxHead^0,c	;volatile
 30546                           
 30547                           ; BSR set to: 61
 30548                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 30549  01B8B4  0100               	movlb	0	; () banked
 30550  01B8B6  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 30551                           
 30552                           ; BSR set to: 0
 30553                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 30554  01B8B8  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 30555                           
 30556                           ; BSR set to: 0
 30557                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 30558  01B8BA  0139               	movlb	57	; () banked
 30559  01B8BC  8793               	bsf	147,3,b	;volatile
 30560                           
 30561                           ; BSR set to: 57
 30562                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30563  01B8BE  0012               	return		;funcret
 30564  01B8C0                     __end_of_UART1_Initialize:
 30565                           	opt callstack 0
 30566                           
 30567 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30568 ;; Defined at:
 30569 ;;		line 207 in file "mcc_generated_files/uart1.c"
 30570 ;; Parameters:    Size  Location     Type
 30571 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30572 ;;		 -> UART1_Receive_ISR(1), 
 30573 ;; Auto vars:     Size  Location     Type
 30574 ;;		None
 30575 ;; Return value:  Size  Location     Type
 30576 ;;                  1  [STACK] void 
 30577 ;; Registers used:
 30578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30579 ;; Tracked objects:
 30580 ;;		On entry : 3F/39
 30581 ;;		On exit  : 0/0
 30582 ;;		Unchanged: 0/0
 30583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30588 ;;Total ram usage:        0 bytes
 30589 ;; Hardware stack levels used:    1
 30590 ;; Hardware stack levels required when called:   15
 30591 ;; This function calls:
 30592 ;;		Nothing
 30593 ;; This function is called by:
 30594 ;;		_UART1_Initialize
 30595 ;; This function uses a reentrant model
 30596 ;;
 30597                           
 30598                           	psect	text119
 30599  01C04A                     __ptext119:
 30600                           	opt callstack 0
 30601  01C04A                     _UART1_SetRxInterruptHandler:
 30602                           	opt callstack 13
 30603                           
 30604                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 30605                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30606                           
 30607                           ; BSR set to: 57
 30608                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30609                           ;incstack = 0
 30610  01C04A  50E1               	movf	fsr1l,w,c
 30611  01C04C  0FFD               	addlw	-3
 30612  01C04E  6ED9               	movwf	fsr2l,c
 30613  01C050  50E2               	movf	fsr1h,w,c
 30614  01C052  6EDA               	movwf	fsr2h,c
 30615  01C054  0EFF               	movlw	255
 30616  01C056  22DA               	addwfc	fsr2h,f,c
 30617  01C058  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 30618  01C05E  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 30619  01C064  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 30620                           
 30621                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30622  01C06A  52E5               	movf	postdec1,f,c
 30623  01C06C  52E5               	movf	postdec1,f,c
 30624  01C06E  52E5               	movf	postdec1,f,c
 30625  01C070  0012               	return		;funcret
 30626  01C072                     __end_of_UART1_SetRxInterruptHandler:
 30627                           	opt callstack 0
 30628                           
 30629 ;; *************** function _TMR6_Initialize *****************
 30630 ;; Defined at:
 30631 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 30632 ;; Parameters:    Size  Location     Type
 30633 ;;		None
 30634 ;; Auto vars:     Size  Location     Type
 30635 ;;		None
 30636 ;; Return value:  Size  Location     Type
 30637 ;;                  1  [STACK] void 
 30638 ;; Registers used:
 30639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30640 ;; Tracked objects:
 30641 ;;		On entry : 3F/39
 30642 ;;		On exit  : 0/0
 30643 ;;		Unchanged: 0/0
 30644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30649 ;;Total ram usage:        0 bytes
 30650 ;; Hardware stack levels used:    1
 30651 ;; Hardware stack levels required when called:   16
 30652 ;; This function calls:
 30653 ;;		_TMR6_SetInterruptHandler
 30654 ;; This function is called by:
 30655 ;;		_SYSTEM_Initialize
 30656 ;; This function uses a reentrant model
 30657 ;;
 30658                           
 30659                           	psect	text120
 30660  01BF80                     __ptext120:
 30661                           	opt callstack 0
 30662  01BF80                     _TMR6_Initialize:
 30663                           	opt callstack 13
 30664                           
 30665                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 30666                           
 30667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30668                           ;incstack = 0
 30669  01BF80  0E01               	movlw	1
 30670  01BF82  6E96               	movwf	150,c	;volatile
 30671                           
 30672                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 30673  01BF84  6A95               	clrf	149,c	;volatile
 30674                           
 30675                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 30676  01BF86  6A97               	clrf	151,c	;volatile
 30677                           
 30678                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 30679  01BF88  0E7C               	movlw	124
 30680  01BF8A  6E93               	movwf	147,c	;volatile
 30681                           
 30682                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 30683  01BF8C  6A92               	clrf	146,c	;volatile
 30684                           
 30685                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 30686  01BF8E  0139               	movlb	57	; () banked
 30687  01BF90  91A9               	bcf	169,0,b	;volatile
 30688                           
 30689                           ; BSR set to: 57
 30690                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 30691  01BF92  8199               	bsf	153,0,b	;volatile
 30692                           
 30693                           ; BSR set to: 57
 30694                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 30695  01BF94  0E4E               	movlw	low _TMR6_DefaultInterruptHandler
 30696  01BF96  6EE6               	movwf	postinc1,c
 30697  01BF98  0EB7               	movlw	high _TMR6_DefaultInterruptHandler
 30698  01BF9A  6EE6               	movwf	postinc1,c
 30699  01BF9C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 30700  01BF9E  6EE6               	movwf	postinc1,c
 30701  01BFA0  EC39  F0E0         	call	_TMR6_SetInterruptHandler	;wreg free
 30702                           
 30703                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 30704  01BFA4  0EE0               	movlw	224
 30705  01BFA6  6E94               	movwf	148,c	;volatile
 30706                           
 30707                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30708  01BFA8  0012               	return		;funcret
 30709  01BFAA                     __end_of_TMR6_Initialize:
 30710                           	opt callstack 0
 30711                           
 30712 ;; *************** function _TMR6_SetInterruptHandler *****************
 30713 ;; Defined at:
 30714 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 30715 ;; Parameters:    Size  Location     Type
 30716 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30717 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 30718 ;; Auto vars:     Size  Location     Type
 30719 ;;		None
 30720 ;; Return value:  Size  Location     Type
 30721 ;;                  1  [STACK] void 
 30722 ;; Registers used:
 30723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30724 ;; Tracked objects:
 30725 ;;		On entry : 3F/39
 30726 ;;		On exit  : 0/0
 30727 ;;		Unchanged: 0/0
 30728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30733 ;;Total ram usage:        0 bytes
 30734 ;; Hardware stack levels used:    1
 30735 ;; Hardware stack levels required when called:   15
 30736 ;; This function calls:
 30737 ;;		Nothing
 30738 ;; This function is called by:
 30739 ;;		_TMR6_Initialize
 30740 ;; This function uses a reentrant model
 30741 ;;
 30742                           
 30743                           	psect	text121
 30744  01C072                     __ptext121:
 30745                           	opt callstack 0
 30746  01C072                     _TMR6_SetInterruptHandler:
 30747                           	opt callstack 13
 30748                           
 30749                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 30750                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30751                           
 30752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30753                           ;incstack = 0
 30754  01C072  50E1               	movf	fsr1l,w,c
 30755  01C074  0FFD               	addlw	-3
 30756  01C076  6ED9               	movwf	fsr2l,c
 30757  01C078  50E2               	movf	fsr1h,w,c
 30758  01C07A  6EDA               	movwf	fsr2h,c
 30759  01C07C  0EFF               	movlw	255
 30760  01C07E  22DA               	addwfc	fsr2h,f,c
 30761  01C080  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 30762  01C086  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 30763  01C08C  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 30764                           
 30765                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30766  01C092  52E5               	movf	postdec1,f,c
 30767  01C094  52E5               	movf	postdec1,f,c
 30768  01C096  52E5               	movf	postdec1,f,c
 30769  01C098  0012               	return		;funcret
 30770  01C09A                     __end_of_TMR6_SetInterruptHandler:
 30771                           	opt callstack 0
 30772                           
 30773 ;; *************** function _TMR5_Initialize *****************
 30774 ;; Defined at:
 30775 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 30776 ;; Parameters:    Size  Location     Type
 30777 ;;		None
 30778 ;; Auto vars:     Size  Location     Type
 30779 ;;		None
 30780 ;; Return value:  Size  Location     Type
 30781 ;;                  1  [STACK] void 
 30782 ;; Registers used:
 30783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30784 ;; Tracked objects:
 30785 ;;		On entry : 0/39
 30786 ;;		On exit  : 0/0
 30787 ;;		Unchanged: 0/0
 30788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30793 ;;Total ram usage:        0 bytes
 30794 ;; Hardware stack levels used:    1
 30795 ;; Hardware stack levels required when called:   16
 30796 ;; This function calls:
 30797 ;;		_TMR5_SetInterruptHandler
 30798 ;; This function is called by:
 30799 ;;		_SYSTEM_Initialize
 30800 ;; This function uses a reentrant model
 30801 ;;
 30802                           
 30803                           	psect	text122
 30804  01B8C0                     __ptext122:
 30805                           	opt callstack 0
 30806  01B8C0                     _TMR5_Initialize:
 30807                           	opt callstack 13
 30808                           
 30809                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30810                           
 30811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30812                           ;incstack = 0
 30813  01B8C0  6A9B               	clrf	155,c	;volatile
 30814                           
 30815                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30816  01B8C2  6A9C               	clrf	156,c	;volatile
 30817                           
 30818                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30819  01B8C4  0E01               	movlw	1
 30820  01B8C6  6E9D               	movwf	157,c	;volatile
 30821                           
 30822                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30823  01B8C8  0E63               	movlw	99
 30824  01B8CA  6E99               	movwf	153,c	;volatile
 30825                           
 30826                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30827  01B8CC  0EC0               	movlw	192
 30828  01B8CE  6E98               	movwf	152,c	;volatile
 30829                           
 30830                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30831  01B8D0  5098               	movf	152,w,c	;volatile
 30832  01B8D2  006F FE64  F001    	movff	16281,btemp	;volatile
 30833  01B8D8  6A02               	clrf	(btemp+1)^0,c
 30834  01B8DA  0060  F004  F002   	movff	btemp,btemp+1
 30835  01B8E0  6A01               	clrf	btemp^0,c
 30836  01B8E2  1001               	iorwf	btemp^0,w,c
 30837  01B8E4  0100               	movlb	0	; () banked
 30838  01B8E6  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30839  01B8E8  5002               	movf	(btemp+1)^0,w,c
 30840  01B8EA  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30841                           
 30842                           ; BSR set to: 0
 30843                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30844  01B8EC  0139               	movlb	57	; () banked
 30845  01B8EE  9DA8               	bcf	168,6,b	;volatile
 30846                           
 30847                           ; BSR set to: 57
 30848                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30849  01B8F0  8D98               	bsf	152,6,b	;volatile
 30850                           
 30851                           ; BSR set to: 57
 30852                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30853  01B8F2  0E98               	movlw	low _TMR5_DefaultInterruptHandler
 30854  01B8F4  6EE6               	movwf	postinc1,c
 30855  01B8F6  0EBC               	movlw	high _TMR5_DefaultInterruptHandler
 30856  01B8F8  6EE6               	movwf	postinc1,c
 30857  01B8FA  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30858  01B8FC  6EE6               	movwf	postinc1,c
 30859  01B8FE  EC4D  F0E0         	call	_TMR5_SetInterruptHandler	;wreg free
 30860                           
 30861                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30862  01B902  0E31               	movlw	49
 30863  01B904  6E9A               	movwf	154,c	;volatile
 30864                           
 30865                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30866  01B906  0012               	return		;funcret
 30867  01B908                     __end_of_TMR5_Initialize:
 30868                           	opt callstack 0
 30869                           
 30870 ;; *************** function _TMR5_SetInterruptHandler *****************
 30871 ;; Defined at:
 30872 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30873 ;; Parameters:    Size  Location     Type
 30874 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30875 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30876 ;; Auto vars:     Size  Location     Type
 30877 ;;		None
 30878 ;; Return value:  Size  Location     Type
 30879 ;;                  1  [STACK] void 
 30880 ;; Registers used:
 30881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30882 ;; Tracked objects:
 30883 ;;		On entry : 3F/39
 30884 ;;		On exit  : 0/0
 30885 ;;		Unchanged: 0/0
 30886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30891 ;;Total ram usage:        0 bytes
 30892 ;; Hardware stack levels used:    1
 30893 ;; Hardware stack levels required when called:   15
 30894 ;; This function calls:
 30895 ;;		Nothing
 30896 ;; This function is called by:
 30897 ;;		_TMR5_Initialize
 30898 ;; This function uses a reentrant model
 30899 ;;
 30900                           
 30901                           	psect	text123
 30902  01C09A                     __ptext123:
 30903                           	opt callstack 0
 30904  01C09A                     _TMR5_SetInterruptHandler:
 30905                           	opt callstack 13
 30906                           
 30907                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30908                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30909                           
 30910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30911                           ;incstack = 0
 30912  01C09A  50E1               	movf	fsr1l,w,c
 30913  01C09C  0FFD               	addlw	-3
 30914  01C09E  6ED9               	movwf	fsr2l,c
 30915  01C0A0  50E2               	movf	fsr1h,w,c
 30916  01C0A2  6EDA               	movwf	fsr2h,c
 30917  01C0A4  0EFF               	movlw	255
 30918  01C0A6  22DA               	addwfc	fsr2h,f,c
 30919  01C0A8  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 30920  01C0AE  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 30921  01C0B4  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 30922                           
 30923                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30924  01C0BA  52E5               	movf	postdec1,f,c
 30925  01C0BC  52E5               	movf	postdec1,f,c
 30926  01C0BE  52E5               	movf	postdec1,f,c
 30927  01C0C0  0012               	return		;funcret
 30928  01C0C2                     __end_of_TMR5_SetInterruptHandler:
 30929                           	opt callstack 0
 30930                           
 30931 ;; *************** function _TMR3_Initialize *****************
 30932 ;; Defined at:
 30933 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30934 ;; Parameters:    Size  Location     Type
 30935 ;;		None
 30936 ;; Auto vars:     Size  Location     Type
 30937 ;;		None
 30938 ;; Return value:  Size  Location     Type
 30939 ;;                  1  [STACK] void 
 30940 ;; Registers used:
 30941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30942 ;; Tracked objects:
 30943 ;;		On entry : 0/39
 30944 ;;		On exit  : 0/0
 30945 ;;		Unchanged: 0/0
 30946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30951 ;;Total ram usage:        0 bytes
 30952 ;; Hardware stack levels used:    1
 30953 ;; Hardware stack levels required when called:   16
 30954 ;; This function calls:
 30955 ;;		_TMR3_SetInterruptHandler
 30956 ;; This function is called by:
 30957 ;;		_SYSTEM_Initialize
 30958 ;; This function uses a reentrant model
 30959 ;;
 30960                           
 30961                           	psect	text124
 30962  01B908                     __ptext124:
 30963                           	opt callstack 0
 30964  01B908                     _TMR3_Initialize:
 30965                           	opt callstack 13
 30966                           
 30967                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30968                           
 30969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30970                           ;incstack = 0
 30971  01B908  6AA7               	clrf	167,c	;volatile
 30972                           
 30973                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30974  01B90A  6AA8               	clrf	168,c	;volatile
 30975                           
 30976                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30977  01B90C  0E01               	movlw	1
 30978  01B90E  6EA9               	movwf	169,c	;volatile
 30979                           
 30980                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30981  01B910  0E3C               	movlw	60
 30982  01B912  6EA5               	movwf	165,c	;volatile
 30983                           
 30984                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30985  01B914  0EB0               	movlw	176
 30986  01B916  6EA4               	movwf	164,c	;volatile
 30987                           
 30988                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30989  01B918  50A4               	movf	164,w,c	;volatile
 30990  01B91A  006F FE94  F001    	movff	16293,btemp	;volatile
 30991  01B920  6A02               	clrf	(btemp+1)^0,c
 30992  01B922  0060  F004  F002   	movff	btemp,btemp+1
 30993  01B928  6A01               	clrf	btemp^0,c
 30994  01B92A  1001               	iorwf	btemp^0,w,c
 30995  01B92C  0100               	movlb	0	; () banked
 30996  01B92E  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 30997  01B930  5002               	movf	(btemp+1)^0,w,c
 30998  01B932  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 30999                           
 31000                           ; BSR set to: 0
 31001                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 31002  01B934  0139               	movlb	57	; () banked
 31003  01B936  9DA6               	bcf	166,6,b	;volatile
 31004                           
 31005                           ; BSR set to: 57
 31006                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 31007  01B938  8D96               	bsf	150,6,b	;volatile
 31008                           
 31009                           ; BSR set to: 57
 31010                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 31011  01B93A  0EF0               	movlw	low _TMR3_DefaultInterruptHandler
 31012  01B93C  6EE6               	movwf	postinc1,c
 31013  01B93E  0EC5               	movlw	high _TMR3_DefaultInterruptHandler
 31014  01B940  6EE6               	movwf	postinc1,c
 31015  01B942  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 31016  01B944  6EE6               	movwf	postinc1,c
 31017  01B946  EC61  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
 31018                           
 31019                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 31020  01B94A  0E31               	movlw	49
 31021  01B94C  6EA6               	movwf	166,c	;volatile
 31022                           
 31023                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31024  01B94E  0012               	return		;funcret
 31025  01B950                     __end_of_TMR3_Initialize:
 31026                           	opt callstack 0
 31027                           
 31028 ;; *************** function _TMR3_SetInterruptHandler *****************
 31029 ;; Defined at:
 31030 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 31031 ;; Parameters:    Size  Location     Type
 31032 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31033 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 31034 ;; Auto vars:     Size  Location     Type
 31035 ;;		None
 31036 ;; Return value:  Size  Location     Type
 31037 ;;                  1  [STACK] void 
 31038 ;; Registers used:
 31039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31040 ;; Tracked objects:
 31041 ;;		On entry : 0/0
 31042 ;;		On exit  : 0/0
 31043 ;;		Unchanged: 0/0
 31044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31049 ;;Total ram usage:        0 bytes
 31050 ;; Hardware stack levels used:    1
 31051 ;; Hardware stack levels required when called:   15
 31052 ;; This function calls:
 31053 ;;		Nothing
 31054 ;; This function is called by:
 31055 ;;		_TMR3_Initialize
 31056 ;;		_init_bsoc
 31057 ;; This function uses a reentrant model
 31058 ;;
 31059                           
 31060                           	psect	text125
 31061  01C0C2                     __ptext125:
 31062                           	opt callstack 0
 31063  01C0C2                     _TMR3_SetInterruptHandler:
 31064                           	opt callstack 14
 31065                           
 31066                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 31067                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31068                           
 31069                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31070                           ;incstack = 0
 31071  01C0C2  50E1               	movf	fsr1l,w,c
 31072  01C0C4  0FFD               	addlw	-3
 31073  01C0C6  6ED9               	movwf	fsr2l,c
 31074  01C0C8  50E2               	movf	fsr1h,w,c
 31075  01C0CA  6EDA               	movwf	fsr2h,c
 31076  01C0CC  0EFF               	movlw	255
 31077  01C0CE  22DA               	addwfc	fsr2h,f,c
 31078  01C0D0  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 31079  01C0D6  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 31080  01C0DC  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 31081                           
 31082                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31083  01C0E2  52E5               	movf	postdec1,f,c
 31084  01C0E4  52E5               	movf	postdec1,f,c
 31085  01C0E6  52E5               	movf	postdec1,f,c
 31086  01C0E8  0012               	return		;funcret
 31087  01C0EA                     __end_of_TMR3_SetInterruptHandler:
 31088                           	opt callstack 0
 31089                           
 31090 ;; *************** function _TMR2_Initialize *****************
 31091 ;; Defined at:
 31092 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 31093 ;; Parameters:    Size  Location     Type
 31094 ;;		None
 31095 ;; Auto vars:     Size  Location     Type
 31096 ;;		None
 31097 ;; Return value:  Size  Location     Type
 31098 ;;                  1  [STACK] void 
 31099 ;; Registers used:
 31100 ;;		wreg, status,2
 31101 ;; Tracked objects:
 31102 ;;		On entry : 0/3E
 31103 ;;		On exit  : 3F/39
 31104 ;;		Unchanged: 0/0
 31105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31110 ;;Total ram usage:        0 bytes
 31111 ;; Hardware stack levels used:    1
 31112 ;; Hardware stack levels required when called:   15
 31113 ;; This function calls:
 31114 ;;		Nothing
 31115 ;; This function is called by:
 31116 ;;		_SYSTEM_Initialize
 31117 ;; This function uses a reentrant model
 31118 ;;
 31119                           
 31120                           	psect	text126
 31121  01C466                     __ptext126:
 31122                           	opt callstack 0
 31123  01C466                     _TMR2_Initialize:
 31124                           	opt callstack 14
 31125                           
 31126                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 31127                           
 31128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31129                           ;incstack = 0
 31130  01C466  0E01               	movlw	1
 31131  01C468  6EAE               	movwf	174,c	;volatile
 31132                           
 31133                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 31134  01C46A  6AAD               	clrf	173,c	;volatile
 31135                           
 31136                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 31137  01C46C  6AAF               	clrf	175,c	;volatile
 31138                           
 31139                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 31140  01C46E  0E63               	movlw	99
 31141  01C470  6EAB               	movwf	171,c	;volatile
 31142                           
 31143                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 31144  01C472  6AAA               	clrf	170,c	;volatile
 31145                           
 31146                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 31147  01C474  0139               	movlb	57	; () banked
 31148  01C476  95A4               	bcf	164,2,b	;volatile
 31149                           
 31150                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 31151  01C478  0EC0               	movlw	192
 31152  01C47A  6EAC               	movwf	172,c	;volatile
 31153                           
 31154                           ; BSR set to: 57
 31155                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31156  01C47C  0012               	return		;funcret
 31157  01C47E                     __end_of_TMR2_Initialize:
 31158                           	opt callstack 0
 31159                           
 31160 ;; *************** function _SPI1_Initialize *****************
 31161 ;; Defined at:
 31162 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31163 ;; Parameters:    Size  Location     Type
 31164 ;;		None
 31165 ;; Auto vars:     Size  Location     Type
 31166 ;;		None
 31167 ;; Return value:  Size  Location     Type
 31168 ;;                  1  [STACK] void 
 31169 ;; Registers used:
 31170 ;;		wreg, status,2
 31171 ;; Tracked objects:
 31172 ;;		On entry : 3F/39
 31173 ;;		On exit  : 3F/3D
 31174 ;;		Unchanged: 0/0
 31175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31180 ;;Total ram usage:        0 bytes
 31181 ;; Hardware stack levels used:    1
 31182 ;; Hardware stack levels required when called:   15
 31183 ;; This function calls:
 31184 ;;		Nothing
 31185 ;; This function is called by:
 31186 ;;		_SYSTEM_Initialize
 31187 ;; This function uses a reentrant model
 31188 ;;
 31189                           
 31190                           	psect	text127
 31191  01C47E                     __ptext127:
 31192                           	opt callstack 0
 31193  01C47E                     _SPI1_Initialize:
 31194                           	opt callstack 14
 31195                           
 31196                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 31197                           
 31198                           ; BSR set to: 57
 31199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31200                           ;incstack = 0
 31201  01C47E  0E40               	movlw	64
 31202  01C480  013D               	movlb	61	; () banked
 31203  01C482  6F15               	movwf	21,b	;volatile
 31204                           
 31205                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 31206  01C484  0E03               	movlw	3
 31207  01C486  6F16               	movwf	22,b	;volatile
 31208                           
 31209                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 31210  01C488  0E4F               	movlw	79
 31211  01C48A  6F19               	movwf	25,b	;volatile
 31212                           
 31213                           ; BSR set to: 61
 31214                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 31215  01C48C  6B1C               	clrf	28,b	;volatile
 31216                           
 31217                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 31218  01C48E  0E83               	movlw	131
 31219  01C490  6F14               	movwf	20,b	;volatile
 31220                           
 31221                           ; BSR set to: 61
 31222                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31223  01C492  0012               	return		;funcret
 31224  01C494                     __end_of_SPI1_Initialize:
 31225                           	opt callstack 0
 31226                           
 31227 ;; *************** function _PWM8_Initialize *****************
 31228 ;; Defined at:
 31229 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 31230 ;; Parameters:    Size  Location     Type
 31231 ;;		None
 31232 ;; Auto vars:     Size  Location     Type
 31233 ;;		None
 31234 ;; Return value:  Size  Location     Type
 31235 ;;                  1  [STACK] void 
 31236 ;; Registers used:
 31237 ;;		wreg, status,2
 31238 ;; Tracked objects:
 31239 ;;		On entry : 3F/39
 31240 ;;		On exit  : 3F/3F
 31241 ;;		Unchanged: 0/0
 31242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31247 ;;Total ram usage:        0 bytes
 31248 ;; Hardware stack levels used:    1
 31249 ;; Hardware stack levels required when called:   15
 31250 ;; This function calls:
 31251 ;;		Nothing
 31252 ;; This function is called by:
 31253 ;;		_SYSTEM_Initialize
 31254 ;; This function uses a reentrant model
 31255 ;;
 31256                           
 31257                           	psect	text128
 31258  01C494                     __ptext128:
 31259                           	opt callstack 0
 31260  01C494                     _PWM8_Initialize:
 31261                           	opt callstack 14
 31262                           
 31263                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 31264                           
 31265                           ; BSR set to: 61
 31266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31267                           ;incstack = 0
 31268  01C494  0E80               	movlw	128
 31269  01C496  6E62               	movwf	98,c	;volatile
 31270                           
 31271                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 31272  01C498  6A61               	clrf	97,c	;volatile
 31273                           
 31274                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 31275  01C49A  0E40               	movlw	64
 31276  01C49C  6E60               	movwf	96,c	;volatile
 31277                           
 31278                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 31279  01C49E  013F               	movlb	63	; () banked
 31280  01C4A0  515F               	movf	95,w,b	;volatile
 31281  01C4A2  0B3F               	andlw	-193
 31282  01C4A4  0940               	iorlw	64
 31283  01C4A6  6F5F               	movwf	95,b	;volatile
 31284                           
 31285                           ; BSR set to: 63
 31286                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31287  01C4A8  0012               	return		;funcret
 31288  01C4AA                     __end_of_PWM8_Initialize:
 31289                           	opt callstack 0
 31290                           
 31291 ;; *************** function _PMD_Initialize *****************
 31292 ;; Defined at:
 31293 ;;		line 90 in file "mcc_generated_files/mcc.c"
 31294 ;; Parameters:    Size  Location     Type
 31295 ;;		None
 31296 ;; Auto vars:     Size  Location     Type
 31297 ;;		None
 31298 ;; Return value:  Size  Location     Type
 31299 ;;                  1  [STACK] void 
 31300 ;; Registers used:
 31301 ;;		None
 31302 ;; Tracked objects:
 31303 ;;		On entry : 3F/39
 31304 ;;		On exit  : 3F/39
 31305 ;;		Unchanged: 0/0
 31306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31311 ;;Total ram usage:        0 bytes
 31312 ;; Hardware stack levels used:    1
 31313 ;; Hardware stack levels required when called:   15
 31314 ;; This function calls:
 31315 ;;		Nothing
 31316 ;; This function is called by:
 31317 ;;		_SYSTEM_Initialize
 31318 ;; This function uses a reentrant model
 31319 ;;
 31320                           
 31321                           	psect	text129
 31322  01C4C0                     __ptext129:
 31323                           	opt callstack 0
 31324  01C4C0                     _PMD_Initialize:
 31325                           	opt callstack 14
 31326                           
 31327                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 31328                           
 31329                           ; BSR set to: 63
 31330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31331                           ;incstack = 0
 31332  01C4C0  0139               	movlb	57	; () banked
 31333  01C4C2  6BC0               	clrf	192,b	;volatile
 31334                           
 31335                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 31336  01C4C4  6BC1               	clrf	193,b	;volatile
 31337                           
 31338                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 31339  01C4C6  6BC2               	clrf	194,b	;volatile
 31340                           
 31341                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 31342  01C4C8  6BC3               	clrf	195,b	;volatile
 31343                           
 31344                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 31345  01C4CA  6BC4               	clrf	196,b	;volatile
 31346                           
 31347                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 31348  01C4CC  6BC5               	clrf	197,b	;volatile
 31349                           
 31350                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 31351  01C4CE  6BC6               	clrf	198,b	;volatile
 31352                           
 31353                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 31354  01C4D0  6BC7               	clrf	199,b	;volatile
 31355                           
 31356                           ; BSR set to: 57
 31357                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31358  01C4D2  0012               	return		;funcret
 31359  01C4D4                     __end_of_PMD_Initialize:
 31360                           	opt callstack 0
 31361                           
 31362 ;; *************** function _PIN_MANAGER_Initialize *****************
 31363 ;; Defined at:
 31364 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 31365 ;; Parameters:    Size  Location     Type
 31366 ;;		None
 31367 ;; Auto vars:     Size  Location     Type
 31368 ;;		None
 31369 ;; Return value:  Size  Location     Type
 31370 ;;                  1  [STACK] void 
 31371 ;; Registers used:
 31372 ;;		wreg, status,2
 31373 ;; Tracked objects:
 31374 ;;		On entry : 3F/39
 31375 ;;		On exit  : 3F/3A
 31376 ;;		Unchanged: 0/0
 31377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31382 ;;Total ram usage:        0 bytes
 31383 ;; Hardware stack levels used:    1
 31384 ;; Hardware stack levels required when called:   15
 31385 ;; This function calls:
 31386 ;;		Nothing
 31387 ;; This function is called by:
 31388 ;;		_SYSTEM_Initialize
 31389 ;; This function uses a reentrant model
 31390 ;;
 31391                           
 31392                           	psect	text130
 31393  01AE6A                     __ptext130:
 31394                           	opt callstack 0
 31395  01AE6A                     _PIN_MANAGER_Initialize:
 31396                           	opt callstack 14
 31397                           
 31398                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 31399                           
 31400                           ; BSR set to: 57
 31401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31402                           ;incstack = 0
 31403  01AE6A  0E07               	movlw	7
 31404  01AE6C  6EBE               	movwf	190,c	;volatile
 31405                           
 31406                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 31407  01AE6E  6ABD               	clrf	189,c	;volatile
 31408                           
 31409                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 31410  01AE70  6ABA               	clrf	186,c	;volatile
 31411                           
 31412                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 31413  01AE72  0E23               	movlw	35
 31414  01AE74  6EBF               	movwf	191,c	;volatile
 31415                           
 31416                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 31417  01AE76  6ABB               	clrf	187,c	;volatile
 31418                           
 31419                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 31420  01AE78  0E07               	movlw	7
 31421  01AE7A  6EBC               	movwf	188,c	;volatile
 31422                           
 31423                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 31424  01AE7C  6AC6               	clrf	198,c	;volatile
 31425                           
 31426                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 31427  01AE7E  0E0C               	movlw	12
 31428  01AE80  6EC7               	movwf	199,c	;volatile
 31429                           
 31430                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 31431  01AE82  68C2               	setf	194,c	;volatile
 31432                           
 31433                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 31434  01AE84  0EBF               	movlw	191
 31435  01AE86  6EC3               	movwf	195,c	;volatile
 31436                           
 31437                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 31438  01AE88  0E90               	movlw	144
 31439  01AE8A  6EC4               	movwf	196,c	;volatile
 31440                           
 31441                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 31442  01AE8C  0E0C               	movlw	12
 31443  01AE8E  6EC5               	movwf	197,c	;volatile
 31444                           
 31445                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 31446  01AE90  013A               	movlb	58	; () banked
 31447  01AE92  6B70               	clrf	112,b	;volatile
 31448                           
 31449                           ; BSR set to: 58
 31450                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 31451  01AE94  6B60               	clrf	96,b	;volatile
 31452                           
 31453                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 31454  01AE96  0E3C               	movlw	60
 31455  01AE98  6F50               	movwf	80,b	;volatile
 31456                           
 31457                           ; BSR set to: 58
 31458                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 31459  01AE9A  6B80               	clrf	128,b	;volatile
 31460                           
 31461                           ; BSR set to: 58
 31462                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 31463  01AE9C  6B90               	clrf	144,b	;volatile
 31464                           
 31465                           ; BSR set to: 58
 31466                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 31467  01AE9E  6940               	setf	64,b	;volatile
 31468                           
 31469                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 31470  01AEA0  0E0C               	movlw	12
 31471  01AEA2  6F71               	movwf	113,b	;volatile
 31472                           
 31473                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 31474  01AEA4  0E0C               	movlw	12
 31475  01AEA6  6F91               	movwf	145,b	;volatile
 31476                           
 31477                           ; BSR set to: 58
 31478                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 31479  01AEA8  6B81               	clrf	129,b	;volatile
 31480                           
 31481                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 31482  01AEAA  0E83               	movlw	131
 31483  01AEAC  6F51               	movwf	81,b	;volatile
 31484                           
 31485                           ; BSR set to: 58
 31486                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 31487  01AEAE  6B41               	clrf	65,b	;volatile
 31488                           
 31489                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 31490  01AEB0  0E97               	movlw	151
 31491  01AEB2  6F61               	movwf	97,b	;volatile
 31492                           
 31493                           ; BSR set to: 58
 31494                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 31495  01AEB4  6B82               	clrf	130,b	;volatile
 31496                           
 31497                           ; BSR set to: 58
 31498                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 31499  01AEB6  6B92               	clrf	146,b	;volatile
 31500                           
 31501                           ; BSR set to: 58
 31502                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 31503  01AEB8  6B42               	clrf	66,b	;volatile
 31504                           
 31505                           ; BSR set to: 58
 31506                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 31507  01AEBA  6B52               	clrf	82,b	;volatile
 31508                           
 31509                           ; BSR set to: 58
 31510                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 31511  01AEBC  6B62               	clrf	98,b	;volatile
 31512                           
 31513                           ; BSR set to: 58
 31514                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 31515  01AEBE  6B72               	clrf	114,b	;volatile
 31516                           
 31517                           ; BSR set to: 58
 31518                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 31519  01AEC0  6943               	setf	67,b	;volatile
 31520                           
 31521                           ; BSR set to: 58
 31522                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 31523  01AEC2  6953               	setf	83,b	;volatile
 31524                           
 31525                           ; BSR set to: 58
 31526                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 31527  01AEC4  6963               	setf	99,b	;volatile
 31528                           
 31529                           ; BSR set to: 58
 31530                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 31531  01AEC6  6973               	setf	115,b	;volatile
 31532                           
 31533                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 31534  01AEC8  0E07               	movlw	7
 31535  01AECA  6F83               	movwf	131,b	;volatile
 31536                           
 31537                           ; BSR set to: 58
 31538                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 31539  01AECC  6993               	setf	147,b	;volatile
 31540                           
 31541                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 31542  01AECE  0E0F               	movlw	15
 31543  01AED0  6FE8               	movwf	232,b	;volatile
 31544                           
 31545                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 31546  01AED2  0E13               	movlw	19
 31547  01AED4  6FDE               	movwf	222,b	;volatile
 31548                           
 31549                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 31550  01AED6  0E16               	movlw	22
 31551  01AED8  6F0E               	movwf	14,b	;volatile
 31552                           
 31553                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 31554  01AEDA  0E1E               	movlw	30
 31555  01AEDC  6F13               	movwf	19,b	;volatile
 31556                           
 31557                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 31558  01AEDE  0E08               	movlw	8
 31559  01AEE0  6FC0               	movwf	192,b	;volatile
 31560                           
 31561                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 31562  01AEE2  0E10               	movlw	16
 31563  01AEE4  6F19               	movwf	25,b	;volatile
 31564                           
 31565                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 31566  01AEE6  0E09               	movlw	9
 31567  01AEE8  6FC1               	movwf	193,b	;volatile
 31568                           
 31569                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 31570  01AEEA  0E1F               	movlw	31
 31571  01AEEC  6F15               	movwf	21,b	;volatile
 31572                           
 31573                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 31574  01AEEE  0E13               	movlw	19
 31575  01AEF0  6F16               	movwf	22,b	;volatile
 31576                           
 31577                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 31578  01AEF2  0E17               	movlw	23
 31579  01AEF4  6FE5               	movwf	229,b	;volatile
 31580                           
 31581                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 31582  01AEF6  0E14               	movlw	20
 31583  01AEF8  6FDF               	movwf	223,b	;volatile
 31584                           
 31585                           ; BSR set to: 58
 31586                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 31587  01AEFA  0012               	return		;funcret
 31588  01AEFC                     __end_of_PIN_MANAGER_Initialize:
 31589                           	opt callstack 0
 31590                           
 31591 ;; *************** function _OSCILLATOR_Initialize *****************
 31592 ;; Defined at:
 31593 ;;		line 72 in file "mcc_generated_files/mcc.c"
 31594 ;; Parameters:    Size  Location     Type
 31595 ;;		None
 31596 ;; Auto vars:     Size  Location     Type
 31597 ;;		None
 31598 ;; Return value:  Size  Location     Type
 31599 ;;                  1  [STACK] void 
 31600 ;; Registers used:
 31601 ;;		wreg, status,2
 31602 ;; Tracked objects:
 31603 ;;		On entry : 3F/3A
 31604 ;;		On exit  : 3F/39
 31605 ;;		Unchanged: 0/0
 31606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31611 ;;Total ram usage:        0 bytes
 31612 ;; Hardware stack levels used:    1
 31613 ;; Hardware stack levels required when called:   15
 31614 ;; This function calls:
 31615 ;;		Nothing
 31616 ;; This function is called by:
 31617 ;;		_SYSTEM_Initialize
 31618 ;; This function uses a reentrant model
 31619 ;;
 31620                           
 31621                           	psect	text131
 31622  01C4AA                     __ptext131:
 31623                           	opt callstack 0
 31624  01C4AA                     _OSCILLATOR_Initialize:
 31625                           	opt callstack 14
 31626                           
 31627                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 31628                           
 31629                           ; BSR set to: 58
 31630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31631                           ;incstack = 0
 31632  01C4AA  0E20               	movlw	32
 31633  01C4AC  0139               	movlb	57	; () banked
 31634  01C4AE  6FD9               	movwf	217,b	;volatile
 31635                           
 31636                           ; BSR set to: 57
 31637                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 31638  01C4B0  6BDB               	clrf	219,b	;volatile
 31639                           
 31640                           ; BSR set to: 57
 31641                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 31642  01C4B2  6BDD               	clrf	221,b	;volatile
 31643                           
 31644                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 31645  01C4B4  0E02               	movlw	2
 31646  01C4B6  6FDF               	movwf	223,b	;volatile
 31647                           
 31648                           ; BSR set to: 57
 31649                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 31650  01C4B8  6BDE               	clrf	222,b	;volatile
 31651  01C4BA                     l169:
 31652                           
 31653                           ; BSR set to: 57
 31654                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 31655  01C4BA  B1DC               	btfsc	220,0,b	;volatile
 31656  01C4BC  0012               	return	
 31657  01C4BE  D7FD               	goto	l169
 31658  01C4C0                     __end_of_OSCILLATOR_Initialize:
 31659                           	opt callstack 0
 31660                           
 31661 ;; *************** function _INTERRUPT_Initialize *****************
 31662 ;; Defined at:
 31663 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31664 ;; Parameters:    Size  Location     Type
 31665 ;;		None
 31666 ;; Auto vars:     Size  Location     Type
 31667 ;;  state           1  [STACK] _Bool 
 31668 ;; Return value:  Size  Location     Type
 31669 ;;                  1  [STACK] void 
 31670 ;; Registers used:
 31671 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 31672 ;; Tracked objects:
 31673 ;;		On entry : 0/0
 31674 ;;		On exit  : 3F/39
 31675 ;;		Unchanged: 0/0
 31676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31681 ;;Total ram usage:        0 bytes
 31682 ;; Hardware stack levels used:    1
 31683 ;; Hardware stack levels required when called:   15
 31684 ;; This function calls:
 31685 ;;		Nothing
 31686 ;; This function is called by:
 31687 ;;		_SYSTEM_Initialize
 31688 ;; This function uses a reentrant model
 31689 ;;
 31690                           
 31691                           	psect	text132
 31692  01B3AE                     __ptext132:
 31693                           	opt callstack 0
 31694  01B3AE                     _INTERRUPT_Initialize:
 31695                           	opt callstack 0
 31696                           
 31697                           ; BSR set to: 57
 31698                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31699  01B3AE  52E6               	movf	postinc1,f,c
 31700                           
 31701                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31702                           
 31703                           ;incstack = 0
 31704  01B3B0  8AD2               	bsf	210,5,c	;volatile
 31705                           
 31706                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31707  01B3B2  AED2               	btfss	16338,7,c	;volatile
 31708  01B3B4  D003               	goto	u9490
 31709  01B3B6  6A0C               	clrf	(btemp+11)^0,c
 31710  01B3B8  2A0C               	incf	(btemp+11)^0,f,c
 31711  01B3BA  D001               	goto	u9508
 31712  01B3BC                     u9490:
 31713  01B3BC  6A0C               	clrf	(btemp+11)^0,c
 31714  01B3BE                     u9508:
 31715                           
 31716                           ;stkvar	_state @ sp[(-1)+0]
 31717  01B3BE  0EFF               	movlw	-1
 31718  01B3C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 31719                           
 31720                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31721  01B3C6  9ED2               	bcf	16338,7,c	;volatile
 31722                           
 31723                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31724  01B3C8  0E55               	movlw	85
 31725  01B3CA  6ED4               	movwf	212,c	;volatile
 31726                           
 31727                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31728  01B3CC  0EAA               	movlw	170
 31729  01B3CE  6ED4               	movwf	212,c	;volatile
 31730                           
 31731                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31732  01B3D0  90D4               	bcf	212,0,c	;volatile
 31733                           
 31734                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 31735  01B3D2  0138               	movlb	56	; () banked
 31736  01B3D4  6B9F               	clrf	159,b	;volatile
 31737                           
 31738                           ; BSR set to: 56
 31739                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 31740  01B3D6  6B9E               	clrf	158,b	;volatile
 31741                           
 31742                           ; BSR set to: 56
 31743                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 31744  01B3D8  0E08               	movlw	8
 31745  01B3DA  6F9D               	movwf	157,b	;volatile
 31746                           
 31747                           ; BSR set to: 56
 31748                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31749  01B3DC  0E55               	movlw	85
 31750  01B3DE  6ED4               	movwf	212,c	;volatile
 31751                           
 31752                           ; BSR set to: 56
 31753                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31754  01B3E0  0EAA               	movlw	170
 31755  01B3E2  6ED4               	movwf	212,c	;volatile
 31756                           
 31757                           ; BSR set to: 56
 31758                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31759  01B3E4  80D4               	bsf	212,0,c	;volatile
 31760                           
 31761                           ; BSR set to: 56
 31762                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31763                           ;stkvar	_state @ sp[(-1)+0]
 31764  01B3E6  0EFF               	movlw	-1
 31765  01B3E8  B0E3               	btfsc	plusw1,0,c
 31766  01B3EA  D002               	bra	u9515
 31767  01B3EC  9ED2               	bcf	16338,7,c	;volatile
 31768  01B3EE  D001               	bra	u9516
 31769  01B3F0                     u9515:
 31770  01B3F0  8ED2               	bsf	16338,7,c	;volatile
 31771  01B3F2                     u9516:
 31772                           
 31773                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 31774  01B3F2  0139               	movlb	57	; () banked
 31775  01B3F4  8782               	bsf	130,3,b	;volatile
 31776                           
 31777                           ; BSR set to: 57
 31778                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 31779  01B3F6  8382               	bsf	130,1,b	;volatile
 31780                           
 31781                           ; BSR set to: 57
 31782                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 31783  01B3F8  8182               	bsf	130,0,b	;volatile
 31784                           
 31785                           ; BSR set to: 57
 31786                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 31787  01B3FA  8582               	bsf	130,2,b	;volatile
 31788                           
 31789                           ; BSR set to: 57
 31790                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 31791  01B3FC  8786               	bsf	134,3,b	;volatile
 31792                           
 31793                           ; BSR set to: 57
 31794                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31795  01B3FE  8586               	bsf	134,2,b	;volatile
 31796                           
 31797                           ; BSR set to: 57
 31798                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31799  01B400  8783               	bsf	131,3,b	;volatile
 31800                           
 31801                           ; BSR set to: 57
 31802                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31803  01B402  8181               	bsf	129,0,b	;volatile
 31804                           
 31805                           ; BSR set to: 57
 31806                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31807  01B404  9185               	bcf	133,0,b	;volatile
 31808                           
 31809                           ; BSR set to: 57
 31810                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31811  01B406  8189               	bsf	137,0,b	;volatile
 31812                           
 31813                           ; BSR set to: 57
 31814                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31815  01B408  9D88               	bcf	136,6,b	;volatile
 31816                           
 31817                           ; BSR set to: 57
 31818                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 31819  01B40A  9D86               	bcf	134,6,b	;volatile
 31820                           
 31821                           ; BSR set to: 57
 31822                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 31823  01B40C  8581               	bsf	129,2,b	;volatile
 31824                           
 31825                           ; BSR set to: 57
 31826                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 31827  01B40E  8781               	bsf	129,3,b	;volatile
 31828                           
 31829                           ; BSR set to: 57
 31830                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31831  01B410  52E5               	movf	postdec1,f,c
 31832  01B412  0012               	return		;funcret
 31833  01B414                     __end_of_INTERRUPT_Initialize:
 31834                           	opt callstack 0
 31835                           
 31836 ;; *************** function _FVR_Initialize *****************
 31837 ;; Defined at:
 31838 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31839 ;; Parameters:    Size  Location     Type
 31840 ;;		None
 31841 ;; Auto vars:     Size  Location     Type
 31842 ;;		None
 31843 ;; Return value:  Size  Location     Type
 31844 ;;                  1  [STACK] void 
 31845 ;; Registers used:
 31846 ;;		wreg, status,2
 31847 ;; Tracked objects:
 31848 ;;		On entry : 3F/39
 31849 ;;		On exit  : 3F/3E
 31850 ;;		Unchanged: 0/0
 31851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31856 ;;Total ram usage:        0 bytes
 31857 ;; Hardware stack levels used:    1
 31858 ;; Hardware stack levels required when called:   15
 31859 ;; This function calls:
 31860 ;;		Nothing
 31861 ;; This function is called by:
 31862 ;;		_SYSTEM_Initialize
 31863 ;; This function uses a reentrant model
 31864 ;;
 31865                           
 31866                           	psect	text133
 31867  01C5C6                     __ptext133:
 31868                           	opt callstack 0
 31869  01C5C6                     _FVR_Initialize:
 31870                           	opt callstack 14
 31871                           
 31872                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31873                           
 31874                           ; BSR set to: 57
 31875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31876                           ;incstack = 0
 31877  01C5C6  0EAF               	movlw	175
 31878  01C5C8  013E               	movlb	62	; () banked
 31879  01C5CA  6FC1               	movwf	193,b	;volatile
 31880                           
 31881                           ; BSR set to: 62
 31882                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31883  01C5CC  0012               	return		;funcret
 31884  01C5CE                     __end_of_FVR_Initialize:
 31885                           	opt callstack 0
 31886                           
 31887 ;; *************** function _EXT_INT_Initialize *****************
 31888 ;; Defined at:
 31889 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31890 ;; Parameters:    Size  Location     Type
 31891 ;;		None
 31892 ;; Auto vars:     Size  Location     Type
 31893 ;;		None
 31894 ;; Return value:  Size  Location     Type
 31895 ;;                  1  [STACK] void 
 31896 ;; Registers used:
 31897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31898 ;; Tracked objects:
 31899 ;;		On entry : 3F/3F
 31900 ;;		On exit  : 3F/39
 31901 ;;		Unchanged: 0/0
 31902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31907 ;;Total ram usage:        0 bytes
 31908 ;; Hardware stack levels used:    1
 31909 ;; Hardware stack levels required when called:   16
 31910 ;; This function calls:
 31911 ;;		_INT0_SetInterruptHandler
 31912 ;;		_INT1_SetInterruptHandler
 31913 ;; This function is called by:
 31914 ;;		_SYSTEM_Initialize
 31915 ;; This function uses a reentrant model
 31916 ;;
 31917                           
 31918                           	psect	text134
 31919  01BDD8                     __ptext134:
 31920                           	opt callstack 0
 31921  01BDD8                     _EXT_INT_Initialize:
 31922                           	opt callstack 13
 31923                           
 31924                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31925                           
 31926                           ; BSR set to: 62
 31927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31928                           ;incstack = 0
 31929  01BDD8  0139               	movlb	57	; () banked
 31930  01BDDA  91A1               	bcf	161,0,b	;volatile
 31931                           
 31932                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31933  01BDDC  90D2               	bcf	210,0,c	;volatile
 31934                           
 31935                           ; BSR set to: 57
 31936                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31937  01BDDE  0EF2               	movlw	low _INT0_DefaultInterruptHandler
 31938  01BDE0  6EE6               	movwf	postinc1,c
 31939  01BDE2  0EC5               	movlw	high _INT0_DefaultInterruptHandler
 31940  01BDE4  6EE6               	movwf	postinc1,c
 31941  01BDE6  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31942  01BDE8  6EE6               	movwf	postinc1,c
 31943  01BDEA  EC89  F0E0         	call	_INT0_SetInterruptHandler	;wreg free
 31944                           
 31945                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31946  01BDEE  0139               	movlb	57	; () banked
 31947  01BDF0  8191               	bsf	145,0,b	;volatile
 31948                           
 31949                           ; BSR set to: 57
 31950                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31951  01BDF2  91A5               	bcf	165,0,b	;volatile
 31952                           
 31953                           ; BSR set to: 57
 31954                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31955  01BDF4  92D2               	bcf	210,1,c	;volatile
 31956                           
 31957                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31958  01BDF6  0EEE               	movlw	low _INT1_DefaultInterruptHandler
 31959  01BDF8  6EE6               	movwf	postinc1,c
 31960  01BDFA  0EC5               	movlw	high _INT1_DefaultInterruptHandler
 31961  01BDFC  6EE6               	movwf	postinc1,c
 31962  01BDFE  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31963  01BE00  6EE6               	movwf	postinc1,c
 31964  01BE02  EC75  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
 31965                           
 31966                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31967  01BE06  0139               	movlb	57	; () banked
 31968  01BE08  8195               	bsf	149,0,b	;volatile
 31969                           
 31970                           ; BSR set to: 57
 31971                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31972  01BE0A  0012               	return		;funcret
 31973  01BE0C                     __end_of_EXT_INT_Initialize:
 31974                           	opt callstack 0
 31975                           
 31976 ;; *************** function _INT1_SetInterruptHandler *****************
 31977 ;; Defined at:
 31978 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31979 ;; Parameters:    Size  Location     Type
 31980 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31981 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31982 ;; Auto vars:     Size  Location     Type
 31983 ;;		None
 31984 ;; Return value:  Size  Location     Type
 31985 ;;                  1  [STACK] void 
 31986 ;; Registers used:
 31987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31988 ;; Tracked objects:
 31989 ;;		On entry : 3F/39
 31990 ;;		On exit  : 0/0
 31991 ;;		Unchanged: 0/0
 31992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31997 ;;Total ram usage:        0 bytes
 31998 ;; Hardware stack levels used:    1
 31999 ;; Hardware stack levels required when called:   15
 32000 ;; This function calls:
 32001 ;;		Nothing
 32002 ;; This function is called by:
 32003 ;;		_EXT_INT_Initialize
 32004 ;;		_start_switch_handler
 32005 ;; This function uses a reentrant model
 32006 ;;
 32007                           
 32008                           	psect	text135
 32009  01C0EA                     __ptext135:
 32010                           	opt callstack 0
 32011  01C0EA                     _INT1_SetInterruptHandler:
 32012                           	opt callstack 14
 32013                           
 32014                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 32015                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32016                           
 32017                           ; BSR set to: 57
 32018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32019                           ;incstack = 0
 32020  01C0EA  50E1               	movf	fsr1l,w,c
 32021  01C0EC  0FFD               	addlw	-3
 32022  01C0EE  6ED9               	movwf	fsr2l,c
 32023  01C0F0  50E2               	movf	fsr1h,w,c
 32024  01C0F2  6EDA               	movwf	fsr2h,c
 32025  01C0F4  0EFF               	movlw	255
 32026  01C0F6  22DA               	addwfc	fsr2h,f,c
 32027  01C0F8  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 32028  01C0FE  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 32029  01C104  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 32030                           
 32031                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32032  01C10A  52E5               	movf	postdec1,f,c
 32033  01C10C  52E5               	movf	postdec1,f,c
 32034  01C10E  52E5               	movf	postdec1,f,c
 32035  01C110  0012               	return		;funcret
 32036  01C112                     __end_of_INT1_SetInterruptHandler:
 32037                           	opt callstack 0
 32038                           
 32039 ;; *************** function _INT0_SetInterruptHandler *****************
 32040 ;; Defined at:
 32041 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 32042 ;; Parameters:    Size  Location     Type
 32043 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32044 ;;		 -> INT0_DefaultInterruptHandler(1), 
 32045 ;; Auto vars:     Size  Location     Type
 32046 ;;		None
 32047 ;; Return value:  Size  Location     Type
 32048 ;;                  1  [STACK] void 
 32049 ;; Registers used:
 32050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32051 ;; Tracked objects:
 32052 ;;		On entry : 3F/39
 32053 ;;		On exit  : 0/0
 32054 ;;		Unchanged: 0/0
 32055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32060 ;;Total ram usage:        0 bytes
 32061 ;; Hardware stack levels used:    1
 32062 ;; Hardware stack levels required when called:   15
 32063 ;; This function calls:
 32064 ;;		Nothing
 32065 ;; This function is called by:
 32066 ;;		_EXT_INT_Initialize
 32067 ;; This function uses a reentrant model
 32068 ;;
 32069                           
 32070                           	psect	text136
 32071  01C112                     __ptext136:
 32072                           	opt callstack 0
 32073  01C112                     _INT0_SetInterruptHandler:
 32074                           	opt callstack 13
 32075                           
 32076                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 32077                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32078                           
 32079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32080                           ;incstack = 0
 32081  01C112  50E1               	movf	fsr1l,w,c
 32082  01C114  0FFD               	addlw	-3
 32083  01C116  6ED9               	movwf	fsr2l,c
 32084  01C118  50E2               	movf	fsr1h,w,c
 32085  01C11A  6EDA               	movwf	fsr2h,c
 32086  01C11C  0EFF               	movlw	255
 32087  01C11E  22DA               	addwfc	fsr2h,f,c
 32088  01C120  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 32089  01C126  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 32090  01C12C  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 32091                           
 32092                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32093  01C132  52E5               	movf	postdec1,f,c
 32094  01C134  52E5               	movf	postdec1,f,c
 32095  01C136  52E5               	movf	postdec1,f,c
 32096  01C138  0012               	return		;funcret
 32097  01C13A                     __end_of_INT0_SetInterruptHandler:
 32098                           	opt callstack 0
 32099                           
 32100 ;; *************** function _DMA2_Initialize *****************
 32101 ;; Defined at:
 32102 ;;		line 61 in file "mcc_generated_files/dma2.c"
 32103 ;; Parameters:    Size  Location     Type
 32104 ;;		None
 32105 ;; Auto vars:     Size  Location     Type
 32106 ;;		None
 32107 ;; Return value:  Size  Location     Type
 32108 ;;                  1  [STACK] void 
 32109 ;; Registers used:
 32110 ;;		wreg, status,2
 32111 ;; Tracked objects:
 32112 ;;		On entry : 3F/3D
 32113 ;;		On exit  : 3F/3B
 32114 ;;		Unchanged: 0/0
 32115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32120 ;;Total ram usage:        0 bytes
 32121 ;; Hardware stack levels used:    1
 32122 ;; Hardware stack levels required when called:   15
 32123 ;; This function calls:
 32124 ;;		Nothing
 32125 ;; This function is called by:
 32126 ;;		_SYSTEM_Initialize
 32127 ;; This function uses a reentrant model
 32128 ;;
 32129                           
 32130                           	psect	text137
 32131  01B650                     __ptext137:
 32132                           	opt callstack 0
 32133  01B650                     _DMA2_Initialize:
 32134                           	opt callstack 14
 32135                           
 32136                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 32137                           
 32138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32139                           ;incstack = 0
 32140  01B650  0E00               	movlw	0
 32141  01B652  013B               	movlb	59	; () banked
 32142  01B654  6FD9               	movwf	217,b	;volatile
 32143  01B656  0E10               	movlw	16
 32144  01B658  6FDA               	movwf	218,b	;volatile
 32145  01B65A  0E00               	movlw	0
 32146  01B65C  6FDB               	movwf	219,b	;volatile
 32147                           
 32148                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 32149  01B65E  0E3F               	movlw	63
 32150  01B660  6FD1               	movwf	209,b	;volatile
 32151  01B662  0EBB               	movlw	187
 32152  01B664  6FD0               	movwf	208,b	;volatile
 32153                           
 32154                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 32155  01B666  0E03               	movlw	3
 32156  01B668  6FDD               	movwf	221,b	;volatile
 32157                           
 32158                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 32159  01B66A  0E00               	movlw	0
 32160  01B66C  6FD8               	movwf	216,b	;volatile
 32161  01B66E  0E01               	movlw	1
 32162  01B670  6FD7               	movwf	215,b	;volatile
 32163                           
 32164                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 32165  01B672  0E00               	movlw	0
 32166  01B674  6FCF               	movwf	207,b	;volatile
 32167  01B676  0E01               	movlw	1
 32168  01B678  6FCE               	movwf	206,b	;volatile
 32169                           
 32170                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 32171  01B67A  0E1C               	movlw	28
 32172  01B67C  6FDF               	movwf	223,b	;volatile
 32173                           
 32174                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 32175  01B67E  0E3D               	movlw	61
 32176  01B680  6FDE               	movwf	222,b	;volatile
 32177                           
 32178                           ; BSR set to: 59
 32179                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 32180  01B682  0139               	movlb	57	; () banked
 32181  01B684  97A5               	bcf	165,3,b	;volatile
 32182                           
 32183                           ; BSR set to: 57
 32184                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 32185  01B686  95A5               	bcf	165,2,b	;volatile
 32186                           
 32187                           ; BSR set to: 57
 32188                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 32189  01B688  9BA5               	bcf	165,5,b	;volatile
 32190                           
 32191                           ; BSR set to: 57
 32192                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 32193  01B68A  99A5               	bcf	165,4,b	;volatile
 32194                           
 32195                           ; BSR set to: 57
 32196                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 32197  01B68C  9795               	bcf	149,3,b	;volatile
 32198                           
 32199                           ; BSR set to: 57
 32200                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 32201  01B68E  9595               	bcf	149,2,b	;volatile
 32202                           
 32203                           ; BSR set to: 57
 32204                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 32205  01B690  9B95               	bcf	149,5,b	;volatile
 32206                           
 32207                           ; BSR set to: 57
 32208                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 32209  01B692  9995               	bcf	149,4,b	;volatile
 32210  01B694  9ED2               	bcf	16338,7,c	;# 
 32211  01B696  0139               	banksel	14831	;# 
 32212  01B698  0E55               	movlw	85	;# 
 32213  01B69A  6FEF               	movwf	14831,b	;# 
 32214  01B69C  0EAA               	movlw	170	;# 
 32215  01B69E  6FEF               	movwf	14831,b	;# 
 32216  01B6A0  81EF               	bsf	14831,0,b	;# 
 32217  01B6A2  8ED2               	bsf	16338,7,c	;# 
 32218                           
 32219                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 32220  01B6A4  013B               	movlb	59	; () banked
 32221  01B6A6  6BDC               	clrf	220,b	;volatile
 32222                           
 32223                           ; BSR set to: 59
 32224                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32225  01B6A8  0012               	return		;funcret
 32226  01B6AA                     __end_of_DMA2_Initialize:
 32227                           	opt callstack 0
 32228                           
 32229 ;; *************** function _DMA1_Initialize *****************
 32230 ;; Defined at:
 32231 ;;		line 86 in file "mcc_generated_files/dma1.c"
 32232 ;; Parameters:    Size  Location     Type
 32233 ;;		None
 32234 ;; Auto vars:     Size  Location     Type
 32235 ;;		None
 32236 ;; Return value:  Size  Location     Type
 32237 ;;                  1  [STACK] void 
 32238 ;; Registers used:
 32239 ;;		wreg, status,2
 32240 ;; Tracked objects:
 32241 ;;		On entry : 3F/3B
 32242 ;;		On exit  : 3F/3B
 32243 ;;		Unchanged: 0/0
 32244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32249 ;;Total ram usage:        0 bytes
 32250 ;; Hardware stack levels used:    1
 32251 ;; Hardware stack levels required when called:   15
 32252 ;; This function calls:
 32253 ;;		Nothing
 32254 ;; This function is called by:
 32255 ;;		_SYSTEM_Initialize
 32256 ;; This function uses a reentrant model
 32257 ;;
 32258                           
 32259                           	psect	text138
 32260  01B26E                     __ptext138:
 32261                           	opt callstack 0
 32262  01B26E                     _DMA1_Initialize:
 32263                           	opt callstack 14
 32264                           
 32265                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 32266                           
 32267                           ; BSR set to: 59
 32268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32269                           ;incstack = 0
 32270  01B26E  0E00               	movlw	0
 32271  01B270  013B               	movlb	59	; () banked
 32272  01B272  6FF9               	movwf	249,b	;volatile
 32273  01B274  0E10               	movlw	16
 32274  01B276  6FFA               	movwf	250,b	;volatile
 32275  01B278  0E00               	movlw	0
 32276  01B27A  6FFB               	movwf	251,b	;volatile
 32277                           
 32278                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 32279  01B27C  0E3D               	movlw	61
 32280  01B27E  6FF1               	movwf	241,b	;volatile
 32281  01B280  0E11               	movlw	17
 32282  01B282  6FF0               	movwf	240,b	;volatile
 32283                           
 32284                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 32285  01B284  0E03               	movlw	3
 32286  01B286  6FFD               	movwf	253,b	;volatile
 32287                           
 32288                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 32289  01B288  0E00               	movlw	0
 32290  01B28A  6FF8               	movwf	248,b	;volatile
 32291  01B28C  0E01               	movlw	1
 32292  01B28E  6FF7               	movwf	247,b	;volatile
 32293                           
 32294                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 32295  01B290  0E00               	movlw	0
 32296  01B292  6FEF               	movwf	239,b	;volatile
 32297  01B294  0E01               	movlw	1
 32298  01B296  6FEE               	movwf	238,b	;volatile
 32299                           
 32300                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 32301  01B298  0E15               	movlw	21
 32302  01B29A  6FFF               	movwf	255,b	;volatile
 32303                           
 32304                           ; BSR set to: 59
 32305                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 32306  01B29C  6BFE               	clrf	254,b	;volatile
 32307                           
 32308                           ; BSR set to: 59
 32309                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 32310  01B29E  0139               	movlb	57	; () banked
 32311  01B2A0  93A2               	bcf	162,1,b	;volatile
 32312                           
 32313                           ; BSR set to: 57
 32314                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 32315  01B2A2  91A2               	bcf	162,0,b	;volatile
 32316                           
 32317                           ; BSR set to: 57
 32318                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 32319  01B2A4  97A2               	bcf	162,3,b	;volatile
 32320                           
 32321                           ; BSR set to: 57
 32322                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 32323  01B2A6  95A2               	bcf	162,2,b	;volatile
 32324                           
 32325                           ; BSR set to: 57
 32326                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 32327  01B2A8  8392               	bsf	146,1,b	;volatile
 32328                           
 32329                           ; BSR set to: 57
 32330                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 32331  01B2AA  8192               	bsf	146,0,b	;volatile
 32332                           
 32333                           ; BSR set to: 57
 32334                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 32335  01B2AC  8792               	bsf	146,3,b	;volatile
 32336                           
 32337                           ; BSR set to: 57
 32338                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 32339  01B2AE  8592               	bsf	146,2,b	;volatile
 32340                           
 32341                           ; BSR set to: 57
 32342                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 32343  01B2B0  6BF1               	clrf	241,b	;volatile
 32344                           
 32345                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 32346  01B2B2  0E01               	movlw	1
 32347  01B2B4  6FF2               	movwf	242,b	;volatile
 32348                           
 32349                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 32350  01B2B6  0E04               	movlw	4
 32351  01B2B8  6FF3               	movwf	243,b	;volatile
 32352                           
 32353                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 32354  01B2BA  0E02               	movlw	2
 32355  01B2BC  6FF4               	movwf	244,b	;volatile
 32356                           
 32357                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 32358  01B2BE  0E03               	movlw	3
 32359  01B2C0  6FF7               	movwf	247,b	;volatile
 32360  01B2C2  9ED2               	bcf	16338,7,c	;# 
 32361  01B2C4  0139               	banksel	14831	;# 
 32362  01B2C6  0E55               	movlw	85	;# 
 32363  01B2C8  6FEF               	movwf	14831,b	;# 
 32364  01B2CA  0EAA               	movlw	170	;# 
 32365  01B2CC  6FEF               	movwf	14831,b	;# 
 32366  01B2CE  81EF               	bsf	14831,0,b	;# 
 32367  01B2D0  8ED2               	bsf	16338,7,c	;# 
 32368                           
 32369                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 32370  01B2D2  013B               	movlb	59	; () banked
 32371  01B2D4  6BFC               	clrf	252,b	;volatile
 32372                           
 32373                           ; BSR set to: 59
 32374                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32375  01B2D6  0012               	return		;funcret
 32376  01B2D8                     __end_of_DMA1_Initialize:
 32377                           	opt callstack 0
 32378                           
 32379 ;; *************** function _CLKREF_Initialize *****************
 32380 ;; Defined at:
 32381 ;;		line 58 in file "mcc_generated_files/clkref.c"
 32382 ;; Parameters:    Size  Location     Type
 32383 ;;		None
 32384 ;; Auto vars:     Size  Location     Type
 32385 ;;		None
 32386 ;; Return value:  Size  Location     Type
 32387 ;;                  1  [STACK] void 
 32388 ;; Registers used:
 32389 ;;		wreg, status,2
 32390 ;; Tracked objects:
 32391 ;;		On entry : 3F/3B
 32392 ;;		On exit  : 3F/3C
 32393 ;;		Unchanged: 0/0
 32394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32399 ;;Total ram usage:        0 bytes
 32400 ;; Hardware stack levels used:    1
 32401 ;; Hardware stack levels required when called:   15
 32402 ;; This function calls:
 32403 ;;		Nothing
 32404 ;; This function is called by:
 32405 ;;		_SYSTEM_Initialize
 32406 ;; This function uses a reentrant model
 32407 ;;
 32408                           
 32409                           	psect	text139
 32410  01C56E                     __ptext139:
 32411                           	opt callstack 0
 32412  01C56E                     _CLKREF_Initialize:
 32413                           	opt callstack 14
 32414                           
 32415                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 32416                           
 32417                           ; BSR set to: 59
 32418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32419                           ;incstack = 0
 32420  01C56E  013C               	movlb	60	; () banked
 32421  01C570  6BE6               	clrf	230,b	;volatile
 32422                           
 32423                           ; BSR set to: 60
 32424                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 32425  01C572  0E94               	movlw	148
 32426  01C574  6FE5               	movwf	229,b	;volatile
 32427                           
 32428                           ; BSR set to: 60
 32429                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32430  01C576  0012               	return		;funcret
 32431  01C578                     __end_of_CLKREF_Initialize:
 32432                           	opt callstack 0
 32433                           
 32434 ;; *************** function _ADCC_Initialize *****************
 32435 ;; Defined at:
 32436 ;;		line 65 in file "mcc_generated_files/adcc.c"
 32437 ;; Parameters:    Size  Location     Type
 32438 ;;		None
 32439 ;; Auto vars:     Size  Location     Type
 32440 ;;		None
 32441 ;; Return value:  Size  Location     Type
 32442 ;;                  1  [STACK] void 
 32443 ;; Registers used:
 32444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32445 ;; Tracked objects:
 32446 ;;		On entry : 3F/3E
 32447 ;;		On exit  : 0/0
 32448 ;;		Unchanged: 0/0
 32449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32454 ;;Total ram usage:        0 bytes
 32455 ;; Hardware stack levels used:    1
 32456 ;; Hardware stack levels required when called:   16
 32457 ;; This function calls:
 32458 ;;		_ADCC_SetADIInterruptHandler
 32459 ;;		_ADCC_SetADTIInterruptHandler
 32460 ;; This function is called by:
 32461 ;;		_SYSTEM_Initialize
 32462 ;; This function uses a reentrant model
 32463 ;;
 32464                           
 32465                           	psect	text140
 32466  01B2D8                     __ptext140:
 32467                           	opt callstack 0
 32468  01B2D8                     _ADCC_Initialize:
 32469                           	opt callstack 13
 32470                           
 32471                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 32472                           
 32473                           ; BSR set to: 60
 32474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32475                           ;incstack = 0
 32476  01B2D8  013E               	movlb	62	; () banked
 32477  01B2DA  6BDE               	clrf	222,b	;volatile
 32478                           
 32479                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 32480  01B2DC  6BDF               	clrf	223,b	;volatile
 32481                           
 32482                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 32483  01B2DE  6BE0               	clrf	224,b	;volatile
 32484                           
 32485                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 32486  01B2E0  6BE1               	clrf	225,b	;volatile
 32487                           
 32488                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 32489  01B2E2  6BE4               	clrf	228,b	;volatile
 32490                           
 32491                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 32492  01B2E4  6BE5               	clrf	229,b	;volatile
 32493                           
 32494                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 32495  01B2E6  6BEA               	clrf	234,b	;volatile
 32496                           
 32497                           ; BSR set to: 62
 32498                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 32499  01B2E8  0E40               	movlw	64
 32500  01B2EA  6FEC               	movwf	236,b	;volatile
 32501                           
 32502                           ; BSR set to: 62
 32503                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 32504  01B2EC  6BF1               	clrf	241,b	;volatile
 32505                           
 32506                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 32507  01B2EE  0E20               	movlw	32
 32508  01B2F0  6FF3               	movwf	243,b	;volatile
 32509                           
 32510                           ; BSR set to: 62
 32511                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 32512  01B2F2  6BF4               	clrf	244,b	;volatile
 32513                           
 32514                           ; BSR set to: 62
 32515                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 32516  01B2F4  6BF5               	clrf	245,b	;volatile
 32517                           
 32518                           ; BSR set to: 62
 32519                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 32520  01B2F6  6BF6               	clrf	246,b	;volatile
 32521                           
 32522                           ; BSR set to: 62
 32523                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 32524  01B2F8  6BF7               	clrf	247,b	;volatile
 32525                           
 32526                           ; BSR set to: 62
 32527                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 32528  01B2FA  6BF9               	clrf	249,b	;volatile
 32529                           
 32530                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 32531  01B2FC  0E5B               	movlw	91
 32532  01B2FE  6FFA               	movwf	250,b	;volatile
 32533                           
 32534                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 32535  01B300  0E27               	movlw	39
 32536  01B302  6FFB               	movwf	251,b	;volatile
 32537                           
 32538                           ; BSR set to: 62
 32539                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 32540  01B304  6BFC               	clrf	252,b	;volatile
 32541                           
 32542                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 32543  01B306  0E02               	movlw	2
 32544  01B308  6FFD               	movwf	253,b	;volatile
 32545                           
 32546                           ; BSR set to: 62
 32547                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 32548  01B30A  6BFE               	clrf	254,b	;volatile
 32549                           
 32550                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 32551  01B30C  0E07               	movlw	7
 32552  01B30E  6FFF               	movwf	255,b	;volatile
 32553                           
 32554                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 32555  01B310  0E84               	movlw	132
 32556  01B312  6FF8               	movwf	248,b	;volatile
 32557                           
 32558                           ; BSR set to: 62
 32559                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 32560  01B314  0139               	movlb	57	; () banked
 32561  01B316  95A1               	bcf	161,2,b	;volatile
 32562                           
 32563                           ; BSR set to: 57
 32564                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 32565  01B318  8591               	bsf	145,2,b	;volatile
 32566                           
 32567                           ; BSR set to: 57
 32568                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 32569  01B31A  0EF4               	movlw	low _ADCC_DefaultInterruptHandler
 32570  01B31C  6EE6               	movwf	postinc1,c
 32571  01B31E  0EC5               	movlw	high _ADCC_DefaultInterruptHandler
 32572  01B320  6EE6               	movwf	postinc1,c
 32573  01B322  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32574  01B324  6EE6               	movwf	postinc1,c
 32575  01B326  ECB1  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 32576                           
 32577                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 32578  01B32A  0139               	movlb	57	; () banked
 32579  01B32C  97A1               	bcf	161,3,b	;volatile
 32580                           
 32581                           ; BSR set to: 57
 32582                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 32583  01B32E  8791               	bsf	145,3,b	;volatile
 32584                           
 32585                           ; BSR set to: 57
 32586                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 32587  01B330  0EF4               	movlw	low _ADCC_DefaultInterruptHandler
 32588  01B332  6EE6               	movwf	postinc1,c
 32589  01B334  0EC5               	movlw	high _ADCC_DefaultInterruptHandler
 32590  01B336  6EE6               	movwf	postinc1,c
 32591  01B338  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32592  01B33A  6EE6               	movwf	postinc1,c
 32593  01B33C  EC9D  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 32594                           
 32595                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32596  01B340  0012               	return		;funcret
 32597  01B342                     __end_of_ADCC_Initialize:
 32598                           	opt callstack 0
 32599                           
 32600 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 32601 ;; Defined at:
 32602 ;;		line 336 in file "mcc_generated_files/adcc.c"
 32603 ;; Parameters:    Size  Location     Type
 32604 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32605 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 32606 ;; Auto vars:     Size  Location     Type
 32607 ;;		None
 32608 ;; Return value:  Size  Location     Type
 32609 ;;                  1  [STACK] void 
 32610 ;; Registers used:
 32611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32612 ;; Tracked objects:
 32613 ;;		On entry : 0/0
 32614 ;;		On exit  : 0/0
 32615 ;;		Unchanged: 0/0
 32616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32621 ;;Total ram usage:        0 bytes
 32622 ;; Hardware stack levels used:    1
 32623 ;; Hardware stack levels required when called:   15
 32624 ;; This function calls:
 32625 ;;		Nothing
 32626 ;; This function is called by:
 32627 ;;		_ADCC_Initialize
 32628 ;;		_start_adc_scan
 32629 ;; This function uses a reentrant model
 32630 ;;
 32631                           
 32632                           	psect	text141
 32633  01C13A                     __ptext141:
 32634                           	opt callstack 0
 32635  01C13A                     _ADCC_SetADTIInterruptHandler:
 32636                           	opt callstack 14
 32637                           
 32638                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 32639                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32640                           
 32641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32642                           ;incstack = 0
 32643  01C13A  50E1               	movf	fsr1l,w,c
 32644  01C13C  0FFD               	addlw	-3
 32645  01C13E  6ED9               	movwf	fsr2l,c
 32646  01C140  50E2               	movf	fsr1h,w,c
 32647  01C142  6EDA               	movwf	fsr2h,c
 32648  01C144  0EFF               	movlw	255
 32649  01C146  22DA               	addwfc	fsr2h,f,c
 32650  01C148  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 32651  01C14E  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 32652  01C154  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 32653                           
 32654                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 32655  01C15A  52E5               	movf	postdec1,f,c
 32656  01C15C  52E5               	movf	postdec1,f,c
 32657  01C15E  52E5               	movf	postdec1,f,c
 32658  01C160  0012               	return		;funcret
 32659  01C162                     __end_of_ADCC_SetADTIInterruptHandler:
 32660                           	opt callstack 0
 32661                           
 32662 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 32663 ;; Defined at:
 32664 ;;		line 323 in file "mcc_generated_files/adcc.c"
 32665 ;; Parameters:    Size  Location     Type
 32666 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32667 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 32668 ;; Auto vars:     Size  Location     Type
 32669 ;;		None
 32670 ;; Return value:  Size  Location     Type
 32671 ;;                  1  [STACK] void 
 32672 ;; Registers used:
 32673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32674 ;; Tracked objects:
 32675 ;;		On entry : 6/0
 32676 ;;		On exit  : 0/0
 32677 ;;		Unchanged: 0/0
 32678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32683 ;;Total ram usage:        0 bytes
 32684 ;; Hardware stack levels used:    1
 32685 ;; Hardware stack levels required when called:   15
 32686 ;; This function calls:
 32687 ;;		Nothing
 32688 ;; This function is called by:
 32689 ;;		_ADCC_Initialize
 32690 ;;		_start_adc_scan
 32691 ;; This function uses a reentrant model
 32692 ;;
 32693                           
 32694                           	psect	text142
 32695  01C162                     __ptext142:
 32696                           	opt callstack 0
 32697  01C162                     _ADCC_SetADIInterruptHandler:
 32698                           	opt callstack 14
 32699                           
 32700                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 32701                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32702                           
 32703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32704                           ;incstack = 0
 32705  01C162  50E1               	movf	fsr1l,w,c
 32706  01C164  0FFD               	addlw	-3
 32707  01C166  6ED9               	movwf	fsr2l,c
 32708  01C168  50E2               	movf	fsr1h,w,c
 32709  01C16A  6EDA               	movwf	fsr2h,c
 32710  01C16C  0EFF               	movlw	255
 32711  01C16E  22DA               	addwfc	fsr2h,f,c
 32712  01C170  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 32713  01C176  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 32714  01C17C  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 32715                           
 32716                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32717  01C182  52E5               	movf	postdec1,f,c
 32718  01C184  52E5               	movf	postdec1,f,c
 32719  01C186  52E5               	movf	postdec1,f,c
 32720  01C188  0012               	return		;funcret
 32721  01C18A                     __end_of_ADCC_SetADIInterruptHandler:
 32722                           	opt callstack 0
 32723                           
 32724 ;; *************** function _INT1_ISR *****************
 32725 ;; Defined at:
 32726 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 32727 ;; Parameters:    Size  Location     Type
 32728 ;;		None
 32729 ;; Auto vars:     Size  Location     Type
 32730 ;;		None
 32731 ;; Return value:  Size  Location     Type
 32732 ;;                  1    wreg      void 
 32733 ;; Registers used:
 32734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32735 ;; Tracked objects:
 32736 ;;		On entry : 0/0
 32737 ;;		On exit  : 0/0
 32738 ;;		Unchanged: 0/0
 32739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32744 ;;Total ram usage:        4 bytes
 32745 ;; Hardware stack levels used:    1
 32746 ;; Hardware stack levels required when called:    5
 32747 ;; This function calls:
 32748 ;;		_INT1_CallBack
 32749 ;; This function is called by:
 32750 ;;		Interrupt level 1
 32751 ;; This function uses a non-reentrant model
 32752 ;;
 32753                           
 32754                           	psect	text143
 32755  01BBE8                     __ptext143:
 32756                           	opt callstack 0
 32757  01BBE8                     _INT1_ISR:
 32758                           	opt callstack 11
 32759                           
 32760                           ;incstack = 0
 32761  01BBE8  006F FF60  F027    	movff	status,??_INT1_ISR
 32762  01BBEE  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 32763  01BBF4  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 32764  01BBFA  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 32765  01BC00  EE16  F0AF         	lfsr	1,___intlo_sp
 32766                           
 32767                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 32768  01BC04  0139               	movlb	57	; () banked
 32769  01BC06  91A5               	bcf	165,0,b	;volatile
 32770                           
 32771                           ; BSR set to: 57
 32772                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 32773  01BC08  EC14  F0E1         	call	_INT1_CallBack	;wreg free
 32774  01BC0C  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 32775  01BC12  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 32776  01BC18  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 32777  01BC1E  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 32778  01BC24  0011               	retfie		f
 32779  01BC26                     __end_of_INT1_ISR:
 32780                           	opt callstack 0
 32781                           
 32782 ;; *************** function _INT1_CallBack *****************
 32783 ;; Defined at:
 32784 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 32785 ;; Parameters:    Size  Location     Type
 32786 ;;		None
 32787 ;; Auto vars:     Size  Location     Type
 32788 ;;		None
 32789 ;; Return value:  Size  Location     Type
 32790 ;;                  1  [STACK] void 
 32791 ;; Registers used:
 32792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32793 ;; Tracked objects:
 32794 ;;		On entry : 3F/39
 32795 ;;		On exit  : 0/0
 32796 ;;		Unchanged: 0/0
 32797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32802 ;;Total ram usage:        0 bytes
 32803 ;; Hardware stack levels used:    1
 32804 ;; Hardware stack levels required when called:    4
 32805 ;; This function calls:
 32806 ;;		Absolute function
 32807 ;;		_INT1_DefaultInterruptHandler
 32808 ;;		_switch_handler
 32809 ;; This function is called by:
 32810 ;;		_INT1_ISR
 32811 ;; This function uses a reentrant model
 32812 ;;
 32813                           
 32814                           	psect	text144
 32815  01C228                     __ptext144:
 32816                           	opt callstack 0
 32817  01C228                     _INT1_CallBack:
 32818                           	opt callstack 11
 32819                           
 32820                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32821                           
 32822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32823                           ;incstack = 0
 32824  01C228  0100               	movlb	0	; () banked
 32825  01C22A  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32826  01C22C  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32827  01C22E  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32828  01C230  B4D8               	btfsc	status,2,c
 32829  01C232  0012               	return	
 32830                           
 32831                           ; BSR set to: 0
 32832                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32833  01C234  D801               	call	u1008_28
 32834  01C236  0012               	return	
 32835  01C238                     u1008_28:
 32836  01C238  0005               	push	
 32837  01C23A  6EFA               	movwf	pclath,c
 32838  01C23C  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32839  01C23E  6EFD               	movwf	tosl,c
 32840  01C240  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32841  01C242  6EFE               	movwf	tosh,c
 32842  01C244  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32843  01C246  6EFF               	movwf	tosu,c
 32844  01C248  50FA               	movf	pclath,w,c
 32845  01C24A  0012               	return		;indir
 32846  01C24C                     __end_of_INT1_CallBack:
 32847                           	opt callstack 0
 32848                           
 32849 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32850 ;; Defined at:
 32851 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32852 ;; Parameters:    Size  Location     Type
 32853 ;;		None
 32854 ;; Auto vars:     Size  Location     Type
 32855 ;;		None
 32856 ;; Return value:  Size  Location     Type
 32857 ;;                  1  [STACK] void 
 32858 ;; Registers used:
 32859 ;;		None
 32860 ;; Tracked objects:
 32861 ;;		On entry : 3F/0
 32862 ;;		On exit  : 0/0
 32863 ;;		Unchanged: 0/0
 32864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32869 ;;Total ram usage:        0 bytes
 32870 ;; Hardware stack levels used:    1
 32871 ;; Hardware stack levels required when called:    3
 32872 ;; This function calls:
 32873 ;;		Nothing
 32874 ;; This function is called by:
 32875 ;;		_EXT_INT_Initialize
 32876 ;;		_INT1_CallBack
 32877 ;; This function uses a reentrant model
 32878 ;;
 32879                           
 32880                           	psect	text145
 32881  01C5EE                     __ptext145:
 32882                           	opt callstack 0
 32883  01C5EE                     _INT1_DefaultInterruptHandler:
 32884                           	opt callstack 11
 32885                           
 32886                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32887                           
 32888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32889                           ;incstack = 0
 32890  01C5EE  0012               	return		;funcret
 32891  01C5F0                     __end_of_INT1_DefaultInterruptHandler:
 32892                           	opt callstack 0
 32893                           
 32894 ;; *************** function _switch_handler *****************
 32895 ;; Defined at:
 32896 ;;		line 58 in file "dio.c"
 32897 ;; Parameters:    Size  Location     Type
 32898 ;;		None
 32899 ;; Auto vars:     Size  Location     Type
 32900 ;;  i               1  [STACK] unsigned char 
 32901 ;;  sw_value        1  [STACK] unsigned char 
 32902 ;; Return value:  Size  Location     Type
 32903 ;;                  1  [STACK] void 
 32904 ;; Registers used:
 32905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32906 ;; Tracked objects:
 32907 ;;		On entry : 3F/0
 32908 ;;		On exit  : 0/0
 32909 ;;		Unchanged: 0/0
 32910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32915 ;;Total ram usage:        0 bytes
 32916 ;; Hardware stack levels used:    1
 32917 ;; Hardware stack levels required when called:    3
 32918 ;; This function calls:
 32919 ;;		Nothing
 32920 ;; This function is called by:
 32921 ;;		_start_switch_handler
 32922 ;;		_INT1_CallBack
 32923 ;; This function uses a reentrant model
 32924 ;;
 32925                           
 32926                           	psect	text146
 32927  019768                     __ptext146:
 32928                           	opt callstack 0
 32929  019768                     _switch_handler:
 32930                           	opt callstack 0
 32931                           
 32932                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32933  019768  52E6               	movf	postinc1,f,c
 32934  01976A  52E6               	movf	postinc1,f,c
 32935                           
 32936                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32937                           ;stkvar	_i @ sp[(-2)+0]
 32938                           
 32939                           ;incstack = 0
 32940  01976C  0EFE               	movlw	-2
 32941  01976E  6AE3               	clrf	plusw1,c
 32942  019770  9ABF               	bcf	191,5,c	;volatile
 32943                           
 32944                           ;dio.c: 72:  __nop();
 32945  019772  F000               	nop	
 32946                           
 32947                           ;dio.c: 73:  __nop();
 32948  019774  F000               	nop	
 32949                           
 32950                           ;dio.c: 74:  __nop();
 32951  019776  F000               	nop	
 32952                           
 32953                           ;dio.c: 75:  __nop();
 32954  019778  F000               	nop	
 32955                           
 32956                           ;dio.c: 76:  __nop();
 32957  01977A  F000               	nop	
 32958                           
 32959                           ;dio.c: 77:  __nop();
 32960  01977C  F000               	nop	
 32961  01977E  D013               	goto	l10771
 32962  019780                     l10759:
 32963                           
 32964                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 32965  019780  A6CF               	btfss	207,3,c	;volatile
 32966  019782  D00B               	goto	u977_20
 32967  019784  D007               	goto	u977_21
 32968  019786                     u976_28:
 32969                           
 32970                           ;stkvar	_sw_value @ sp[(-2)+1]
 32971  019786  0EFF               	movlw	-1
 32972  019788  0060  F033  FFE3   	movff	btemp+11,plusw1
 32973                           
 32974                           ;dio.c: 83:    break;
 32975  01978E  D021               	goto	l10773
 32976  019790                     l10761:
 32977                           
 32978                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 32979  019790  A4CF               	btfss	207,2,c	;volatile
 32980  019792  D003               	goto	u977_20
 32981  019794                     u977_21:
 32982  019794  6A0C               	clrf	(btemp+11)^0,c
 32983  019796  2A0C               	incf	(btemp+11)^0,f,c
 32984  019798  D7F6               	goto	u976_28
 32985  01979A                     u977_20:
 32986  01979A  6A0C               	clrf	(btemp+11)^0,c
 32987  01979C  D7F4               	goto	u976_28
 32988  01979E                     l10763:
 32989                           
 32990                           ;dio.c: 88:    sw_value = 1;
 32991                           ;stkvar	_sw_value @ sp[(-2)+1]
 32992  01979E  0EFF               	movlw	-1
 32993  0197A0  6AE3               	clrf	plusw1,c
 32994  0197A2  2AE3               	incf	plusw1,f,c
 32995                           
 32996                           ;dio.c: 89:    break;
 32997  0197A4  D016               	goto	l10773
 32998  0197A6                     l10771:
 32999                           
 33000                           ;stkvar	_i @ sp[(-2)+0]
 33001  0197A6  0EFE               	movlw	-2
 33002  0197A8  50E3               	movf	plusw1,w,c
 33003  0197AA  6E0B               	movwf	(btemp+10)^0,c
 33004  0197AC  6A0C               	clrf	(btemp+11)^0,c
 33005                           
 33006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33007                           ; Switch size 1, requested type "simple"
 33008                           ; Number of cases is 1, Range of values is 0 to 0
 33009                           ; switch strategies available:
 33010                           ; Name         Instructions Cycles
 33011                           ; simple_byte            4     3 (average)
 33012                           ;	Chosen strategy is simple_byte
 33013  0197AE  500C               	movf	(btemp+11)^0,w,c
 33014  0197B0  0A00               	xorlw	0	; case 0
 33015  0197B2  A4D8               	btfss	status,2,c
 33016  0197B4  D7F4               	goto	l10763
 33017                           
 33018                           ; Switch size 1, requested type "simple"
 33019                           ; Number of cases is 4, Range of values is 0 to 3
 33020                           ; switch strategies available:
 33021                           ; Name         Instructions Cycles
 33022                           ; simple_byte           13     7 (average)
 33023                           ;	Chosen strategy is simple_byte
 33024  0197B6  500B               	movf	(btemp+10)^0,w,c
 33025  0197B8  0A00               	xorlw	0	; case 0
 33026  0197BA  B4D8               	btfsc	status,2,c
 33027  0197BC  D7F0               	goto	l10763
 33028  0197BE  0A01               	xorlw	1	; case 1
 33029  0197C0  B4D8               	btfsc	status,2,c
 33030  0197C2  D7ED               	goto	l10763
 33031  0197C4  0A03               	xorlw	3	; case 2
 33032  0197C6  B4D8               	btfsc	status,2,c
 33033  0197C8  D7E3               	goto	l10761
 33034  0197CA  0A01               	xorlw	1	; case 3
 33035  0197CC  B4D8               	btfsc	status,2,c
 33036  0197CE  D7D8               	goto	l10759
 33037  0197D0  D7E6               	goto	l10763
 33038  0197D2                     l10773:
 33039                           
 33040                           ;dio.c: 99:   if (sw_value) {
 33041                           ;stkvar	_sw_value @ sp[(-2)+1]
 33042  0197D2  0EFF               	movlw	-1
 33043  0197D4  50E3               	movf	plusw1,w,c
 33044  0197D6  B4D8               	btfsc	status,2,c
 33045  0197D8  D018               	goto	l10779
 33046                           
 33047                           ;dio.c: 100:    if (S.button[i].sw == SW_ON) {
 33048                           ;stkvar	_i @ sp[(-2)+0]
 33049  0197DA  0EFE               	movlw	-2
 33050  0197DC  50E3               	movf	plusw1,w,c
 33051  0197DE  0D05               	mullw	5
 33052  0197E0  0E54               	movlw	low _S
 33053  0197E2  24F3               	addwf	243,w,c
 33054  0197E4  6ED9               	movwf	fsr2l,c
 33055  0197E6  0E02               	movlw	high _S
 33056  0197E8  20F4               	addwfc	prodh,w,c
 33057  0197EA  6EDA               	movwf	fsr2h,c
 33058  0197EC  04DE               	decf	postinc2,w,c
 33059  0197EE  A4D8               	btfss	status,2,c
 33060  0197F0  D049               	goto	l10787
 33061                           
 33062                           ;dio.c: 101:     S.button[i].sw = SW_OFF;
 33063                           ;stkvar	_i @ sp[(-2)+0]
 33064  0197F2  0EFE               	movlw	-2
 33065  0197F4  50E3               	movf	plusw1,w,c
 33066  0197F6  0D05               	mullw	5
 33067  0197F8  0E54               	movlw	low _S
 33068  0197FA  24F3               	addwf	243,w,c
 33069  0197FC  6ED9               	movwf	fsr2l,c
 33070  0197FE  0E02               	movlw	high _S
 33071  019800  20F4               	addwfc	prodh,w,c
 33072  019802  6EDA               	movwf	fsr2h,c
 33073  019804  0E00               	movlw	0
 33074  019806  6EDF               	movwf	indf2,c
 33075  019808  D03D               	goto	l10787
 33076  01980A                     l10779:
 33077                           
 33078                           ;dio.c: 104:    if (S.button[i].sw == SW_OFF) {
 33079                           ;stkvar	_i @ sp[(-2)+0]
 33080  01980A  0EFE               	movlw	-2
 33081  01980C  50E3               	movf	plusw1,w,c
 33082  01980E  0D05               	mullw	5
 33083  019810  0E54               	movlw	low _S
 33084  019812  24F3               	addwf	243,w,c
 33085  019814  6ED9               	movwf	fsr2l,c
 33086  019816  0E02               	movlw	high _S
 33087  019818  20F4               	addwfc	prodh,w,c
 33088  01981A  6EDA               	movwf	fsr2h,c
 33089  01981C  50DF               	movf	indf2,w,c
 33090  01981E  A4D8               	btfss	status,2,c
 33091  019820  D031               	goto	l10787
 33092                           
 33093                           ;dio.c: 105:     S.button[i].sw = SW_ON;
 33094                           ;stkvar	_i @ sp[(-2)+0]
 33095  019822  0EFE               	movlw	-2
 33096  019824  50E3               	movf	plusw1,w,c
 33097  019826  0D05               	mullw	5
 33098  019828  0E54               	movlw	low _S
 33099  01982A  24F3               	addwf	243,w,c
 33100  01982C  6ED9               	movwf	fsr2l,c
 33101  01982E  0E02               	movlw	high _S
 33102  019830  20F4               	addwfc	prodh,w,c
 33103  019832  6EDA               	movwf	fsr2h,c
 33104  019834  0E01               	movlw	1
 33105  019836  6EDF               	movwf	indf2,c
 33106                           
 33107                           ;dio.c: 106:     S.button[i].count = V.timerint_count;
 33108  019838  EE20  F1C2         	lfsr	2,_V+187	;volatile
 33109                           
 33110                           ;stkvar	_i @ sp[(-2)+0]
 33111  01983C  0EFE               	movlw	-2
 33112  01983E  50E3               	movf	plusw1,w,c
 33113  019840  0D05               	mullw	5
 33114  019842  0E55               	movlw	low (_S+1)
 33115  019844  24F3               	addwf	243,w,c
 33116  019846  6EE9               	movwf	fsr0l,c
 33117  019848  0E02               	movlw	high (_S+1)
 33118  01984A  20F4               	addwfc	prodh,w,c
 33119  01984C  6EEA               	movwf	fsr0h,c
 33120  01984E  006F FF7B FFEE     	movff	postinc2,postinc0
 33121  019854  006F FF7B FFEE     	movff	postinc2,postinc0
 33122  01985A  006F FF7B FFEE     	movff	postinc2,postinc0
 33123  019860  006F FF7B FFEE     	movff	postinc2,postinc0
 33124                           
 33125                           ;dio.c: 107:     S.sw_bitmap |= 1 << i;
 33126                           ;stkvar	_i @ sp[(-2)+0]
 33127  019866  0EFE               	movlw	-2
 33128  019868  006F FF8C  F00C    	movff	plusw1,btemp+11
 33129  01986E  0E01               	movlw	1
 33130  019870  6E0B               	movwf	(btemp+10)^0,c
 33131  019872  2A0C               	incf	(btemp+11)^0,f,c
 33132  019874  D002               	goto	u981_24
 33133  019876                     u981_25:
 33134  019876  90D8               	bcf	status,0,c
 33135  019878  360B               	rlcf	(btemp+10)^0,f,c
 33136  01987A                     u981_24:
 33137  01987A  2E0C               	decfsz	(btemp+11)^0,f,c
 33138  01987C  D7FC               	goto	u981_25
 33139  01987E  500B               	movf	(btemp+10)^0,w,c
 33140  019880  0102               	movlb	2	; () banked
 33141  019882  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 33142  019884                     l10787:
 33143                           
 33144                           ;dio.c: 110:  } while (++i < 4);
 33145                           ;stkvar	_i @ sp[(-2)+0]
 33146  019884  0EFE               	movlw	-2
 33147  019886  2AE3               	incf	plusw1,f,c
 33148  019888  0EFE               	movlw	-2
 33149  01988A  006F FF8C  F001    	movff	plusw1,btemp
 33150  019890  0E03               	movlw	3
 33151  019892  6401               	cpfsgt	btemp^0,c
 33152  019894  D788               	goto	l10771
 33153                           
 33154                           ;dio.c: 119:  do { LATFbits.LATF5 = 1; } while(0);
 33155  019896  8ABF               	bsf	191,5,c	;volatile
 33156                           
 33157                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33158  019898  52E5               	movf	postdec1,f,c
 33159  01989A  52E5               	movf	postdec1,f,c
 33160  01989C  0012               	return		;funcret
 33161  01989E                     __end_of_switch_handler:
 33162                           	opt callstack 0
 33163                           
 33164 ;; *************** function _TMR5_ISR *****************
 33165 ;; Defined at:
 33166 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 33167 ;; Parameters:    Size  Location     Type
 33168 ;;		None
 33169 ;; Auto vars:     Size  Location     Type
 33170 ;;		None
 33171 ;; Return value:  Size  Location     Type
 33172 ;;                  1    wreg      void 
 33173 ;; Registers used:
 33174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33175 ;; Tracked objects:
 33176 ;;		On entry : 0/0
 33177 ;;		On exit  : 3F/0
 33178 ;;		Unchanged: 0/0
 33179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33182 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33183 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33184 ;;Total ram usage:       15 bytes
 33185 ;; Hardware stack levels used:    1
 33186 ;; Hardware stack levels required when called:    9
 33187 ;; This function calls:
 33188 ;;		_TMR5_CallBack
 33189 ;;		_TMR5_WriteTimer
 33190 ;; This function is called by:
 33191 ;;		Interrupt level 1
 33192 ;; This function uses a non-reentrant model
 33193 ;;
 33194                           
 33195                           	psect	text147
 33196  01A230                     __ptext147:
 33197                           	opt callstack 0
 33198  01A230                     _TMR5_ISR:
 33199                           	opt callstack 7
 33200                           
 33201                           ;incstack = 0
 33202  01A230  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 33203  01A236  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 33204  01A23C  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 33205  01A242  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 33206  01A248  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 33207  01A24E  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 33208  01A254  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 33209  01A25A  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 33210  01A260  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 33211  01A266  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 33212  01A26C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 33213  01A272  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 33214  01A278  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 33215  01A27E  EE16  F0AF         	lfsr	1,___intlo_sp
 33216                           
 33217                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 33218  01A282  0139               	movlb	57	; () banked
 33219  01A284  9DA8               	bcf	168,6,b	;volatile
 33220                           
 33221                           ; BSR set to: 57
 33222                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 33223  01A286  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 33224  01A28C  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 33225  01A292  ECB4  F0DD         	call	_TMR5_WriteTimer	;wreg free
 33226                           
 33227                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 33228  01A296  0101               	movlb	1	; () banked
 33229  01A298  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 33230  01A29A  6E2B               	movwf	??_TMR5_ISR^0,c
 33231  01A29C  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 33232  01A29E  0E05               	movlw	5
 33233  01A2A0  262B               	addwf	??_TMR5_ISR^0,f,c
 33234  01A2A2  0E00               	movlw	0
 33235  01A2A4  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 33236  01A2A6  0100               	movlb	0	; () banked
 33237  01A2A8  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 33238  01A2AA  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33239  01A2AC  502B               	movf	??_TMR5_ISR^0,w,c
 33240  01A2AE  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 33241  01A2B0  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 33242  01A2B2  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33243  01A2B4  A0D8               	btfss	status,0,c
 33244  01A2B6  D005               	goto	i1l1019
 33245                           
 33246                           ; BSR set to: 0
 33247                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 33248  01A2B8  EC26  F0E1         	call	_TMR5_CallBack	;wreg free
 33249                           
 33250                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 33251  01A2BC  0100               	movlb	0	; () banked
 33252  01A2BE  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 33253  01A2C0  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 33254  01A2C2                     i1l1019:
 33255                           
 33256                           ; BSR set to: 0
 33257  01A2C2  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 33258  01A2C8  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 33259  01A2CE  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 33260  01A2D4  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 33261  01A2DA  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 33262  01A2E0  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 33263  01A2E6  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 33264  01A2EC  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 33265  01A2F2  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 33266  01A2F8  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 33267  01A2FE  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 33268  01A304  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 33269  01A30A  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 33270  01A310  0011               	retfie		f
 33271  01A312                     __end_of_TMR5_ISR:
 33272                           	opt callstack 0
 33273                           
 33274 ;; *************** function _TMR5_WriteTimer *****************
 33275 ;; Defined at:
 33276 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 33277 ;; Parameters:    Size  Location     Type
 33278 ;;  timerVal        2  [STACK] unsigned short 
 33279 ;; Auto vars:     Size  Location     Type
 33280 ;;		None
 33281 ;; Return value:  Size  Location     Type
 33282 ;;                  1  [STACK] void 
 33283 ;; Registers used:
 33284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33285 ;; Tracked objects:
 33286 ;;		On entry : 3F/39
 33287 ;;		On exit  : 0/0
 33288 ;;		Unchanged: 0/0
 33289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33294 ;;Total ram usage:        0 bytes
 33295 ;; Hardware stack levels used:    1
 33296 ;; Hardware stack levels required when called:    3
 33297 ;; This function calls:
 33298 ;;		Nothing
 33299 ;; This function is called by:
 33300 ;;		_TMR5_ISR
 33301 ;; This function uses a reentrant model
 33302 ;;
 33303                           
 33304                           	psect	text148
 33305  01BB68                     __ptext148:
 33306                           	opt callstack 0
 33307  01BB68                     _TMR5_WriteTimer:
 33308                           	opt callstack 12
 33309                           
 33310                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 33311                           
 33312                           ; BSR set to: 0
 33313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33314                           ;incstack = 0
 33315  01BB68  A49A               	btfss	154,2,c	;volatile
 33316  01BB6A  D00F               	goto	l10991
 33317                           
 33318                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 33319  01BB6C  909A               	bcf	154,0,c	;volatile
 33320                           
 33321                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 33322                           ;stkvar	_timerVal @ sp[(0)+-2]
 33323  01BB6E  0EFF               	movlw	255
 33324  01BB70  24E1               	addwf	fsr1l,w,c
 33325  01BB72  6ED9               	movwf	fsr2l,c
 33326  01BB74  0EFF               	movlw	255
 33327  01BB76  20E2               	addwfc	fsr1h,w,c
 33328  01BB78  6EDA               	movwf	fsr2h,c
 33329  01BB7A  50DF               	movf	indf2,w,c
 33330  01BB7C  6E99               	movwf	153,c	;volatile
 33331                           
 33332                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 33333                           ;stkvar	_timerVal @ sp[(0)+-2]
 33334  01BB7E  0EFE               	movlw	-2
 33335  01BB80  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33336                           
 33337                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 33338  01BB86  809A               	bsf	154,0,c	;volatile
 33339                           
 33340                           ;mcc_generated_files/tmr5.c: 144:  } else {
 33341  01BB88  D00C               	goto	l1002
 33342  01BB8A                     l10991:
 33343                           
 33344                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 33345                           ;stkvar	_timerVal @ sp[(0)+-2]
 33346  01BB8A  0EFF               	movlw	255
 33347  01BB8C  24E1               	addwf	fsr1l,w,c
 33348  01BB8E  6ED9               	movwf	fsr2l,c
 33349  01BB90  0EFF               	movlw	255
 33350  01BB92  20E2               	addwfc	fsr1h,w,c
 33351  01BB94  6EDA               	movwf	fsr2h,c
 33352  01BB96  50DF               	movf	indf2,w,c
 33353  01BB98  6E99               	movwf	153,c	;volatile
 33354                           
 33355                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 33356                           ;stkvar	_timerVal @ sp[(0)+-2]
 33357  01BB9A  0EFE               	movlw	-2
 33358  01BB9C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33359  01BBA2                     l1002:
 33360                           
 33361                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33362  01BBA2  52E5               	movf	postdec1,f,c
 33363  01BBA4  52E5               	movf	postdec1,f,c
 33364  01BBA6  0012               	return		;funcret
 33365  01BBA8                     __end_of_TMR5_WriteTimer:
 33366                           	opt callstack 0
 33367                           
 33368 ;; *************** function _TMR5_CallBack *****************
 33369 ;; Defined at:
 33370 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 33371 ;; Parameters:    Size  Location     Type
 33372 ;;		None
 33373 ;; Auto vars:     Size  Location     Type
 33374 ;;		None
 33375 ;; Return value:  Size  Location     Type
 33376 ;;                  1  [STACK] void 
 33377 ;; Registers used:
 33378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33379 ;; Tracked objects:
 33380 ;;		On entry : 3F/0
 33381 ;;		On exit  : 0/0
 33382 ;;		Unchanged: 0/0
 33383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33388 ;;Total ram usage:        0 bytes
 33389 ;; Hardware stack levels used:    1
 33390 ;; Hardware stack levels required when called:    8
 33391 ;; This function calls:
 33392 ;;		Absolute function
 33393 ;;		_TMR5_DefaultInterruptHandler
 33394 ;; This function is called by:
 33395 ;;		_TMR5_ISR
 33396 ;; This function uses a reentrant model
 33397 ;;
 33398                           
 33399                           	psect	text149
 33400  01C24C                     __ptext149:
 33401                           	opt callstack 0
 33402  01C24C                     _TMR5_CallBack:
 33403                           	opt callstack 7
 33404                           
 33405                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 33406                           
 33407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33408                           ;incstack = 0
 33409  01C24C  0100               	movlb	0	; () banked
 33410  01C24E  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33411  01C250  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33412  01C252  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33413  01C254  B4D8               	btfsc	status,2,c
 33414  01C256  0012               	return	
 33415                           
 33416                           ; BSR set to: 0
 33417                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 33418  01C258  D801               	call	u1017_28
 33419  01C25A  0012               	return	
 33420  01C25C                     u1017_28:
 33421  01C25C  0005               	push	
 33422  01C25E  6EFA               	movwf	pclath,c
 33423  01C260  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33424  01C262  6EFD               	movwf	tosl,c
 33425  01C264  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33426  01C266  6EFE               	movwf	tosh,c
 33427  01C268  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33428  01C26A  6EFF               	movwf	tosu,c
 33429  01C26C  50FA               	movf	pclath,w,c
 33430  01C26E  0012               	return		;indir
 33431  01C270                     __end_of_TMR5_CallBack:
 33432                           	opt callstack 0
 33433                           
 33434 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 33435 ;; Defined at:
 33436 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 33437 ;; Parameters:    Size  Location     Type
 33438 ;;		None
 33439 ;; Auto vars:     Size  Location     Type
 33440 ;;		None
 33441 ;; Return value:  Size  Location     Type
 33442 ;;                  1  [STACK] void 
 33443 ;; Registers used:
 33444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33445 ;; Tracked objects:
 33446 ;;		On entry : 3F/0
 33447 ;;		On exit  : 0/0
 33448 ;;		Unchanged: 0/0
 33449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33454 ;;Total ram usage:        0 bytes
 33455 ;; Hardware stack levels used:    1
 33456 ;; Hardware stack levels required when called:    7
 33457 ;; This function calls:
 33458 ;;		_check_day_time
 33459 ;; This function is called by:
 33460 ;;		_TMR5_Initialize
 33461 ;;		_TMR5_CallBack
 33462 ;; This function uses a reentrant model
 33463 ;;
 33464                           
 33465                           	psect	text150
 33466  01BC98                     __ptext150:
 33467                           	opt callstack 0
 33468  01BC98                     _TMR5_DefaultInterruptHandler:
 33469                           	opt callstack 7
 33470                           
 33471                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 33472                           
 33473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33474                           ;incstack = 0
 33475  01BC98  A0BE               	btfss	190,0,c	;volatile
 33476  01BC9A  D002               	goto	u955_20
 33477  01BC9C  0E01               	movlw	1
 33478  01BC9E  D001               	goto	u955_26
 33479  01BCA0                     u955_20:
 33480  01BCA0  0E00               	movlw	0
 33481  01BCA2                     u955_26:
 33482  01BCA2  0AFF               	xorlw	255
 33483  01BCA4  6E0C               	movwf	(btemp+11)^0,c
 33484  01BCA6  50BE               	movf	190,w,c	;volatile
 33485  01BCA8  180C               	xorwf	(btemp+11)^0,w,c
 33486  01BCAA  0BFE               	andlw	-2
 33487  01BCAC  180C               	xorwf	(btemp+11)^0,w,c
 33488  01BCAE  6EBE               	movwf	190,c	;volatile
 33489                           
 33490                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 33491  01BCB0  0E01               	movlw	1
 33492  01BCB2  0101               	movlb	1	; () banked
 33493  01BCB4  27C2               	addwf	(_V+187)& (0+255),f,b	;volatile
 33494  01BCB6  0E00               	movlw	0
 33495  01BCB8  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 33496  01BCBA  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 33497  01BCBC  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 33498                           
 33499                           ; BSR set to: 1
 33500                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 33501  01BCBE  0E01               	movlw	1
 33502  01BCC0  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 33503  01BCC2  0E00               	movlw	0
 33504  01BCC4  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 33505  01BCC6  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 33506  01BCC8  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 33507                           
 33508                           ; BSR set to: 1
 33509                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 33510  01BCCA  EC33  F0C5         	call	_check_day_time	;wreg free
 33511                           
 33512                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33513  01BCCE  0012               	return		;funcret
 33514  01BCD0                     __end_of_TMR5_DefaultInterruptHandler:
 33515                           	opt callstack 0
 33516                           
 33517 ;; *************** function _check_day_time *****************
 33518 ;; Defined at:
 33519 ;;		line 165 in file "mbmc.c"
 33520 ;; Parameters:    Size  Location     Type
 33521 ;;		None
 33522 ;; Auto vars:     Size  Location     Type
 33523 ;;  light           4  [STACK] float 
 33524 ;; Return value:  Size  Location     Type
 33525 ;;                  1  [STACK] _Bool 
 33526 ;; Registers used:
 33527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33528 ;; Tracked objects:
 33529 ;;		On entry : 3F/1
 33530 ;;		On exit  : 0/0
 33531 ;;		Unchanged: 0/0
 33532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33537 ;;Total ram usage:        0 bytes
 33538 ;; Hardware stack levels used:    1
 33539 ;; Hardware stack levels required when called:    6
 33540 ;; This function calls:
 33541 ;;		___flge
 33542 ;;		_conv_raw_result
 33543 ;;		_get_ac_charger_relay
 33544 ;;		_set_ac_charger_relay
 33545 ;; This function is called by:
 33546 ;;		_TMR5_DefaultInterruptHandler
 33547 ;; This function uses a reentrant model
 33548 ;;
 33549                           
 33550                           	psect	text151
 33551  018A66                     __ptext151:
 33552                           	opt callstack 0
 33553  018A66                     _check_day_time:
 33554                           	opt callstack 0
 33555                           
 33556                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33557  018A66  52E6               	movf	postinc1,f,c
 33558  018A68  52E6               	movf	postinc1,f,c
 33559  018A6A  52E6               	movf	postinc1,f,c
 33560  018A6C  52E6               	movf	postinc1,f,c
 33561                           
 33562                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 33563                           
 33564                           ;incstack = 0
 33565  018A6E  0E00               	movlw	0
 33566  018A70  6EE6               	movwf	postinc1,c
 33567  018A72  0E0D               	movlw	13
 33568  018A74  6EE6               	movwf	postinc1,c
 33569  018A76  EC95  F0A9         	call	_conv_raw_result	;wreg free
 33570                           
 33571                           ;stkvar	_light @ sp[(-4)+0]
 33572  018A7A  0EFC               	movlw	-4
 33573  018A7C  0060  F007  FFE3   	movff	btemp,plusw1
 33574  018A82  0EFD               	movlw	-3
 33575  018A84  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33576  018A8A  0EFE               	movlw	-2
 33577  018A8C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 33578  018A92  0EFF               	movlw	-1
 33579  018A94  0060  F013  FFE3   	movff	btemp+3,plusw1
 33580                           
 33581                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 33582  018A9A  2A41               	incf	check_day_time@day_delay^0,f,c
 33583  018A9C  0441               	decf	check_day_time@day_delay^0,w,c
 33584  018A9E  A4D8               	btfss	status,2,c
 33585  018AA0  D0A9               	goto	l1979
 33586  018AA2  0101               	movlb	1	; () banked
 33587  018AA4  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 33588  018AA6  B4D8               	btfsc	status,2,c
 33589  018AA8  D0A5               	goto	l1979
 33590                           
 33591                           ; BSR set to: 1
 33592                           ;mbmc.c: 173:   if (C.soc > 15) {
 33593  018AAA  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33594  018AAE  0E01               	movlw	1
 33595  018AB0  50DB               	movf	plusw2,w,c
 33596  018AB2  E104               	bnz	u934_20
 33597  018AB4  0E10               	movlw	16
 33598  018AB6  5CDE               	subwf	postinc2,w,c
 33599  018AB8  A0D8               	btfss	status,0,c
 33600  018ABA  D073               	goto	l10029
 33601  018ABC                     u934_20:
 33602                           
 33603                           ; BSR set to: 1
 33604                           ;mbmc.c: 174:    if (!C.day) {
 33605  018ABC  EE22  F021         	lfsr	2,_C+290	;volatile
 33606  018AC0  50DF               	movf	indf2,w,c
 33607  018AC2  A4D8               	btfss	status,2,c
 33608  018AC4  D035               	goto	l10017
 33609                           
 33610                           ; BSR set to: 1
 33611                           ;mbmc.c: 175:     if (light > 22.0) {
 33612                           ;stkvar	_light @ sp[(-4)+0]
 33613  018AC6  0EFC               	movlw	-4
 33614  018AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 33615  018ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 33616  018AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 33617  018ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 33618  018AE0  0E00               	movlw	0
 33619  018AE2  6EE6               	movwf	postinc1,c
 33620  018AE4  0E00               	movlw	0
 33621  018AE6  6EE6               	movwf	postinc1,c
 33622  018AE8  0EB0               	movlw	176
 33623  018AEA  6EE6               	movwf	postinc1,c
 33624  018AEC  0E41               	movlw	65
 33625  018AEE  6EE6               	movwf	postinc1,c
 33626  018AF0  EC0A  F0C9         	call	___flge	;wreg free
 33627  018AF4  B001               	btfsc	btemp& (0+255),0,c
 33628  018AF6  D07E               	goto	l1979
 33629                           
 33630                           ;mbmc.c: 176:      C.day = 1;
 33631  018AF8  0E01               	movlw	1
 33632  018AFA  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33633                           
 33634                           ;mbmc.c: 177:      C.day_start = V.ticks;
 33635  018B00  EE20  F188         	lfsr	2,_V+129	;volatile
 33636  018B04  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 33637  018B0A  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 33638  018B10  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 33639  018B16  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 33640                           
 33641                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 33642  018B1C  ECA1  F0E2         	call	_get_ac_charger_relay	;wreg free
 33643  018B20  5001               	movf	btemp^0,w,c
 33644  018B22  B4D8               	btfsc	status,2,c
 33645  018B24  D06B               	goto	l1975
 33646                           
 33647                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 33648  018B26  0E00               	movlw	0
 33649  018B28  6EE6               	movwf	postinc1,c
 33650  018B2A  EC8B  F0E2         	call	_set_ac_charger_relay	;wreg free
 33651  018B2E  D066               	goto	l1975
 33652  018B30                     l10017:
 33653                           
 33654                           ; BSR set to: 1
 33655                           ;mbmc.c: 184:     if (light < 12.0) {
 33656  018B30  0E00               	movlw	0
 33657  018B32  6EE6               	movwf	postinc1,c
 33658  018B34  0E00               	movlw	0
 33659  018B36  6EE6               	movwf	postinc1,c
 33660  018B38  0E40               	movlw	64
 33661  018B3A  6EE6               	movwf	postinc1,c
 33662  018B3C  0E41               	movlw	65
 33663  018B3E  6EE6               	movwf	postinc1,c
 33664                           
 33665                           ;stkvar	_light @ sp[(-8)+0]
 33666  018B40  0EF8               	movlw	-8
 33667  018B42  006F FF8F FFE6     	movff	plusw1,postinc1
 33668  018B48  006F FF8F FFE6     	movff	plusw1,postinc1
 33669  018B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 33670  018B54  006F FF8F FFE6     	movff	plusw1,postinc1
 33671  018B5A  EC0A  F0C9         	call	___flge	;wreg free
 33672  018B5E  B001               	btfsc	btemp& (0+255),0,c
 33673  018B60  D049               	goto	l1979
 33674                           
 33675                           ;mbmc.c: 185:      C.day = 0;
 33676  018B62  0E00               	movlw	0
 33677  018B64  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33678                           
 33679                           ;mbmc.c: 186:      C.day_end = V.ticks;
 33680  018B6A  EE20  F188         	lfsr	2,_V+129	;volatile
 33681  018B6E  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 33682  018B74  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 33683  018B7A  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 33684  018B80  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 33685                           
 33686                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 33687  018B86  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33688  018B8A  0E01               	movlw	1
 33689  018B8C  50DB               	movf	plusw2,w,c
 33690  018B8E  E136               	bnz	l1975
 33691  018B90  0E28               	movlw	40
 33692  018B92  5CDE               	subwf	postinc2,w,c
 33693  018B94  B0D8               	btfsc	status,0,c
 33694  018B96  D032               	goto	l1975
 33695                           
 33696                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 33697  018B98  0E01               	movlw	1
 33698  018B9A  6EE6               	movwf	postinc1,c
 33699  018B9C  EC8B  F0E2         	call	_set_ac_charger_relay	;wreg free
 33700  018BA0  D02D               	goto	l1975
 33701  018BA2                     l10029:
 33702                           
 33703                           ; BSR set to: 1
 33704                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 33705  018BA2  EE21  F377         	lfsr	2,_C+120	;volatile
 33706  018BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 33707  018BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 33708  018BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 33709  018BB8  006F FF7B FFE6     	movff	postinc2,postinc1
 33710  018BBE  EE21  F37B         	lfsr	2,_C+124	;volatile
 33711  018BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 33712  018BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 33713  018BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 33714  018BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 33715  018BDA  EC0A  F0C9         	call	___flge	;wreg free
 33716  018BDE  B001               	btfsc	btemp& (0+255),0,c
 33717  018BE0  D009               	goto	l1979
 33718                           
 33719                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 33720  018BE2  ECA1  F0E2         	call	_get_ac_charger_relay	;wreg free
 33721  018BE6  5001               	movf	btemp^0,w,c
 33722  018BE8  A4D8               	btfss	status,2,c
 33723  018BEA  D004               	goto	l1979
 33724                           
 33725                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 33726  018BEC  0E01               	movlw	1
 33727  018BEE  6EE6               	movwf	postinc1,c
 33728  018BF0  EC8B  F0E2         	call	_set_ac_charger_relay	;wreg free
 33729  018BF4                     l1979:
 33730                           
 33731                           ;mbmc.c: 204:  if (day_delay >= 240)
 33732  018BF4  0EEF               	movlw	239
 33733  018BF6  6441               	cpfsgt	check_day_time@day_delay^0,c
 33734  018BF8  D001               	goto	l1975
 33735                           
 33736                           ;mbmc.c: 205:   day_delay = 0;
 33737  018BFA  6A41               	clrf	check_day_time@day_delay^0,c
 33738  018BFC                     l1975:
 33739                           
 33740                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33741  018BFC  52E5               	movf	postdec1,f,c
 33742  018BFE  52E5               	movf	postdec1,f,c
 33743  018C00  52E5               	movf	postdec1,f,c
 33744  018C02  52E5               	movf	postdec1,f,c
 33745  018C04  0012               	return		;funcret
 33746  018C06                     __end_of_check_day_time:
 33747                           	opt callstack 0
 33748                           
 33749 ;; *************** function _set_ac_charger_relay *****************
 33750 ;; Defined at:
 33751 ;;		line 135 in file "mbmc.c"
 33752 ;; Parameters:    Size  Location     Type
 33753 ;;  mode            1  [STACK] const _Bool 
 33754 ;; Auto vars:     Size  Location     Type
 33755 ;;		None
 33756 ;; Return value:  Size  Location     Type
 33757 ;;                  1  [STACK] void 
 33758 ;; Registers used:
 33759 ;;		wreg, fsr1l, fsr1h
 33760 ;; Tracked objects:
 33761 ;;		On entry : 0/1
 33762 ;;		On exit  : 0/0
 33763 ;;		Unchanged: 0/0
 33764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33769 ;;Total ram usage:        0 bytes
 33770 ;; Hardware stack levels used:    1
 33771 ;; Hardware stack levels required when called:    3
 33772 ;; This function calls:
 33773 ;;		Nothing
 33774 ;; This function is called by:
 33775 ;;		_check_day_time
 33776 ;; This function uses a reentrant model
 33777 ;;
 33778                           
 33779                           	psect	text152
 33780  01C516                     __ptext152:
 33781                           	opt callstack 0
 33782  01C516                     _set_ac_charger_relay:
 33783                           	opt callstack 9
 33784                           
 33785                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 33786                           ;stkvar	_mode @ sp[(0)+-1]
 33787                           
 33788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33789                           ;incstack = 0
 33790  01C516  0EFF               	movlw	-1
 33791  01C518  B0E3               	btfsc	plusw1,0,c
 33792  01C51A  D002               	bra	u929_25
 33793  01C51C  9CBD               	bcf	189,6,c	;volatile
 33794  01C51E  D001               	bra	u929_26
 33795  01C520                     u929_25:
 33796  01C520  8CBD               	bsf	189,6,c	;volatile
 33797  01C522                     u929_26:
 33798                           
 33799                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33800  01C522  52E5               	movf	postdec1,f,c
 33801  01C524  0012               	return		;funcret
 33802  01C526                     __end_of_set_ac_charger_relay:
 33803                           	opt callstack 0
 33804                           
 33805 ;; *************** function _get_ac_charger_relay *****************
 33806 ;; Defined at:
 33807 ;;		line 140 in file "mbmc.c"
 33808 ;; Parameters:    Size  Location     Type
 33809 ;;		None
 33810 ;; Auto vars:     Size  Location     Type
 33811 ;;		None
 33812 ;; Return value:  Size  Location     Type
 33813 ;;                  1  [STACK] _Bool 
 33814 ;; Registers used:
 33815 ;;		btemp
 33816 ;; Tracked objects:
 33817 ;;		On entry : 0/1
 33818 ;;		On exit  : 0/0
 33819 ;;		Unchanged: 0/0
 33820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33825 ;;Total ram usage:        0 bytes
 33826 ;; Hardware stack levels used:    1
 33827 ;; Hardware stack levels required when called:    3
 33828 ;; This function calls:
 33829 ;;		Nothing
 33830 ;; This function is called by:
 33831 ;;		_check_day_time
 33832 ;;		_calc_bsoc
 33833 ;; This function uses a reentrant model
 33834 ;;
 33835                           
 33836                           	psect	text153
 33837  01C542                     __ptext153:
 33838                           	opt callstack 0
 33839  01C542                     _get_ac_charger_relay:
 33840                           	opt callstack 10
 33841                           
 33842                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33843                           
 33844                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33845                           ;incstack = 0
 33846  01C542  ACBD               	btfss	189,6,c	;volatile
 33847  01C544  D003               	goto	u948_20
 33848  01C546  6A01               	clrf	btemp^0,c
 33849  01C548  2A01               	incf	btemp^0,f,c
 33850  01C54A  0012               	return	
 33851  01C54C                     u948_20:
 33852  01C54C  6A01               	clrf	btemp^0,c
 33853                           
 33854                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33855  01C54E  0012               	return		;funcret
 33856  01C550                     __end_of_get_ac_charger_relay:
 33857                           	opt callstack 0
 33858                           
 33859 ;; *************** function _TMR3_ISR *****************
 33860 ;; Defined at:
 33861 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33862 ;; Parameters:    Size  Location     Type
 33863 ;;		None
 33864 ;; Auto vars:     Size  Location     Type
 33865 ;;		None
 33866 ;; Return value:  Size  Location     Type
 33867 ;;                  1    wreg      void 
 33868 ;; Registers used:
 33869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33870 ;; Tracked objects:
 33871 ;;		On entry : 0/0
 33872 ;;		On exit  : 3F/0
 33873 ;;		Unchanged: 0/0
 33874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33877 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33878 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33879 ;;Total ram usage:       25 bytes
 33880 ;; Hardware stack levels used:    1
 33881 ;; Hardware stack levels required when called:   14
 33882 ;; This function calls:
 33883 ;;		_TMR3_CallBack
 33884 ;;		_TMR3_WriteTimer
 33885 ;; This function is called by:
 33886 ;;		Interrupt level 1
 33887 ;; This function uses a non-reentrant model
 33888 ;;
 33889                           
 33890                           	psect	text154
 33891  019378                     __ptext154:
 33892                           	opt callstack 0
 33893  019378                     _TMR3_ISR:
 33894                           	opt callstack 2
 33895                           
 33896                           ;incstack = 0
 33897  019378  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 33898  01937E  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 33899  019384  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 33900  01938A  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 33901  019390  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 33902  019396  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 33903  01939C  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 33904  0193A2  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 33905  0193A8  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 33906  0193AE  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 33907  0193B4  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 33908  0193BA  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 33909  0193C0  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 33910  0193C6  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 33911  0193CC  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 33912  0193D2  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 33913  0193D8  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 33914  0193DE  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 33915  0193E4  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 33916  0193EA  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 33917  0193F0  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 33918  0193F6  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 33919  0193FC  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 33920  019402  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 33921  019408  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 33922  01940E  EE16  F0AF         	lfsr	1,___intlo_sp
 33923                           
 33924                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33925  019412  0139               	movlb	57	; () banked
 33926  019414  9DA6               	bcf	166,6,b	;volatile
 33927                           
 33928                           ; BSR set to: 57
 33929                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33930  019416  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 33931  01941C  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33932  019422  ECD4  F0DD         	call	_TMR3_WriteTimer	;wreg free
 33933                           
 33934                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33935  019426  0100               	movlb	0	; () banked
 33936  019428  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33937  01942A  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33938  01942C  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33939  01942E  E104               	bnz	i1u1276_20
 33940  019430  0E28               	movlw	40
 33941  019432  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33942  019434  A0D8               	btfss	status,0,c
 33943  019436  D005               	goto	i1l1207
 33944  019438                     i1u1276_20:
 33945                           
 33946                           ; BSR set to: 0
 33947                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33948  019438  EC38  F0E1         	call	_TMR3_CallBack	;wreg free
 33949                           
 33950                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33951  01943C  0100               	movlb	0	; () banked
 33952  01943E  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33953  019440  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33954  019442                     i1l1207:
 33955                           
 33956                           ; BSR set to: 0
 33957  019442  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 33958  019448  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 33959  01944E  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 33960  019454  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 33961  01945A  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 33962  019460  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 33963  019466  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 33964  01946C  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 33965  019472  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33966  019478  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33967  01947E  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33968  019484  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 33969  01948A  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 33970  019490  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 33971  019496  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 33972  01949C  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 33973  0194A2  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 33974  0194A8  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 33975  0194AE  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 33976  0194B4  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 33977  0194BA  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 33978  0194C0  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33979  0194C6  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33980  0194CC  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33981  0194D2  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 33982  0194D8  0011               	retfie		f
 33983  0194DA                     __end_of_TMR3_ISR:
 33984                           	opt callstack 0
 33985                           
 33986 ;; *************** function _TMR3_WriteTimer *****************
 33987 ;; Defined at:
 33988 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33989 ;; Parameters:    Size  Location     Type
 33990 ;;  timerVal        2  [STACK] unsigned short 
 33991 ;; Auto vars:     Size  Location     Type
 33992 ;;		None
 33993 ;; Return value:  Size  Location     Type
 33994 ;;                  1  [STACK] void 
 33995 ;; Registers used:
 33996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33997 ;; Tracked objects:
 33998 ;;		On entry : 3F/39
 33999 ;;		On exit  : 0/0
 34000 ;;		Unchanged: 0/0
 34001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34006 ;;Total ram usage:        0 bytes
 34007 ;; Hardware stack levels used:    1
 34008 ;; Hardware stack levels required when called:    3
 34009 ;; This function calls:
 34010 ;;		Nothing
 34011 ;; This function is called by:
 34012 ;;		_TMR3_ISR
 34013 ;; This function uses a reentrant model
 34014 ;;
 34015                           
 34016                           	psect	text155
 34017  01BBA8                     __ptext155:
 34018                           	opt callstack 0
 34019  01BBA8                     _TMR3_WriteTimer:
 34020                           	opt callstack 12
 34021                           
 34022                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 34023                           
 34024                           ; BSR set to: 0
 34025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34026                           ;incstack = 0
 34027  01BBA8  A4A6               	btfss	166,2,c	;volatile
 34028  01BBAA  D00F               	goto	l11009
 34029                           
 34030                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 34031  01BBAC  90A6               	bcf	166,0,c	;volatile
 34032                           
 34033                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 34034                           ;stkvar	_timerVal @ sp[(0)+-2]
 34035  01BBAE  0EFF               	movlw	255
 34036  01BBB0  24E1               	addwf	fsr1l,w,c
 34037  01BBB2  6ED9               	movwf	fsr2l,c
 34038  01BBB4  0EFF               	movlw	255
 34039  01BBB6  20E2               	addwfc	fsr1h,w,c
 34040  01BBB8  6EDA               	movwf	fsr2h,c
 34041  01BBBA  50DF               	movf	indf2,w,c
 34042  01BBBC  6EA5               	movwf	165,c	;volatile
 34043                           
 34044                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 34045                           ;stkvar	_timerVal @ sp[(0)+-2]
 34046  01BBBE  0EFE               	movlw	-2
 34047  01BBC0  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34048                           
 34049                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 34050  01BBC6  80A6               	bsf	166,0,c	;volatile
 34051                           
 34052                           ;mcc_generated_files/tmr3.c: 141:     }
 34053  01BBC8  D00C               	goto	l1190
 34054  01BBCA                     l11009:
 34055                           
 34056                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 34057                           ;stkvar	_timerVal @ sp[(0)+-2]
 34058  01BBCA  0EFF               	movlw	255
 34059  01BBCC  24E1               	addwf	fsr1l,w,c
 34060  01BBCE  6ED9               	movwf	fsr2l,c
 34061  01BBD0  0EFF               	movlw	255
 34062  01BBD2  20E2               	addwfc	fsr1h,w,c
 34063  01BBD4  6EDA               	movwf	fsr2h,c
 34064  01BBD6  50DF               	movf	indf2,w,c
 34065  01BBD8  6EA5               	movwf	165,c	;volatile
 34066                           
 34067                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 34068                           ;stkvar	_timerVal @ sp[(0)+-2]
 34069  01BBDA  0EFE               	movlw	-2
 34070  01BBDC  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34071  01BBE2                     l1190:
 34072                           
 34073                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34074  01BBE2  52E5               	movf	postdec1,f,c
 34075  01BBE4  52E5               	movf	postdec1,f,c
 34076  01BBE6  0012               	return		;funcret
 34077  01BBE8                     __end_of_TMR3_WriteTimer:
 34078                           	opt callstack 0
 34079                           
 34080 ;; *************** function _TMR3_CallBack *****************
 34081 ;; Defined at:
 34082 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 34083 ;; Parameters:    Size  Location     Type
 34084 ;;		None
 34085 ;; Auto vars:     Size  Location     Type
 34086 ;;		None
 34087 ;; Return value:  Size  Location     Type
 34088 ;;                  1  [STACK] void 
 34089 ;; Registers used:
 34090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34091 ;; Tracked objects:
 34092 ;;		On entry : 3F/0
 34093 ;;		On exit  : 0/0
 34094 ;;		Unchanged: 0/0
 34095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34100 ;;Total ram usage:        0 bytes
 34101 ;; Hardware stack levels used:    1
 34102 ;; Hardware stack levels required when called:   13
 34103 ;; This function calls:
 34104 ;;		Absolute function
 34105 ;;		_TMR3_DefaultInterruptHandler
 34106 ;;		_calc_bsoc
 34107 ;; This function is called by:
 34108 ;;		_TMR3_ISR
 34109 ;; This function uses a reentrant model
 34110 ;;
 34111                           
 34112                           	psect	text156
 34113  01C270                     __ptext156:
 34114                           	opt callstack 0
 34115  01C270                     _TMR3_CallBack:
 34116                           	opt callstack 2
 34117                           
 34118                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 34119                           
 34120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34121                           ;incstack = 0
 34122  01C270  0100               	movlb	0	; () banked
 34123  01C272  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34124  01C274  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34125  01C276  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34126  01C278  B4D8               	btfsc	status,2,c
 34127  01C27A  0012               	return	
 34128                           
 34129                           ; BSR set to: 0
 34130                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 34131  01C27C  D801               	call	u1263_28
 34132  01C27E  0012               	return	
 34133  01C280                     u1263_28:
 34134  01C280  0005               	push	
 34135  01C282  6EFA               	movwf	pclath,c
 34136  01C284  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34137  01C286  6EFD               	movwf	tosl,c
 34138  01C288  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34139  01C28A  6EFE               	movwf	tosh,c
 34140  01C28C  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34141  01C28E  6EFF               	movwf	tosu,c
 34142  01C290  50FA               	movf	pclath,w,c
 34143  01C292  0012               	return		;indir
 34144  01C294                     __end_of_TMR3_CallBack:
 34145                           	opt callstack 0
 34146                           
 34147 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34148 ;; Defined at:
 34149 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 34150 ;; Parameters:    Size  Location     Type
 34151 ;;		None
 34152 ;; Auto vars:     Size  Location     Type
 34153 ;;		None
 34154 ;; Return value:  Size  Location     Type
 34155 ;;                  1  [STACK] void 
 34156 ;; Registers used:
 34157 ;;		None
 34158 ;; Tracked objects:
 34159 ;;		On entry : 3F/0
 34160 ;;		On exit  : 0/0
 34161 ;;		Unchanged: 0/0
 34162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34167 ;;Total ram usage:        0 bytes
 34168 ;; Hardware stack levels used:    1
 34169 ;; Hardware stack levels required when called:    3
 34170 ;; This function calls:
 34171 ;;		Nothing
 34172 ;; This function is called by:
 34173 ;;		_TMR3_Initialize
 34174 ;;		_TMR3_CallBack
 34175 ;; This function uses a reentrant model
 34176 ;;
 34177                           
 34178                           	psect	text157
 34179  01C5F0                     __ptext157:
 34180                           	opt callstack 0
 34181  01C5F0                     _TMR3_DefaultInterruptHandler:
 34182                           	opt callstack 11
 34183                           
 34184                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34185                           
 34186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34187                           ;incstack = 0
 34188  01C5F0  0012               	return		;funcret
 34189  01C5F2                     __end_of_TMR3_DefaultInterruptHandler:
 34190                           	opt callstack 0
 34191                           
 34192 ;; *************** function _calc_bsoc *****************
 34193 ;; Defined at:
 34194 ;;		line 39 in file "bsoc.c"
 34195 ;; Parameters:    Size  Location     Type
 34196 ;;		None
 34197 ;; Auto vars:     Size  Location     Type
 34198 ;;  adj             4  [STACK] float 
 34199 ;;  log_ptr         2  [STACK] PTR unsigned char 
 34200 ;;		 -> port_data(512), 
 34201 ;; Return value:  Size  Location     Type
 34202 ;;                  1  [STACK] void 
 34203 ;; Registers used:
 34204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 34205 ;; Tracked objects:
 34206 ;;		On entry : 3F/0
 34207 ;;		On exit  : 5/1
 34208 ;;		Unchanged: 0/0
 34209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34214 ;;Total ram usage:        0 bytes
 34215 ;; Hardware stack levels used:    1
 34216 ;; Hardware stack levels required when called:   12
 34217 ;; This function calls:
 34218 ;;		_StartTimer
 34219 ;;		___asfladd
 34220 ;;		___fldiv
 34221 ;;		___flge
 34222 ;;		___flmul
 34223 ;;		___flneg
 34224 ;;		___fltol
 34225 ;;		_fabsf
 34226 ;;		_get_ac_charger_relay
 34227 ;;		_port_data_dma_ptr
 34228 ;;		_send_port_data_dma
 34229 ;;		_sprintf
 34230 ;;		_strlen
 34231 ;; This function is called by:
 34232 ;;		_init_bsoc
 34233 ;;		_TMR3_CallBack
 34234 ;; This function uses a reentrant model
 34235 ;;
 34236                           
 34237                           	psect	text158
 34238  013394                     __ptext158:
 34239                           	opt callstack 0
 34240  013394                     _calc_bsoc:
 34241                           	opt callstack 0
 34242                           
 34243                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34244  013394  0E06               	movlw	6
 34245  013396  26E1               	addwf	fsr1l,f,c
 34246  013398  0E00               	movlw	0
 34247  01339A  22E2               	addwfc	fsr1h,f,c
 34248                           
 34249                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 34250                           
 34251                           ;incstack = 0
 34252  01339C  0E00               	movlw	0
 34253  01339E  6E09               	movwf	(btemp+8)^0,c
 34254  0133A0  0E00               	movlw	0
 34255  0133A2  6E0A               	movwf	(btemp+9)^0,c
 34256  0133A4  0E80               	movlw	128
 34257  0133A6  6E0B               	movwf	(btemp+10)^0,c
 34258  0133A8  0E3F               	movlw	63
 34259  0133AA  6E0C               	movwf	(btemp+11)^0,c
 34260                           
 34261                           ;stkvar	_adj @ sp[(-6)+0]
 34262  0133AC  0EFA               	movlw	-6
 34263  0133AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 34264  0133B4  0EFB               	movlw	-5
 34265  0133B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34266  0133BC  0EFC               	movlw	-4
 34267  0133BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34268  0133C4  0EFD               	movlw	-3
 34269  0133C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 34270  0133CC  82BE               	bsf	190,1,c	;volatile
 34271                           
 34272                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 34273  0133CE  0E00               	movlw	0
 34274  0133D0  6EE6               	movwf	postinc1,c
 34275  0133D2  0E00               	movlw	0
 34276  0133D4  6EE6               	movwf	postinc1,c
 34277  0133D6  0E61               	movlw	97
 34278  0133D8  6EE6               	movwf	postinc1,c
 34279  0133DA  0E45               	movlw	69
 34280  0133DC  6EE6               	movwf	postinc1,c
 34281  0133DE  EE21  F343         	lfsr	2,_C+68	;volatile
 34282  0133E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34283  0133E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34284  0133EE  006F FF7B FFE6     	movff	postinc2,postinc1
 34285  0133F4  006F FF7B FFE6     	movff	postinc2,postinc1
 34286  0133FA  ECD8  F0A6         	call	___fldiv	;wreg free
 34287  0133FE  0060  F007  FFE6   	movff	btemp,postinc1
 34288  013404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34289  01340A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34290  013410  0060  F013  FFE6   	movff	btemp+3,postinc1
 34291  013416  0E8F               	movlw	low (_C+144)
 34292  013418  6EE6               	movwf	postinc1,c
 34293  01341A  0E07               	movlw	high (_C+144)
 34294  01341C  6EE6               	movwf	postinc1,c
 34295  01341E  ECC2  F0D8         	call	___asfladd	;wreg free
 34296                           
 34297                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 34298  013422  EE21  F38F         	lfsr	2,_C+144	;volatile
 34299  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 34300  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 34301  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 34302  013438  006F FF7B FFE6     	movff	postinc2,postinc1
 34303  01343E  EE21  F38B         	lfsr	2,_C+140	;volatile
 34304  013442  006F FF7B FFE6     	movff	postinc2,postinc1
 34305  013448  006F FF7B FFE6     	movff	postinc2,postinc1
 34306  01344E  006F FF7B FFE6     	movff	postinc2,postinc1
 34307  013454  006F FF7B FFE6     	movff	postinc2,postinc1
 34308  01345A  EC0A  F0C9         	call	___flge	;wreg free
 34309  01345E  B001               	btfsc	btemp& (0+255),0,c
 34310  013460  D00E               	goto	l13113
 34311                           
 34312                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 34313  013462  EE21  F38B         	lfsr	2,_C+140	;volatile
 34314  013466  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 34315  01346C  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 34316  013472  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 34317  013478  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 34318  01347E                     l13113:
 34319                           
 34320                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 34321  01347E  0ECD               	movlw	205
 34322  013480  6EE6               	movwf	postinc1,c
 34323  013482  0ECC               	movlw	204
 34324  013484  6EE6               	movwf	postinc1,c
 34325  013486  0ECC               	movlw	204
 34326  013488  6EE6               	movwf	postinc1,c
 34327  01348A  0E3D               	movlw	61
 34328  01348C  6EE6               	movwf	postinc1,c
 34329  01348E  EE21  F38F         	lfsr	2,_C+144	;volatile
 34330  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 34331  013498  006F FF7B FFE6     	movff	postinc2,postinc1
 34332  01349E  006F FF7B FFE6     	movff	postinc2,postinc1
 34333  0134A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34334  0134AA  EC0A  F0C9         	call	___flge	;wreg free
 34335  0134AE  B001               	btfsc	btemp& (0+255),0,c
 34336  0134B0  D010               	goto	l13117
 34337                           
 34338                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 34339  0134B2  0ECD               	movlw	205
 34340  0134B4  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 34341  0134BA  0ECC               	movlw	204
 34342  0134BC  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 34343  0134C2  0ECC               	movlw	204
 34344  0134C4  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 34345  0134CA  0E3D               	movlw	61
 34346  0134CC  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 34347  0134D2                     l13117:
 34348                           
 34349                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 34350  0134D2  EE21  F343         	lfsr	2,_C+68	;volatile
 34351  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 34352  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 34353  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34354  0134E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34355  0134EE  0E0A               	movlw	10
 34356  0134F0  6EE6               	movwf	postinc1,c
 34357  0134F2  0ED7               	movlw	215
 34358  0134F4  6EE6               	movwf	postinc1,c
 34359  0134F6  0E23               	movlw	35
 34360  0134F8  6EE6               	movwf	postinc1,c
 34361  0134FA  0E3C               	movlw	60
 34362  0134FC  6EE6               	movwf	postinc1,c
 34363  0134FE  EC0A  F0C9         	call	___flge	;wreg free
 34364  013502  B001               	btfsc	btemp& (0+255),0,c
 34365  013504  D01C               	goto	l13121
 34366                           
 34367                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 34368  013506  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 34369  01350C  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 34370  013512  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 34371  013518  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 34372                           
 34373                           ;stkvar	_adj @ sp[(-6)+0]
 34374  01351E  0EFA               	movlw	-6
 34375  013520  0060  F027  FFE3   	movff	btemp+8,plusw1
 34376  013526  0EFB               	movlw	-5
 34377  013528  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34378  01352E  0EFC               	movlw	-4
 34379  013530  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34380  013536  0EFD               	movlw	-3
 34381  013538  0060  F033  FFE3   	movff	btemp+11,plusw1
 34382  01353E                     l13121:
 34383                           
 34384                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 34385  01353E  0E0A               	movlw	10
 34386  013540  6EE6               	movwf	postinc1,c
 34387  013542  0ED7               	movlw	215
 34388  013544  6EE6               	movwf	postinc1,c
 34389  013546  0E23               	movlw	35
 34390  013548  6EE6               	movwf	postinc1,c
 34391  01354A  0E3C               	movlw	60
 34392  01354C  6EE6               	movwf	postinc1,c
 34393  01354E  EE21  F343         	lfsr	2,_C+68	;volatile
 34394  013552  006F FF7B FFE6     	movff	postinc2,postinc1
 34395  013558  006F FF7B FFE6     	movff	postinc2,postinc1
 34396  01355E  006F FF7B FFE6     	movff	postinc2,postinc1
 34397  013564  006F FF7B FFE6     	movff	postinc2,postinc1
 34398  01356A  EC0A  F0C9         	call	___flge	;wreg free
 34399  01356E  B001               	btfsc	btemp& (0+255),0,c
 34400  013570  D01C               	goto	l13125
 34401                           
 34402                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 34403  013572  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 34404  013578  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 34405  01357E  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 34406  013584  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 34407                           
 34408                           ;stkvar	_adj @ sp[(-6)+0]
 34409  01358A  0EFA               	movlw	-6
 34410  01358C  0060  F027  FFE3   	movff	btemp+8,plusw1
 34411  013592  0EFB               	movlw	-5
 34412  013594  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34413  01359A  0EFC               	movlw	-4
 34414  01359C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34415  0135A2  0EFD               	movlw	-3
 34416  0135A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 34417  0135AA                     l13125:
 34418                           
 34419                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 34420  0135AA  0E00               	movlw	0
 34421  0135AC  6EE6               	movwf	postinc1,c
 34422  0135AE  0E00               	movlw	0
 34423  0135B0  6EE6               	movwf	postinc1,c
 34424  0135B2  0E61               	movlw	97
 34425  0135B4  6EE6               	movwf	postinc1,c
 34426  0135B6  0E45               	movlw	69
 34427  0135B8  6EE6               	movwf	postinc1,c
 34428                           
 34429                           ;stkvar	_adj @ sp[(-10)+0]
 34430  0135BA  0EF6               	movlw	-10
 34431  0135BC  006F FF8F FFE6     	movff	plusw1,postinc1
 34432  0135C2  006F FF8F FFE6     	movff	plusw1,postinc1
 34433  0135C8  006F FF8F FFE6     	movff	plusw1,postinc1
 34434  0135CE  006F FF8F FFE6     	movff	plusw1,postinc1
 34435  0135D4  EE21  F343         	lfsr	2,_C+68	;volatile
 34436  0135D8  006F FF7B FFE6     	movff	postinc2,postinc1
 34437  0135DE  006F FF7B FFE6     	movff	postinc2,postinc1
 34438  0135E4  006F FF7B FFE6     	movff	postinc2,postinc1
 34439  0135EA  006F FF7B FFE6     	movff	postinc2,postinc1
 34440  0135F0  ECE5  F09E         	call	___flmul	;wreg free
 34441  0135F4  0060  F007  FFE6   	movff	btemp,postinc1
 34442  0135FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34443  013600  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34444  013606  0060  F013  FFE6   	movff	btemp+3,postinc1
 34445  01360C  ECD8  F0A6         	call	___fldiv	;wreg free
 34446  013610  0060  F007  FFE6   	movff	btemp,postinc1
 34447  013616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34448  01361C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34449  013622  0060  F013  FFE6   	movff	btemp+3,postinc1
 34450  013628  0E8F               	movlw	low (_C+144)
 34451  01362A  6EE6               	movwf	postinc1,c
 34452  01362C  0E07               	movlw	high (_C+144)
 34453  01362E  6EE6               	movwf	postinc1,c
 34454  013630  ECC2  F0D8         	call	___asfladd	;wreg free
 34455                           
 34456                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 34457  013634  EE21  F38F         	lfsr	2,_C+144	;volatile
 34458  013638  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34459  01363E  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34460  013644  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34461  01364A  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34462                           
 34463                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 34464  013650  EE21  F39B         	lfsr	2,_C+156	;volatile
 34465  013654  006F FF7B FFE6     	movff	postinc2,postinc1
 34466  01365A  006F FF7B FFE6     	movff	postinc2,postinc1
 34467  013660  006F FF7B FFE6     	movff	postinc2,postinc1
 34468  013666  006F FF7B FFE6     	movff	postinc2,postinc1
 34469  01366C  EE21  F38B         	lfsr	2,_C+140	;volatile
 34470  013670  006F FF7B FFE6     	movff	postinc2,postinc1
 34471  013676  006F FF7B FFE6     	movff	postinc2,postinc1
 34472  01367C  006F FF7B FFE6     	movff	postinc2,postinc1
 34473  013682  006F FF7B FFE6     	movff	postinc2,postinc1
 34474  013688  EC0A  F0C9         	call	___flge	;wreg free
 34475  01368C  B001               	btfsc	btemp& (0+255),0,c
 34476  01368E  D00E               	goto	l13133
 34477                           
 34478                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 34479  013690  EE21  F38B         	lfsr	2,_C+140	;volatile
 34480  013694  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34481  01369A  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34482  0136A0  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34483  0136A6  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34484  0136AC                     l13133:
 34485                           
 34486                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 34487  0136AC  0ECD               	movlw	205
 34488  0136AE  6EE6               	movwf	postinc1,c
 34489  0136B0  0ECC               	movlw	204
 34490  0136B2  6EE6               	movwf	postinc1,c
 34491  0136B4  0ECC               	movlw	204
 34492  0136B6  6EE6               	movwf	postinc1,c
 34493  0136B8  0E3D               	movlw	61
 34494  0136BA  6EE6               	movwf	postinc1,c
 34495  0136BC  EE21  F39B         	lfsr	2,_C+156	;volatile
 34496  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 34497  0136C6  006F FF7B FFE6     	movff	postinc2,postinc1
 34498  0136CC  006F FF7B FFE6     	movff	postinc2,postinc1
 34499  0136D2  006F FF7B FFE6     	movff	postinc2,postinc1
 34500  0136D8  EC0A  F0C9         	call	___flge	;wreg free
 34501  0136DC  B001               	btfsc	btemp& (0+255),0,c
 34502  0136DE  D010               	goto	l13137
 34503                           
 34504                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 34505  0136E0  0ECD               	movlw	205
 34506  0136E2  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 34507  0136E8  0ECC               	movlw	204
 34508  0136EA  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 34509  0136F0  0ECC               	movlw	204
 34510  0136F2  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 34511  0136F8  0E3D               	movlw	61
 34512  0136FA  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 34513  013700                     l13137:
 34514                           
 34515                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 34516  013700  0E00               	movlw	0
 34517  013702  6EE6               	movwf	postinc1,c
 34518  013704  0E00               	movlw	0
 34519  013706  6EE6               	movwf	postinc1,c
 34520  013708  0E61               	movlw	97
 34521  01370A  6EE6               	movwf	postinc1,c
 34522  01370C  0E45               	movlw	69
 34523  01370E  6EE6               	movwf	postinc1,c
 34524  013710  EE21  F347         	lfsr	2,_C+72	;volatile
 34525  013714  006F FF7B FFE6     	movff	postinc2,postinc1
 34526  01371A  006F FF7B FFE6     	movff	postinc2,postinc1
 34527  013720  006F FF7B FFE6     	movff	postinc2,postinc1
 34528  013726  006F FF7B FFE6     	movff	postinc2,postinc1
 34529  01372C  ECD8  F0A6         	call	___fldiv	;wreg free
 34530  013730  0060  F007  FFE6   	movff	btemp,postinc1
 34531  013736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34532  01373C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34533  013742  0060  F013  FFE6   	movff	btemp+3,postinc1
 34534  013748  0E93               	movlw	low (_C+148)
 34535  01374A  6EE6               	movwf	postinc1,c
 34536  01374C  0E07               	movlw	high (_C+148)
 34537  01374E  6EE6               	movwf	postinc1,c
 34538  013750  ECC2  F0D8         	call	___asfladd	;wreg free
 34539                           
 34540                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 34541  013754  0E00               	movlw	0
 34542  013756  6EE6               	movwf	postinc1,c
 34543  013758  0E00               	movlw	0
 34544  01375A  6EE6               	movwf	postinc1,c
 34545  01375C  0E61               	movlw	97
 34546  01375E  6EE6               	movwf	postinc1,c
 34547  013760  0E45               	movlw	69
 34548  013762  6EE6               	movwf	postinc1,c
 34549  013764  EE21  F37B         	lfsr	2,_C+124	;volatile
 34550  013768  006F FF7B FFE6     	movff	postinc2,postinc1
 34551  01376E  006F FF7B FFE6     	movff	postinc2,postinc1
 34552  013774  006F FF7B FFE6     	movff	postinc2,postinc1
 34553  01377A  006F FF7B FFE6     	movff	postinc2,postinc1
 34554  013780  ECD8  F0A6         	call	___fldiv	;wreg free
 34555  013784  0060  F007  FFE6   	movff	btemp,postinc1
 34556  01378A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34557  013790  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34558  013796  0060  F013  FFE6   	movff	btemp+3,postinc1
 34559  01379C  0EA7               	movlw	low (_C+168)
 34560  01379E  6EE6               	movwf	postinc1,c
 34561  0137A0  0E07               	movlw	high (_C+168)
 34562  0137A2  6EE6               	movwf	postinc1,c
 34563  0137A4  ECC2  F0D8         	call	___asfladd	;wreg free
 34564                           
 34565                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 34566  0137A8  0E00               	movlw	0
 34567  0137AA  6EE6               	movwf	postinc1,c
 34568  0137AC  0E00               	movlw	0
 34569  0137AE  6EE6               	movwf	postinc1,c
 34570  0137B0  0E61               	movlw	97
 34571  0137B2  6EE6               	movwf	postinc1,c
 34572  0137B4  0E45               	movlw	69
 34573  0137B6  6EE6               	movwf	postinc1,c
 34574  0137B8  EE21  F377         	lfsr	2,_C+120	;volatile
 34575  0137BC  006F FF7B FFE6     	movff	postinc2,postinc1
 34576  0137C2  006F FF7B FFE6     	movff	postinc2,postinc1
 34577  0137C8  006F FF7B FFE6     	movff	postinc2,postinc1
 34578  0137CE  006F FF7B FFE6     	movff	postinc2,postinc1
 34579  0137D4  ECD8  F0A6         	call	___fldiv	;wreg free
 34580  0137D8  0060  F007  FFE6   	movff	btemp,postinc1
 34581  0137DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34582  0137E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34583  0137EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 34584  0137F0  0EAB               	movlw	low (_C+172)
 34585  0137F2  6EE6               	movwf	postinc1,c
 34586  0137F4  0E07               	movlw	high (_C+172)
 34587  0137F6  6EE6               	movwf	postinc1,c
 34588  0137F8  ECC2  F0D8         	call	___asfladd	;wreg free
 34589                           
 34590                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 34591  0137FC  0E00               	movlw	0
 34592  0137FE  6EE6               	movwf	postinc1,c
 34593  013800  0E00               	movlw	0
 34594  013802  6EE6               	movwf	postinc1,c
 34595  013804  0E61               	movlw	97
 34596  013806  6EE6               	movwf	postinc1,c
 34597  013808  0E45               	movlw	69
 34598  01380A  6EE6               	movwf	postinc1,c
 34599  01380C  EE21  F373         	lfsr	2,_C+116	;volatile
 34600  013810  006F FF7B FFE6     	movff	postinc2,postinc1
 34601  013816  006F FF7B FFE6     	movff	postinc2,postinc1
 34602  01381C  006F FF7B FFE6     	movff	postinc2,postinc1
 34603  013822  006F FF7B FFE6     	movff	postinc2,postinc1
 34604  013828  ECD8  F0A6         	call	___fldiv	;wreg free
 34605  01382C  0060  F007  FFE6   	movff	btemp,postinc1
 34606  013832  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34607  013838  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34608  01383E  0060  F013  FFE6   	movff	btemp+3,postinc1
 34609  013844  0EAF               	movlw	low (_C+176)
 34610  013846  6EE6               	movwf	postinc1,c
 34611  013848  0E07               	movlw	high (_C+176)
 34612  01384A  6EE6               	movwf	postinc1,c
 34613  01384C  ECC2  F0D8         	call	___asfladd	;wreg free
 34614                           
 34615                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 34616  013850  EE21  F37F         	lfsr	2,_C+128	;volatile
 34617  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 34618  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 34619  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 34620  013866  006F FF7B FFE6     	movff	postinc2,postinc1
 34621  01386C  0E00               	movlw	0
 34622  01386E  6EE6               	movwf	postinc1,c
 34623  013870  0E00               	movlw	0
 34624  013872  6EE6               	movwf	postinc1,c
 34625  013874  0E00               	movlw	0
 34626  013876  6EE6               	movwf	postinc1,c
 34627  013878  0E00               	movlw	0
 34628  01387A  6EE6               	movwf	postinc1,c
 34629  01387C  EC0A  F0C9         	call	___flge	;wreg free
 34630  013880  B001               	btfsc	btemp& (0+255),0,c
 34631  013882  D02A               	goto	l13143
 34632                           
 34633                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 34634  013884  0E00               	movlw	0
 34635  013886  6EE6               	movwf	postinc1,c
 34636  013888  0E00               	movlw	0
 34637  01388A  6EE6               	movwf	postinc1,c
 34638  01388C  0E61               	movlw	97
 34639  01388E  6EE6               	movwf	postinc1,c
 34640  013890  0E45               	movlw	69
 34641  013892  6EE6               	movwf	postinc1,c
 34642  013894  EE21  F37F         	lfsr	2,_C+128	;volatile
 34643  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 34644  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 34645  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34646  0138AA  006F FF7B FFE6     	movff	postinc2,postinc1
 34647  0138B0  ECD8  F0A6         	call	___fldiv	;wreg free
 34648  0138B4  0060  F007  FFE6   	movff	btemp,postinc1
 34649  0138BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34650  0138C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34651  0138C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 34652  0138CC  0E9F               	movlw	low (_C+160)
 34653  0138CE  6EE6               	movwf	postinc1,c
 34654  0138D0  0E07               	movlw	high (_C+160)
 34655  0138D2  6EE6               	movwf	postinc1,c
 34656  0138D4  ECC2  F0D8         	call	___asfladd	;wreg free
 34657  0138D8                     l13143:
 34658                           
 34659                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 34660  0138D8  EE21  F37F         	lfsr	2,_C+128	;volatile
 34661  0138DC  0E03               	movlw	3
 34662  0138DE  AEDB               	btfss	plusw2,7,c
 34663  0138E0  D038               	goto	l13147
 34664                           
 34665                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 34666  0138E2  0E00               	movlw	0
 34667  0138E4  6EE6               	movwf	postinc1,c
 34668  0138E6  0E00               	movlw	0
 34669  0138E8  6EE6               	movwf	postinc1,c
 34670  0138EA  0E61               	movlw	97
 34671  0138EC  6EE6               	movwf	postinc1,c
 34672  0138EE  0E45               	movlw	69
 34673  0138F0  6EE6               	movwf	postinc1,c
 34674  0138F2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34675  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 34676  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 34677  013902  006F FF7B FFE6     	movff	postinc2,postinc1
 34678  013908  006F FF7B FFE6     	movff	postinc2,postinc1
 34679  01390E  ECD8  F0A6         	call	___fldiv	;wreg free
 34680  013912  0060  F007  FFE6   	movff	btemp,postinc1
 34681  013918  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34682  01391E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34683  013924  0060  F013  FFE6   	movff	btemp+3,postinc1
 34684  01392A  ECA6  F0D4         	call	_fabsf	;wreg free
 34685  01392E  0060  F007  FFE6   	movff	btemp,postinc1
 34686  013934  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34687  01393A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34688  013940  0060  F013  FFE6   	movff	btemp+3,postinc1
 34689  013946  0EA3               	movlw	low (_C+164)
 34690  013948  6EE6               	movwf	postinc1,c
 34691  01394A  0E07               	movlw	high (_C+164)
 34692  01394C  6EE6               	movwf	postinc1,c
 34693  01394E  ECC2  F0D8         	call	___asfladd	;wreg free
 34694  013952                     l13147:
 34695                           
 34696                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 34697  013952  0E00               	movlw	0
 34698  013954  6EE6               	movwf	postinc1,c
 34699  013956  0E00               	movlw	0
 34700  013958  6EE6               	movwf	postinc1,c
 34701  01395A  0EC8               	movlw	200
 34702  01395C  6EE6               	movwf	postinc1,c
 34703  01395E  0E42               	movlw	66
 34704  013960  6EE6               	movwf	postinc1,c
 34705  013962  EE21  F38B         	lfsr	2,_C+140	;volatile
 34706  013966  006F FF7B FFE6     	movff	postinc2,postinc1
 34707  01396C  006F FF7B FFE6     	movff	postinc2,postinc1
 34708  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 34709  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 34710  01397E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34711  013982  006F FF7B FFE6     	movff	postinc2,postinc1
 34712  013988  006F FF7B FFE6     	movff	postinc2,postinc1
 34713  01398E  006F FF7B FFE6     	movff	postinc2,postinc1
 34714  013994  006F FF7B FFE6     	movff	postinc2,postinc1
 34715  01399A  ECD8  F0A6         	call	___fldiv	;wreg free
 34716  01399E  0060  F007  FFE6   	movff	btemp,postinc1
 34717  0139A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34718  0139AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34719  0139B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 34720  0139B6  ECE5  F09E         	call	___flmul	;wreg free
 34721  0139BA  0060  F007  FFE6   	movff	btemp,postinc1
 34722  0139C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34723  0139C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34724  0139CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 34725  0139D2  EC51  F0C8         	call	___fltol	;wreg free
 34726  0139D6  0060  F004  F00B   	movff	btemp,btemp+10
 34727  0139DC  0060  F008  F00C   	movff	btemp+1,btemp+11
 34728  0139E2  0E01               	movlw	1
 34729  0139E4  260B               	addwf	(btemp+10)^0,f,c
 34730  0139E6  0E00               	movlw	0
 34731  0139E8  220C               	addwfc	(btemp+11)^0,f,c
 34732  0139EA  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 34733  0139F0  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 34734                           
 34735                           ;bsoc.c: 76:  if (C.soc > 100)
 34736  0139F6  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34737  0139FA  0E01               	movlw	1
 34738  0139FC  50DB               	movf	plusw2,w,c
 34739  0139FE  E104               	bnz	u1256_20
 34740  013A00  0E65               	movlw	101
 34741  013A02  5CDE               	subwf	postinc2,w,c
 34742  013A04  A0D8               	btfss	status,0,c
 34743  013A06  D008               	goto	l13153
 34744  013A08                     u1256_20:
 34745                           
 34746                           ;bsoc.c: 77:   C.soc = 100;
 34747  013A08  0E64               	movlw	100
 34748  013A0A  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 34749  013A10  0E00               	movlw	0
 34750  013A12  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 34751  013A18                     l13153:
 34752                           
 34753                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 34754  013A18  EE21  F343         	lfsr	2,_C+68	;volatile
 34755  013A1C  0E03               	movlw	3
 34756  013A1E  AEDB               	btfss	plusw2,7,c
 34757  013A20  D047               	goto	l2116
 34758                           
 34759                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 34760  013A22  EE21  F343         	lfsr	2,_C+68	;volatile
 34761  013A26  006F FF7B FFE6     	movff	postinc2,postinc1
 34762  013A2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34763  013A32  006F FF7B FFE6     	movff	postinc2,postinc1
 34764  013A38  006F FF7B FFE6     	movff	postinc2,postinc1
 34765  013A3E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34766  013A42  006F FF7B FFE6     	movff	postinc2,postinc1
 34767  013A48  006F FF7B FFE6     	movff	postinc2,postinc1
 34768  013A4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34769  013A54  006F FF7B FFE6     	movff	postinc2,postinc1
 34770  013A5A  ECD8  F0A6         	call	___fldiv	;wreg free
 34771  013A5E  0060  F007  FFE6   	movff	btemp,postinc1
 34772  013A64  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34773  013A6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34774  013A70  0060  F013  FFE6   	movff	btemp+3,postinc1
 34775  013A76  EC18  F0DC         	call	___flneg	;wreg free
 34776  013A7A  0060  F007  FFE6   	movff	btemp,postinc1
 34777  013A80  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34778  013A86  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34779  013A8C  0060  F013  FFE6   	movff	btemp+3,postinc1
 34780  013A92  EC51  F0C8         	call	___fltol	;wreg free
 34781  013A96  0060  F004  F00B   	movff	btemp,btemp+10
 34782  013A9C  0060  F008  F00C   	movff	btemp+1,btemp+11
 34783  013AA2  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 34784  013AA8  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 34785                           
 34786                           ;bsoc.c: 81:  } else {
 34787  013AAE  D008               	goto	l13157
 34788  013AB0                     l2116:
 34789                           
 34790                           ;bsoc.c: 82:   C.runtime = 99;
 34791  013AB0  0E63               	movlw	99
 34792  013AB2  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34793  013AB8  0E00               	movlw	0
 34794  013ABA  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34795  013AC0                     l13157:
 34796                           
 34797                           ;bsoc.c: 84:  if (C.runtime > 99)
 34798  013AC0  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34799  013AC4  0E01               	movlw	1
 34800  013AC6  50DB               	movf	plusw2,w,c
 34801  013AC8  E104               	bnz	u1258_20
 34802  013ACA  0E64               	movlw	100
 34803  013ACC  5CDE               	subwf	postinc2,w,c
 34804  013ACE  A0D8               	btfss	status,0,c
 34805  013AD0  D008               	goto	l13161
 34806  013AD2                     u1258_20:
 34807                           
 34808                           ;bsoc.c: 85:   C.runtime = 99;
 34809  013AD2  0E63               	movlw	99
 34810  013AD4  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34811  013ADA  0E00               	movlw	0
 34812  013ADC  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34813  013AE2                     l13161:
 34814                           
 34815                           ;bsoc.c: 87:  V.lowint_count++;
 34816  013AE2  0E01               	movlw	1
 34817  013AE4  0101               	movlb	1	; () banked
 34818  013AE6  27BA               	addwf	(_V+179)& (0+255),f,b	;volatile
 34819  013AE8  0E00               	movlw	0
 34820  013AEA  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34821  013AEC  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34822  013AEE  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34823                           
 34824                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 34825  013AF0  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 34826  013AF2  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 34827  013AF4  A4D8               	btfss	status,2,c
 34828  013AF6  D15B               	goto	l13173
 34829                           
 34830                           ; BSR set to: 1
 34831  013AF8  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 34832  013AFA  B4D8               	btfsc	status,2,c
 34833  013AFC  D158               	goto	l13173
 34834                           
 34835                           ; BSR set to: 1
 34836                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 34837  013AFE  ECBC  F0E2         	call	_port_data_dma_ptr	;wreg free
 34838                           
 34839                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34840  013B02  0EFF               	movlw	-1
 34841  013B04  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34842  013B0A  0EFE               	movlw	-2
 34843  013B0C  0060  F007  FFE3   	movff	btemp,plusw1
 34844                           
 34845                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34846  013B12  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34847  013B16  006F FF7B FFE6     	movff	postinc2,postinc1
 34848  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34849  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 34850  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 34851  013B2E  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34852  013B32  006F FF7B FFE6     	movff	postinc2,postinc1
 34853  013B38  006F FF7B FFE6     	movff	postinc2,postinc1
 34854  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34855  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
 34856  013B4A  EE21  F39B         	lfsr	2,_C+156	;volatile
 34857  013B4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34858  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 34859  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 34860  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 34861  013B66  EE22  F026         	lfsr	2,_C+295	;volatile
 34862  013B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 34863  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 34864  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 34865  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 34866  013B82  EE22  F022         	lfsr	2,_C+291	;volatile
 34867  013B86  006F FF7B FFE6     	movff	postinc2,postinc1
 34868  013B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 34869  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 34870  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 34871  013B9E  EE22  F021         	lfsr	2,_C+290	;volatile
 34872  013BA2  50DF               	movf	indf2,w,c
 34873  013BA4  6EE6               	movwf	postinc1,c
 34874  013BA6  0E00               	movlw	0
 34875  013BA8  6EE6               	movwf	postinc1,c
 34876  013BAA  ECA1  F0E2         	call	_get_ac_charger_relay	;wreg free
 34877  013BAE  5001               	movf	btemp^0,w,c
 34878  013BB0  6EE6               	movwf	postinc1,c
 34879  013BB2  0E00               	movlw	0
 34880  013BB4  6EE6               	movwf	postinc1,c
 34881  013BB6  EE21  F367         	lfsr	2,_C+104	;volatile
 34882  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 34883  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 34884  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 34885  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 34886  013BD2  EE21  F387         	lfsr	2,_C+136	;volatile
 34887  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 34888  013BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 34889  013BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34890  013BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34891  013BEE  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34892  013BF2  006F FF78  F00B    	movff	postinc2,btemp+10
 34893  013BF8  006F FF74  F00C    	movff	postdec2,btemp+11
 34894  013BFE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34895  013C04  0060  F033  FFE6   	movff	btemp+11,postinc1
 34896  013C0A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34897  013C0E  006F FF78  F00B    	movff	postinc2,btemp+10
 34898  013C14  006F FF74  F00C    	movff	postdec2,btemp+11
 34899  013C1A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34900  013C20  0060  F033  FFE6   	movff	btemp+11,postinc1
 34901  013C26  EE21  F393         	lfsr	2,_C+148	;volatile
 34902  013C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34903  013C30  006F FF7B FFE6     	movff	postinc2,postinc1
 34904  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 34905  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34906  013C42  EE21  F38F         	lfsr	2,_C+144	;volatile
 34907  013C46  006F FF7B FFE6     	movff	postinc2,postinc1
 34908  013C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34909  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 34910  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 34911  013C5E  EE21  F377         	lfsr	2,_C+120	;volatile
 34912  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 34913  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 34914  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34915  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 34916  013C7A  EE21  F373         	lfsr	2,_C+116	;volatile
 34917  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34918  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 34919  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34920  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 34921  013C96  EE21  F37B         	lfsr	2,_C+124	;volatile
 34922  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34923  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34924  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34925  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34926  013CB2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34927  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 34928  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 34929  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34930  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34931  013CCE  EE21  F363         	lfsr	2,_C+100	;volatile
 34932  013CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 34933  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 34934  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 34935  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34936  013CEA  EE21  F34B         	lfsr	2,_C+76	;volatile
 34937  013CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34938  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34939  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 34940  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 34941  013D06  EE21  F34F         	lfsr	2,_C+80	;volatile
 34942  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34943  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 34944  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 34945  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34946  013D22  EE21  F353         	lfsr	2,_C+84	;volatile
 34947  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 34948  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34949  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 34950  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 34951  013D3E  0060  F623  FFE6   	movff	_V+129,postinc1
 34952  013D44  0060  F627  FFE6   	movff	_V+130,postinc1
 34953  013D4A  0060  F62B  FFE6   	movff	_V+131,postinc1
 34954  013D50  0060  F62F  FFE6   	movff	_V+132,postinc1
 34955  013D56  0E31               	movlw	49
 34956  013D58  6EE6               	movwf	postinc1,c
 34957  013D5A  0E00               	movlw	0
 34958  013D5C  6EE6               	movwf	postinc1,c
 34959  013D5E  0ED1               	movlw	low STR_64
 34960  013D60  6EE6               	movwf	postinc1,c
 34961  013D62  0EFB               	movlw	high STR_64
 34962  013D64  6EE6               	movwf	postinc1,c
 34963                           
 34964                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34965  013D66  0EAA               	movlw	-86
 34966  013D68  006F FF8F FFE6     	movff	plusw1,postinc1
 34967  013D6E  006F FF8F FFE6     	movff	plusw1,postinc1
 34968  013D74  0E56               	movlw	86
 34969  013D76  6EE6               	movwf	postinc1,c
 34970  013D78  ECA2  F0CF         	call	_sprintf	;wreg free
 34971                           
 34972                           ; BSR set to: 0
 34973                           ;bsoc.c: 97:   StartTimer(TMR_DISPLAY, 125);
 34974  013D7C  0E7D               	movlw	125
 34975  013D7E  6EE6               	movwf	postinc1,c
 34976  013D80  0E00               	movlw	0
 34977  013D82  6EE6               	movwf	postinc1,c
 34978  013D84  0E0A               	movlw	10
 34979  013D86  6EE6               	movwf	postinc1,c
 34980  013D88  EC94  F0DD         	call	_StartTimer	;wreg free
 34981                           
 34982                           ;bsoc.c: 98:   send_port_data_dma(strlen((char*) log_ptr));
 34983                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34984  013D8C  0EFE               	movlw	-2
 34985  013D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 34986  013D94  006F FF8F FFE6     	movff	plusw1,postinc1
 34987  013D9A  EC4F  F0D6         	call	_strlen	;wreg free
 34988  013D9E  0060  F007  FFE6   	movff	btemp,postinc1
 34989  013DA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34990  013DAA  EC7E  F0DB         	call	_send_port_data_dma	;wreg free
 34991  013DAE                     l13173:
 34992                           
 34993                           ;bsoc.c: 100:  if (log_update_wait >= 10)
 34994  013DAE  0E09               	movlw	9
 34995  013DB0  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 34996  013DB2  D001               	goto	l2120
 34997                           
 34998                           ;bsoc.c: 101:   log_update_wait = 0;
 34999  013DB4  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 35000  013DB6                     l2120:
 35001                           
 35002                           ;bsoc.c: 103:  C.update = 0;
 35003  013DB6  0E00               	movlw	0
 35004  013DB8  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 35005                           
 35006                           ;bsoc.c: 105:  do { LATEbits.LATE1 = 0; } while(0);
 35007  013DBE  92BE               	bcf	190,1,c	;volatile
 35008                           
 35009                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 35010  013DC0  0EFA               	movlw	250
 35011  013DC2  26E1               	addwf	fsr1l,f,c
 35012  013DC4  0EFF               	movlw	255
 35013  013DC6  22E2               	addwfc	fsr1h,f,c
 35014  013DC8  0012               	return		;funcret
 35015  013DCA                     __end_of_calc_bsoc:
 35016                           	opt callstack 0
 35017                           
 35018 ;; *************** function _send_port_data_dma *****************
 35019 ;; Defined at:
 35020 ;;		line 398 in file "eadog.c"
 35021 ;; Parameters:    Size  Location     Type
 35022 ;;  dsize           2  [STACK] unsigned short 
 35023 ;; Auto vars:     Size  Location     Type
 35024 ;;		None
 35025 ;; Return value:  Size  Location     Type
 35026 ;;                  1  [STACK] void 
 35027 ;; Registers used:
 35028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 35029 ;; Tracked objects:
 35030 ;;		On entry : 0/0
 35031 ;;		On exit  : 3F/3B
 35032 ;;		Unchanged: 0/0
 35033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35038 ;;Total ram usage:        0 bytes
 35039 ;; Hardware stack levels used:    1
 35040 ;; Hardware stack levels required when called:    3
 35041 ;; This function calls:
 35042 ;;		Nothing
 35043 ;; This function is called by:
 35044 ;;		_calc_bsoc
 35045 ;; This function uses a reentrant model
 35046 ;;
 35047                           
 35048                           	psect	text159
 35049  01B6FC                     __ptext159:
 35050                           	opt callstack 0
 35051  01B6FC                     _send_port_data_dma:
 35052                           	opt callstack 10
 35053                           
 35054                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 35055                           ;stkvar	_dsize @ sp[(0)+-2]
 35056                           
 35057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35058                           ;incstack = 0
 35059  01B6FC  0EFE               	movlw	-2
 35060  01B6FE  04E3               	decf	plusw1,w,c
 35061  01B700  0EFF               	movlw	-1
 35062  01B702  006F FF8C  F001    	movff	plusw1,btemp
 35063  01B708  0E02               	movlw	2
 35064  01B70A  5A01               	subwfb	btemp^0,f,c
 35065  01B70C  A0D8               	btfss	status,0,c
 35066  01B70E  D00C               	goto	l10139
 35067                           
 35068                           ;eadog.c: 401:   dsize = 512;
 35069  01B710  0E00               	movlw	0
 35070  01B712  6E0B               	movwf	(btemp+10)^0,c
 35071  01B714  0E02               	movlw	2
 35072  01B716  6E0C               	movwf	(btemp+11)^0,c
 35073                           
 35074                           ;stkvar	_dsize @ sp[(0)+-2]
 35075  01B718  0EFE               	movlw	-2
 35076  01B71A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35077  01B720  0EFF               	movlw	-1
 35078  01B722  0060  F033  FFE3   	movff	btemp+11,plusw1
 35079  01B728                     l10139:
 35080                           
 35081                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 35082  01B728  013B               	movlb	59	; () banked
 35083  01B72A  9FDC               	bcf	220,7,b	;volatile
 35084                           
 35085                           ; BSR set to: 59
 35086                           ;eadog.c: 404:  DMA2SSZ = dsize;
 35087                           ;stkvar	_dsize @ sp[(0)+-2]
 35088  01B72C  0EFE               	movlw	-2
 35089  01B72E  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 35090  01B734  0EFF               	movlw	-1
 35091  01B736  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 35092                           
 35093                           ; BSR set to: 59
 35094                           ;eadog.c: 405:  DMA2DSZ = 1;
 35095  01B73C  0E00               	movlw	0
 35096  01B73E  6FCF               	movwf	207,b	;volatile
 35097  01B740  0E01               	movlw	1
 35098  01B742  6FCE               	movwf	206,b	;volatile
 35099                           
 35100                           ; BSR set to: 59
 35101                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 35102  01B744  8FDC               	bsf	220,7,b	;volatile
 35103                           
 35104                           ; BSR set to: 59
 35105                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 35106  01B746  8DDC               	bsf	220,6,b	;volatile
 35107                           
 35108                           ; BSR set to: 59
 35109                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 35110  01B748  52E5               	movf	postdec1,f,c
 35111  01B74A  52E5               	movf	postdec1,f,c
 35112  01B74C  0012               	return		;funcret
 35113  01B74E                     __end_of_send_port_data_dma:
 35114                           	opt callstack 0
 35115                           
 35116 ;; *************** function _port_data_dma_ptr *****************
 35117 ;; Defined at:
 35118 ;;		line 413 in file "eadog.c"
 35119 ;; Parameters:    Size  Location     Type
 35120 ;;		None
 35121 ;; Auto vars:     Size  Location     Type
 35122 ;;		None
 35123 ;; Return value:  Size  Location     Type
 35124 ;;                  2  [STACK] PTR unsigned char 
 35125 ;; Registers used:
 35126 ;;		wreg, status,2, status,0, btemp, btemp+1
 35127 ;; Tracked objects:
 35128 ;;		On entry : 3F/1
 35129 ;;		On exit  : 0/0
 35130 ;;		Unchanged: 0/0
 35131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35136 ;;Total ram usage:        0 bytes
 35137 ;; Hardware stack levels used:    1
 35138 ;; Hardware stack levels required when called:    3
 35139 ;; This function calls:
 35140 ;;		Nothing
 35141 ;; This function is called by:
 35142 ;;		_calc_bsoc
 35143 ;; This function uses a reentrant model
 35144 ;;
 35145                           
 35146                           	psect	text160
 35147  01C578                     __ptext160:
 35148                           	opt callstack 0
 35149  01C578                     _port_data_dma_ptr:
 35150                           	opt callstack 10
 35151                           
 35152                           ;eadog.c: 415:  return port_data;
 35153                           
 35154                           ; BSR set to: 59
 35155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35156                           ;incstack = 0
 35157  01C578  0EFF               	movlw	low _port_data
 35158  01C57A  6E01               	movwf	btemp^0,c
 35159  01C57C  0E04               	movlw	high _port_data
 35160  01C57E  6E02               	movwf	(btemp+1)^0,c
 35161                           
 35162                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35163  01C580  0012               	return		;funcret
 35164  01C582                     __end_of_port_data_dma_ptr:
 35165                           	opt callstack 0
 35166                           
 35167 ;; *************** function ___asfladd *****************
 35168 ;; Defined at:
 35169 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 35170 ;; Parameters:    Size  Location     Type
 35171 ;;  f1p             2  [STACK] PTR 
 35172 ;;		 -> C(299), 
 35173 ;;  f2              4  [STACK] PTR 
 35174 ;; Auto vars:     Size  Location     Type
 35175 ;;		None
 35176 ;; Return value:  Size  Location     Type
 35177 ;;                  4  [STACK] PTR 
 35178 ;; Registers used:
 35179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 35180 ;; Tracked objects:
 35181 ;;		On entry : 0/0
 35182 ;;		On exit  : 0/0
 35183 ;;		Unchanged: 0/0
 35184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35189 ;;Total ram usage:        0 bytes
 35190 ;; Hardware stack levels used:    1
 35191 ;; Hardware stack levels required when called:    4
 35192 ;; This function calls:
 35193 ;;		___fladd
 35194 ;; This function is called by:
 35195 ;;		_calc_bsoc
 35196 ;; This function uses a reentrant model
 35197 ;;
 35198                           
 35199                           	psect	text161
 35200  01B184                     __ptext161:
 35201                           	opt callstack 0
 35202  01B184                     ___asfladd:
 35203                           	opt callstack 9
 35204                           
 35205                           ;	Return value of ___asfladd is never used
 35206                           ;stkvar	_f2 @ sp[(0)+-6]
 35207                           
 35208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35209                           ;incstack = 0
 35210  01B184  0EFA               	movlw	-6
 35211  01B186  006F FF8F FFE6     	movff	plusw1,postinc1
 35212  01B18C  006F FF8F FFE6     	movff	plusw1,postinc1
 35213  01B192  006F FF8F FFE6     	movff	plusw1,postinc1
 35214  01B198  006F FF8F FFE6     	movff	plusw1,postinc1
 35215                           
 35216                           ;stkvar	_f1p @ sp[(-4)+-2]
 35217  01B19E  0EFA               	movlw	-6
 35218  01B1A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 35219  01B1A6  0EFB               	movlw	-5
 35220  01B1A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 35221  01B1AE  006F FF7B FFE6     	movff	postinc2,postinc1
 35222  01B1B4  006F FF7B FFE6     	movff	postinc2,postinc1
 35223  01B1BA  006F FF7B FFE6     	movff	postinc2,postinc1
 35224  01B1C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35225  01B1C6  ECFA  F0A2         	call	___fladd	;wreg free
 35226                           
 35227                           ;stkvar	_f1p @ sp[(0)+-2]
 35228  01B1CA  0EFE               	movlw	-2
 35229  01B1CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 35230  01B1D2  0EFF               	movlw	-1
 35231  01B1D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 35232  01B1DA  0060  F007  FFDE   	movff	btemp,postinc2
 35233  01B1E0  0060  F00B  FFDE   	movff	btemp+1,postinc2
 35234  01B1E6  0060  F00F  FFDE   	movff	btemp+2,postinc2
 35235  01B1EC  0060  F013  FFDE   	movff	btemp+3,postinc2
 35236                           
 35237                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 35238  01B1F2  0EFA               	movlw	250
 35239  01B1F4  26E1               	addwf	fsr1l,f,c
 35240  01B1F6  0EFF               	movlw	255
 35241  01B1F8  22E2               	addwfc	fsr1h,f,c
 35242  01B1FA  0012               	return		;funcret
 35243  01B1FC                     __end_of___asfladd:
 35244                           	opt callstack 0
 35245                           
 35246 ;; *************** function _INT0_ISR *****************
 35247 ;; Defined at:
 35248 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 35249 ;; Parameters:    Size  Location     Type
 35250 ;;		None
 35251 ;; Auto vars:     Size  Location     Type
 35252 ;;		None
 35253 ;; Return value:  Size  Location     Type
 35254 ;;                  1    wreg      void 
 35255 ;; Registers used:
 35256 ;;		wreg, status,2, status,0, pclath, tosl
 35257 ;; Tracked objects:
 35258 ;;		On entry : 0/0
 35259 ;;		On exit  : 0/0
 35260 ;;		Unchanged: 0/0
 35261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35266 ;;Total ram usage:        0 bytes
 35267 ;; Hardware stack levels used:    1
 35268 ;; Hardware stack levels required when called:    2
 35269 ;; This function calls:
 35270 ;;		_INT0_CallBack
 35271 ;; This function is called by:
 35272 ;;		Interrupt level 2
 35273 ;; This function uses a non-reentrant model
 35274 ;;
 35275                           
 35276                           	psect	text162
 35277  01C550                     __ptext162:
 35278                           	opt callstack 0
 35279  01C550                     _INT0_ISR:
 35280                           	opt callstack 2
 35281                           
 35282                           ;incstack = 0
 35283  01C550  EE14  F15E         	lfsr	1,___inthi_sp
 35284                           
 35285                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 35286  01C554  0139               	movlb	57	; () banked
 35287  01C556  91A1               	bcf	161,0,b	;volatile
 35288                           
 35289                           ; BSR set to: 57
 35290                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 35291  01C558  EC4A  F0E1         	call	_INT0_CallBack	;wreg free
 35292  01C55C  0011               	retfie		f
 35293  01C55E                     __end_of_INT0_ISR:
 35294                           	opt callstack 0
 35295                           
 35296 ;; *************** function _INT0_CallBack *****************
 35297 ;; Defined at:
 35298 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 35299 ;; Parameters:    Size  Location     Type
 35300 ;;		None
 35301 ;; Auto vars:     Size  Location     Type
 35302 ;;		None
 35303 ;; Return value:  Size  Location     Type
 35304 ;;                  1  [STACK] void 
 35305 ;; Registers used:
 35306 ;;		wreg, status,2, status,0, pclath, tosl
 35307 ;; Tracked objects:
 35308 ;;		On entry : 3F/39
 35309 ;;		On exit  : 0/0
 35310 ;;		Unchanged: 0/0
 35311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35316 ;;Total ram usage:        0 bytes
 35317 ;; Hardware stack levels used:    1
 35318 ;; Hardware stack levels required when called:    1
 35319 ;; This function calls:
 35320 ;;		Absolute function
 35321 ;;		_INT0_DefaultInterruptHandler
 35322 ;; This function is called by:
 35323 ;;		_INT0_ISR
 35324 ;; This function uses a reentrant model
 35325 ;;
 35326                           
 35327                           	psect	text163
 35328  01C294                     __ptext163:
 35329                           	opt callstack 0
 35330  01C294                     _INT0_CallBack:
 35331                           	opt callstack 2
 35332                           
 35333                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 35334                           
 35335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35336                           ;incstack = 0
 35337  01C294  0100               	movlb	0	; () banked
 35338  01C296  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35339  01C298  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35340  01C29A  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35341  01C29C  B4D8               	btfsc	status,2,c
 35342  01C29E  0012               	return	
 35343                           
 35344                           ; BSR set to: 0
 35345                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 35346  01C2A0  D801               	call	u1006_48
 35347  01C2A2  0012               	return	
 35348  01C2A4                     u1006_48:
 35349  01C2A4  0005               	push	
 35350  01C2A6  6EFA               	movwf	pclath,c
 35351  01C2A8  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35352  01C2AA  6EFD               	movwf	tosl,c
 35353  01C2AC  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35354  01C2AE  6EFE               	movwf	tosh,c
 35355  01C2B0  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35356  01C2B2  6EFF               	movwf	tosu,c
 35357  01C2B4  50FA               	movf	pclath,w,c
 35358  01C2B6  0012               	return		;indir
 35359  01C2B8                     __end_of_INT0_CallBack:
 35360                           	opt callstack 0
 35361                           
 35362 ;; *************** function _INT0_DefaultInterruptHandler *****************
 35363 ;; Defined at:
 35364 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 35365 ;; Parameters:    Size  Location     Type
 35366 ;;		None
 35367 ;; Auto vars:     Size  Location     Type
 35368 ;;		None
 35369 ;; Return value:  Size  Location     Type
 35370 ;;                  1  [STACK] void 
 35371 ;; Registers used:
 35372 ;;		None
 35373 ;; Tracked objects:
 35374 ;;		On entry : 3F/0
 35375 ;;		On exit  : 0/0
 35376 ;;		Unchanged: 0/0
 35377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35382 ;;Total ram usage:        0 bytes
 35383 ;; Hardware stack levels used:    1
 35384 ;; This function calls:
 35385 ;;		Nothing
 35386 ;; This function is called by:
 35387 ;;		_EXT_INT_Initialize
 35388 ;;		_INT0_CallBack
 35389 ;; This function uses a reentrant model
 35390 ;;
 35391                           
 35392                           	psect	text164
 35393  01C5F2                     __ptext164:
 35394                           	opt callstack 0
 35395  01C5F2                     _INT0_DefaultInterruptHandler:
 35396                           	opt callstack 2
 35397                           
 35398                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35399                           
 35400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35401                           ;incstack = 0
 35402  01C5F2  0012               	return		;funcret
 35403  01C5F4                     __end_of_INT0_DefaultInterruptHandler:
 35404                           	opt callstack 0
 35405                           
 35406 ;; *************** function _Default_ISR *****************
 35407 ;; Defined at:
 35408 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 35409 ;; Parameters:    Size  Location     Type
 35410 ;;		None
 35411 ;; Auto vars:     Size  Location     Type
 35412 ;;		None
 35413 ;; Return value:  Size  Location     Type
 35414 ;;                  1    wreg      void 
 35415 ;; Registers used:
 35416 ;;		None
 35417 ;; Tracked objects:
 35418 ;;		On entry : 0/0
 35419 ;;		On exit  : 0/0
 35420 ;;		Unchanged: 0/0
 35421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35426 ;;Total ram usage:        0 bytes
 35427 ;; Hardware stack levels used:    1
 35428 ;; This function calls:
 35429 ;;		Nothing
 35430 ;; This function is called by:
 35431 ;;		Interrupt level 2
 35432 ;; This function uses a non-reentrant model
 35433 ;;
 35434                           
 35435                           	psect	text165
 35436  01C5E8                     __ptext165:
 35437                           	opt callstack 0
 35438  01C5E8                     _Default_ISR:
 35439                           	opt callstack 4
 35440                           
 35441                           ;incstack = 0
 35442  01C5E8  EE14  F15E         	lfsr	1,___inthi_sp
 35443  01C5EC  0011               	retfie		f
 35444  01C5EE                     __end_of_Default_ISR:
 35445                           	opt callstack 0
 35446                           
 35447 ;; *************** function _ADCC_ISR *****************
 35448 ;; Defined at:
 35449 ;;		line 314 in file "mcc_generated_files/adcc.c"
 35450 ;; Parameters:    Size  Location     Type
 35451 ;;		None
 35452 ;; Auto vars:     Size  Location     Type
 35453 ;;		None
 35454 ;; Return value:  Size  Location     Type
 35455 ;;                  1    wreg      void 
 35456 ;; Registers used:
 35457 ;;		wreg, status,2, status,0, pclath, tosl
 35458 ;; Tracked objects:
 35459 ;;		On entry : 0/0
 35460 ;;		On exit  : 0/0
 35461 ;;		Unchanged: 0/0
 35462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35467 ;;Total ram usage:        0 bytes
 35468 ;; Hardware stack levels used:    1
 35469 ;; Hardware stack levels required when called:    1
 35470 ;; This function calls:
 35471 ;;		Absolute function
 35472 ;;		_ADCC_DefaultInterruptHandler
 35473 ;;		_adc_int_handler
 35474 ;; This function is called by:
 35475 ;;		Interrupt level 2
 35476 ;; This function uses a non-reentrant model
 35477 ;;
 35478                           
 35479                           	psect	text166
 35480  01BF28                     __ptext166:
 35481                           	opt callstack 0
 35482  01BF28                     _ADCC_ISR:
 35483                           	opt callstack 3
 35484                           
 35485                           ;incstack = 0
 35486  01BF28  EE14  F15E         	lfsr	1,___inthi_sp
 35487                           
 35488                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 35489  01BF2C  0139               	movlb	57	; () banked
 35490  01BF2E  95A1               	bcf	161,2,b	;volatile
 35491                           
 35492                           ; BSR set to: 57
 35493                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 35494  01BF30  0100               	movlb	0	; () banked
 35495  01BF32  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35496  01BF34  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35497  01BF36  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35498  01BF38  B4D8               	btfsc	status,2,c
 35499  01BF3A  0011               	retfie		f
 35500                           
 35501                           ; BSR set to: 0
 35502                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 35503  01BF3C  D801               	call	i2u1050_48
 35504  01BF3E  0011               	retfie		f
 35505  01BF40                     i2u1050_48:
 35506  01BF40  0005               	push	
 35507  01BF42  6EFA               	movwf	pclath,c
 35508  01BF44  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35509  01BF46  6EFD               	movwf	tosl,c
 35510  01BF48  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35511  01BF4A  6EFE               	movwf	tosh,c
 35512  01BF4C  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35513  01BF4E  6EFF               	movwf	tosu,c
 35514  01BF50  50FA               	movf	pclath,w,c
 35515  01BF52  0012               	return		;indir
 35516  01BF54                     __end_of_ADCC_ISR:
 35517                           	opt callstack 0
 35518                           
 35519 ;; *************** function _adc_int_t_handler *****************
 35520 ;; Defined at:
 35521 ;;		line 170 in file "daq.c"
 35522 ;; Parameters:    Size  Location     Type
 35523 ;;		None
 35524 ;; Auto vars:     Size  Location     Type
 35525 ;;		None
 35526 ;; Return value:  Size  Location     Type
 35527 ;;                  1  [STACK] void 
 35528 ;; Registers used:
 35529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 35530 ;; Tracked objects:
 35531 ;;		On entry : 3F/0
 35532 ;;		On exit  : 1/0
 35533 ;;		Unchanged: 0/0
 35534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35539 ;;Total ram usage:        0 bytes
 35540 ;; Hardware stack levels used:    1
 35541 ;; Hardware stack levels required when called:    1
 35542 ;; This function calls:
 35543 ;;		_ADCC_DischargeSampleCapacitor
 35544 ;;		_ADCC_StartConversion
 35545 ;; This function is called by:
 35546 ;;		_start_adc_scan
 35547 ;;		_ADCC_ThresholdISR
 35548 ;; This function uses a reentrant model
 35549 ;;
 35550                           
 35551                           	psect	text167
 35552  01B08C                     __ptext167:
 35553                           	opt callstack 0
 35554  01B08C                     _adc_int_t_handler:
 35555                           	opt callstack 2
 35556                           
 35557                           ;daq.c: 175:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 35558                           
 35559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35560                           ;incstack = 0
 35561  01B08C  013E               	movlb	62	; () banked
 35562  01B08E  51E6               	movf	230,w,b	;volatile
 35563  01B090  006F FB9C  F001    	movff	16103,btemp	;volatile
 35564  01B096  6A02               	clrf	(btemp+1)^0,c
 35565  01B098  0060  F004  F002   	movff	btemp,btemp+1
 35566  01B09E  6A01               	clrf	btemp^0,c
 35567  01B0A0  2601               	addwf	btemp^0,f,c
 35568  01B0A2  0E00               	movlw	0
 35569  01B0A4  2202               	addwfc	(btemp+1)^0,f,c
 35570  01B0A6  0100               	movlb	0	; () banked
 35571  01B0A8  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35572  01B0AA  0D02               	mullw	2
 35573  01B0AC  50F3               	movf	243,w,c
 35574  01B0AE  0FAF               	addlw	low _R
 35575  01B0B0  6ED9               	movwf	fsr2l,c
 35576  01B0B2  6ADA               	clrf	fsr2h,c
 35577  01B0B4  0060  F007  FFDE   	movff	btemp,postinc2
 35578  01B0BA  0060  F00B  FFDD   	movff	btemp+1,postdec2
 35579  01B0C0                     l11425:
 35580                           
 35581                           ;daq.c: 177:   if (++R.scan_index > 0XD) {
 35582  01B0C0  0100               	movlb	0	; () banked
 35583  01B0C2  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 35584  01B0C4  0E0D               	movlw	13
 35585  01B0C6  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 35586  01B0C8  D003               	goto	l11431
 35587                           
 35588                           ; BSR set to: 0
 35589                           ;daq.c: 178:    R.done = 1;
 35590  01B0CA  0E01               	movlw	1
 35591  01B0CC  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 35592  01B0CE  0012               	return	
 35593  01B0D0                     l11431:
 35594                           
 35595                           ; BSR set to: 0
 35596                           ;daq.c: 184:  } while (!((R.scan_select >> R.scan_index) &0x1));
 35597  01B0D0  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 35598  01B0D6  EE20  F0E2         	lfsr	2,_R+51	;volatile
 35599  01B0DA  006F FF78  F009    	movff	postinc2,btemp+8
 35600  01B0E0  006F FF74  F00A    	movff	postdec2,btemp+9
 35601  01B0E6  2A0C               	incf	(btemp+11)^0,f,c
 35602  01B0E8  D003               	goto	u1047_44
 35603  01B0EA                     u1047_45:
 35604  01B0EA  90D8               	bcf	status,0,c
 35605  01B0EC  320A               	rrcf	(btemp+9)^0,f,c
 35606  01B0EE  3209               	rrcf	(btemp+8)^0,f,c
 35607  01B0F0                     u1047_44:
 35608  01B0F0  2E0C               	decfsz	(btemp+11)^0,f,c
 35609  01B0F2  D7FB               	goto	u1047_45
 35610  01B0F4  A009               	btfss	(btemp+8)^0,0,c
 35611  01B0F6  D7E4               	goto	l11425
 35612                           
 35613                           ;daq.c: 185:  ADCC_DischargeSampleCapacitor();
 35614  01B0F8  ECD3  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 35615                           
 35616                           ; BSR set to: 62
 35617                           ;daq.c: 186:  ADCC_StartConversion(R.scan_index & 0xf);
 35618  01B0FC  0100               	movlb	0	; () banked
 35619  01B0FE  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35620  01B100  0B0F               	andlw	15
 35621  01B102  6EE6               	movwf	postinc1,c
 35622  01B104  EC6A  F0E2         	call	_ADCC_StartConversion	;wreg free
 35623                           
 35624                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35625  01B108  0012               	return		;funcret
 35626  01B10A                     __end_of_adc_int_t_handler:
 35627                           	opt callstack 0
 35628                           
 35629 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 35630 ;; Defined at:
 35631 ;;		line 339 in file "mcc_generated_files/adcc.c"
 35632 ;; Parameters:    Size  Location     Type
 35633 ;;		None
 35634 ;; Auto vars:     Size  Location     Type
 35635 ;;		None
 35636 ;; Return value:  Size  Location     Type
 35637 ;;                  1  [STACK] void 
 35638 ;; Registers used:
 35639 ;;		None
 35640 ;; Tracked objects:
 35641 ;;		On entry : 3F/0
 35642 ;;		On exit  : 0/0
 35643 ;;		Unchanged: 0/0
 35644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35649 ;;Total ram usage:        0 bytes
 35650 ;; Hardware stack levels used:    1
 35651 ;; This function calls:
 35652 ;;		Nothing
 35653 ;; This function is called by:
 35654 ;;		_ADCC_Initialize
 35655 ;;		_ADCC_ISR
 35656 ;;		_ADCC_ThresholdISR
 35657 ;; This function uses a reentrant model
 35658 ;;
 35659                           
 35660                           	psect	text168
 35661  01C5F4                     __ptext168:
 35662                           	opt callstack 0
 35663  01C5F4                     _ADCC_DefaultInterruptHandler:
 35664                           	opt callstack 3
 35665                           
 35666                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35667                           
 35668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35669                           ;incstack = 0
 35670  01C5F4  0012               	return		;funcret
 35671  01C5F6                     __end_of_ADCC_DefaultInterruptHandler:
 35672                           	opt callstack 0
 35673                           
 35674 ;; *************** function _adc_int_handler *****************
 35675 ;; Defined at:
 35676 ;;		line 160 in file "daq.c"
 35677 ;; Parameters:    Size  Location     Type
 35678 ;;		None
 35679 ;; Auto vars:     Size  Location     Type
 35680 ;;		None
 35681 ;; Return value:  Size  Location     Type
 35682 ;;                  1  [STACK] void 
 35683 ;; Registers used:
 35684 ;;		None
 35685 ;; Tracked objects:
 35686 ;;		On entry : 3F/0
 35687 ;;		On exit  : 0/0
 35688 ;;		Unchanged: 0/0
 35689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35694 ;;Total ram usage:        0 bytes
 35695 ;; Hardware stack levels used:    1
 35696 ;; This function calls:
 35697 ;;		Nothing
 35698 ;; This function is called by:
 35699 ;;		_start_adc_scan
 35700 ;;		_ADCC_ISR
 35701 ;; This function uses a reentrant model
 35702 ;;
 35703                           
 35704                           	psect	text169
 35705  01C5F6                     __ptext169:
 35706                           	opt callstack 0
 35707  01C5F6                     _adc_int_handler:
 35708                           	opt callstack 3
 35709                           
 35710                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35711                           
 35712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35713                           ;incstack = 0
 35714  01C5F6  0012               	return		;funcret
 35715  01C5F8                     __end_of_adc_int_handler:
 35716                           	opt callstack 0
 35717                           
 35718 ;; *************** function _ADCC_ThresholdISR *****************
 35719 ;; Defined at:
 35720 ;;		line 327 in file "mcc_generated_files/adcc.c"
 35721 ;; Parameters:    Size  Location     Type
 35722 ;;		None
 35723 ;; Auto vars:     Size  Location     Type
 35724 ;;		None
 35725 ;; Return value:  Size  Location     Type
 35726 ;;                  1    wreg      void 
 35727 ;; Registers used:
 35728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 35729 ;; Tracked objects:
 35730 ;;		On entry : 0/0
 35731 ;;		On exit  : 0/0
 35732 ;;		Unchanged: 0/0
 35733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35736 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35737 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35738 ;;Total ram usage:        5 bytes
 35739 ;; Hardware stack levels used:    1
 35740 ;; Hardware stack levels required when called:    2
 35741 ;; This function calls:
 35742 ;;		Absolute function
 35743 ;;		_ADCC_DefaultInterruptHandler
 35744 ;;		_adc_int_t_handler
 35745 ;; This function is called by:
 35746 ;;		Interrupt level 2
 35747 ;; This function uses a non-reentrant model
 35748 ;;
 35749                           
 35750                           	psect	text170
 35751  01B344                     __ptext170:
 35752                           	opt callstack 0
 35753  01B344                     _ADCC_ThresholdISR:
 35754                           	opt callstack 2
 35755                           
 35756                           ;incstack = 0
 35757  01B344  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 35758  01B34A  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 35759  01B350  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 35760  01B356  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 35761  01B35C  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 35762  01B362  EE14  F15E         	lfsr	1,___inthi_sp
 35763                           
 35764                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 35765  01B366  0139               	movlb	57	; () banked
 35766  01B368  97A1               	bcf	161,3,b	;volatile
 35767                           
 35768                           ; BSR set to: 57
 35769                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 35770  01B36A  0100               	movlb	0	; () banked
 35771  01B36C  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35772  01B36E  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35773  01B370  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35774  01B372  B4D8               	btfsc	status,2,c
 35775  01B374  D00C               	goto	i2u1052_49
 35776                           
 35777                           ; BSR set to: 0
 35778                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 35779  01B376  D801               	call	i2u1052_48
 35780  01B378  D00A               	goto	i2u1052_49
 35781  01B37A                     i2u1052_48:
 35782  01B37A  0005               	push	
 35783  01B37C  6EFA               	movwf	pclath,c
 35784  01B37E  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35785  01B380  6EFD               	movwf	tosl,c
 35786  01B382  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35787  01B384  6EFE               	movwf	tosh,c
 35788  01B386  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35789  01B388  6EFF               	movwf	tosu,c
 35790  01B38A  50FA               	movf	pclath,w,c
 35791  01B38C  0012               	return		;indir
 35792  01B38E                     i2u1052_49:
 35793  01B38E  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35794  01B394  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35795  01B39A  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35796  01B3A0  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35797  01B3A6  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35798  01B3AC  0011               	retfie		f
 35799  01B3AE                     __end_of_ADCC_ThresholdISR:
 35800                           	opt callstack 0
 35801                           
 35802 ;; *************** function _UART1_rx_vect_isr *****************
 35803 ;; Defined at:
 35804 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35805 ;; Parameters:    Size  Location     Type
 35806 ;;		None
 35807 ;; Auto vars:     Size  Location     Type
 35808 ;;		None
 35809 ;; Return value:  Size  Location     Type
 35810 ;;                  1    wreg      void 
 35811 ;; Registers used:
 35812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35813 ;; Tracked objects:
 35814 ;;		On entry : 0/0
 35815 ;;		On exit  : 0/0
 35816 ;;		Unchanged: 0/0
 35817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35822 ;;Total ram usage:        0 bytes
 35823 ;; Hardware stack levels used:    1
 35824 ;; Hardware stack levels required when called:    1
 35825 ;; This function calls:
 35826 ;;		Absolute function
 35827 ;;		_UART1_Receive_ISR
 35828 ;; This function is called by:
 35829 ;;		Interrupt level 2
 35830 ;; This function uses a non-reentrant model
 35831 ;;
 35832                           
 35833                           	psect	text171
 35834  01C18C                     __ptext171:
 35835                           	opt callstack 0
 35836  01C18C                     _UART1_rx_vect_isr:
 35837                           	opt callstack 3
 35838                           
 35839                           ;incstack = 0
 35840  01C18C  EE14  F15E         	lfsr	1,___inthi_sp
 35841                           
 35842                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35843  01C190  0100               	movlb	0	; () banked
 35844  01C192  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35845  01C194  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35846  01C196  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35847  01C198  B4D8               	btfsc	status,2,c
 35848  01C19A  0011               	retfie		f
 35849                           
 35850                           ; BSR set to: 0
 35851                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35852  01C19C  D801               	call	i2u1054_48
 35853  01C19E  0011               	retfie		f
 35854  01C1A0                     i2u1054_48:
 35855  01C1A0  0005               	push	
 35856  01C1A2  6EFA               	movwf	pclath,c
 35857  01C1A4  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35858  01C1A6  6EFD               	movwf	tosl,c
 35859  01C1A8  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35860  01C1AA  6EFE               	movwf	tosh,c
 35861  01C1AC  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35862  01C1AE  6EFF               	movwf	tosu,c
 35863  01C1B0  50FA               	movf	pclath,w,c
 35864  01C1B2  0012               	return		;indir
 35865  01C1B4                     __end_of_UART1_rx_vect_isr:
 35866                           	opt callstack 0
 35867                           
 35868 ;; *************** function _UART1_Receive_ISR *****************
 35869 ;; Defined at:
 35870 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35871 ;; Parameters:    Size  Location     Type
 35872 ;;		None
 35873 ;; Auto vars:     Size  Location     Type
 35874 ;;		None
 35875 ;; Return value:  Size  Location     Type
 35876 ;;                  1  [STACK] void 
 35877 ;; Registers used:
 35878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35879 ;; Tracked objects:
 35880 ;;		On entry : 3F/0
 35881 ;;		On exit  : 3F/0
 35882 ;;		Unchanged: 0/0
 35883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35888 ;;Total ram usage:        0 bytes
 35889 ;; Hardware stack levels used:    1
 35890 ;; This function calls:
 35891 ;;		Nothing
 35892 ;; This function is called by:
 35893 ;;		_UART1_Initialize
 35894 ;;		_UART1_rx_vect_isr
 35895 ;; This function uses a reentrant model
 35896 ;;
 35897                           
 35898                           	psect	text172
 35899  01C320                     __ptext172:
 35900                           	opt callstack 0
 35901  01C320                     _UART1_Receive_ISR:
 35902                           	opt callstack 3
 35903                           
 35904                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35905                           
 35906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35907                           ;incstack = 0
 35908  01C320  0ED9               	movlw	low _uart1RxBuffer
 35909  01C322  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 35910  01C324  6ED9               	movwf	fsr2l,c
 35911  01C326  6ADA               	clrf	fsr2h,c
 35912  01C328  0E01               	movlw	high _uart1RxBuffer
 35913  01C32A  22DA               	addwfc	fsr2h,f,c
 35914  01C32C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35915  01C332  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35916                           
 35917                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35918  01C334  0E07               	movlw	7
 35919  01C336  6447               	cpfsgt	_uart1RxHead^0,c
 35920  01C338  D001               	goto	l10953
 35921                           
 35922                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35923  01C33A  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35924  01C33C                     l10953:
 35925                           
 35926                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35927  01C33C  0100               	movlb	0	; () banked
 35928  01C33E  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35929                           
 35930                           ; BSR set to: 0
 35931                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35932  01C340  0012               	return		;funcret
 35933  01C342                     __end_of_UART1_Receive_ISR:
 35934                           	opt callstack 0
 35935                           
 35936 ;; *************** function _UART2_tx_vect_isr *****************
 35937 ;; Defined at:
 35938 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35939 ;; Parameters:    Size  Location     Type
 35940 ;;		None
 35941 ;; Auto vars:     Size  Location     Type
 35942 ;;		None
 35943 ;; Return value:  Size  Location     Type
 35944 ;;                  1    wreg      void 
 35945 ;; Registers used:
 35946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35947 ;; Tracked objects:
 35948 ;;		On entry : 0/0
 35949 ;;		On exit  : 0/0
 35950 ;;		Unchanged: 0/0
 35951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35956 ;;Total ram usage:        0 bytes
 35957 ;; Hardware stack levels used:    1
 35958 ;; Hardware stack levels required when called:    1
 35959 ;; This function calls:
 35960 ;;		Absolute function
 35961 ;;		_UART2_Transmit_ISR
 35962 ;; This function is called by:
 35963 ;;		Interrupt level 2
 35964 ;; This function uses a non-reentrant model
 35965 ;;
 35966                           
 35967                           	psect	text173
 35968  01C1B4                     __ptext173:
 35969                           	opt callstack 0
 35970  01C1B4                     _UART2_tx_vect_isr:
 35971                           	opt callstack 3
 35972                           
 35973                           ; BSR set to: 0
 35974                           ;incstack = 0
 35975  01C1B4  EE14  F15E         	lfsr	1,___inthi_sp
 35976                           
 35977                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35978  01C1B8  0100               	movlb	0	; () banked
 35979  01C1BA  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35980  01C1BC  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35981  01C1BE  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35982  01C1C0  B4D8               	btfsc	status,2,c
 35983  01C1C2  0011               	retfie		f
 35984                           
 35985                           ; BSR set to: 0
 35986                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35987  01C1C4  D801               	call	i2u1056_48
 35988  01C1C6  0011               	retfie		f
 35989  01C1C8                     i2u1056_48:
 35990  01C1C8  0005               	push	
 35991  01C1CA  6EFA               	movwf	pclath,c
 35992  01C1CC  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35993  01C1CE  6EFD               	movwf	tosl,c
 35994  01C1D0  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35995  01C1D2  6EFE               	movwf	tosh,c
 35996  01C1D4  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35997  01C1D6  6EFF               	movwf	tosu,c
 35998  01C1D8  50FA               	movf	pclath,w,c
 35999  01C1DA  0012               	return		;indir
 36000  01C1DC                     __end_of_UART2_tx_vect_isr:
 36001                           	opt callstack 0
 36002                           
 36003 ;; *************** function _UART2_Transmit_ISR *****************
 36004 ;; Defined at:
 36005 ;;		line 213 in file "mcc_generated_files/uart2.c"
 36006 ;; Parameters:    Size  Location     Type
 36007 ;;		None
 36008 ;; Auto vars:     Size  Location     Type
 36009 ;;		None
 36010 ;; Return value:  Size  Location     Type
 36011 ;;                  1  [STACK] void 
 36012 ;; Registers used:
 36013 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36014 ;; Tracked objects:
 36015 ;;		On entry : 3F/0
 36016 ;;		On exit  : 3B/39
 36017 ;;		Unchanged: 0/0
 36018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36023 ;;Total ram usage:        0 bytes
 36024 ;; Hardware stack levels used:    1
 36025 ;; This function calls:
 36026 ;;		Nothing
 36027 ;; This function is called by:
 36028 ;;		_UART2_Initialize
 36029 ;;		_UART2_tx_vect_isr
 36030 ;; This function uses a reentrant model
 36031 ;;
 36032                           
 36033                           	psect	text174
 36034  01BF54                     __ptext174:
 36035                           	opt callstack 0
 36036  01BF54                     _UART2_Transmit_ISR:
 36037                           	opt callstack 3
 36038                           
 36039                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 36040                           
 36041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36042                           ;incstack = 0
 36043  01BF54  0E40               	movlw	64
 36044  01BF56  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 36045  01BF58  D010               	goto	l673
 36046                           
 36047                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 36048  01BF5A  0E00               	movlw	low _uart2TxBuffer
 36049  01BF5C  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 36050  01BF5E  6ED9               	movwf	fsr2l,c
 36051  01BF60  6ADA               	clrf	fsr2h,c
 36052  01BF62  0E03               	movlw	high _uart2TxBuffer
 36053  01BF64  22DA               	addwfc	fsr2h,f,c
 36054  01BF66  50DF               	movf	indf2,w,c
 36055  01BF68  013D               	movlb	61	; () banked
 36056  01BF6A  6FD2               	movwf	210,b	;volatile
 36057                           
 36058                           ; BSR set to: 61
 36059  01BF6C  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 36060                           
 36061                           ; BSR set to: 61
 36062                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 36063  01BF6E  0E3F               	movlw	63
 36064  01BF70  6446               	cpfsgt	_uart2TxTail^0,c
 36065  01BF72  D001               	goto	l10965
 36066                           
 36067                           ; BSR set to: 61
 36068                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 36069  01BF74  6A46               	clrf	_uart2TxTail^0,c	;volatile
 36070  01BF76                     l10965:
 36071                           
 36072                           ; BSR set to: 61
 36073                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 36074  01BF76  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 36075                           
 36076                           ;mcc_generated_files/uart2.c: 224:     }
 36077  01BF78  0012               	return	
 36078  01BF7A                     l673:
 36079                           
 36080                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 36081  01BF7A  0139               	movlb	57	; () banked
 36082  01BF7C  9796               	bcf	150,3,b	;volatile
 36083                           
 36084                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 36085  01BF7E  0012               	return		;funcret
 36086  01BF80                     __end_of_UART2_Transmit_ISR:
 36087                           	opt callstack 0
 36088                           
 36089 ;; *************** function _UART2_rx_vect_isr *****************
 36090 ;; Defined at:
 36091 ;;		line 203 in file "mcc_generated_files/uart2.c"
 36092 ;; Parameters:    Size  Location     Type
 36093 ;;		None
 36094 ;; Auto vars:     Size  Location     Type
 36095 ;;		None
 36096 ;; Return value:  Size  Location     Type
 36097 ;;                  1    wreg      void 
 36098 ;; Registers used:
 36099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36100 ;; Tracked objects:
 36101 ;;		On entry : 0/0
 36102 ;;		On exit  : 0/0
 36103 ;;		Unchanged: 0/0
 36104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36109 ;;Total ram usage:        0 bytes
 36110 ;; Hardware stack levels used:    1
 36111 ;; Hardware stack levels required when called:    1
 36112 ;; This function calls:
 36113 ;;		Absolute function
 36114 ;;		_UART2_Receive_ISR
 36115 ;; This function is called by:
 36116 ;;		Interrupt level 2
 36117 ;; This function uses a non-reentrant model
 36118 ;;
 36119                           
 36120                           	psect	text175
 36121  01C1DC                     __ptext175:
 36122                           	opt callstack 0
 36123  01C1DC                     _UART2_rx_vect_isr:
 36124                           	opt callstack 3
 36125                           
 36126                           ;incstack = 0
 36127  01C1DC  EE14  F15E         	lfsr	1,___inthi_sp
 36128                           
 36129                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 36130  01C1E0  0100               	movlb	0	; () banked
 36131  01C1E2  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36132  01C1E4  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36133  01C1E6  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36134  01C1E8  B4D8               	btfsc	status,2,c
 36135  01C1EA  0011               	retfie		f
 36136                           
 36137                           ; BSR set to: 0
 36138                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 36139  01C1EC  D801               	call	i2u1058_48
 36140  01C1EE  0011               	retfie		f
 36141  01C1F0                     i2u1058_48:
 36142  01C1F0  0005               	push	
 36143  01C1F2  6EFA               	movwf	pclath,c
 36144  01C1F4  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36145  01C1F6  6EFD               	movwf	tosl,c
 36146  01C1F8  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36147  01C1FA  6EFE               	movwf	tosh,c
 36148  01C1FC  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36149  01C1FE  6EFF               	movwf	tosu,c
 36150  01C200  50FA               	movf	pclath,w,c
 36151  01C202  0012               	return		;indir
 36152  01C204                     __end_of_UART2_rx_vect_isr:
 36153                           	opt callstack 0
 36154                           
 36155 ;; *************** function _UART2_Receive_ISR *****************
 36156 ;; Defined at:
 36157 ;;		line 233 in file "mcc_generated_files/uart2.c"
 36158 ;; Parameters:    Size  Location     Type
 36159 ;;		None
 36160 ;; Auto vars:     Size  Location     Type
 36161 ;;		None
 36162 ;; Return value:  Size  Location     Type
 36163 ;;                  1  [STACK] void 
 36164 ;; Registers used:
 36165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36166 ;; Tracked objects:
 36167 ;;		On entry : 3F/0
 36168 ;;		On exit  : 3F/0
 36169 ;;		Unchanged: 0/0
 36170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36175 ;;Total ram usage:        0 bytes
 36176 ;; Hardware stack levels used:    1
 36177 ;; This function calls:
 36178 ;;		Nothing
 36179 ;; This function is called by:
 36180 ;;		_UART2_Initialize
 36181 ;;		_UART2_rx_vect_isr
 36182 ;; This function uses a reentrant model
 36183 ;;
 36184                           
 36185                           	psect	text176
 36186  01C362                     __ptext176:
 36187                           	opt callstack 0
 36188  01C362                     _UART2_Receive_ISR:
 36189                           	opt callstack 3
 36190                           
 36191                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 36192                           
 36193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36194                           ;incstack = 0
 36195  01C362  0E00               	movlw	low _uart2RxBuffer
 36196  01C364  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 36197  01C366  6ED9               	movwf	fsr2l,c
 36198  01C368  6ADA               	clrf	fsr2h,c
 36199  01C36A  0E04               	movlw	high _uart2RxBuffer
 36200  01C36C  22DA               	addwfc	fsr2h,f,c
 36201  01C36E  006F F743 FFDF     	movff	15824,indf2	;volatile
 36202  01C374  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 36203                           
 36204                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 36205  01C376  2844               	incf	_uart2RxHead^0,w,c
 36206  01C378  B4D8               	btfsc	status,2,c
 36207                           
 36208                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 36209  01C37A  6A44               	clrf	_uart2RxHead^0,c	;volatile
 36210                           
 36211                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 36212  01C37C  0100               	movlb	0	; () banked
 36213  01C37E  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 36214                           
 36215                           ; BSR set to: 0
 36216                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36217  01C380  0012               	return		;funcret
 36218  01C382                     __end_of_UART2_Receive_ISR:
 36219                           	opt callstack 0
 36220                           
 36221 ;; *************** function _TMR6_ISR *****************
 36222 ;; Defined at:
 36223 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 36224 ;; Parameters:    Size  Location     Type
 36225 ;;		None
 36226 ;; Auto vars:     Size  Location     Type
 36227 ;;		None
 36228 ;; Return value:  Size  Location     Type
 36229 ;;                  1    wreg      void 
 36230 ;; Registers used:
 36231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36232 ;; Tracked objects:
 36233 ;;		On entry : 0/0
 36234 ;;		On exit  : 0/0
 36235 ;;		Unchanged: 0/0
 36236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36239 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36241 ;;Total ram usage:        1 bytes
 36242 ;; Hardware stack levels used:    1
 36243 ;; Hardware stack levels required when called:    2
 36244 ;; This function calls:
 36245 ;;		_TMR6_CallBack
 36246 ;; This function is called by:
 36247 ;;		Interrupt level 2
 36248 ;; This function uses a non-reentrant model
 36249 ;;
 36250                           
 36251                           	psect	text177
 36252  01C434                     __ptext177:
 36253                           	opt callstack 0
 36254  01C434                     _TMR6_ISR:
 36255                           	opt callstack 2
 36256                           
 36257                           ; BSR set to: 0
 36258                           ;incstack = 0
 36259  01C434  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 36260  01C43A  EE14  F15E         	lfsr	1,___inthi_sp
 36261                           
 36262                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 36263  01C43E  0139               	movlb	57	; () banked
 36264  01C440  91A9               	bcf	169,0,b	;volatile
 36265                           
 36266                           ; BSR set to: 57
 36267                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 36268  01C442  EC5C  F0E1         	call	_TMR6_CallBack	;wreg free
 36269  01C446  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 36270  01C44C  0011               	retfie		f
 36271  01C44E                     __end_of_TMR6_ISR:
 36272                           	opt callstack 0
 36273                           
 36274 ;; *************** function _TMR6_CallBack *****************
 36275 ;; Defined at:
 36276 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 36277 ;; Parameters:    Size  Location     Type
 36278 ;;		None
 36279 ;; Auto vars:     Size  Location     Type
 36280 ;;		None
 36281 ;; Return value:  Size  Location     Type
 36282 ;;                  1  [STACK] void 
 36283 ;; Registers used:
 36284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36285 ;; Tracked objects:
 36286 ;;		On entry : 3F/39
 36287 ;;		On exit  : 0/0
 36288 ;;		Unchanged: 0/0
 36289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36294 ;;Total ram usage:        0 bytes
 36295 ;; Hardware stack levels used:    1
 36296 ;; Hardware stack levels required when called:    1
 36297 ;; This function calls:
 36298 ;;		Absolute function
 36299 ;;		_TMR6_DefaultInterruptHandler
 36300 ;; This function is called by:
 36301 ;;		_TMR6_ISR
 36302 ;; This function uses a reentrant model
 36303 ;;
 36304                           
 36305                           	psect	text178
 36306  01C2B8                     __ptext178:
 36307                           	opt callstack 0
 36308  01C2B8                     _TMR6_CallBack:
 36309                           	opt callstack 2
 36310                           
 36311                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 36312                           
 36313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36314                           ;incstack = 0
 36315  01C2B8  0100               	movlb	0	; () banked
 36316  01C2BA  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36317  01C2BC  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36318  01C2BE  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36319  01C2C0  B4D8               	btfsc	status,2,c
 36320  01C2C2  0012               	return	
 36321                           
 36322                           ; BSR set to: 0
 36323                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 36324  01C2C4  D801               	call	u1014_48
 36325  01C2C6  0012               	return	
 36326  01C2C8                     u1014_48:
 36327  01C2C8  0005               	push	
 36328  01C2CA  6EFA               	movwf	pclath,c
 36329  01C2CC  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36330  01C2CE  6EFD               	movwf	tosl,c
 36331  01C2D0  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36332  01C2D2  6EFE               	movwf	tosh,c
 36333  01C2D4  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36334  01C2D6  6EFF               	movwf	tosu,c
 36335  01C2D8  50FA               	movf	pclath,w,c
 36336  01C2DA  0012               	return		;indir
 36337  01C2DC                     __end_of_TMR6_CallBack:
 36338                           	opt callstack 0
 36339                           
 36340 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 36341 ;; Defined at:
 36342 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 36343 ;; Parameters:    Size  Location     Type
 36344 ;;		None
 36345 ;; Auto vars:     Size  Location     Type
 36346 ;;  i               1  [STACK] unsigned char 
 36347 ;; Return value:  Size  Location     Type
 36348 ;;                  1  [STACK] void 
 36349 ;; Registers used:
 36350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36351 ;; Tracked objects:
 36352 ;;		On entry : 3F/0
 36353 ;;		On exit  : 0/0
 36354 ;;		Unchanged: 0/0
 36355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36360 ;;Total ram usage:        0 bytes
 36361 ;; Hardware stack levels used:    1
 36362 ;; This function calls:
 36363 ;;		Nothing
 36364 ;; This function is called by:
 36365 ;;		_TMR6_Initialize
 36366 ;;		_TMR6_CallBack
 36367 ;; This function uses a reentrant model
 36368 ;;
 36369                           
 36370                           	psect	text179
 36371  01B74E                     __ptext179:
 36372                           	opt callstack 0
 36373  01B74E                     _TMR6_DefaultInterruptHandler:
 36374                           	opt callstack 0
 36375                           
 36376                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36377  01B74E  52E6               	movf	postinc1,f,c
 36378                           
 36379                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 36380                           ;stkvar	_i @ sp[(-1)+0]
 36381                           
 36382                           ;incstack = 0
 36383  01B750  0EFF               	movlw	-1
 36384  01B752  6AE3               	clrf	plusw1,c
 36385  01B754                     l10529:
 36386                           
 36387                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 36388                           ;stkvar	_i @ sp[(-1)+0]
 36389  01B754  0EFF               	movlw	-1
 36390  01B756  50E3               	movf	plusw1,w,c
 36391  01B758  0D02               	mullw	2
 36392  01B75A  0E7D               	movlw	low _tickCount
 36393  01B75C  24F3               	addwf	243,w,c
 36394  01B75E  6ED9               	movwf	fsr2l,c
 36395  01B760  0E02               	movlw	high _tickCount
 36396  01B762  20F4               	addwfc	prodh,w,c
 36397  01B764  6EDA               	movwf	fsr2h,c
 36398  01B766  50DE               	movf	postinc2,w,c
 36399  01B768  10DE               	iorwf	postinc2,w,c
 36400  01B76A  B4D8               	btfsc	status,2,c
 36401  01B76C  D00C               	goto	l10533
 36402                           
 36403                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 36404                           ;stkvar	_i @ sp[(-1)+0]
 36405  01B76E  0EFF               	movlw	-1
 36406  01B770  50E3               	movf	plusw1,w,c
 36407  01B772  0D02               	mullw	2
 36408  01B774  0E7D               	movlw	low _tickCount
 36409  01B776  24F3               	addwf	243,w,c
 36410  01B778  6ED9               	movwf	fsr2l,c
 36411  01B77A  0E02               	movlw	high _tickCount
 36412  01B77C  20F4               	addwfc	prodh,w,c
 36413  01B77E  6EDA               	movwf	fsr2h,c
 36414  01B780  06DE               	decf	postinc2,f,c
 36415  01B782  0E00               	movlw	0
 36416  01B784  5ADD               	subwfb	postdec2,f,c
 36417  01B786                     l10533:
 36418                           
 36419                           ;mcc_generated_files/tmr6.c: 207:  }
 36420                           ;stkvar	_i @ sp[(-1)+0]
 36421  01B786  0EFF               	movlw	-1
 36422  01B788  2AE3               	incf	plusw1,f,c
 36423                           
 36424                           ;stkvar	_i @ sp[(-1)+0]
 36425  01B78A  0EFF               	movlw	-1
 36426  01B78C  006F FF8C  F001    	movff	plusw1,btemp
 36427  01B792  0E0C               	movlw	12
 36428  01B794  6401               	cpfsgt	btemp^0,c
 36429  01B796  D7DE               	goto	l10529
 36430                           
 36431                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36432  01B798  52E5               	movf	postdec1,f,c
 36433  01B79A  0012               	return		;funcret
 36434  01B79C                     __end_of_TMR6_DefaultInterruptHandler:
 36435                           	opt callstack 0
 36436                           
 36437 ;; *************** function _DMA1_DMASCNT_ISR *****************
 36438 ;; Defined at:
 36439 ;;		line 126 in file "mcc_generated_files/dma1.c"
 36440 ;; Parameters:    Size  Location     Type
 36441 ;;		None
 36442 ;; Auto vars:     Size  Location     Type
 36443 ;;		None
 36444 ;; Return value:  Size  Location     Type
 36445 ;;                  1    wreg      void 
 36446 ;; Registers used:
 36447 ;;		None
 36448 ;; Tracked objects:
 36449 ;;		On entry : 0/0
 36450 ;;		On exit  : 3F/1
 36451 ;;		Unchanged: 0/0
 36452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36457 ;;Total ram usage:        0 bytes
 36458 ;; Hardware stack levels used:    1
 36459 ;; This function calls:
 36460 ;;		Nothing
 36461 ;; This function is called by:
 36462 ;;		Interrupt level 2
 36463 ;; This function uses a non-reentrant model
 36464 ;;
 36465                           
 36466                           	psect	text180
 36467  01C560                     __ptext180:
 36468                           	opt callstack 0
 36469  01C560                     _DMA1_DMASCNT_ISR:
 36470                           	opt callstack 4
 36471                           
 36472                           ;incstack = 0
 36473  01C560  EE14  F15E         	lfsr	1,___inthi_sp
 36474                           
 36475                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 36476  01C564  0139               	movlb	57	; () banked
 36477  01C566  91A2               	bcf	162,0,b	;volatile
 36478                           
 36479                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 36480  01C568  0101               	movlb	1	; () banked
 36481  01C56A  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 36482                           
 36483                           ; BSR set to: 1
 36484  01C56C  0011               	retfie		f
 36485  01C56E                     __end_of_DMA1_DMASCNT_ISR:
 36486                           	opt callstack 0
 36487                           
 36488 ;; *************** function _DMA1_DMADCNT_ISR *****************
 36489 ;; Defined at:
 36490 ;;		line 133 in file "mcc_generated_files/dma1.c"
 36491 ;; Parameters:    Size  Location     Type
 36492 ;;		None
 36493 ;; Auto vars:     Size  Location     Type
 36494 ;;		None
 36495 ;; Return value:  Size  Location     Type
 36496 ;;                  1    wreg      void 
 36497 ;; Registers used:
 36498 ;;		None
 36499 ;; Tracked objects:
 36500 ;;		On entry : 0/0
 36501 ;;		On exit  : 3F/39
 36502 ;;		Unchanged: 0/0
 36503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36508 ;;Total ram usage:        0 bytes
 36509 ;; Hardware stack levels used:    1
 36510 ;; This function calls:
 36511 ;;		Nothing
 36512 ;; This function is called by:
 36513 ;;		Interrupt level 2
 36514 ;; This function uses a non-reentrant model
 36515 ;;
 36516                           
 36517                           	psect	text181
 36518  01C584                     __ptext181:
 36519                           	opt callstack 0
 36520  01C584                     _DMA1_DMADCNT_ISR:
 36521                           	opt callstack 4
 36522                           
 36523                           ; BSR set to: 1
 36524                           ;incstack = 0
 36525  01C584  EE14  F15E         	lfsr	1,___inthi_sp
 36526                           
 36527                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 36528  01C588  0139               	movlb	57	; () banked
 36529  01C58A  93A2               	bcf	162,1,b	;volatile
 36530                           
 36531                           ; BSR set to: 57
 36532  01C58C  0011               	retfie		f
 36533  01C58E                     __end_of_DMA1_DMADCNT_ISR:
 36534                           	opt callstack 0
 36535                           
 36536 ;; *************** function _DMA1_DMAA_ISR *****************
 36537 ;; Defined at:
 36538 ;;		line 143 in file "mcc_generated_files/dma1.c"
 36539 ;; Parameters:    Size  Location     Type
 36540 ;;		None
 36541 ;; Auto vars:     Size  Location     Type
 36542 ;;		None
 36543 ;; Return value:  Size  Location     Type
 36544 ;;                  1    wreg      void 
 36545 ;; Registers used:
 36546 ;;		None
 36547 ;; Tracked objects:
 36548 ;;		On entry : 0/0
 36549 ;;		On exit  : 3F/39
 36550 ;;		Unchanged: 0/0
 36551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36556 ;;Total ram usage:        0 bytes
 36557 ;; Hardware stack levels used:    1
 36558 ;; This function calls:
 36559 ;;		Nothing
 36560 ;; This function is called by:
 36561 ;;		Interrupt level 2
 36562 ;; This function uses a non-reentrant model
 36563 ;;
 36564                           
 36565                           	psect	text182
 36566  01C590                     __ptext182:
 36567                           	opt callstack 0
 36568  01C590                     _DMA1_DMAA_ISR:
 36569                           	opt callstack 4
 36570                           
 36571                           ; BSR set to: 57
 36572                           ;incstack = 0
 36573  01C590  EE14  F15E         	lfsr	1,___inthi_sp
 36574                           
 36575                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 36576  01C594  0139               	movlb	57	; () banked
 36577  01C596  97A2               	bcf	162,3,b	;volatile
 36578                           
 36579                           ; BSR set to: 57
 36580  01C598  0011               	retfie		f
 36581  01C59A                     __end_of_DMA1_DMAA_ISR:
 36582                           	opt callstack 0
 36583                           
 36584 ;; *************** function _DMA1_DMAOR_ISR *****************
 36585 ;; Defined at:
 36586 ;;		line 154 in file "mcc_generated_files/dma1.c"
 36587 ;; Parameters:    Size  Location     Type
 36588 ;;		None
 36589 ;; Auto vars:     Size  Location     Type
 36590 ;;		None
 36591 ;; Return value:  Size  Location     Type
 36592 ;;                  1    wreg      void 
 36593 ;; Registers used:
 36594 ;;		None
 36595 ;; Tracked objects:
 36596 ;;		On entry : 0/0
 36597 ;;		On exit  : 3F/39
 36598 ;;		Unchanged: 0/0
 36599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36604 ;;Total ram usage:        0 bytes
 36605 ;; Hardware stack levels used:    1
 36606 ;; This function calls:
 36607 ;;		Nothing
 36608 ;; This function is called by:
 36609 ;;		Interrupt level 2
 36610 ;; This function uses a non-reentrant model
 36611 ;;
 36612                           
 36613                           	psect	text183
 36614  01C59C                     __ptext183:
 36615                           	opt callstack 0
 36616  01C59C                     _DMA1_DMAOR_ISR:
 36617                           	opt callstack 4
 36618                           
 36619                           ; BSR set to: 57
 36620                           ;incstack = 0
 36621  01C59C  EE14  F15E         	lfsr	1,___inthi_sp
 36622                           
 36623                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 36624  01C5A0  0139               	movlb	57	; () banked
 36625  01C5A2  95A2               	bcf	162,2,b	;volatile
 36626                           
 36627                           ; BSR set to: 57
 36628  01C5A4  0011               	retfie		f
 36629  01C5A6                     __end_of_DMA1_DMAOR_ISR:
 36630                           	opt callstack 0
 36631                           
 36632                           ;
 36633                           ; Interrupt Vector Table @ 0x8
 36634                           ;
 36635                           
 36636                           	psect	ivt0x8
 36637  000008                     __pivt0x8:
 36638                           	opt callstack 0
 36639  000008                     ivt0x8_base:
 36640                           	opt callstack 0
 36641                           
 36642                           ; Vector 0 : SWINT
 36643  000008  717A               	dw	_Default_ISR shr (0+2)
 36644                           
 36645                           ; Vector 1 : HLVD
 36646  00000A  717A               	dw	_Default_ISR shr (0+2)
 36647                           
 36648                           ; Vector 2 : OSF
 36649  00000C  717A               	dw	_Default_ISR shr (0+2)
 36650                           
 36651                           ; Vector 3 : CSW
 36652  00000E  717A               	dw	_Default_ISR shr (0+2)
 36653                           
 36654                           ; Vector 4 : NVM
 36655  000010  717A               	dw	_Default_ISR shr (0+2)
 36656                           
 36657                           ; Vector 5 : SCAN
 36658  000012  717A               	dw	_Default_ISR shr (0+2)
 36659                           
 36660                           ; Vector 6 : CRC
 36661  000014  717A               	dw	_Default_ISR shr (0+2)
 36662                           
 36663                           ; Vector 7 : IOC
 36664  000016  717A               	dw	_Default_ISR shr (0+2)
 36665                           
 36666                           ; Vector 8 : INT0
 36667  000018  7154               	dw	_INT0_ISR shr (0+2)
 36668                           
 36669                           ; Vector 9 : ZCD
 36670  00001A  717A               	dw	_Default_ISR shr (0+2)
 36671                           
 36672                           ; Vector 10 : AD
 36673  00001C  6FCA               	dw	_ADCC_ISR shr (0+2)
 36674                           
 36675                           ; Vector 11 : ADT
 36676  00001E  6CD1               	dw	_ADCC_ThresholdISR shr (0+2)
 36677                           
 36678                           ; Vector 12 : CMP1
 36679  000020  717A               	dw	_Default_ISR shr (0+2)
 36680                           
 36681                           ; Vector 13 : SMT1
 36682  000022  717A               	dw	_Default_ISR shr (0+2)
 36683                           
 36684                           ; Vector 14 : SMT1PRA
 36685  000024  717A               	dw	_Default_ISR shr (0+2)
 36686                           
 36687                           ; Vector 15 : SMT1PRW
 36688  000026  717A               	dw	_Default_ISR shr (0+2)
 36689                           
 36690                           ; Vector 16 : DMA1SCNT
 36691  000028  7158               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 36692                           
 36693                           ; Vector 17 : DMA1DCNT
 36694  00002A  7161               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 36695                           
 36696                           ; Vector 18 : DMA1OR
 36697  00002C  7167               	dw	_DMA1_DMAOR_ISR shr (0+2)
 36698                           
 36699                           ; Vector 19 : DMA1A
 36700  00002E  7164               	dw	_DMA1_DMAA_ISR shr (0+2)
 36701                           
 36702                           ; Vector 20 : SPI1RX
 36703  000030  717A               	dw	_Default_ISR shr (0+2)
 36704                           
 36705                           ; Vector 21 : SPI1TX
 36706  000032  717A               	dw	_Default_ISR shr (0+2)
 36707                           
 36708                           ; Vector 22 : SPI1
 36709  000034  717A               	dw	_Default_ISR shr (0+2)
 36710                           
 36711                           ; Vector 23 : I2C1RX
 36712  000036  717A               	dw	_Default_ISR shr (0+2)
 36713                           
 36714                           ; Vector 24 : I2C1TX
 36715  000038  717A               	dw	_Default_ISR shr (0+2)
 36716                           
 36717                           ; Vector 25 : I2C1
 36718  00003A  717A               	dw	_Default_ISR shr (0+2)
 36719                           
 36720                           ; Vector 26 : I2C1E
 36721  00003C  717A               	dw	_Default_ISR shr (0+2)
 36722                           
 36723                           ; Vector 27 : U1RX
 36724  00003E  7063               	dw	_UART1_rx_vect_isr shr (0+2)
 36725                           
 36726                           ; Vector 28 : U1TX
 36727  000040  717A               	dw	_Default_ISR shr (0+2)
 36728                           
 36729                           ; Vector 29 : U1E
 36730  000042  717A               	dw	_Default_ISR shr (0+2)
 36731                           
 36732                           ; Vector 30 : U1
 36733  000044  717A               	dw	_Default_ISR shr (0+2)
 36734                           
 36735                           ; Vector 31 : TMR0
 36736  000046  717A               	dw	_Default_ISR shr (0+2)
 36737                           
 36738                           ; Vector 32 : TMR1
 36739  000048  717A               	dw	_Default_ISR shr (0+2)
 36740                           
 36741                           ; Vector 33 : TMR1G
 36742  00004A  717A               	dw	_Default_ISR shr (0+2)
 36743                           
 36744                           ; Vector 34 : TMR2
 36745  00004C  717A               	dw	_Default_ISR shr (0+2)
 36746                           
 36747                           ; Vector 35 : CCP1
 36748  00004E  717A               	dw	_Default_ISR shr (0+2)
 36749                           
 36750                           ; Vector 36 : Undefined
 36751  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 36752                           
 36753                           ; Vector 37 : NCO1
 36754  000052  717A               	dw	_Default_ISR shr (0+2)
 36755                           
 36756                           ; Vector 38 : CWG1
 36757  000054  717A               	dw	_Default_ISR shr (0+2)
 36758                           
 36759                           ; Vector 39 : CLC1
 36760  000056  717A               	dw	_Default_ISR shr (0+2)
 36761                           
 36762                           ; Vector 40 : INT1
 36763  000058  6EFA               	dw	_INT1_ISR shr (0+2)
 36764                           
 36765                           ; Vector 41 : CMP2
 36766  00005A  717A               	dw	_Default_ISR shr (0+2)
 36767                           
 36768                           ; Vector 42 : DMA2SCNT
 36769  00005C  717A               	dw	_Default_ISR shr (0+2)
 36770                           
 36771                           ; Vector 43 : DMA2DCNT
 36772  00005E  717A               	dw	_Default_ISR shr (0+2)
 36773                           
 36774                           ; Vector 44 : DMA2OR
 36775  000060  717A               	dw	_Default_ISR shr (0+2)
 36776                           
 36777                           ; Vector 45 : DMA2A
 36778  000062  717A               	dw	_Default_ISR shr (0+2)
 36779                           
 36780                           ; Vector 46 : I2C2RX
 36781  000064  717A               	dw	_Default_ISR shr (0+2)
 36782                           
 36783                           ; Vector 47 : I2C2TX
 36784  000066  717A               	dw	_Default_ISR shr (0+2)
 36785                           
 36786                           ; Vector 48 : I2C2
 36787  000068  717A               	dw	_Default_ISR shr (0+2)
 36788                           
 36789                           ; Vector 49 : I2C2E
 36790  00006A  717A               	dw	_Default_ISR shr (0+2)
 36791                           
 36792                           ; Vector 50 : U2RX
 36793  00006C  7077               	dw	_UART2_rx_vect_isr shr (0+2)
 36794                           
 36795                           ; Vector 51 : U2TX
 36796  00006E  706D               	dw	_UART2_tx_vect_isr shr (0+2)
 36797                           
 36798                           ; Vector 52 : U2E
 36799  000070  717A               	dw	_Default_ISR shr (0+2)
 36800                           
 36801                           ; Vector 53 : U2
 36802  000072  717A               	dw	_Default_ISR shr (0+2)
 36803                           
 36804                           ; Vector 54 : TMR3
 36805  000074  64DE               	dw	_TMR3_ISR shr (0+2)
 36806                           
 36807                           ; Vector 55 : TMR3G
 36808  000076  717A               	dw	_Default_ISR shr (0+2)
 36809                           
 36810                           ; Vector 56 : TMR4
 36811  000078  717A               	dw	_Default_ISR shr (0+2)
 36812                           
 36813                           ; Vector 57 : CCP2
 36814  00007A  717A               	dw	_Default_ISR shr (0+2)
 36815                           
 36816                           ; Vector 58 : Undefined
 36817  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36818                           
 36819                           ; Vector 59 : CWG2
 36820  00007E  717A               	dw	_Default_ISR shr (0+2)
 36821                           
 36822                           ; Vector 60 : CLC2
 36823  000080  717A               	dw	_Default_ISR shr (0+2)
 36824                           
 36825                           ; Vector 61 : INT2
 36826  000082  717A               	dw	_Default_ISR shr (0+2)
 36827                           
 36828                           ; Vector 62 : Undefined
 36829  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36830                           
 36831                           ; Vector 63 : Undefined
 36832  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36833                           
 36834                           ; Vector 64 : Undefined
 36835  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36836                           
 36837                           ; Vector 65 : Undefined
 36838  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36839                           
 36840                           ; Vector 66 : Undefined
 36841  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36842                           
 36843                           ; Vector 67 : Undefined
 36844  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36845                           
 36846                           ; Vector 68 : Undefined
 36847  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36848                           
 36849                           ; Vector 69 : Undefined
 36850  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36851                           
 36852                           ; Vector 70 : TMR5
 36853  000094  688C               	dw	_TMR5_ISR shr (0+2)
 36854                           
 36855                           ; Vector 71 : TMR5G
 36856  000096  717A               	dw	_Default_ISR shr (0+2)
 36857                           
 36858                           ; Vector 72 : TMR6
 36859  000098  710D               	dw	_TMR6_ISR shr (0+2)
 36860                           
 36861                           ; Vector 73 : CCP3
 36862  00009A  717A               	dw	_Default_ISR shr (0+2)
 36863                           
 36864                           ; Vector 74 : CWG3
 36865  00009C  717A               	dw	_Default_ISR shr (0+2)
 36866                           
 36867                           ; Vector 75 : CLC3
 36868  00009E  717A               	dw	_Default_ISR shr (0+2)
 36869                           
 36870                           ; Vector 76 : Undefined
 36871  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36872                           
 36873                           ; Vector 77 : Undefined
 36874  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36875                           
 36876                           ; Vector 78 : Undefined
 36877  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36878                           
 36879                           ; Vector 79 : Undefined
 36880  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36881                           
 36882                           ; Vector 80 : CCP4
 36883  0000A8  717A               	dw	_Default_ISR shr (0+2)
 36884                           
 36885                           ; Vector 81 : CLC4
 36886  0000AA  717A               	dw	_Default_ISR shr (0+2)
 36887  0000AC                     ivt0x8_undefint:
 36888                           	opt callstack 0
 36889  0000AC  00FF               	reset	
 36890                           
 36891                           	psect	text184
 36892  000000                     __ptext184:
 36893                           	opt callstack 0
 36894                           
 36895                           	psect	rparam
 36896  0000                     
 36897                           	psect	temp
 36898  000001                     btemp:
 36899                           	opt callstack 0
 36900  000001                     	ds	32
 36901  0000                     wtemp0	set	btemp
 36902  0000                     wtemp1	set	btemp+2
 36903  0000                     wtemp2	set	btemp+4
 36904  0000                     wtemp3	set	btemp+6
 36905  0000                     wtemp4	set	btemp+8
 36906  0000                     wtemp5	set	btemp+10
 36907  0000                     wtemp8	set	btemp+1
 36908  0000                     ttemp0	set	btemp
 36909  0000                     ttemp1	set	btemp+3
 36910  0000                     ttemp2	set	btemp+6
 36911  0000                     ttemp3	set	btemp+9
 36912  0000                     ttemp5	set	btemp+1
 36913  0000                     ttemp6	set	btemp+4
 36914  0000                     ttemp7	set	btemp+8
 36915  0000                     ltemp0	set	btemp
 36916  0000                     ltemp1	set	btemp+4
 36917  0000                     ltemp2	set	btemp+8
 36918  0000                     lltemp0	set	btemp
 36919  0000                     lltemp1	set	btemp+8
 36920  0000                     lltemp2	set	btemp+16
 36921  0000                     lltemp3	set	btemp+24
 36922                           tosu	equ	0x3FFF
 36923                           tosh	equ	0x3FFE
 36924                           tosl	equ	0x3FFD
 36925                           stkptr	equ	0x3FFC
 36926                           pclatu	equ	0x3FFB
 36927                           pclath	equ	0x3FFA
 36928                           pcl	equ	0x3FF9
 36929                           tblptru	equ	0x3FF8
 36930                           tblptrh	equ	0x3FF7
 36931                           tblptrl	equ	0x3FF6
 36932                           tablat	equ	0x3FF5
 36933                           prodh	equ	0x3FF4
 36934                           prodl	equ	0x3FF3
 36935                           indf0	equ	0x3FEF
 36936                           postinc0	equ	0x3FEE
 36937                           postdec0	equ	0x3FED
 36938                           preinc0	equ	0x3FEC
 36939                           plusw0	equ	0x3FEB
 36940                           fsr0h	equ	0x3FEA
 36941                           fsr0l	equ	0x3FE9
 36942                           wreg	equ	0x3FE8
 36943                           indf1	equ	0x3FE7
 36944                           postinc1	equ	0x3FE6
 36945                           postdec1	equ	0x3FE5
 36946                           preinc1	equ	0x3FE4
 36947                           plusw1	equ	0x3FE3
 36948                           fsr1h	equ	0x3FE2
 36949                           fsr1l	equ	0x3FE1
 36950                           bsr	equ	0x3FE0
 36951                           indf2	equ	0x3FDF
 36952                           postinc2	equ	0x3FDE
 36953                           postdec2	equ	0x3FDD
 36954                           preinc2	equ	0x3FDC
 36955                           plusw2	equ	0x3FDB
 36956                           fsr2h	equ	0x3FDA
 36957                           fsr2l	equ	0x3FD9
 36958                           status	equ	0x3FD8


Data Sizes:
    Strings     1070
    Constant    492
    Data        1070
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     251
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6392_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    S4855tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  481379
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10397
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     647
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     175
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      62
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46C      58        0.0%
DATA                 0      0     979       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jan 20 00:35:09 2020

                     _SPI1_Exchange8bit C382                __end_of_set_display_info C3FA  
                                     _C 06FF                                       _D 082A  
                                     _H 01C6                                       _P 01EF  
                                     _R 00AF                                       _S 0254  
                                     _T FAB5                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C0C2            __end_of_start_switch_handler C362  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBBD                  __end_of_FVR_Initialize C5CE  
                        _check_day_time 8A66                             __CFG_LVP$ON 000000  
                                   l169 C4BA                                     l807 C390  
                                   l673 BF7A                                     _GIE 01FE97  
                                   _abs B996                                     _pad 9D20  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C466  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C294  
                     _update_adc_result BC26                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C228  
                          __CFG_ZCD$OFF 000000                                    l1002 BBA2  
                                  l2120 3DB6                                    l2041 A592  
                                  l2050 88A4                                    l2116 3AB0  
                                  l1332 12A2                                    l2221 9D7C  
                                  l1190 BBE2                                    l1350 1902  
                                  l3015 4DA6                                    l2241 591C  
                                  l2321 0B1A                                    l1601 AE62  
                                  l2306 066A                                    l2162 745C  
                                  l3027 4C36                         _timer3ReloadVal 009E  
                                  l3060 5320                                    l1348 18FE  
                                  l1374 23A8                                    l1358 19A2  
                                  l3136 86C4                                    l1616 BD1E  
                                  l1368 1BA6                                    l1369 1DCE  
                                  l1732 C3F6                                    l2380 6874  
                                  l2277 123A                                    l2445 338A  
                                  l1469 B600                                    l3167 B9D6  
                                  l3159 8D92                                    l2359 754A  
                                  l3096 45EA                                    l1816 5838  
                                  l1915 8A5C                                    l1675 BC7C  
                                  l3267 9AE6                                    l2395 614E  
                                  l1692 9F40                                    l1684 836A  
                                  l2741 9298                                    l1597 AB48  
                                  l1685 84C6                                    l3198 7C08  
                                  l3534 82AE                    _ADCC_StartConversion C4D4  
                                  l1856 B180                                    l2737 A720  
                                  l3562 AFFE                                    l1962 A062  
                                  l2748 936C                                    l3549 B082  
                                  l1975 8BFC                                    l2775 920A  
                                  l1979 8BF4                                    l8101 4D56  
                                  l8013 4A9A                                    l8015 4AAC  
                                  l8023 4AE8                                    l8201 8D34  
                                  l8107 4D86                                    l8035 4BC0  
                                  l8019 4AB6                                    l8053 4C58  
                                  l8045 4C1A                                    l8037 4BE6  
                                  l8055 4C6A                                    l8303 77D4  
                                  l8207 8D8A                                    l8073 4CA4  
                                  l8321 78EC                                    l8225 B072  
                                  l8059 4C76                                    l8403 4F24  
                                  l8085 4D02                                    l8069 4C9E  
                                  l8421 4FE2                                    l8309 781A  
                                  l8341 7EB6                                    l8253 6700  
                                  l8095 4D2E                                    l8503 529C  
                                  l8415 4FA8                                    l8407 4F3A  
                                  l8183 B9C6                                    l8263 6806  
                                  l8255 6750                                    l8239 65E2  
                                  l8409 4F6A                                    l8281 AFEE  
                                  l8099 4D46                                    l8515 52F4  
                                  l8259 6798                                    l8621 43DE  
                                  l8541 3E66                                    l8533 3E20  
                                  l8517 5304                                    l8509 52CC  
                                  l8429 4FFC                                    l8357 7FEA  
                                  l8349 7F3E                                    l8701 9514  
                                  l8197 8D30                                    l8631 4420  
                                  l8551 3EEE                                    l8543 3E96  
                                  l7911 46D0                                    l8463 515A  
                                  l8455 5128                                    l8447 50C2  
                                  l8439 508C                                    l8383 4E46  
                                  l9511 7A7A                                    l8641 446A  
                                  l8561 3F64                                    l7905 468A  
                                  l8801 9334                                    l8473 519C  
                                  l8449 50D4                                    l8457 512C  
                                  l8377 4E06                                    l9521 7B5C  
                                  l9513 7A92                                    l9505 7A4E  
                                  l8297 7780                                    l8721 95DA  
                                  l8627 43FA                                    l8539 3E60  
                                  l7923 473A                                    l8483 51E6  
                                  l8387 4E5C                                    l9531 7BF8  
                                  l9515 7AB6                                    l8707 9534  
                                  l8645 4470                                    l8557 3F2E  
                                  l7941 47E2                                    l7933 4790  
                                  l7917 4708                                    l7909 46A0  
                                  l8469 5176                                    l8397 4EE4  
                                  l8389 4E8C                                    l9517 7AF4  
                                  l8741 9C28                                    l8655 44E4  
                                  l8559 3F34                                    l7935 47C0  
                                  l8487 51EC                                    l7871 ACC4  
                                  l8673 4598                                    l8665 4554  
                                  l8569 3F86                                    l7929 477A  
                                  l8809 936A                                    l8497 5260  
                                  l7873 ACE6                                    l8729 960E  
                                  l8745 9C3A                                    l8817 B84E  
                                  l8675 45B2                                    l8659 452A  
                                  l7971 4920                                    l8915 B6EC  
                                  l8851 91A2                                    l8843 9176  
                                  l8827 90F4                                    l9547 8120  
                                  l7981 4992                                    l9813 8580  
                                  l9805 8514                                    l8749 9C52  
                                  l8853 91B8                                    l8845 9192  
                                  l9549 818C                                    l7991 49CE  
                                  l8791 9256                                    l9815 858E  
                                  l9903 5806                                    l9911 5818  
                                  l9495 79B8                                    l8695 94FE  
                                  l8767 9D06                                    l8759 9CD2  
                                  l8783 A71E                                    l8775 A6A8  
                                  l7985 49B2                                    l9825 85F0  
                                  l9817 85A4                                    l9497 79DA  
                                  l7987 49C4                                    l7995 49FE  
                                  l7899 464A                                    l9827 860E  
                                  l9819 85C2                                    l8779 A6EA  
                                  l8867 8F70                                    l8891 9662  
                                  l8797 92E6                                    l9837 8642  
                                  l9829 8624                                    l9847 86A4  
                                  l9863 535C                                    l8879 9042  
                                  STR_1 FF1E                                    STR_2 FF09  
                                  l9873 54AE                                    l9857 532C  
                                  l9929 BFF2                                    STR_3 FFD2  
                                  STR_4 FECA                                    l8899 970E  
                                  STR_5 FEA0                                    STR_6 FEA0  
                                  l9885 55EE                                    l9877 55BC  
                                  STR_7 FEA0                                    STR_8 FEB5  
                                  STR_9 FC9B                                    l9897 576A  
                                  l9889 568A                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6110 8D82                                    u7000 44BE  
                                  u6120 8D84                                    u6105 8D64  
                                  u7010 44F8                                    u6050 B9AA  
                                  _T6PR 003F93                                    u7020 453E  
                                  u6060 8CB4                                    u5500 BE90  
                                  u6300 AFAC                                    _PMD0 0039C0  
                                  u7005 44AE                                    _PMD1 0039C1  
                                  u6230 66A6                                    u5510 BE92  
                                  u6150 B030                                    u6310 AFAE  
                                  _PMD2 0039C2                                    u6215 6600  
                                  _PMD3 0039C3                                    u6400 7814  
                                  u7200 A71A                                    u6216 6606  
                                  u6160 B032                                    _PMD4 0039C4  
                                  u6065 8CAA                                    u6217 6614  
                                  _PMD5 0039C5                                    u5610 4946  
                                  u6330 BEC0                                    u6410 7846  
                                  u6250 677E                                    _PMD6 0039C6  
                                  u6235 669C                                    _PMD7 0039C7  
                                  u5620 4966                                    u6340 BEC2  
                                  u6500 7F06                                    u7140 9C7E  
                                  u6180 657A                                    u5621 4960  
                                  u5470 AD14                                    u6430 7924  
                                  u6510 7F38                                    u7070 9560  
                                  u6190 65C6                                    u6255 6774  
                                  u6360 777A                                    u6520 7F6A  
                                  u7160 9CF2                                    u6280 BA5A  
                                  u6185 6570                                    u5810 4C7C  
                                  u5730 4ADE                                    u6450 7976  
                                  u7090 95FA                                    u7410 907A  
                                  u6290 BA5C                                    u5900 4D12  
                                  u5660 49F6                                    u6700 5154  
                                  u6380 77D0                                    u6540 8022  
                                  u7260 B84A                                    u7340 91C0  
                                  u5477 AD06                                    u5830 4C96  
                                  u5670 4A16                                    u5638 4968  
                                  u9110 8638                                    u7270 90D4  
                                  u7430 965C                                    u5735 4ACE  
                                  u6391 77DA                                    u6800 52B0  
                                  u6560 8074                                    u6480 7EB0  
                                  u7360 91EA                                    u7280 90E8  
                                  u7440 968E                                    u5665 49E6  
                                  u5770 4C08                                    u7290 9122  
                                  u7275 90CA                                    u7371 8F30  
                                  u6740 51DE                                    u7380 8F6A  
                                  u7460 9746                                    u5940 BE60  
                                  u5870 4CF2                                    u9214 55D6  
                                  u7390 8F9C                                    u5950 BE62  
                                  u9215 55D0                                    u7295 9118  
                                  u7480 B6C8                                    u6905 4108  
                                  u9234 56A4                                    u9154 5346  
                                  u7490 B6E8                                    u8610 7BA2  
                                  u6915 41D0                                    u5875 4CE2  
                                  u9235 569E                                    u9155 5340  
                                  u6780 523A                                    u9260 56CE  
                                  u8620 7BA4                                    u8700 8254  
                                  u6925 4398                                    u6790 5274  
                                  u9254 56C6                                    u9174 5376  
                                  u8710 8282                                    u9255 56C0  
                                  u9175 5370                                    u6960 4462  
                                  u8720 C2E2                                    u6785 522A  
                                  u8705 824E                                    u6890 3F74  
                                  u9610 88C0                                    u9194 5398  
                                  u9515 B3F0                                    u9195 5392  
                                  u9435 BA96                                    u8707 8240  
                                  u9516 B3F2                                    u9508 B3BE  
                                  u8660 81BA                                    u8717 8274  
                                  u8590 7A4A                                    u9490 B3BC  
                                  _PLLR 01CEE0                                    u8667 81AC  
                                  u9565 C500                                    u9750 C30A  
                                  u9566 C502                                    u9575 C4F0  
                                  u9576 C4F2                                    u9756 C30C  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR BF54                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0297                                    _cp_h FBCD  
                                  _cp_l FBC9                                    _atoi 799E  
                                  _ctoa AEFC                                    _main 1244  
                                  _dtoa 583E                                    _nanf B4DA  
                                  _seed 01F3                                    _prec 003C  
                                  _nout 009A                                    _spin FB45  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 7460  
                                  btemp 0001                                    _utoa 6830  
                                  _xtoa 610A                  __end_of_check_adc_scan C5B6  
                         ___fpclassifyf 8C06                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 00A2               __end_of_SPI1_Exchange8bit C3A0  
             __size_of_clear_hid_pflags 0046                         _TMR3_Initialize B908  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                          _SPI1STATUSbits 003D17  
                     _UART1_rx_vect_isr C18C                            ___param_bank 000000  
                __end_of_check_day_time 8C06                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR C55E                        __end_of_INT1_ISR BC26  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma AB50  
         __end_of_OSCILLATOR_Initialize C4C0                                   l10017 8B30  
                                 l10105 BF0C                                   l10029 8BA2  
                                 l10047 BD28                                   l11009 BBCA  
                                 l10139 B728                                   l11123 A134  
                                 l11109 8EFC                                   l11213 7422  
                                 l11117 A082                                   l12111 AD8E  
                                 l11231 A828                                   l11215 744C  
                                 l10601 890E                                   l11145 71A4  
                                 l12107 AD50                                   l11227 A7EA  
                                 l11171 7248                                   l11155 71EA  
                                 l11147 71B4                                   l10533 B786  
                                 l10605 8922                                   l12133 6FF2  
                                 l13021 AB5C                                   l11165 7220  
                                 l11149 71BA                                   l11431 B0D0  
                                 l12231 5956                                   l12223 590C  
                                 l12303 0146                                   l12127 6F34  
                                 l13023 AB66                                   l13031 AB7C  
                                 l11191 72C8                                   l11183 72A2  
                                 l11175 7254                                   l11159 71F6  
                                 l10529 B754                                   l11425 B0C0  
                                 l13121 353E                                   l13113 347E  
                                 l12313 01EA                                   l12321 0258  
                                 l13025 AB74                                   l13033 ABA8  
                                 l10721 B156                                   l11275 60FC  
                                 l10643 BC92                                   l12163 9D74  
                                 l12235 5974                                   l12411 06F0  
                                 l12331 02FC                                   l12315 0216  
                                 l12147 710A                                   l12139 705C  
                                 l13019 AB54                                   l13133 36AC  
                                 l13125 35AA                                   l13117 34D2  
                                 l12173 9E0C                                   l12165 9D86  
                                 l12245 5B86                                   l12501 0EA2  
                                 l12317 022C                                   l10709 B13E  
                                 l10733 9BB4                                   l13143 38D8  
                                 l12095 99FC                                   l12159 9D4C  
                                 l12407 06B8                                   l12351 0406  
                                 l13055 9E58                                   l13161 3AE2  
                                 l13153 3A18                                   l13137 3700  
                                 l10761 9790                                   l10593 88E2  
                                 l12169 9DC2                                   l12265 5C38  
                                 l12513 0F3A                                   l12441 0A48  
                                 l12417 077A                                   l12353 0470  
                                 l12601 7580                                   l13321 833A  
                                 l10729 9B52                                   l13147 3952  
                                 l10763 979E                                   l10771 97A6  
                                 l12179 A43A                                   l12451 0B34  
                                 l12427 0926                                   l12347 0396  
                                 l12339 032A                                   l12283 00AC  
                                 l13173 3DAE                                   l13157 3AC0  
                                 l10773 97D2                                   l12197 AF1A  
                                 l12269 5C74                                   l12381 0594  
                                 l12373 057C                                   l12357 04D2  
                                 l12605 75BC                                   l10685 BC46  
                                 PRLOCK 0039EF                                   l10759 9780  
                                 l12199 AF46                                   l12527 0FD6  
                                 l12391 0602                                   l12375 058E  
                                 l12295 00F0                                   l12623 76DE  
                                 l12615 7676                                   l13335 8462  
                                 l13095 A52C                                   l13255 86E2  
                                 l13511 1934                                   l10953 C33C  
                                 l12529 0FF0                                   l12465 0C32  
                                 l12449 0B12                                   l12369 0554  
                                 l12609 75EC                                   l12713 630A  
                                 l12721 6390                                   l12801 269C  
                                 l13441 146E                                   l10787 9884  
                                 l10779 980A                                   l12539 1092  
                                 l12619 76A2                                   l13267 8796  
                                 l13531 198E                                   l13523 1968  
                                 l10965 BF76                                   l12565 119A  
                                 l12549 10E2                                   l12477 0CBA  
                                 l12485 0D24                                   l12493 0D90  
                                 l12389 05F6                                   l12645 68C0  
                                 l12637 6864                                   l13277 886E  
                                 l10893 A7B8                                   l13541 19B2  
                                 l13509 1906                                   l10991 BB8A  
                                 l13295 B264                                   l12655 6AB6  
                                 l12903 2F4E                                   l13631 2358  
                                 l13623 2322                                   l13607 22D2  
                                 l13391 12BC                                   l13383 1284  
                                 l12585 74CC                                   l12737 647A  
                                 l12913 3004                                   l12817 2800  
                                 l10889 A73C                                   l13625 233A  
                                 l13617 2310                                   l13553 1AB2  
                                 l13385 128C                                   l12683 6178  
                                 l12851 2B32                                   l12835 2984  
                                 l12827 2898                                   l13635 237E  
                                 l12677 613E                                   l12941 32B8  
                                 l13645 23D4                                   l13565 200A  
                                 l13581 222A                                   l13389 12AA  
                                 l12951 3316                                   l12927 3180  
                                 l12863 2C1E                                   l12839 29D8  
                                 l12775 24CA                                   l13487 16D6  
                                 l12697 6214                                   l12689 61B4  
                                 l12777 2504                                   l13569 206A  
                                 l12947 3312                                   l12883 2D7E  
                                 l12859 2BEA                                   l12779 251A  
                                 l13595 2280                                   l13579 21FE  
                                 l13499 17B0                                   l12893 2E2C  
                                 l12797 264C                                   l12957 3336  
                                 l12799 2686                                   l12975 AC50  
                                 l12995 AA26                                   l12997 AA68  
                       __end_of___aodiv 799E                            _Volts_to_SOC A72A  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4DB0                                   _ADCLK 003EFF  
                       __end_of___aomod 8098                                   _ADPCH 003EF1  
                       __end_of___fldiv 532A                                   _ADREF 003EFD  
                       __end_of___awdiv 9628                         __end_of___flneg B878  
                                 STR_10 FD56                                   STR_11 FE32  
                                 STR_12 FEDF                                   STR_21 FF83  
                                 STR_13 FEF4                                   STR_14 FF48  
                                 STR_30 FE5E                                   STR_22 FE1C  
                                 STR_15 FF33                                   STR_23 FE06  
                                 STR_31 FD6C                                   STR_40 FE8A  
                                 STR_24 FDF0                                   STR_32 FD82  
                                 STR_16 FD40                                   STR_41 FE8A  
                                 STR_25 FDDA                                   STR_33 FD98  
                                 STR_17 FC67                           __CFG_WDTE$OFF 000000  
                                 STR_50 FFBF                                   STR_42 FE8A  
                                 STR_26 FDC4                                   STR_34 FCE4  
                                 STR_18 FC81                                   STR_43 FFFC  
                                 STR_51 FFA4                                   STR_19 FF94  
                                 STR_27 FDAE                                   STR_35 FD29  
                                 STR_52 FFA4                                   STR_44 FFF9  
                                 STR_28 FE74                                   STR_36 FC4A  
                       __end_of___awmod 9D20                                   STR_53 FFA4  
                                 STR_45 FFB3                                   STR_29 FE48  
                                 STR_37 FCCD                                   STR_70 FFE3  
                                 STR_46 FFC9                                   STR_38 FCFB  
                                 STR_54 FCB5                                   STR_63 FC49  
                                 STR_47 FF5D                                   STR_39 FD12  
                                 STR_48 FF5D                                   STR_56 FF70  
                                 STR_64 FBD1                                   _ADRPT 003EEC  
                                 STR_73 FFEA                                   STR_65 FFD7  
                                 STR_49 FFBF                                   STR_82 FFED  
                                 STR_66 FFDF                                   STR_75 FFEA  
                                 STR_84 FFED                                   STR_92 FFF6  
                                 STR_77 FFF0                                   STR_69 FFDB  
                                 STR_94 FFF6                                   STR_79 FFF0  
                                 STR_87 FFF3                                   STR_96 FFE7  
                       __end_of___flmul 45F4                                   STR_89 FFF3  
                                 STR_98 FFE7                         __end_of___flsub BA22  
                       __end_of___fltol 9214                                   u11100 5942  
                                 u11110 5B9A                                   u11030 586E  
                                 u11040 5870                                   u12000 638C  
                                 u11121 5BCA                                   u11130 5BE0  
                                 u11210 00DA                                   u12010 63AC  
                                 u11131 5BDE                                   u11140 5BF4  
                                 u11060 58E0                                   u12100 2562  
                                 u12021 63DC                                   u12005 636E  
                                 u11150 5BF8                                   u12030 63F2  
                                 u12110 2564                                   u12031 63F0  
                                 u11080 58F2                                   u11240 0194  
                                 u12040 6406                                   u12120 258A  
                                 u11170 5C0E                                   u11330 050E  
                                 u11250 0196                                   u12050 640A  
                       __end_of___lodiv 90A2                                   u11500 0A18  
                                 u12220 28EC                                   u11430 0648  
                                 u12150 26E4                                   u11600 0EE4  
                                 u11360 0562                                   u11280 02A6  
                                 u12240 2A60                                   u12160 26E6  
                                 u11290 02A8                                   u12170 270C  
                                 _U1P1H 003DED                                   u12340 3058  
                                 _U1P2H 003DEF                                   u11390 05C6  
                                 u12270 2CD8                                   u12430 A508  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u11800 7704  
                                 u12360 3208                                   u12280 2CDA  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10850 99F0                                   u10930 717E  
                                 _U1P3L 003DF0                                   u11660 10B8  
                                 u11820 684A                                   u11900 6124  
                                 u12380 AC30                                   u12460 A56E  
                                 u10870 9A6C                                   _U2P1L 003DD4  
                                 u11680 116E                                   u11760 75E2  
                                 u12448 A50A                                   u12800 1588  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11690 1170                                   u11770 7628  
                                 u11930 620C                                   _U2P3L 003DD8  
                                 u11851 6AF8                                   u10980 A4B4  
                                 u11860 6B0E                                   u11940 6260  
                                 u12740 84B2                                   u12820 17DE  
                                 u11861 6B0C                                   u11870 6B22  
                                 u11950 6262                                   u12750 84B4  
                                 u12478 A570                                   _T5CLK 003F9D  
                                 u11880 6B26                                   u12920 2270  
                                 u11777 761A                         __end_of___lomod 9768  
                                 u11970 62C0                                   u12930 2288  
                                 u10987 A4A6                                   u11980 62C2  
                                 u12940 229A                                   _T2HLT 003FAD  
                                 u12926 2272                                   u12936 228A  
                                 _T5CON 003F9A                                   u12946 229C  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0085  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result BC60                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR C5E8  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 94DA                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A312  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR C44E  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                                 _fabsf A94C                                   _flags 003E  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay C550  
                                 _fputc 99CC              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha BA66                                   _fputs AD40  
                       __end_of_isdigit BECC                         __end_of_ivln2_h FBC9  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand BD3C  
                                 _width 003A                                   _putch C418  
          __end_of_set_ac_charger_relay C526                         __end_of_islower BE6C  
                       __end_of_isspace B6FC                _INT1_SetInterruptHandler C0EA  
                       __end_of_set_dac A94C                         __end_of_isupper BE9C  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler C072             _UART1_SetRxInterruptHandler C04A  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf A04E  
                       __end_of_tolower B08C                         __end_of_strncmp 82B8  
                       __end_of_toupper B008               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr C1B4                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B8C0                   __end_of_ringBufS_init BFD2  
                       __initialization A312                       _UART2_rx_vect_isr C1DC  
                          __end_of_cp_h FBD1                            __end_of_cp_l FBCD  
                          __end_of_atoi 7C12                            __end_of_ctoa AF84  
                          __end_of_main 23E8                            __end_of_dtoa 5CBE  
                          __end_of_nanf B53C                            __end_of_spin FBBD  
                          __end_of_stoa 771E                            __end_of_utoa 6B70  
                          __end_of_xtoa 64C4                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize C47E  
                 __end_of_send_lcd_data C228                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B26E                _TMR5_SetInterruptHandler C09A  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 007C                       _port_data_dma_ptr C578  
                    esr_check@esr_state 00A4                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize BF80  
                       _PWM8_Initialize C494                        _UART1_Initialize B878  
                     _UART2_tx_vect_isr C1B4                      _UART2_Transmit_ISR BF54  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan B414  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue BA66  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A2C2                                  _RB6PPS 003A0E  
                                i1l1207 9442                    _start_switch_handler C342  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B950                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C534  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u934_20 8ABC                                  u929_25 C520  
                                u929_26 C522                                  u955_20 BCA0  
                                u955_26 BCA2                                  u948_20 C54C  
                  __size_of_hid_display 01DC                                  u981_24 987A  
                                u981_25 9876                                  u977_20 979A  
                                u976_28 9786                                  u977_21 9794  
                      __end_of___xxtofl 86CE   __end_of_ADCC_DischargeSampleCapacitor C5AE  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor C5A6  
              __end_of_send_lcd_cmd_dma C3BE                         _TMR3_WriteTimer BBA8  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr C204  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize C56E  
                      _UART2_Initialize B53C                                  _WaitMs BD06  
                       _conv_raw_result 532A                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 9214  
                                ___fleq A666                       _ADCC_ThresholdISR B344  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush ADD8  
                                _efgtoa 0000                                  _floorf 64C4  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00A8  
                     dac_spi_control@S2 00A7                       dac_spi_control@SB 00A5  
                     dac_spi_control@SC 00A6                      ?_ADCC_ThresholdISR 0021  
                                _memset 6E9C                    __size_of_help_button 0038  
                                clear_0 A384                                  clear_1 A398  
                                clear_2 A3AA                                  clear_3 A3B6  
                                clear_4 A3C2                                  clear_5 A3CE  
                                clear_6 A3DA               __end_of_port_data_dma_ptr C582  
                                _printf B478                      _eaDogM_WriteString ABF8  
                                _strcpy A3F2                               ?_ADCC_ISR 0021  
                                _strlen AC9E                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize B2D8  
                        _PMD_Initialize C4C0              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr C1DC                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan B478                            __mediumconst F9E4  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay B650  
                      __end_of_spinners A144                        __end_of_vfprintf AAA6  
                            _StartTimer BB28                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B908  
                     _SYSTEM_Initialize B7E6                              __accesstop 0060  
               __end_of__initialization A3EC                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help C5C6  
                  __end_of_display_info C5BE               __end_of_CLKREF_Initialize C578  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer BB68                   _set_temp_display_help C506  
                      _clear_hid_pflags B950                   __end_of_TMR3_CallBack C294  
             __end_of_ADCC_ThresholdISR B3AE                      __size_of_calc_bsoc 0A36  
                __end_of_ringBufS_flush AE6A                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 BCD0                            __pidataBANK1 A598  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A9FA  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 9AF0                           __end_of_fputs ADD8  
                  _get_ac_charger_relay C542                           __end_of_srand BD70  
                 __end_of_TMR5_CallBack C270                           __end_of_putch C432  
                  _set_ac_charger_relay C516                 __end_of_PWM8_Initialize C4AA  
               __end_of_TMR6_Initialize BFAA                       _adc_int_t_handler B08C  
                __end_of_PMD_Initialize C4D4                              __end_of_bp FBC5  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack C2DC  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0040  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR C590  
                 TMR3_ISR@CountCallBack 009C                          _clear_adc_scan C5CE  
                    __size_of_hid_input 00D2                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0091               __end_of_SYSTEM_Initialize B830  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer BBE8                              __pbssBANK0 0060  
                            __pbssBANK1 01CD                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 82B8                 __end_of_conv_raw_result 583E  
                    __size_of_esr_check 02D8                   _INT0_InterruptHandler 0097  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone BFFA                        _DMA1_DMADCNT_ISR C584  
                       _convert_dac_raw 9AF0                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma BE0C  
                 __end_of_wait_lcd_done C2FE        __end_of_TMR3_SetInterruptHandler C0EA  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler C09A  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize B342  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler B10A  
                            ??_TMR6_ISR 0026                       __end_of___asfladd B1FC  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler C162   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler C13A                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR C320                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan C5D4  
                               u1014_48 C2C8                                 u1006_48 C2A4  
                               u1008_28 C238                                 u1017_28 C25C  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR C560  
                               u1047_44 B0F0                                 u1047_45 B0EA  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1256_20 3A08  
                               u1263_28 C280                                 u1258_20 3AD2  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control B10A  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3DCA                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch BEFA                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer BBA8                 __size_of_switch_handler 0136  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one C506  
            __end_of_set_load_relay_two C4F6       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 8D9C  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim C44E  
                               __Lparam 0000                __end_of_UART1_Initialize B8C0  
                     __end_of_hid_input A598                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 771E                                 ___fladd 45F4  
                               ___aomod 7E58                                 ___fldiv 4DB0  
                               ___awdiv 94DA                                 ___flneg B830  
                               ___awmod 9C08                                 ___flmul 3DCA  
                               ___flsub B9DC                                 ___fltol 90A2  
                               ___lodiv 8F22                                 ___lomod 9628  
             __end_of_UART1_Receive_ISR C342                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display A22E  
                               __pcinit A312                __end_of_mode_lamp_bright C542  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand C526                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B59C  
                               __ptext2 C342                                 __ptext3 BD3C  
                               __ptext4 A04E                                 __ptext5 BD70  
                               __ptext6 BDA4                                 __ptext7 9AF0  
                               __ptext8 A89C                                 __ptext9 B10A  
                     __end_of_esr_check 7460                       _UART2_Receive_ISR C362  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize C4AA                            __size_of_abs 0046  
                          __size_of_pad 0114                       __end_of_init_bsoc 7E58  
                               us646999 7988                                 us742999 908C  
                               _isalpha BA22                                 _isdigit BE9C  
                               us657999 8086                                 _ivln2_h FBC5  
                               us747999 9758                               _T3CONbits 003FA6  
                               _mode_sw 00A9                       __end_of_lp_filter 8A66  
                               _islower BE3C                                 _isspace B6AA  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac A89C                __end_of_UART2_Initialize B59C  
                               _isupper BE6C              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9F44                                 _tolower B008  
                 __size_of_display_help 0008                                 _utctime 01EB  
               __end_of_convert_dac_raw 9C08                   __size_of_display_info 0008  
                               _strncmp 8098                                 _toupper AF84  
                  end_of_initialization A3EC               __size_of_convert_adc_data 00B8  
                    _check_enter_button B1FC                       __end_of_set_dac_a BDD8  
                     __end_of_set_dac_b BDA4                               i1u1276_20 9438  
   __end_of_UART2_SetRxInterruptHandler C04A             _UART2_SetRxInterruptHandler C022  
                             i2u1050_48 BF40                               i2u1052_48 B37A  
                             i2u1052_49 B38E                               i2u1054_48 C1A0  
                             i2u1056_48 C1C8                               i2u1058_48 C1F0  
               check_day_time@day_delay 0041                       __end_of_set_vterm C3DC  
                     __end_of_vfpfcnvrt 3394                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd C5E0               __end_of_UART2_Receive_ISR C382  
                        wdtdelay@dcount 0078                 __end_of_dac_spi_control B184  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0094                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc C5E6                _TMR3_SetInterruptHandler C0C2  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler C072  
                          _display_help C5BE                   _TMR5_InterruptHandler 007F  
                          _display_info C5B6    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B996                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler C18A             _ADCC_SetADIInterruptHandler C162  
                            _update_lcd 9E34                         _calc_model_data 5CBE  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B59C                         _DMA1_Initialize B26E  
                            _start_bsoc C2FE                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C47E                   __end_of_get_vterm_ptr BEFA  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs BD3C            __end_of_INTERRUPT_Initialize B414  
                            _vterm_dump 989E                          __end_of___flge 9376  
                        __end_of___fleq A72A    __end_of_INT0_DefaultInterruptHandler C5F4  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C5F2  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize B650  
                         __pidataBIGRAM 6B70                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6830             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01E7                          __end_of_memset 7188  
                        __end_of_printf B4DA                __end_of_DMA1_DMADCNT_ISR C58E  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C2B8  
                        __end_of_strcpy A4C6                          __end_of_strlen AD40  
                   start_initialization A312    __end_of_TMR5_DefaultInterruptHandler BCD0  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler BC98  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs B9DC  
                 __end_of_INT1_CallBack C24C               __size_of_set_display_info 001E  
                           __end_of_pad 9E34                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd BB28                          _switch_handler 9768  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01D9                   __end_of___fpclassifyf 8D9C  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C56E  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C59C  
                   __end_of_hid_display 88AA              __end_of_send_port_data_dma B74E  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BFD2  
                         _ringBufS_init BFAA                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize BE0C  
               __end_of_calc_model_data 610A                           _send_lcd_data C204  
                   __end_of_help_button BC98         __end_of_eaDogM_WriteStringAtPos ABF8  
                   __end_of_BVSOC_TABLE FAB5                               ___asfladd B184  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B2D8                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler C13A  
                         __pcstackBANK0 00E5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 989E  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C494  
              _UART1_RxInterruptHandler 008B                _UART2_TxInterruptHandler 008E  
                             __end_of_T FB45                        _convert_adc_data A7E4  
                             _calc_bsoc 3394               __size_of_ringBufS_put_dma 00AA  
                          _init_display A144                  __end_of_DMA1_DMAOR_ISR C5A6  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 0082  
                    calc_ror_data@bcror 0068                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B6AA                      calc_ror_data@bvror 006C  
                _PIN_MANAGER_Initialize AE6A                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C5DA                           __pmediumconst F9E4  
                             __ptext100 A94C                               __ptext101 532A  
                             __ptext110 88AA                               __ptext102 B4DA  
                             __ptext111 B9DC                               __ptext103 C3FA  
                             __ptext120 BF80                               __ptext112 45F4  
                             __ptext104 84CA                               __ptext121 C072  
                             __ptext113 3DCA                               __ptext105 4DB0  
                             __ptext130 AE6A                               __ptext122 B8C0  
                             __ptext114 B7E6                               __ptext106 9214  
                             __ptext131 C4AA                               __ptext123 C09A  
                             __ptext115 B53C                               __ptext107 5CBE  
                             __ptext140 B2D8                               __ptext132 B3AE  
                             __ptext124 B908                               __ptext116 BFFA  
                             __ptext108 C5E0                               __ptext141 C13A  
                             __ptext133 C5C6                               __ptext125 C0C2  
                             __ptext117 C022                               __ptext109 C2FE  
                             __ptext150 BC98                               __ptext142 C162  
                             __ptext134 BDD8                               __ptext126 C466  
                             __ptext118 B878                               __ptext151 8A66  
                             __ptext143 BBE8                               __ptext135 C0EA  
                             __ptext127 C47E                               __ptext119 C04A  
                             __ptext160 C578                               __ptext152 C516  
                             __ptext144 C228                               __ptext136 C112  
                             __ptext128 C494                               __ptext161 B184  
                             __ptext153 C542                               __ptext145 C5EE  
                             __ptext137 B650                               __ptext129 C4C0  
                             __ptext170 B344                               __ptext162 C550  
                             __ptext154 9378                               __ptext146 9768  
                             __ptext138 B26E                               __ptext171 C18C  
                             __ptext163 C294                               __ptext155 BBA8  
                             __ptext147 A230                               __ptext139 C56E  
                             __ptext180 C560                               __ptext172 C320  
                             __ptext164 C5F2                               __ptext156 C270  
                             __ptext148 BB68                               __ptext181 C584  
                             __ptext173 C1B4                               __ptext165 C5E8  
                             __ptext157 C5F0                               __ptext149 C24C  
                             __ptext182 C590                               __ptext174 BF54  
                             __ptext166 BF28                               __ptext158 3394  
                             __ptext183 C59C                               __ptext175 C1DC  
                             __ptext167 B08C                               __ptext159 B6FC  
                             __ptext184 0000                               __ptext176 C362  
                             __ptext168 C5F4                               __ptext177 C434  
                             __ptext169 C5F6                               __ptext178 C2B8  
                             __ptext179 B74E                               _hid_input A4C6  
                    __end_of_StartTimer BB68                      _set_load_relay_one C4F6  
                    _set_load_relay_two C4E6                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR BF28                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0060                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 7188  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7C12                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 88AA  
                           _hid_display 86CE                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize B3AE  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR C550  
                              _INT1_ISR BBE8                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                            _SPI1CON1bits 003D15  
                             _set_dac_a BDA4                               _set_dac_b BD70  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack C270  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm C3BE  
                   __size_of_update_lcd 0110                             _help_button BC60  
                              _TMR3_ISR 9378                             _BVSOC_TABLE F9E5  
                              _TMR5_ISR A230                                _TMR6_ISR C434  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 23E8                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack C24C  
                            _ADCON0bits 003EF8                      __end_of_check_help 84CA  
                             _start_lcd C5DA                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack C2B8  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc C5E0                        _set_display_info C3DC  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A326  
                             copy_data1 A34C                               copy_data2 A36E  
              _INT0_SetInterruptHandler C112                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler C022             _UART2_SetTxInterruptHandler BFFA  
                          _uart1RxCount 00AD                            _uart2RxCount 00AA  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0514  
                         _wait_lcd_done C2DC                            _send_lcd_cmd BAE8  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler C5F6                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch BF26  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR C59A  
                    ___fpclassifyf@F463 0064    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 84CA  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0072  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand C534  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                      __size_of_set_dac 00B0                                __ptext10 BE0C  
                              __ptext11 A144                                __ptext20 A4C6  
                              __ptext12 C204                                __ptext21 BEFA  
                              __ptext13 BAA8                                __ptext30 C4F6  
                              __ptext22 7188                                __ptext14 BAE8  
                              __ptext31 C526                                __ptext23 BC26  
                              __ptext15 C382                                __ptext40 AB50  
                              __ptext32 A7E4                                __ptext24 B414  
                              __ptext16 BFAA                                __ptext41 C3A0  
                              __ptext33 B950                                __ptext25 C4D4  
                              __ptext17 7C12                                __ptext50 B478  
                              __ptext42 C2DC                                __ptext34 82B8  
                              __ptext26 C5A6                                __ptext18 A72A  
                              __ptext51 A9FA                                __ptext43 B5F6  
                              __ptext35 989E                                __ptext27 C5CE  
                              __ptext19 86CE                                __ptext60 8098  
                              __ptext52 23E8                                __ptext44 B79C  
                              __ptext36 9F44                                __ptext28 C5AE  
                              __ptext61 7460                                __ptext53 610A  
                              __ptext45 ABF8                                __ptext37 BECC  
                              __ptext29 C4E6                                __ptext70 A666  
                              __ptext62 0000                                __ptext54 AF84  
                              __ptext46 C5D4                                __ptext38 BD06  
                              __ptext71 9C08                                __ptext63 B008  
                              __ptext55 BE3C                                __ptext47 C5DA  
                              __ptext39 9E34                                __ptext80 AD40  
                              __ptext72 94DA                                __ptext64 BE6C  
                              __ptext56 BA22                                __ptext48 ADD8  
                              __ptext81 99CC                                __ptext73 583E  
                              __ptext65 A3F2                                __ptext57 6830  
                              __ptext49 6E9C                                __ptext90 C44E  
                              __ptext82 C418                                __ptext74 B996  
                              __ptext66 64C4                                __ptext58 9628  
                              __ptext91 C534                                __ptext83 AAA6  
                              __ptext75 7E58                                __ptext67 8C06  
                              __ptext59 8F22                                __ptext92 BA66  
                              __ptext84 799E                                __ptext76 771E  
                              __ptext68 90A2                                __ptext93 BC60  
                              __ptext85 B6AA                                __ptext77 AEFC  
                              __ptext69 B830                                __ptext94 BFD2  
                              __ptext86 BE9C                                __ptext78 9D20  
                              __ptext95 BB28                                __ptext87 C3BE  
                              __ptext79 AC9E                                __ptext96 C5B6  
                              __ptext88 C506                                __ptext97 C5BE  
                              __ptext89 C3DC                                __ptext98 B1FC  
                              __ptext99 8D9C                        __size_of_isupper 0030  
                              us1102999 5858                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1171999 7472  
                              us1183999 6896                                us1192999 618A  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma AAA6                    __end_of_Volts_to_SOC A7E4  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 11A4                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                     dac_spi_control@init 0043  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma BE3C                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0088  
                             stoa@F1166 0100                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion C4E6                                _spi_link 01CD  
                              _wdtdelay B5F6              __end_of_UART2_Transmit_ISR BF80  
                              _spinners A04E                                _vfprintf A9FA  
              __end_of_convert_adc_data A89C              __end_of_PWM8_LoadDutyValue BAA8  
  __end_of_TMR3_DefaultInterruptHandler C5F2   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler C5F0    __end_of_INT1_DefaultInterruptHandler C5F0  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler C5EE  
                    _send_port_data_dma B6FC                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0044                             _uart1RxTail 00AE  
                        _get_raw_result C3FA                             _uart2TxHead 00AC  
                           _uart2RxTail 00AB                               spinners@s 01E1  
                           _uart2TxTail 0046                            _wait_lcd_set C5D4  
                    _EXT_INT_Initialize BDD8    __end_of_TMR6_DefaultInterruptHandler B79C  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B74E  
                     _send_lcd_data_dma B79C    __end_of_ADCC_DefaultInterruptHandler C5F6  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler C5F4  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long BAA8          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C516                   __end_of_calc_ror_data 8F22  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString AC9E  
                 __end_of_mode_lamp_dim C466                 __end_of_adc_int_handler C5F8  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 9F44  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc B5F6  
                    __end_of_start_bsoc C320                          _FVR_Initialize C5C6  
                __end_of_get_raw_result C418                        _send_lcd_cmd_dma C3A0  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00A0  
      __end_of_INT1_SetInterruptHandler C112               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma B7E6  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long BAE8  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR C5EE  
        __end_of_PIN_MANAGER_Initialize AEFC               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 99CC                 _eaDogM_WriteStringAtPos AB50  
                         _get_vterm_ptr BECC                          _check_adc_scan C5AE  
             __size_of_UART2_Initialize 0060  
