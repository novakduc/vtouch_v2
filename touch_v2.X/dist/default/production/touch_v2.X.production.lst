

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec  1 00:39:01 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=4,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=4,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=4,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=4,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	text147,global,reloc=4,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   176                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   177                           	psect	text150,global,reloc=4,class=CODE,delta=1
   178                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   179                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   180  0000                     
   181                           ; Version 2.10
   182                           ; Generated 31/07/2019 GMT
   183                           ; 
   184                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   185                           ; All rights reserved.
   186                           ; 
   187                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   188                           ; 
   189                           ; Redistribution and use in source and binary forms, with or without modification, are
   190                           ; permitted provided that the following conditions are met:
   191                           ; 
   192                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   193                           ;        conditions and the following disclaimer.
   194                           ; 
   195                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   196                           ;        of conditions and the following disclaimer in the documentation and/or other
   197                           ;        materials provided with the distribution.
   198                           ; 
   199                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   200                           ;        software without specific prior written permission.
   201                           ; 
   202                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   203                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   204                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   205                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   206                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   207                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   208                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   209                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   210                           ; 
   211                           ; 
   212                           ; Code-generator required, PIC18F57K42 Definitions
   213                           ; 
   214                           ; SFR Addresses
   215  0000                     
   216 ;;_mode	offset	0
   217 ;;_channel	offset=-1 (param)
   218 ;;_s	offset=-2 (param)
   219 ;;_cmd	offset=-1 (param)
   220 ;;_cmd	offset=-1 (param)
   221 ;;_data	offset=-1 (param)
   222 ;;__this	offset=-2 (param)
   223 ;;_h	offset=-1 (param)
   224 ;;_h	offset=-1 (param)
   225 ;;_i	offset=-1 (param)
   226 ;;_cmd	offset=-1 (param)
   227 ;;_i	offset	0
   228 ;;_chan	offset=-1 (param)
   229 ;;_to_what	offset=-2 (param)
   230 ;;_u	offset	0
   231 ;;_s	offset=-2 (param)
   232 ;;_index	offset=-1 (param)
   233 ;;_arg	offset	0
   234 ;;_exp	offset	4
   235 ;;_sign	offset=-1 (param)
   236 ;;_val	offset=-5 (param)
   237 ;;_h	offset=-1 (param)
   238 ;;_estatus	offset	0
   239 ;;_flipper	offset=-1 (param)
   240 ;;_f	offset	0
   241 ;;_ap	offset	6
   242 ;;_s	offset=-3 (param)
   243 ;;_fmt	offset=-5 (param)
   244 ;;_line	offset=-1 (param)
   245 ;;_vterm	offset=-2 (param)
   246 ;;_numMilliseconds	offset=-2 (param)
   247 ;;_vterm	offset=-1 (param)
   248 ;;_r	offset=-1 (param)
   249 ;;_c	offset=-2 (param)
   250 ;;_strPtr	offset=-4 (param)
   251 ;;_strPtr	offset=-1 (param)
   252 ;;_delay	offset=-4 (param)
   253 ;;_strPtr	offset=-2 (param)
   254 ;;__this	offset=-2 (param)
   255 ;;_clearBuffer	offset=-3 (param)
   256 ;;_s	offset	0
   257 ;;_k	offset	2
   258 ;;_dest	offset=-2 (param)
   259 ;;_c	offset=-4 (param)
   260 ;;_n	offset=-6 (param)
   261 ;;_ap	offset	0
   262 ;;_fmt	offset=-3 (param)
   263 ;;_cfmt	offset	0
   264 ;;_fp	offset=-2 (param)
   265 ;;_fmt	offset=-4 (param)
   266 ;;_ap	offset=-6 (param)
   267 ;;_vfpfcnvrt$4554	offset	0
   268 ;;_vfpfcnvrt$4560	offset	2
   269 ;;_vfpfcnvrt$4553	offset	4
   270 ;;_llu	offset	6
   271 ;;_ll	offset	14
   272 ;;_f	offset	22
   273 ;;_ct	offset	26
   274 ;;_cp	offset	29
   275 ;;_c	offset	31
   276 ;;_fp	offset=-2 (param)
   277 ;;_fmt	offset=-4 (param)
   278 ;;_ap	offset=-6 (param)
   279 ;;_xtoa$4539	offset	0
   280 ;;_xtoa$4538	offset	2
   281 ;;_n	offset	4
   282 ;;_c	offset	12
   283 ;;_i	offset	14
   284 ;;_w	offset	16
   285 ;;_p	offset	18
   286 ;;_fp	offset=-2 (param)
   287 ;;_d	offset=-10 (param)
   288 ;;_x	offset=-11 (param)
   289 ;;_toupper$5199	offset	0
   290 ;;_c	offset=-2 (param)
   291 ;;_c	offset=-2 (param)
   292 ;;_c	offset=-2 (param)
   293 ;;_r	offset	0
   294 ;;_l	offset	2
   295 ;;__l	offset=-2 (param)
   296 ;;__r	offset=-4 (param)
   297 ;;_n	offset=-6 (param)
   298 ;;_nuls	offset	0
   299 ;;_l	offset	7
   300 ;;_p	offset	9
   301 ;;_cp	offset	11
   302 ;;_w	offset	13
   303 ;;_i	offset	15
   304 ;;_fp	offset=-2 (param)
   305 ;;_s	offset=-4 (param)
   306 ;;_efgtoa$4518	offset	0
   307 ;;_efgtoa$4517	offset	2
   308 ;;_efgtoa$4516	offset	4
   309 ;;_efgtoa$4512	offset	6
   310 ;;_efgtoa$4508	offset	8
   311 ;;_efgtoa$4507	offset	10
   312 ;;_u	offset	12
   313 ;;_g	offset	16
   314 ;;_l	offset	20
   315 ;;_h	offset	24
   316 ;;_ou	offset	28
   317 ;;_n	offset	32
   318 ;;_e	offset	34
   319 ;;_i	offset	36
   320 ;;_w	offset	38
   321 ;;_p	offset	40
   322 ;;_sign	offset	42
   323 ;;_d	offset	44
   324 ;;_ne	offset	46
   325 ;;_m	offset	48
   326 ;;_pp	offset	50
   327 ;;_t	offset	52
   328 ;;_mode	offset	54
   329 ;;_nmode	offset	55
   330 ;;_fp	offset=-2 (param)
   331 ;;_f	offset=-6 (param)
   332 ;;_c	offset=-7 (param)
   333 ;;_tolower$5184	offset	0
   334 ;;_c	offset=-2 (param)
   335 ;;_c	offset=-2 (param)
   336 ;;_d	offset	0
   337 ;;_s	offset	2
   338 ;;_dest	offset=-2 (param)
   339 ;;_src	offset=-4 (param)
   340 ;;_u	offset	0
   341 ;;_m	offset	4
   342 ;;_e	offset	8
   343 ;;_x	offset=-4 (param)
   344 ;;_u	offset	0
   345 ;;_e	offset	4
   346 ;;_x	offset=-4 (param)
   347 ;;_exp1	offset	0
   348 ;;_sign1	offset	1
   349 ;;_f1	offset=-4 (param)
   350 ;;_f1	offset=-4 (param)
   351 ;;_ff1	offset=-4 (param)
   352 ;;_ff2	offset=-8 (param)
   353 ;;_ff1	offset=-4 (param)
   354 ;;_ff2	offset=-8 (param)
   355 ;;_grs	offset	0
   356 ;;_rem	offset	4
   357 ;;_new_exp	offset	8
   358 ;;_aexp	offset	10
   359 ;;_bexp	offset	11
   360 ;;_sign	offset	12
   361 ;;_b	offset=-4 (param)
   362 ;;_a	offset=-8 (param)
   363 ;;_sign	offset	0
   364 ;;_counter	offset	1
   365 ;;_dividend	offset=-2 (param)
   366 ;;_divisor	offset=-4 (param)
   367 ;;_quotient	offset	0
   368 ;;_sign	offset	2
   369 ;;_counter	offset	3
   370 ;;_dividend	offset=-2 (param)
   371 ;;_divisor	offset=-4 (param)
   372 ;;_dtoa$4484	offset	0
   373 ;;_n	offset	2
   374 ;;_i	offset	10
   375 ;;_s	offset	12
   376 ;;_w	offset	14
   377 ;;_p	offset	16
   378 ;;_fp	offset=-2 (param)
   379 ;;_d	offset=-10 (param)
   380 ;;_a	offset=-2 (param)
   381 ;;_sign	offset	0
   382 ;;_counter	offset	1
   383 ;;_dividend	offset=-8 (param)
   384 ;;_divisor	offset=-16 (param)
   385 ;;_quotient	offset	0
   386 ;;_sign	offset	8
   387 ;;_counter	offset	9
   388 ;;_dividend	offset=-8 (param)
   389 ;;_divisor	offset=-16 (param)
   390 ;;_w	offset	0
   391 ;;_fp	offset=-2 (param)
   392 ;;_c	offset=-3 (param)
   393 ;;_w	offset	0
   394 ;;_i	offset	2
   395 ;;_fp	offset=-2 (param)
   396 ;;_buf	offset=-4 (param)
   397 ;;_p	offset=-6 (param)
   398 ;;_a	offset	0
   399 ;;_s	offset=-2 (param)
   400 ;;_i	offset	0
   401 ;;_c	offset	2
   402 ;;_s	offset=-2 (param)
   403 ;;_fp	offset=-4 (param)
   404 ;;_c	offset=-2 (param)
   405 ;;_fp	offset=-4 (param)
   406 ;;_c	offset=-1 (param)
   407 ;;__this	offset=-2 (param)
   408 ;;_c	offset=-3 (param)
   409 ;;_atoi$5037	offset	0
   410 ;;_atoi$5035	offset	2
   411 ;;_atoi$5036	offset	4
   412 ;;_n	offset	5
   413 ;;_neg	offset	7
   414 ;;_s	offset=-2 (param)
   415 ;;_isspace$5075	offset	0
   416 ;;_c	offset=-2 (param)
   417 ;;_c	offset=-2 (param)
   418 ;;_vterm	offset=-1 (param)
   419 ;;_new_response_info	offset=-1 (param)
   420 ;;_new_response_info	offset=-1 (param)
   421 ;;_level	offset=-2 (param)
   422 ;;_dutyValue	offset=-2 (param)
   423 ;;_timer	offset=-1 (param)
   424 ;;_timer	offset=-1 (param)
   425 ;;_count	offset=-3 (param)
   426 ;;_lp_speed	offset	0
   427 ;;_new	offset=-4 (param)
   428 ;;_bn	offset=-5 (param)
   429 ;;_slow	offset=-6 (param)
   430 ;;_b	offset=-4 (param)
   431 ;;_a	offset=-8 (param)
   432 ;;_grs	offset	0
   433 ;;_bexp	offset	1
   434 ;;_aexp	offset	2
   435 ;;_signs	offset	3
   436 ;;_b	offset=-4 (param)
   437 ;;_a	offset=-8 (param)
   438 ;;_prod	offset	0
   439 ;;_grs	offset	4
   440 ;;_temp	offset	8
   441 ;;_bexp	offset	10
   442 ;;_aexp	offset	11
   443 ;;_sign	offset	12
   444 ;;_b	offset=-4 (param)
   445 ;;_a	offset=-8 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_state	offset	0
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_i	offset	0
   458 ;;_sw_value	offset	1
   459 ;;_timerVal	offset=-2 (param)
   460 ;;_channel	offset=-1 (param)
   461 ;;_i	offset	0
   462                           
   463                           	psect	idataBANK0
   464  01847E                     __pidataBANK0:
   465                           	opt callstack 0
   466                           
   467                           ;initializer for _R
   468  01847E  0000               	dw	0
   469  018480  0000               	dw	0
   470  018482  0000               	dw	0
   471  018484  0000               	dw	0
   472  018486  0000               	dw	0
   473  018488  0000               	dw	0
   474  01848A  0000               	dw	0
   475  01848C  0000               	dw	0
   476  01848E  0000               	dw	0
   477  018490  0000               	dw	0
   478  018492  0000               	dw	0
   479  018494  0000               	dw	0
   480  018496  0000               	dw	0
   481  018498  0000               	dw	0
   482  01849A  0000               	dw	0
   483  01849C  0000               	dw	0
   484  01849E  0F67               	dw	3943
   485  0184A0  0F8F               	dw	3983
   486  0184A2  00                 	db	0
   487  0184A3  0000               	dw	0
   488  0184A5  00                 	db	0
   489                           
   490                           ;initializer for _H
   491  0184A6  00                 	db	0
   492  0184A7  00                 	db	0
   493  0184A8  01                 	db	1
   494  0184A9  00                 	db	0
   495  0184AA  01                 	db	1
   496  0184AB  00                 	db	0
   497  0184AC  00                 	db	0
   498                           
   499                           	psect	idataBANK1
   500  018AAA                     __pidataBANK1:
   501                           	opt callstack 0
   502                           
   503                           ;initializer for stoa@F1166
   504  018AAA  28                 	db	40
   505  018AAB  6E                 	db	110
   506  018AAC  75                 	db	117
   507  018AAD  6C                 	db	108
   508  018AAE  6C                 	db	108
   509  018AAF  29                 	db	41
   510  018AB0  00                 	db	0
   511                           
   512                           ;initializer for _port_data
   513  018AB1  FF                 	db	255
   514  018AB2  00                 	db	0
   515  018AB3  FF                 	db	255
   516  018AB4  00                 	db	0
   517  018AB5  FF                 	db	255
   518  018AB6  00                 	db	0
   519  018AB7  FF                 	db	255
   520  018AB8  00                 	db	0
   521  018AB9  FF                 	db	255
   522  018ABA  00                 	db	0
   523  018ABB  FF                 	db	255
   524  018ABC  00                 	db	0
   525  018ABD  FF                 	db	255
   526  018ABE  00                 	db	0
   527  018ABF  FF                 	db	255
   528  018AC0  00                 	db	0
   529                           
   530                           	psect	idataBANK2
   531  017292                     __pidataBANK2:
   532                           	opt callstack 0
   533                           
   534                           ;initializer for _V
   535  017292  00                 	db	0
   536  017293  00                 	db	0
   537  017294  00                 	db	0
   538  017295  00                 	db	0
   539  017296  00                 	db	0
   540  017297  00                 	db	0
   541  017298  00                 	db	0
   542  017299  00                 	db	0
   543  01729A  00                 	db	0
   544  01729B  00                 	db	0
   545  01729C  00                 	db	0
   546  01729D  00                 	db	0
   547  01729E  00                 	db	0
   548  01729F  00                 	db	0
   549  0172A0  00                 	db	0
   550  0172A1  00                 	db	0
   551  0172A2  00                 	db	0
   552  0172A3  00                 	db	0
   553  0172A4  00                 	db	0
   554  0172A5  00                 	db	0
   555  0172A6  00                 	db	0
   556  0172A7  00                 	db	0
   557  0172A8  00                 	db	0
   558  0172A9  00                 	db	0
   559  0172AA  00                 	db	0
   560  0172AB  00                 	db	0
   561  0172AC  00                 	db	0
   562  0172AD  00                 	db	0
   563  0172AE  00                 	db	0
   564  0172AF  00                 	db	0
   565  0172B0  00                 	db	0
   566  0172B1  00                 	db	0
   567  0172B2  00                 	db	0
   568  0172B3  00                 	db	0
   569  0172B4  00                 	db	0
   570  0172B5  00                 	db	0
   571  0172B6  00                 	db	0
   572  0172B7  00                 	db	0
   573  0172B8  00                 	db	0
   574  0172B9  00                 	db	0
   575  0172BA  00                 	db	0
   576  0172BB  00                 	db	0
   577  0172BC  00                 	db	0
   578  0172BD  00                 	db	0
   579  0172BE  00                 	db	0
   580  0172BF  00                 	db	0
   581  0172C0  00                 	db	0
   582  0172C1  00                 	db	0
   583  0172C2  00                 	db	0
   584  0172C3  00                 	db	0
   585  0172C4  00                 	db	0
   586  0172C5  00                 	db	0
   587  0172C6  00                 	db	0
   588  0172C7  00                 	db	0
   589  0172C8  00                 	db	0
   590  0172C9  00                 	db	0
   591  0172CA  00                 	db	0
   592  0172CB  00                 	db	0
   593  0172CC  00                 	db	0
   594  0172CD  00                 	db	0
   595  0172CE  00                 	db	0
   596  0172CF  00                 	db	0
   597  0172D0  00                 	db	0
   598  0172D1  00                 	db	0
   599  0172D2  00                 	db	0
   600  0172D3  00                 	db	0
   601  0172D4  00                 	db	0
   602  0172D5  00                 	db	0
   603  0172D6  00                 	db	0
   604  0172D7  00                 	db	0
   605  0172D8  00                 	db	0
   606  0172D9  00                 	db	0
   607  0172DA  00                 	db	0
   608  0172DB  00                 	db	0
   609  0172DC  00                 	db	0
   610  0172DD  00                 	db	0
   611  0172DE  00                 	db	0
   612  0172DF  00                 	db	0
   613  0172E0  00                 	db	0
   614  0172E1  00                 	db	0
   615  0172E2  00                 	db	0
   616  0172E3  00                 	db	0
   617  0172E4  00                 	db	0
   618  0172E5  00                 	db	0
   619  0172E6  00                 	db	0
   620  0172E7  00                 	db	0
   621  0172E8  00                 	db	0
   622  0172E9  00                 	db	0
   623  0172EA  00                 	db	0
   624  0172EB  00                 	db	0
   625  0172EC  00                 	db	0
   626  0172ED  00                 	db	0
   627  0172EE  00                 	db	0
   628  0172EF  00                 	db	0
   629  0172F0  00                 	db	0
   630  0172F1  00                 	db	0
   631  0172F2  00                 	db	0
   632  0172F3  00                 	db	0
   633  0172F4  00                 	db	0
   634  0172F5  00                 	db	0
   635  0172F6  00                 	db	0
   636  0172F7  00                 	db	0
   637  0172F8  00                 	db	0
   638  0172F9  00                 	db	0
   639  0172FA  00                 	db	0
   640  0172FB  00                 	db	0
   641  0172FC  00                 	db	0
   642  0172FD  00                 	db	0
   643  0172FE  00                 	db	0
   644  0172FF  00                 	db	0
   645  017300  00                 	db	0
   646  017301  00                 	db	0
   647  017302  00                 	db	0
   648  017303  00                 	db	0
   649  017304  00                 	db	0
   650  017305  00                 	db	0
   651  017306  00                 	db	0
   652  017307  00                 	db	0
   653  017308  00                 	db	0
   654  017309  00                 	db	0
   655  01730A  00                 	db	0
   656  01730B  00                 	db	0
   657  01730C  00                 	db	0
   658  01730D  00                 	db	0
   659  01730E  00                 	db	0
   660  01730F  00                 	db	0
   661  017310  00                 	db	0
   662  017311  00                 	db	0
   663  017312  00                 	db	0
   664  017313  0000               	dw	0
   665  017315  0000               	dw	0
   666  017317  0000               	dw	0
   667  017319  0000               	dw	0
   668  01731B  00                 	db	0
   669  01731C  00                 	db	0
   670  01731D  00                 	db	0
   671  01731E  00                 	db	0
   672  01731F  00                 	db	0
   673  017320  00                 	db	0
   674  017321  0000               	dw	0
   675  017323  0000               	dw	0
   676  017325  0000               	dw	0
   677  017327  0000               	dw	0
   678  017329  0000               	dw	0
   679  01732B  0000               	dw	0
   680  01732D  00                 	db	0
   681  01732E  00                 	db	0
   682  01732F  00                 	db	0
   683  017330  00                 	db	0
   684  017331  00                 	db	0
   685  017332  00                 	db	0
   686  017333  00                 	db	0
   687  017334  00                 	db	0
   688  017335  00                 	db	0
   689  017336  00                 	db	0
   690  017337  0000               	dw	0
   691  017339  0000               	dw	0
   692  01733B  2D                 	db	45
   693  01733C  00                 	db	0
   694  01733D  0000               	dw	0
   695  01733F  0000               	dw	0
   696  017341  0000               	dw	0
   697  017343  0000               	dw	0
   698  017345  0000               	dw	0
   699  017347  0000               	dw	0
   700  017349  0000               	dw	0
   701  01734B  0000               	dw	0
   702                           
   703                           	psect	mediumconst
   704  00FDD2                     __pmediumconst:
   705                           	opt callstack 0
   706  00FDD2  00                 	db	0
   707  00FDD3                     _T:
   708                           	opt callstack 0
   709  00FDD3  63                 	db	99
   710  00FDD4  6F                 	db	111
   711  00FDD5  6D                 	db	109
   712  00FDD6  6D                 	db	109
   713  00FDD7  61                 	db	97
   714  00FDD8  6E                 	db	110
   715  00FDD9  64                 	db	100
   716  00FDDA  73                 	db	115
   717  00FDDB  20                 	db	32
   718  00FDDC  31                 	db	49
   719  00FDDD  00                 	db	0
   720  00FDDE  00                 	db	0
   721  00FDDF  00                 	db	0
   722  00FDE0  00                 	db	0
   723  00FDE1  00                 	db	0
   724  00FDE2  00                 	db	0
   725  00FDE3  00                 	db	0
   726  00FDE4  00                 	db	0
   727  00FDE5  64                 	db	100
   728  00FDE6  69                 	db	105
   729  00FDE7  73                 	db	115
   730  00FDE8  70                 	db	112
   731  00FDE9  6C                 	db	108
   732  00FDEA  61                 	db	97
   733  00FDEB  79                 	db	121
   734  00FDEC  73                 	db	115
   735  00FDED  20                 	db	32
   736  00FDEE  31                 	db	49
   737  00FDEF  00                 	db	0
   738  00FDF0  00                 	db	0
   739  00FDF1  00                 	db	0
   740  00FDF2  00                 	db	0
   741  00FDF3  00                 	db	0
   742  00FDF4  00                 	db	0
   743  00FDF5  00                 	db	0
   744  00FDF6  00                 	db	0
   745  00FDF7  63                 	db	99
   746  00FDF8  6F                 	db	111
   747  00FDF9  6D                 	db	109
   748  00FDFA  6D                 	db	109
   749  00FDFB  61                 	db	97
   750  00FDFC  6E                 	db	110
   751  00FDFD  64                 	db	100
   752  00FDFE  73                 	db	115
   753  00FDFF  20                 	db	32
   754  00FE00  32                 	db	50
   755  00FE01  00                 	db	0
   756  00FE02  00                 	db	0
   757  00FE03  00                 	db	0
   758  00FE04  00                 	db	0
   759  00FE05  00                 	db	0
   760  00FE06  00                 	db	0
   761  00FE07  00                 	db	0
   762  00FE08  00                 	db	0
   763  00FE09  64                 	db	100
   764  00FE0A  69                 	db	105
   765  00FE0B  73                 	db	115
   766  00FE0C  70                 	db	112
   767  00FE0D  6C                 	db	108
   768  00FE0E  61                 	db	97
   769  00FE0F  79                 	db	121
   770  00FE10  73                 	db	115
   771  00FE11  20                 	db	32
   772  00FE12  32                 	db	50
   773  00FE13  00                 	db	0
   774  00FE14  00                 	db	0
   775  00FE15  00                 	db	0
   776  00FE16  00                 	db	0
   777  00FE17  00                 	db	0
   778  00FE18  00                 	db	0
   779  00FE19  00                 	db	0
   780  00FE1A  00                 	db	0
   781  00FE1B  63                 	db	99
   782  00FE1C  6F                 	db	111
   783  00FE1D  6D                 	db	109
   784  00FE1E  6D                 	db	109
   785  00FE1F  61                 	db	97
   786  00FE20  6E                 	db	110
   787  00FE21  64                 	db	100
   788  00FE22  73                 	db	115
   789  00FE23  20                 	db	32
   790  00FE24  33                 	db	51
   791  00FE25  00                 	db	0
   792  00FE26  00                 	db	0
   793  00FE27  00                 	db	0
   794  00FE28  00                 	db	0
   795  00FE29  00                 	db	0
   796  00FE2A  00                 	db	0
   797  00FE2B  00                 	db	0
   798  00FE2C  00                 	db	0
   799  00FE2D  64                 	db	100
   800  00FE2E  69                 	db	105
   801  00FE2F  73                 	db	115
   802  00FE30  70                 	db	112
   803  00FE31  6C                 	db	108
   804  00FE32  61                 	db	97
   805  00FE33  79                 	db	121
   806  00FE34  73                 	db	115
   807  00FE35  20                 	db	32
   808  00FE36  33                 	db	51
   809  00FE37  00                 	db	0
   810  00FE38  00                 	db	0
   811  00FE39  00                 	db	0
   812  00FE3A  00                 	db	0
   813  00FE3B  00                 	db	0
   814  00FE3C  00                 	db	0
   815  00FE3D  00                 	db	0
   816  00FE3E  00                 	db	0
   817  00FE3F  63                 	db	99
   818  00FE40  6F                 	db	111
   819  00FE41  6D                 	db	109
   820  00FE42  6D                 	db	109
   821  00FE43  61                 	db	97
   822  00FE44  6E                 	db	110
   823  00FE45  64                 	db	100
   824  00FE46  73                 	db	115
   825  00FE47  20                 	db	32
   826  00FE48  34                 	db	52
   827  00FE49  00                 	db	0
   828  00FE4A  00                 	db	0
   829  00FE4B  00                 	db	0
   830  00FE4C  00                 	db	0
   831  00FE4D  00                 	db	0
   832  00FE4E  00                 	db	0
   833  00FE4F  00                 	db	0
   834  00FE50  00                 	db	0
   835  00FE51  64                 	db	100
   836  00FE52  69                 	db	105
   837  00FE53  73                 	db	115
   838  00FE54  70                 	db	112
   839  00FE55  6C                 	db	108
   840  00FE56  61                 	db	97
   841  00FE57  79                 	db	121
   842  00FE58  73                 	db	115
   843  00FE59  20                 	db	32
   844  00FE5A  34                 	db	52
   845  00FE5B  00                 	db	0
   846  00FE5C  00                 	db	0
   847  00FE5D  00                 	db	0
   848  00FE5E  00                 	db	0
   849  00FE5F  00                 	db	0
   850  00FE60  00                 	db	0
   851  00FE61  00                 	db	0
   852  00FE62  00                 	db	0
   853  00FE63                     __end_of_T:
   854                           	opt callstack 0
   855  0000                     _IVTADL	set	14493
   856  0000                     _IVTADH	set	14494
   857  0000                     _IVTADU	set	14495
   858  0000                     _PIR4bits	set	14756
   859  0000                     _PIE8bits	set	14744
   860  0000                     _PIR8bits	set	14760
   861  0000                     _SCANPR	set	14839
   862  0000                     _DMA2PR	set	14836
   863  0000                     _DMA1PR	set	14835
   864  0000                     _MAINPR	set	14834
   865  0000                     _ISRPR	set	14833
   866  0000                     _PIE2bits	set	14738
   867  0000                     _PIR2bits	set	14754
   868  0000                     _PIE9bits	set	14745
   869  0000                     _PIR9bits	set	14761
   870  0000                     _PIE6bits	set	14742
   871  0000                     _PIE3bits	set	14739
   872  0000                     _PMD7	set	14791
   873  0000                     _PMD6	set	14790
   874  0000                     _PMD5	set	14789
   875  0000                     _PMD4	set	14788
   876  0000                     _PMD3	set	14787
   877  0000                     _PMD2	set	14786
   878  0000                     _PMD1	set	14785
   879  0000                     _PMD0	set	14784
   880  0000                     _OSCTUNE	set	14814
   881  0000                     _OSCFRQ	set	14815
   882  0000                     _OSCEN	set	14813
   883  0000                     _OSCCON3	set	14811
   884  0000                     _OSCCON1	set	14809
   885  0000                     _IPR8bits	set	14728
   886  0000                     _IPR9bits	set	14729
   887  0000                     _IPR5bits	set	14725
   888  0000                     _IPR1bits	set	14721
   889  0000                     _IPR3bits	set	14723
   890  0000                     _IPR6bits	set	14726
   891  0000                     _IPR2bits	set	14722
   892  0000                     _PIE5bits	set	14741
   893  0000                     _PIE1bits	set	14737
   894  0000                     _PIR5bits	set	14757
   895  0000                     _PIR1bits	set	14753
   896  0000                     _PLLR	set	118496
   897  0000                     _SPI1SDIPPS	set	15071
   898  0000                     _U1RXPPS	set	15077
   899  0000                     _RC6PPS	set	14870
   900  0000                     _RC5PPS	set	14869
   901  0000                     _INT1PPS	set	15041
   902  0000                     _RD1PPS	set	14873
   903  0000                     _INT0PPS	set	15040
   904  0000                     _RC3PPS	set	14867
   905  0000                     _RB6PPS	set	14862
   906  0000                     _SPI1SCKPPS	set	15070
   907  0000                     _U2RXPPS	set	15080
   908  0000                     _SLRCONF	set	14995
   909  0000                     _SLRCONE	set	14979
   910  0000                     _SLRCOND	set	14963
   911  0000                     _SLRCONC	set	14947
   912  0000                     _SLRCONB	set	14931
   913  0000                     _SLRCONA	set	14915
   914  0000                     _ODCOND	set	14962
   915  0000                     _ODCONC	set	14946
   916  0000                     _ODCONB	set	14930
   917  0000                     _ODCONA	set	14914
   918  0000                     _ODCONF	set	14994
   919  0000                     _ODCONE	set	14978
   920  0000                     _WPUC	set	14945
   921  0000                     _WPUA	set	14913
   922  0000                     _WPUB	set	14929
   923  0000                     _WPUE	set	14977
   924  0000                     _WPUF	set	14993
   925  0000                     _WPUD	set	14961
   926  0000                     _ANSELA	set	14912
   927  0000                     _ANSELF	set	14992
   928  0000                     _ANSELE	set	14976
   929  0000                     _ANSELB	set	14928
   930  0000                     _ANSELC	set	14944
   931  0000                     _ANSELD	set	14960
   932  0000                     _DMA2SSA	set	15321
   933  0000                     _DMA1SSA	set	15353
   934  0000                     _DMA2DSZ	set	15310
   935  0000                     _DMA2SSZ	set	15319
   936  0000                     _DMA2DSA	set	15312
   937  0000                     _DMA1DSZ	set	15342
   938  0000                     _DMA1SSZ	set	15351
   939  0000                     _DMA1DSA	set	15344
   940  0000                     _DMA1CON0bits	set	15356
   941  0000                     _DMA1CON1bits	set	15357
   942  0000                     _DMA2CON0	set	15324
   943  0000                     _DMA2AIRQ	set	15326
   944  0000                     _DMA2SIRQ	set	15327
   945  0000                     _DMA2CON1	set	15325
   946  0000                     _DMA1CON0	set	15356
   947  0000                     _DMA1AIRQ	set	15358
   948  0000                     _DMA1SIRQ	set	15359
   949  0000                     _DMA1CON1	set	15357
   950  0000                     _CLKRCON	set	15589
   951  0000                     _CLKRCLK	set	15590
   952  0000                     _SPI1INTFbits	set	15642
   953  0000                     _SPI1RXB	set	15632
   954  0000                     _SPI1TXB	set	15633
   955  0000                     _SPI1TCNTL	set	15634
   956  0000                     _SPI1CON0	set	15636
   957  0000                     _SPI1CLK	set	15644
   958  0000                     _SPI1BAUD	set	15641
   959  0000                     _SPI1CON2	set	15638
   960  0000                     _SPI1CON1	set	15637
   961  0000                     _U2RXB	set	15824
   962  0000                     _U2TXB	set	15826
   963  0000                     _U2ERRIE	set	15842
   964  0000                     _U2ERRIR	set	15841
   965  0000                     _U2UIR	set	15840
   966  0000                     _U2FIFO	set	15839
   967  0000                     _U2BRGH	set	15838
   968  0000                     _U2BRGL	set	15837
   969  0000                     _U2CON2	set	15836
   970  0000                     _U2CON1	set	15835
   971  0000                     _U2CON0	set	15834
   972  0000                     _U2P3L	set	15832
   973  0000                     _U2P2L	set	15830
   974  0000                     _U2P1L	set	15828
   975  0000                     _U1RXB	set	15848
   976  0000                     _U1TXB	set	15850
   977  0000                     _U1ERRIE	set	15866
   978  0000                     _U1ERRIR	set	15865
   979  0000                     _U1UIR	set	15864
   980  0000                     _U1FIFO	set	15863
   981  0000                     _U1BRGH	set	15862
   982  0000                     _U1BRGL	set	15861
   983  0000                     _U1CON2	set	15860
   984  0000                     _U1CON1	set	15859
   985  0000                     _U1CON0	set	15858
   986  0000                     _U1P3H	set	15857
   987  0000                     _U1P3L	set	15856
   988  0000                     _U1P2H	set	15855
   989  0000                     _U1P2L	set	15854
   990  0000                     _U1P1H	set	15853
   991  0000                     _U1P1L	set	15852
   992  0000                     _FVRCON	set	16065
   993  0000                     _ADFLTRL	set	16102
   994  0000                     _ADFLTRH	set	16103
   995  0000                     _ADCON0bits	set	16120
   996  0000                     _ADCON0	set	16120
   997  0000                     _ADCLK	set	16127
   998  0000                     _ADACT	set	16126
   999  0000                     _ADREF	set	16125
  1000  0000                     _ADSTAT	set	16124
  1001  0000                     _ADCON3	set	16123
  1002  0000                     _ADCON2	set	16122
  1003  0000                     _ADCON1	set	16121
  1004  0000                     _ADPREH	set	16119
  1005  0000                     _ADPREL	set	16118
  1006  0000                     _ADCAP	set	16117
  1007  0000                     _ADACQH	set	16116
  1008  0000                     _ADACQL	set	16115
  1009  0000                     _ADPCH	set	16113
  1010  0000                     _ADRPT	set	16108
  1011  0000                     _ADACCU	set	16106
  1012  0000                     _ADSTPTH	set	16101
  1013  0000                     _ADSTPTL	set	16100
  1014  0000                     _ADUTHH	set	16097
  1015  0000                     _ADUTHL	set	16096
  1016  0000                     _ADLTHH	set	16095
  1017  0000                     _ADLTHL	set	16094
  1018  0000                     _CCPTMRS1bits	set	16223
  1019  0000                     _PORTFbits	set	16335
  1020  0000                     _LATCbits	set	16316
  1021  0000                     _LATDbits	set	16317
  1022  0000                     _PORTBbits	set	16331
  1023  0000                     _T2CON	set	16300
  1024  0000                     _T2TMR	set	16298
  1025  0000                     _T2PR	set	16299
  1026  0000                     _T2RST	set	16303
  1027  0000                     _T2HLT	set	16301
  1028  0000                     _T2CLKCON	set	16302
  1029  0000                     _PWM8DCL	set	16224
  1030  0000                     _PWM8DCH	set	16225
  1031  0000                     _PWM8CON	set	16226
  1032  0000                     _LATEbits	set	16318
  1033  0000                     _T5CONbits	set	16282
  1034  0000                     _T5CON	set	16282
  1035  0000                     _TMR5L	set	16280
  1036  0000                     _TMR5H	set	16281
  1037  0000                     _T5CLK	set	16285
  1038  0000                     _T5GATE	set	16284
  1039  0000                     _T5GCON	set	16283
  1040  0000                     _T6CON	set	16276
  1041  0000                     _T6TMR	set	16274
  1042  0000                     _T6PR	set	16275
  1043  0000                     _T6RST	set	16279
  1044  0000                     _T6HLT	set	16277
  1045  0000                     _T6CLKCON	set	16278
  1046  0000                     _TRISD	set	16325
  1047  0000                     _TRISC	set	16324
  1048  0000                     _TRISB	set	16323
  1049  0000                     _TRISA	set	16322
  1050  0000                     _TRISF	set	16327
  1051  0000                     _TRISE	set	16326
  1052  0000                     _LATC	set	16316
  1053  0000                     _LATB	set	16315
  1054  0000                     _LATF	set	16319
  1055  0000                     _LATA	set	16314
  1056  0000                     _LATD	set	16317
  1057  0000                     _LATE	set	16318
  1058  0000                     _IVTLOCKbits	set	16340
  1059  0000                     _IVTLOCK	set	16340
  1060  0000                     _INTCON0bits	set	16338
  1061  0000                     _GIE	set	130711
  1062  00FE63                     
  1063                           ; BSR set to: 57
  1064  00FE63  20                 	db	32
  1065  00FE64  4D                 	db	77	;'M'
  1066  00FE65  65                 	db	101	;'e'
  1067  00FE66  73                 	db	115	;'s'
  1068  00FE67  67                 	db	103	;'g'
  1069  00FE68  20                 	db	32
  1070  00FE69  25                 	db	37
  1071  00FE6A  64                 	db	100	;'d'
  1072  00FE6B  20                 	db	32
  1073  00FE6C  53                 	db	83	;'S'
  1074  00FE6D  74                 	db	116	;'t'
  1075  00FE6E  61                 	db	97	;'a'
  1076  00FE6F  63                 	db	99	;'c'
  1077  00FE70  6B                 	db	107	;'k'
  1078  00FE71  20                 	db	32
  1079  00FE72  25                 	db	37
  1080  00FE73  64                 	db	100	;'d'
  1081  00FE74  20                 	db	32
  1082  00FE75  20                 	db	32
  1083  00FE76  20                 	db	32
  1084  00FE77  20                 	db	32
  1085  00FE78  20                 	db	32
  1086  00FE79  20                 	db	32
  1087  00FE7A  00                 	db	0
  1088  00FE7B                     STR_36:
  1089                           
  1090                           ; BSR set to: 57
  1091  00FE7B  20                 	db	32
  1092  00FE7C  20                 	db	32
  1093  00FE7D  20                 	db	32
  1094  00FE7E  20                 	db	32
  1095  00FE7F  20                 	db	32
  1096  00FE80  20                 	db	32
  1097  00FE81  20                 	db	32
  1098  00FE82  20                 	db	32
  1099  00FE83  20                 	db	32
  1100  00FE84  20                 	db	32
  1101  00FE85  20                 	db	32
  1102  00FE86  20                 	db	32
  1103  00FE87  20                 	db	32
  1104  00FE88  20                 	db	32
  1105  00FE89  20                 	db	32
  1106  00FE8A  20                 	db	32
  1107  00FE8B  20                 	db	32
  1108  00FE8C  20                 	db	32
  1109  00FE8D  00                 	db	0
  1110  00FE8E                     STR_26:
  1111                           
  1112                           ; BSR set to: 57
  1113  00FE8E  48                 	db	72	;'H'
  1114  00FE8F  45                 	db	69	;'E'
  1115  00FE90  4C                 	db	76	;'L'
  1116  00FE91  50                 	db	80	;'P'
  1117  00FE92  20                 	db	32
  1118  00FE93  25                 	db	37
  1119  00FE94  73                 	db	115	;'s'
  1120  00FE95  20                 	db	32
  1121  00FE96  20                 	db	32
  1122  00FE97  20                 	db	32
  1123  00FE98  20                 	db	32
  1124  00FE99  20                 	db	32
  1125  00FE9A  20                 	db	32
  1126  00FE9B  20                 	db	32
  1127  00FE9C  20                 	db	32
  1128  00FE9D  20                 	db	32
  1129  00FE9E  20                 	db	32
  1130  00FE9F  20                 	db	32
  1131  00FEA0  00                 	db	0
  1132  00FEA1                     
  1133                           ; BSR set to: 57
  1134  00FEA1  44                 	db	68	;'D'
  1135  00FEA2  49                 	db	73	;'I'
  1136  00FEA3  53                 	db	83	;'S'
  1137  00FEA4  50                 	db	80	;'P'
  1138  00FEA5  4C                 	db	76	;'L'
  1139  00FEA6  41                 	db	65	;'A'
  1140  00FEA7  59                 	db	89	;'Y'
  1141  00FEA8  20                 	db	32
  1142  00FEA9  25                 	db	37
  1143  00FEAA  73                 	db	115	;'s'
  1144  00FEAB  20                 	db	32
  1145  00FEAC  20                 	db	32
  1146  00FEAD  20                 	db	32
  1147  00FEAE  20                 	db	32
  1148  00FEAF  20                 	db	32
  1149  00FEB0  20                 	db	32
  1150  00FEB1  20                 	db	32
  1151  00FEB2  20                 	db	32
  1152  00FEB3  00                 	db	0
  1153  00FEB4                     STR_16:
  1154                           
  1155                           ; BSR set to: 57
  1156  00FEB4  52                 	db	82	;'R'
  1157  00FEB5  55                 	db	85	;'U'
  1158  00FEB6  4E                 	db	78	;'N'
  1159  00FEB7  20                 	db	32
  1160  00FEB8  20                 	db	32
  1161  00FEB9  20                 	db	32
  1162  00FEBA  20                 	db	32
  1163  00FEBB  20                 	db	32
  1164  00FEBC  20                 	db	32
  1165  00FEBD  20                 	db	32
  1166  00FEBE  20                 	db	32
  1167  00FEBF  20                 	db	32
  1168  00FEC0  20                 	db	32
  1169  00FEC1  20                 	db	32
  1170  00FEC2  20                 	db	32
  1171  00FEC3  20                 	db	32
  1172  00FEC4  20                 	db	32
  1173  00FEC5  20                 	db	32
  1174  00FEC6  00                 	db	0
  1175  00FEC7                     STR_18:
  1176                           
  1177                           ; BSR set to: 57
  1178  00FEC7  41                 	db	65	;'A'
  1179  00FEC8  55                 	db	85	;'U'
  1180  00FEC9  58                 	db	88	;'X'
  1181  00FECA  20                 	db	32
  1182  00FECB  20                 	db	32
  1183  00FECC  20                 	db	32
  1184  00FECD  20                 	db	32
  1185  00FECE  20                 	db	32
  1186  00FECF  20                 	db	32
  1187  00FED0  20                 	db	32
  1188  00FED1  20                 	db	32
  1189  00FED2  20                 	db	32
  1190  00FED3  20                 	db	32
  1191  00FED4  20                 	db	32
  1192  00FED5  20                 	db	32
  1193  00FED6  20                 	db	32
  1194  00FED7  20                 	db	32
  1195  00FED8  20                 	db	32
  1196  00FED9  00                 	db	0
  1197  00FEDA                     STR_9:
  1198                           
  1199                           ; BSR set to: 57
  1200  00FEDA  50                 	db	80	;'P'
  1201  00FEDB  56                 	db	86	;'V'
  1202  00FEDC  20                 	db	32
  1203  00FEDD  20                 	db	32
  1204  00FEDE  20                 	db	32
  1205  00FEDF  50                 	db	80	;'P'
  1206  00FEE0  57                 	db	87	;'W'
  1207  00FEE1  52                 	db	82	;'R'
  1208  00FEE2  20                 	db	32
  1209  00FEE3  25                 	db	37
  1210  00FEE4  33                 	db	51	;'3'
  1211  00FEE5  2E                 	db	46
  1212  00FEE6  32                 	db	50	;'2'
  1213  00FEE7  66                 	db	102	;'f'
  1214  00FEE8  20                 	db	32
  1215  00FEE9  20                 	db	32
  1216  00FEEA  20                 	db	32
  1217  00FEEB  20                 	db	32
  1218  00FEEC  00                 	db	0
  1219  00FEED                     STR_15:
  1220                           
  1221                           ; BSR set to: 57
  1222  00FEED  42                 	db	66	;'B'
  1223  00FEEE  41                 	db	65	;'A'
  1224  00FEEF  54                 	db	84	;'T'
  1225  00FEF0  20                 	db	32
  1226  00FEF1  20                 	db	32
  1227  00FEF2  50                 	db	80	;'P'
  1228  00FEF3  57                 	db	87	;'W'
  1229  00FEF4  52                 	db	82	;'R'
  1230  00FEF5  20                 	db	32
  1231  00FEF6  25                 	db	37
  1232  00FEF7  33                 	db	51	;'3'
  1233  00FEF8  2E                 	db	46
  1234  00FEF9  32                 	db	50	;'2'
  1235  00FEFA  66                 	db	102	;'f'
  1236  00FEFB  20                 	db	32
  1237  00FEFC  20                 	db	32
  1238  00FEFD  20                 	db	32
  1239  00FEFE  20                 	db	32
  1240  00FEFF  00                 	db	0
  1241  00FF00                     STR_11:
  1242                           
  1243                           ; BSR set to: 57
  1244  00FF00  49                 	db	73	;'I'
  1245  00FF01  4E                 	db	78	;'N'
  1246  00FF02  56                 	db	86	;'V'
  1247  00FF03  20                 	db	32
  1248  00FF04  20                 	db	32
  1249  00FF05  50                 	db	80	;'P'
  1250  00FF06  57                 	db	87	;'W'
  1251  00FF07  52                 	db	82	;'R'
  1252  00FF08  20                 	db	32
  1253  00FF09  25                 	db	37
  1254  00FF0A  33                 	db	51	;'3'
  1255  00FF0B  2E                 	db	46
  1256  00FF0C  32                 	db	50	;'2'
  1257  00FF0D  66                 	db	102	;'f'
  1258  00FF0E  20                 	db	32
  1259  00FF0F  20                 	db	32
  1260  00FF10  20                 	db	32
  1261  00FF11  20                 	db	32
  1262  00FF12  00                 	db	0
  1263  00FF13                     STR_10:
  1264                           
  1265                           ; BSR set to: 57
  1266  00FF13  4C                 	db	76	;'L'
  1267  00FF14  4F                 	db	79	;'O'
  1268  00FF15  41                 	db	65	;'A'
  1269  00FF16  44                 	db	68	;'D'
  1270  00FF17  20                 	db	32
  1271  00FF18  50                 	db	80	;'P'
  1272  00FF19  57                 	db	87	;'W'
  1273  00FF1A  52                 	db	82	;'R'
  1274  00FF1B  20                 	db	32
  1275  00FF1C  25                 	db	37
  1276  00FF1D  33                 	db	51	;'3'
  1277  00FF1E  2E                 	db	46
  1278  00FF1F  32                 	db	50	;'2'
  1279  00FF20  66                 	db	102	;'f'
  1280  00FF21  20                 	db	32
  1281  00FF22  20                 	db	32
  1282  00FF23  20                 	db	32
  1283  00FF24  20                 	db	32
  1284  00FF25  00                 	db	0
  1285  00FF26                     STR_13:
  1286                           
  1287                           ; BSR set to: 57
  1288  00FF26  42                 	db	66	;'B'
  1289  00FF27  56                 	db	86	;'V'
  1290  00FF28  20                 	db	32
  1291  00FF29  25                 	db	37
  1292  00FF2A  32                 	db	50	;'2'
  1293  00FF2B  2E                 	db	46
  1294  00FF2C  32                 	db	50	;'2'
  1295  00FF2D  66                 	db	102	;'f'
  1296  00FF2E  20                 	db	32
  1297  00FF2F  42                 	db	66	;'B'
  1298  00FF30  41                 	db	65	;'A'
  1299  00FF31  20                 	db	32
  1300  00FF32  25                 	db	37
  1301  00FF33  32                 	db	50	;'2'
  1302  00FF34  2E                 	db	46
  1303  00FF35  32                 	db	50	;'2'
  1304  00FF36  66                 	db	102	;'f'
  1305  00FF37  20                 	db	32
  1306  00FF38  00                 	db	0
  1307  00FF39                     STR_14:
  1308                           
  1309                           ; BSR set to: 57
  1310  00FF39  43                 	db	67	;'C'
  1311  00FF3A  56                 	db	86	;'V'
  1312  00FF3B  20                 	db	32
  1313  00FF3C  25                 	db	37
  1314  00FF3D  32                 	db	50	;'2'
  1315  00FF3E  2E                 	db	46
  1316  00FF3F  32                 	db	50	;'2'
  1317  00FF40  66                 	db	102	;'f'
  1318  00FF41  20                 	db	32
  1319  00FF42  4C                 	db	76	;'L'
  1320  00FF43  41                 	db	65	;'A'
  1321  00FF44  20                 	db	32
  1322  00FF45  25                 	db	37
  1323  00FF46  32                 	db	50	;'2'
  1324  00FF47  2E                 	db	46
  1325  00FF48  32                 	db	50	;'2'
  1326  00FF49  66                 	db	102	;'f'
  1327  00FF4A  20                 	db	32
  1328  00FF4B  00                 	db	0
  1329  00FF4C                     STR_12:
  1330                           
  1331                           ; BSR set to: 57
  1332  00FF4C  50                 	db	80	;'P'
  1333  00FF4D  56                 	db	86	;'V'
  1334  00FF4E  20                 	db	32
  1335  00FF4F  25                 	db	37
  1336  00FF50  32                 	db	50	;'2'
  1337  00FF51  2E                 	db	46
  1338  00FF52  32                 	db	50	;'2'
  1339  00FF53  66                 	db	102	;'f'
  1340  00FF54  20                 	db	32
  1341  00FF55  50                 	db	80	;'P'
  1342  00FF56  41                 	db	65	;'A'
  1343  00FF57  20                 	db	32
  1344  00FF58  25                 	db	37
  1345  00FF59  32                 	db	50	;'2'
  1346  00FF5A  2E                 	db	46
  1347  00FF5B  32                 	db	50	;'2'
  1348  00FF5C  66                 	db	102	;'f'
  1349  00FF5D  20                 	db	32
  1350  00FF5E  00                 	db	0
  1351  00FF5F                     STR_8:
  1352                           
  1353                           ; BSR set to: 57
  1354  00FF5F  20                 	db	32
  1355  00FF60  56                 	db	86	;'V'
  1356  00FF61  54                 	db	84	;'T'
  1357  00FF62  45                 	db	69	;'E'
  1358  00FF63  52                 	db	82	;'R'
  1359  00FF64  4D                 	db	77	;'M'
  1360  00FF65  20                 	db	32
  1361  00FF66  23                 	db	35
  1362  00FF67  32                 	db	50	;'2'
  1363  00FF68  20                 	db	32
  1364  00FF69  20                 	db	32
  1365  00FF6A  20                 	db	32
  1366  00FF6B  20                 	db	32
  1367  00FF6C  20                 	db	32
  1368  00FF6D  20                 	db	32
  1369  00FF6E  20                 	db	32
  1370  00FF6F  00                 	db	0
  1371  00FF70                     STR_4:
  1372                           
  1373                           ; BSR set to: 57
  1374  00FF70  20                 	db	32
  1375  00FF71  4E                 	db	78	;'N'
  1376  00FF72  53                 	db	83	;'S'
  1377  00FF73  41                 	db	65	;'A'
  1378  00FF74  53                 	db	83	;'S'
  1379  00FF75  50                 	db	80	;'P'
  1380  00FF76  4F                 	db	79	;'O'
  1381  00FF77  4F                 	db	79	;'O'
  1382  00FF78  4B                 	db	75	;'K'
  1383  00FF79  20                 	db	32
  1384  00FF7A  20                 	db	32
  1385  00FF7B  20                 	db	32
  1386  00FF7C  20                 	db	32
  1387  00FF7D  20                 	db	32
  1388  00FF7E  20                 	db	32
  1389  00FF7F  20                 	db	32
  1390  00FF80  00                 	db	0
  1391  00FF81                     STR_1:
  1392                           
  1393                           ; BSR set to: 57
  1394  00FF81  20                 	db	32
  1395  00FF82  4D                 	db	77	;'M'
  1396  00FF83  42                 	db	66	;'B'
  1397  00FF84  4D                 	db	77	;'M'
  1398  00FF85  43                 	db	67	;'C'
  1399  00FF86  20                 	db	32
  1400  00FF87  53                 	db	83	;'S'
  1401  00FF88  4F                 	db	79	;'O'
  1402  00FF89  4C                 	db	76	;'L'
  1403  00FF8A  41                 	db	65	;'A'
  1404  00FF8B  52                 	db	82	;'R'
  1405  00FF8C  4D                 	db	77	;'M'
  1406  00FF8D  4F                 	db	79	;'O'
  1407  00FF8E  4E                 	db	78	;'N'
  1408  00FF8F  20                 	db	32
  1409  00FF90  20                 	db	32
  1410  00FF91  00                 	db	0
  1411  00FF92                     STR_5:
  1412                           
  1413                           ; BSR set to: 57
  1414  00FF92  20                 	db	32
  1415  00FF93  53                 	db	83	;'S'
  1416  00FF94  45                 	db	69	;'E'
  1417  00FF95  51                 	db	81	;'Q'
  1418  00FF96  55                 	db	85	;'U'
  1419  00FF97  45                 	db	69	;'E'
  1420  00FF98  4E                 	db	78	;'N'
  1421  00FF99  43                 	db	67	;'C'
  1422  00FF9A  45                 	db	69	;'E'
  1423  00FF9B  20                 	db	32
  1424  00FF9C  54                 	db	84	;'T'
  1425  00FF9D  45                 	db	69	;'E'
  1426  00FF9E  53                 	db	83	;'S'
  1427  00FF9F  54                 	db	84	;'T'
  1428  00FFA0  20                 	db	32
  1429  00FFA1  20                 	db	32
  1430  00FFA2  00                 	db	0
  1431  00FFA3                     STR_30:
  1432                           
  1433                           ; BSR set to: 57
  1434  00FFA3  76                 	db	118	;'v'
  1435  00FFA4  74                 	db	116	;'t'
  1436  00FFA5  65                 	db	101	;'e'
  1437  00FFA6  72                 	db	114	;'r'
  1438  00FFA7  6D                 	db	109	;'m'
  1439  00FFA8  20                 	db	32
  1440  00FFA9  25                 	db	37
  1441  00FFAA  78                 	db	120	;'x'
  1442  00FFAB  3A                 	db	58	;':'
  1443  00FFAC  25                 	db	37
  1444  00FFAD  78                 	db	120	;'x'
  1445  00FFAE  20                 	db	32
  1446  00FFAF  20                 	db	32
  1447  00FFB0  20                 	db	32
  1448  00FFB1  00                 	db	0
  1449  00FFB2                     STR_2:
  1450                           
  1451                           ; BSR set to: 57
  1452  00FFB2  20                 	db	32
  1453  00FFB3  56                 	db	86	;'V'
  1454  00FFB4  65                 	db	101	;'e'
  1455  00FFB5  72                 	db	114	;'r'
  1456  00FFB6  73                 	db	115	;'s'
  1457  00FFB7  69                 	db	105	;'i'
  1458  00FFB8  6F                 	db	111	;'o'
  1459  00FFB9  6E                 	db	110	;'n'
  1460  00FFBA  20                 	db	32
  1461  00FFBB  25                 	db	37
  1462  00FFBC  73                 	db	115	;'s'
  1463  00FFBD  20                 	db	32
  1464  00FFBE  20                 	db	32
  1465  00FFBF  20                 	db	32
  1466  00FFC0  00                 	db	0
  1467  00FFC1                     STR_24:
  1468                           
  1469                           ; BSR set to: 57
  1470  00FFC1  4E                 	db	78	;'N'
  1471  00FFC2  6F                 	db	111	;'o'
  1472  00FFC3  76                 	db	118	;'v'
  1473  00FFC4  20                 	db	32
  1474  00FFC5  33                 	db	51	;'3'
  1475  00FFC6  30                 	db	48	;'0'
  1476  00FFC7  20                 	db	32
  1477  00FFC8  32                 	db	50	;'2'
  1478  00FFC9  30                 	db	48	;'0'
  1479  00FFCA  31                 	db	49	;'1'
  1480  00FFCB  39                 	db	57	;'9'
  1481  00FFCC  00                 	db	0
  1482  00FFCD                     STR_28:
  1483                           
  1484                           ; BSR set to: 57
  1485  00FFCD  25                 	db	37
  1486  00FFCE  73                 	db	115	;'s'
  1487  00FFCF  20                 	db	32
  1488  00FFD0  20                 	db	32
  1489  00FFD1  20                 	db	32
  1490  00FFD2  20                 	db	32
  1491  00FFD3  20                 	db	32
  1492  00FFD4  20                 	db	32
  1493  00FFD5  20                 	db	32
  1494  00FFD6  00                 	db	0
  1495  00FFD7                     STR_25:
  1496                           
  1497                           ; BSR set to: 57
  1498  00FFD7  31                 	db	49	;'1'
  1499  00FFD8  36                 	db	54	;'6'
  1500  00FFD9  3A                 	db	58	;':'
  1501  00FFDA  32                 	db	50	;'2'
  1502  00FFDB  38                 	db	56	;'8'
  1503  00FFDC  3A                 	db	58	;':'
  1504  00FFDD  35                 	db	53	;'5'
  1505  00FFDE  32                 	db	50	;'2'
  1506  00FFDF  00                 	db	0
  1507  00FFE0                     STR_3:
  1508                           
  1509                           ; BSR set to: 57
  1510  00FFE0  30                 	db	48	;'0'
  1511  00FFE1  2E                 	db	46
  1512  00FFE2  39                 	db	57	;'9'
  1513  00FFE3  39                 	db	57	;'9'
  1514  00FFE4  33                 	db	51	;'3'
  1515  00FFE5  00                 	db	0
  1516  00FFE6                     STR_43:
  1517                           
  1518                           ; BSR set to: 57
  1519  00FFE6  49                 	db	73	;'I'
  1520  00FFE7  4E                 	db	78	;'N'
  1521  00FFE8  46                 	db	70	;'F'
  1522  00FFE9  00                 	db	0
  1523  00FFEA                     STR_47:
  1524                           
  1525                           ; BSR set to: 57
  1526  00FFEA  4E                 	db	78	;'N'
  1527  00FFEB  41                 	db	65	;'A'
  1528  00FFEC  4E                 	db	78	;'N'
  1529  00FFED  00                 	db	0
  1530  00FFEE                     STR_44:
  1531                           
  1532                           ; BSR set to: 57
  1533  00FFEE  69                 	db	105	;'i'
  1534  00FFEF  6E                 	db	110	;'n'
  1535  00FFF0  66                 	db	102	;'f'
  1536  00FFF1  00                 	db	0
  1537  00FFF2                     STR_48:
  1538                           
  1539                           ; BSR set to: 57
  1540  00FFF2  6E                 	db	110	;'n'
  1541  00FFF3  61                 	db	97	;'a'
  1542  00FFF4  6E                 	db	110	;'n'
  1543  00FFF5  00                 	db	0
  1544  00FFF6                     STR_51:
  1545                           
  1546                           ; BSR set to: 57
  1547  00FFF6  6C                 	db	108	;'l'
  1548  00FFF7  66                 	db	102	;'f'
  1549  00FFF8  00                 	db	0
  1550  00FFF9                     STR_22:
  1551                           
  1552                           ; BSR set to: 57
  1553  00FFF9  25                 	db	37
  1554  00FFFA  63                 	db	99	;'c'
  1555  00FFFB  00                 	db	0
  1556  00FFFC                     STR_21:
  1557                           
  1558                           ; BSR set to: 57
  1559  00FFFC  25                 	db	37
  1560  00FFFD  73                 	db	115	;'s'
  1561  00FFFE  00                 	db	0
  1562  0000                     
  1563                           ; #config settings
  1564  00FFFF  00                 	db	0	; dummy byte at the end
  1565  0000                     
  1566                           	psect	cinit
  1567  016F1C                     __pcinit:
  1568                           	opt callstack 0
  1569  016F1C                     start_initialization:
  1570                           	opt callstack 0
  1571  016F1C                     __initialization:
  1572                           	opt callstack 0
  1573                           
  1574                           ; Initialize objects allocated to BANK2 (187 bytes)
  1575                           ; load TBLPTR registers with __pidataBANK2
  1576  016F1C  0E92               	movlw	low __pidataBANK2
  1577  016F1E  6EF6               	movwf	tblptrl,c
  1578  016F20  0E72               	movlw	high __pidataBANK2
  1579  016F22  6EF7               	movwf	tblptrh,c
  1580  016F24  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1581  016F26  6EF8               	movwf	tblptru,c
  1582  016F28  EE00  F200         	lfsr	0,__pdataBANK2
  1583  016F2C  EE20 F0BB          	lfsr	2,187
  1584  016F30                     copy_data0:
  1585  016F30  0009               	tblrd		*+
  1586  016F32  006F FFD7 FFEE     	movff	tablat,postinc0
  1587  016F38  50DD               	movf	postdec2,w,c
  1588  016F3A  50D9               	movf	fsr2l,w,c
  1589  016F3C  E1F9               	bnz	copy_data0
  1590                           
  1591                           ; Initialize objects allocated to BANK1 (23 bytes)
  1592                           ; load TBLPTR registers with __pidataBANK1
  1593  016F3E  0EAA               	movlw	low __pidataBANK1
  1594  016F40  6EF6               	movwf	tblptrl,c
  1595  016F42  0E8A               	movlw	high __pidataBANK1
  1596  016F44  6EF7               	movwf	tblptrh,c
  1597  016F46  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1598  016F48  6EF8               	movwf	tblptru,c
  1599  016F4A  EE00  F1D4         	lfsr	0,__pdataBANK1
  1600  016F4E  EE20 F017          	lfsr	2,23
  1601  016F52                     copy_data1:
  1602  016F52  0009               	tblrd		*+
  1603  016F54  006F FFD7 FFEE     	movff	tablat,postinc0
  1604  016F5A  50DD               	movf	postdec2,w,c
  1605  016F5C  50D9               	movf	fsr2l,w,c
  1606  016F5E  E1F9               	bnz	copy_data1
  1607                           
  1608                           ; Initialize objects allocated to BANK0 (47 bytes)
  1609                           ; load TBLPTR registers with __pidataBANK0
  1610  016F60  0E7E               	movlw	low __pidataBANK0
  1611  016F62  6EF6               	movwf	tblptrl,c
  1612  016F64  0E84               	movlw	high __pidataBANK0
  1613  016F66  6EF7               	movwf	tblptrh,c
  1614  016F68  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1615  016F6A  6EF8               	movwf	tblptru,c
  1616  016F6C  EE00  F0C7         	lfsr	0,__pdataBANK0
  1617  016F70  EE20 F02F          	lfsr	2,47
  1618  016F74                     copy_data2:
  1619  016F74  0009               	tblrd		*+
  1620  016F76  006F FFD7 FFEE     	movff	tablat,postinc0
  1621  016F7C  50DD               	movf	postdec2,w,c
  1622  016F7E  50D9               	movf	fsr2l,w,c
  1623  016F80  E1F9               	bnz	copy_data2
  1624                           
  1625                           ; Clear objects allocated to BANK7 (255 bytes)
  1626  016F82  EE01  F300         	lfsr	0,__pbssBANK7
  1627  016F86  EE20 F0FF          	lfsr	2,255
  1628  016F8A                     clear_0:
  1629  016F8A  6AEE               	clrf	postinc0,c
  1630  016F8C  50DD               	movf	postdec2,w,c
  1631  016F8E  50D9               	movf	fsr2l,w,c
  1632  016F90  E1FC               	bnz	clear_0
  1633  016F92  50DA               	movf	fsr2h,w,c
  1634  016F94  E1FA               	bnz	clear_0
  1635                           
  1636                           ; Clear objects allocated to BANK6 (255 bytes)
  1637  016F96  EE01  F200         	lfsr	0,__pbssBANK6
  1638  016F9A  EE20 F0FF          	lfsr	2,255
  1639  016F9E                     clear_1:
  1640  016F9E  6AEE               	clrf	postinc0,c
  1641  016FA0  50DD               	movf	postdec2,w,c
  1642  016FA2  50D9               	movf	fsr2l,w,c
  1643  016FA4  E1FC               	bnz	clear_1
  1644  016FA6  50DA               	movf	fsr2h,w,c
  1645  016FA8  E1FA               	bnz	clear_1
  1646                           
  1647                           ; Clear objects allocated to BANK5 (218 bytes)
  1648  016FAA  EE01  F100         	lfsr	0,__pbssBANK5
  1649  016FAE  0EDA               	movlw	218
  1650  016FB0                     clear_2:
  1651  016FB0  6AEE               	clrf	postinc0,c
  1652  016FB2  06E8               	decf	wreg,f,c
  1653  016FB4  E1FD               	bnz	clear_2
  1654                           
  1655                           ; Clear objects allocated to BANK4 (67 bytes)
  1656  016FB6  EE01  F000         	lfsr	0,__pbssBANK4
  1657  016FBA  0E43               	movlw	67
  1658  016FBC                     clear_3:
  1659  016FBC  6AEE               	clrf	postinc0,c
  1660  016FBE  06E8               	decf	wreg,f,c
  1661  016FC0  E1FD               	bnz	clear_3
  1662                           
  1663                           ; Clear objects allocated to BANK3 (215 bytes)
  1664  016FC2  EE00  F300         	lfsr	0,__pbssBANK3
  1665  016FC6  0ED7               	movlw	215
  1666  016FC8                     clear_4:
  1667  016FC8  6AEE               	clrf	postinc0,c
  1668  016FCA  06E8               	decf	wreg,f,c
  1669  016FCC  E1FD               	bnz	clear_4
  1670                           
  1671                           ; Clear objects allocated to BANK2 (64 bytes)
  1672  016FCE  EE00  F2BB         	lfsr	0,__pbssBANK2
  1673  016FD2  0E40               	movlw	64
  1674  016FD4                     clear_5:
  1675  016FD4  6AEE               	clrf	postinc0,c
  1676  016FD6  06E8               	decf	wreg,f,c
  1677  016FD8  E1FD               	bnz	clear_5
  1678                           
  1679                           ; Clear objects allocated to BANK1 (212 bytes)
  1680  016FDA  EE00  F100         	lfsr	0,__pbssBANK1
  1681  016FDE  0ED4               	movlw	212
  1682  016FE0                     clear_6:
  1683  016FE0  6AEE               	clrf	postinc0,c
  1684  016FE2  06E8               	decf	wreg,f,c
  1685  016FE4  E1FD               	bnz	clear_6
  1686                           
  1687                           ; Clear objects allocated to BANK0 (103 bytes)
  1688  016FE6  EE00  F060         	lfsr	0,__pbssBANK0
  1689  016FEA  0E67               	movlw	103
  1690  016FEC                     clear_7:
  1691  016FEC  6AEE               	clrf	postinc0,c
  1692  016FEE  06E8               	decf	wreg,f,c
  1693  016FF0  E1FD               	bnz	clear_7
  1694                           
  1695                           ; Clear objects allocated to COMRAM (49 bytes)
  1696  016FF2  EE00  F001         	lfsr	0,__pbssCOMRAM
  1697  016FF6  0E31               	movlw	49
  1698  016FF8                     clear_8:
  1699  016FF8  6AEE               	clrf	postinc0,c
  1700  016FFA  06E8               	decf	wreg,f,c
  1701  016FFC  E1FD               	bnz	clear_8
  1702                           
  1703                           ;
  1704                           ; Setup IVTBASE
  1705                           ;
  1706  016FFE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1707  017000  6ED5               	movwf	213,c
  1708  017002  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1709  017004  6ED6               	movwf	214,c
  1710  017006  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1711  017008  6ED7               	movwf	215,c
  1712  01700A                     end_of_initialization:
  1713                           	opt callstack 0
  1714  01700A                     __end_of__initialization:
  1715                           	opt callstack 0
  1716  01700A  0100               	movlb	0
  1717  01700C  EFB4  F096         	goto	_main	;jump to C main() function
  1718                           
  1719                           	psect	bssCOMRAM
  1720  000001                     __pbssCOMRAM:
  1721                           	opt callstack 0
  1722  000001                     _ADCC_ADTI_InterruptHandler:
  1723                           	opt callstack 0
  1724  000001                     	ds	3
  1725  000004                     _ADCC_ADI_InterruptHandler:
  1726                           	opt callstack 0
  1727  000004                     	ds	3
  1728  000007                     _UART1_TxInterruptHandler:
  1729                           	opt callstack 0
  1730  000007                     	ds	3
  1731  00000A                     _UART1_RxInterruptHandler:
  1732                           	opt callstack 0
  1733  00000A                     	ds	3
  1734  00000D                     _UART2_TxInterruptHandler:
  1735                           	opt callstack 0
  1736  00000D                     	ds	3
  1737  000010                     _UART2_RxInterruptHandler:
  1738                           	opt callstack 0
  1739  000010                     	ds	3
  1740  000013                     _INT1_InterruptHandler:
  1741                           	opt callstack 0
  1742  000013                     	ds	3
  1743  000016                     _INT0_InterruptHandler:
  1744                           	opt callstack 0
  1745  000016                     	ds	3
  1746  000019                     _nout:
  1747                           	opt callstack 0
  1748  000019                     	ds	2
  1749  00001B                     _width:
  1750                           	opt callstack 0
  1751  00001B                     	ds	2
  1752  00001D                     _prec:
  1753                           	opt callstack 0
  1754  00001D                     	ds	2
  1755  00001F                     _flags:
  1756                           	opt callstack 0
  1757  00001F                     	ds	2
  1758  000021                     TMR5_ISR@CountCallBack:
  1759                           	opt callstack 0
  1760  000021                     	ds	2
  1761  000023                     _timer5ReloadVal:
  1762                           	opt callstack 0
  1763  000023                     	ds	2
  1764  000025                     _mode_sw:
  1765                           	opt callstack 0
  1766  000025                     	ds	1
  1767  000026                     _uart2RxCount:
  1768                           	opt callstack 0
  1769  000026                     	ds	1
  1770  000027                     _uart2RxTail:
  1771                           	opt callstack 0
  1772  000027                     	ds	1
  1773  000028                     _uart2RxHead:
  1774                           	opt callstack 0
  1775  000028                     	ds	1
  1776  000029                     _uart2TxBufferRemaining:
  1777                           	opt callstack 0
  1778  000029                     	ds	1
  1779  00002A                     _uart2TxTail:
  1780                           	opt callstack 0
  1781  00002A                     	ds	1
  1782  00002B                     _uart2TxHead:
  1783                           	opt callstack 0
  1784  00002B                     	ds	1
  1785  00002C                     _uart1RxCount:
  1786                           	opt callstack 0
  1787  00002C                     	ds	1
  1788  00002D                     _uart1RxTail:
  1789                           	opt callstack 0
  1790  00002D                     	ds	1
  1791  00002E                     _uart1RxHead:
  1792                           	opt callstack 0
  1793  00002E                     	ds	1
  1794  00002F                     _uart1TxBufferRemaining:
  1795                           	opt callstack 0
  1796  00002F                     	ds	1
  1797  000030                     _uart1TxTail:
  1798                           	opt callstack 0
  1799  000030                     	ds	1
  1800  000031                     _uart1TxHead:
  1801                           	opt callstack 0
  1802  000031                     	ds	1
  1803                           
  1804                           	psect	bssBANK0
  1805  000060                     __pbssBANK0:
  1806                           	opt callstack 0
  1807  000060                     _S:
  1808                           	opt callstack 0
  1809  000060                     	ds	41
  1810  000089                     _tickCount:
  1811                           	opt callstack 0
  1812  000089                     	ds	24
  1813  0000A1                     _spi_link:
  1814                           	opt callstack 0
  1815  0000A1                     	ds	12
  1816  0000AD                     floorf@F524:
  1817                           	opt callstack 0
  1818  0000AD                     	ds	4
  1819  0000B1                     ___fpclassifyf@F463:
  1820                           	opt callstack 0
  1821  0000B1                     	ds	4
  1822  0000B5                     _utctime:
  1823                           	opt callstack 0
  1824  0000B5                     	ds	4
  1825  0000B9                     wdtdelay@dcount:
  1826                           	opt callstack 0
  1827  0000B9                     	ds	4
  1828  0000BD                     _P:
  1829                           	opt callstack 0
  1830  0000BD                     	ds	4
  1831  0000C1                     _TMR5_InterruptHandler:
  1832                           	opt callstack 0
  1833  0000C1                     	ds	3
  1834  0000C4                     _TMR6_InterruptHandler:
  1835                           	opt callstack 0
  1836  0000C4                     	ds	3
  1837                           
  1838                           	psect	dataBANK0
  1839  0000C7                     __pdataBANK0:
  1840                           	opt callstack 0
  1841  0000C7                     _R:
  1842                           	opt callstack 0
  1843  0000C7                     	ds	40
  1844  0000EF                     _H:
  1845                           	opt callstack 0
  1846  0000EF                     	ds	7
  1847                           
  1848                           	psect	bssBANK1
  1849  000100                     __pbssBANK1:
  1850                           	opt callstack 0
  1851  000100                     _C:
  1852                           	opt callstack 0
  1853  000100                     	ds	124
  1854  00017C                     _dbuf:
  1855                           	opt callstack 0
  1856  00017C                     	ds	80
  1857  0001CC                     _seed:
  1858                           	opt callstack 0
  1859  0001CC                     	ds	8
  1860                           
  1861                           	psect	dataBANK1
  1862  0001D4                     __pdataBANK1:
  1863                           	opt callstack 0
  1864  0001D4                     stoa@F1166:
  1865                           	opt callstack 0
  1866  0001D4                     	ds	7
  1867  0001DB                     _port_data:
  1868                           	opt callstack 0
  1869  0001DB                     	ds	16
  1870                           
  1871                           	psect	bssBANK2
  1872  0002BB                     __pbssBANK2:
  1873                           	opt callstack 0
  1874  0002BB                     _uart1TxBuffer:
  1875                           	opt callstack 0
  1876  0002BB                     	ds	64
  1877                           
  1878                           	psect	dataBANK2
  1879  000200                     __pdataBANK2:
  1880                           	opt callstack 0
  1881  000200                     _V:
  1882                           	opt callstack 0
  1883  000200                     	ds	187
  1884                           
  1885                           	psect	bssBANK3
  1886  000300                     __pbssBANK3:
  1887                           	opt callstack 0
  1888  000300                     lp_filter@smooth:
  1889                           	opt callstack 0
  1890  000300                     	ds	84
  1891  000354                     _uart2TxBuffer:
  1892                           	opt callstack 0
  1893  000354                     	ds	64
  1894  000394                     _ring_buf1:
  1895                           	opt callstack 0
  1896  000394                     	ds	67
  1897                           
  1898                           	psect	bssBANK4
  1899  000400                     __pbssBANK4:
  1900                           	opt callstack 0
  1901  000400                     _ring_buf2:
  1902                           	opt callstack 0
  1903  000400                     	ds	67
  1904                           
  1905                           	psect	bssBANK5
  1906  000500                     __pbssBANK5:
  1907                           	opt callstack 0
  1908  000500                     _D:
  1909                           	opt callstack 0
  1910  000500                     	ds	218
  1911                           
  1912                           	psect	bssBANK6
  1913  000600                     __pbssBANK6:
  1914                           	opt callstack 0
  1915  000600                     _uart1RxBuffer:
  1916                           	opt callstack 0
  1917  000600                     	ds	255
  1918                           
  1919                           	psect	bssBANK7
  1920  000700                     __pbssBANK7:
  1921                           	opt callstack 0
  1922  000700                     _uart2RxBuffer:
  1923                           	opt callstack 0
  1924  000700                     	ds	255
  1925                           
  1926                           	psect	cstackBANK1
  1927  0001EB                     __pcstackBANK1:
  1928                           	opt callstack 0
  1929  0001EB                     ??_TMR5_ISR:
  1930                           
  1931                           ; 1 bytes @ 0x0
  1932  0001EB                     	ds	4
  1933                           
  1934                           	psect	cstackBANK0
  1935  0000F6                     __pcstackBANK0:
  1936                           	opt callstack 0
  1937  0000F6                     ??_INT1_ISR:
  1938                           
  1939                           ; 1 bytes @ 0x0
  1940  0000F6                     	ds	4
  1941                           
  1942                           	psect	cstackCOMRAM
  1943  000052                     __pcstackCOMRAM:
  1944                           	opt callstack 0
  1945  000052                     ??_ADCC_ThresholdISR:
  1946  000052                     
  1947                           ; 1 bytes @ 0x0
  1948  000052                     	ds	5
  1949  000057                     ??_TMR6_ISR:
  1950                           
  1951                           ; 1 bytes @ 0x5
  1952  000057                     	ds	1
  1953  000058                     
  1954                           ; 1 bytes @ 0x6
  1955 ;;
  1956 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1957 ;;
  1958 ;; *************** function _main *****************
  1959 ;; Defined at:
  1960 ;;		line 166 in file "main.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  mode            1  [STACK] enum E17005
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1  [STACK] void 
  1967 ;; Registers used:
  1968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 1/1
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels required when called:   19
  1980 ;; This function calls:
  1981 ;;		_SYSTEM_Initialize
  1982 ;;		_StartTimer
  1983 ;;		_TimerDone
  1984 ;;		_WaitMs
  1985 ;;		_calc_model_data
  1986 ;;		_check_adc_scan
  1987 ;;		_check_help
  1988 ;;		_clear_adc_scan
  1989 ;;		_clear_hid_pflags
  1990 ;;		_convert_adc_data
  1991 ;;		_eaDogM_WriteCommand
  1992 ;;		_get_vterm_ptr
  1993 ;;		_hid_display
  1994 ;;		_init_display
  1995 ;;		_mode_lamp_dim
  1996 ;;		_set_display_info
  1997 ;;		_set_vterm
  1998 ;;		_sprintf
  1999 ;;		_srand
  2000 ;;		_start_adc_scan
  2001 ;;		_start_switch_handler
  2002 ;;		_update_lcd
  2003 ;; This function is called by:
  2004 ;;		Startup code after reset
  2005 ;; This function uses a reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text0
  2009  012D68                     __ptext0:
  2010                           	opt callstack 0
  2011  012D68                     _main:
  2012                           	opt callstack 0
  2013                           
  2014                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2015  012D68  52E6               	movf	postinc1,f,c
  2016                           
  2017                           ;main.c: 168:  UI_STATES mode;;main.c: 173:  SYSTEM_Initialize();
  2018                           
  2019                           ;incstack = 0
  2020  012D6A  EC68  F0C0         	call	_SYSTEM_Initialize	;wreg free
  2021                           
  2022                           ; BSR set to: 60
  2023                           ;main.c: 176:  (INTCON0bits.GIEH = 1);
  2024  012D6E  8ED2               	bsf	210,7,c	;volatile
  2025                           
  2026                           ; BSR set to: 60
  2027                           ;main.c: 179:  (INTCON0bits.GIEL = 1);
  2028  012D70  8CD2               	bsf	210,6,c	;volatile
  2029                           
  2030                           ; BSR set to: 60
  2031                           ;main.c: 181:  V.ui_state = UI_STATE_INIT;
  2032  012D72  0102               	movlb	2	; () banked
  2033  012D74  6B00               	clrf	_V& (0+255),b	;volatile
  2034                           
  2035                           ; BSR set to: 2
  2036                           ;main.c: 186:  WaitMs(300);
  2037  012D76  0E2C               	movlw	44
  2038  012D78  6EE6               	movwf	postinc1,c
  2039  012D7A  0E01               	movlw	1
  2040  012D7C  6EE6               	movwf	postinc1,c
  2041  012D7E  EC8D  F0C1         	call	_WaitMs	;wreg free
  2042                           
  2043                           ;main.c: 187:  if (PORTBbits.RB0) {
  2044  012D82  A0CB               	btfss	203,0,c	;volatile
  2045  012D84  D004               	goto	l10517
  2046                           
  2047                           ;main.c: 188:   mode = UI_STATE_HOST;
  2048                           ;stkvar	_mode @ sp[(-1)+0]
  2049  012D86  0EFF               	movlw	-1
  2050  012D88  6AE3               	clrf	plusw1,c
  2051  012D8A  2AE3               	incf	plusw1,f,c
  2052                           
  2053                           ;main.c: 189:  } else {
  2054  012D8C  D004               	goto	l10519
  2055  012D8E                     l10517:
  2056                           
  2057                           ;main.c: 190:   mode = UI_STATE_LOG;
  2058                           ;stkvar	_mode @ sp[(-1)+0]
  2059  012D8E  0EFF               	movlw	-1
  2060  012D90  6AE3               	clrf	plusw1,c
  2061  012D92  80E3               	bsf	plusw1,0,c
  2062  012D94  82E3               	bsf	plusw1,1,c	;indir
  2063  012D96                     l10519:
  2064                           
  2065                           ;main.c: 193:  if (mode == UI_STATE_HOST) {
  2066                           ;stkvar	_mode @ sp[(-1)+0]
  2067  012D96  0EFF               	movlw	-1
  2068  012D98  04E3               	decf	plusw1,w,c
  2069  012D9A  A4D8               	btfss	status,2,c
  2070  012D9C  D007               	goto	l1250
  2071                           
  2072                           ;main.c: 194:   do { LATDbits.LATD0 = 1; } while(0);
  2073  012D9E  80BD               	bsf	189,0,c	;volatile
  2074                           
  2075                           ;main.c: 195:   V.mode_pwm = 70;
  2076  012DA0  0E00               	movlw	0
  2077  012DA2  0102               	movlb	2	; () banked
  2078  012DA4  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2079  012DA6  0E46               	movlw	70
  2080  012DA8  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2081                           
  2082                           ;main.c: 196:  } else {
  2083  012DAA  D004               	goto	l10523
  2084  012DAC                     l1250:
  2085  012DAC  90BD               	bcf	189,0,c	;volatile
  2086                           
  2087                           ;main.c: 198:   V.mode_pwm = 0;
  2088  012DAE  0102               	movlb	2	; () banked
  2089  012DB0  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2090  012DB2  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2091  012DB4                     l10523:
  2092                           
  2093                           ; BSR set to: 2
  2094                           ;main.c: 200:  mode_lamp_dim(V.mode_pwm);
  2095  012DB4  0060  FA57  FFE6   	movff	_V+149,postinc1
  2096  012DBA  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2097  012DC0  EC3D  F0C5         	call	_mode_lamp_dim	;wreg free
  2098  012DC4  D0D0               	goto	l10567
  2099  012DC6                     l10525:
  2100                           
  2101                           ; BSR set to: 2
  2102                           ;main.c: 211:    init_display();
  2103  012DC6  EC08  F0B8         	call	_init_display	;wreg free
  2104                           
  2105                           ; BSR set to: 61
  2106                           ;main.c: 212:    eaDogM_WriteCommand(0b00001100);
  2107  012DCA  0E0C               	movlw	12
  2108  012DCC  6EE6               	movwf	postinc1,c
  2109  012DCE  EC9D  F0C5         	call	_eaDogM_WriteCommand	;wreg free
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;main.c: 214:    V.ui_state = mode;
  2113                           ;stkvar	_mode @ sp[(-1)+0]
  2114  012DD2  0EFF               	movlw	-1
  2115  012DD4  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;main.c: 215:    srand(1957);
  2119  012DDA  0EA5               	movlw	165
  2120  012DDC  6EE6               	movwf	postinc1,c
  2121  012DDE  0E07               	movlw	7
  2122  012DE0  6EE6               	movwf	postinc1,c
  2123  012DE2  ECC3  F0C1         	call	_srand	;wreg free
  2124                           
  2125                           ; BSR set to: 1
  2126                           ;main.c: 216:    set_vterm(0);
  2127  012DE6  0E00               	movlw	0
  2128  012DE8  6EE6               	movwf	postinc1,c
  2129  012DEA  EC14  F0C5         	call	_set_vterm	;wreg free
  2130                           
  2131                           ; BSR set to: 5
  2132                           ;main.c: 217:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2133  012DEE  0E81               	movlw	low STR_1
  2134  012DF0  6EE6               	movwf	postinc1,c
  2135  012DF2  0EFF               	movlw	high STR_1
  2136  012DF4  6EE6               	movwf	postinc1,c
  2137  012DF6  0E00               	movlw	0
  2138  012DF8  6EE6               	movwf	postinc1,c
  2139  012DFA  0E00               	movlw	0
  2140  012DFC  6EE6               	movwf	postinc1,c
  2141  012DFE  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2142  012E02  0060  F0CB  FFE6   	movff	btemp,postinc1
  2143  012E08  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2144  012E0E  0E04               	movlw	4
  2145  012E10  6EE6               	movwf	postinc1,c
  2146  012E12  EC88  F0B6         	call	_sprintf	;wreg free
  2147                           
  2148                           ;main.c: 218:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.993");
  2149  012E16  0EE0               	movlw	low STR_3
  2150  012E18  6EE6               	movwf	postinc1,c
  2151  012E1A  0EFF               	movlw	high STR_3
  2152  012E1C  6EE6               	movwf	postinc1,c
  2153  012E1E  0EB2               	movlw	low STR_2
  2154  012E20  6EE6               	movwf	postinc1,c
  2155  012E22  0EFF               	movlw	high STR_2
  2156  012E24  6EE6               	movwf	postinc1,c
  2157  012E26  0E00               	movlw	0
  2158  012E28  6EE6               	movwf	postinc1,c
  2159  012E2A  0E01               	movlw	1
  2160  012E2C  6EE6               	movwf	postinc1,c
  2161  012E2E  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2162  012E32  0060  F0CB  FFE6   	movff	btemp,postinc1
  2163  012E38  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2164  012E3E  0E06               	movlw	6
  2165  012E40  6EE6               	movwf	postinc1,c
  2166  012E42  EC88  F0B6         	call	_sprintf	;wreg free
  2167                           
  2168                           ;main.c: 219:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2169  012E46  0E70               	movlw	low STR_4
  2170  012E48  6EE6               	movwf	postinc1,c
  2171  012E4A  0EFF               	movlw	high STR_4
  2172  012E4C  6EE6               	movwf	postinc1,c
  2173  012E4E  0E00               	movlw	0
  2174  012E50  6EE6               	movwf	postinc1,c
  2175  012E52  0E02               	movlw	2
  2176  012E54  6EE6               	movwf	postinc1,c
  2177  012E56  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2178  012E5A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2179  012E60  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2180  012E66  0E04               	movlw	4
  2181  012E68  6EE6               	movwf	postinc1,c
  2182  012E6A  EC88  F0B6         	call	_sprintf	;wreg free
  2183                           
  2184                           ;main.c: 220:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2185  012E6E  0E92               	movlw	low STR_5
  2186  012E70  6EE6               	movwf	postinc1,c
  2187  012E72  0EFF               	movlw	high STR_5
  2188  012E74  6EE6               	movwf	postinc1,c
  2189  012E76  0E02               	movlw	2
  2190  012E78  6EE6               	movwf	postinc1,c
  2191  012E7A  0E00               	movlw	0
  2192  012E7C  6EE6               	movwf	postinc1,c
  2193  012E7E  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2194  012E82  0060  F0CB  FFE6   	movff	btemp,postinc1
  2195  012E88  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2196  012E8E  0E04               	movlw	4
  2197  012E90  6EE6               	movwf	postinc1,c
  2198  012E92  EC88  F0B6         	call	_sprintf	;wreg free
  2199                           
  2200                           ;main.c: 221:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.993");
  2201  012E96  0EE0               	movlw	low STR_3
  2202  012E98  6EE6               	movwf	postinc1,c
  2203  012E9A  0EFF               	movlw	high STR_3
  2204  012E9C  6EE6               	movwf	postinc1,c
  2205  012E9E  0EB2               	movlw	low STR_2
  2206  012EA0  6EE6               	movwf	postinc1,c
  2207  012EA2  0EFF               	movlw	high STR_2
  2208  012EA4  6EE6               	movwf	postinc1,c
  2209  012EA6  0E02               	movlw	2
  2210  012EA8  6EE6               	movwf	postinc1,c
  2211  012EAA  0E01               	movlw	1
  2212  012EAC  6EE6               	movwf	postinc1,c
  2213  012EAE  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2214  012EB2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2215  012EB8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2216  012EBE  0E06               	movlw	6
  2217  012EC0  6EE6               	movwf	postinc1,c
  2218  012EC2  EC88  F0B6         	call	_sprintf	;wreg free
  2219                           
  2220                           ;main.c: 222:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2221  012EC6  0E5F               	movlw	low STR_8
  2222  012EC8  6EE6               	movwf	postinc1,c
  2223  012ECA  0EFF               	movlw	high STR_8
  2224  012ECC  6EE6               	movwf	postinc1,c
  2225  012ECE  0E02               	movlw	2
  2226  012ED0  6EE6               	movwf	postinc1,c
  2227  012ED2  0E02               	movlw	2
  2228  012ED4  6EE6               	movwf	postinc1,c
  2229  012ED6  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2230  012EDA  0060  F0CB  FFE6   	movff	btemp,postinc1
  2231  012EE0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2232  012EE6  0E04               	movlw	4
  2233  012EE8  6EE6               	movwf	postinc1,c
  2234  012EEA  EC88  F0B6         	call	_sprintf	;wreg free
  2235                           
  2236                           ;main.c: 223:    update_lcd(0);
  2237  012EEE  0E00               	movlw	0
  2238  012EF0  6EE6               	movwf	postinc1,c
  2239  012EF2  EC01  F0B6         	call	_update_lcd	;wreg free
  2240                           
  2241                           ;main.c: 224:    WaitMs(3000);
  2242  012EF6  0EB8               	movlw	184
  2243  012EF8  6EE6               	movwf	postinc1,c
  2244  012EFA  0E0B               	movlw	11
  2245  012EFC  6EE6               	movwf	postinc1,c
  2246  012EFE  EC8D  F0C1         	call	_WaitMs	;wreg free
  2247                           
  2248                           ;main.c: 225:    StartTimer(TMR_DISPLAY, 250);
  2249  012F02  0EFA               	movlw	250
  2250  012F04  6EE6               	movwf	postinc1,c
  2251  012F06  0E00               	movlw	0
  2252  012F08  6EE6               	movwf	postinc1,c
  2253  012F0A  0E0A               	movlw	10
  2254  012F0C  6EE6               	movwf	postinc1,c
  2255  012F0E  EC53  F0C1         	call	_StartTimer	;wreg free
  2256                           
  2257                           ;main.c: 226:    StartTimer(TMR_ADC, 200);
  2258  012F12  0EC8               	movlw	200
  2259  012F14  6EE6               	movwf	postinc1,c
  2260  012F16  0E00               	movlw	0
  2261  012F18  6EE6               	movwf	postinc1,c
  2262  012F1A  0E01               	movlw	1
  2263  012F1C  6EE6               	movwf	postinc1,c
  2264  012F1E  EC53  F0C1         	call	_StartTimer	;wreg free
  2265                           
  2266                           ;main.c: 227:    StartTimer(TMR_INFO, 3000);
  2267  012F22  0EB8               	movlw	184
  2268  012F24  6EE6               	movwf	postinc1,c
  2269  012F26  0E0B               	movlw	11
  2270  012F28  6EE6               	movwf	postinc1,c
  2271  012F2A  0E07               	movlw	7
  2272  012F2C  6EE6               	movwf	postinc1,c
  2273  012F2E  EC53  F0C1         	call	_StartTimer	;wreg free
  2274                           
  2275                           ;main.c: 228:    StartTimer(TMR_FLIPPER, 1500);
  2276  012F32  0EDC               	movlw	220
  2277  012F34  6EE6               	movwf	postinc1,c
  2278  012F36  0E05               	movlw	5
  2279  012F38  6EE6               	movwf	postinc1,c
  2280  012F3A  0E0B               	movlw	11
  2281  012F3C  6EE6               	movwf	postinc1,c
  2282  012F3E  EC53  F0C1         	call	_StartTimer	;wreg free
  2283                           
  2284                           ;main.c: 229:    StartTimer(TMR_HELPDIS, 3000);
  2285  012F42  0EB8               	movlw	184
  2286  012F44  6EE6               	movwf	postinc1,c
  2287  012F46  0E0B               	movlw	11
  2288  012F48  6EE6               	movwf	postinc1,c
  2289  012F4A  0E09               	movlw	9
  2290  012F4C  6EE6               	movwf	postinc1,c
  2291  012F4E  EC53  F0C1         	call	_StartTimer	;wreg free
  2292                           
  2293                           ;main.c: 231:    start_adc_scan();
  2294  012F52  EC2F  F0BE         	call	_start_adc_scan	;wreg free
  2295                           
  2296                           ;main.c: 232:    start_switch_handler();
  2297  012F56  ECAB  F0C4         	call	_start_switch_handler	;wreg free
  2298                           
  2299                           ;main.c: 234:    break;
  2300  012F5A  D01C               	goto	l10569
  2301  012F5C                     l1258:
  2302                           
  2303                           ; BSR set to: 2
  2304                           ;main.c: 240:    P.SYSTEM_STABLE = 1;
  2305  012F5C  0100               	movlb	0	; () banked
  2306  012F5E  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2307                           
  2308                           ;main.c: 241:    break;
  2309  012F60  D019               	goto	l10569
  2310  012F62                     l1260:
  2311                           
  2312                           ; BSR set to: 2
  2313                           ;main.c: 244:    V.ui_state = UI_STATE_INIT;
  2314  012F62  6B00               	clrf	_V& (0+255),b	;volatile
  2315                           
  2316                           ;main.c: 245:    break;
  2317  012F64  D017               	goto	l10569
  2318  012F66                     l10567:
  2319  012F66  0102               	movlb	2	; () banked
  2320  012F68  5100               	movf	_V& (0+255),w,b	;volatile
  2321  012F6A  6E3C               	movwf	(btemp+10)^0,c
  2322  012F6C  6A3D               	clrf	(btemp+11)^0,c
  2323                           
  2324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2325                           ; Switch size 1, requested type "simple"
  2326                           ; Number of cases is 1, Range of values is 0 to 0
  2327                           ; switch strategies available:
  2328                           ; Name         Instructions Cycles
  2329                           ; simple_byte            4     3 (average)
  2330                           ;	Chosen strategy is simple_byte
  2331  012F6E  503D               	movf	(btemp+11)^0,w,c
  2332  012F70  0A00               	xorlw	0	; case 0
  2333  012F72  A4D8               	btfss	status,2,c
  2334  012F74  D7F6               	goto	l1260
  2335                           
  2336                           ; BSR set to: 2
  2337                           ; Switch size 1, requested type "simple"
  2338                           ; Number of cases is 5, Range of values is 0 to 5
  2339                           ; switch strategies available:
  2340                           ; Name         Instructions Cycles
  2341                           ; simple_byte           16     9 (average)
  2342                           ;	Chosen strategy is simple_byte
  2343  012F76  503C               	movf	(btemp+10)^0,w,c
  2344  012F78  0A00               	xorlw	0	; case 0
  2345  012F7A  B4D8               	btfsc	status,2,c
  2346  012F7C  D724               	goto	l10525
  2347  012F7E  0A01               	xorlw	1	; case 1
  2348  012F80  B4D8               	btfsc	status,2,c
  2349  012F82  D008               	goto	l10569
  2350  012F84  0A02               	xorlw	2	; case 3
  2351  012F86  B4D8               	btfsc	status,2,c
  2352  012F88  D005               	goto	l10569
  2353  012F8A  0A07               	xorlw	7	; case 4
  2354  012F8C  B4D8               	btfsc	status,2,c
  2355  012F8E  D7E6               	goto	l1258
  2356  012F90  0A01               	xorlw	1	; case 5
  2357  012F92  D7E7               	goto	l1260
  2358  012F94                     l10569:
  2359                           
  2360                           ;main.c: 248:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2361  012F94  0E01               	movlw	1
  2362  012F96  6EE6               	movwf	postinc1,c
  2363  012F98  EC53  F0C4         	call	_TimerDone	;wreg free
  2364  012F9C  5032               	movf	btemp^0,w,c
  2365  012F9E  B4D8               	btfsc	status,2,c
  2366  012FA0  D013               	goto	l10581
  2367  012FA2  ECDD  F0C5         	call	_check_adc_scan	;wreg free
  2368  012FA6  5032               	movf	btemp^0,w,c
  2369  012FA8  B4D8               	btfsc	status,2,c
  2370  012FAA  D00E               	goto	l10581
  2371                           
  2372                           ;main.c: 252:    convert_adc_data();
  2373  012FAC  EC21  F0BD         	call	_convert_adc_data	;wreg free
  2374                           
  2375                           ;main.c: 256:    clear_adc_scan();
  2376  012FB0  ECE5  F0C5         	call	_clear_adc_scan	;wreg free
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;main.c: 257:    start_adc_scan();
  2380  012FB4  EC2F  F0BE         	call	_start_adc_scan	;wreg free
  2381                           
  2382                           ;main.c: 258:    StartTimer(TMR_ADC, 200);
  2383  012FB8  0EC8               	movlw	200
  2384  012FBA  6EE6               	movwf	postinc1,c
  2385  012FBC  0E00               	movlw	0
  2386  012FBE  6EE6               	movwf	postinc1,c
  2387  012FC0  0E01               	movlw	1
  2388  012FC2  6EE6               	movwf	postinc1,c
  2389  012FC4  EC53  F0C1         	call	_StartTimer	;wreg free
  2390  012FC8                     l10581:
  2391                           
  2392                           ;main.c: 265:   if (TimerDone(TMR_DISPLAY)) {
  2393                           
  2394                           ;main.c: 261:   if (V.ticks) {
  2395  012FC8  0E0A               	movlw	10
  2396  012FCA  6EE6               	movwf	postinc1,c
  2397  012FCC  EC53  F0C4         	call	_TimerDone	;wreg free
  2398  012FD0  5032               	movf	btemp^0,w,c
  2399  012FD2  B4D8               	btfsc	status,2,c
  2400  012FD4  D1A3               	goto	l10611
  2401                           
  2402                           ;main.c: 266:    if (TimerDone(TMR_HELPDIS)) {
  2403  012FD6  0E09               	movlw	9
  2404  012FD8  6EE6               	movwf	postinc1,c
  2405  012FDA  EC53  F0C4         	call	_TimerDone	;wreg free
  2406  012FDE  5032               	movf	btemp^0,w,c
  2407  012FE0  B4D8               	btfsc	status,2,c
  2408  012FE2  D004               	goto	l10589
  2409                           
  2410                           ;main.c: 267:     set_display_info(DIS_STR);
  2411  012FE4  0E00               	movlw	0
  2412  012FE6  6EE6               	movwf	postinc1,c
  2413  012FE8  ECD9  F0C4         	call	_set_display_info	;wreg free
  2414  012FEC                     l10589:
  2415                           
  2416                           ;main.c: 269:    calc_model_data();
  2417  012FEC  EC0D  F0A6         	call	_calc_model_data	;wreg free
  2418                           
  2419                           ; BSR set to: 1
  2420                           ;main.c: 275:    hid_display(&H);
  2421  012FF0  0EEF               	movlw	_H& (0+255)
  2422  012FF2  6EE6               	movwf	postinc1,c
  2423  012FF4  EC0D  F0B7         	call	_hid_display	;wreg free
  2424                           
  2425                           ;main.c: 276:    switch (H.hid_display) {
  2426  012FF8  D16C               	goto	l10603
  2427  012FFA                     l10593:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;main.c: 278:     sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2431  012FFA  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2432  013000  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2433  013006  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2434  01300C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2435  013012  0EDA               	movlw	low STR_9
  2436  013014  6EE6               	movwf	postinc1,c
  2437  013016  0EFE               	movlw	high STR_9
  2438  013018  6EE6               	movwf	postinc1,c
  2439  01301A  0E00               	movlw	0
  2440  01301C  6EE6               	movwf	postinc1,c
  2441  01301E  0E00               	movlw	0
  2442  013020  6EE6               	movwf	postinc1,c
  2443  013022  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2444  013026  0060  F0CB  FFE6   	movff	btemp,postinc1
  2445  01302C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2446  013032  0E08               	movlw	8
  2447  013034  6EE6               	movwf	postinc1,c
  2448  013036  EC88  F0B6         	call	_sprintf	;wreg free
  2449                           
  2450                           ;main.c: 279:     sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2451  01303A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2452  013040  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2453  013046  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2454  01304C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2455  013052  0E13               	movlw	low STR_10
  2456  013054  6EE6               	movwf	postinc1,c
  2457  013056  0EFF               	movlw	high STR_10
  2458  013058  6EE6               	movwf	postinc1,c
  2459  01305A  0E00               	movlw	0
  2460  01305C  6EE6               	movwf	postinc1,c
  2461  01305E  0E01               	movlw	1
  2462  013060  6EE6               	movwf	postinc1,c
  2463  013062  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2464  013066  0060  F0CB  FFE6   	movff	btemp,postinc1
  2465  01306C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2466  013072  0E08               	movlw	8
  2467  013074  6EE6               	movwf	postinc1,c
  2468  013076  EC88  F0B6         	call	_sprintf	;wreg free
  2469                           
  2470                           ;main.c: 280:     sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2471  01307A  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2472  013080  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2473  013086  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2474  01308C  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2475  013092  0E00               	movlw	low STR_11
  2476  013094  6EE6               	movwf	postinc1,c
  2477  013096  0EFF               	movlw	high STR_11
  2478  013098  6EE6               	movwf	postinc1,c
  2479  01309A  0E00               	movlw	0
  2480  01309C  6EE6               	movwf	postinc1,c
  2481  01309E  0E02               	movlw	2
  2482  0130A0  6EE6               	movwf	postinc1,c
  2483  0130A2  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2484  0130A6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2485  0130AC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2486  0130B2  0E08               	movlw	8
  2487  0130B4  6EE6               	movwf	postinc1,c
  2488  0130B6  EC88  F0B6         	call	_sprintf	;wreg free
  2489                           
  2490                           ;main.c: 281:     break;
  2491  0130BA  D120               	goto	l10605
  2492  0130BC                     l10595:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;main.c: 283:     sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.cal
      +                          c[C_PV]);
  2496  0130BC  0060  F413  FFE6   	movff	_C+4,postinc1
  2497  0130C2  0060  F417  FFE6   	movff	_C+5,postinc1
  2498  0130C8  0060  F41B  FFE6   	movff	_C+6,postinc1
  2499  0130CE  0060  F41F  FFE6   	movff	_C+7,postinc1
  2500  0130D4  0060  F453  FFE6   	movff	_C+20,postinc1
  2501  0130DA  0060  F457  FFE6   	movff	_C+21,postinc1
  2502  0130E0  0060  F45B  FFE6   	movff	_C+22,postinc1
  2503  0130E6  0060  F45F  FFE6   	movff	_C+23,postinc1
  2504  0130EC  0E4C               	movlw	low STR_12
  2505  0130EE  6EE6               	movwf	postinc1,c
  2506  0130F0  0EFF               	movlw	high STR_12
  2507  0130F2  6EE6               	movwf	postinc1,c
  2508  0130F4  0E00               	movlw	0
  2509  0130F6  6EE6               	movwf	postinc1,c
  2510  0130F8  0E00               	movlw	0
  2511  0130FA  6EE6               	movwf	postinc1,c
  2512  0130FC  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2513  013100  0060  F0CB  FFE6   	movff	btemp,postinc1
  2514  013106  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2515  01310C  0E0C               	movlw	12
  2516  01310E  6EE6               	movwf	postinc1,c
  2517  013110  EC88  F0B6         	call	_sprintf	;wreg free
  2518                           
  2519                           ;main.c: 284:     sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.ca
      +                          lc[C_BATT]);
  2520  013114  0060  F403  FFE6   	movff	_C,postinc1
  2521  01311A  0060  F407  FFE6   	movff	_C+1,postinc1
  2522  013120  0060  F40B  FFE6   	movff	_C+2,postinc1
  2523  013126  0060  F40F  FFE6   	movff	_C+3,postinc1
  2524  01312C  0060  F443  FFE6   	movff	_C+16,postinc1
  2525  013132  0060  F447  FFE6   	movff	_C+17,postinc1
  2526  013138  0060  F44B  FFE6   	movff	_C+18,postinc1
  2527  01313E  0060  F44F  FFE6   	movff	_C+19,postinc1
  2528  013144  0E26               	movlw	low STR_13
  2529  013146  6EE6               	movwf	postinc1,c
  2530  013148  0EFF               	movlw	high STR_13
  2531  01314A  6EE6               	movwf	postinc1,c
  2532  01314C  0E00               	movlw	0
  2533  01314E  6EE6               	movwf	postinc1,c
  2534  013150  0E01               	movlw	1
  2535  013152  6EE6               	movwf	postinc1,c
  2536  013154  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2537  013158  0060  F0CB  FFE6   	movff	btemp,postinc1
  2538  01315E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2539  013164  0E0C               	movlw	12
  2540  013166  6EE6               	movwf	postinc1,c
  2541  013168  EC88  F0B6         	call	_sprintf	;wreg free
  2542                           
  2543                           ;main.c: 285:     sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_l
      +                          oad);
  2544  01316C  0060  F503  FFE6   	movff	_C+64,postinc1
  2545  013172  0060  F507  FFE6   	movff	_C+65,postinc1
  2546  013178  0060  F50B  FFE6   	movff	_C+66,postinc1
  2547  01317E  0060  F50F  FFE6   	movff	_C+67,postinc1
  2548  013184  0060  F423  FFE6   	movff	_C+8,postinc1
  2549  01318A  0060  F427  FFE6   	movff	_C+9,postinc1
  2550  013190  0060  F42B  FFE6   	movff	_C+10,postinc1
  2551  013196  0060  F42F  FFE6   	movff	_C+11,postinc1
  2552  01319C  0E39               	movlw	low STR_14
  2553  01319E  6EE6               	movwf	postinc1,c
  2554  0131A0  0EFF               	movlw	high STR_14
  2555  0131A2  6EE6               	movwf	postinc1,c
  2556  0131A4  0E00               	movlw	0
  2557  0131A6  6EE6               	movwf	postinc1,c
  2558  0131A8  0E02               	movlw	2
  2559  0131AA  6EE6               	movwf	postinc1,c
  2560  0131AC  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2561  0131B0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2562  0131B6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2563  0131BC  0E0C               	movlw	12
  2564  0131BE  6EE6               	movwf	postinc1,c
  2565  0131C0  EC88  F0B6         	call	_sprintf	;wreg free
  2566                           
  2567                           ;main.c: 286:     break;
  2568  0131C4  D09B               	goto	l10605
  2569  0131C6                     l10597:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;main.c: 288:     sprintf(get_vterm_ptr(0, 0), "BAT  PWR %3.2f    ", C.p_bat);
  2573  0131C6  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2574  0131CC  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2575  0131D2  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2576  0131D8  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2577  0131DE  0EED               	movlw	low STR_15
  2578  0131E0  6EE6               	movwf	postinc1,c
  2579  0131E2  0EFE               	movlw	high STR_15
  2580  0131E4  6EE6               	movwf	postinc1,c
  2581  0131E6  0E00               	movlw	0
  2582  0131E8  6EE6               	movwf	postinc1,c
  2583  0131EA  0E00               	movlw	0
  2584  0131EC  6EE6               	movwf	postinc1,c
  2585  0131EE  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2586  0131F2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2587  0131F8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2588  0131FE  0E08               	movlw	8
  2589  013200  6EE6               	movwf	postinc1,c
  2590  013202  EC88  F0B6         	call	_sprintf	;wreg free
  2591                           
  2592                           ;main.c: 289:     sprintf(get_vterm_ptr(1, 0), "RUN               ");
  2593  013206  0EB4               	movlw	low STR_16
  2594  013208  6EE6               	movwf	postinc1,c
  2595  01320A  0EFE               	movlw	high STR_16
  2596  01320C  6EE6               	movwf	postinc1,c
  2597  01320E  0E00               	movlw	0
  2598  013210  6EE6               	movwf	postinc1,c
  2599  013212  0E01               	movlw	1
  2600  013214  6EE6               	movwf	postinc1,c
  2601  013216  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2602  01321A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2603  013220  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2604  013226  0E04               	movlw	4
  2605  013228  6EE6               	movwf	postinc1,c
  2606  01322A  EC88  F0B6         	call	_sprintf	;wreg free
  2607                           
  2608                           ;main.c: 290:     sprintf(get_vterm_ptr(2, 0), "RUN               ");
  2609  01322E  0EB4               	movlw	low STR_16
  2610  013230  6EE6               	movwf	postinc1,c
  2611  013232  0EFE               	movlw	high STR_16
  2612  013234  6EE6               	movwf	postinc1,c
  2613  013236  0E00               	movlw	0
  2614  013238  6EE6               	movwf	postinc1,c
  2615  01323A  0E02               	movlw	2
  2616  01323C  6EE6               	movwf	postinc1,c
  2617  01323E  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2618  013242  0060  F0CB  FFE6   	movff	btemp,postinc1
  2619  013248  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2620  01324E  0E04               	movlw	4
  2621  013250  6EE6               	movwf	postinc1,c
  2622  013252  EC88  F0B6         	call	_sprintf	;wreg free
  2623                           
  2624                           ;main.c: 291:     break;
  2625  013256  D052               	goto	l10605
  2626  013258                     l10599:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;main.c: 293:     sprintf(get_vterm_ptr(0, 0), "AUX               ");
  2630  013258  0EC7               	movlw	low STR_18
  2631  01325A  6EE6               	movwf	postinc1,c
  2632  01325C  0EFE               	movlw	high STR_18
  2633  01325E  6EE6               	movwf	postinc1,c
  2634  013260  0E00               	movlw	0
  2635  013262  6EE6               	movwf	postinc1,c
  2636  013264  0E00               	movlw	0
  2637  013266  6EE6               	movwf	postinc1,c
  2638  013268  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2639  01326C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2640  013272  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2641  013278  0E04               	movlw	4
  2642  01327A  6EE6               	movwf	postinc1,c
  2643  01327C  EC88  F0B6         	call	_sprintf	;wreg free
  2644                           
  2645                           ;main.c: 294:     sprintf(get_vterm_ptr(1, 0), "AUX               ");
  2646  013280  0EC7               	movlw	low STR_18
  2647  013282  6EE6               	movwf	postinc1,c
  2648  013284  0EFE               	movlw	high STR_18
  2649  013286  6EE6               	movwf	postinc1,c
  2650  013288  0E00               	movlw	0
  2651  01328A  6EE6               	movwf	postinc1,c
  2652  01328C  0E01               	movlw	1
  2653  01328E  6EE6               	movwf	postinc1,c
  2654  013290  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2655  013294  0060  F0CB  FFE6   	movff	btemp,postinc1
  2656  01329A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2657  0132A0  0E04               	movlw	4
  2658  0132A2  6EE6               	movwf	postinc1,c
  2659  0132A4  EC88  F0B6         	call	_sprintf	;wreg free
  2660                           
  2661                           ;main.c: 295:     sprintf(get_vterm_ptr(2, 0), "AUX               ");
  2662  0132A8  0EC7               	movlw	low STR_18
  2663  0132AA  6EE6               	movwf	postinc1,c
  2664  0132AC  0EFE               	movlw	high STR_18
  2665  0132AE  6EE6               	movwf	postinc1,c
  2666  0132B0  0E00               	movlw	0
  2667  0132B2  6EE6               	movwf	postinc1,c
  2668  0132B4  0E02               	movlw	2
  2669  0132B6  6EE6               	movwf	postinc1,c
  2670  0132B8  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  2671  0132BC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2672  0132C2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2673  0132C8  0E04               	movlw	4
  2674  0132CA  6EE6               	movwf	postinc1,c
  2675  0132CC  EC88  F0B6         	call	_sprintf	;wreg free
  2676                           
  2677                           ;main.c: 296:     break;
  2678  0132D0  D015               	goto	l10605
  2679  0132D2                     l10603:
  2680  0132D2  0100               	movlb	0	; () banked
  2681  0132D4  51EF               	movf	_H& (0+255),w,b
  2682  0132D6  6E3C               	movwf	(btemp+10)^0,c
  2683  0132D8  6A3D               	clrf	(btemp+11)^0,c
  2684                           
  2685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2686                           ; Switch size 1, requested type "simple"
  2687                           ; Number of cases is 1, Range of values is 0 to 0
  2688                           ; switch strategies available:
  2689                           ; Name         Instructions Cycles
  2690                           ; simple_byte            4     3 (average)
  2691                           ;	Chosen strategy is simple_byte
  2692  0132DA  503D               	movf	(btemp+11)^0,w,c
  2693  0132DC  0A00               	xorlw	0	; case 0
  2694  0132DE  A4D8               	btfss	status,2,c
  2695  0132E0  D00D               	goto	l10605
  2696                           
  2697                           ; BSR set to: 0
  2698                           ; Switch size 1, requested type "simple"
  2699                           ; Number of cases is 4, Range of values is 0 to 3
  2700                           ; switch strategies available:
  2701                           ; Name         Instructions Cycles
  2702                           ; simple_byte           13     7 (average)
  2703                           ;	Chosen strategy is simple_byte
  2704  0132E2  503C               	movf	(btemp+10)^0,w,c
  2705  0132E4  0A00               	xorlw	0	; case 0
  2706  0132E6  B4D8               	btfsc	status,2,c
  2707  0132E8  D6E9               	goto	l10595
  2708  0132EA  0A01               	xorlw	1	; case 1
  2709  0132EC  B4D8               	btfsc	status,2,c
  2710  0132EE  D685               	goto	l10593
  2711  0132F0  0A03               	xorlw	3	; case 2
  2712  0132F2  B4D8               	btfsc	status,2,c
  2713  0132F4  D768               	goto	l10597
  2714  0132F6  0A01               	xorlw	1	; case 3
  2715  0132F8  B4D8               	btfsc	status,2,c
  2716  0132FA  D7AE               	goto	l10599
  2717  0132FC                     l10605:
  2718                           
  2719                           ;main.c: 300:    clear_hid_pflags(&H);
  2720  0132FC  0EEF               	movlw	_H& (0+255)
  2721  0132FE  6EE6               	movwf	postinc1,c
  2722  013300  EC41  F0C4         	call	_clear_hid_pflags	;wreg free
  2723                           
  2724                           ;main.c: 302:    StartTimer(TMR_DISPLAY, 250);
  2725  013304  0EFA               	movlw	250
  2726  013306  6EE6               	movwf	postinc1,c
  2727  013308  0E00               	movlw	0
  2728  01330A  6EE6               	movwf	postinc1,c
  2729  01330C  0E0A               	movlw	10
  2730  01330E  6EE6               	movwf	postinc1,c
  2731  013310  EC53  F0C1         	call	_StartTimer	;wreg free
  2732                           
  2733                           ;main.c: 303:    update_lcd(0);
  2734  013314  0E00               	movlw	0
  2735  013316  6EE6               	movwf	postinc1,c
  2736  013318  EC01  F0B6         	call	_update_lcd	;wreg free
  2737  01331C                     l10611:
  2738                           
  2739                           ;main.c: 309:   if (check_help(V.flipper)) {
  2740  01331C  0102               	movlb	2	; () banked
  2741  01331E  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2742  013320  6EE6               	movwf	postinc1,c
  2743  013322  EC68  F0AC         	call	_check_help	;wreg free
  2744                           
  2745                           ;main.c: 345:   if (V.set_sequ) {
  2746                           
  2747                           ;main.c: 340:   };
  2748  013326  0102               	movlb	2	; () banked
  2749  013328  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2750  01332A  D61D               	goto	l10567
  2751                           
  2752                           ; BSR set to: 2
  2753                           ;main.c: 346:    if (TimerDone(TMR_INFO)) {
  2754  01332C  0E07               	movlw	7
  2755  01332E  6EE6               	movwf	postinc1,c
  2756  013330  EC53  F0C4         	call	_TimerDone	;wreg free
  2757  013334  5032               	movf	btemp^0,w,c
  2758  013336  B4D8               	btfsc	status,2,c
  2759  013338  D00B               	goto	l10621
  2760                           
  2761                           ;main.c: 347:     V.set_sequ = 0;
  2762  01333A  0102               	movlb	2	; () banked
  2763  01333C  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2764                           
  2765                           ; BSR set to: 2
  2766                           ;main.c: 348:     set_vterm(0);
  2767  01333E  0E00               	movlw	0
  2768  013340  6EE6               	movwf	postinc1,c
  2769  013342  EC14  F0C5         	call	_set_vterm	;wreg free
  2770                           
  2771                           ; BSR set to: 5
  2772                           ;main.c: 349:     update_lcd(0);
  2773  013346  0E00               	movlw	0
  2774  013348  6EE6               	movwf	postinc1,c
  2775  01334A  EC01  F0B6         	call	_update_lcd	;wreg free
  2776                           
  2777                           ;main.c: 350:    } else {
  2778  01334E  D60B               	goto	l10567
  2779  013350                     l10621:
  2780                           
  2781                           ;main.c: 351:     set_vterm(2);
  2782  013350  0E02               	movlw	2
  2783  013352  6EE6               	movwf	postinc1,c
  2784  013354  EC14  F0C5         	call	_set_vterm	;wreg free
  2785                           
  2786                           ; BSR set to: 5
  2787                           ;main.c: 352:     update_lcd(2);
  2788  013358  0E02               	movlw	2
  2789  01335A  6EE6               	movwf	postinc1,c
  2790  01335C  EC01  F0B6         	call	_update_lcd	;wreg free
  2791  013360  D602               	goto	l10567
  2792  013362                     __end_of_main:
  2793                           	opt callstack 0
  2794                           
  2795 ;; *************** function _start_switch_handler *****************
  2796 ;; Defined at:
  2797 ;;		line 119 in file "dio.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1  [STACK] void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2806 ;; Tracked objects:
  2807 ;;		On entry : 1/4
  2808 ;;		On exit  : 3F/39
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    7
  2818 ;; This function calls:
  2819 ;;		_INT1_SetInterruptHandler
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text1
  2826  018956                     __ptext1:
  2827                           	opt callstack 0
  2828  018956                     _start_switch_handler:
  2829                           	opt callstack 23
  2830                           
  2831                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2832                           
  2833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2834                           ;incstack = 0
  2835  018956  0139               	movlb	57	; () banked
  2836  018958  9195               	bcf	149,0,b	;volatile
  2837                           
  2838                           ; BSR set to: 57
  2839                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2840  01895A  0E3C               	movlw	low _switch_handler
  2841  01895C  6EE6               	movwf	postinc1,c
  2842  01895E  0E66               	movlw	high _switch_handler
  2843  018960  6EE6               	movwf	postinc1,c
  2844  018962  0E01               	movlw	low (_switch_handler shr (0+16))
  2845  018964  6EE6               	movwf	postinc1,c
  2846  018966  EC8D  F0C3         	call	_INT1_SetInterruptHandler	;wreg free
  2847                           
  2848                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2849  01896A  0E02               	movlw	2
  2850  01896C  0100               	movlb	0	; () banked
  2851  01896E  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2855  018970  0139               	movlb	57	; () banked
  2856  018972  8195               	bsf	149,0,b	;volatile
  2857                           
  2858                           ; BSR set to: 57
  2859                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2860  018974  0012               	return		;funcret
  2861  018976                     __end_of_start_switch_handler:
  2862                           	opt callstack 0
  2863                           
  2864 ;; *************** function _start_adc_scan *****************
  2865 ;; Defined at:
  2866 ;;		line 33 in file "daq.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1  [STACK] _Bool 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/5
  2877 ;;		On exit  : 1/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    7
  2887 ;; This function calls:
  2888 ;;		_ADCC_DischargeSampleCapacitor
  2889 ;;		_ADCC_SetADIInterruptHandler
  2890 ;;		_ADCC_SetADTIInterruptHandler
  2891 ;;		_ADCC_StartConversion
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text2
  2898  017C5E                     __ptext2:
  2899                           	opt callstack 0
  2900  017C5E                     _start_adc_scan:
  2901                           	opt callstack 23
  2902                           
  2903                           ;daq.c: 35:  if (R.done)
  2904                           
  2905                           ; BSR set to: 57
  2906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2907                           ;incstack = 0
  2908  017C5E  0100               	movlb	0	; () banked
  2909  017C60  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2910  017C62  A4D8               	btfss	status,2,c
  2911  017C64  0012               	return	
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;daq.c: 38:  R.scan_index = 0;
  2915  017C66  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2919  017C68  013A               	movlb	58	; () banked
  2920  017C6A  5140               	movf	64,w,b	;volatile
  2921  017C6C  006E F940  F032    	movff	14928,btemp	;volatile
  2922  017C72  6A33               	clrf	(btemp+1)^0,c
  2923  017C74  0060  F0C8  F033   	movff	btemp,btemp+1
  2924  017C7A  6A32               	clrf	btemp^0,c
  2925  017C7C  2632               	addwf	btemp^0,f,c
  2926  017C7E  0E00               	movlw	0
  2927  017C80  2233               	addwfc	(btemp+1)^0,f,c
  2928  017C82  0E77               	movlw	119
  2929  017C84  1432               	andwf	btemp^0,w,c
  2930  017C86  0100               	movlb	0	; () banked
  2931  017C88  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2932  017C8A  0E3C               	movlw	60
  2933  017C8C  1433               	andwf	(btemp+1)^0,w,c
  2934  017C8E  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2938  017C90  0EE8               	movlw	low _adc_int_handler
  2939  017C92  6EE6               	movwf	postinc1,c
  2940  017C94  0E8B               	movlw	high _adc_int_handler
  2941  017C96  6EE6               	movwf	postinc1,c
  2942  017C98  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2943  017C9A  6EE6               	movwf	postinc1,c
  2944  017C9C  ECC9  F0C3         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2945                           
  2946                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2947  017CA0  0EC4               	movlw	low _adc_int_t_handler
  2948  017CA2  6EE6               	movwf	postinc1,c
  2949  017CA4  0E79               	movlw	high _adc_int_t_handler
  2950  017CA6  6EE6               	movwf	postinc1,c
  2951  017CA8  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2952  017CAA  6EE6               	movwf	postinc1,c
  2953  017CAC  ECB5  F0C3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2954                           
  2955                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2956  017CB0  ECD1  F0C5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2957                           
  2958                           ; BSR set to: 62
  2959                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2960  017CB4  0100               	movlb	0	; () banked
  2961  017CB6  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2962  017CB8  0B0F               	andlw	15
  2963  017CBA  6EE6               	movwf	postinc1,c
  2964  017CBC  EC8C  F0C5         	call	_ADCC_StartConversion	;wreg free
  2965                           
  2966                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2967  017CC0  0012               	return		;funcret
  2968  017CC2                     __end_of_start_adc_scan:
  2969                           	opt callstack 0
  2970                           
  2971 ;; *************** function _ADCC_StartConversion *****************
  2972 ;; Defined at:
  2973 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  channel         1  [STACK] enum E16136
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1  [STACK] void 
  2980 ;; Registers used:
  2981 ;;		fsr1l, fsr1h
  2982 ;; Tracked objects:
  2983 ;;		On entry : 3F/0
  2984 ;;		On exit  : 3F/3E
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2991 ;;Total ram usage:        0 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    6
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_start_adc_scan
  2998 ;;		_adc_int_t_handler
  2999 ;; This function uses a reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text3
  3003  018B18                     __ptext3:
  3004                           	opt callstack 0
  3005  018B18                     _ADCC_StartConversion:
  3006                           	opt callstack 6
  3007                           
  3008                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3009                           ;stkvar	_channel @ sp[(0)+-1]
  3010                           
  3011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3012                           ;incstack = 0
  3013  018B18  0EFF               	movlw	-1
  3014  018B1A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3015                           
  3016                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3017  018B20  013E               	movlb	62	; () banked
  3018  018B22  8FF8               	bsf	248,7,b	;volatile
  3019                           
  3020                           ; BSR set to: 62
  3021                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3022  018B24  81F8               	bsf	248,0,b	;volatile
  3023                           
  3024                           ; BSR set to: 62
  3025                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3026  018B26  52E5               	movf	postdec1,f,c
  3027  018B28  0012               	return		;funcret
  3028  018B2A                     __end_of_ADCC_StartConversion:
  3029                           	opt callstack 0
  3030                           
  3031 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3032 ;; Defined at:
  3033 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1  [STACK] void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 3F/3E
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    6
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_start_adc_scan
  3058 ;;		_adc_int_t_handler
  3059 ;; This function uses a reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text4
  3063  018BA2                     __ptext4:
  3064                           	opt callstack 0
  3065  018BA2                     _ADCC_DischargeSampleCapacitor:
  3066                           	opt callstack 6
  3067                           
  3068                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3069                           
  3070                           ; BSR set to: 62
  3071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3072                           ;incstack = 0
  3073  018BA2  0E3B               	movlw	59
  3074  018BA4  013E               	movlb	62	; () banked
  3075  018BA6  6FF1               	movwf	241,b	;volatile
  3076                           
  3077                           ; BSR set to: 62
  3078                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3079  018BA8  0012               	return		;funcret
  3080  018BAA                     __end_of_ADCC_DischargeSampleCapacitor:
  3081                           	opt callstack 0
  3082                           
  3083 ;; *************** function _srand *****************
  3084 ;; Defined at:
  3085 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  s               2  [STACK] unsigned int 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1  [STACK] void 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3094 ;; Tracked objects:
  3095 ;;		On entry : 3F/0
  3096 ;;		On exit  : 3F/1
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    6
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text5
  3114  018386                     __ptext5:
  3115                           	opt callstack 0
  3116  018386                     _srand:
  3117                           	opt callstack 24
  3118                           
  3119                           ;stkvar	_s @ sp[(0)+-2]
  3120                           
  3121                           ; BSR set to: 62
  3122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3123                           ;incstack = 0
  3124  018386  0EFE               	movlw	-2
  3125  018388  50E3               	movf	plusw1,w,c
  3126  01838A  0FFF               	addlw	255
  3127  01838C  6E3C               	movwf	(btemp+10)^0,c
  3128  01838E  0EFF               	movlw	-1
  3129  018390  006F FF8C  F03D    	movff	plusw1,btemp+11
  3130  018396  0EFF               	movlw	255
  3131  018398  223D               	addwfc	(btemp+11)^0,f,c
  3132  01839A  0060  F0F0  F1CC   	movff	btemp+10,_seed
  3133  0183A0  0060  F0F4  F1CD   	movff	btemp+11,_seed+1
  3134  0183A6  0101               	movlb	1	; () banked
  3135  0183A8  6BCE               	clrf	(_seed+2)& (0+255),b
  3136  0183AA  6BCF               	clrf	(_seed+3)& (0+255),b
  3137  0183AC  6BD0               	clrf	(_seed+4)& (0+255),b
  3138  0183AE  6BD1               	clrf	(_seed+5)& (0+255),b
  3139  0183B0  6BD2               	clrf	(_seed+6)& (0+255),b
  3140  0183B2  6BD3               	clrf	(_seed+7)& (0+255),b
  3141                           
  3142                           ; BSR set to: 1
  3143                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3144  0183B4  52E5               	movf	postdec1,f,c
  3145  0183B6  52E5               	movf	postdec1,f,c
  3146  0183B8  0012               	return		;funcret
  3147  0183BA                     __end_of_srand:
  3148                           	opt callstack 0
  3149                           
  3150 ;; *************** function _init_display *****************
  3151 ;; Defined at:
  3152 ;;		line 37 in file "eadog.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1  [STACK] void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/2
  3163 ;;		On exit  : 3F/3D
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3170 ;;Total ram usage:        0 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    8
  3173 ;; This function calls:
  3174 ;;		_ringBufS_init
  3175 ;;		_send_lcd_cmd
  3176 ;;		_send_lcd_cmd_long
  3177 ;;		_wdtdelay
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;; This function uses a reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text6
  3184  017010                     __ptext6:
  3185                           	opt callstack 0
  3186  017010                     _init_display:
  3187                           	opt callstack 22
  3188                           
  3189                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3190                           
  3191                           ; BSR set to: 1
  3192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3193                           ;incstack = 0
  3194  017010  0E94               	movlw	low _ring_buf1
  3195  017012  0100               	movlb	0	; () banked
  3196  017014  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3197  017016  0E03               	movlw	high _ring_buf1
  3198  017018  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3199                           
  3200                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3201  01701A  0E00               	movlw	low _ring_buf2
  3202  01701C  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3203  01701E  0E04               	movlw	high _ring_buf2
  3204  017020  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3208  017022  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3209  017028  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3210  01702E  ECED  F0C2         	call	_ringBufS_init	;wreg free
  3211                           
  3212                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3213  017032  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3214  017038  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3215  01703E  ECED  F0C2         	call	_ringBufS_init	;wreg free
  3216                           
  3217                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3218  017042  84BE               	bsf	190,2,c	;volatile
  3219  017044  84BC               	bsf	188,2,c	;volatile
  3220                           
  3221                           ;eadog.c: 46:  wdtdelay(350000);
  3222  017046  0E30               	movlw	48
  3223  017048  6EE6               	movwf	postinc1,c
  3224  01704A  0E57               	movlw	87
  3225  01704C  6EE6               	movwf	postinc1,c
  3226  01704E  0E05               	movlw	5
  3227  017050  6EE6               	movwf	postinc1,c
  3228  017052  0E00               	movlw	0
  3229  017054  6EE6               	movwf	postinc1,c
  3230  017056  EC52  F0BF         	call	_wdtdelay	;wreg free
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3234  01705A  0E39               	movlw	57
  3235  01705C  6EE6               	movwf	postinc1,c
  3236  01705E  ECD9  F0C2         	call	_send_lcd_cmd	;wreg free
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3240  017062  0E1D               	movlw	29
  3241  017064  6EE6               	movwf	postinc1,c
  3242  017066  ECD9  F0C2         	call	_send_lcd_cmd	;wreg free
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3246  01706A  0E50               	movlw	80
  3247  01706C  6EE6               	movwf	postinc1,c
  3248  01706E  ECD9  F0C2         	call	_send_lcd_cmd	;wreg free
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3252  017072  0E6C               	movlw	108
  3253  017074  6EE6               	movwf	postinc1,c
  3254  017076  ECD9  F0C2         	call	_send_lcd_cmd	;wreg free
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3258  01707A  0E76               	movlw	118
  3259  01707C  6EE6               	movwf	postinc1,c
  3260  01707E  ECD9  F0C2         	call	_send_lcd_cmd	;wreg free
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3264  017082  0E38               	movlw	56
  3265  017084  6EE6               	movwf	postinc1,c
  3266  017086  ECC5  F0C2         	call	_send_lcd_cmd_long	;wreg free
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3270  01708A  0E0F               	movlw	15
  3271  01708C  6EE6               	movwf	postinc1,c
  3272  01708E  ECD9  F0C2         	call	_send_lcd_cmd	;wreg free
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3276  017092  0E01               	movlw	1
  3277  017094  6EE6               	movwf	postinc1,c
  3278  017096  ECC5  F0C2         	call	_send_lcd_cmd_long	;wreg free
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3282  01709A  0E02               	movlw	2
  3283  01709C  6EE6               	movwf	postinc1,c
  3284  01709E  ECD9  F0C2         	call	_send_lcd_cmd	;wreg free
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3288  0170A2  0E06               	movlw	6
  3289  0170A4  6EE6               	movwf	postinc1,c
  3290  0170A6  ECD9  F0C2         	call	_send_lcd_cmd	;wreg free
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;eadog.c: 57:  wdtdelay(30);
  3294  0170AA  0E1E               	movlw	30
  3295  0170AC  6EE6               	movwf	postinc1,c
  3296  0170AE  0E00               	movlw	0
  3297  0170B0  6EE6               	movwf	postinc1,c
  3298  0170B2  0E00               	movlw	0
  3299  0170B4  6EE6               	movwf	postinc1,c
  3300  0170B6  0E00               	movlw	0
  3301  0170B8  6EE6               	movwf	postinc1,c
  3302  0170BA  EC52  F0BF         	call	_wdtdelay	;wreg free
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3306  0170BE  0E02               	movlw	2
  3307  0170C0  013D               	movlb	61	; () banked
  3308  0170C2  6F16               	movwf	22,b	;volatile
  3309                           
  3310                           ; BSR set to: 61
  3311                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3312  0170C4  0E40               	movlw	64
  3313  0170C6  6F15               	movwf	21,b	;volatile
  3314                           
  3315                           ; BSR set to: 61
  3316                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3317  0170C8  0E83               	movlw	131
  3318  0170CA  6F14               	movwf	20,b	;volatile
  3319                           
  3320                           ; BSR set to: 61
  3321                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3322  0170CC  931A               	bcf	26,1,b	;volatile
  3323                           
  3324                           ; BSR set to: 61
  3325                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3326  0170CE  0E3F               	movlw	-193
  3327  0170D0  013B               	movlb	59	; () banked
  3328  0170D2  17FD               	andwf	253,f,b	;volatile
  3329                           
  3330                           ; BSR set to: 59
  3331                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3332  0170D4  9BFD               	bcf	253,5,b	;volatile
  3333                           
  3334                           ; BSR set to: 59
  3335                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3336  0170D6  51FD               	movf	253,w,b	;volatile
  3337  0170D8  0BF9               	andlw	-7
  3338  0170DA  0902               	iorlw	2
  3339  0170DC  6FFD               	movwf	253,b	;volatile
  3340                           
  3341                           ; BSR set to: 59
  3342                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3343  0170DE  0EE7               	movlw	-25
  3344  0170E0  17FD               	andwf	253,f,b	;volatile
  3345                           
  3346                           ; BSR set to: 59
  3347                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3348  0170E2  81FD               	bsf	253,0,b	;volatile
  3349                           
  3350                           ; BSR set to: 59
  3351                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3352  0170E4  0E94               	movlw	low _ring_buf1
  3353  0170E6  6FF9               	movwf	249,b	;volatile
  3354  0170E8  0E03               	movlw	high _ring_buf1
  3355  0170EA  6FFA               	movwf	250,b	;volatile
  3356  0170EC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3357  0170EE  6FFB               	movwf	251,b	;volatile
  3358                           
  3359                           ; BSR set to: 59
  3360                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3361  0170F0  9BFC               	bcf	252,5,b	;volatile
  3362                           
  3363                           ; BSR set to: 59
  3364                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3365  0170F2  013D               	movlb	61	; () banked
  3366  0170F4  831A               	bsf	26,1,b	;volatile
  3367                           
  3368                           ; BSR set to: 61
  3369                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3370  0170F6  94BE               	bcf	190,2,c	;volatile
  3371                           
  3372                           ; BSR set to: 61
  3373                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3374  0170F8  0012               	return		;funcret
  3375  0170FA                     __end_of_init_display:
  3376                           	opt callstack 0
  3377                           
  3378 ;; *************** function _send_lcd_cmd_long *****************
  3379 ;; Defined at:
  3380 ;;		line 114 in file "eadog.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  cmd             1  [STACK] const unsigned char 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1  [STACK] void 
  3387 ;; Registers used:
  3388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3389 ;; Tracked objects:
  3390 ;;		On entry : 3F/0
  3391 ;;		On exit  : 3F/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    7
  3401 ;; This function calls:
  3402 ;;		_SPI1_Exchange8bit
  3403 ;;		_wdtdelay
  3404 ;; This function is called by:
  3405 ;;		_init_display
  3406 ;; This function uses a reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text7
  3410  01858A                     __ptext7:
  3411                           	opt callstack 0
  3412  01858A                     _send_lcd_cmd_long:
  3413                           	opt callstack 22
  3414                           
  3415                           ; BSR set to: 61
  3416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3417                           ;incstack = 0
  3418                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3419  01858A  92BC               	bcf	188,1,c	;volatile
  3420                           
  3421                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3422  01858C  94BC               	bcf	188,2,c	;volatile
  3423                           
  3424                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3425                           ;stkvar	_cmd @ sp[(0)+-1]
  3426  01858E  0EFF               	movlw	-1
  3427  018590  50E3               	movf	plusw1,w,c
  3428  018592  6EE6               	movwf	postinc1,c
  3429  018594  ECBB  F0C4         	call	_SPI1_Exchange8bit	;wreg free
  3430                           
  3431                           ; BSR set to: 57
  3432                           ;eadog.c: 119:  wdtdelay(800);
  3433  018598  0E20               	movlw	32
  3434  01859A  6EE6               	movwf	postinc1,c
  3435  01859C  0E03               	movlw	3
  3436  01859E  6EE6               	movwf	postinc1,c
  3437  0185A0  0E00               	movlw	0
  3438  0185A2  6EE6               	movwf	postinc1,c
  3439  0185A4  0E00               	movlw	0
  3440  0185A6  6EE6               	movwf	postinc1,c
  3441  0185A8  EC52  F0BF         	call	_wdtdelay	;wreg free
  3442                           
  3443                           ; BSR set to: 0
  3444  0185AC  82BC               	bsf	188,1,c	;volatile
  3445                           
  3446                           ; BSR set to: 0
  3447                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3448  0185AE  52E5               	movf	postdec1,f,c
  3449  0185B0  0012               	return		;funcret
  3450  0185B2                     __end_of_send_lcd_cmd_long:
  3451                           	opt callstack 0
  3452                           
  3453 ;; *************** function _send_lcd_cmd *****************
  3454 ;; Defined at:
  3455 ;;		line 102 in file "eadog.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  cmd             1  [STACK] const unsigned char 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1  [STACK] void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3464 ;; Tracked objects:
  3465 ;;		On entry : 3F/0
  3466 ;;		On exit  : 3F/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3473 ;;Total ram usage:        0 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    7
  3476 ;; This function calls:
  3477 ;;		_SPI1_Exchange8bit
  3478 ;;		_wdtdelay
  3479 ;; This function is called by:
  3480 ;;		_init_display
  3481 ;; This function uses a reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text8
  3485  0185B2                     __ptext8:
  3486                           	opt callstack 0
  3487  0185B2                     _send_lcd_cmd:
  3488                           	opt callstack 22
  3489                           
  3490                           ; BSR set to: 0
  3491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3492                           ;incstack = 0
  3493                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3494  0185B2  92BC               	bcf	188,1,c	;volatile
  3495                           
  3496                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3497  0185B4  94BC               	bcf	188,2,c	;volatile
  3498                           
  3499                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3500                           ;stkvar	_cmd @ sp[(0)+-1]
  3501  0185B6  0EFF               	movlw	-1
  3502  0185B8  50E3               	movf	plusw1,w,c
  3503  0185BA  6EE6               	movwf	postinc1,c
  3504  0185BC  ECBB  F0C4         	call	_SPI1_Exchange8bit	;wreg free
  3505                           
  3506                           ; BSR set to: 57
  3507                           ;eadog.c: 107:  wdtdelay(30);
  3508  0185C0  0E1E               	movlw	30
  3509  0185C2  6EE6               	movwf	postinc1,c
  3510  0185C4  0E00               	movlw	0
  3511  0185C6  6EE6               	movwf	postinc1,c
  3512  0185C8  0E00               	movlw	0
  3513  0185CA  6EE6               	movwf	postinc1,c
  3514  0185CC  0E00               	movlw	0
  3515  0185CE  6EE6               	movwf	postinc1,c
  3516  0185D0  EC52  F0BF         	call	_wdtdelay	;wreg free
  3517                           
  3518                           ; BSR set to: 0
  3519  0185D4  82BC               	bsf	188,1,c	;volatile
  3520                           
  3521                           ; BSR set to: 0
  3522                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3523  0185D6  52E5               	movf	postdec1,f,c
  3524  0185D8  0012               	return		;funcret
  3525  0185DA                     __end_of_send_lcd_cmd:
  3526                           	opt callstack 0
  3527                           
  3528 ;; *************** function _SPI1_Exchange8bit *****************
  3529 ;; Defined at:
  3530 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  data            1  [STACK] unsigned char 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1  [STACK] unsigned char 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 3F/39
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    6
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_send_lcd_cmd
  3555 ;;		_send_lcd_cmd_long
  3556 ;; This function uses a reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text9
  3560  018976                     __ptext9:
  3561                           	opt callstack 0
  3562  018976                     _SPI1_Exchange8bit:
  3563                           	opt callstack 22
  3564                           
  3565                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3566                           
  3567                           ; BSR set to: 0
  3568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3569                           ;incstack = 0
  3570  018976  0E01               	movlw	1
  3571  018978  013D               	movlb	61	; () banked
  3572  01897A  6F12               	movwf	18,b	;volatile
  3573                           
  3574                           ; BSR set to: 61
  3575                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3576                           ;stkvar	_data @ sp[(0)+-1]
  3577  01897C  0EFF               	movlw	-1
  3578  01897E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3579  018984                     l835:
  3580                           
  3581                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3582  018984  0139               	movlb	57	; () banked
  3583  018986  A9A2               	btfss	162,4,b	;volatile
  3584  018988  D7FD               	goto	l835
  3585                           
  3586                           ; BSR set to: 57
  3587                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3588  01898A  006F F440  F032    	movff	15632,btemp	;volatile
  3589                           
  3590                           ; BSR set to: 57
  3591                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3592  018990  52E5               	movf	postdec1,f,c
  3593  018992  0012               	return		;funcret
  3594  018994                     __end_of_SPI1_Exchange8bit:
  3595                           	opt callstack 0
  3596                           
  3597 ;; *************** function _ringBufS_init *****************
  3598 ;; Defined at:
  3599 ;;		line 22 in file "ringbufs.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  _this           2  [STACK] PTR volatile struct ring
  3602 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1  [STACK] void 
  3607 ;; Registers used:
  3608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    7
  3621 ;; This function calls:
  3622 ;;		_memset
  3623 ;; This function is called by:
  3624 ;;		_init_display
  3625 ;; This function uses a reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text10
  3629  0185DA                     __ptext10:
  3630                           	opt callstack 0
  3631  0185DA                     _ringBufS_init:
  3632                           	opt callstack 22
  3633                           
  3634                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3635                           
  3636                           ; BSR set to: 57
  3637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3638                           ;incstack = 0
  3639  0185DA  0E43               	movlw	67
  3640  0185DC  6EE6               	movwf	postinc1,c
  3641  0185DE  0E00               	movlw	0
  3642  0185E0  6EE6               	movwf	postinc1,c
  3643  0185E2  0E00               	movlw	0
  3644  0185E4  6EE6               	movwf	postinc1,c
  3645  0185E6  0E00               	movlw	0
  3646  0185E8  6EE6               	movwf	postinc1,c
  3647                           
  3648                           ;stkvar	__this @ sp[(-4)+-2]
  3649  0185EA  0EFA               	movlw	-6
  3650  0185EC  006F FF8F FFE6     	movff	plusw1,postinc1
  3651  0185F2  006F FF8F FFE6     	movff	plusw1,postinc1
  3652  0185F8  EC97  F0A4         	call	_memset	;wreg free
  3653                           
  3654                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3655  0185FC  52E5               	movf	postdec1,f,c
  3656  0185FE  52E5               	movf	postdec1,f,c
  3657  018600  0012               	return		;funcret
  3658  018602                     __end_of_ringBufS_init:
  3659                           	opt callstack 0
  3660                           
  3661 ;; *************** function _hid_display *****************
  3662 ;; Defined at:
  3663 ;;		line 17 in file "hid.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  h               1  [STACK] PTR struct H_data
  3666 ;;		 -> H(7), 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1  [STACK] PTR struct H_data
  3671 ;; Registers used:
  3672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  3673 ;; Tracked objects:
  3674 ;;		On entry : 3F/1
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3682 ;;Total ram usage:        0 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    8
  3685 ;; This function calls:
  3686 ;;		_hid_input
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;; This function uses a reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text11
  3693  016E1A                     __ptext11:
  3694                           	opt callstack 0
  3695  016E1A                     _hid_display:
  3696                           	opt callstack 22
  3697                           
  3698                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  3699                           ;stkvar	_h @ sp[(0)+-1]
  3700                           
  3701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3702                           ;incstack = 0
  3703  016E1A  0EFF               	movlw	-1
  3704  016E1C  50E3               	movf	plusw1,w,c
  3705  016E1E  6EE6               	movwf	postinc1,c
  3706  016E20  ECD2  F0BB         	call	_hid_input	;wreg free
  3707                           
  3708                           ;hid.c: 21:  switch (h->h_state) {
  3709  016E24  D066               	goto	l9095
  3710  016E26                     l9073:
  3711                           
  3712                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  3713                           ;stkvar	_h @ sp[(0)+-1]
  3714  016E26  0EFF               	movlw	-1
  3715  016E28  50E3               	movf	plusw1,w,c
  3716  016E2A  6ED9               	movwf	fsr2l,c
  3717  016E2C  6ADA               	clrf	fsr2h,c
  3718  016E2E  0E01               	movlw	1
  3719  016E30  26D9               	addwf	fsr2l,f,c
  3720  016E32  0E01               	movlw	1
  3721  016E34  6EDF               	movwf	indf2,c
  3722                           
  3723                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  3724                           ;stkvar	_h @ sp[(0)+-1]
  3725  016E36  0EFF               	movlw	-1
  3726  016E38  50E3               	movf	plusw1,w,c
  3727  016E3A  6ED9               	movwf	fsr2l,c
  3728  016E3C  6ADA               	clrf	fsr2h,c
  3729  016E3E  0E00               	movlw	0
  3730  016E40  6EDF               	movwf	indf2,c
  3731                           
  3732                           ;hid.c: 25:   h->wait_enter = 1;
  3733                           ;stkvar	_h @ sp[(0)+-1]
  3734  016E42  0EFF               	movlw	-1
  3735  016E44  50E3               	movf	plusw1,w,c
  3736  016E46  6ED9               	movwf	fsr2l,c
  3737  016E48  6ADA               	clrf	fsr2h,c
  3738  016E4A  0E04               	movlw	4
  3739  016E4C  26D9               	addwf	fsr2l,f,c
  3740  016E4E  0E01               	movlw	1
  3741  016E50  6EDF               	movwf	indf2,c
  3742                           
  3743                           ;hid.c: 26:   h->wait_select = 1;
  3744                           ;stkvar	_h @ sp[(0)+-1]
  3745  016E52  0EFF               	movlw	-1
  3746  016E54  50E3               	movf	plusw1,w,c
  3747  016E56  6ED9               	movwf	fsr2l,c
  3748  016E58  6ADA               	clrf	fsr2h,c
  3749  016E5A  0E02               	movlw	2
  3750  016E5C  26D9               	addwf	fsr2l,f,c
  3751  016E5E  0E01               	movlw	1
  3752  016E60  6EDF               	movwf	indf2,c
  3753                           
  3754                           ;hid.c: 27:   h->select_p=SW_OFF;
  3755                           ;stkvar	_h @ sp[(0)+-1]
  3756  016E62  0EFF               	movlw	-1
  3757  016E64  50E3               	movf	plusw1,w,c
  3758  016E66  6ED9               	movwf	fsr2l,c
  3759  016E68  6ADA               	clrf	fsr2h,c
  3760  016E6A  0E03               	movlw	3
  3761  016E6C  26D9               	addwf	fsr2l,f,c
  3762  016E6E  0E00               	movlw	0
  3763  016E70  6EDF               	movwf	indf2,c
  3764                           
  3765                           ;hid.c: 28:   h->enter_p=SW_OFF;
  3766                           ;stkvar	_h @ sp[(0)+-1]
  3767  016E72  0EFF               	movlw	-1
  3768  016E74  50E3               	movf	plusw1,w,c
  3769  016E76  6ED9               	movwf	fsr2l,c
  3770  016E78  6ADA               	clrf	fsr2h,c
  3771  016E7A  0E05               	movlw	5
  3772  016E7C  26D9               	addwf	fsr2l,f,c
  3773  016E7E  0E00               	movlw	0
  3774  016E80  D036               	goto	L1
  3775  016E82                     l9085:
  3776                           
  3777                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  3778                           ;stkvar	_h @ sp[(0)+-1]
  3779  016E82  0EFF               	movlw	-1
  3780  016E84  50E3               	movf	plusw1,w,c
  3781  016E86  6ED9               	movwf	fsr2l,c
  3782  016E88  6ADA               	clrf	fsr2h,c
  3783  016E8A  0E02               	movlw	2
  3784  016E8C  26D9               	addwf	fsr2l,f,c
  3785  016E8E  50DF               	movf	indf2,w,c
  3786  016E90  A4D8               	btfss	status,2,c
  3787  016E92  D042               	goto	l1791
  3788                           
  3789                           ;stkvar	_h @ sp[(0)+-1]
  3790  016E94  0EFF               	movlw	-1
  3791  016E96  50E3               	movf	plusw1,w,c
  3792  016E98  6ED9               	movwf	fsr2l,c
  3793  016E9A  6ADA               	clrf	fsr2h,c
  3794  016E9C  0E03               	movlw	3
  3795  016E9E  26D9               	addwf	fsr2l,f,c
  3796  016EA0  50DF               	movf	indf2,w,c
  3797  016EA2  A4D8               	btfss	status,2,c
  3798  016EA4  D039               	goto	l1791
  3799                           
  3800                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  3801                           ;stkvar	_h @ sp[(0)+-1]
  3802  016EA6  0EFF               	movlw	-1
  3803  016EA8  50E3               	movf	plusw1,w,c
  3804  016EAA  6ED9               	movwf	fsr2l,c
  3805  016EAC  6ADA               	clrf	fsr2h,c
  3806  016EAE  0E06               	movlw	6
  3807  016EB0  26D9               	addwf	fsr2l,f,c
  3808                           
  3809                           ;stkvar	_h @ sp[(0)+-1]
  3810  016EB2  0EFF               	movlw	-1
  3811  016EB4  50E3               	movf	plusw1,w,c
  3812  016EB6  6EE9               	movwf	fsr0l,c
  3813  016EB8  6AEA               	clrf	fsr0h,c
  3814  016EBA  0E06               	movlw	6
  3815  016EBC  26E9               	addwf	fsr0l,f,c
  3816  016EBE  2AEF               	incf	indf0,f,c
  3817  016EC0  50EF               	movf	indf0,w,c
  3818  016EC2  0B03               	andlw	3
  3819  016EC4  6EDF               	movwf	indf2,c
  3820                           
  3821                           ;hid.c: 34:    h->hid_display = h->sequence;
  3822                           ;stkvar	_h @ sp[(0)+-1]
  3823  016EC6  0EFF               	movlw	-1
  3824  016EC8  50E3               	movf	plusw1,w,c
  3825  016ECA  6ED9               	movwf	fsr2l,c
  3826  016ECC  6ADA               	clrf	fsr2h,c
  3827  016ECE  0E06               	movlw	6
  3828  016ED0  26D9               	addwf	fsr2l,f,c
  3829                           
  3830                           ;stkvar	_h @ sp[(0)+-1]
  3831  016ED2  0EFF               	movlw	-1
  3832  016ED4  50E3               	movf	plusw1,w,c
  3833  016ED6  6EE9               	movwf	fsr0l,c
  3834  016ED8  6AEA               	clrf	fsr0h,c
  3835  016EDA  006F FF7F FFEF     	movff	indf2,indf0
  3836                           
  3837                           ;hid.c: 35:    h->wait_select = 1;
  3838                           ;stkvar	_h @ sp[(0)+-1]
  3839  016EE0  0EFF               	movlw	-1
  3840  016EE2  50E3               	movf	plusw1,w,c
  3841  016EE4  6ED9               	movwf	fsr2l,c
  3842  016EE6  6ADA               	clrf	fsr2h,c
  3843  016EE8  0E02               	movlw	2
  3844  016EEA  26D9               	addwf	fsr2l,f,c
  3845  016EEC  0E01               	movlw	1
  3846  016EEE                     L1:
  3847  016EEE  6EDF               	movwf	indf2,c
  3848  016EF0  D013               	goto	l1791
  3849  016EF2                     l9095:
  3850                           
  3851                           ;stkvar	_h @ sp[(0)+-1]
  3852  016EF2  0EFF               	movlw	-1
  3853  016EF4  50E3               	movf	plusw1,w,c
  3854  016EF6  6ED9               	movwf	fsr2l,c
  3855  016EF8  6ADA               	clrf	fsr2h,c
  3856  016EFA  0E01               	movlw	1
  3857  016EFC  26D9               	addwf	fsr2l,f,c
  3858  016EFE  50DF               	movf	indf2,w,c
  3859  016F00  6E3C               	movwf	(btemp+10)^0,c
  3860  016F02  6A3D               	clrf	(btemp+11)^0,c
  3861                           
  3862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3863                           ; Switch size 1, requested type "simple"
  3864                           ; Number of cases is 1, Range of values is 0 to 0
  3865                           ; switch strategies available:
  3866                           ; Name         Instructions Cycles
  3867                           ; simple_byte            4     3 (average)
  3868                           ;	Chosen strategy is simple_byte
  3869  016F04  503D               	movf	(btemp+11)^0,w,c
  3870  016F06  0A00               	xorlw	0	; case 0
  3871  016F08  A4D8               	btfss	status,2,c
  3872  016F0A  D7BB               	goto	l9085
  3873                           
  3874                           ; Switch size 1, requested type "simple"
  3875                           ; Number of cases is 2, Range of values is 0 to 1
  3876                           ; switch strategies available:
  3877                           ; Name         Instructions Cycles
  3878                           ; simple_byte            7     4 (average)
  3879                           ;	Chosen strategy is simple_byte
  3880  016F0C  503C               	movf	(btemp+10)^0,w,c
  3881  016F0E  0A00               	xorlw	0	; case 0
  3882  016F10  B4D8               	btfsc	status,2,c
  3883  016F12  D789               	goto	l9073
  3884  016F14  0A01               	xorlw	1	; case 1
  3885  016F16  D7B5               	goto	l9085
  3886  016F18                     l1791:
  3887                           
  3888                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3889  016F18  52E5               	movf	postdec1,f,c
  3890  016F1A  0012               	return		;funcret
  3891  016F1C                     __end_of_hid_display:
  3892                           	opt callstack 0
  3893                           
  3894 ;; *************** function _hid_input *****************
  3895 ;; Defined at:
  3896 ;;		line 3 in file "hid.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  h               1  [STACK] PTR struct H_data
  3899 ;;		 -> H(7), 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1  [STACK] PTR struct H_data
  3904 ;; Registers used:
  3905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/1
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3915 ;;Total ram usage:        0 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    7
  3918 ;; This function calls:
  3919 ;;		_get_switch
  3920 ;; This function is called by:
  3921 ;;		_hid_display
  3922 ;; This function uses a reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text12
  3926  0177A4                     __ptext12:
  3927                           	opt callstack 0
  3928  0177A4                     _hid_input:
  3929                           	opt callstack 22
  3930                           
  3931                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  3932                           
  3933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3934                           ;incstack = 0
  3935  0177A4  0E02               	movlw	2
  3936  0177A6  6EE6               	movwf	postinc1,c
  3937  0177A8  EC01  F0C3         	call	_get_switch	;wreg free
  3938  0177AC  5032               	movf	btemp^0,w,c
  3939  0177AE  B4D8               	btfsc	status,2,c
  3940  0177B0  D01C               	goto	l8851
  3941                           
  3942                           ;hid.c: 6:   h->wait_select = 0;
  3943                           ;stkvar	_h @ sp[(0)+-1]
  3944  0177B2  0EFF               	movlw	-1
  3945  0177B4  50E3               	movf	plusw1,w,c
  3946  0177B6  6ED9               	movwf	fsr2l,c
  3947  0177B8  6ADA               	clrf	fsr2h,c
  3948  0177BA  0E02               	movlw	2
  3949  0177BC  26D9               	addwf	fsr2l,f,c
  3950  0177BE  0E00               	movlw	0
  3951  0177C0  6EDF               	movwf	indf2,c
  3952                           
  3953                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  3954  0177C2  0E02               	movlw	2
  3955  0177C4  6EE6               	movwf	postinc1,c
  3956  0177C6  EC01  F0C3         	call	_get_switch	;wreg free
  3957  0177CA  5032               	movf	btemp^0,w,c
  3958  0177CC  B4D8               	btfsc	status,2,c
  3959  0177CE  D003               	goto	u8400
  3960  0177D0  6A3D               	clrf	(btemp+11)^0,c
  3961  0177D2  2A3D               	incf	(btemp+11)^0,f,c
  3962  0177D4  D001               	goto	u8418
  3963  0177D6                     u8400:
  3964  0177D6  6A3D               	clrf	(btemp+11)^0,c
  3965  0177D8                     u8418:
  3966                           
  3967                           ;stkvar	_h @ sp[(0)+-1]
  3968  0177D8  0EFF               	movlw	-1
  3969  0177DA  50E3               	movf	plusw1,w,c
  3970  0177DC  6ED9               	movwf	fsr2l,c
  3971  0177DE  6ADA               	clrf	fsr2h,c
  3972  0177E0  0E03               	movlw	3
  3973  0177E2  26D9               	addwf	fsr2l,f,c
  3974  0177E4  0060  F0F7  FFDF   	movff	btemp+11,indf2
  3975  0177EA                     l8851:
  3976                           
  3977                           ;hid.c: 10:  if (get_switch(SENTER)) {
  3978  0177EA  0E03               	movlw	3
  3979  0177EC  6EE6               	movwf	postinc1,c
  3980  0177EE  EC01  F0C3         	call	_get_switch	;wreg free
  3981  0177F2  5032               	movf	btemp^0,w,c
  3982  0177F4  B4D8               	btfsc	status,2,c
  3983  0177F6  D01C               	goto	l1782
  3984                           
  3985                           ;hid.c: 11:   h->wait_enter = 0;
  3986                           ;stkvar	_h @ sp[(0)+-1]
  3987  0177F8  0EFF               	movlw	-1
  3988  0177FA  50E3               	movf	plusw1,w,c
  3989  0177FC  6ED9               	movwf	fsr2l,c
  3990  0177FE  6ADA               	clrf	fsr2h,c
  3991  017800  0E04               	movlw	4
  3992  017802  26D9               	addwf	fsr2l,f,c
  3993  017804  0E00               	movlw	0
  3994  017806  6EDF               	movwf	indf2,c
  3995                           
  3996                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  3997  017808  0E03               	movlw	3
  3998  01780A  6EE6               	movwf	postinc1,c
  3999  01780C  EC01  F0C3         	call	_get_switch	;wreg free
  4000  017810  5032               	movf	btemp^0,w,c
  4001  017812  B4D8               	btfsc	status,2,c
  4002  017814  D003               	goto	u8430
  4003  017816  6A3D               	clrf	(btemp+11)^0,c
  4004  017818  2A3D               	incf	(btemp+11)^0,f,c
  4005  01781A  D001               	goto	u8448
  4006  01781C                     u8430:
  4007  01781C  6A3D               	clrf	(btemp+11)^0,c
  4008  01781E                     u8448:
  4009                           
  4010                           ;stkvar	_h @ sp[(0)+-1]
  4011  01781E  0EFF               	movlw	-1
  4012  017820  50E3               	movf	plusw1,w,c
  4013  017822  6ED9               	movwf	fsr2l,c
  4014  017824  6ADA               	clrf	fsr2h,c
  4015  017826  0E05               	movlw	5
  4016  017828  26D9               	addwf	fsr2l,f,c
  4017  01782A  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4018  017830                     l1782:
  4019                           
  4020                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4021  017830  52E5               	movf	postdec1,f,c
  4022  017832  0012               	return		;funcret
  4023  017834                     __end_of_hid_input:
  4024                           	opt callstack 0
  4025                           
  4026 ;; *************** function _get_switch *****************
  4027 ;; Defined at:
  4028 ;;		line 18 in file "dio.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  i               1  [STACK] unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1  [STACK] enum E16283
  4035 ;; Registers used:
  4036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/1
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    6
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_hid_input
  4053 ;; This function uses a reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text13
  4057  018602                     __ptext13:
  4058                           	opt callstack 0
  4059  018602                     _get_switch:
  4060                           	opt callstack 22
  4061                           
  4062                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4063                           ;stkvar	_i @ sp[(0)+-1]
  4064                           
  4065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4066                           ;incstack = 0
  4067  018602  0EFF               	movlw	-1
  4068  018604  006F FF8C  F032    	movff	plusw1,btemp
  4069  01860A  0E03               	movlw	3
  4070  01860C  6432               	cpfsgt	btemp^0,c
  4071  01860E  D002               	goto	l8175
  4072                           
  4073                           ;dio.c: 21:   return SW_OFF;
  4074  018610  0E00               	movlw	0
  4075  018612  D008               	goto	L2
  4076  018614                     l8175:
  4077                           
  4078                           ;dio.c: 23:  return S.button[i].sw;
  4079                           ;stkvar	_i @ sp[(0)+-1]
  4080  018614  0EFF               	movlw	-1
  4081  018616  50E3               	movf	plusw1,w,c
  4082  018618  0D05               	mullw	5
  4083  01861A  50F3               	movf	243,w,c
  4084  01861C  0F60               	addlw	low _S
  4085  01861E  6ED9               	movwf	fsr2l,c
  4086  018620  6ADA               	clrf	fsr2h,c
  4087  018622  50DF               	movf	indf2,w,c
  4088  018624                     L2:
  4089  018624  6E32               	movwf	btemp^0,c
  4090                           
  4091                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4092  018626  52E5               	movf	postdec1,f,c
  4093  018628  0012               	return		;funcret
  4094  01862A                     __end_of_get_switch:
  4095                           	opt callstack 0
  4096                           
  4097 ;; *************** function _eaDogM_WriteCommand *****************
  4098 ;; Defined at:
  4099 ;;		line 160 in file "eadog.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  cmd             1  [STACK] const unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1  [STACK] void 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4108 ;; Tracked objects:
  4109 ;;		On entry : 3F/3D
  4110 ;;		On exit  : 3F/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4117 ;;Total ram usage:        0 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:   16
  4120 ;; This function calls:
  4121 ;;		_send_lcd_cmd_dma
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text14
  4128  018B3A                     __ptext14:
  4129                           	opt callstack 0
  4130  018B3A                     _eaDogM_WriteCommand:
  4131                           	opt callstack 14
  4132                           
  4133                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  4134                           ;stkvar	_cmd @ sp[(0)+-1]
  4135                           
  4136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4137                           ;incstack = 0
  4138  018B3A  0EFF               	movlw	-1
  4139  018B3C  50E3               	movf	plusw1,w,c
  4140  018B3E  6EE6               	movwf	postinc1,c
  4141  018B40  ECAC  F0BF         	call	_send_lcd_cmd_dma	;wreg free
  4142                           
  4143                           ; BSR set to: 0
  4144                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4145  018B44  52E5               	movf	postdec1,f,c
  4146  018B46  0012               	return		;funcret
  4147  018B48                     __end_of_eaDogM_WriteCommand:
  4148                           	opt callstack 0
  4149                           
  4150 ;; *************** function _convert_adc_data *****************
  4151 ;; Defined at:
  4152 ;;		line 38 in file "mbmc.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  i               1  [STACK] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1  [STACK] void 
  4159 ;; Registers used:
  4160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/39
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4170 ;;Total ram usage:        0 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    9
  4173 ;; This function calls:
  4174 ;;		_conv_raw_result
  4175 ;;		_lp_filter
  4176 ;; This function is called by:
  4177 ;;		_main
  4178 ;; This function uses a reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text15
  4182  017A42                     __ptext15:
  4183                           	opt callstack 0
  4184  017A42                     _convert_adc_data:
  4185                           	opt callstack 0
  4186                           
  4187                           ; BSR set to: 0
  4188                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4189  017A42  52E6               	movf	postinc1,f,c
  4190                           
  4191                           ;mbmc.c: 40:  uint8_t i = 0;
  4192                           ;stkvar	_i @ sp[(-1)+0]
  4193                           
  4194                           ;incstack = 0
  4195  017A44  0EFF               	movlw	-1
  4196  017A46  6AE3               	clrf	plusw1,c
  4197  017A48                     l9057:
  4198                           
  4199                           ;mbmc.c: 46:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4200  017A48  0E00               	movlw	0
  4201  017A4A  6EE6               	movwf	postinc1,c
  4202                           
  4203                           ;stkvar	_i @ sp[(-2)+0]
  4204  017A4C  0EFE               	movlw	-2
  4205  017A4E  50E3               	movf	plusw1,w,c
  4206  017A50  6EE6               	movwf	postinc1,c
  4207  017A52  0E00               	movlw	0
  4208  017A54  6EE6               	movwf	postinc1,c
  4209                           
  4210                           ;stkvar	_i @ sp[(-4)+0]
  4211  017A56  0EFC               	movlw	-4
  4212  017A58  50E3               	movf	plusw1,w,c
  4213  017A5A  6EE6               	movwf	postinc1,c
  4214  017A5C  EC6E  F09C         	call	_conv_raw_result	;wreg free
  4215  017A60  0060  F0CB  FFE6   	movff	btemp,postinc1
  4216  017A66  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4217  017A6C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4218  017A72  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4219  017A78  EC62  F0AF         	call	_lp_filter	;wreg free
  4220                           
  4221                           ;stkvar	_i @ sp[(-1)+0]
  4222  017A7C  0EFF               	movlw	-1
  4223  017A7E  50E3               	movf	plusw1,w,c
  4224  017A80  0D04               	mullw	4
  4225  017A82  0E00               	movlw	low _C
  4226  017A84  24F3               	addwf	243,w,c
  4227  017A86  6ED9               	movwf	fsr2l,c
  4228  017A88  0E01               	movlw	high _C
  4229  017A8A  20F4               	addwfc	prodh,w,c
  4230  017A8C  6EDA               	movwf	fsr2h,c
  4231  017A8E  0060  F0CB  FFDE   	movff	btemp,postinc2
  4232  017A94  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  4233  017A9A  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  4234  017AA0  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  4235                           
  4236                           ;mbmc.c: 48:  } while (++i < 16);
  4237                           ;stkvar	_i @ sp[(-1)+0]
  4238  017AA6  0EFF               	movlw	-1
  4239  017AA8  2AE3               	incf	plusw1,f,c
  4240  017AAA  0EFF               	movlw	-1
  4241  017AAC  006F FF8C  F032    	movff	plusw1,btemp
  4242  017AB2  0E0F               	movlw	15
  4243  017AB4  6432               	cpfsgt	btemp^0,c
  4244  017AB6  D7C8               	goto	l9057
  4245                           
  4246                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4247  017AB8  52E5               	movf	postdec1,f,c
  4248  017ABA  0012               	return		;funcret
  4249  017ABC                     __end_of_convert_adc_data:
  4250                           	opt callstack 0
  4251                           
  4252 ;; *************** function _conv_raw_result *****************
  4253 ;; Defined at:
  4254 ;;		line 80 in file "daq.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  chan            1  [STACK] const enum E16136
  4257 ;;  to_what         1  [STACK] const enum E16198
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  4  [STACK] float 
  4262 ;; Registers used:
  4263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/39
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    8
  4276 ;; This function calls:
  4277 ;;		___fldiv
  4278 ;;		___flmul
  4279 ;;		___flsub
  4280 ;;		___xxtofl
  4281 ;;		_get_raw_result
  4282 ;;		_nanf
  4283 ;; This function is called by:
  4284 ;;		_convert_adc_data
  4285 ;; This function uses a reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text16
  4289  0138DC                     __ptext16:
  4290                           	opt callstack 0
  4291  0138DC                     _conv_raw_result:
  4292                           	opt callstack 21
  4293                           
  4294                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  4295                           
  4296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4297                           ;incstack = 0
  4298  0138DC  D242               	goto	l8761
  4299  0138DE                     l8707:
  4300                           
  4301                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4302                           ;stkvar	_chan @ sp[(0)+-1]
  4303  0138DE  0EFF               	movlw	-1
  4304  0138E0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4305  0138E6  0E77               	movlw	119
  4306  0138E8  6E3A               	movwf	(btemp+8)^0,c
  4307  0138EA  0E3C               	movlw	60
  4308  0138EC  6E3B               	movwf	(btemp+9)^0,c
  4309  0138EE  2A3D               	incf	(btemp+11)^0,f,c
  4310  0138F0  D003               	goto	u8144
  4311  0138F2                     u8145:
  4312  0138F2  343B               	rlcf	(btemp+9)^0,w,c
  4313  0138F4  323B               	rrcf	(btemp+9)^0,f,c
  4314  0138F6  323A               	rrcf	(btemp+8)^0,f,c
  4315  0138F8                     u8144:
  4316  0138F8  2E3D               	decfsz	(btemp+11)^0,f,c
  4317  0138FA  D7FB               	goto	u8145
  4318  0138FC  B03A               	btfsc	(btemp+8)^0,0,c
  4319  0138FE  D007               	goto	l8713
  4320                           
  4321                           ;daq.c: 86:    return nanf("");
  4322  013900  0E8D               	movlw	low (STR_36+18)
  4323  013902  6EE6               	movwf	postinc1,c
  4324  013904  0EFE               	movlw	high (STR_36+18)
  4325  013906  6EE6               	movwf	postinc1,c
  4326  013908  EC93  F0BE         	call	_nanf	;wreg free
  4327  01390C  D23A               	goto	l1666
  4328  01390E                     l8713:
  4329                           
  4330                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4331                           ;stkvar	_chan @ sp[(0)+-1]
  4332  01390E  0EFF               	movlw	-1
  4333  013910  006F FF8C  F03D    	movff	plusw1,btemp+11
  4334  013916  0E03               	movlw	3
  4335  013918  6E3A               	movwf	(btemp+8)^0,c
  4336  01391A  0E00               	movlw	0
  4337  01391C  6E3B               	movwf	(btemp+9)^0,c
  4338  01391E  2A3D               	incf	(btemp+11)^0,f,c
  4339  013920  D003               	goto	u8164
  4340  013922                     u8165:
  4341  013922  343B               	rlcf	(btemp+9)^0,w,c
  4342  013924  323B               	rrcf	(btemp+9)^0,f,c
  4343  013926  323A               	rrcf	(btemp+8)^0,f,c
  4344  013928                     u8164:
  4345  013928  2E3D               	decfsz	(btemp+11)^0,f,c
  4346  01392A  D7FB               	goto	u8165
  4347  01392C  A03A               	btfss	(btemp+8)^0,0,c
  4348  01392E  D0EB               	goto	l8727
  4349                           
  4350                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4351                           ;stkvar	_chan @ sp[(0)+-1]
  4352  013930  0EFF               	movlw	-1
  4353  013932  006F FF8C  F03D    	movff	plusw1,btemp+11
  4354  013938  0E01               	movlw	1
  4355  01393A  6E3A               	movwf	(btemp+8)^0,c
  4356  01393C  0E00               	movlw	0
  4357  01393E  6E3B               	movwf	(btemp+9)^0,c
  4358  013940  2A3D               	incf	(btemp+11)^0,f,c
  4359  013942  D003               	goto	u8184
  4360  013944                     u8185:
  4361  013944  343B               	rlcf	(btemp+9)^0,w,c
  4362  013946  323B               	rrcf	(btemp+9)^0,f,c
  4363  013948  323A               	rrcf	(btemp+8)^0,f,c
  4364  01394A                     u8184:
  4365  01394A  2E3D               	decfsz	(btemp+11)^0,f,c
  4366  01394C  D7FB               	goto	u8185
  4367  01394E  A03A               	btfss	(btemp+8)^0,0,c
  4368  013950  D06D               	goto	l8723
  4369                           
  4370                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  4371  013952  0E7B               	movlw	123
  4372  013954  6EE6               	movwf	postinc1,c
  4373  013956  0E14               	movlw	20
  4374  013958  6EE6               	movwf	postinc1,c
  4375  01395A  0EAE               	movlw	174
  4376  01395C  6EE6               	movwf	postinc1,c
  4377  01395E  0E3D               	movlw	61
  4378  013960  6EE6               	movwf	postinc1,c
  4379  013962  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  4380  013968  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  4381  01396E  0E00               	movlw	0
  4382  013970  BE3B               	btfsc	(btemp+9)^0,7,c
  4383  013972  0EFF               	movlw	255
  4384  013974  6E3C               	movwf	(btemp+10)^0,c
  4385  013976  6E3D               	movwf	(btemp+11)^0,c
  4386  013978  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4387  01397E  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4388  013984  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4389  01398A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4390  013990  0E01               	movlw	1
  4391  013992  6EE6               	movwf	postinc1,c
  4392  013994  EC7C  F0AD         	call	___xxtofl	;wreg free
  4393  013998  0060  F0CB  FFE6   	movff	btemp,postinc1
  4394  01399E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4395  0139A4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4396  0139AA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4397                           
  4398                           ;stkvar	_chan @ sp[(-8)+-1]
  4399  0139B0  0EF7               	movlw	-9
  4400  0139B2  50E3               	movf	plusw1,w,c
  4401  0139B4  6EE6               	movwf	postinc1,c
  4402  0139B6  ECCA  F0C4         	call	_get_raw_result	;wreg free
  4403  0139BA  0060  F0C8  F03C   	movff	btemp,btemp+10
  4404  0139C0  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4405  0139C6  503C               	movf	(btemp+10)^0,w,c
  4406  0139C8  6E36               	movwf	(btemp+4)^0,c
  4407  0139CA  503D               	movf	(btemp+11)^0,w,c
  4408  0139CC  6E37               	movwf	(btemp+5)^0,c
  4409  0139CE  6A38               	clrf	(btemp+6)^0,c
  4410  0139D0  6A39               	clrf	(btemp+7)^0,c
  4411  0139D2  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4412  0139D8  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4413  0139DE  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4414  0139E4  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4415  0139EA  0E00               	movlw	0
  4416  0139EC  6EE6               	movwf	postinc1,c
  4417  0139EE  EC7C  F0AD         	call	___xxtofl	;wreg free
  4418  0139F2  0060  F0CB  FFE6   	movff	btemp,postinc1
  4419  0139F8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4420  0139FE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4421  013A04  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4422  013A0A  EC45  F0C0         	call	___flsub	;wreg free
  4423  013A0E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4424  013A14  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4425  013A1A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4426  013A20  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4427  013A26  ECC1  F08E         	call	___flmul	;wreg free
  4428  013A2A  D1AB               	goto	l1666
  4429  013A2C                     l8723:
  4430                           
  4431                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  4432  013A2C  0E29               	movlw	41
  4433  013A2E  6EE6               	movwf	postinc1,c
  4434  013A30  0E5C               	movlw	92
  4435  013A32  6EE6               	movwf	postinc1,c
  4436  013A34  0E0F               	movlw	15
  4437  013A36  6EE6               	movwf	postinc1,c
  4438  013A38  0E3D               	movlw	61
  4439  013A3A  6EE6               	movwf	postinc1,c
  4440  013A3C  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  4441  013A42  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  4442  013A48  0E00               	movlw	0
  4443  013A4A  BE3B               	btfsc	(btemp+9)^0,7,c
  4444  013A4C  0EFF               	movlw	255
  4445  013A4E  6E3C               	movwf	(btemp+10)^0,c
  4446  013A50  6E3D               	movwf	(btemp+11)^0,c
  4447  013A52  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4448  013A58  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4449  013A5E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4450  013A64  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4451  013A6A  0E01               	movlw	1
  4452  013A6C  6EE6               	movwf	postinc1,c
  4453  013A6E  EC7C  F0AD         	call	___xxtofl	;wreg free
  4454  013A72  0060  F0CB  FFE6   	movff	btemp,postinc1
  4455  013A78  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4456  013A7E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4457  013A84  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4458                           
  4459                           ;stkvar	_chan @ sp[(-8)+-1]
  4460  013A8A  0EF7               	movlw	-9
  4461  013A8C  50E3               	movf	plusw1,w,c
  4462  013A8E  6EE6               	movwf	postinc1,c
  4463  013A90  ECCA  F0C4         	call	_get_raw_result	;wreg free
  4464  013A94  0060  F0C8  F03C   	movff	btemp,btemp+10
  4465  013A9A  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4466  013AA0  503C               	movf	(btemp+10)^0,w,c
  4467  013AA2  6E36               	movwf	(btemp+4)^0,c
  4468  013AA4  503D               	movf	(btemp+11)^0,w,c
  4469  013AA6  6E37               	movwf	(btemp+5)^0,c
  4470  013AA8  6A38               	clrf	(btemp+6)^0,c
  4471  013AAA  6A39               	clrf	(btemp+7)^0,c
  4472  013AAC  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4473  013AB2  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4474  013AB8  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4475  013ABE  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4476  013AC4  0E00               	movlw	0
  4477  013AC6  6EE6               	movwf	postinc1,c
  4478  013AC8  EC7C  F0AD         	call	___xxtofl	;wreg free
  4479  013ACC  0060  F0CB  FFE6   	movff	btemp,postinc1
  4480  013AD2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4481  013AD8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4482  013ADE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4483  013AE4  EC45  F0C0         	call	___flsub	;wreg free
  4484  013AE8  0060  F0CB  FFE6   	movff	btemp,postinc1
  4485  013AEE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4486  013AF4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4487  013AFA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4488  013B00  ECC1  F08E         	call	___flmul	;wreg free
  4489  013B04  D13E               	goto	l1666
  4490  013B06                     l8727:
  4491                           
  4492                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  4493                           ;stkvar	_chan @ sp[(0)+-1]
  4494  013B06  0EFF               	movlw	-1
  4495  013B08  006F FF8C  F03D    	movff	plusw1,btemp+11
  4496  013B0E  0E00               	movlw	0
  4497  013B10  6E3A               	movwf	(btemp+8)^0,c
  4498  013B12  0E08               	movlw	8
  4499  013B14  6E3B               	movwf	(btemp+9)^0,c
  4500  013B16  2A3D               	incf	(btemp+11)^0,f,c
  4501  013B18  D003               	goto	u8204
  4502  013B1A                     u8205:
  4503  013B1A  343B               	rlcf	(btemp+9)^0,w,c
  4504  013B1C  323B               	rrcf	(btemp+9)^0,f,c
  4505  013B1E  323A               	rrcf	(btemp+8)^0,f,c
  4506  013B20                     u8204:
  4507  013B20  2E3D               	decfsz	(btemp+11)^0,f,c
  4508  013B22  D7FB               	goto	u8205
  4509  013B24  A03A               	btfss	(btemp+8)^0,0,c
  4510  013B26  D008               	goto	l8735
  4511                           
  4512                           ;daq.c: 96:     return 25.0;
  4513  013B28  0E00               	movlw	0
  4514  013B2A  6E32               	movwf	btemp^0,c
  4515  013B2C  0E00               	movlw	0
  4516  013B2E  6E33               	movwf	(btemp+1)^0,c
  4517  013B30  0EC8               	movlw	200
  4518  013B32  6E34               	movwf	(btemp+2)^0,c
  4519  013B34  0E41               	movlw	65
  4520  013B36  D113               	goto	L3
  4521  013B38                     l8735:
  4522                           
  4523                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4524  013B38  0E00               	movlw	0
  4525  013B3A  6EE6               	movwf	postinc1,c
  4526  013B3C  0E00               	movlw	0
  4527  013B3E  6EE6               	movwf	postinc1,c
  4528  013B40  0E7A               	movlw	122
  4529  013B42  6EE6               	movwf	postinc1,c
  4530  013B44  0E44               	movlw	68
  4531  013B46  6EE6               	movwf	postinc1,c
  4532  013B48  0E61               	movlw	97
  4533  013B4A  6EE6               	movwf	postinc1,c
  4534  013B4C  0E03               	movlw	3
  4535  013B4E  6EE6               	movwf	postinc1,c
  4536  013B50  0E84               	movlw	132
  4537  013B52  6EE6               	movwf	postinc1,c
  4538  013B54  0E40               	movlw	64
  4539  013B56  6EE6               	movwf	postinc1,c
  4540                           
  4541                           ;stkvar	_chan @ sp[(-8)+-1]
  4542  013B58  0EF7               	movlw	-9
  4543  013B5A  50E3               	movf	plusw1,w,c
  4544  013B5C  6EE6               	movwf	postinc1,c
  4545  013B5E  ECCA  F0C4         	call	_get_raw_result	;wreg free
  4546  013B62  0060  F0C8  F03C   	movff	btemp,btemp+10
  4547  013B68  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4548  013B6E  503C               	movf	(btemp+10)^0,w,c
  4549  013B70  6E36               	movwf	(btemp+4)^0,c
  4550  013B72  503D               	movf	(btemp+11)^0,w,c
  4551  013B74  6E37               	movwf	(btemp+5)^0,c
  4552  013B76  6A38               	clrf	(btemp+6)^0,c
  4553  013B78  6A39               	clrf	(btemp+7)^0,c
  4554  013B7A  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4555  013B80  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4556  013B86  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4557  013B8C  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4558  013B92  0E00               	movlw	0
  4559  013B94  6EE6               	movwf	postinc1,c
  4560  013B96  EC7C  F0AD         	call	___xxtofl	;wreg free
  4561  013B9A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4562  013BA0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4563  013BA6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4564  013BAC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4565  013BB2  ECC1  F08E         	call	___flmul	;wreg free
  4566  013BB6  0060  F0CB  FFE6   	movff	btemp,postinc1
  4567  013BBC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4568  013BC2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4569  013BC8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4570  013BCE  ECB1  F099         	call	___fldiv	;wreg free
  4571  013BD2  D0D7               	goto	l1666
  4572  013BD4                     l8739:
  4573                           
  4574                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4575                           ;stkvar	_chan @ sp[(0)+-1]
  4576  013BD4  0EFF               	movlw	-1
  4577  013BD6  006F FF8C  F03D    	movff	plusw1,btemp+11
  4578  013BDC  0E03               	movlw	3
  4579  013BDE  6E3A               	movwf	(btemp+8)^0,c
  4580  013BE0  0E00               	movlw	0
  4581  013BE2  6E3B               	movwf	(btemp+9)^0,c
  4582  013BE4  2A3D               	incf	(btemp+11)^0,f,c
  4583  013BE6  D003               	goto	u8224
  4584  013BE8                     u8225:
  4585  013BE8  343B               	rlcf	(btemp+9)^0,w,c
  4586  013BEA  323B               	rrcf	(btemp+9)^0,f,c
  4587  013BEC  323A               	rrcf	(btemp+8)^0,f,c
  4588  013BEE                     u8224:
  4589  013BEE  2E3D               	decfsz	(btemp+11)^0,f,c
  4590  013BF0  D7FB               	goto	u8225
  4591  013BF2  B03A               	btfsc	(btemp+8)^0,0,c
  4592  013BF4  D011               	goto	u8250
  4593                           
  4594                           ;stkvar	_chan @ sp[(0)+-1]
  4595  013BF6  0EFF               	movlw	-1
  4596  013BF8  006F FF8C  F03D    	movff	plusw1,btemp+11
  4597  013BFE  0E00               	movlw	0
  4598  013C00  6E3A               	movwf	(btemp+8)^0,c
  4599  013C02  0E08               	movlw	8
  4600  013C04  6E3B               	movwf	(btemp+9)^0,c
  4601  013C06  2A3D               	incf	(btemp+11)^0,f,c
  4602  013C08  D003               	goto	u8244
  4603  013C0A                     u8245:
  4604  013C0A  343B               	rlcf	(btemp+9)^0,w,c
  4605  013C0C  323B               	rrcf	(btemp+9)^0,f,c
  4606  013C0E  323A               	rrcf	(btemp+8)^0,f,c
  4607  013C10                     u8244:
  4608  013C10  2E3D               	decfsz	(btemp+11)^0,f,c
  4609  013C12  D7FB               	goto	u8245
  4610  013C14  A03A               	btfss	(btemp+8)^0,0,c
  4611  013C16  D04E               	goto	l8747
  4612  013C18                     u8250:
  4613                           
  4614                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4615  013C18  0E00               	movlw	0
  4616  013C1A  6EE6               	movwf	postinc1,c
  4617  013C1C  0E00               	movlw	0
  4618  013C1E  6EE6               	movwf	postinc1,c
  4619  013C20  0E7A               	movlw	122
  4620  013C22  6EE6               	movwf	postinc1,c
  4621  013C24  0E44               	movlw	68
  4622  013C26  6EE6               	movwf	postinc1,c
  4623  013C28  0E00               	movlw	0
  4624  013C2A  6EE6               	movwf	postinc1,c
  4625  013C2C  0E00               	movlw	0
  4626  013C2E  6EE6               	movwf	postinc1,c
  4627  013C30  0E20               	movlw	32
  4628  013C32  6EE6               	movwf	postinc1,c
  4629  013C34  0E3F               	movlw	63
  4630  013C36  6EE6               	movwf	postinc1,c
  4631                           
  4632                           ;stkvar	_chan @ sp[(-8)+-1]
  4633  013C38  0EF7               	movlw	-9
  4634  013C3A  50E3               	movf	plusw1,w,c
  4635  013C3C  6EE6               	movwf	postinc1,c
  4636  013C3E  ECCA  F0C4         	call	_get_raw_result	;wreg free
  4637  013C42  0060  F0C8  F03C   	movff	btemp,btemp+10
  4638  013C48  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4639  013C4E  503C               	movf	(btemp+10)^0,w,c
  4640  013C50  6E36               	movwf	(btemp+4)^0,c
  4641  013C52  503D               	movf	(btemp+11)^0,w,c
  4642  013C54  6E37               	movwf	(btemp+5)^0,c
  4643  013C56  6A38               	clrf	(btemp+6)^0,c
  4644  013C58  6A39               	clrf	(btemp+7)^0,c
  4645  013C5A  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4646  013C60  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4647  013C66  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4648  013C6C  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4649  013C72  0E00               	movlw	0
  4650  013C74  6EE6               	movwf	postinc1,c
  4651  013C76  EC7C  F0AD         	call	___xxtofl	;wreg free
  4652  013C7A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4653  013C80  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4654  013C86  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4655  013C8C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4656  013C92  ECC1  F08E         	call	___flmul	;wreg free
  4657  013C96  0060  F0CB  FFE6   	movff	btemp,postinc1
  4658  013C9C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4659  013CA2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4660  013CA8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4661  013CAE  ECB1  F099         	call	___fldiv	;wreg free
  4662  013CB2  D067               	goto	l1666
  4663  013CB4                     l8747:
  4664                           
  4665                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4666  013CB4  0E00               	movlw	0
  4667  013CB6  6EE6               	movwf	postinc1,c
  4668  013CB8  0E00               	movlw	0
  4669  013CBA  6EE6               	movwf	postinc1,c
  4670  013CBC  0E7A               	movlw	122
  4671  013CBE  6EE6               	movwf	postinc1,c
  4672  013CC0  0E44               	movlw	68
  4673  013CC2  6EE6               	movwf	postinc1,c
  4674  013CC4  0E61               	movlw	97
  4675  013CC6  6EE6               	movwf	postinc1,c
  4676  013CC8  0E03               	movlw	3
  4677  013CCA  6EE6               	movwf	postinc1,c
  4678  013CCC  0E84               	movlw	132
  4679  013CCE  6EE6               	movwf	postinc1,c
  4680  013CD0  0E40               	movlw	64
  4681  013CD2  6EE6               	movwf	postinc1,c
  4682                           
  4683                           ;stkvar	_chan @ sp[(-8)+-1]
  4684  013CD4  0EF7               	movlw	-9
  4685  013CD6  50E3               	movf	plusw1,w,c
  4686  013CD8  6EE6               	movwf	postinc1,c
  4687  013CDA  ECCA  F0C4         	call	_get_raw_result	;wreg free
  4688  013CDE  0060  F0C8  F03C   	movff	btemp,btemp+10
  4689  013CE4  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4690  013CEA  503C               	movf	(btemp+10)^0,w,c
  4691  013CEC  6E36               	movwf	(btemp+4)^0,c
  4692  013CEE  503D               	movf	(btemp+11)^0,w,c
  4693  013CF0  6E37               	movwf	(btemp+5)^0,c
  4694  013CF2  6A38               	clrf	(btemp+6)^0,c
  4695  013CF4  6A39               	clrf	(btemp+7)^0,c
  4696  013CF6  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4697  013CFC  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4698  013D02  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4699  013D08  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4700  013D0E  0E00               	movlw	0
  4701  013D10  6EE6               	movwf	postinc1,c
  4702  013D12  EC7C  F0AD         	call	___xxtofl	;wreg free
  4703  013D16  0060  F0CB  FFE6   	movff	btemp,postinc1
  4704  013D1C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4705  013D22  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4706  013D28  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4707  013D2E  ECC1  F08E         	call	___flmul	;wreg free
  4708  013D32  0060  F0CB  FFE6   	movff	btemp,postinc1
  4709  013D38  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4710  013D3E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4711  013D44  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4712  013D4A  ECB1  F099         	call	___fldiv	;wreg free
  4713  013D4E  D019               	goto	l1666
  4714  013D50                     l8753:
  4715                           
  4716                           ;daq.c: 109:   return 0.0;
  4717  013D50  0E00               	movlw	0
  4718  013D52  6E32               	movwf	btemp^0,c
  4719  013D54  0E00               	movlw	0
  4720  013D56  6E33               	movwf	(btemp+1)^0,c
  4721  013D58  0E00               	movlw	0
  4722  013D5A  6E34               	movwf	(btemp+2)^0,c
  4723  013D5C  0E00               	movlw	0
  4724  013D5E                     L3:
  4725  013D5E  6E35               	movwf	(btemp+3)^0,c
  4726  013D60  D010               	goto	l1666
  4727  013D62                     l8761:
  4728                           
  4729                           ;stkvar	_to_what @ sp[(0)+-2]
  4730  013D62  0EFE               	movlw	-2
  4731  013D64  50E3               	movf	plusw1,w,c
  4732  013D66  6E3C               	movwf	(btemp+10)^0,c
  4733  013D68  6A3D               	clrf	(btemp+11)^0,c
  4734                           
  4735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4736                           ; Switch size 1, requested type "simple"
  4737                           ; Number of cases is 1, Range of values is 0 to 0
  4738                           ; switch strategies available:
  4739                           ; Name         Instructions Cycles
  4740                           ; simple_byte            4     3 (average)
  4741                           ;	Chosen strategy is simple_byte
  4742  013D6A  503D               	movf	(btemp+11)^0,w,c
  4743  013D6C  0A00               	xorlw	0	; case 0
  4744  013D6E  A4D8               	btfss	status,2,c
  4745  013D70  D7EF               	goto	l8753
  4746                           
  4747                           ; Switch size 1, requested type "simple"
  4748                           ; Number of cases is 2, Range of values is 0 to 1
  4749                           ; switch strategies available:
  4750                           ; Name         Instructions Cycles
  4751                           ; simple_byte            7     4 (average)
  4752                           ;	Chosen strategy is simple_byte
  4753  013D72  503C               	movf	(btemp+10)^0,w,c
  4754  013D74  0A00               	xorlw	0	; case 0
  4755  013D76  B4D8               	btfsc	status,2,c
  4756  013D78  D5B2               	goto	l8707
  4757  013D7A  0A01               	xorlw	1	; case 1
  4758  013D7C  B4D8               	btfsc	status,2,c
  4759  013D7E  D72A               	goto	l8739
  4760  013D80  D7E7               	goto	l8753
  4761  013D82                     l1666:
  4762                           
  4763                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4764  013D82  52E5               	movf	postdec1,f,c
  4765  013D84  52E5               	movf	postdec1,f,c
  4766  013D86  0012               	return		;funcret
  4767  013D88                     __end_of_conv_raw_result:
  4768                           	opt callstack 0
  4769                           
  4770 ;; *************** function _nanf *****************
  4771 ;; Defined at:
  4772 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  s               2  [STACK] PTR const unsigned char 
  4775 ;;		 -> STR_42(1), 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;  u               4  [STACK] struct .
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  4  [STACK] float 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/39
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4791 ;;Total ram usage:        0 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    6
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_conv_raw_result
  4798 ;; This function uses a reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text17
  4802  017D26                     __ptext17:
  4803                           	opt callstack 0
  4804  017D26                     _nanf:
  4805                           	opt callstack 0
  4806                           
  4807                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4808  017D26  52E6               	movf	postinc1,f,c
  4809  017D28  52E6               	movf	postinc1,f,c
  4810  017D2A  52E6               	movf	postinc1,f,c
  4811  017D2C  52E6               	movf	postinc1,f,c
  4812                           
  4813                           ;incstack = 0
  4814  017D2E  0EFF               	movlw	255
  4815  017D30  6E3A               	movwf	(btemp+8)^0,c
  4816  017D32  0EFF               	movlw	255
  4817  017D34  6E3B               	movwf	(btemp+9)^0,c
  4818  017D36  0EFF               	movlw	255
  4819  017D38  6E3C               	movwf	(btemp+10)^0,c
  4820  017D3A  0E7F               	movlw	127
  4821  017D3C  6E3D               	movwf	(btemp+11)^0,c
  4822                           
  4823                           ;stkvar	_u @ sp[(-4)+0]
  4824  017D3E  0EFC               	movlw	-4
  4825  017D40  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4826  017D46  0EFD               	movlw	-3
  4827  017D48  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4828  017D4E  0EFE               	movlw	-2
  4829  017D50  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4830  017D56  0EFF               	movlw	-1
  4831  017D58  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4832                           
  4833                           ;stkvar	_u @ sp[(-4)+0]
  4834  017D5E  0EFC               	movlw	-4
  4835  017D60  006F FF8C  F032    	movff	plusw1,btemp
  4836  017D66  0EFD               	movlw	-3
  4837  017D68  006F FF8C  F033    	movff	plusw1,btemp+1
  4838  017D6E  0EFE               	movlw	-2
  4839  017D70  006F FF8C  F034    	movff	plusw1,btemp+2
  4840  017D76  0EFF               	movlw	-1
  4841  017D78  006F FF8C  F035    	movff	plusw1,btemp+3
  4842                           
  4843                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4844  017D7E  0EFA               	movlw	250
  4845  017D80  26E1               	addwf	fsr1l,f,c
  4846  017D82  0EFF               	movlw	255
  4847  017D84  22E2               	addwfc	fsr1h,f,c
  4848  017D86  0012               	return		;funcret
  4849  017D88                     __end_of_nanf:
  4850                           	opt callstack 0
  4851                           
  4852 ;; *************** function _get_raw_result *****************
  4853 ;; Defined at:
  4854 ;;		line 72 in file "daq.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  index           1  [STACK] const enum E16136
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  2  [STACK] unsigned short 
  4861 ;; Registers used:
  4862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/39
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    6
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_conv_raw_result
  4879 ;; This function uses a reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text18
  4883  018994                     __ptext18:
  4884                           	opt callstack 0
  4885  018994                     _get_raw_result:
  4886                           	opt callstack 22
  4887                           
  4888                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4889                           ;stkvar	_index @ sp[(0)+-1]
  4890                           
  4891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4892                           ;incstack = 0
  4893  018994  0EFF               	movlw	-1
  4894  018996  50E3               	movf	plusw1,w,c
  4895  018998  0D02               	mullw	2
  4896  01899A  50F3               	movf	243,w,c
  4897  01899C  0FC7               	addlw	low _R
  4898  01899E  6ED9               	movwf	fsr2l,c
  4899  0189A0  6ADA               	clrf	fsr2h,c
  4900  0189A2  006F FF78  F032    	movff	postinc2,btemp
  4901  0189A8  006F FF74  F033    	movff	postdec2,btemp+1
  4902                           
  4903                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4904  0189AE  52E5               	movf	postdec1,f,c
  4905  0189B0  0012               	return		;funcret
  4906  0189B2                     __end_of_get_raw_result:
  4907                           	opt callstack 0
  4908                           
  4909 ;; *************** function ___xxtofl *****************
  4910 ;; Defined at:
  4911 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  sign            1  [STACK] unsigned char 
  4914 ;;  val             4  [STACK] long 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  arg             4  [STACK] unsigned long 
  4917 ;;  exp             1  [STACK] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  4  [STACK] unsigned char 
  4920 ;; Registers used:
  4921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/39
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4931 ;;Total ram usage:        0 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    6
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_conv_raw_result
  4938 ;; This function uses a reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text19
  4942  015AF8                     __ptext19:
  4943                           	opt callstack 0
  4944  015AF8                     ___xxtofl:
  4945                           	opt callstack 0
  4946                           
  4947                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4948  015AF8  0E05               	movlw	5
  4949  015AFA  26E1               	addwf	fsr1l,f,c
  4950  015AFC  0E00               	movlw	0
  4951  015AFE  22E2               	addwfc	fsr1h,f,c
  4952                           
  4953                           ;stkvar	_sign @ sp[(-5)+-1]
  4954                           
  4955                           ;incstack = 0
  4956  015B00  0EFA               	movlw	-6
  4957  015B02  50E3               	movf	plusw1,w,c
  4958  015B04  B4D8               	btfsc	status,2,c
  4959  015B06  D01D               	goto	l8185
  4960                           
  4961                           ;stkvar	_val @ sp[(-5)+-5]
  4962  015B08  0EF9               	movlw	-7
  4963  015B0A  AEE3               	btfss	plusw1,7,c
  4964  015B0C  D01A               	goto	l8185
  4965                           
  4966                           ;stkvar	_val @ sp[(-5)+-5]
  4967  015B0E  0EF6               	movlw	-10
  4968  015B10  006F FF8C  F03A    	movff	plusw1,btemp+8
  4969  015B16  0EF7               	movlw	-9
  4970  015B18  006F FF8C  F03B    	movff	plusw1,btemp+9
  4971  015B1E  0EF8               	movlw	-8
  4972  015B20  006F FF8C  F03C    	movff	plusw1,btemp+10
  4973  015B26  0EF9               	movlw	-7
  4974  015B28  006F FF8C  F03D    	movff	plusw1,btemp+11
  4975  015B2E  1E3A               	comf	(btemp+8)^0,f,c
  4976  015B30  1E3B               	comf	(btemp+9)^0,f,c
  4977  015B32  1E3C               	comf	(btemp+10)^0,f,c
  4978  015B34  1E3D               	comf	(btemp+11)^0,f,c
  4979  015B36  2A3A               	incf	(btemp+8)^0,f,c
  4980  015B38  0E00               	movlw	0
  4981  015B3A  223B               	addwfc	(btemp+9)^0,f,c
  4982  015B3C  223C               	addwfc	(btemp+10)^0,f,c
  4983  015B3E  223D               	addwfc	(btemp+11)^0,f,c
  4984  015B40  D010               	goto	L4
  4985  015B42                     l8185:
  4986                           
  4987                           ;stkvar	_val @ sp[(-5)+-5]
  4988  015B42  0EF6               	movlw	-10
  4989  015B44  006F FF8C  F03A    	movff	plusw1,btemp+8
  4990  015B4A  0EF7               	movlw	-9
  4991  015B4C  006F FF8C  F03B    	movff	plusw1,btemp+9
  4992  015B52  0EF8               	movlw	-8
  4993  015B54  006F FF8C  F03C    	movff	plusw1,btemp+10
  4994  015B5A  0EF9               	movlw	-7
  4995  015B5C  006F FF8C  F03D    	movff	plusw1,btemp+11
  4996  015B62                     L4:
  4997                           
  4998                           ;stkvar	_arg @ sp[(-5)+0]
  4999  015B62  0EFB               	movlw	-5
  5000  015B64  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5001  015B6A  0EFC               	movlw	-4
  5002  015B6C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5003  015B72  0EFD               	movlw	-3
  5004  015B74  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5005  015B7A  0EFE               	movlw	-2
  5006  015B7C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5007                           
  5008                           ;stkvar	_val @ sp[(-5)+-5]
  5009  015B82  0EF6               	movlw	-10
  5010  015B84  50E3               	movf	plusw1,w,c
  5011  015B86  E113               	bnz	l8193
  5012  015B88  0EF7               	movlw	-9
  5013  015B8A  50E3               	movf	plusw1,w,c
  5014  015B8C  E110               	bnz	l8193
  5015  015B8E  0EF8               	movlw	-8
  5016  015B90  50E3               	movf	plusw1,w,c
  5017  015B92  E10D               	bnz	l8193
  5018  015B94  0EF9               	movlw	-7
  5019  015B96  50E3               	movf	plusw1,w,c
  5020  015B98  A4D8               	btfss	status,2,c
  5021  015B9A  D009               	goto	l8193
  5022  015B9C  0E00               	movlw	0
  5023  015B9E  6E32               	movwf	btemp^0,c
  5024  015BA0  0E00               	movlw	0
  5025  015BA2  6E33               	movwf	(btemp+1)^0,c
  5026  015BA4  0E00               	movlw	0
  5027  015BA6  6E34               	movwf	(btemp+2)^0,c
  5028  015BA8  0E00               	movlw	0
  5029  015BAA  6E35               	movwf	(btemp+3)^0,c
  5030  015BAC  D0A2               	goto	l2736
  5031  015BAE                     l8193:
  5032  015BAE  0E96               	movlw	150
  5033  015BB0  6E3D               	movwf	(btemp+11)^0,c
  5034                           
  5035                           ;stkvar	_exp @ sp[(-5)+4]
  5036  015BB2  0EFF               	movlw	-1
  5037  015BB4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5038  015BBA  D00B               	goto	l8197
  5039  015BBC                     l8195:
  5040                           
  5041                           ;stkvar	_exp @ sp[(-5)+4]
  5042  015BBC  0EFF               	movlw	-1
  5043  015BBE  2AE3               	incf	plusw1,f,c
  5044                           
  5045                           ;stkvar	_arg @ sp[(-5)+0]
  5046  015BC0  90D8               	bcf	status,0,c
  5047  015BC2  0EFE               	movlw	-2
  5048  015BC4  32E3               	rrcf	plusw1,f,c
  5049  015BC6  0EFD               	movlw	-3
  5050  015BC8  32E3               	rrcf	plusw1,f,c
  5051  015BCA  0EFC               	movlw	-4
  5052  015BCC  32E3               	rrcf	plusw1,f,c
  5053  015BCE  0EFB               	movlw	-5
  5054  015BD0  32E3               	rrcf	plusw1,f,c
  5055  015BD2                     l8197:
  5056                           
  5057                           ;stkvar	_arg @ sp[(-5)+0]
  5058  015BD2  50E1               	movf	fsr1l,w,c
  5059  015BD4  0FFB               	addlw	-5
  5060  015BD6  6ED9               	movwf	fsr2l,c
  5061  015BD8  50E2               	movf	fsr1h,w,c
  5062  015BDA  6EDA               	movwf	fsr2h,c
  5063  015BDC  0EFF               	movlw	255
  5064  015BDE  22DA               	addwfc	fsr2h,f,c
  5065  015BE0  52DE               	movf	postinc2,f,c
  5066  015BE2  52DE               	movf	postinc2,f,c
  5067  015BE4  52DE               	movf	postinc2,f,c
  5068  015BE6  0EFE               	movlw	254
  5069  015BE8  14DD               	andwf	postdec2,w,c
  5070  015BEA  B4D8               	btfsc	status,2,c
  5071  015BEC  D018               	goto	l8205
  5072  015BEE  D7E6               	goto	l8195
  5073  015BF0                     l8199:
  5074                           
  5075                           ;stkvar	_exp @ sp[(-5)+4]
  5076  015BF0  0EFF               	movlw	-1
  5077  015BF2  2AE3               	incf	plusw1,f,c
  5078                           
  5079                           ;stkvar	_arg @ sp[(-5)+0]
  5080  015BF4  50E1               	movf	fsr1l,w,c
  5081  015BF6  0FFB               	addlw	-5
  5082  015BF8  6ED9               	movwf	fsr2l,c
  5083  015BFA  50E2               	movf	fsr1h,w,c
  5084  015BFC  6EDA               	movwf	fsr2h,c
  5085  015BFE  0EFF               	movlw	255
  5086  015C00  22DA               	addwfc	fsr2h,f,c
  5087  015C02  2ADE               	incf	postinc2,f,c
  5088  015C04  0E00               	movlw	0
  5089  015C06  22DE               	addwfc	postinc2,f,c
  5090  015C08  22DE               	addwfc	postinc2,f,c
  5091  015C0A  22DE               	addwfc	postinc2,f,c
  5092                           
  5093                           ;stkvar	_arg @ sp[(-5)+0]
  5094  015C0C  90D8               	bcf	status,0,c
  5095  015C0E  0EFE               	movlw	-2
  5096  015C10  32E3               	rrcf	plusw1,f,c
  5097  015C12  0EFD               	movlw	-3
  5098  015C14  32E3               	rrcf	plusw1,f,c
  5099  015C16  0EFC               	movlw	-4
  5100  015C18  32E3               	rrcf	plusw1,f,c
  5101  015C1A  0EFB               	movlw	-5
  5102  015C1C  32E3               	rrcf	plusw1,f,c
  5103  015C1E                     l8205:
  5104                           
  5105                           ;stkvar	_arg @ sp[(-5)+0]
  5106  015C1E  50E1               	movf	fsr1l,w,c
  5107  015C20  0FFB               	addlw	-5
  5108  015C22  6ED9               	movwf	fsr2l,c
  5109  015C24  50E2               	movf	fsr1h,w,c
  5110  015C26  6EDA               	movwf	fsr2h,c
  5111  015C28  0EFF               	movlw	255
  5112  015C2A  22DA               	addwfc	fsr2h,f,c
  5113  015C2C  52DE               	movf	postinc2,f,c
  5114  015C2E  52DE               	movf	postinc2,f,c
  5115  015C30  52DE               	movf	postinc2,f,c
  5116  015C32  0EFF               	movlw	255
  5117  015C34  14DD               	andwf	postdec2,w,c
  5118  015C36  B4D8               	btfsc	status,2,c
  5119  015C38  D00C               	goto	l8209
  5120  015C3A  D7DA               	goto	l8199
  5121  015C3C                     l8207:
  5122                           
  5123                           ;stkvar	_exp @ sp[(-5)+4]
  5124  015C3C  0EFF               	movlw	-1
  5125  015C3E  06E3               	decf	plusw1,f,c
  5126                           
  5127                           ;stkvar	_arg @ sp[(-5)+0]
  5128  015C40  90D8               	bcf	status,0,c
  5129  015C42  0EFB               	movlw	-5
  5130  015C44  36E3               	rlcf	plusw1,f,c
  5131  015C46  0EFC               	movlw	-4
  5132  015C48  36E3               	rlcf	plusw1,f,c
  5133  015C4A  0EFD               	movlw	-3
  5134  015C4C  36E3               	rlcf	plusw1,f,c
  5135  015C4E  0EFE               	movlw	-2
  5136  015C50  36E3               	rlcf	plusw1,f,c
  5137  015C52                     l8209:
  5138                           
  5139                           ;stkvar	_arg @ sp[(-5)+0]
  5140  015C52  0EFD               	movlw	-3
  5141  015C54  BEE3               	btfsc	plusw1,7,c
  5142  015C56  D007               	goto	u7970
  5143                           
  5144                           ;stkvar	_exp @ sp[(-5)+4]
  5145  015C58  0EFF               	movlw	-1
  5146  015C5A  006F FF8C  F032    	movff	plusw1,btemp
  5147  015C60  0E02               	movlw	2
  5148  015C62  6032               	cpfslt	btemp^0,c
  5149  015C64  D7EB               	goto	l8207
  5150  015C66                     u7970:
  5151                           
  5152                           ;stkvar	_exp @ sp[(-5)+4]
  5153  015C66  0EFF               	movlw	-1
  5154  015C68  B0E3               	btfsc	plusw1,0,c
  5155  015C6A  D002               	goto	l8217
  5156                           
  5157                           ;stkvar	_arg @ sp[(-5)+0]
  5158  015C6C  0EFD               	movlw	-3
  5159  015C6E  9EE3               	bcf	plusw1,7,c
  5160  015C70                     l8217:
  5161                           
  5162                           ;stkvar	_exp @ sp[(-5)+4]
  5163  015C70  50E1               	movf	fsr1l,w,c
  5164  015C72  0FFF               	addlw	-1
  5165  015C74  6ED9               	movwf	fsr2l,c
  5166  015C76  50E2               	movf	fsr1h,w,c
  5167  015C78  6EDA               	movwf	fsr2h,c
  5168  015C7A  0EFF               	movlw	255
  5169  015C7C  22DA               	addwfc	fsr2h,f,c
  5170  015C7E  90D8               	bcf	status,0,c
  5171  015C80  32DF               	rrcf	indf2,f,c
  5172                           
  5173                           ;stkvar	_exp @ sp[(-5)+4]
  5174  015C82  0EFF               	movlw	-1
  5175  015C84  006F FF8C  F03D    	movff	plusw1,btemp+11
  5176  015C8A  0060  F0F4  F036   	movff	btemp+11,btemp+4
  5177  015C90  6A37               	clrf	(btemp+5)^0,c
  5178  015C92  6A38               	clrf	(btemp+6)^0,c
  5179  015C94  6A39               	clrf	(btemp+7)^0,c
  5180  015C96  0060  F0D8  F039   	movff	btemp+4,btemp+7
  5181  015C9C  6A38               	clrf	(btemp+6)^0,c
  5182  015C9E  6A37               	clrf	(btemp+5)^0,c
  5183  015CA0  6A36               	clrf	(btemp+4)^0,c
  5184                           
  5185                           ;stkvar	_arg @ sp[(-5)+0]
  5186  015CA2  50E1               	movf	fsr1l,w,c
  5187  015CA4  0FFB               	addlw	-5
  5188  015CA6  6ED9               	movwf	fsr2l,c
  5189  015CA8  50E2               	movf	fsr1h,w,c
  5190  015CAA  6EDA               	movwf	fsr2h,c
  5191  015CAC  0EFF               	movlw	255
  5192  015CAE  22DA               	addwfc	fsr2h,f,c
  5193  015CB0  5036               	movf	(btemp+4)^0,w,c
  5194  015CB2  12DE               	iorwf	postinc2,f,c
  5195  015CB4  5037               	movf	(btemp+5)^0,w,c
  5196  015CB6  12DE               	iorwf	postinc2,f,c
  5197  015CB8  5038               	movf	(btemp+6)^0,w,c
  5198  015CBA  12DE               	iorwf	postinc2,f,c
  5199  015CBC  5039               	movf	(btemp+7)^0,w,c
  5200  015CBE  12DE               	iorwf	postinc2,f,c
  5201                           
  5202                           ;stkvar	_sign @ sp[(-5)+-1]
  5203  015CC0  0EFA               	movlw	-6
  5204  015CC2  50E3               	movf	plusw1,w,c
  5205  015CC4  B4D8               	btfsc	status,2,c
  5206  015CC6  D005               	goto	l8227
  5207                           
  5208                           ;stkvar	_val @ sp[(-5)+-5]
  5209  015CC8  0EF9               	movlw	-7
  5210  015CCA  AEE3               	btfss	plusw1,7,c
  5211  015CCC  D002               	goto	l8227
  5212                           
  5213                           ;stkvar	_arg @ sp[(-5)+0]
  5214  015CCE  0EFE               	movlw	-2
  5215  015CD0  8EE3               	bsf	plusw1,7,c
  5216  015CD2                     l8227:
  5217                           
  5218                           ;stkvar	_arg @ sp[(-5)+0]
  5219  015CD2  0EFB               	movlw	-5
  5220  015CD4  006F FF8C  F032    	movff	plusw1,btemp
  5221  015CDA  0EFC               	movlw	-4
  5222  015CDC  006F FF8C  F033    	movff	plusw1,btemp+1
  5223  015CE2  0EFD               	movlw	-3
  5224  015CE4  006F FF8C  F034    	movff	plusw1,btemp+2
  5225  015CEA  0EFE               	movlw	-2
  5226  015CEC  006F FF8C  F035    	movff	plusw1,btemp+3
  5227  015CF2                     l2736:
  5228                           
  5229                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5230  015CF2  0EF6               	movlw	246
  5231  015CF4  26E1               	addwf	fsr1l,f,c
  5232  015CF6  0EFF               	movlw	255
  5233  015CF8  22E2               	addwfc	fsr1h,f,c
  5234  015CFA  0012               	return		;funcret
  5235  015CFC                     __end_of___xxtofl:
  5236                           	opt callstack 0
  5237                           
  5238 ;; *************** function _clear_hid_pflags *****************
  5239 ;; Defined at:
  5240 ;;		line 42 in file "hid.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  h               1  [STACK] PTR struct H_data
  5243 ;;		 -> H(7), 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1  [STACK] void 
  5248 ;; Registers used:
  5249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5259 ;;Total ram usage:        0 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    6
  5262 ;; This function calls:
  5263 ;;		Nothing
  5264 ;; This function is called by:
  5265 ;;		_main
  5266 ;; This function uses a reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text20
  5270  018882                     __ptext20:
  5271                           	opt callstack 0
  5272  018882                     _clear_hid_pflags:
  5273                           	opt callstack 24
  5274                           
  5275                           ;hid.c: 42: void clear_hid_pflags(H_data* h);hid.c: 43: {;hid.c: 44:  h->select_p = SW_O
      +                          FF;
  5276                           ;stkvar	_h @ sp[(0)+-1]
  5277                           
  5278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5279                           ;incstack = 0
  5280  018882  0EFF               	movlw	-1
  5281  018884  50E3               	movf	plusw1,w,c
  5282  018886  6ED9               	movwf	fsr2l,c
  5283  018888  6ADA               	clrf	fsr2h,c
  5284  01888A  0E03               	movlw	3
  5285  01888C  26D9               	addwf	fsr2l,f,c
  5286  01888E  0E00               	movlw	0
  5287  018890  6EDF               	movwf	indf2,c
  5288                           
  5289                           ;hid.c: 45:  h->enter_p = SW_OFF;
  5290                           ;stkvar	_h @ sp[(0)+-1]
  5291  018892  0EFF               	movlw	-1
  5292  018894  50E3               	movf	plusw1,w,c
  5293  018896  6ED9               	movwf	fsr2l,c
  5294  018898  6ADA               	clrf	fsr2h,c
  5295  01889A  0E05               	movlw	5
  5296  01889C  26D9               	addwf	fsr2l,f,c
  5297  01889E  0E00               	movlw	0
  5298  0188A0  6EDF               	movwf	indf2,c
  5299                           
  5300                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5301  0188A2  52E5               	movf	postdec1,f,c
  5302  0188A4  0012               	return		;funcret
  5303  0188A6                     __end_of_clear_hid_pflags:
  5304                           	opt callstack 0
  5305                           
  5306 ;; *************** function _clear_adc_scan *****************
  5307 ;; Defined at:
  5308 ;;		line 64 in file "daq.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1  [STACK] void 
  5315 ;; Registers used:
  5316 ;;		None
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/39
  5319 ;;		On exit  : 3F/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5326 ;;Total ram usage:        0 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    6
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_main
  5333 ;; This function uses a reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text21
  5337  018BCA                     __ptext21:
  5338                           	opt callstack 0
  5339  018BCA                     _clear_adc_scan:
  5340                           	opt callstack 24
  5341                           
  5342                           ;daq.c: 66:  R.done = 0;
  5343                           
  5344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5345                           ;incstack = 0
  5346  018BCA  0100               	movlb	0	; () banked
  5347  018BCC  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  5348                           
  5349                           ; BSR set to: 0
  5350                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  5351  018BCE  0012               	return		;funcret
  5352  018BD0                     __end_of_clear_adc_scan:
  5353                           	opt callstack 0
  5354                           
  5355 ;; *************** function _check_help *****************
  5356 ;; Defined at:
  5357 ;;		line 40 in file "mconfig.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  flipper         1  [STACK] const _Bool 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  estatus         1  [STACK] _Bool 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1  [STACK] _Bool 
  5364 ;; Registers used:
  5365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5366 ;; Tracked objects:
  5367 ;;		On entry : 3F/2
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5375 ;;Total ram usage:        0 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:   18
  5378 ;; This function calls:
  5379 ;;		_StartTimer
  5380 ;;		_TimerDone
  5381 ;;		_display_help
  5382 ;;		_display_info
  5383 ;;		_get_vterm_ptr
  5384 ;;		_help_button
  5385 ;;		_mode_lamp_bright
  5386 ;;		_mode_lamp_dim
  5387 ;;		_set_display_info
  5388 ;;		_set_temp_display_help
  5389 ;;		_set_vterm
  5390 ;;		_sprintf
  5391 ;;		_update_lcd
  5392 ;;		_vterm_dump
  5393 ;; This function is called by:
  5394 ;;		_main
  5395 ;; This function uses a reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text22
  5399  0158D0                     __ptext22:
  5400                           	opt callstack 0
  5401  0158D0                     _check_help:
  5402                           	opt callstack 0
  5403                           
  5404                           ; BSR set to: 0
  5405                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5406  0158D0  52E6               	movf	postinc1,f,c
  5407                           
  5408                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  5409                           ;stkvar	_estatus @ sp[(-1)+0]
  5410                           
  5411                           ;incstack = 0
  5412  0158D2  0EFF               	movlw	-1
  5413  0158D4  6AE3               	clrf	plusw1,c
  5414                           
  5415                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  5416  0158D6  EC71  F0C1         	call	_help_button	;wreg free
  5417  0158DA  5032               	movf	btemp^0,w,c
  5418  0158DC  B4D8               	btfsc	status,2,c
  5419  0158DE  D0D3               	goto	l10469
  5420  0158E0  ECD5  F0C5         	call	_display_info	;wreg free
  5421  0158E4  0432               	decf	btemp^0,w,c
  5422  0158E6  B4D8               	btfsc	status,2,c
  5423  0158E8  D0CE               	goto	l10469
  5424                           
  5425                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  5426  0158EA  0EDC               	movlw	220
  5427  0158EC  6EE6               	movwf	postinc1,c
  5428  0158EE  0E05               	movlw	5
  5429  0158F0  6EE6               	movwf	postinc1,c
  5430  0158F2  0E0B               	movlw	11
  5431  0158F4  6EE6               	movwf	postinc1,c
  5432  0158F6  EC53  F0C1         	call	_StartTimer	;wreg free
  5433                           
  5434                           ;mconfig.c: 48:   if (V.debug)
  5435  0158FA  0102               	movlb	2	; () banked
  5436  0158FC  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  5437                           
  5438                           ; BSR set to: 2
  5439                           ;mconfig.c: 49:    vterm_dump();
  5440  0158FE  ECC2  F0B3         	call	_vterm_dump	;wreg free
  5441                           
  5442                           ;mconfig.c: 51:   set_vterm(1);
  5443  015902  0E01               	movlw	1
  5444  015904  6EE6               	movwf	postinc1,c
  5445  015906  EC14  F0C5         	call	_set_vterm	;wreg free
  5446                           
  5447                           ; BSR set to: 5
  5448                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  5449  01590A  ECD5  F0C5         	call	_display_info	;wreg free
  5450  01590E  5032               	movf	btemp^0,w,c
  5451  015910  6EE6               	movwf	postinc1,c
  5452  015912  EC95  F0C5         	call	_set_temp_display_help	;wreg free
  5453                           
  5454                           ; BSR set to: 2
  5455                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  5456  015916  0E01               	movlw	1
  5457  015918  6EE6               	movwf	postinc1,c
  5458  01591A  ECD9  F0C4         	call	_set_display_info	;wreg free
  5459                           
  5460                           ;mconfig.c: 54:   if (flipper) {
  5461                           ;stkvar	_flipper @ sp[(-1)+-1]
  5462  01591E  0EFE               	movlw	-2
  5463  015920  50E3               	movf	plusw1,w,c
  5464  015922  B4D8               	btfsc	status,2,c
  5465  015924  D019               	goto	l10455
  5466                           
  5467                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  5468  015926  0EC1               	movlw	low STR_24
  5469  015928  6EE6               	movwf	postinc1,c
  5470  01592A  0EFF               	movlw	high STR_24
  5471  01592C  6EE6               	movwf	postinc1,c
  5472  01592E  0E8E               	movlw	low STR_26
  5473  015930  6EE6               	movwf	postinc1,c
  5474  015932  0EFE               	movlw	high STR_26
  5475  015934  6EE6               	movwf	postinc1,c
  5476  015936  0E01               	movlw	1
  5477  015938  6EE6               	movwf	postinc1,c
  5478  01593A  0E00               	movlw	0
  5479  01593C  6EE6               	movwf	postinc1,c
  5480  01593E  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  5481  015942  0060  F0CB  FFE6   	movff	btemp,postinc1
  5482  015948  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5483  01594E  0E06               	movlw	6
  5484  015950  6EE6               	movwf	postinc1,c
  5485  015952  EC88  F0B6         	call	_sprintf	;wreg free
  5486                           
  5487                           ;mconfig.c: 56:   } else {
  5488  015956  D018               	goto	l1570
  5489  015958                     l10455:
  5490                           
  5491                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  5492  015958  0ED7               	movlw	low STR_25
  5493  01595A  6EE6               	movwf	postinc1,c
  5494  01595C  0EFF               	movlw	high STR_25
  5495  01595E  6EE6               	movwf	postinc1,c
  5496  015960  0E8E               	movlw	low STR_26
  5497  015962  6EE6               	movwf	postinc1,c
  5498  015964  0EFE               	movlw	high STR_26
  5499  015966  6EE6               	movwf	postinc1,c
  5500  015968  0E01               	movlw	1
  5501  01596A  6EE6               	movwf	postinc1,c
  5502  01596C  0E00               	movlw	0
  5503  01596E  6EE6               	movwf	postinc1,c
  5504  015970  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  5505  015974  0060  F0CB  FFE6   	movff	btemp,postinc1
  5506  01597A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5507  015980  0E06               	movlw	6
  5508  015982  6EE6               	movwf	postinc1,c
  5509  015984  EC88  F0B6         	call	_sprintf	;wreg free
  5510  015988                     l1570:
  5511                           
  5512                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5513  015988  0102               	movlb	2	; () banked
  5514  01598A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5515  01598C  32E8               	rrcf	wreg,f,c
  5516  01598E  32E8               	rrcf	wreg,f,c
  5517  015990  0B03               	andlw	3
  5518  015992  0D24               	mullw	36
  5519  015994  0E12               	movlw	18
  5520  015996  26F3               	addwf	243,f,c
  5521  015998  0E00               	movlw	0
  5522  01599A  22F4               	addwfc	244,f,c
  5523  01599C  0ED3               	movlw	low _T
  5524  01599E  6E3C               	movwf	(btemp+10)^0,c
  5525  0159A0  0EFD               	movlw	high _T
  5526  0159A2  6E3D               	movwf	(btemp+11)^0,c
  5527  0159A4  50F3               	movf	243,w,c
  5528  0159A6  263C               	addwf	(btemp+10)^0,f,c
  5529  0159A8  50F4               	movf	244,w,c
  5530  0159AA  223D               	addwfc	(btemp+11)^0,f,c
  5531  0159AC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5532  0159B2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5533  0159B8  0ECD               	movlw	low STR_28
  5534  0159BA  6EE6               	movwf	postinc1,c
  5535  0159BC  0EFF               	movlw	high STR_28
  5536  0159BE  6EE6               	movwf	postinc1,c
  5537  0159C0  0E01               	movlw	1
  5538  0159C2  6EE6               	movwf	postinc1,c
  5539  0159C4  0E01               	movlw	1
  5540  0159C6  6EE6               	movwf	postinc1,c
  5541  0159C8  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  5542  0159CC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5543  0159D2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5544  0159D8  0E06               	movlw	6
  5545  0159DA  6EE6               	movwf	postinc1,c
  5546  0159DC  EC88  F0B6         	call	_sprintf	;wreg free
  5547                           
  5548                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5549  0159E0  0102               	movlb	2	; () banked
  5550  0159E2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5551  0159E4  32E8               	rrcf	wreg,f,c
  5552  0159E6  32E8               	rrcf	wreg,f,c
  5553  0159E8  0B03               	andlw	3
  5554  0159EA  0D24               	mullw	36
  5555  0159EC  0ED3               	movlw	low _T
  5556  0159EE  6E3C               	movwf	(btemp+10)^0,c
  5557  0159F0  0EFD               	movlw	high _T
  5558  0159F2  6E3D               	movwf	(btemp+11)^0,c
  5559  0159F4  50F3               	movf	243,w,c
  5560  0159F6  263C               	addwf	(btemp+10)^0,f,c
  5561  0159F8  50F4               	movf	244,w,c
  5562  0159FA  223D               	addwfc	(btemp+11)^0,f,c
  5563  0159FC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5564  015A02  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5565  015A08  0ECD               	movlw	low STR_28
  5566  015A0A  6EE6               	movwf	postinc1,c
  5567  015A0C  0EFF               	movlw	high STR_28
  5568  015A0E  6EE6               	movwf	postinc1,c
  5569  015A10  0E01               	movlw	1
  5570  015A12  6EE6               	movwf	postinc1,c
  5571  015A14  0E02               	movlw	2
  5572  015A16  6EE6               	movwf	postinc1,c
  5573  015A18  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  5574  015A1C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5575  015A22  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5576  015A28  0E06               	movlw	6
  5577  015A2A  6EE6               	movwf	postinc1,c
  5578  015A2C  EC88  F0B6         	call	_sprintf	;wreg free
  5579                           
  5580                           ;mconfig.c: 61:   V.help_id++;
  5581  015A30  EE20  F29B         	lfsr	2,_V+155	;volatile
  5582  015A34  38DF               	swapf	223,w,c
  5583  015A36  6E3D               	movwf	(btemp+11)^0,c
  5584  015A38  323D               	rrcf	(btemp+11)^0,f,c
  5585  015A3A  303D               	rrcf	(btemp+11)^0,w,c
  5586  015A3C  0B03               	andlw	3
  5587  015A3E  6E3D               	movwf	(btemp+11)^0,c
  5588  015A40  2A3D               	incf	(btemp+11)^0,f,c
  5589  015A42  3A3D               	swapf	(btemp+11)^0,f,c
  5590  015A44  363D               	rlcf	(btemp+11)^0,f,c
  5591  015A46  363D               	rlcf	(btemp+11)^0,f,c
  5592  015A48  50DF               	movf	223,w,c
  5593  015A4A  183D               	xorwf	(btemp+11)^0,w,c
  5594  015A4C  0B3F               	andlw	-193
  5595  015A4E  183D               	xorwf	(btemp+11)^0,w,c
  5596  015A50  6EDF               	movwf	223,c
  5597                           
  5598                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  5599  015A52  0EB8               	movlw	184
  5600  015A54  6EE6               	movwf	postinc1,c
  5601  015A56  0E0B               	movlw	11
  5602  015A58  6EE6               	movwf	postinc1,c
  5603  015A5A  0E09               	movlw	9
  5604  015A5C  6EE6               	movwf	postinc1,c
  5605  015A5E  EC53  F0C1         	call	_StartTimer	;wreg free
  5606                           
  5607                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  5608  015A62  0EB8               	movlw	184
  5609  015A64  6EE6               	movwf	postinc1,c
  5610  015A66  0E0B               	movlw	11
  5611  015A68  6EE6               	movwf	postinc1,c
  5612  015A6A  0E07               	movlw	7
  5613  015A6C  6EE6               	movwf	postinc1,c
  5614  015A6E  EC53  F0C1         	call	_StartTimer	;wreg free
  5615                           
  5616                           ;mconfig.c: 64:   mode_lamp_bright();
  5617  015A72  ECA4  F0C5         	call	_mode_lamp_bright	;wreg free
  5618                           
  5619                           ;mconfig.c: 65:   update_lcd(1);
  5620  015A76  0E01               	movlw	1
  5621  015A78  6EE6               	movwf	postinc1,c
  5622  015A7A  EC01  F0B6         	call	_update_lcd	;wreg free
  5623                           
  5624                           ;mconfig.c: 66:   estatus=1;
  5625                           ;stkvar	_estatus @ sp[(-1)+0]
  5626  015A7E  0EFF               	movlw	-1
  5627  015A80  6AE3               	clrf	plusw1,c
  5628  015A82  2AE3               	incf	plusw1,f,c
  5629                           
  5630                           ;mconfig.c: 67:  } else {
  5631  015A84  D032               	goto	l10485
  5632  015A86                     l10469:
  5633                           
  5634                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  5635  015A86  0E09               	movlw	9
  5636  015A88  6EE6               	movwf	postinc1,c
  5637  015A8A  EC53  F0C4         	call	_TimerDone	;wreg free
  5638  015A8E  5032               	movf	btemp^0,w,c
  5639  015A90  B4D8               	btfsc	status,2,c
  5640  015A92  D02B               	goto	l10485
  5641                           
  5642                           ;mconfig.c: 69:    set_vterm(0);
  5643  015A94  0E00               	movlw	0
  5644  015A96  6EE6               	movwf	postinc1,c
  5645  015A98  EC14  F0C5         	call	_set_vterm	;wreg free
  5646                           
  5647                           ; BSR set to: 5
  5648                           ;mconfig.c: 70:    V.help = 0;
  5649  015A9C  0102               	movlb	2	; () banked
  5650  015A9E  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5651                           
  5652                           ; BSR set to: 2
  5653                           ;mconfig.c: 71:    set_display_info(display_help());
  5654  015AA0  ECD9  F0C5         	call	_display_help	;wreg free
  5655  015AA4  5032               	movf	btemp^0,w,c
  5656  015AA6  6EE6               	movwf	postinc1,c
  5657  015AA8  ECD9  F0C4         	call	_set_display_info	;wreg free
  5658                           
  5659                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  5660  015AAC  0060  FA57  FFE6   	movff	_V+149,postinc1
  5661  015AB2  0060  FA5B  FFE6   	movff	_V+150,postinc1
  5662  015AB8  EC3D  F0C5         	call	_mode_lamp_dim	;wreg free
  5663                           
  5664                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  5665  015ABC  0E0B               	movlw	11
  5666  015ABE  6EE6               	movwf	postinc1,c
  5667  015AC0  EC53  F0C4         	call	_TimerDone	;wreg free
  5668  015AC4  5032               	movf	btemp^0,w,c
  5669  015AC6  B4D8               	btfsc	status,2,c
  5670  015AC8  D010               	goto	l10485
  5671                           
  5672                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  5673  015ACA  0102               	movlb	2	; () banked
  5674  015ACC  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5675  015ACE  A4D8               	btfss	status,2,c
  5676  015AD0  D002               	goto	u10460
  5677  015AD2  0E01               	movlw	1
  5678  015AD4  D001               	goto	u10470
  5679  015AD6                     u10460:
  5680  015AD6  0E00               	movlw	0
  5681  015AD8                     u10470:
  5682  015AD8  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5683                           
  5684                           ; BSR set to: 2
  5685                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  5686  015ADA  0EDC               	movlw	220
  5687  015ADC  6EE6               	movwf	postinc1,c
  5688  015ADE  0E05               	movlw	5
  5689  015AE0  6EE6               	movwf	postinc1,c
  5690  015AE2  0E0B               	movlw	11
  5691  015AE4  6EE6               	movwf	postinc1,c
  5692  015AE6  EC53  F0C1         	call	_StartTimer	;wreg free
  5693  015AEA                     l10485:
  5694                           
  5695                           ;mconfig.c: 79:  return estatus;
  5696                           ;stkvar	_estatus @ sp[(-1)+0]
  5697  015AEA  0EFF               	movlw	-1
  5698  015AEC  006F FF8C  F032    	movff	plusw1,btemp
  5699                           
  5700                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5701  015AF2  52E5               	movf	postdec1,f,c
  5702  015AF4  52E5               	movf	postdec1,f,c
  5703  015AF6  0012               	return		;funcret
  5704  015AF8                     __end_of_check_help:
  5705                           	opt callstack 0
  5706                           
  5707 ;; *************** function _vterm_dump *****************
  5708 ;; Defined at:
  5709 ;;		line 121 in file "mconfig.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;		None
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1  [STACK] void 
  5716 ;; Registers used:
  5717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5718 ;; Tracked objects:
  5719 ;;		On entry : 3F/2
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5727 ;;Total ram usage:        0 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:   17
  5730 ;; This function calls:
  5731 ;;		_WaitMs
  5732 ;;		_eaDogM_WriteStringAtPos
  5733 ;;		_get_vterm_ptr
  5734 ;;		_sprintf
  5735 ;;		_wait_lcd_done
  5736 ;; This function is called by:
  5737 ;;		_check_help
  5738 ;; This function uses a reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text23
  5742  016784                     __ptext23:
  5743                           	opt callstack 0
  5744  016784                     _vterm_dump:
  5745                           	opt callstack 12
  5746                           
  5747                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5748                           
  5749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5750                           ;incstack = 0
  5751  016784  0E01               	movlw	1
  5752  016786  6EE6               	movwf	postinc1,c
  5753  016788  0E00               	movlw	0
  5754  01678A  6EE6               	movwf	postinc1,c
  5755  01678C  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  5756  016790  0060  F0CB  FFE6   	movff	btemp,postinc1
  5757  016796  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5758  01679C  0E00               	movlw	0
  5759  01679E  6EE6               	movwf	postinc1,c
  5760  0167A0  0E00               	movlw	0
  5761  0167A2  6EE6               	movwf	postinc1,c
  5762  0167A4  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  5763  0167A8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5764  0167AE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5765  0167B4  0EA3               	movlw	low STR_30
  5766  0167B6  6EE6               	movwf	postinc1,c
  5767  0167B8  0EFF               	movlw	high STR_30
  5768  0167BA  6EE6               	movwf	postinc1,c
  5769  0167BC  0E01               	movlw	low (_V+1)
  5770  0167BE  6EE6               	movwf	postinc1,c
  5771  0167C0  0E02               	movlw	high (_V+1)
  5772  0167C2  6EE6               	movwf	postinc1,c
  5773  0167C4  0E08               	movlw	8
  5774  0167C6  6EE6               	movwf	postinc1,c
  5775  0167C8  EC88  F0B6         	call	_sprintf	;wreg free
  5776                           
  5777                           ;mconfig.c: 124:  wait_lcd_done();
  5778  0167CC  EC06  F0C5         	call	_wait_lcd_done	;wreg free
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5782  0167D0  0E01               	movlw	low (_V+1)
  5783  0167D2  6EE6               	movwf	postinc1,c
  5784  0167D4  0E02               	movlw	high (_V+1)
  5785  0167D6  6EE6               	movwf	postinc1,c
  5786  0167D8  0E00               	movlw	0
  5787  0167DA  6EE6               	movwf	postinc1,c
  5788  0167DC  0E00               	movlw	0
  5789  0167DE  6EE6               	movwf	postinc1,c
  5790  0167E0  ECA8  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  5791                           
  5792                           ; BSR set to: 59
  5793                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5794  0167E4  0E01               	movlw	1
  5795  0167E6  6EE6               	movwf	postinc1,c
  5796  0167E8  0E01               	movlw	1
  5797  0167EA  6EE6               	movwf	postinc1,c
  5798  0167EC  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  5799  0167F0  0060  F0CB  FFE6   	movff	btemp,postinc1
  5800  0167F6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5801  0167FC  0E00               	movlw	0
  5802  0167FE  6EE6               	movwf	postinc1,c
  5803  016800  0E01               	movlw	1
  5804  016802  6EE6               	movwf	postinc1,c
  5805  016804  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  5806  016808  0060  F0CB  FFE6   	movff	btemp,postinc1
  5807  01680E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5808  016814  0EA3               	movlw	low STR_30
  5809  016816  6EE6               	movwf	postinc1,c
  5810  016818  0EFF               	movlw	high STR_30
  5811  01681A  6EE6               	movwf	postinc1,c
  5812  01681C  0E01               	movlw	low (_V+1)
  5813  01681E  6EE6               	movwf	postinc1,c
  5814  016820  0E02               	movlw	high (_V+1)
  5815  016822  6EE6               	movwf	postinc1,c
  5816  016824  0E08               	movlw	8
  5817  016826  6EE6               	movwf	postinc1,c
  5818  016828  EC88  F0B6         	call	_sprintf	;wreg free
  5819                           
  5820                           ;mconfig.c: 127:  wait_lcd_done();
  5821  01682C  EC06  F0C5         	call	_wait_lcd_done	;wreg free
  5822                           
  5823                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5824  016830  0E01               	movlw	low (_V+1)
  5825  016832  6EE6               	movwf	postinc1,c
  5826  016834  0E02               	movlw	high (_V+1)
  5827  016836  6EE6               	movwf	postinc1,c
  5828  016838  0E00               	movlw	0
  5829  01683A  6EE6               	movwf	postinc1,c
  5830  01683C  0E01               	movlw	1
  5831  01683E  6EE6               	movwf	postinc1,c
  5832  016840  ECA8  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  5833                           
  5834                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5835  016844  0E01               	movlw	1
  5836  016846  6EE6               	movwf	postinc1,c
  5837  016848  0E02               	movlw	2
  5838  01684A  6EE6               	movwf	postinc1,c
  5839  01684C  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  5840  016850  0060  F0CB  FFE6   	movff	btemp,postinc1
  5841  016856  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5842  01685C  0E00               	movlw	0
  5843  01685E  6EE6               	movwf	postinc1,c
  5844  016860  0E02               	movlw	2
  5845  016862  6EE6               	movwf	postinc1,c
  5846  016864  EC57  F0C2         	call	_get_vterm_ptr	;wreg free
  5847  016868  0060  F0CB  FFE6   	movff	btemp,postinc1
  5848  01686E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5849  016874  0EA3               	movlw	low STR_30
  5850  016876  6EE6               	movwf	postinc1,c
  5851  016878  0EFF               	movlw	high STR_30
  5852  01687A  6EE6               	movwf	postinc1,c
  5853  01687C  0E01               	movlw	low (_V+1)
  5854  01687E  6EE6               	movwf	postinc1,c
  5855  016880  0E02               	movlw	high (_V+1)
  5856  016882  6EE6               	movwf	postinc1,c
  5857  016884  0E08               	movlw	8
  5858  016886  6EE6               	movwf	postinc1,c
  5859  016888  EC88  F0B6         	call	_sprintf	;wreg free
  5860                           
  5861                           ;mconfig.c: 130:  wait_lcd_done();
  5862  01688C  EC06  F0C5         	call	_wait_lcd_done	;wreg free
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5866  016890  0E01               	movlw	low (_V+1)
  5867  016892  6EE6               	movwf	postinc1,c
  5868  016894  0E02               	movlw	high (_V+1)
  5869  016896  6EE6               	movwf	postinc1,c
  5870  016898  0E00               	movlw	0
  5871  01689A  6EE6               	movwf	postinc1,c
  5872  01689C  0E02               	movlw	2
  5873  01689E  6EE6               	movwf	postinc1,c
  5874  0168A0  ECA8  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  5875                           
  5876                           ; BSR set to: 59
  5877                           ;mconfig.c: 132:  WaitMs(3000);
  5878  0168A4  0EB8               	movlw	184
  5879  0168A6  6EE6               	movwf	postinc1,c
  5880  0168A8  0E0B               	movlw	11
  5881  0168AA  6EE6               	movwf	postinc1,c
  5882  0168AC  EC8D  F0C1         	call	_WaitMs	;wreg free
  5883                           
  5884                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5885  0168B0  0012               	return		;funcret
  5886  0168B2                     __end_of_vterm_dump:
  5887                           	opt callstack 0
  5888                           
  5889 ;; *************** function _sprintf *****************
  5890 ;; Defined at:
  5891 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  s               2  [STACK] PTR unsigned char 
  5894 ;;		 -> D.lcd(216), D(218), V(187), 
  5895 ;;  fmt             2  [STACK] PTR const unsigned char 
  5896 ;;		 -> STR_41(3), STR_40(3), STR_39(19), STR_38(19), 
  5897 ;;		 -> STR_37(19), STR_36(19), STR_35(19), STR_34(19), 
  5898 ;;		 -> STR_33(24), STR_32(15), STR_31(15), STR_30(15), 
  5899 ;;		 -> STR_29(10), STR_28(10), STR_27(19), STR_26(19), 
  5900 ;;		 -> STR_20(19), STR_19(19), STR_18(19), STR_17(19), 
  5901 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  5902 ;;		 -> STR_12(19), STR_11(19), STR_10(19), STR_9(19), 
  5903 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  5904 ;;		 -> STR_2(15), STR_1(17), 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  f               6  [STACK] struct _IO_FILE
  5907 ;;  ap              2  [STACK] PTR void [1]
  5908 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5909 ;;  ret             2    0        int 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  2  [STACK] int 
  5912 ;; Registers used:
  5913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/5
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:   14
  5926 ;; This function calls:
  5927 ;;		_vfprintf
  5928 ;; This function is called by:
  5929 ;;		_main
  5930 ;;		_check_help
  5931 ;;		_vterm_dump
  5932 ;; This function uses a reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text24
  5936  016D10                     __ptext24:
  5937                           	opt callstack 0
  5938  016D10                     _sprintf:
  5939                           	opt callstack 0
  5940                           
  5941                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5942  016D10  0E08               	movlw	8
  5943  016D12  26E1               	addwf	fsr1l,f,c
  5944  016D14  0E00               	movlw	0
  5945  016D16  22E2               	addwfc	fsr1h,f,c
  5946                           
  5947                           ;incstack = 0
  5948  016D18  0EFE               	movlw	254
  5949  016D1A  6E3C               	movwf	(btemp+10)^0,c
  5950  016D1C  0EFF               	movlw	255
  5951  016D1E  6E3D               	movwf	(btemp+11)^0,c
  5952                           
  5953                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5954  016D20  0EF5               	movlw	245
  5955  016D22  24E1               	addwf	fsr1l,w,c
  5956  016D24  6E3A               	movwf	(btemp+8)^0,c
  5957  016D26  0EFF               	movlw	255
  5958  016D28  20E2               	addwfc	fsr1h,w,c
  5959  016D2A  6E3B               	movwf	(btemp+9)^0,c
  5960  016D2C  503C               	movf	(btemp+10)^0,w,c
  5961  016D2E  263A               	addwf	(btemp+8)^0,f,c
  5962  016D30  503D               	movf	(btemp+11)^0,w,c
  5963  016D32  223B               	addwfc	(btemp+9)^0,f,c
  5964                           
  5965                           ;stkvar	_ap @ sp[(-8)+6]
  5966  016D34  0EFF               	movlw	-1
  5967  016D36  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5968  016D3C  0EFE               	movlw	-2
  5969  016D3E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5970                           
  5971                           ;stkvar	_s @ sp[(-8)+-3]
  5972  016D44  0EF5               	movlw	-11
  5973  016D46  006F FF8C  F03C    	movff	plusw1,btemp+10
  5974  016D4C  0EF6               	movlw	-10
  5975  016D4E  006F FF8C  F03D    	movff	plusw1,btemp+11
  5976                           
  5977                           ;stkvar	_f @ sp[(-8)+0]
  5978  016D54  0EF9               	movlw	-7
  5979  016D56  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5980  016D5C  0EF8               	movlw	-8
  5981  016D5E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5982                           
  5983                           ;stkvar	_f @ sp[(-8)+0]
  5984  016D64  0EFA               	movlw	250
  5985  016D66  24E1               	addwf	fsr1l,w,c
  5986  016D68  6ED9               	movwf	fsr2l,c
  5987  016D6A  0EFF               	movlw	255
  5988  016D6C  20E2               	addwfc	fsr1h,w,c
  5989  016D6E  6EDA               	movwf	fsr2h,c
  5990  016D70  0E00               	movlw	0
  5991  016D72  6EDE               	movwf	postinc2,c
  5992  016D74  0E00               	movlw	0
  5993  016D76  6EDD               	movwf	postdec2,c
  5994                           
  5995                           ;stkvar	_f @ sp[(-8)+0]
  5996  016D78  0EFC               	movlw	252
  5997  016D7A  24E1               	addwf	fsr1l,w,c
  5998  016D7C  6ED9               	movwf	fsr2l,c
  5999  016D7E  0EFF               	movlw	255
  6000  016D80  20E2               	addwfc	fsr1h,w,c
  6001  016D82  6EDA               	movwf	fsr2h,c
  6002  016D84  0E00               	movlw	0
  6003  016D86  6EDE               	movwf	postinc2,c
  6004  016D88  0E00               	movlw	0
  6005  016D8A  6EDD               	movwf	postdec2,c
  6006                           
  6007                           ;stkvar	_ap @ sp[(-8)+6]
  6008  016D8C  0EFE               	movlw	254
  6009  016D8E  24E1               	addwf	fsr1l,w,c
  6010  016D90  6E32               	movwf	btemp^0,c
  6011  016D92  0EFF               	movlw	255
  6012  016D94  20E2               	addwfc	fsr1h,w,c
  6013  016D96  6E33               	movwf	(btemp+1)^0,c
  6014  016D98  0060  F0CB  FFE6   	movff	btemp,postinc1
  6015  016D9E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6016                           
  6017                           ;stkvar	_fmt @ sp[(-10)+-5]
  6018  016DA4  0EF1               	movlw	-15
  6019  016DA6  006F FF8F FFE6     	movff	plusw1,postinc1
  6020  016DAC  006F FF8F FFE6     	movff	plusw1,postinc1
  6021                           
  6022                           ;stkvar	_f @ sp[(-12)+0]
  6023  016DB2  0EF4               	movlw	244
  6024  016DB4  24E1               	addwf	fsr1l,w,c
  6025  016DB6  6E32               	movwf	btemp^0,c
  6026  016DB8  0EFF               	movlw	255
  6027  016DBA  20E2               	addwfc	fsr1h,w,c
  6028  016DBC  6E33               	movwf	(btemp+1)^0,c
  6029  016DBE  0060  F0CB  FFE6   	movff	btemp,postinc1
  6030  016DC4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6031  016DCA  ECFC  F0B9         	call	_vfprintf	;wreg free
  6032                           
  6033                           ;stkvar	_f @ sp[(-8)+0]
  6034  016DCE  0EFA               	movlw	250
  6035  016DD0  24E1               	addwf	fsr1l,w,c
  6036  016DD2  6ED9               	movwf	fsr2l,c
  6037  016DD4  0EFF               	movlw	255
  6038  016DD6  20E2               	addwfc	fsr1h,w,c
  6039  016DD8  6EDA               	movwf	fsr2h,c
  6040  016DDA  006F FF78  F03C    	movff	postinc2,btemp+10
  6041  016DE0  006F FF74  F03D    	movff	postdec2,btemp+11
  6042                           
  6043                           ;stkvar	_s @ sp[(-8)+-3]
  6044  016DE6  0EF5               	movlw	-11
  6045  016DE8  006F FF8C  F03A    	movff	plusw1,btemp+8
  6046  016DEE  0EF6               	movlw	-10
  6047  016DF0  006F FF8C  F03B    	movff	plusw1,btemp+9
  6048  016DF6  503C               	movf	(btemp+10)^0,w,c
  6049  016DF8  243A               	addwf	(btemp+8)^0,w,c
  6050  016DFA  6ED9               	movwf	fsr2l,c
  6051  016DFC  503D               	movf	(btemp+11)^0,w,c
  6052  016DFE  203B               	addwfc	(btemp+9)^0,w,c
  6053  016E00  6EDA               	movwf	fsr2h,c
  6054  016E02  0E00               	movlw	0
  6055  016E04  6EDF               	movwf	indf2,c
  6056                           
  6057                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6058  016E06  0EF8               	movlw	248
  6059  016E08  26E1               	addwf	fsr1l,f,c
  6060  016E0A  0EFF               	movlw	255
  6061  016E0C  22E2               	addwfc	fsr1h,f,c
  6062  016E0E  52E5               	movf	postdec1,f,c
  6063  016E10  50E7               	movf	indf1,w,c
  6064  016E12  5EE1               	subwf	fsr1l,f,c
  6065  016E14  0E00               	movlw	0
  6066  016E16  5AE2               	subwfb	fsr1h,f,c
  6067  016E18  0012               	return		;funcret
  6068  016E1A                     __end_of_sprintf:
  6069                           	opt callstack 0
  6070                           
  6071 ;; *************** function _get_vterm_ptr *****************
  6072 ;; Defined at:
  6073 ;;		line 116 in file "mconfig.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  line            1  [STACK] const unsigned char 
  6076 ;;  vterm           1  [STACK] const unsigned char 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;		None
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  2  [STACK] PTR unsigned char 
  6081 ;; Registers used:
  6082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/5
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6092 ;;Total ram usage:        0 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:    6
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_main
  6099 ;;		_check_help
  6100 ;;		_vterm_dump
  6101 ;; This function uses a reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text25
  6105  0184AE                     __ptext25:
  6106                           	opt callstack 0
  6107  0184AE                     _get_vterm_ptr:
  6108                           	opt callstack 24
  6109                           
  6110                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6111                           ;stkvar	_vterm @ sp[(0)+-2]
  6112                           
  6113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6114                           ;incstack = 0
  6115  0184AE  0EFE               	movlw	-2
  6116  0184B0  50E3               	movf	plusw1,w,c
  6117  0184B2  0B03               	andlw	3
  6118  0184B4  0D36               	mullw	54
  6119  0184B6  0E00               	movlw	low _D
  6120  0184B8  6E32               	movwf	btemp^0,c
  6121  0184BA  0E05               	movlw	high _D
  6122  0184BC  6E33               	movwf	(btemp+1)^0,c
  6123  0184BE  50F3               	movf	243,w,c
  6124  0184C0  2632               	addwf	btemp^0,f,c
  6125  0184C2  50F4               	movf	244,w,c
  6126  0184C4  2233               	addwfc	(btemp+1)^0,f,c
  6127                           
  6128                           ;stkvar	_line @ sp[(0)+-1]
  6129  0184C6  0EFF               	movlw	-1
  6130  0184C8  50E3               	movf	plusw1,w,c
  6131  0184CA  0B03               	andlw	3
  6132  0184CC  0D12               	mullw	18
  6133  0184CE  50F3               	movf	243,w,c
  6134  0184D0  2632               	addwf	btemp^0,f,c
  6135  0184D2  50F4               	movf	244,w,c
  6136  0184D4  2233               	addwfc	(btemp+1)^0,f,c
  6137                           
  6138                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6139  0184D6  52E5               	movf	postdec1,f,c
  6140  0184D8  52E5               	movf	postdec1,f,c
  6141  0184DA  0012               	return		;funcret
  6142  0184DC                     __end_of_get_vterm_ptr:
  6143                           	opt callstack 0
  6144                           
  6145 ;; *************** function _WaitMs *****************
  6146 ;; Defined at:
  6147 ;;		line 32 in file "timers.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  numMilliseco    2  [STACK] const unsigned short 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1  [STACK] void 
  6154 ;; Registers used:
  6155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/2
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6165 ;;Total ram usage:        0 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    7
  6168 ;; This function calls:
  6169 ;;		_StartTimer
  6170 ;;		_TimerDone
  6171 ;; This function is called by:
  6172 ;;		_main
  6173 ;;		_vterm_dump
  6174 ;; This function uses a reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text26
  6178  01831A                     __ptext26:
  6179                           	opt callstack 0
  6180  01831A                     _WaitMs:
  6181                           	opt callstack 21
  6182                           
  6183                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6184                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6185                           
  6186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6187                           ;incstack = 0
  6188  01831A  0EFE               	movlw	-2
  6189  01831C  006F FF8F FFE6     	movff	plusw1,postinc1
  6190  018322  006F FF8F FFE6     	movff	plusw1,postinc1
  6191  018328  0E00               	movlw	0
  6192  01832A  6EE6               	movwf	postinc1,c
  6193  01832C  EC53  F0C1         	call	_StartTimer	;wreg free
  6194                           
  6195                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6196  018330  D005               	goto	l8137
  6197  018332                     l1500:
  6198                           
  6199                           ;timers.c: 36:   __nop();
  6200  018332  F000               	nop	
  6201                           
  6202                           ;timers.c: 37:   __nop();
  6203  018334  F000               	nop	
  6204                           
  6205                           ;timers.c: 38:   __nop();
  6206  018336  F000               	nop	
  6207                           
  6208                           ;timers.c: 39:   __nop();
  6209  018338  F000               	nop	
  6210  01833A  0004               	clrwdt		;# 
  6211  01833C                     l8137:
  6212                           
  6213                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6214  01833C  0E00               	movlw	0
  6215  01833E  6EE6               	movwf	postinc1,c
  6216  018340  EC53  F0C4         	call	_TimerDone	;wreg free
  6217  018344  5032               	movf	btemp^0,w,c
  6218  018346  B4D8               	btfsc	status,2,c
  6219  018348  D7F4               	goto	l1500
  6220                           
  6221                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6222  01834A  52E5               	movf	postdec1,f,c
  6223  01834C  52E5               	movf	postdec1,f,c
  6224  01834E  0012               	return		;funcret
  6225  018350                     __end_of_WaitMs:
  6226                           	opt callstack 0
  6227                           
  6228 ;; *************** function _update_lcd *****************
  6229 ;; Defined at:
  6230 ;;		line 85 in file "mconfig.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  vterm           1  [STACK] unsigned char 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;		None
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  1  [STACK] unsigned char 
  6237 ;; Registers used:
  6238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/5
  6241 ;;		On exit  : 1/1
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6248 ;;Total ram usage:        0 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; Hardware stack levels required when called:   17
  6251 ;; This function calls:
  6252 ;;		_eaDogM_WriteStringAtPos
  6253 ;;		_wait_lcd_done
  6254 ;; This function is called by:
  6255 ;;		_main
  6256 ;;		_check_help
  6257 ;; This function uses a reentrant model
  6258 ;;
  6259                           
  6260                           	psect	text27
  6261  016C02                     __ptext27:
  6262                           	opt callstack 0
  6263  016C02                     _update_lcd:
  6264                           	opt callstack 13
  6265                           
  6266                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  6267                           ;stkvar	_vterm @ sp[(0)+-1]
  6268                           
  6269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6270                           ;incstack = 0
  6271  016C02  0EFF               	movlw	-1
  6272  016C04  006F FF8C  F032    	movff	plusw1,btemp
  6273  016C0A  0E03               	movlw	3
  6274  016C0C  1632               	andwf	btemp^0,f,c
  6275  016C0E  0EFF               	movlw	-1
  6276  016C10  0060  F0CB  FFE3   	movff	btemp,plusw1
  6277                           
  6278                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  6279  016C16  0105               	movlb	5	; () banked
  6280  016C18  A1D8               	btfss	(_D+216)& (0+255),0,b
  6281  016C1A  D004               	goto	l10337
  6282                           
  6283                           ; BSR set to: 5
  6284                           ;stkvar	_vterm @ sp[(0)+-1]
  6285  016C1C  0EFF               	movlw	-1
  6286  016C1E  50E3               	movf	plusw1,w,c
  6287  016C20  B4D8               	btfsc	status,2,c
  6288  016C22  D074               	goto	l1578
  6289  016C24                     l10337:
  6290                           
  6291                           ; BSR set to: 5
  6292                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  6293                           ;stkvar	_vterm @ sp[(0)+-1]
  6294  016C24  0EFF               	movlw	-1
  6295  016C26  50E3               	movf	plusw1,w,c
  6296  016C28  0D36               	mullw	54
  6297  016C2A  0E10               	movlw	low (_D+16)
  6298  016C2C  24F3               	addwf	243,w,c
  6299  016C2E  6ED9               	movwf	fsr2l,c
  6300  016C30  0E05               	movlw	high (_D+16)
  6301  016C32  20F4               	addwfc	prodh,w,c
  6302  016C34  6EDA               	movwf	fsr2h,c
  6303  016C36  0E00               	movlw	0
  6304  016C38  6EDF               	movwf	indf2,c
  6305                           
  6306                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  6307                           ;stkvar	_vterm @ sp[(0)+-1]
  6308  016C3A  0EFF               	movlw	-1
  6309  016C3C  50E3               	movf	plusw1,w,c
  6310  016C3E  0D36               	mullw	54
  6311  016C40  0E22               	movlw	low (_D+34)
  6312  016C42  24F3               	addwf	243,w,c
  6313  016C44  6ED9               	movwf	fsr2l,c
  6314  016C46  0E05               	movlw	high (_D+34)
  6315  016C48  20F4               	addwfc	prodh,w,c
  6316  016C4A  6EDA               	movwf	fsr2h,c
  6317  016C4C  0E00               	movlw	0
  6318  016C4E  6EDF               	movwf	indf2,c
  6319                           
  6320                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  6321                           ;stkvar	_vterm @ sp[(0)+-1]
  6322  016C50  0EFF               	movlw	-1
  6323  016C52  50E3               	movf	plusw1,w,c
  6324  016C54  0D36               	mullw	54
  6325  016C56  0E34               	movlw	low (_D+52)
  6326  016C58  24F3               	addwf	243,w,c
  6327  016C5A  6ED9               	movwf	fsr2l,c
  6328  016C5C  0E05               	movlw	high (_D+52)
  6329  016C5E  20F4               	addwfc	prodh,w,c
  6330  016C60  6EDA               	movwf	fsr2h,c
  6331  016C62  0E00               	movlw	0
  6332  016C64  6EDF               	movwf	indf2,c
  6333                           
  6334                           ; BSR set to: 5
  6335                           ;mconfig.c: 95:  wait_lcd_done();
  6336  016C66  EC06  F0C5         	call	_wait_lcd_done	;wreg free
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  6340                           ;stkvar	_vterm @ sp[(0)+-1]
  6341  016C6A  0EFF               	movlw	-1
  6342  016C6C  50E3               	movf	plusw1,w,c
  6343  016C6E  0D36               	mullw	54
  6344  016C70  0E00               	movlw	low _D
  6345  016C72  6E3C               	movwf	(btemp+10)^0,c
  6346  016C74  0E05               	movlw	high _D
  6347  016C76  6E3D               	movwf	(btemp+11)^0,c
  6348  016C78  50F3               	movf	243,w,c
  6349  016C7A  263C               	addwf	(btemp+10)^0,f,c
  6350  016C7C  50F4               	movf	244,w,c
  6351  016C7E  223D               	addwfc	(btemp+11)^0,f,c
  6352  016C80  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6353  016C86  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6354  016C8C  0E00               	movlw	0
  6355  016C8E  6EE6               	movwf	postinc1,c
  6356  016C90  0E00               	movlw	0
  6357  016C92  6EE6               	movwf	postinc1,c
  6358  016C94  ECA8  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  6359                           
  6360                           ; BSR set to: 59
  6361                           ;mconfig.c: 97:  wait_lcd_done();
  6362  016C98  EC06  F0C5         	call	_wait_lcd_done	;wreg free
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  6366                           ;stkvar	_vterm @ sp[(0)+-1]
  6367  016C9C  0EFF               	movlw	-1
  6368  016C9E  50E3               	movf	plusw1,w,c
  6369  016CA0  0D36               	mullw	54
  6370  016CA2  0E00               	movlw	low _D
  6371  016CA4  6E3C               	movwf	(btemp+10)^0,c
  6372  016CA6  0E05               	movlw	high _D
  6373  016CA8  6E3D               	movwf	(btemp+11)^0,c
  6374  016CAA  0E12               	movlw	18
  6375  016CAC  263C               	addwf	(btemp+10)^0,f,c
  6376  016CAE  0E00               	movlw	0
  6377  016CB0  223D               	addwfc	(btemp+11)^0,f,c
  6378  016CB2  50F3               	movf	243,w,c
  6379  016CB4  263C               	addwf	(btemp+10)^0,f,c
  6380  016CB6  50F4               	movf	244,w,c
  6381  016CB8  223D               	addwfc	(btemp+11)^0,f,c
  6382  016CBA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6383  016CC0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6384  016CC6  0E00               	movlw	0
  6385  016CC8  6EE6               	movwf	postinc1,c
  6386  016CCA  0E01               	movlw	1
  6387  016CCC  6EE6               	movwf	postinc1,c
  6388  016CCE  ECA8  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  6389                           
  6390                           ; BSR set to: 59
  6391                           ;mconfig.c: 99:  wait_lcd_done();
  6392  016CD2  EC06  F0C5         	call	_wait_lcd_done	;wreg free
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  6396                           ;stkvar	_vterm @ sp[(0)+-1]
  6397  016CD6  0EFF               	movlw	-1
  6398  016CD8  50E3               	movf	plusw1,w,c
  6399  016CDA  0D36               	mullw	54
  6400  016CDC  0E00               	movlw	low _D
  6401  016CDE  6E3C               	movwf	(btemp+10)^0,c
  6402  016CE0  0E05               	movlw	high _D
  6403  016CE2  6E3D               	movwf	(btemp+11)^0,c
  6404  016CE4  0E24               	movlw	36
  6405  016CE6  263C               	addwf	(btemp+10)^0,f,c
  6406  016CE8  0E00               	movlw	0
  6407  016CEA  223D               	addwfc	(btemp+11)^0,f,c
  6408  016CEC  50F3               	movf	243,w,c
  6409  016CEE  263C               	addwf	(btemp+10)^0,f,c
  6410  016CF0  50F4               	movf	244,w,c
  6411  016CF2  223D               	addwfc	(btemp+11)^0,f,c
  6412  016CF4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6413  016CFA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6414  016D00  0E00               	movlw	0
  6415  016D02  6EE6               	movwf	postinc1,c
  6416  016D04  0E02               	movlw	2
  6417  016D06  6EE6               	movwf	postinc1,c
  6418  016D08  ECA8  F0C1         	call	_eaDogM_WriteStringAtPos	;wreg free
  6419  016D0C                     l1578:
  6420                           
  6421                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6422  016D0C  52E5               	movf	postdec1,f,c
  6423  016D0E  0012               	return		;funcret
  6424  016D10                     __end_of_update_lcd:
  6425                           	opt callstack 0
  6426                           
  6427 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6428 ;; Defined at:
  6429 ;;		line 252 in file "eadog.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  r               1  [STACK] const unsigned char 
  6432 ;;  c               1  [STACK] const unsigned char 
  6433 ;;  strPtr          2  [STACK] PTR unsigned char 
  6434 ;;		 -> D.lcd(216), D(218), V(187), 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1  [STACK] void 
  6439 ;; Registers used:
  6440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6441 ;; Tracked objects:
  6442 ;;		On entry : 3F/0
  6443 ;;		On exit  : 3F/3B
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6450 ;;Total ram usage:        0 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:   16
  6453 ;; This function calls:
  6454 ;;		_eaDogM_WriteString
  6455 ;;		_send_lcd_cmd_dma
  6456 ;; This function is called by:
  6457 ;;		_update_lcd
  6458 ;;		_vterm_dump
  6459 ;; This function uses a reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text28
  6463  018350                     __ptext28:
  6464                           	opt callstack 0
  6465  018350                     _eaDogM_WriteStringAtPos:
  6466                           	opt callstack 13
  6467                           
  6468                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6469                           ;stkvar	_c @ sp[(0)+-2]
  6470                           
  6471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6472                           ;incstack = 0
  6473  018350  0EFE               	movlw	-2
  6474  018352  006F FF8C  F03D    	movff	plusw1,btemp+11
  6475                           
  6476                           ;stkvar	_r @ sp[(0)+-1]
  6477  018358  0EFF               	movlw	-1
  6478  01835A  50E3               	movf	plusw1,w,c
  6479  01835C  0D10               	mullw	16
  6480  01835E  50F3               	movf	243,w,c
  6481  018360  243D               	addwf	(btemp+11)^0,w,c
  6482  018362  0F80               	addlw	128
  6483  018364  6EE6               	movwf	postinc1,c
  6484  018366  ECAC  F0BF         	call	_send_lcd_cmd_dma	;wreg free
  6485                           
  6486                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  6487                           ;stkvar	_strPtr @ sp[(0)+-4]
  6488  01836A  0EFC               	movlw	-4
  6489  01836C  006F FF8F FFE6     	movff	plusw1,postinc1
  6490  018372  006F FF8F FFE6     	movff	plusw1,postinc1
  6491  018378  EC50  F0BA         	call	_eaDogM_WriteString	;wreg free
  6492                           
  6493                           ; BSR set to: 59
  6494                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  6495  01837C  52E5               	movf	postdec1,f,c
  6496  01837E  52E5               	movf	postdec1,f,c
  6497  018380  52E5               	movf	postdec1,f,c
  6498  018382  52E5               	movf	postdec1,f,c
  6499  018384  0012               	return		;funcret
  6500  018386                     __end_of_eaDogM_WriteStringAtPos:
  6501                           	opt callstack 0
  6502                           
  6503 ;; *************** function _send_lcd_cmd_dma *****************
  6504 ;; Defined at:
  6505 ;;		line 205 in file "eadog.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  strPtr          1  [STACK] unsigned char 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1  [STACK] void 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/3D
  6516 ;;		On exit  : 3F/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6523 ;;Total ram usage:        0 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:   15
  6526 ;; This function calls:
  6527 ;;		_printf
  6528 ;;		_ringBufS_flush
  6529 ;;		_start_lcd
  6530 ;;		_wait_lcd_done
  6531 ;;		_wait_lcd_set
  6532 ;; This function is called by:
  6533 ;;		_eaDogM_WriteCommand
  6534 ;;		_eaDogM_WriteStringAtPos
  6535 ;; This function uses a reentrant model
  6536 ;;
  6537                           
  6538                           	psect	text29
  6539  017F58                     __ptext29:
  6540                           	opt callstack 0
  6541  017F58                     _send_lcd_cmd_dma:
  6542                           	opt callstack 13
  6543                           
  6544                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6545                           
  6546                           ; BSR set to: 59
  6547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6548                           ;incstack = 0
  6549  017F58  ECE8  F0C5         	call	_wait_lcd_set	;wreg free
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6553  017F5C  0E00               	movlw	0
  6554  017F5E  6EE6               	movwf	postinc1,c
  6555  017F60  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6556  017F66  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6557  017F6C  EC40  F0BB         	call	_ringBufS_flush	;wreg free
  6558  017F70  92BC               	bcf	188,1,c	;volatile
  6559  017F72  94BC               	bcf	188,2,c	;volatile
  6560                           
  6561                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  6562  017F74  013B               	movlb	59	; () banked
  6563  017F76  9FFC               	bcf	252,7,b	;volatile
  6564                           
  6565                           ; BSR set to: 59
  6566                           ;eadog.c: 214:  DMA1SSZ = 1;
  6567  017F78  0E00               	movlw	0
  6568  017F7A  6FF8               	movwf	248,b	;volatile
  6569  017F7C  0E01               	movlw	1
  6570  017F7E  6FF7               	movwf	247,b	;volatile
  6571                           
  6572                           ; BSR set to: 59
  6573                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  6574  017F80  8FFC               	bsf	252,7,b	;volatile
  6575                           
  6576                           ; BSR set to: 59
  6577                           ;eadog.c: 216:  printf("%c", strPtr);
  6578                           ;stkvar	_strPtr @ sp[(0)+-1]
  6579  017F82  0EFF               	movlw	-1
  6580  017F84  50E3               	movf	plusw1,w,c
  6581  017F86  6EE6               	movwf	postinc1,c
  6582  017F88  0E00               	movlw	0
  6583  017F8A  6EE6               	movwf	postinc1,c
  6584  017F8C  0EF9               	movlw	low STR_22
  6585  017F8E  6EE6               	movwf	postinc1,c
  6586  017F90  0EFF               	movlw	high STR_22
  6587  017F92  6EE6               	movwf	postinc1,c
  6588  017F94  0E04               	movlw	4
  6589  017F96  6EE6               	movwf	postinc1,c
  6590  017F98  ECC4  F0BE         	call	_printf	;wreg free
  6591                           
  6592                           ;eadog.c: 217:  start_lcd();
  6593  017F9C  ECEB  F0C5         	call	_start_lcd	;wreg free
  6594                           
  6595                           ; BSR set to: 59
  6596                           ;eadog.c: 218:  wait_lcd_done();
  6597  017FA0  EC06  F0C5         	call	_wait_lcd_done	;wreg free
  6598                           
  6599                           ; BSR set to: 0
  6600  017FA4  82BC               	bsf	188,1,c	;volatile
  6601                           
  6602                           ; BSR set to: 0
  6603                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6604  017FA6  52E5               	movf	postdec1,f,c
  6605  017FA8  0012               	return		;funcret
  6606  017FAA                     __end_of_send_lcd_cmd_dma:
  6607                           	opt callstack 0
  6608                           
  6609 ;; *************** function _wait_lcd_done *****************
  6610 ;; Defined at:
  6611 ;;		line 141 in file "eadog.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;		None
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;		None
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1  [STACK] void 
  6618 ;; Registers used:
  6619 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/2
  6622 ;;		On exit  : 3F/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6629 ;;Total ram usage:        0 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; Hardware stack levels required when called:    7
  6632 ;; This function calls:
  6633 ;;		_wdtdelay
  6634 ;; This function is called by:
  6635 ;;		_send_lcd_cmd_dma
  6636 ;;		_update_lcd
  6637 ;;		_vterm_dump
  6638 ;; This function uses a reentrant model
  6639 ;;
  6640                           
  6641                           	psect	text30
  6642  018A0C                     __ptext30:
  6643                           	opt callstack 0
  6644  018A0C                     _wait_lcd_done:
  6645                           	opt callstack 22
  6646                           
  6647                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6648                           
  6649                           ; BSR set to: 0
  6650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6651                           ;incstack = 0
  6652  018A0C  0100               	movlb	0	; () banked
  6653  018A0E  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  6654  018A10  D7FD               	goto	_wait_lcd_done
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;eadog.c: 144:  wdtdelay(50);
  6658  018A12  0E32               	movlw	50
  6659  018A14  6EE6               	movwf	postinc1,c
  6660  018A16  0E00               	movlw	0
  6661  018A18  6EE6               	movwf	postinc1,c
  6662  018A1A  0E00               	movlw	0
  6663  018A1C  6EE6               	movwf	postinc1,c
  6664  018A1E  0E00               	movlw	0
  6665  018A20  6EE6               	movwf	postinc1,c
  6666  018A22  EC52  F0BF         	call	_wdtdelay	;wreg free
  6667                           
  6668                           ; BSR set to: 0
  6669                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6670  018A26  0012               	return		;funcret
  6671  018A28                     __end_of_wait_lcd_done:
  6672                           	opt callstack 0
  6673                           
  6674 ;; *************** function _wdtdelay *****************
  6675 ;; Defined at:
  6676 ;;		line 22 in file "eadog.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  delay           4  [STACK] const unsigned long 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1  [STACK] void 
  6683 ;; Registers used:
  6684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 3F/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6694 ;;Total ram usage:        0 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    6
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_init_display
  6701 ;;		_send_lcd_cmd
  6702 ;;		_send_lcd_cmd_long
  6703 ;;		_wait_lcd_done
  6704 ;; This function uses a reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text31
  6708  017EA4                     __ptext31:
  6709                           	opt callstack 0
  6710  017EA4                     _wdtdelay:
  6711                           	opt callstack 22
  6712                           
  6713                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6714                           
  6715                           ; BSR set to: 0
  6716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6717                           ;incstack = 0
  6718  017EA4  0100               	movlb	0	; () banked
  6719  017EA6  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6720  017EA8  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6721  017EAA  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6722  017EAC  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6723  017EAE                     l1345:
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;eadog.c: 27:   __nop();
  6727  017EAE  F000               	nop	
  6728  017EB0  0004               	clrwdt		;# 
  6729                           
  6730                           ;eadog.c: 29:  };
  6731  017EB2  0E01               	movlw	1
  6732  017EB4  0100               	movlb	0	; () banked
  6733  017EB6  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6734  017EB8  0E00               	movlw	0
  6735  017EBA  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6736  017EBC  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6737  017EBE  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;stkvar	_delay @ sp[(0)+-4]
  6741  017EC0  0EFC               	movlw	-4
  6742  017EC2  006F FF8C  F032    	movff	plusw1,btemp
  6743  017EC8  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6744  017ECA  5C32               	subwf	btemp^0,w,c
  6745  017ECC  0EFD               	movlw	-3
  6746  017ECE  006F FF8C  F032    	movff	plusw1,btemp
  6747  017ED4  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6748  017ED6  5832               	subwfb	btemp^0,w,c
  6749  017ED8  0EFE               	movlw	-2
  6750  017EDA  006F FF8C  F032    	movff	plusw1,btemp
  6751  017EE0  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6752  017EE2  5832               	subwfb	btemp^0,w,c
  6753  017EE4  0EFF               	movlw	-1
  6754  017EE6  006F FF8C  F032    	movff	plusw1,btemp
  6755  017EEC  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6756  017EEE  5832               	subwfb	btemp^0,w,c
  6757  017EF0  B0D8               	btfsc	status,0,c
  6758  017EF2  D7DD               	goto	l1345
  6759                           
  6760                           ; BSR set to: 0
  6761                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6762  017EF4  52E5               	movf	postdec1,f,c
  6763  017EF6  52E5               	movf	postdec1,f,c
  6764  017EF8  52E5               	movf	postdec1,f,c
  6765  017EFA  52E5               	movf	postdec1,f,c
  6766  017EFC  0012               	return		;funcret
  6767  017EFE                     __end_of_wdtdelay:
  6768                           	opt callstack 0
  6769                           
  6770 ;; *************** function _eaDogM_WriteString *****************
  6771 ;; Defined at:
  6772 ;;		line 184 in file "eadog.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  strPtr          2  [STACK] PTR unsigned char 
  6775 ;;		 -> D.lcd(216), D(218), V(187), 
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;		None
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  1  [STACK] void 
  6780 ;; Registers used:
  6781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6782 ;; Tracked objects:
  6783 ;;		On entry : 3F/0
  6784 ;;		On exit  : 3F/3B
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6791 ;;Total ram usage:        0 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:   15
  6794 ;; This function calls:
  6795 ;;		_printf
  6796 ;;		_ringBufS_flush
  6797 ;;		_start_lcd
  6798 ;;		_strlen
  6799 ;;		_wait_lcd_set
  6800 ;; This function is called by:
  6801 ;;		_eaDogM_WriteStringAtPos
  6802 ;; This function uses a reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text32
  6806  0174A0                     __ptext32:
  6807                           	opt callstack 0
  6808  0174A0                     _eaDogM_WriteString:
  6809                           	opt callstack 13
  6810                           
  6811                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6812                           
  6813                           ; BSR set to: 0
  6814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6815                           ;incstack = 0
  6816  0174A0  ECE8  F0C5         	call	_wait_lcd_set	;wreg free
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6820  0174A4  0E00               	movlw	0
  6821  0174A6  6EE6               	movwf	postinc1,c
  6822  0174A8  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6823  0174AE  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6824  0174B4  EC40  F0BB         	call	_ringBufS_flush	;wreg free
  6825  0174B8  94BC               	bcf	188,2,c	;volatile
  6826                           
  6827                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6828                           ;stkvar	_strPtr @ sp[(0)+-2]
  6829  0174BA  0EFE               	movlw	-2
  6830  0174BC  006F FF8F FFE6     	movff	plusw1,postinc1
  6831  0174C2  006F FF8F FFE6     	movff	plusw1,postinc1
  6832  0174C8  ECA3  F0BA         	call	_strlen	;wreg free
  6833  0174CC  5033               	movf	(btemp+1)^0,w,c
  6834  0174CE  E104               	bnz	u10370
  6835  0174D0  0E41               	movlw	65
  6836  0174D2  5C32               	subwf	btemp^0,w,c
  6837  0174D4  A0D8               	btfss	status,0,c
  6838  0174D6  D010               	goto	l10303
  6839  0174D8                     u10370:
  6840                           
  6841                           ;stkvar	_strPtr @ sp[(0)+-2]
  6842  0174D8  0EFE               	movlw	-2
  6843  0174DA  006F FF8C  F03C    	movff	plusw1,btemp+10
  6844  0174E0  0EFF               	movlw	-1
  6845  0174E2  006F FF8C  F03D    	movff	plusw1,btemp+11
  6846  0174E8  0E40               	movlw	64
  6847  0174EA  243C               	addwf	(btemp+10)^0,w,c
  6848  0174EC  6ED9               	movwf	fsr2l,c
  6849  0174EE  0E00               	movlw	0
  6850  0174F0  203D               	addwfc	(btemp+11)^0,w,c
  6851  0174F2  6EDA               	movwf	fsr2h,c
  6852  0174F4  0E00               	movlw	0
  6853  0174F6  6EDF               	movwf	indf2,c
  6854  0174F8                     l10303:
  6855                           
  6856                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6857  0174F8  013B               	movlb	59	; () banked
  6858  0174FA  9FFC               	bcf	252,7,b	;volatile
  6859                           
  6860                           ; BSR set to: 59
  6861                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6862                           ;stkvar	_strPtr @ sp[(0)+-2]
  6863  0174FC  0EFE               	movlw	-2
  6864  0174FE  006F FF8F FFE6     	movff	plusw1,postinc1
  6865  017504  006F FF8F FFE6     	movff	plusw1,postinc1
  6866  01750A  ECA3  F0BA         	call	_strlen	;wreg free
  6867  01750E  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6868  017514  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6869                           
  6870                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6871  01751A  013B               	movlb	59	; () banked
  6872  01751C  8FFC               	bsf	252,7,b	;volatile
  6873                           
  6874                           ; BSR set to: 59
  6875                           ;eadog.c: 195:  printf("%s", strPtr);
  6876                           ;stkvar	_strPtr @ sp[(0)+-2]
  6877  01751E  0EFE               	movlw	-2
  6878  017520  006F FF8F FFE6     	movff	plusw1,postinc1
  6879  017526  006F FF8F FFE6     	movff	plusw1,postinc1
  6880  01752C  0EFC               	movlw	low STR_21
  6881  01752E  6EE6               	movwf	postinc1,c
  6882  017530  0EFF               	movlw	high STR_21
  6883  017532  6EE6               	movwf	postinc1,c
  6884  017534  0E04               	movlw	4
  6885  017536  6EE6               	movwf	postinc1,c
  6886  017538  ECC4  F0BE         	call	_printf	;wreg free
  6887                           
  6888                           ;eadog.c: 196:  start_lcd();
  6889  01753C  ECEB  F0C5         	call	_start_lcd	;wreg free
  6890                           
  6891                           ; BSR set to: 59
  6892                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6893  017540  52E5               	movf	postdec1,f,c
  6894  017542  52E5               	movf	postdec1,f,c
  6895  017544  0012               	return		;funcret
  6896  017546                     __end_of_eaDogM_WriteString:
  6897                           	opt callstack 0
  6898                           
  6899 ;; *************** function _wait_lcd_set *****************
  6900 ;; Defined at:
  6901 ;;		line 131 in file "eadog.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;		None
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;		None
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  1  [STACK] void 
  6908 ;; Registers used:
  6909 ;;		None
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/3D
  6912 ;;		On exit  : 3F/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6919 ;;Total ram usage:        0 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:    6
  6922 ;; This function calls:
  6923 ;;		Nothing
  6924 ;; This function is called by:
  6925 ;;		_eaDogM_WriteString
  6926 ;;		_send_lcd_cmd_dma
  6927 ;; This function uses a reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text33
  6931  018BD0                     __ptext33:
  6932                           	opt callstack 0
  6933  018BD0                     _wait_lcd_set:
  6934                           	opt callstack 21
  6935                           
  6936                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6937                           
  6938                           ; BSR set to: 59
  6939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6940                           ;incstack = 0
  6941  018BD0  0100               	movlb	0	; () banked
  6942  018BD2  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6943                           
  6944                           ; BSR set to: 0
  6945                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6946  018BD4  0012               	return		;funcret
  6947  018BD6                     __end_of_wait_lcd_set:
  6948                           	opt callstack 0
  6949                           
  6950 ;; *************** function _start_lcd *****************
  6951 ;; Defined at:
  6952 ;;		line 126 in file "eadog.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;		None
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;		None
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  1  [STACK] void 
  6959 ;; Registers used:
  6960 ;;		None
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/3B
  6963 ;;		On exit  : 3F/3B
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6970 ;;Total ram usage:        0 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:    6
  6973 ;; This function calls:
  6974 ;;		Nothing
  6975 ;; This function is called by:
  6976 ;;		_eaDogM_WriteString
  6977 ;;		_send_lcd_cmd_dma
  6978 ;; This function uses a reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text34
  6982  018BD6                     __ptext34:
  6983                           	opt callstack 0
  6984  018BD6                     _start_lcd:
  6985                           	opt callstack 21
  6986                           
  6987                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6988                           
  6989                           ; BSR set to: 0
  6990                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6991                           ;incstack = 0
  6992  018BD6  013B               	movlb	59	; () banked
  6993  018BD8  8DFC               	bsf	252,6,b	;volatile
  6994                           
  6995                           ; BSR set to: 59
  6996                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6997  018BDA  0012               	return		;funcret
  6998  018BDC                     __end_of_start_lcd:
  6999                           	opt callstack 0
  7000                           
  7001 ;; *************** function _ringBufS_flush *****************
  7002 ;; Defined at:
  7003 ;;		line 76 in file "ringbufs.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7006 ;;		 -> ring_buf1(67), 
  7007 ;;  clearBuffer     1  [STACK] const char 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1  [STACK] void 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7014 ;; Tracked objects:
  7015 ;;		On entry : 3F/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7023 ;;Total ram usage:        0 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    7
  7026 ;; This function calls:
  7027 ;;		_memset
  7028 ;; This function is called by:
  7029 ;;		_eaDogM_WriteString
  7030 ;;		_send_lcd_cmd_dma
  7031 ;; This function uses a reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text35
  7035  017680                     __ptext35:
  7036                           	opt callstack 0
  7037  017680                     _ringBufS_flush:
  7038                           	opt callstack 20
  7039                           
  7040                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7041                           ;stkvar	__this @ sp[(0)+-2]
  7042                           
  7043                           ; BSR set to: 59
  7044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7045                           ;incstack = 0
  7046  017680  0EFE               	movlw	-2
  7047  017682  006F FF8C  F03C    	movff	plusw1,btemp+10
  7048  017688  0EFF               	movlw	-1
  7049  01768A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7050  017690  0E42               	movlw	66
  7051  017692  243C               	addwf	(btemp+10)^0,w,c
  7052  017694  6ED9               	movwf	fsr2l,c
  7053  017696  0E00               	movlw	0
  7054  017698  203D               	addwfc	(btemp+11)^0,w,c
  7055  01769A  6EDA               	movwf	fsr2h,c
  7056  01769C  0E00               	movlw	0
  7057  01769E  6EDF               	movwf	indf2,c
  7058                           
  7059                           ;ringbufs.c: 79:  _this->head = 0;
  7060                           ;stkvar	__this @ sp[(0)+-2]
  7061  0176A0  0EFE               	movlw	-2
  7062  0176A2  006F FF8C  F03C    	movff	plusw1,btemp+10
  7063  0176A8  0EFF               	movlw	-1
  7064  0176AA  006F FF8C  F03D    	movff	plusw1,btemp+11
  7065  0176B0  0E40               	movlw	64
  7066  0176B2  243C               	addwf	(btemp+10)^0,w,c
  7067  0176B4  6ED9               	movwf	fsr2l,c
  7068  0176B6  0E00               	movlw	0
  7069  0176B8  203D               	addwfc	(btemp+11)^0,w,c
  7070  0176BA  6EDA               	movwf	fsr2h,c
  7071  0176BC  0E00               	movlw	0
  7072  0176BE  6EDF               	movwf	indf2,c
  7073                           
  7074                           ;ringbufs.c: 80:  _this->tail = 0;
  7075                           ;stkvar	__this @ sp[(0)+-2]
  7076  0176C0  0EFE               	movlw	-2
  7077  0176C2  006F FF8C  F03C    	movff	plusw1,btemp+10
  7078  0176C8  0EFF               	movlw	-1
  7079  0176CA  006F FF8C  F03D    	movff	plusw1,btemp+11
  7080  0176D0  0E41               	movlw	65
  7081  0176D2  243C               	addwf	(btemp+10)^0,w,c
  7082  0176D4  6ED9               	movwf	fsr2l,c
  7083  0176D6  0E00               	movlw	0
  7084  0176D8  203D               	addwfc	(btemp+11)^0,w,c
  7085  0176DA  6EDA               	movwf	fsr2h,c
  7086  0176DC  0E00               	movlw	0
  7087  0176DE  6EDF               	movwf	indf2,c
  7088                           
  7089                           ;ringbufs.c: 81:  if (clearBuffer) {
  7090                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7091  0176E0  0EFD               	movlw	-3
  7092  0176E2  50E3               	movf	plusw1,w,c
  7093  0176E4  B4D8               	btfsc	status,2,c
  7094  0176E6  D011               	goto	l1485
  7095                           
  7096                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7097  0176E8  0E40               	movlw	64
  7098  0176EA  6EE6               	movwf	postinc1,c
  7099  0176EC  0E00               	movlw	0
  7100  0176EE  6EE6               	movwf	postinc1,c
  7101  0176F0  0E00               	movlw	0
  7102  0176F2  6EE6               	movwf	postinc1,c
  7103  0176F4  0E00               	movlw	0
  7104  0176F6  6EE6               	movwf	postinc1,c
  7105                           
  7106                           ;stkvar	__this @ sp[(-4)+-2]
  7107  0176F8  0EFA               	movlw	-6
  7108  0176FA  006F FF8F FFE6     	movff	plusw1,postinc1
  7109  017700  006F FF8F FFE6     	movff	plusw1,postinc1
  7110  017706  EC97  F0A4         	call	_memset	;wreg free
  7111  01770A                     l1485:
  7112                           
  7113                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7114  01770A  52E5               	movf	postdec1,f,c
  7115  01770C  52E5               	movf	postdec1,f,c
  7116  01770E  52E5               	movf	postdec1,f,c
  7117  017710  0012               	return		;funcret
  7118  017712                     __end_of_ringBufS_flush:
  7119                           	opt callstack 0
  7120                           
  7121 ;; *************** function _memset *****************
  7122 ;; Defined at:
  7123 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  dest            2  [STACK] PTR void 
  7126 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7127 ;;  c               2  [STACK] int 
  7128 ;;  n               2  [STACK] unsigned int 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;  s               2  [STACK] PTR unsigned char 
  7131 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7132 ;;  k               2  [STACK] unsigned int 
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  2  [STACK] PTR void 
  7135 ;; Registers used:
  7136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7146 ;;Total ram usage:        0 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    6
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_ringBufS_init
  7153 ;;		_ringBufS_flush
  7154 ;; This function uses a reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text36
  7158  01492E                     __ptext36:
  7159                           	opt callstack 0
  7160  01492E                     _memset:
  7161                           	opt callstack 0
  7162                           
  7163                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7164  01492E  52E6               	movf	postinc1,f,c
  7165  014930  52E6               	movf	postinc1,f,c
  7166  014932  52E6               	movf	postinc1,f,c
  7167  014934  52E6               	movf	postinc1,f,c
  7168                           
  7169                           ;stkvar	_dest @ sp[(-4)+-2]
  7170                           
  7171                           ;incstack = 0
  7172  014936  0EFA               	movlw	-6
  7173  014938  006F FF8C  F03C    	movff	plusw1,btemp+10
  7174  01493E  0EFB               	movlw	-5
  7175  014940  006F FF8C  F03D    	movff	plusw1,btemp+11
  7176                           
  7177                           ;stkvar	_s @ sp[(-4)+0]
  7178  014946  0EFD               	movlw	-3
  7179  014948  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7180  01494E  0EFC               	movlw	-4
  7181  014950  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7182                           
  7183                           ;stkvar	_n @ sp[(-4)+-6]
  7184  014956  0EF6               	movlw	-10
  7185  014958  006F FF8C  F032    	movff	plusw1,btemp
  7186  01495E  0EF7               	movlw	-9
  7187  014960  50E3               	movf	plusw1,w,c
  7188  014962  1032               	iorwf	btemp^0,w,c
  7189  014964  B4D8               	btfsc	status,2,c
  7190  014966  D154               	goto	u10340
  7191                           
  7192                           ;stkvar	_c @ sp[(-4)+-4]
  7193                           ;stkvar	_s @ sp[(-4)+0]
  7194  014968  0EFC               	movlw	-4
  7195  01496A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7196  014970  0EFD               	movlw	-3
  7197  014972  006F FF8F FFDA     	movff	plusw1,fsr2h
  7198  014978  0EF8               	movlw	-8
  7199  01497A  006F FF8F FFDF     	movff	plusw1,indf2
  7200                           
  7201                           ;stkvar	_c @ sp[(-4)+-4]
  7202                           ;stkvar	_n @ sp[(-4)+-6]
  7203                           ;stkvar	_s @ sp[(-4)+0]
  7204  014980  0EFC               	movlw	-4
  7205  014982  006F FF8C  F03C    	movff	plusw1,btemp+10
  7206  014988  0EFD               	movlw	-3
  7207  01498A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7208  014990  0EF6               	movlw	-10
  7209  014992  50E3               	movf	plusw1,w,c
  7210  014994  263C               	addwf	(btemp+10)^0,f,c
  7211  014996  0EF7               	movlw	-9
  7212  014998  50E3               	movf	plusw1,w,c
  7213  01499A  223D               	addwfc	(btemp+11)^0,f,c
  7214  01499C  0EFF               	movlw	255
  7215  01499E  243C               	addwf	(btemp+10)^0,w,c
  7216  0149A0  6ED9               	movwf	fsr2l,c
  7217  0149A2  0EFF               	movlw	255
  7218  0149A4  203D               	addwfc	(btemp+11)^0,w,c
  7219  0149A6  6EDA               	movwf	fsr2h,c
  7220  0149A8  0EF8               	movlw	-8
  7221  0149AA  006F FF8F FFDF     	movff	plusw1,indf2
  7222                           
  7223                           ;stkvar	_n @ sp[(-4)+-6]
  7224  0149B0  0EF7               	movlw	-9
  7225  0149B2  50E3               	movf	plusw1,w,c
  7226  0149B4  E108               	bnz	l10219
  7227  0149B6  0EF6               	movlw	-10
  7228  0149B8  006F FF8C  F032    	movff	plusw1,btemp
  7229  0149BE  0E03               	movlw	3
  7230  0149C0  5E32               	subwf	btemp^0,f,c
  7231  0149C2  A0D8               	btfss	status,0,c
  7232  0149C4  D125               	goto	u10340
  7233  0149C6                     l10219:
  7234                           
  7235                           ;stkvar	_c @ sp[(-4)+-4]
  7236                           ;stkvar	_s @ sp[(-4)+0]
  7237  0149C6  0EFC               	movlw	-4
  7238  0149C8  006F FF8C  F03C    	movff	plusw1,btemp+10
  7239  0149CE  0EFD               	movlw	-3
  7240  0149D0  006F FF8C  F03D    	movff	plusw1,btemp+11
  7241  0149D6  0E01               	movlw	1
  7242  0149D8  243C               	addwf	(btemp+10)^0,w,c
  7243  0149DA  6ED9               	movwf	fsr2l,c
  7244  0149DC  0E00               	movlw	0
  7245  0149DE  203D               	addwfc	(btemp+11)^0,w,c
  7246  0149E0  6EDA               	movwf	fsr2h,c
  7247  0149E2  0EF8               	movlw	-8
  7248  0149E4  006F FF8F FFDF     	movff	plusw1,indf2
  7249                           
  7250                           ;stkvar	_c @ sp[(-4)+-4]
  7251                           ;stkvar	_s @ sp[(-4)+0]
  7252  0149EA  0EFC               	movlw	-4
  7253  0149EC  006F FF8C  F03C    	movff	plusw1,btemp+10
  7254  0149F2  0EFD               	movlw	-3
  7255  0149F4  006F FF8C  F03D    	movff	plusw1,btemp+11
  7256  0149FA  0E02               	movlw	2
  7257  0149FC  243C               	addwf	(btemp+10)^0,w,c
  7258  0149FE  6ED9               	movwf	fsr2l,c
  7259  014A00  0E00               	movlw	0
  7260  014A02  203D               	addwfc	(btemp+11)^0,w,c
  7261  014A04  6EDA               	movwf	fsr2h,c
  7262  014A06  0EF8               	movlw	-8
  7263  014A08  006F FF8F FFDF     	movff	plusw1,indf2
  7264                           
  7265                           ;stkvar	_c @ sp[(-4)+-4]
  7266                           ;stkvar	_n @ sp[(-4)+-6]
  7267                           ;stkvar	_s @ sp[(-4)+0]
  7268  014A0E  0EFC               	movlw	-4
  7269  014A10  006F FF8C  F03C    	movff	plusw1,btemp+10
  7270  014A16  0EFD               	movlw	-3
  7271  014A18  006F FF8C  F03D    	movff	plusw1,btemp+11
  7272  014A1E  0EF6               	movlw	-10
  7273  014A20  50E3               	movf	plusw1,w,c
  7274  014A22  263C               	addwf	(btemp+10)^0,f,c
  7275  014A24  0EF7               	movlw	-9
  7276  014A26  50E3               	movf	plusw1,w,c
  7277  014A28  223D               	addwfc	(btemp+11)^0,f,c
  7278  014A2A  0EFE               	movlw	254
  7279  014A2C  243C               	addwf	(btemp+10)^0,w,c
  7280  014A2E  6ED9               	movwf	fsr2l,c
  7281  014A30  0EFF               	movlw	255
  7282  014A32  203D               	addwfc	(btemp+11)^0,w,c
  7283  014A34  6EDA               	movwf	fsr2h,c
  7284  014A36  0EF8               	movlw	-8
  7285  014A38  006F FF8F FFDF     	movff	plusw1,indf2
  7286                           
  7287                           ;stkvar	_c @ sp[(-4)+-4]
  7288                           ;stkvar	_n @ sp[(-4)+-6]
  7289                           ;stkvar	_s @ sp[(-4)+0]
  7290  014A3E  0EFC               	movlw	-4
  7291  014A40  006F FF8C  F03C    	movff	plusw1,btemp+10
  7292  014A46  0EFD               	movlw	-3
  7293  014A48  006F FF8C  F03D    	movff	plusw1,btemp+11
  7294  014A4E  0EF6               	movlw	-10
  7295  014A50  50E3               	movf	plusw1,w,c
  7296  014A52  263C               	addwf	(btemp+10)^0,f,c
  7297  014A54  0EF7               	movlw	-9
  7298  014A56  50E3               	movf	plusw1,w,c
  7299  014A58  223D               	addwfc	(btemp+11)^0,f,c
  7300  014A5A  0EFD               	movlw	253
  7301  014A5C  243C               	addwf	(btemp+10)^0,w,c
  7302  014A5E  6ED9               	movwf	fsr2l,c
  7303  014A60  0EFF               	movlw	255
  7304  014A62  203D               	addwfc	(btemp+11)^0,w,c
  7305  014A64  6EDA               	movwf	fsr2h,c
  7306  014A66  0EF8               	movlw	-8
  7307  014A68  006F FF8F FFDF     	movff	plusw1,indf2
  7308                           
  7309                           ;stkvar	_n @ sp[(-4)+-6]
  7310  014A6E  0EF7               	movlw	-9
  7311  014A70  50E3               	movf	plusw1,w,c
  7312  014A72  E108               	bnz	l10225
  7313  014A74  0EF6               	movlw	-10
  7314  014A76  006F FF8C  F032    	movff	plusw1,btemp
  7315  014A7C  0E07               	movlw	7
  7316  014A7E  5E32               	subwf	btemp^0,f,c
  7317  014A80  A0D8               	btfss	status,0,c
  7318  014A82  D0C6               	goto	u10340
  7319  014A84                     l10225:
  7320                           
  7321                           ;stkvar	_c @ sp[(-4)+-4]
  7322                           ;stkvar	_s @ sp[(-4)+0]
  7323  014A84  0EFC               	movlw	-4
  7324  014A86  006F FF8C  F03C    	movff	plusw1,btemp+10
  7325  014A8C  0EFD               	movlw	-3
  7326  014A8E  006F FF8C  F03D    	movff	plusw1,btemp+11
  7327  014A94  0E03               	movlw	3
  7328  014A96  243C               	addwf	(btemp+10)^0,w,c
  7329  014A98  6ED9               	movwf	fsr2l,c
  7330  014A9A  0E00               	movlw	0
  7331  014A9C  203D               	addwfc	(btemp+11)^0,w,c
  7332  014A9E  6EDA               	movwf	fsr2h,c
  7333  014AA0  0EF8               	movlw	-8
  7334  014AA2  006F FF8F FFDF     	movff	plusw1,indf2
  7335                           
  7336                           ;stkvar	_c @ sp[(-4)+-4]
  7337                           ;stkvar	_n @ sp[(-4)+-6]
  7338                           ;stkvar	_s @ sp[(-4)+0]
  7339  014AA8  0EFC               	movlw	-4
  7340  014AAA  006F FF8C  F03C    	movff	plusw1,btemp+10
  7341  014AB0  0EFD               	movlw	-3
  7342  014AB2  006F FF8C  F03D    	movff	plusw1,btemp+11
  7343  014AB8  0EF6               	movlw	-10
  7344  014ABA  50E3               	movf	plusw1,w,c
  7345  014ABC  263C               	addwf	(btemp+10)^0,f,c
  7346  014ABE  0EF7               	movlw	-9
  7347  014AC0  50E3               	movf	plusw1,w,c
  7348  014AC2  223D               	addwfc	(btemp+11)^0,f,c
  7349  014AC4  0EFC               	movlw	252
  7350  014AC6  243C               	addwf	(btemp+10)^0,w,c
  7351  014AC8  6ED9               	movwf	fsr2l,c
  7352  014ACA  0EFF               	movlw	255
  7353  014ACC  203D               	addwfc	(btemp+11)^0,w,c
  7354  014ACE  6EDA               	movwf	fsr2h,c
  7355  014AD0  0EF8               	movlw	-8
  7356  014AD2  006F FF8F FFDF     	movff	plusw1,indf2
  7357                           
  7358                           ;stkvar	_n @ sp[(-4)+-6]
  7359  014AD8  0EF7               	movlw	-9
  7360  014ADA  50E3               	movf	plusw1,w,c
  7361  014ADC  E108               	bnz	l10231
  7362  014ADE  0EF6               	movlw	-10
  7363  014AE0  006F FF8C  F032    	movff	plusw1,btemp
  7364  014AE6  0E09               	movlw	9
  7365  014AE8  5E32               	subwf	btemp^0,f,c
  7366  014AEA  A0D8               	btfss	status,0,c
  7367  014AEC  D091               	goto	u10340
  7368  014AEE                     l10231:
  7369                           
  7370                           ;stkvar	_s @ sp[(-4)+0]
  7371  014AEE  0EFC               	movlw	-4
  7372  014AF0  006F FF8C  F03C    	movff	plusw1,btemp+10
  7373  014AF6  1E3C               	comf	(btemp+10)^0,f,c
  7374  014AF8  0EFD               	movlw	-3
  7375  014AFA  006F FF8C  F03D    	movff	plusw1,btemp+11
  7376  014B00  1E3D               	comf	(btemp+11)^0,f,c
  7377  014B02  2A3C               	incf	(btemp+10)^0,f,c
  7378  014B04  B4D8               	btfsc	status,2,c
  7379  014B06  2A3D               	incf	(btemp+11)^0,f,c
  7380  014B08  0E03               	movlw	3
  7381  014B0A  163C               	andwf	(btemp+10)^0,f,c
  7382  014B0C  0E00               	movlw	0
  7383  014B0E  163D               	andwf	(btemp+11)^0,f,c
  7384                           
  7385                           ;stkvar	_k @ sp[(-4)+2]
  7386  014B10  0EFE               	movlw	-2
  7387  014B12  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7388  014B18  0EFF               	movlw	-1
  7389  014B1A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7390                           
  7391                           ;stkvar	_k @ sp[(-4)+2]
  7392                           ;stkvar	_s @ sp[(-4)+0]
  7393  014B20  0EFC               	movlw	-4
  7394  014B22  50E3               	movf	plusw1,w,c
  7395  014B24  6E32               	movwf	btemp^0,c
  7396  014B26  0EFE               	movlw	-2
  7397  014B28  50E3               	movf	plusw1,w,c
  7398  014B2A  2632               	addwf	btemp^0,f,c
  7399  014B2C  0EFC               	movlw	-4
  7400  014B2E  0060  F0CB  FFE3   	movff	btemp,plusw1
  7401  014B34  0EFD               	movlw	-3
  7402  014B36  50E3               	movf	plusw1,w,c
  7403  014B38  6E32               	movwf	btemp^0,c
  7404  014B3A  0EFF               	movlw	-1
  7405  014B3C  50E3               	movf	plusw1,w,c
  7406  014B3E  2232               	addwfc	btemp^0,f,c
  7407  014B40  0EFD               	movlw	-3
  7408  014B42  0060  F0CB  FFE3   	movff	btemp,plusw1
  7409                           
  7410                           ;stkvar	_k @ sp[(-4)+2]
  7411                           ;stkvar	_n @ sp[(-4)+-6]
  7412  014B48  0EF6               	movlw	-10
  7413  014B4A  50E3               	movf	plusw1,w,c
  7414  014B4C  6E32               	movwf	btemp^0,c
  7415  014B4E  0EFE               	movlw	-2
  7416  014B50  50E3               	movf	plusw1,w,c
  7417  014B52  5E32               	subwf	btemp^0,f,c
  7418  014B54  0EF6               	movlw	-10
  7419  014B56  0060  F0CB  FFE3   	movff	btemp,plusw1
  7420  014B5C  0EF7               	movlw	-9
  7421  014B5E  50E3               	movf	plusw1,w,c
  7422  014B60  6E32               	movwf	btemp^0,c
  7423  014B62  0EFF               	movlw	-1
  7424  014B64  50E3               	movf	plusw1,w,c
  7425  014B66  5A32               	subwfb	btemp^0,f,c
  7426  014B68  0EF7               	movlw	-9
  7427  014B6A  0060  F0CB  FFE3   	movff	btemp,plusw1
  7428  014B70  0EFC               	movlw	252
  7429  014B72  6E3C               	movwf	(btemp+10)^0,c
  7430  014B74  0EFF               	movlw	255
  7431  014B76  6E3D               	movwf	(btemp+11)^0,c
  7432                           
  7433                           ;stkvar	_n @ sp[(-4)+-6]
  7434  014B78  0EF6               	movlw	-10
  7435  014B7A  006F FF8C  F032    	movff	plusw1,btemp
  7436  014B80  503C               	movf	(btemp+10)^0,w,c
  7437  014B82  1632               	andwf	btemp^0,f,c
  7438  014B84  0EF6               	movlw	-10
  7439  014B86  0060  F0CB  FFE3   	movff	btemp,plusw1
  7440  014B8C  0EF7               	movlw	-9
  7441  014B8E  006F FF8C  F032    	movff	plusw1,btemp
  7442  014B94  503D               	movf	(btemp+11)^0,w,c
  7443  014B96  1632               	andwf	btemp^0,f,c
  7444  014B98  0EF7               	movlw	-9
  7445  014B9A  D02E               	goto	L5
  7446  014B9C                     l10239:
  7447                           
  7448                           ;stkvar	_c @ sp[(-4)+-4]
  7449                           ;stkvar	_s @ sp[(-4)+0]
  7450  014B9C  0EFC               	movlw	-4
  7451  014B9E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7452  014BA4  0EFD               	movlw	-3
  7453  014BA6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7454  014BAC  0EF8               	movlw	-8
  7455  014BAE  006F FF8F FFDF     	movff	plusw1,indf2
  7456                           
  7457                           ;stkvar	_n @ sp[(-4)+-6]
  7458  014BB4  0EF6               	movlw	-10
  7459  014BB6  006F FF8C  F032    	movff	plusw1,btemp
  7460  014BBC  0E01               	movlw	1
  7461  014BBE  5E32               	subwf	btemp^0,f,c
  7462  014BC0  0EF6               	movlw	-10
  7463  014BC2  0060  F0CB  FFE3   	movff	btemp,plusw1
  7464  014BC8  0EF7               	movlw	-9
  7465  014BCA  006F FF8C  F032    	movff	plusw1,btemp
  7466  014BD0  0E00               	movlw	0
  7467  014BD2  5A32               	subwfb	btemp^0,f,c
  7468  014BD4  0EF7               	movlw	-9
  7469  014BD6  0060  F0CB  FFE3   	movff	btemp,plusw1
  7470                           
  7471                           ;stkvar	_s @ sp[(-4)+0]
  7472  014BDC  0EFC               	movlw	-4
  7473  014BDE  50E3               	movf	plusw1,w,c
  7474  014BE0  0F01               	addlw	1
  7475  014BE2  6E32               	movwf	btemp^0,c
  7476  014BE4  0EFC               	movlw	-4
  7477  014BE6  0060  F0CB  FFE3   	movff	btemp,plusw1
  7478  014BEC  6A32               	clrf	btemp^0,c
  7479  014BEE  0EFD               	movlw	-3
  7480  014BF0  50E3               	movf	plusw1,w,c
  7481  014BF2  2032               	addwfc	btemp^0,w,c
  7482  014BF4  6E32               	movwf	btemp^0,c
  7483  014BF6  0EFD               	movlw	-3
  7484  014BF8                     L5:
  7485  014BF8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7486                           
  7487                           ;stkvar	_n @ sp[(-4)+-6]
  7488  014BFE  0EF6               	movlw	-10
  7489  014C00  006F FF8C  F032    	movff	plusw1,btemp
  7490  014C06  0EF7               	movlw	-9
  7491  014C08  50E3               	movf	plusw1,w,c
  7492  014C0A  1032               	iorwf	btemp^0,w,c
  7493  014C0C  A4D8               	btfss	status,2,c
  7494  014C0E  D7C6               	goto	l10239
  7495  014C10                     u10340:
  7496                           
  7497                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7498  014C10  0EF6               	movlw	246
  7499  014C12  26E1               	addwf	fsr1l,f,c
  7500  014C14  0EFF               	movlw	255
  7501  014C16  22E2               	addwfc	fsr1h,f,c
  7502  014C18  0012               	return		;funcret
  7503  014C1A                     __end_of_memset:
  7504                           	opt callstack 0
  7505                           
  7506 ;; *************** function _printf *****************
  7507 ;; Defined at:
  7508 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  fmt             2  [STACK] PTR const unsigned char 
  7511 ;;		 -> STR_23(3), STR_22(3), STR_21(3), 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  ap              2  [STACK] PTR void [1]
  7514 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7515 ;;  ret             2    0        int 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  2  [STACK] int 
  7518 ;; Registers used:
  7519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7520 ;; Tracked objects:
  7521 ;;		On entry : 3F/3B
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7529 ;;Total ram usage:        0 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:   14
  7532 ;; This function calls:
  7533 ;;		_vfprintf
  7534 ;; This function is called by:
  7535 ;;		_eaDogM_WriteString
  7536 ;;		_send_lcd_cmd_dma
  7537 ;; This function uses a reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text37
  7541  017D88                     __ptext37:
  7542                           	opt callstack 0
  7543  017D88                     _printf:
  7544                           	opt callstack 0
  7545                           
  7546                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7547  017D88  52E6               	movf	postinc1,f,c
  7548  017D8A  52E6               	movf	postinc1,f,c
  7549                           
  7550                           ;stkvar	?_printf @ sp[(-2)+-3]
  7551                           
  7552                           ;incstack = 0
  7553  017D8C  0EFB               	movlw	251
  7554  017D8E  24E1               	addwf	fsr1l,w,c
  7555  017D90  6E3C               	movwf	(btemp+10)^0,c
  7556  017D92  0EFF               	movlw	255
  7557  017D94  20E2               	addwfc	fsr1h,w,c
  7558  017D96  6E3D               	movwf	(btemp+11)^0,c
  7559                           
  7560                           ;stkvar	_ap @ sp[(-2)+0]
  7561  017D98  0EFF               	movlw	-1
  7562  017D9A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7563  017DA0  0EFE               	movlw	-2
  7564  017DA2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7565                           
  7566                           ;stkvar	_ap @ sp[(-2)+0]
  7567  017DA8  0EFE               	movlw	254
  7568  017DAA  24E1               	addwf	fsr1l,w,c
  7569  017DAC  6E32               	movwf	btemp^0,c
  7570  017DAE  0EFF               	movlw	255
  7571  017DB0  20E2               	addwfc	fsr1h,w,c
  7572  017DB2  6E33               	movwf	(btemp+1)^0,c
  7573  017DB4  0060  F0CB  FFE6   	movff	btemp,postinc1
  7574  017DBA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7575                           
  7576                           ;stkvar	_fmt @ sp[(-4)+-3]
  7577  017DC0  0EF9               	movlw	-7
  7578  017DC2  006F FF8F FFE6     	movff	plusw1,postinc1
  7579  017DC8  006F FF8F FFE6     	movff	plusw1,postinc1
  7580  017DCE  0E00               	movlw	0
  7581  017DD0  6EE6               	movwf	postinc1,c
  7582  017DD2  0E00               	movlw	0
  7583  017DD4  6EE6               	movwf	postinc1,c
  7584  017DD6  ECFC  F0B9         	call	_vfprintf	;wreg free
  7585                           
  7586                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  7587  017DDA  52E5               	movf	postdec1,f,c
  7588  017DDC  52E5               	movf	postdec1,f,c
  7589  017DDE  52E5               	movf	postdec1,f,c
  7590  017DE0  50E7               	movf	indf1,w,c
  7591  017DE2  5EE1               	subwf	fsr1l,f,c
  7592  017DE4  0E00               	movlw	0
  7593  017DE6  5AE2               	subwfb	fsr1h,f,c
  7594  017DE8  0012               	return		;funcret
  7595  017DEA                     __end_of_printf:
  7596                           	opt callstack 0
  7597                           
  7598 ;; *************** function _vfprintf *****************
  7599 ;; Defined at:
  7600 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7603 ;;		 -> f(6), NULL(0), 
  7604 ;;  fmt             2  [STACK] PTR const unsigned char 
  7605 ;;		 -> STR_41(3), STR_40(3), STR_39(19), STR_38(19), 
  7606 ;;		 -> STR_37(19), STR_36(19), STR_35(19), STR_34(19), 
  7607 ;;		 -> STR_33(24), STR_32(15), STR_31(15), STR_30(15), 
  7608 ;;		 -> STR_29(10), STR_28(10), STR_27(19), STR_26(19), 
  7609 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(19), 
  7610 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  7611 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  7612 ;;		 -> STR_11(19), STR_10(19), STR_9(19), STR_8(17), 
  7613 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  7614 ;;		 -> STR_1(17), 
  7615 ;;  ap              2  [STACK] PTR PTR void 
  7616 ;;		 -> ap(2), ap(2), 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  cfmt            2  [STACK] PTR unsigned char 
  7619 ;;		 -> STR_41(3), STR_40(3), STR_39(19), STR_38(19), 
  7620 ;;		 -> STR_37(19), STR_36(19), STR_35(19), STR_34(19), 
  7621 ;;		 -> STR_33(24), STR_32(15), STR_31(15), STR_30(15), 
  7622 ;;		 -> STR_29(10), STR_28(10), STR_27(19), STR_26(19), 
  7623 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(19), 
  7624 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  7625 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  7626 ;;		 -> STR_11(19), STR_10(19), STR_9(19), STR_8(17), 
  7627 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  7628 ;;		 -> STR_1(17), 
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  2  [STACK] int 
  7631 ;; Registers used:
  7632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/5
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7642 ;;Total ram usage:        0 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:   13
  7645 ;; This function calls:
  7646 ;;		_vfpfcnvrt
  7647 ;; This function is called by:
  7648 ;;		_sprintf
  7649 ;;		_printf
  7650 ;; This function uses a reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text38
  7654  0173F8                     __ptext38:
  7655                           	opt callstack 0
  7656  0173F8                     _vfprintf:
  7657                           	opt callstack 0
  7658                           
  7659                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7660  0173F8  52E6               	movf	postinc1,f,c
  7661  0173FA  52E6               	movf	postinc1,f,c
  7662                           
  7663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7664                           ;stkvar	_fmt @ sp[(-2)+-4]
  7665                           
  7666                           ;incstack = 0
  7667  0173FC  0EFA               	movlw	-6
  7668  0173FE  006F FF8C  F03C    	movff	plusw1,btemp+10
  7669  017404  0EFB               	movlw	-5
  7670  017406  006F FF8C  F03D    	movff	plusw1,btemp+11
  7671                           
  7672                           ;stkvar	_cfmt @ sp[(-2)+0]
  7673  01740C  0EFF               	movlw	-1
  7674  01740E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7675  017414  0EFE               	movlw	-2
  7676  017416  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7677                           
  7678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7679  01741C  6A19               	clrf	_nout^0,c
  7680  01741E  6A1A               	clrf	(_nout+1)^0,c
  7681                           
  7682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7683  017420  D020               	goto	l10253
  7684  017422                     l10251:
  7685                           
  7686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7687                           ;stkvar	_ap @ sp[(-2)+-6]
  7688  017422  0EF8               	movlw	-8
  7689  017424  006F FF8F FFE6     	movff	plusw1,postinc1
  7690  01742A  006F FF8F FFE6     	movff	plusw1,postinc1
  7691                           
  7692                           ;stkvar	_cfmt @ sp[(-4)+0]
  7693  017430  0EFC               	movlw	252
  7694  017432  24E1               	addwf	fsr1l,w,c
  7695  017434  6E32               	movwf	btemp^0,c
  7696  017436  0EFF               	movlw	255
  7697  017438  20E2               	addwfc	fsr1h,w,c
  7698  01743A  6E33               	movwf	(btemp+1)^0,c
  7699  01743C  0060  F0CB  FFE6   	movff	btemp,postinc1
  7700  017442  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7701                           
  7702                           ;stkvar	_fp @ sp[(-6)+-2]
  7703  017448  0EF8               	movlw	-8
  7704  01744A  006F FF8F FFE6     	movff	plusw1,postinc1
  7705  017450  006F FF8F FFE6     	movff	plusw1,postinc1
  7706  017456  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7707  01745A  5032               	movf	btemp^0,w,c
  7708  01745C  2619               	addwf	_nout^0,f,c
  7709  01745E  5033               	movf	(btemp+1)^0,w,c
  7710  017460  221A               	addwfc	(_nout+1)^0,f,c
  7711  017462                     l10253:
  7712                           
  7713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7714                           ;stkvar	_cfmt @ sp[(-2)+0]
  7715  017462  50E1               	movf	fsr1l,w,c
  7716  017464  0FFE               	addlw	-2
  7717  017466  6ED9               	movwf	fsr2l,c
  7718  017468  50E2               	movf	fsr1h,w,c
  7719  01746A  6EDA               	movwf	fsr2h,c
  7720  01746C  0EFF               	movlw	255
  7721  01746E  22DA               	addwfc	fsr2h,f,c
  7722  017470  006F FF7B FFF6     	movff	postinc2,tblptrl
  7723  017476  006F FF77 FFF7     	movff	postdec2,tblptrh
  7724  01747C                     	if	0	;tblptru may be non-zero
  7725  01747C                     	endif
  7726  01747C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7727  01747C  0E00               	movlw	low (__mediumconst shr (0+16))
  7728  01747E  6EF8               	movwf	tblptru,c
  7729  017480                     	endif
  7730  017480  0008               	tblrd		*
  7731  017482  50F5               	movf	tablat,w,c
  7732  017484  0900               	iorlw	0
  7733  017486  A4D8               	btfss	status,2,c
  7734  017488  D7CC               	goto	l10251
  7735                           
  7736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7737  01748A  0060  F064  F032   	movff	_nout,btemp
  7738  017490  0060  F068  F033   	movff	_nout+1,btemp+1
  7739                           
  7740                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7741  017496  0EF8               	movlw	248
  7742  017498  26E1               	addwf	fsr1l,f,c
  7743  01749A  0EFF               	movlw	255
  7744  01749C  22E2               	addwfc	fsr1h,f,c
  7745  01749E  0012               	return		;funcret
  7746  0174A0                     __end_of_vfprintf:
  7747                           	opt callstack 0
  7748                           
  7749 ;; *************** function _vfpfcnvrt *****************
  7750 ;; Defined at:
  7751 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7754 ;;		 -> f(6), NULL(0), 
  7755 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7756 ;;		 -> cfmt(2), 
  7757 ;;  ap              2  [STACK] PTR PTR void 
  7758 ;;		 -> ap(2), ap(2), 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;  llu             8  [STACK] unsigned long long 
  7761 ;;  ll              8  [STACK] long long 
  7762 ;;  f               4  [STACK] long long 
  7763 ;;  ct              3  [STACK] unsigned char [3]
  7764 ;;  vp              3    0        PTR void 
  7765 ;;  cp              2  [STACK] PTR unsigned char 
  7766 ;;		 -> ?_printf(2), ?_sprintf(2), STR_25(9), STR_24(12), 
  7767 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
  7768 ;;		 -> STR_3(6), V(187), 
  7769 ;;  i               2    0        int 
  7770 ;;  done            2    0        int 
  7771 ;;  c               1  [STACK] unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  2  [STACK] int 
  7774 ;; Registers used:
  7775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/5
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7785 ;;Total ram usage:        0 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:   12
  7788 ;; This function calls:
  7789 ;;		_atoi
  7790 ;;		_ctoa
  7791 ;;		_dtoa
  7792 ;;		_efgtoa
  7793 ;;		_fputc
  7794 ;;		_isdigit
  7795 ;;		_isupper
  7796 ;;		_stoa
  7797 ;;		_strncmp
  7798 ;;		_tolower
  7799 ;;		_xtoa
  7800 ;; This function is called by:
  7801 ;;		_vfprintf
  7802 ;; This function uses a reentrant model
  7803 ;;
  7804                           
  7805                           	psect	text39
  7806  011244                     __ptext39:
  7807                           	opt callstack 0
  7808  011244                     _vfpfcnvrt:
  7809                           	opt callstack 0
  7810                           
  7811                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7812  011244  0E20               	movlw	32
  7813  011246  26E1               	addwf	fsr1l,f,c
  7814  011248  0E00               	movlw	0
  7815  01124A  22E2               	addwfc	fsr1h,f,c
  7816                           
  7817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7818                           ;stkvar	_fmt @ sp[(-32)+-4]
  7819                           
  7820                           ;incstack = 0
  7821  01124C  0EDC               	movlw	-36
  7822  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7823  011254  0EDD               	movlw	-35
  7824  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7825  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7826  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7827  011268                     	if	0	;tblptru may be non-zero
  7828  011268                     	endif
  7829  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7830  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7831  01126A  6EF8               	movwf	tblptru,c
  7832  01126C                     	endif
  7833  01126C  0008               	tblrd		*
  7834  01126E  50F5               	movf	tablat,w,c
  7835  011270  0A25               	xorlw	37
  7836  011272  A4D8               	btfss	status,2,c
  7837  011274  EF92  F08E         	goto	l10197
  7838                           
  7839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7840                           ;stkvar	_fmt @ sp[(-32)+-4]
  7841  011278  0EDC               	movlw	-36
  7842  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7843  011280  0EDD               	movlw	-35
  7844  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7845  011288  2ADE               	incf	postinc2,f,c
  7846  01128A  0E00               	movlw	0
  7847  01128C  22DD               	addwfc	postdec2,f,c
  7848                           
  7849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7850  01128E  6A1B               	clrf	_width^0,c
  7851  011290  6A1C               	clrf	(_width+1)^0,c
  7852  011292  6A1F               	clrf	_flags^0,c
  7853  011294  6A20               	clrf	(_flags+1)^0,c
  7854                           
  7855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7856  011296  681D               	setf	_prec^0,c
  7857  011298  681E               	setf	(_prec+1)^0,c
  7858                           
  7859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7860                           ;stkvar	_fmt @ sp[(-32)+-4]
  7861  01129A  0EDC               	movlw	-36
  7862  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7863  0112A2  0EDD               	movlw	-35
  7864  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7865  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7866  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7867  0112B6                     	if	0	;tblptru may be non-zero
  7868  0112B6                     	endif
  7869  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7870  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7871  0112B8  6EF8               	movwf	tblptru,c
  7872  0112BA                     	endif
  7873  0112BA  0008               	tblrd		*
  7874  0112BC  50F5               	movf	tablat,w,c
  7875  0112BE  0A2A               	xorlw	42
  7876  0112C0  A4D8               	btfss	status,2,c
  7877  0112C2  D031               	goto	l10061
  7878                           
  7879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7880                           ;stkvar	_fmt @ sp[(-32)+-4]
  7881  0112C4  0EDC               	movlw	-36
  7882  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7883  0112CC  0EDD               	movlw	-35
  7884  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7885  0112D4  2ADE               	incf	postinc2,f,c
  7886  0112D6  0E00               	movlw	0
  7887  0112D8  22DD               	addwfc	postdec2,f,c
  7888                           
  7889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7890                           ;stkvar	_ap @ sp[(-32)+-6]
  7891  0112DA  0EDA               	movlw	-38
  7892  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7893  0112E2  0EDB               	movlw	-37
  7894  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7895  0112EA  0E02               	movlw	2
  7896  0112EC  5EDE               	subwf	postinc2,f,c
  7897  0112EE  0E00               	movlw	0
  7898  0112F0  5ADD               	subwfb	postdec2,f,c
  7899  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7900  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7901  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7902  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7903  01130A  006F FF78  F01B    	movff	postinc2,_width
  7904  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7905                           
  7906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7907  011316  AE1C               	btfss	(_width+1)^0,7,c
  7908  011318  D066               	goto	u10100
  7909                           
  7910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7911  01131A  801F               	bsf	_flags^0,0,c
  7912                           
  7913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7914  01131C  6C1B               	negf	_width^0,c
  7915  01131E  1E1C               	comf	(_width+1)^0,f,c
  7916  011320  B0D8               	btfsc	status,0,c
  7917  011322  2A1C               	incf	(_width+1)^0,f,c
  7918  011324  D060               	goto	u10100
  7919  011326                     l10061:
  7920                           
  7921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7922                           ;stkvar	_fmt @ sp[(-32)+-4]
  7923  011326  0EDC               	movlw	-36
  7924  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7925  01132E  0EDD               	movlw	-35
  7926  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7927  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7928  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7929  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7930  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7931  01134E  EC0E  F0AA         	call	_atoi	;wreg free
  7932  011352  0060  F0C8  F01B   	movff	btemp,_width
  7933  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7934                           
  7935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7936  01135E  D00B               	goto	l10065
  7937  011360                     l10063:
  7938                           
  7939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7940                           ;stkvar	_fmt @ sp[(-32)+-4]
  7941  011360  0EDC               	movlw	-36
  7942  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7943  011368  0EDD               	movlw	-35
  7944  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7945  011370  2ADE               	incf	postinc2,f,c
  7946  011372  0E00               	movlw	0
  7947  011374  22DD               	addwfc	postdec2,f,c
  7948  011376                     l10065:
  7949  011376  0ED0               	movlw	208
  7950  011378  6E3C               	movwf	(btemp+10)^0,c
  7951  01137A  0EFF               	movlw	255
  7952  01137C  6E3D               	movwf	(btemp+11)^0,c
  7953                           
  7954                           ;stkvar	_fmt @ sp[(-32)+-4]
  7955  01137E  0EDC               	movlw	-36
  7956  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7957  011386  0EDD               	movlw	-35
  7958  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7959  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7960  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7961  01139A                     	if	0	;tblptru may be non-zero
  7962  01139A                     	endif
  7963  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7964  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7965  01139C  6EF8               	movwf	tblptru,c
  7966  01139E                     	endif
  7967  01139E  0008               	tblrd		*
  7968  0113A0  50F5               	movf	tablat,w,c
  7969  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7970  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7971  0113A6  503C               	movf	(btemp+10)^0,w,c
  7972  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7973  0113AA  503D               	movf	(btemp+11)^0,w,c
  7974  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7975  0113AE  503B               	movf	(btemp+9)^0,w,c
  7976  0113B0  E106               	bnz	u10080
  7977  0113B2  0E0A               	movlw	10
  7978  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7979  0113B6  B0D8               	btfsc	status,0,c
  7980  0113B8  D002               	goto	u10080
  7981  0113BA  0E01               	movlw	1
  7982  0113BC  D001               	goto	u10090
  7983  0113BE                     u10080:
  7984  0113BE  0E00               	movlw	0
  7985  0113C0                     u10090:
  7986  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7987  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7988                           
  7989                           ;stkvar	_vfpfcnvrt$4553 @ sp[(-32)+4]
  7990  0113C4  0EE4               	movlw	-28
  7991  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7992  0113CC  0EE5               	movlw	-27
  7993  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7994                           
  7995                           ;stkvar	_vfpfcnvrt$4553 @ sp[(-32)+4]
  7996  0113D4  0EE4               	movlw	-28
  7997  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7998  0113DC  0EE5               	movlw	-27
  7999  0113DE  50E3               	movf	plusw1,w,c
  8000  0113E0  1032               	iorwf	btemp^0,w,c
  8001  0113E2  A4D8               	btfss	status,2,c
  8002  0113E4  D7BD               	goto	l10063
  8003  0113E6                     u10100:
  8004                           
  8005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8006                           ;stkvar	_fmt @ sp[(-32)+-4]
  8007  0113E6  0EDC               	movlw	-36
  8008  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8009  0113EE  0EDD               	movlw	-35
  8010  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8011  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8012  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8013  011402                     	if	0	;tblptru may be non-zero
  8014  011402                     	endif
  8015  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8016  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8017  011404  6EF8               	movwf	tblptru,c
  8018  011406                     	endif
  8019  011406  0008               	tblrd		*
  8020  011408  50F5               	movf	tablat,w,c
  8021  01140A  0A2E               	xorlw	46
  8022  01140C  A4D8               	btfss	status,2,c
  8023  01140E  D0AC               	goto	u10150
  8024                           
  8025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8026  011410  6A1D               	clrf	_prec^0,c
  8027  011412  6A1E               	clrf	(_prec+1)^0,c
  8028                           
  8029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8030                           ;stkvar	_fmt @ sp[(-32)+-4]
  8031  011414  0EDC               	movlw	-36
  8032  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8033  01141C  0EDD               	movlw	-35
  8034  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8035  011424  2ADE               	incf	postinc2,f,c
  8036  011426  0E00               	movlw	0
  8037  011428  22DD               	addwfc	postdec2,f,c
  8038                           
  8039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8040                           ;stkvar	_fmt @ sp[(-32)+-4]
  8041  01142A  0EDC               	movlw	-36
  8042  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8043  011432  0EDD               	movlw	-35
  8044  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8045  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8046  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8047  011446                     	if	0	;tblptru may be non-zero
  8048  011446                     	endif
  8049  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8050  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8051  011448  6EF8               	movwf	tblptru,c
  8052  01144A                     	endif
  8053  01144A  0008               	tblrd		*
  8054  01144C  50F5               	movf	tablat,w,c
  8055  01144E  0A2A               	xorlw	42
  8056  011450  A4D8               	btfss	status,2,c
  8057  011452  D02A               	goto	l10083
  8058                           
  8059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8060                           ;stkvar	_fmt @ sp[(-32)+-4]
  8061  011454  0EDC               	movlw	-36
  8062  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8063  01145C  0EDD               	movlw	-35
  8064  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8065  011464  2ADE               	incf	postinc2,f,c
  8066  011466  0E00               	movlw	0
  8067  011468  22DD               	addwfc	postdec2,f,c
  8068                           
  8069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8070                           ;stkvar	_ap @ sp[(-32)+-6]
  8071  01146A  0EDA               	movlw	-38
  8072  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8073  011472  0EDB               	movlw	-37
  8074  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8075  01147A  0E02               	movlw	2
  8076  01147C  5EDE               	subwf	postinc2,f,c
  8077  01147E  0E00               	movlw	0
  8078  011480  5ADD               	subwfb	postdec2,f,c
  8079  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  8080  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  8081  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8082  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8083  01149A  006F FF78  F01D    	movff	postinc2,_prec
  8084  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  8085                           
  8086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8087  0114A6  D060               	goto	u10150
  8088  0114A8                     l10083:
  8089                           
  8090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8091                           ;stkvar	_fmt @ sp[(-32)+-4]
  8092  0114A8  0EDC               	movlw	-36
  8093  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8094  0114B0  0EDD               	movlw	-35
  8095  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8096  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  8097  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  8098  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8099  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8100  0114D0  EC0E  F0AA         	call	_atoi	;wreg free
  8101  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  8102  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  8103                           
  8104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8105  0114E0  D00B               	goto	l10087
  8106  0114E2                     l10085:
  8107                           
  8108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8109                           ;stkvar	_fmt @ sp[(-32)+-4]
  8110  0114E2  0EDC               	movlw	-36
  8111  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8112  0114EA  0EDD               	movlw	-35
  8113  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8114  0114F2  2ADE               	incf	postinc2,f,c
  8115  0114F4  0E00               	movlw	0
  8116  0114F6  22DD               	addwfc	postdec2,f,c
  8117  0114F8                     l10087:
  8118  0114F8  0ED0               	movlw	208
  8119  0114FA  6E3C               	movwf	(btemp+10)^0,c
  8120  0114FC  0EFF               	movlw	255
  8121  0114FE  6E3D               	movwf	(btemp+11)^0,c
  8122                           
  8123                           ;stkvar	_fmt @ sp[(-32)+-4]
  8124  011500  0EDC               	movlw	-36
  8125  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8126  011508  0EDD               	movlw	-35
  8127  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8128  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8129  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8130  01151C                     	if	0	;tblptru may be non-zero
  8131  01151C                     	endif
  8132  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8133  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8134  01151E  6EF8               	movwf	tblptru,c
  8135  011520                     	endif
  8136  011520  0008               	tblrd		*
  8137  011522  50F5               	movf	tablat,w,c
  8138  011524  6E3A               	movwf	(btemp+8)^0,c
  8139  011526  6A3B               	clrf	(btemp+9)^0,c
  8140  011528  503C               	movf	(btemp+10)^0,w,c
  8141  01152A  263A               	addwf	(btemp+8)^0,f,c
  8142  01152C  503D               	movf	(btemp+11)^0,w,c
  8143  01152E  223B               	addwfc	(btemp+9)^0,f,c
  8144  011530  503B               	movf	(btemp+9)^0,w,c
  8145  011532  E106               	bnz	u10130
  8146  011534  0E0A               	movlw	10
  8147  011536  5C3A               	subwf	(btemp+8)^0,w,c
  8148  011538  B0D8               	btfsc	status,0,c
  8149  01153A  D002               	goto	u10130
  8150  01153C  0E01               	movlw	1
  8151  01153E  D001               	goto	u10140
  8152  011540                     u10130:
  8153  011540  0E00               	movlw	0
  8154  011542                     u10140:
  8155  011542  6E3C               	movwf	(btemp+10)^0,c
  8156  011544  6A3D               	clrf	(btemp+11)^0,c
  8157                           
  8158                           ;stkvar	_vfpfcnvrt$4554 @ sp[(-32)+0]
  8159  011546  0EE0               	movlw	-32
  8160  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8161  01154E  0EE1               	movlw	-31
  8162  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8163                           
  8164                           ;stkvar	_vfpfcnvrt$4554 @ sp[(-32)+0]
  8165  011556  0EE0               	movlw	-32
  8166  011558  006F FF8C  F032    	movff	plusw1,btemp
  8167  01155E  0EE1               	movlw	-31
  8168  011560  50E3               	movf	plusw1,w,c
  8169  011562  1032               	iorwf	btemp^0,w,c
  8170  011564  A4D8               	btfss	status,2,c
  8171  011566  D7BD               	goto	l10085
  8172  011568                     u10150:
  8173                           
  8174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8175                           ;stkvar	_fmt @ sp[(-32)+-4]
  8176  011568  0EDC               	movlw	-36
  8177  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8178  011570  0EDD               	movlw	-35
  8179  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8180  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8181  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8182  011584                     	if	0	;tblptru may be non-zero
  8183  011584                     	endif
  8184  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8185  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8186  011586  6EF8               	movwf	tblptru,c
  8187  011588                     	endif
  8188  011588  0008               	tblrd		*
  8189  01158A  50F5               	movf	tablat,w,c
  8190  01158C  6EE6               	movwf	postinc1,c
  8191  01158E  0E00               	movlw	0
  8192  011590  6EE6               	movwf	postinc1,c
  8193  011592  ECA0  F0BC         	call	_tolower	;wreg free
  8194                           
  8195                           ;stkvar	_ct @ sp[(-32)+26]
  8196  011596  0EFA               	movlw	-6
  8197  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  8198                           
  8199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8200                           ;stkvar	_ct @ sp[(-32)+26]
  8201  01159E  0EFA               	movlw	-6
  8202  0115A0  50E3               	movf	plusw1,w,c
  8203  0115A2  B4D8               	btfsc	status,2,c
  8204  0115A4  D05B               	goto	l10103
  8205                           
  8206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8207                           ;stkvar	_ct @ sp[(-32)+26]
  8208  0115A6  0EFB               	movlw	251
  8209  0115A8  24E1               	addwf	fsr1l,w,c
  8210  0115AA  6ED9               	movwf	fsr2l,c
  8211  0115AC  0EFF               	movlw	255
  8212  0115AE  20E2               	addwfc	fsr1h,w,c
  8213  0115B0  6EDA               	movwf	fsr2h,c
  8214                           
  8215                           ;stkvar	_fmt @ sp[(-32)+-4]
  8216  0115B2  0EDC               	movlw	-36
  8217  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8218  0115BA  0EDD               	movlw	-35
  8219  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8220  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  8221  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  8222  0115CE  0E01               	movlw	1
  8223  0115D0  263C               	addwf	(btemp+10)^0,f,c
  8224  0115D2  0E00               	movlw	0
  8225  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  8226  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8227  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8228  0115E2                     	if	0	;tblptru may be non-zero
  8229  0115E2                     	endif
  8230  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8231  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8232  0115E4  6EF8               	movwf	tblptru,c
  8233  0115E6                     	endif
  8234  0115E6  0008               	tblrd		*
  8235  0115E8  50F5               	movf	tablat,w,c
  8236  0115EA  6EE6               	movwf	postinc1,c
  8237  0115EC  0E00               	movlw	0
  8238  0115EE  6EE6               	movwf	postinc1,c
  8239  0115F0  ECA0  F0BC         	call	_tolower	;wreg free
  8240  0115F4  5032               	movf	btemp^0,w,c
  8241  0115F6  6EDF               	movwf	indf2,c
  8242                           
  8243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  8244                           ;stkvar	_ct @ sp[(-32)+26]
  8245  0115F8  0EFB               	movlw	251
  8246  0115FA  24E1               	addwf	fsr1l,w,c
  8247  0115FC  6ED9               	movwf	fsr2l,c
  8248  0115FE  0EFF               	movlw	255
  8249  011600  20E2               	addwfc	fsr1h,w,c
  8250  011602  6EDA               	movwf	fsr2h,c
  8251  011604  50DF               	movf	indf2,w,c
  8252  011606  B4D8               	btfsc	status,2,c
  8253  011608  D029               	goto	l10103
  8254                           
  8255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  8256                           ;stkvar	_ct @ sp[(-32)+26]
  8257  01160A  0EFC               	movlw	252
  8258  01160C  24E1               	addwf	fsr1l,w,c
  8259  01160E  6ED9               	movwf	fsr2l,c
  8260  011610  0EFF               	movlw	255
  8261  011612  20E2               	addwfc	fsr1h,w,c
  8262  011614  6EDA               	movwf	fsr2h,c
  8263                           
  8264                           ;stkvar	_fmt @ sp[(-32)+-4]
  8265  011616  0EDC               	movlw	-36
  8266  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  8267  01161E  0EDD               	movlw	-35
  8268  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  8269  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  8270  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  8271  011632  0E02               	movlw	2
  8272  011634  263C               	addwf	(btemp+10)^0,f,c
  8273  011636  0E00               	movlw	0
  8274  011638  223D               	addwfc	(btemp+11)^0,f,c
  8275  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8276  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8277  011646                     	if	0	;tblptru may be non-zero
  8278  011646                     	endif
  8279  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8280  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  8281  011648  6EF8               	movwf	tblptru,c
  8282  01164A                     	endif
  8283  01164A  0008               	tblrd		*
  8284  01164C  50F5               	movf	tablat,w,c
  8285  01164E  6EE6               	movwf	postinc1,c
  8286  011650  0E00               	movlw	0
  8287  011652  6EE6               	movwf	postinc1,c
  8288  011654  ECA0  F0BC         	call	_tolower	;wreg free
  8289  011658  5032               	movf	btemp^0,w,c
  8290  01165A  6EDF               	movwf	indf2,c
  8291  01165C                     l10103:
  8292                           
  8293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8294                           ;stkvar	_fmt @ sp[(-32)+-4]
  8295  01165C  0EDC               	movlw	-36
  8296  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8297  011664  0EDD               	movlw	-35
  8298  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  8299  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8300  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  8301  011678                     	if	0	;tblptru may be non-zero
  8302  011678                     	endif
  8303  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8304  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  8305  01167A  6EF8               	movwf	tblptru,c
  8306  01167C                     	endif
  8307  01167C  0008               	tblrd		*
  8308  01167E  50F5               	movf	tablat,w,c
  8309  011680  0A63               	xorlw	99
  8310  011682  A4D8               	btfss	status,2,c
  8311  011684  D036               	goto	l10113
  8312                           
  8313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8314                           ;stkvar	_fmt @ sp[(-32)+-4]
  8315  011686  0EDC               	movlw	-36
  8316  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  8317  01168E  0EDD               	movlw	-35
  8318  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  8319  011696  2ADE               	incf	postinc2,f,c
  8320  011698  0E00               	movlw	0
  8321  01169A  22DD               	addwfc	postdec2,f,c
  8322                           
  8323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8324                           ;stkvar	_ap @ sp[(-32)+-6]
  8325  01169C  0EDA               	movlw	-38
  8326  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8327  0116A4  0EDB               	movlw	-37
  8328  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8329  0116AC  0E02               	movlw	2
  8330  0116AE  5EDE               	subwf	postinc2,f,c
  8331  0116B0  0E00               	movlw	0
  8332  0116B2  5ADD               	subwfb	postdec2,f,c
  8333  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  8334  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  8335  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8336  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8337  0116CC  50DF               	movf	indf2,w,c
  8338  0116CE  6E3D               	movwf	(btemp+11)^0,c
  8339                           
  8340                           ;stkvar	_c @ sp[(-32)+31]
  8341  0116D0  0EFF               	movlw	-1
  8342  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8343                           
  8344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8345                           ;stkvar	_c @ sp[(-32)+31]
  8346  0116D8  0EFF               	movlw	-1
  8347  0116DA  50E3               	movf	plusw1,w,c
  8348  0116DC  6EE6               	movwf	postinc1,c
  8349                           
  8350                           ;stkvar	_fp @ sp[(-33)+-2]
  8351  0116DE  0EDD               	movlw	-35
  8352  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8353  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8354  0116EC  EC1A  F0BC         	call	_ctoa	;wreg free
  8355  0116F0  D343               	goto	l2053
  8356  0116F2                     l10113:
  8357                           
  8358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8359                           ;stkvar	_fmt @ sp[(-32)+-4]
  8360  0116F2  0EDC               	movlw	-36
  8361  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8362  0116FA  0EDD               	movlw	-35
  8363  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8364  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  8365  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  8366  01170E                     	if	0	;tblptru may be non-zero
  8367  01170E                     	endif
  8368  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8369  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  8370  011710  6EF8               	movwf	tblptru,c
  8371  011712                     	endif
  8372  011712  0008               	tblrd		*
  8373  011714  50F5               	movf	tablat,w,c
  8374  011716  0A64               	xorlw	100
  8375  011718  B4D8               	btfsc	status,2,c
  8376  01171A  D015               	goto	u10200
  8377                           
  8378                           ;stkvar	_fmt @ sp[(-32)+-4]
  8379  01171C  0EDC               	movlw	-36
  8380  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8381  011724  0EDD               	movlw	-35
  8382  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8383  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8384  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8385  011738                     	if	0	;tblptru may be non-zero
  8386  011738                     	endif
  8387  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8388  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  8389  01173A  6EF8               	movwf	tblptru,c
  8390  01173C                     	endif
  8391  01173C  0008               	tblrd		*
  8392  01173E  50F5               	movf	tablat,w,c
  8393  011740  0A69               	xorlw	105
  8394  011742  A4D8               	btfss	status,2,c
  8395  011744  D075               	goto	l10125
  8396  011746                     u10200:
  8397                           
  8398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8399                           ;stkvar	_fmt @ sp[(-32)+-4]
  8400  011746  0EDC               	movlw	-36
  8401  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  8402  01174E  0EDD               	movlw	-35
  8403  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  8404  011756  2ADE               	incf	postinc2,f,c
  8405  011758  0E00               	movlw	0
  8406  01175A  22DD               	addwfc	postdec2,f,c
  8407                           
  8408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8409                           ;stkvar	_ap @ sp[(-32)+-6]
  8410  01175C  0EDA               	movlw	-38
  8411  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8412  011764  0EDB               	movlw	-37
  8413  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  8414  01176C  0E02               	movlw	2
  8415  01176E  5EDE               	subwf	postinc2,f,c
  8416  011770  0E00               	movlw	0
  8417  011772  5ADD               	subwfb	postdec2,f,c
  8418  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  8419  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  8420  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8421  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8422  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  8423  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  8424                           
  8425                           ;stkvar	_ll @ sp[(-32)+14]
  8426  011798  0EEE               	movlw	-18
  8427  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8428  0117A0  0EEF               	movlw	-17
  8429  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8430  0117A8  6A32               	clrf	btemp^0,c
  8431  0117AA  BEE3               	btfsc	plusw1,7,c
  8432  0117AC  6832               	setf	btemp^0,c
  8433  0117AE  0EF0               	movlw	-16
  8434  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8435  0117B6  0EF1               	movlw	-15
  8436  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8437  0117BE  0EF2               	movlw	-14
  8438  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8439  0117C6  0EF3               	movlw	-13
  8440  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8441  0117CE  0EF4               	movlw	-12
  8442  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8443  0117D6  0EF5               	movlw	-11
  8444  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8445                           
  8446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8447                           ;stkvar	_ll @ sp[(-32)+14]
  8448  0117DE  50E1               	movf	fsr1l,w,c
  8449  0117E0  0FEE               	addlw	-18
  8450  0117E2  6ED9               	movwf	fsr2l,c
  8451  0117E4  50E2               	movf	fsr1h,w,c
  8452  0117E6  6EDA               	movwf	fsr2h,c
  8453  0117E8  0EFF               	movlw	255
  8454  0117EA  22DA               	addwfc	fsr2h,f,c
  8455  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8456  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8457  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8458  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8459  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  8460  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  8461  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  8462  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  8463                           
  8464                           ;stkvar	_fp @ sp[(-40)+-2]
  8465  01181C  0ED6               	movlw	-42
  8466  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  8467  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  8468  01182A  ECC4  F09E         	call	_dtoa	;wreg free
  8469  01182E  D2A4               	goto	l2053
  8470  011830                     l10125:
  8471                           
  8472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  8473                           ;stkvar	_ct @ sp[(-32)+26]
  8474  011830  0EFA               	movlw	-6
  8475  011832  006F FF8C  F032    	movff	plusw1,btemp
  8476  011838  0E66               	movlw	102
  8477  01183A  1832               	xorwf	btemp^0,w,c
  8478  01183C  A4D8               	btfss	status,2,c
  8479  01183E  D06E               	goto	l10137
  8480                           
  8481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  8482                           ;stkvar	_fmt @ sp[(-32)+-4]
  8483  011840  0EDC               	movlw	-36
  8484  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  8485  011848  0EDD               	movlw	-35
  8486  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8487  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  8488  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  8489  01185C                     	if	0	;tblptru may be non-zero
  8490  01185C                     	endif
  8491  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8492  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  8493  01185E  6EF8               	movwf	tblptru,c
  8494  011860                     	endif
  8495                           
  8496                           ;stkvar	_c @ sp[(-32)+31]
  8497  011860  0008               	tblrd		*
  8498  011862  0EFF               	movlw	-1
  8499  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  8500                           
  8501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  8502                           ;stkvar	_fmt @ sp[(-32)+-4]
  8503  01186A  0EDC               	movlw	-36
  8504  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8505  011872  0EDD               	movlw	-35
  8506  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  8507  01187A  2ADE               	incf	postinc2,f,c
  8508  01187C  0E00               	movlw	0
  8509  01187E  22DD               	addwfc	postdec2,f,c
  8510                           
  8511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8512                           ;stkvar	_ap @ sp[(-32)+-6]
  8513  011880  0EDA               	movlw	-38
  8514  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  8515  011888  0EDB               	movlw	-37
  8516  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8517  011890  0E04               	movlw	4
  8518  011892  5EDE               	subwf	postinc2,f,c
  8519  011894  0E00               	movlw	0
  8520  011896  5ADD               	subwfb	postdec2,f,c
  8521  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  8522  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8523  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8524  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8525  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8526  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8527  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8528  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8529                           
  8530                           ;stkvar	_f @ sp[(-32)+22]
  8531  0118C8  0EF6               	movlw	-10
  8532  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8533  0118D0  0EF7               	movlw	-9
  8534  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8535  0118D8  0EF8               	movlw	-8
  8536  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8537  0118E0  0EF9               	movlw	-7
  8538  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8539  0118E8                     l10133:
  8540                           
  8541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8542                           ;stkvar	_c @ sp[(-32)+31]
  8543  0118E8  0EFF               	movlw	-1
  8544  0118EA  50E3               	movf	plusw1,w,c
  8545  0118EC  6EE6               	movwf	postinc1,c
  8546                           
  8547                           ;stkvar	_f @ sp[(-33)+22]
  8548  0118EE  0EF5               	movlw	-11
  8549  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8550  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8551  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8552  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8553                           
  8554                           ;stkvar	_fp @ sp[(-37)+-2]
  8555  011908  0ED9               	movlw	-39
  8556  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8557  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8558  011916  EC00  F080         	call	_efgtoa	;wreg free
  8559  01191A  D22E               	goto	l2053
  8560  01191C                     l10137:
  8561                           
  8562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8563  01191C  0E02               	movlw	2
  8564  01191E  6EE6               	movwf	postinc1,c
  8565  011920  0E00               	movlw	0
  8566  011922  6EE6               	movwf	postinc1,c
  8567  011924  0EF6               	movlw	low STR_51
  8568  011926  6EE6               	movwf	postinc1,c
  8569  011928  0EFF               	movlw	high STR_51
  8570  01192A  6EE6               	movwf	postinc1,c
  8571                           
  8572                           ;stkvar	_ct @ sp[(-36)+26]
  8573  01192C  0EF6               	movlw	246
  8574  01192E  24E1               	addwf	fsr1l,w,c
  8575  011930  6E32               	movwf	btemp^0,c
  8576  011932  0EFF               	movlw	255
  8577  011934  20E2               	addwfc	fsr1h,w,c
  8578  011936  6E33               	movwf	(btemp+1)^0,c
  8579  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  8580  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8581  011944  EC7E  F0AE         	call	_strncmp	;wreg free
  8582  011948  5032               	movf	btemp^0,w,c
  8583  01194A  1033               	iorwf	(btemp+1)^0,w,c
  8584  01194C  A4D8               	btfss	status,2,c
  8585  01194E  D096               	goto	l10157
  8586                           
  8587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8588                           ;stkvar	_fmt @ sp[(-32)+-4]
  8589  011950  0EDC               	movlw	-36
  8590  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  8591  011958  0EDD               	movlw	-35
  8592  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8593  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  8594  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  8595  01196C  0E01               	movlw	1
  8596  01196E  263C               	addwf	(btemp+10)^0,f,c
  8597  011970  0E00               	movlw	0
  8598  011972  223D               	addwfc	(btemp+11)^0,f,c
  8599  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8600  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8601  011980                     	if	0	;tblptru may be non-zero
  8602  011980                     	endif
  8603  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8604  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  8605  011982  6EF8               	movwf	tblptru,c
  8606  011984                     	endif
  8607                           
  8608                           ;stkvar	_c @ sp[(-32)+31]
  8609  011984  0008               	tblrd		*
  8610  011986  0EFF               	movlw	-1
  8611  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  8612  01198E  0EBF               	movlw	191
  8613  011990  6E3C               	movwf	(btemp+10)^0,c
  8614  011992  0EFF               	movlw	255
  8615  011994  6E3D               	movwf	(btemp+11)^0,c
  8616                           
  8617                           ;stkvar	_fmt @ sp[(-32)+-4]
  8618  011996  0EDC               	movlw	-36
  8619  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  8620  01199E  0EDD               	movlw	-35
  8621  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8622  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8623  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8624  0119B2                     	if	0	;tblptru may be non-zero
  8625  0119B2                     	endif
  8626  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8627  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8628  0119B4  6EF8               	movwf	tblptru,c
  8629  0119B6                     	endif
  8630  0119B6  0008               	tblrd		*
  8631  0119B8  50F5               	movf	tablat,w,c
  8632  0119BA  6E3A               	movwf	(btemp+8)^0,c
  8633  0119BC  6A3B               	clrf	(btemp+9)^0,c
  8634  0119BE  503C               	movf	(btemp+10)^0,w,c
  8635  0119C0  263A               	addwf	(btemp+8)^0,f,c
  8636  0119C2  503D               	movf	(btemp+11)^0,w,c
  8637  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  8638  0119C6  503B               	movf	(btemp+9)^0,w,c
  8639  0119C8  E106               	bnz	u10230
  8640  0119CA  0E1A               	movlw	26
  8641  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  8642  0119CE  B0D8               	btfsc	status,0,c
  8643  0119D0  D002               	goto	u10230
  8644  0119D2  0E01               	movlw	1
  8645  0119D4  D001               	goto	u10240
  8646  0119D6                     u10230:
  8647  0119D6  0E00               	movlw	0
  8648  0119D8                     u10240:
  8649  0119D8  6E3C               	movwf	(btemp+10)^0,c
  8650  0119DA  6A3D               	clrf	(btemp+11)^0,c
  8651                           
  8652                           ;stkvar	_vfpfcnvrt$4560 @ sp[(-32)+2]
  8653  0119DC  0EE2               	movlw	-30
  8654  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8655  0119E4  0EE3               	movlw	-29
  8656  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8657                           
  8658                           ;stkvar	_vfpfcnvrt$4560 @ sp[(-32)+2]
  8659  0119EC  0EE2               	movlw	-30
  8660  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  8661  0119F4  0EE3               	movlw	-29
  8662  0119F6  50E3               	movf	plusw1,w,c
  8663  0119F8  1032               	iorwf	btemp^0,w,c
  8664                           
  8665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8666                           ;stkvar	_ap @ sp[(-32)+-6]
  8667                           
  8668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8669                           
  8670                           ;stkvar	_f @ sp[(-32)+22]
  8671                           
  8672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8673                           ;stkvar	_ap @ sp[(-32)+-6]
  8674  0119FA  0EDA               	movlw	-38
  8675  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8676  011A02  0EDB               	movlw	-37
  8677  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8678  011A0A  0E04               	movlw	4
  8679  011A0C  5EDE               	subwf	postinc2,f,c
  8680  011A0E  0E00               	movlw	0
  8681  011A10  5ADD               	subwfb	postdec2,f,c
  8682  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8683  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8684  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8685  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8686  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8687  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8688  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8689  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8690                           
  8691                           ;stkvar	_f @ sp[(-32)+22]
  8692  011A42  0EF6               	movlw	-10
  8693  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8694  011A4A  0EF7               	movlw	-9
  8695  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8696  011A52  0EF8               	movlw	-8
  8697  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8698  011A5A  0EF9               	movlw	-7
  8699  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8700                           
  8701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8702                           ;stkvar	_fmt @ sp[(-32)+-4]
  8703  011A62  0EDC               	movlw	-36
  8704  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8705  011A6A  0EDD               	movlw	-35
  8706  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8707  011A72  0E02               	movlw	2
  8708  011A74  26DE               	addwf	postinc2,f,c
  8709  011A76  0E00               	movlw	0
  8710  011A78  22DD               	addwfc	postdec2,f,c
  8711  011A7A  D736               	goto	l10133
  8712  011A7C                     l10157:
  8713                           
  8714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8715                           ;stkvar	_fmt @ sp[(-32)+-4]
  8716  011A7C  0EDC               	movlw	-36
  8717  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8718  011A84  0EDD               	movlw	-35
  8719  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8720  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8721  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8722  011A98                     	if	0	;tblptru may be non-zero
  8723  011A98                     	endif
  8724  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8725  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8726  011A9A  6EF8               	movwf	tblptru,c
  8727  011A9C                     	endif
  8728  011A9C  0008               	tblrd		*
  8729  011A9E  50F5               	movf	tablat,w,c
  8730  011AA0  0A73               	xorlw	115
  8731  011AA2  A4D8               	btfss	status,2,c
  8732  011AA4  D042               	goto	l10167
  8733                           
  8734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8735                           ;stkvar	_fmt @ sp[(-32)+-4]
  8736  011AA6  0EDC               	movlw	-36
  8737  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8738  011AAE  0EDD               	movlw	-35
  8739  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8740  011AB6  2ADE               	incf	postinc2,f,c
  8741  011AB8  0E00               	movlw	0
  8742  011ABA  22DD               	addwfc	postdec2,f,c
  8743                           
  8744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8745                           ;stkvar	_ap @ sp[(-32)+-6]
  8746  011ABC  0EDA               	movlw	-38
  8747  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8748  011AC4  0EDB               	movlw	-37
  8749  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8750  011ACC  0E02               	movlw	2
  8751  011ACE  5EDE               	subwf	postinc2,f,c
  8752  011AD0  0E00               	movlw	0
  8753  011AD2  5ADD               	subwfb	postdec2,f,c
  8754  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8755  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8756  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8757  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8758  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8759  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8760                           
  8761                           ;stkvar	_cp @ sp[(-32)+29]
  8762  011AF8  0EFE               	movlw	-2
  8763  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8764  011B00  0EFD               	movlw	-3
  8765  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8766                           
  8767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8768                           ;stkvar	_cp @ sp[(-32)+29]
  8769  011B08  0EFD               	movlw	-3
  8770  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8771  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8772                           
  8773                           ;stkvar	_fp @ sp[(-34)+-2]
  8774  011B16  0EDC               	movlw	-36
  8775  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8776  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8777  011B24  EC6F  F0A7         	call	_stoa	;wreg free
  8778  011B28  D127               	goto	l2053
  8779  011B2A                     l10167:
  8780                           
  8781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8782                           ;stkvar	_fmt @ sp[(-32)+-4]
  8783  011B2A  0EDC               	movlw	-36
  8784  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8785  011B32  0EDD               	movlw	-35
  8786  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8787  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8788  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8789  011B46                     	if	0	;tblptru may be non-zero
  8790  011B46                     	endif
  8791  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8792  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8793  011B48  6EF8               	movwf	tblptru,c
  8794  011B4A                     	endif
  8795  011B4A  0008               	tblrd		*
  8796  011B4C  50F5               	movf	tablat,w,c
  8797  011B4E  0A78               	xorlw	120
  8798  011B50  B4D8               	btfsc	status,2,c
  8799  011B52  D015               	goto	u10280
  8800                           
  8801                           ;stkvar	_fmt @ sp[(-32)+-4]
  8802  011B54  0EDC               	movlw	-36
  8803  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8804  011B5C  0EDD               	movlw	-35
  8805  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8806  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8807  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8808  011B70                     	if	0	;tblptru may be non-zero
  8809  011B70                     	endif
  8810  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8811  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8812  011B72  6EF8               	movwf	tblptru,c
  8813  011B74                     	endif
  8814  011B74  0008               	tblrd		*
  8815  011B76  50F5               	movf	tablat,w,c
  8816  011B78  0A58               	xorlw	88
  8817  011B7A  A4D8               	btfss	status,2,c
  8818  011B7C  D094               	goto	l10181
  8819  011B7E                     u10280:
  8820                           
  8821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8822                           ;stkvar	_fmt @ sp[(-32)+-4]
  8823  011B7E  0EDC               	movlw	-36
  8824  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8825  011B86  0EDD               	movlw	-35
  8826  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8827  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8828  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8829  011B9A                     	if	0	;tblptru may be non-zero
  8830  011B9A                     	endif
  8831  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8832  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8833  011B9C  6EF8               	movwf	tblptru,c
  8834  011B9E                     	endif
  8835                           
  8836                           ;stkvar	_c @ sp[(-32)+31]
  8837  011B9E  0008               	tblrd		*
  8838  011BA0  0EFF               	movlw	-1
  8839  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8840                           
  8841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8842                           ;stkvar	_fmt @ sp[(-32)+-4]
  8843  011BA8  0EDC               	movlw	-36
  8844  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8845  011BB0  0EDD               	movlw	-35
  8846  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8847  011BB8  2ADE               	incf	postinc2,f,c
  8848  011BBA  0E00               	movlw	0
  8849  011BBC  22DD               	addwfc	postdec2,f,c
  8850                           
  8851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8852                           ;stkvar	_ap @ sp[(-32)+-6]
  8853  011BBE  0EDA               	movlw	-38
  8854  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8855  011BC6  0EDB               	movlw	-37
  8856  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8857  011BCE  0E02               	movlw	2
  8858  011BD0  5EDE               	subwf	postinc2,f,c
  8859  011BD2  0E00               	movlw	0
  8860  011BD4  5ADD               	subwfb	postdec2,f,c
  8861  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8862  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8863  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8864  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8865  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8866  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8867  011BFA  503C               	movf	(btemp+10)^0,w,c
  8868  011BFC  6E42               	movwf	(btemp+16)^0,c
  8869  011BFE  503D               	movf	(btemp+11)^0,w,c
  8870  011C00  6E43               	movwf	(btemp+17)^0,c
  8871  011C02  6A44               	clrf	(btemp+18)^0,c
  8872  011C04  6A45               	clrf	(btemp+19)^0,c
  8873  011C06  6A46               	clrf	(btemp+20)^0,c
  8874  011C08  6A47               	clrf	(btemp+21)^0,c
  8875  011C0A  6A48               	clrf	(btemp+22)^0,c
  8876  011C0C  6A49               	clrf	(btemp+23)^0,c
  8877                           
  8878                           ;stkvar	_llu @ sp[(-32)+6]
  8879  011C0E  0EE6               	movlw	-26
  8880  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8881  011C16  0EE7               	movlw	-25
  8882  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8883  011C1E  0EE8               	movlw	-24
  8884  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8885  011C26  0EE9               	movlw	-23
  8886  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8887  011C2E  0EEA               	movlw	-22
  8888  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8889  011C36  0EEB               	movlw	-21
  8890  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8891  011C3E  0EEC               	movlw	-20
  8892  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8893  011C46  0EED               	movlw	-19
  8894  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8895                           
  8896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8897                           ;stkvar	_c @ sp[(-32)+31]
  8898  011C4E  0EFF               	movlw	-1
  8899  011C50  50E3               	movf	plusw1,w,c
  8900  011C52  6EE6               	movwf	postinc1,c
  8901                           
  8902                           ;stkvar	_llu @ sp[(-33)+6]
  8903  011C54  50E1               	movf	fsr1l,w,c
  8904  011C56  0FE5               	addlw	-27
  8905  011C58  6ED9               	movwf	fsr2l,c
  8906  011C5A  50E2               	movf	fsr1h,w,c
  8907  011C5C  6EDA               	movwf	fsr2h,c
  8908  011C5E  0EFF               	movlw	255
  8909  011C60  22DA               	addwfc	fsr2h,f,c
  8910  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8911  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8912  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8913  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8914  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8915  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8916  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8917  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8918                           
  8919                           ;stkvar	_fp @ sp[(-41)+-2]
  8920  011C92  0ED5               	movlw	-43
  8921  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8922  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8923  011CA0  EC04  F0A1         	call	_xtoa	;wreg free
  8924  011CA4  D069               	goto	l2053
  8925  011CA6                     l10181:
  8926                           
  8927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8928                           ;stkvar	_fmt @ sp[(-32)+-4]
  8929  011CA6  0EDC               	movlw	-36
  8930  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8931  011CAE  0EDD               	movlw	-35
  8932  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8933  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8934  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8935  011CC2                     	if	0	;tblptru may be non-zero
  8936  011CC2                     	endif
  8937  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8938  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8939  011CC4  6EF8               	movwf	tblptru,c
  8940  011CC6                     	endif
  8941  011CC6  0008               	tblrd		*
  8942  011CC8  50F5               	movf	tablat,w,c
  8943  011CCA  0A25               	xorlw	37
  8944  011CCC  A4D8               	btfss	status,2,c
  8945  011CCE  D01A               	goto	l10191
  8946                           
  8947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8948                           ;stkvar	_fmt @ sp[(-32)+-4]
  8949  011CD0  0EDC               	movlw	-36
  8950  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8951  011CD8  0EDD               	movlw	-35
  8952  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8953  011CE0  2ADE               	incf	postinc2,f,c
  8954  011CE2  0E00               	movlw	0
  8955  011CE4  22DD               	addwfc	postdec2,f,c
  8956                           
  8957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8958                           ;stkvar	_fp @ sp[(-32)+-2]
  8959  011CE6  0EDE               	movlw	-34
  8960  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8961  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8962  011CF4  0E25               	movlw	37
  8963  011CF6  6EE6               	movwf	postinc1,c
  8964  011CF8  0E00               	movlw	0
  8965  011CFA  6EE6               	movwf	postinc1,c
  8966  011CFC  EC59  F0B4         	call	_fputc	;wreg free
  8967  011D00                     l10187:
  8968                           
  8969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8970  011D00  0E01               	movlw	1
  8971  011D02  D00C               	goto	L6
  8972  011D04                     l10191:
  8973                           
  8974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8975                           ;stkvar	_fmt @ sp[(-32)+-4]
  8976  011D04  0EDC               	movlw	-36
  8977  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8978  011D0C  0EDD               	movlw	-35
  8979  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8980  011D14  2ADE               	incf	postinc2,f,c
  8981  011D16  0E00               	movlw	0
  8982  011D18  22DD               	addwfc	postdec2,f,c
  8983                           
  8984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8985  011D1A  0E00               	movlw	0
  8986  011D1C                     L6:
  8987  011D1C  6E32               	movwf	btemp^0,c
  8988  011D1E  0E00               	movlw	0
  8989  011D20  6E33               	movwf	(btemp+1)^0,c
  8990  011D22  D02A               	goto	l2053
  8991  011D24                     l10197:
  8992                           
  8993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8994                           ;stkvar	_fp @ sp[(-32)+-2]
  8995  011D24  0EDE               	movlw	-34
  8996  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8997  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8998                           
  8999                           ;stkvar	_fmt @ sp[(-34)+-4]
  9000  011D32  0EDA               	movlw	-38
  9001  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9002  011D3A  0EDB               	movlw	-37
  9003  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9004  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9005  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9006  011D4E                     	if	0	;tblptru may be non-zero
  9007  011D4E                     	endif
  9008  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9009  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9010  011D50  6EF8               	movwf	tblptru,c
  9011  011D52                     	endif
  9012  011D52  0008               	tblrd		*
  9013  011D54  50F5               	movf	tablat,w,c
  9014  011D56  6EE6               	movwf	postinc1,c
  9015  011D58  0E00               	movlw	0
  9016  011D5A  6EE6               	movwf	postinc1,c
  9017  011D5C  EC59  F0B4         	call	_fputc	;wreg free
  9018                           
  9019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9020                           ;stkvar	_fmt @ sp[(-32)+-4]
  9021  011D60  0EDC               	movlw	-36
  9022  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9023  011D68  0EDD               	movlw	-35
  9024  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9025  011D70  2ADE               	incf	postinc2,f,c
  9026  011D72  0E00               	movlw	0
  9027  011D74  22DD               	addwfc	postdec2,f,c
  9028  011D76  D7C4               	goto	l10187
  9029  011D78                     l2053:
  9030                           
  9031                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9032  011D78  0EDA               	movlw	218
  9033  011D7A  26E1               	addwf	fsr1l,f,c
  9034  011D7C  0EFF               	movlw	255
  9035  011D7E  22E2               	addwfc	fsr1h,f,c
  9036  011D80  0012               	return		;funcret
  9037  011D82                     __end_of_vfpfcnvrt:
  9038                           	opt callstack 0
  9039                           
  9040 ;; *************** function _xtoa *****************
  9041 ;; Defined at:
  9042 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9045 ;;		 -> f(6), NULL(0), 
  9046 ;;  d               8  [STACK] unsigned long long 
  9047 ;;  x               1  [STACK] unsigned char 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  n               8  [STACK] unsigned long long 
  9050 ;;  c               2  [STACK] int 
  9051 ;;  i               2  [STACK] int 
  9052 ;;  w               2  [STACK] int 
  9053 ;;  p               2  [STACK] int 
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  2  [STACK] int 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/5
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;Total ram usage:        0 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:   11
  9070 ;; This function calls:
  9071 ;;		_isalpha
  9072 ;;		_isupper
  9073 ;;		_pad
  9074 ;;		_toupper
  9075 ;; This function is called by:
  9076 ;;		_vfpfcnvrt
  9077 ;; This function uses a reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text40
  9081  014208                     __ptext40:
  9082                           	opt callstack 0
  9083  014208                     _xtoa:
  9084                           	opt callstack 0
  9085                           
  9086                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9087  014208  0E14               	movlw	20
  9088  01420A  26E1               	addwf	fsr1l,f,c
  9089  01420C  0E00               	movlw	0
  9090  01420E  22E2               	addwfc	fsr1h,f,c
  9091                           
  9092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9093                           
  9094                           ;incstack = 0
  9095  014210  AE1E               	btfss	(_prec+1)^0,7,c
  9096                           
  9097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9098  014212  921F               	bcf	_flags^0,1,c
  9099                           
  9100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9101  014214  BE1E               	btfsc	(_prec+1)^0,7,c
  9102  014216  D005               	goto	u9880
  9103  014218  501E               	movf	(_prec+1)^0,w,c
  9104  01421A  E110               	bnz	l9979
  9105  01421C  041D               	decf	_prec^0,w,c
  9106  01421E  B0D8               	btfsc	status,0,c
  9107  014220  D00D               	goto	l9979
  9108  014222                     u9880:
  9109  014222  0E01               	movlw	1
  9110  014224  6E3C               	movwf	(btemp+10)^0,c
  9111  014226  0E00               	movlw	0
  9112  014228  6E3D               	movwf	(btemp+11)^0,c
  9113                           
  9114                           ;stkvar	_p @ sp[(-20)+18]
  9115  01422A  0EFE               	movlw	-2
  9116  01422C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9117  014232  0EFF               	movlw	-1
  9118  014234  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9119  01423A  D008               	goto	l2003
  9120  01423C                     l9979:
  9121                           
  9122                           ;stkvar	_p @ sp[(-20)+18]
  9123  01423C  0EFE               	movlw	-2
  9124  01423E  0060  F077  FFE3   	movff	_prec,plusw1
  9125  014244  0EFF               	movlw	-1
  9126  014246  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9127  01424C                     l2003:
  9128                           
  9129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9130                           ;stkvar	_w @ sp[(-20)+16]
  9131  01424C  0EFC               	movlw	-4
  9132  01424E  0060  F06F  FFE3   	movff	_width,plusw1
  9133  014254  0EFD               	movlw	-3
  9134  014256  0060  F073  FFE3   	movff	_width+1,plusw1
  9135                           
  9136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9137  01425C  A81F               	btfss	_flags^0,4,c
  9138  01425E  D00B               	goto	l9985
  9139                           
  9140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9141                           ;stkvar	_w @ sp[(-20)+16]
  9142  014260  50E1               	movf	fsr1l,w,c
  9143  014262  0FFC               	addlw	-4
  9144  014264  6ED9               	movwf	fsr2l,c
  9145  014266  50E2               	movf	fsr1h,w,c
  9146  014268  6EDA               	movwf	fsr2h,c
  9147  01426A  0EFF               	movlw	255
  9148  01426C  22DA               	addwfc	fsr2h,f,c
  9149  01426E  0EFE               	movlw	254
  9150  014270  26DE               	addwf	postinc2,f,c
  9151  014272  0EFF               	movlw	255
  9152  014274  22DD               	addwfc	postdec2,f,c
  9153  014276                     l9985:
  9154                           
  9155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9156                           ;stkvar	_d @ sp[(-20)+-10]
  9157  014276  0EE2               	movlw	226
  9158  014278  24E1               	addwf	fsr1l,w,c
  9159  01427A  6ED9               	movwf	fsr2l,c
  9160  01427C  0EFF               	movlw	255
  9161  01427E  20E2               	addwfc	fsr1h,w,c
  9162  014280  6EDA               	movwf	fsr2h,c
  9163                           
  9164                           ;stkvar	_n @ sp[(-20)+4]
  9165  014282  0E08               	movlw	8
  9166  014284  6E32               	movwf	btemp^0,c
  9167  014286  0EF0               	movlw	-16
  9168  014288                     us990999:
  9169  014288  006F FF7B FFE3     	movff	postinc2,plusw1
  9170  01428E  28E8               	incf	wreg,w,c
  9171  014290  2E32               	decfsz	btemp^0,f,c
  9172  014292  D7FA               	bra	us990999
  9173                           
  9174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9175  014294  0E4F               	movlw	79
  9176  014296  6E3C               	movwf	(btemp+10)^0,c
  9177  014298  0E00               	movlw	0
  9178  01429A  6E3D               	movwf	(btemp+11)^0,c
  9179                           
  9180                           ;stkvar	_i @ sp[(-20)+14]
  9181  01429C  0EFA               	movlw	-6
  9182  01429E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9183  0142A4  0EFB               	movlw	-5
  9184  0142A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9185                           
  9186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9187  0142AC  0101               	movlb	1	; () banked
  9188  0142AE  6BCB               	clrf	(_dbuf+79)& (0+255),b
  9189                           
  9190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9191  0142B0  D0EE               	goto	l10023
  9192  0142B2                     l9991:
  9193                           
  9194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9195                           ;stkvar	_i @ sp[(-20)+14]
  9196  0142B2  50E1               	movf	fsr1l,w,c
  9197  0142B4  0FFA               	addlw	-6
  9198  0142B6  6ED9               	movwf	fsr2l,c
  9199  0142B8  50E2               	movf	fsr1h,w,c
  9200  0142BA  6EDA               	movwf	fsr2h,c
  9201  0142BC  0EFF               	movlw	255
  9202  0142BE  22DA               	addwfc	fsr2h,f,c
  9203  0142C0  06DE               	decf	postinc2,f,c
  9204  0142C2  0E00               	movlw	0
  9205  0142C4  5ADD               	subwfb	postdec2,f,c
  9206                           
  9207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9208                           ;stkvar	_n @ sp[(-20)+4]
  9209  0142C6  0EF0               	movlw	-16
  9210  0142C8  006F FF8C  F03C    	movff	plusw1,btemp+10
  9211  0142CE  0EF1               	movlw	-15
  9212  0142D0  006F FF8C  F03D    	movff	plusw1,btemp+11
  9213  0142D6  0E0F               	movlw	15
  9214  0142D8  163C               	andwf	(btemp+10)^0,f,c
  9215  0142DA  0E00               	movlw	0
  9216  0142DC  163D               	andwf	(btemp+11)^0,f,c
  9217                           
  9218                           ;stkvar	_c @ sp[(-20)+12]
  9219  0142DE  0EF8               	movlw	-8
  9220  0142E0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9221  0142E6  0EF9               	movlw	-7
  9222  0142E8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9223                           
  9224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9225                           ;stkvar	_c @ sp[(-20)+12]
  9226  0142EE  0EF9               	movlw	-7
  9227  0142F0  BEE3               	btfsc	plusw1,7,c
  9228  0142F2  D00F               	goto	l9999
  9229  0142F4  0EF9               	movlw	-7
  9230  0142F6  50E3               	movf	plusw1,w,c
  9231  0142F8  E108               	bnz	u9910
  9232  0142FA  0EF8               	movlw	-8
  9233  0142FC  006F FF8C  F032    	movff	plusw1,btemp
  9234  014302  0E0A               	movlw	10
  9235  014304  5E32               	subwf	btemp^0,f,c
  9236  014306  A0D8               	btfss	status,0,c
  9237  014308  D004               	goto	l9999
  9238  01430A                     u9910:
  9239                           
  9240                           ;stkvar	_c @ sp[(-20)+12]
  9241  01430A  0EF8               	movlw	-8
  9242  01430C  50E3               	movf	plusw1,w,c
  9243  01430E  0F57               	addlw	87
  9244  014310  D003               	goto	L7
  9245  014312                     l9999:
  9246                           
  9247                           ;stkvar	_c @ sp[(-20)+12]
  9248  014312  0EF8               	movlw	-8
  9249  014314  50E3               	movf	plusw1,w,c
  9250  014316  0F30               	addlw	48
  9251  014318                     L7:
  9252  014318  6E3C               	movwf	(btemp+10)^0,c
  9253  01431A  0EF9               	movlw	-7
  9254  01431C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9255  014322  0E00               	movlw	0
  9256  014324  223D               	addwfc	(btemp+11)^0,f,c
  9257                           
  9258                           ;stkvar	_c @ sp[(-20)+12]
  9259  014326  0EF8               	movlw	-8
  9260  014328  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9261  01432E  0EF9               	movlw	-7
  9262  014330  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9263  014336  0EBF               	movlw	191
  9264  014338  6E3C               	movwf	(btemp+10)^0,c
  9265  01433A  0EFF               	movlw	255
  9266  01433C  6E3D               	movwf	(btemp+11)^0,c
  9267                           
  9268                           ;stkvar	_x @ sp[(-20)+-11]
  9269  01433E  0EE1               	movlw	-31
  9270  014340  50E3               	movf	plusw1,w,c
  9271  014342  6E3A               	movwf	(btemp+8)^0,c
  9272  014344  6A3B               	clrf	(btemp+9)^0,c
  9273  014346  503C               	movf	(btemp+10)^0,w,c
  9274  014348  263A               	addwf	(btemp+8)^0,f,c
  9275  01434A  503D               	movf	(btemp+11)^0,w,c
  9276  01434C  223B               	addwfc	(btemp+9)^0,f,c
  9277  01434E  503B               	movf	(btemp+9)^0,w,c
  9278  014350  E106               	bnz	u9920
  9279  014352  0E1A               	movlw	26
  9280  014354  5C3A               	subwf	(btemp+8)^0,w,c
  9281  014356  B0D8               	btfsc	status,0,c
  9282  014358  D002               	goto	u9920
  9283  01435A  0E01               	movlw	1
  9284  01435C  D001               	goto	u9930
  9285  01435E                     u9920:
  9286  01435E  0E00               	movlw	0
  9287  014360                     u9930:
  9288  014360  6E3C               	movwf	(btemp+10)^0,c
  9289  014362  6A3D               	clrf	(btemp+11)^0,c
  9290                           
  9291                           ;stkvar	_xtoa$4538 @ sp[(-20)+2]
  9292  014364  0EEE               	movlw	-18
  9293  014366  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9294  01436C  0EEF               	movlw	-17
  9295  01436E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9296                           
  9297                           ;stkvar	_xtoa$4538 @ sp[(-20)+2]
  9298  014374  0EEE               	movlw	-18
  9299  014376  006F FF8C  F032    	movff	plusw1,btemp
  9300  01437C  0EEF               	movlw	-17
  9301  01437E  50E3               	movf	plusw1,w,c
  9302  014380  1032               	iorwf	btemp^0,w,c
  9303  014382  B4D8               	btfsc	status,2,c
  9304  014384  D041               	goto	l10015
  9305  014386  0E9F               	movlw	159
  9306  014388  6E3C               	movwf	(btemp+10)^0,c
  9307  01438A  0EFF               	movlw	255
  9308  01438C  6E3D               	movwf	(btemp+11)^0,c
  9309                           
  9310                           ;stkvar	_c @ sp[(-20)+12]
  9311  01438E  0EF8               	movlw	-8
  9312  014390  006F FF8C  F03A    	movff	plusw1,btemp+8
  9313  014396  0EF9               	movlw	-7
  9314  014398  006F FF8C  F03B    	movff	plusw1,btemp+9
  9315  01439E  0E20               	movlw	32
  9316  0143A0  123A               	iorwf	(btemp+8)^0,f,c
  9317  0143A2  0E00               	movlw	0
  9318  0143A4  123B               	iorwf	(btemp+9)^0,f,c
  9319  0143A6  503C               	movf	(btemp+10)^0,w,c
  9320  0143A8  263A               	addwf	(btemp+8)^0,f,c
  9321  0143AA  503D               	movf	(btemp+11)^0,w,c
  9322  0143AC  223B               	addwfc	(btemp+9)^0,f,c
  9323  0143AE  503B               	movf	(btemp+9)^0,w,c
  9324  0143B0  E106               	bnz	u9950
  9325  0143B2  0E1A               	movlw	26
  9326  0143B4  5C3A               	subwf	(btemp+8)^0,w,c
  9327  0143B6  B0D8               	btfsc	status,0,c
  9328  0143B8  D002               	goto	u9950
  9329  0143BA  0E01               	movlw	1
  9330  0143BC  D001               	goto	u9960
  9331  0143BE                     u9950:
  9332  0143BE  0E00               	movlw	0
  9333  0143C0                     u9960:
  9334  0143C0  6E3C               	movwf	(btemp+10)^0,c
  9335  0143C2  6A3D               	clrf	(btemp+11)^0,c
  9336                           
  9337                           ;stkvar	_xtoa$4539 @ sp[(-20)+0]
  9338  0143C4  0EEC               	movlw	-20
  9339  0143C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9340  0143CC  0EED               	movlw	-19
  9341  0143CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9342                           
  9343                           ;stkvar	_xtoa$4539 @ sp[(-20)+0]
  9344  0143D4  0EEC               	movlw	-20
  9345  0143D6  006F FF8C  F032    	movff	plusw1,btemp
  9346  0143DC  0EED               	movlw	-19
  9347  0143DE  50E3               	movf	plusw1,w,c
  9348  0143E0  1032               	iorwf	btemp^0,w,c
  9349  0143E2  B4D8               	btfsc	status,2,c
  9350  0143E4  D011               	goto	l10015
  9351                           
  9352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9353                           ;stkvar	_c @ sp[(-20)+12]
  9354  0143E6  0EF8               	movlw	-8
  9355  0143E8  006F FF8F FFE6     	movff	plusw1,postinc1
  9356  0143EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9357  0143F4  EC5E  F0BC         	call	_toupper	;wreg free
  9358                           
  9359                           ;stkvar	_c @ sp[(-20)+12]
  9360  0143F8  0EF8               	movlw	-8
  9361  0143FA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9362  014400  0EF9               	movlw	-7
  9363  014402  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9364  014408                     l10015:
  9365                           
  9366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9367                           ;stkvar	_c @ sp[(-20)+12]
  9368                           ;stkvar	_i @ sp[(-20)+14]
  9369  014408  0EFA               	movlw	-6
  9370  01440A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9371  014410  0EFB               	movlw	-5
  9372  014412  006F FF8C  F03D    	movff	plusw1,btemp+11
  9373  014418  0E7C               	movlw	low _dbuf
  9374  01441A  243C               	addwf	(btemp+10)^0,w,c
  9375  01441C  6ED9               	movwf	fsr2l,c
  9376  01441E  0E01               	movlw	high _dbuf
  9377  014420  203D               	addwfc	(btemp+11)^0,w,c
  9378  014422  6EDA               	movwf	fsr2h,c
  9379  014424  0EF8               	movlw	-8
  9380  014426  006F FF8F FFDF     	movff	plusw1,indf2
  9381                           
  9382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9383                           ;stkvar	_p @ sp[(-20)+18]
  9384  01442C  50E1               	movf	fsr1l,w,c
  9385  01442E  0FFE               	addlw	-2
  9386  014430  6ED9               	movwf	fsr2l,c
  9387  014432  50E2               	movf	fsr1h,w,c
  9388  014434  6EDA               	movwf	fsr2h,c
  9389  014436  0EFF               	movlw	255
  9390  014438  22DA               	addwfc	fsr2h,f,c
  9391  01443A  06DE               	decf	postinc2,f,c
  9392  01443C  0E00               	movlw	0
  9393  01443E  5ADD               	subwfb	postdec2,f,c
  9394                           
  9395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9396                           ;stkvar	_w @ sp[(-20)+16]
  9397  014440  50E1               	movf	fsr1l,w,c
  9398  014442  0FFC               	addlw	-4
  9399  014444  6ED9               	movwf	fsr2l,c
  9400  014446  50E2               	movf	fsr1h,w,c
  9401  014448  6EDA               	movwf	fsr2h,c
  9402  01444A  0EFF               	movlw	255
  9403  01444C  22DA               	addwfc	fsr2h,f,c
  9404  01444E  06DE               	decf	postinc2,f,c
  9405  014450  0E00               	movlw	0
  9406  014452  5ADD               	subwfb	postdec2,f,c
  9407                           
  9408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9409  014454  0E04               	movlw	4
  9410  014456  6E3D               	movwf	(btemp+11)^0,c
  9411                           
  9412                           ;stkvar	_n @ sp[(-20)+4]
  9413  014458  50E1               	movf	fsr1l,w,c
  9414  01445A  0FF0               	addlw	-16
  9415  01445C  6ED9               	movwf	fsr2l,c
  9416  01445E  50E2               	movf	fsr1h,w,c
  9417  014460  6EDA               	movwf	fsr2h,c
  9418  014462  0EFF               	movlw	255
  9419  014464  22DA               	addwfc	fsr2h,f,c
  9420  014466  283D               	incf	(btemp+11)^0,w,c
  9421  014468  52DE               	movf	postinc2,f,c
  9422  01446A  D00F               	goto	u9980
  9423  01446C                     u9985:
  9424  01446C  52DE               	movf	postinc2,f,c
  9425  01446E  52DE               	movf	postinc2,f,c
  9426  014470  52DE               	movf	postinc2,f,c
  9427  014472  52DE               	movf	postinc2,f,c
  9428  014474  52DE               	movf	postinc2,f,c
  9429  014476  52DE               	movf	postinc2,f,c
  9430  014478  90D8               	bcf	status,0,c
  9431  01447A  32DD               	rrcf	postdec2,f,c
  9432  01447C  32DD               	rrcf	postdec2,f,c
  9433  01447E  32DD               	rrcf	postdec2,f,c
  9434  014480  32DD               	rrcf	postdec2,f,c
  9435  014482  32DD               	rrcf	postdec2,f,c
  9436  014484  32DD               	rrcf	postdec2,f,c
  9437  014486  32DD               	rrcf	postdec2,f,c
  9438  014488  32DE               	rrcf	postinc2,f,c
  9439  01448A                     u9980:
  9440  01448A  2EE8               	decfsz	wreg,f,c
  9441  01448C  D7EF               	goto	u9985
  9442  01448E                     l10023:
  9443                           
  9444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9445                           ;stkvar	_i @ sp[(-20)+14]
  9446  01448E  0EFB               	movlw	-5
  9447  014490  BEE3               	btfsc	plusw1,7,c
  9448  014492  D03A               	goto	u10030
  9449  014494  0EFB               	movlw	-5
  9450  014496  50E3               	movf	plusw1,w,c
  9451  014498  E108               	bnz	u9990
  9452  01449A  0EFA               	movlw	-6
  9453  01449C  006F FF8C  F032    	movff	plusw1,btemp
  9454  0144A2  0E02               	movlw	2
  9455  0144A4  5E32               	subwf	btemp^0,f,c
  9456  0144A6  A0D8               	btfss	status,0,c
  9457  0144A8  D02F               	goto	u10030
  9458  0144AA                     u9990:
  9459                           
  9460                           ;stkvar	_n @ sp[(-20)+4]
  9461  0144AA  0EF0               	movlw	-16
  9462  0144AC  50E3               	movf	plusw1,w,c
  9463  0144AE  E115               	bnz	u10001
  9464  0144B0  0EF1               	movlw	-15
  9465  0144B2  50E3               	movf	plusw1,w,c
  9466  0144B4  E112               	bnz	u10001
  9467  0144B6  0EF2               	movlw	-14
  9468  0144B8  50E3               	movf	plusw1,w,c
  9469  0144BA  E10F               	bnz	u10001
  9470  0144BC  0EF3               	movlw	-13
  9471  0144BE  50E3               	movf	plusw1,w,c
  9472  0144C0  E10C               	bnz	u10001
  9473  0144C2  0EF4               	movlw	-12
  9474  0144C4  50E3               	movf	plusw1,w,c
  9475  0144C6  E109               	bnz	u10001
  9476  0144C8  0EF5               	movlw	-11
  9477  0144CA  50E3               	movf	plusw1,w,c
  9478  0144CC  E106               	bnz	u10001
  9479  0144CE  0EF6               	movlw	-10
  9480  0144D0  50E3               	movf	plusw1,w,c
  9481  0144D2  E103               	bnz	u10001
  9482  0144D4  0EF7               	movlw	-9
  9483  0144D6  50E3               	movf	plusw1,w,c
  9484  0144D8  A4D8               	btfss	status,2,c
  9485  0144DA                     u10001:
  9486  0144DA  D6EB               	goto	l9991
  9487                           
  9488                           ;stkvar	_p @ sp[(-20)+18]
  9489  0144DC  0EFF               	movlw	-1
  9490  0144DE  BEE3               	btfsc	plusw1,7,c
  9491  0144E0  D007               	goto	u10010
  9492  0144E2  0EFF               	movlw	-1
  9493  0144E4  50E3               	movf	plusw1,w,c
  9494  0144E6  E103               	bnz	u10011
  9495  0144E8  0EFE               	movlw	-2
  9496  0144EA  04E3               	decf	plusw1,w,c
  9497  0144EC  B0D8               	btfsc	status,0,c
  9498  0144EE                     u10011:
  9499  0144EE  D6E1               	goto	l9991
  9500  0144F0                     u10010:
  9501                           
  9502                           ;stkvar	_w @ sp[(-20)+16]
  9503  0144F0  0EFD               	movlw	-3
  9504  0144F2  BEE3               	btfsc	plusw1,7,c
  9505  0144F4  D009               	goto	u10030
  9506  0144F6  0EFD               	movlw	-3
  9507  0144F8  50E3               	movf	plusw1,w,c
  9508  0144FA  E104               	bnz	u10020
  9509  0144FC  0EFC               	movlw	-4
  9510  0144FE  04E3               	decf	plusw1,w,c
  9511  014500  A0D8               	btfss	status,0,c
  9512  014502  D002               	goto	u10030
  9513  014504                     u10020:
  9514  014504  B21F               	btfsc	_flags^0,1,c
  9515  014506  D6D5               	goto	l9991
  9516  014508                     u10030:
  9517                           
  9518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9519  014508  A81F               	btfss	_flags^0,4,c
  9520  01450A  D036               	goto	l10039
  9521                           
  9522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9523                           ;stkvar	_i @ sp[(-20)+14]
  9524  01450C  50E1               	movf	fsr1l,w,c
  9525  01450E  0FFA               	addlw	-6
  9526  014510  6ED9               	movwf	fsr2l,c
  9527  014512  50E2               	movf	fsr1h,w,c
  9528  014514  6EDA               	movwf	fsr2h,c
  9529  014516  0EFF               	movlw	255
  9530  014518  22DA               	addwfc	fsr2h,f,c
  9531  01451A  06DE               	decf	postinc2,f,c
  9532  01451C  0E00               	movlw	0
  9533  01451E  5ADD               	subwfb	postdec2,f,c
  9534                           
  9535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9536                           ;stkvar	_x @ sp[(-20)+-11]
  9537                           ;stkvar	_i @ sp[(-20)+14]
  9538  014520  0EFA               	movlw	-6
  9539  014522  006F FF8C  F03C    	movff	plusw1,btemp+10
  9540  014528  0EFB               	movlw	-5
  9541  01452A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9542  014530  0E7C               	movlw	low _dbuf
  9543  014532  243C               	addwf	(btemp+10)^0,w,c
  9544  014534  6ED9               	movwf	fsr2l,c
  9545  014536  0E01               	movlw	high _dbuf
  9546  014538  203D               	addwfc	(btemp+11)^0,w,c
  9547  01453A  6EDA               	movwf	fsr2h,c
  9548  01453C  0EE1               	movlw	-31
  9549  01453E  006F FF8F FFDF     	movff	plusw1,indf2
  9550                           
  9551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9552                           ;stkvar	_i @ sp[(-20)+14]
  9553  014544  50E1               	movf	fsr1l,w,c
  9554  014546  0FFA               	addlw	-6
  9555  014548  6ED9               	movwf	fsr2l,c
  9556  01454A  50E2               	movf	fsr1h,w,c
  9557  01454C  6EDA               	movwf	fsr2h,c
  9558  01454E  0EFF               	movlw	255
  9559  014550  22DA               	addwfc	fsr2h,f,c
  9560  014552  06DE               	decf	postinc2,f,c
  9561  014554  0E00               	movlw	0
  9562  014556  5ADD               	subwfb	postdec2,f,c
  9563                           
  9564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9565                           ;stkvar	_i @ sp[(-20)+14]
  9566  014558  0EFA               	movlw	-6
  9567  01455A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9568  014560  0EFB               	movlw	-5
  9569  014562  006F FF8C  F03D    	movff	plusw1,btemp+11
  9570  014568  0E7C               	movlw	low _dbuf
  9571  01456A  243C               	addwf	(btemp+10)^0,w,c
  9572  01456C  6ED9               	movwf	fsr2l,c
  9573  01456E  0E01               	movlw	high _dbuf
  9574  014570  203D               	addwfc	(btemp+11)^0,w,c
  9575  014572  6EDA               	movwf	fsr2h,c
  9576  014574  0E30               	movlw	48
  9577  014576  6EDF               	movwf	indf2,c
  9578  014578                     l10039:
  9579                           
  9580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9581                           ;stkvar	_w @ sp[(-20)+16]
  9582  014578  0EFC               	movlw	-4
  9583  01457A  006F FF8F FFE6     	movff	plusw1,postinc1
  9584  014580  006F FF8F FFE6     	movff	plusw1,postinc1
  9585                           
  9586                           ;stkvar	_i @ sp[(-22)+14]
  9587  014586  0E7C               	movlw	low _dbuf
  9588  014588  6E3C               	movwf	(btemp+10)^0,c
  9589  01458A  0E01               	movlw	high _dbuf
  9590  01458C  6E3D               	movwf	(btemp+11)^0,c
  9591  01458E  0EF8               	movlw	-8
  9592  014590  50E3               	movf	plusw1,w,c
  9593  014592  263C               	addwf	(btemp+10)^0,f,c
  9594  014594  0EF9               	movlw	-7
  9595  014596  50E3               	movf	plusw1,w,c
  9596  014598  223D               	addwfc	(btemp+11)^0,f,c
  9597  01459A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9598  0145A0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9599                           
  9600                           ;stkvar	_fp @ sp[(-24)+-2]
  9601  0145A6  0EE6               	movlw	-26
  9602  0145A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9603  0145AE  006F FF8F FFE6     	movff	plusw1,postinc1
  9604  0145B4  EC77  F0B5         	call	_pad	;wreg free
  9605                           
  9606                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9607  0145B8  0EE1               	movlw	225
  9608  0145BA  26E1               	addwf	fsr1l,f,c
  9609  0145BC  0EFF               	movlw	255
  9610  0145BE  22E2               	addwfc	fsr1h,f,c
  9611  0145C0  0012               	return		;funcret
  9612  0145C2                     __end_of_xtoa:
  9613                           	opt callstack 0
  9614                           
  9615 ;; *************** function _toupper *****************
  9616 ;; Defined at:
  9617 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  c               2  [STACK] int 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;		None
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  2  [STACK] int 
  9624 ;; Registers used:
  9625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/1
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9635 ;;Total ram usage:        0 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:    7
  9638 ;; This function calls:
  9639 ;;		_islower
  9640 ;; This function is called by:
  9641 ;;		_xtoa
  9642 ;; This function uses a reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text41
  9646  0178BC                     __ptext41:
  9647                           	opt callstack 0
  9648  0178BC                     _toupper:
  9649                           	opt callstack 0
  9650                           
  9651                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9652  0178BC  52E6               	movf	postinc1,f,c
  9653  0178BE  52E6               	movf	postinc1,f,c
  9654                           
  9655                           ;stkvar	_c @ sp[(-2)+-2]
  9656                           
  9657                           ;incstack = 0
  9658  0178C0  0EFC               	movlw	-4
  9659  0178C2  50E3               	movf	plusw1,w,c
  9660  0178C4  0F9F               	addlw	159
  9661  0178C6  6E3C               	movwf	(btemp+10)^0,c
  9662  0178C8  0EFD               	movlw	-3
  9663  0178CA  006F FF8C  F03D    	movff	plusw1,btemp+11
  9664  0178D0  0EFF               	movlw	255
  9665  0178D2  223D               	addwfc	(btemp+11)^0,f,c
  9666  0178D4  503D               	movf	(btemp+11)^0,w,c
  9667  0178D6  E106               	bnz	u5320
  9668  0178D8  0E1A               	movlw	26
  9669  0178DA  5C3C               	subwf	(btemp+10)^0,w,c
  9670  0178DC  B0D8               	btfsc	status,0,c
  9671  0178DE  D002               	goto	u5320
  9672  0178E0  0E01               	movlw	1
  9673  0178E2  D001               	goto	u5330
  9674  0178E4                     u5320:
  9675  0178E4  0E00               	movlw	0
  9676  0178E6                     u5330:
  9677  0178E6  6E3C               	movwf	(btemp+10)^0,c
  9678  0178E8  6A3D               	clrf	(btemp+11)^0,c
  9679                           
  9680                           ;stkvar	_toupper$5199 @ sp[(-2)+0]
  9681  0178EA  0EFE               	movlw	-2
  9682  0178EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9683  0178F2  0EFF               	movlw	-1
  9684  0178F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9685                           
  9686                           ;stkvar	_toupper$5199 @ sp[(-2)+0]
  9687  0178FA  0EFE               	movlw	-2
  9688  0178FC  006F FF8C  F032    	movff	plusw1,btemp
  9689  017902  0EFF               	movlw	-1
  9690  017904  50E3               	movf	plusw1,w,c
  9691  017906  1032               	iorwf	btemp^0,w,c
  9692  017908  B4D8               	btfsc	status,2,c
  9693  01790A  D00D               	goto	l6631
  9694                           
  9695                           ;stkvar	_c @ sp[(-2)+-2]
  9696  01790C  0EFC               	movlw	-4
  9697  01790E  006F FF8C  F032    	movff	plusw1,btemp
  9698  017914  0EFD               	movlw	-3
  9699  017916  006F FF8C  F033    	movff	plusw1,btemp+1
  9700  01791C  0E5F               	movlw	95
  9701  01791E  1632               	andwf	btemp^0,f,c
  9702  017920  0E00               	movlw	0
  9703  017922  1633               	andwf	(btemp+1)^0,f,c
  9704  017924  D008               	goto	l2936
  9705  017926                     l6631:
  9706                           
  9707                           ;stkvar	_c @ sp[(-2)+-2]
  9708  017926  0EFC               	movlw	-4
  9709  017928  006F FF8C  F032    	movff	plusw1,btemp
  9710  01792E  0EFD               	movlw	-3
  9711  017930  006F FF8C  F033    	movff	plusw1,btemp+1
  9712  017936                     l2936:
  9713                           
  9714                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9715  017936  52E5               	movf	postdec1,f,c
  9716  017938  52E5               	movf	postdec1,f,c
  9717  01793A  52E5               	movf	postdec1,f,c
  9718  01793C  52E5               	movf	postdec1,f,c
  9719  01793E  0012               	return		;funcret
  9720  017940                     __end_of_toupper:
  9721                           	opt callstack 0
  9722                           
  9723 ;; *************** function _islower *****************
  9724 ;; Defined at:
  9725 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9726 ;; Parameters:    Size  Location     Type
  9727 ;;  c               2  [STACK] int 
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;		None
  9730 ;; Return value:  Size  Location     Type
  9731 ;;                  2  [STACK] int 
  9732 ;; Registers used:
  9733 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9734 ;; Tracked objects:
  9735 ;;		On entry : 0/0
  9736 ;;		On exit  : 0/0
  9737 ;;		Unchanged: 0/0
  9738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9743 ;;Total ram usage:        0 bytes
  9744 ;; Hardware stack levels used:    1
  9745 ;; Hardware stack levels required when called:    6
  9746 ;; This function calls:
  9747 ;;		Nothing
  9748 ;; This function is called by:
  9749 ;;		_toupper
  9750 ;; This function uses a reentrant model
  9751 ;;
  9752                           
  9753                           	psect	text42
  9754  0183EE                     __ptext42:
  9755                           	opt callstack 0
  9756  0183EE                     _islower:
  9757                           	opt callstack 16
  9758                           
  9759                           ;stkvar	_c @ sp[(0)+-2]
  9760                           
  9761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9762                           ;incstack = 0
  9763  0183EE  0EFE               	movlw	-2
  9764  0183F0  50E3               	movf	plusw1,w,c
  9765  0183F2  0F9F               	addlw	159
  9766  0183F4  6E3C               	movwf	(btemp+10)^0,c
  9767  0183F6  0EFF               	movlw	-1
  9768  0183F8  006F FF8C  F03D    	movff	plusw1,btemp+11
  9769  0183FE  0EFF               	movlw	255
  9770  018400  223D               	addwfc	(btemp+11)^0,f,c
  9771  018402  503D               	movf	(btemp+11)^0,w,c
  9772  018404  E106               	bnz	u5010
  9773  018406  0E1A               	movlw	26
  9774  018408  5C3C               	subwf	(btemp+10)^0,w,c
  9775  01840A  B0D8               	btfsc	status,0,c
  9776  01840C  D002               	goto	u5010
  9777  01840E  0E01               	movlw	1
  9778  018410  D001               	goto	u5020
  9779  018412                     u5010:
  9780  018412  0E00               	movlw	0
  9781  018414                     u5020:
  9782  018414  6E32               	movwf	btemp^0,c
  9783  018416  6A33               	clrf	(btemp+1)^0,c
  9784                           
  9785                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9786  018418  52E5               	movf	postdec1,f,c
  9787  01841A  52E5               	movf	postdec1,f,c
  9788  01841C  0012               	return		;funcret
  9789  01841E                     __end_of_islower:
  9790                           	opt callstack 0
  9791                           
  9792 ;; *************** function _isalpha *****************
  9793 ;; Defined at:
  9794 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  c               2  [STACK] int 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;		None
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  2  [STACK] int 
  9801 ;; Registers used:
  9802 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9812 ;;Total ram usage:        0 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; Hardware stack levels required when called:    6
  9815 ;; This function calls:
  9816 ;;		Nothing
  9817 ;; This function is called by:
  9818 ;;		_xtoa
  9819 ;; This function uses a reentrant model
  9820 ;;
  9821                           
  9822                           	psect	text43
  9823  0181A2                     __ptext43:
  9824                           	opt callstack 0
  9825  0181A2                     _isalpha:
  9826                           	opt callstack 17
  9827                           
  9828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9829                           ;incstack = 0
  9830  0181A2  0E9F               	movlw	159
  9831  0181A4  6E3C               	movwf	(btemp+10)^0,c
  9832  0181A6  0EFF               	movlw	255
  9833  0181A8  6E3D               	movwf	(btemp+11)^0,c
  9834                           
  9835                           ;stkvar	_c @ sp[(0)+-2]
  9836  0181AA  0EFE               	movlw	-2
  9837  0181AC  006F FF8C  F03A    	movff	plusw1,btemp+8
  9838  0181B2  0EFF               	movlw	-1
  9839  0181B4  006F FF8C  F03B    	movff	plusw1,btemp+9
  9840  0181BA  0E20               	movlw	32
  9841  0181BC  123A               	iorwf	(btemp+8)^0,f,c
  9842  0181BE  0E00               	movlw	0
  9843  0181C0  123B               	iorwf	(btemp+9)^0,f,c
  9844  0181C2  503C               	movf	(btemp+10)^0,w,c
  9845  0181C4  263A               	addwf	(btemp+8)^0,f,c
  9846  0181C6  503D               	movf	(btemp+11)^0,w,c
  9847  0181C8  223B               	addwfc	(btemp+9)^0,f,c
  9848  0181CA  503B               	movf	(btemp+9)^0,w,c
  9849  0181CC  E106               	bnz	u5300
  9850  0181CE  0E1A               	movlw	26
  9851  0181D0  5C3A               	subwf	(btemp+8)^0,w,c
  9852  0181D2  B0D8               	btfsc	status,0,c
  9853  0181D4  D002               	goto	u5300
  9854  0181D6  0E01               	movlw	1
  9855  0181D8  D001               	goto	u5310
  9856  0181DA                     u5300:
  9857  0181DA  0E00               	movlw	0
  9858  0181DC                     u5310:
  9859  0181DC  6E32               	movwf	btemp^0,c
  9860  0181DE  6A33               	clrf	(btemp+1)^0,c
  9861                           
  9862                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9863  0181E0  52E5               	movf	postdec1,f,c
  9864  0181E2  52E5               	movf	postdec1,f,c
  9865  0181E4  0012               	return		;funcret
  9866  0181E6                     __end_of_isalpha:
  9867                           	opt callstack 0
  9868                           
  9869 ;; *************** function _strncmp *****************
  9870 ;; Defined at:
  9871 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  _l              2  [STACK] PTR const unsigned char 
  9874 ;;		 -> ct(3), 
  9875 ;;  _r              2  [STACK] PTR const unsigned char 
  9876 ;;		 -> STR_53(3), 
  9877 ;;  n               2  [STACK] unsigned int 
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;  r               2  [STACK] PTR const unsigned char 
  9880 ;;		 -> STR_53(3), 
  9881 ;;  l               2  [STACK] PTR const unsigned char 
  9882 ;;		 -> ct(3), 
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  2  [STACK] int 
  9885 ;; Registers used:
  9886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/5
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9896 ;;Total ram usage:        0 bytes
  9897 ;; Hardware stack levels used:    1
  9898 ;; Hardware stack levels required when called:    6
  9899 ;; This function calls:
  9900 ;;		Nothing
  9901 ;; This function is called by:
  9902 ;;		_vfpfcnvrt
  9903 ;; This function uses a reentrant model
  9904 ;;
  9905                           
  9906                           	psect	text44
  9907  015CFC                     __ptext44:
  9908                           	opt callstack 0
  9909  015CFC                     _strncmp:
  9910                           	opt callstack 0
  9911                           
  9912                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9913  015CFC  52E6               	movf	postinc1,f,c
  9914  015CFE  52E6               	movf	postinc1,f,c
  9915  015D00  52E6               	movf	postinc1,f,c
  9916  015D02  52E6               	movf	postinc1,f,c
  9917                           
  9918                           ;stkvar	__l @ sp[(-4)+-2]
  9919                           
  9920                           ;incstack = 0
  9921  015D04  0EFA               	movlw	-6
  9922  015D06  006F FF8C  F03C    	movff	plusw1,btemp+10
  9923  015D0C  0EFB               	movlw	-5
  9924  015D0E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9925                           
  9926                           ;stkvar	_l @ sp[(-4)+2]
  9927  015D14  0EFF               	movlw	-1
  9928  015D16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9929  015D1C  0EFE               	movlw	-2
  9930  015D1E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9931                           
  9932                           ;stkvar	__r @ sp[(-4)+-4]
  9933  015D24  0EF8               	movlw	-8
  9934  015D26  006F FF8C  F03C    	movff	plusw1,btemp+10
  9935  015D2C  0EF9               	movlw	-7
  9936  015D2E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9937                           
  9938                           ;stkvar	_r @ sp[(-4)+0]
  9939  015D34  0EFD               	movlw	-3
  9940  015D36  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9941  015D3C  0EFC               	movlw	-4
  9942  015D3E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9943                           
  9944                           ;stkvar	_n @ sp[(-4)+-6]
  9945  015D44  0EF6               	movlw	-10
  9946  015D46  006F FF8C  F032    	movff	plusw1,btemp
  9947  015D4C  0E01               	movlw	1
  9948  015D4E  5E32               	subwf	btemp^0,f,c
  9949  015D50  0EF6               	movlw	-10
  9950  015D52  0060  F0CB  FFE3   	movff	btemp,plusw1
  9951  015D58  0EF7               	movlw	-9
  9952  015D5A  006F FF8C  F032    	movff	plusw1,btemp
  9953  015D60  0E00               	movlw	0
  9954  015D62  5A32               	subwfb	btemp^0,f,c
  9955  015D64  0EF7               	movlw	-9
  9956  015D66  0060  F0CB  FFE3   	movff	btemp,plusw1
  9957  015D6C  0EF6               	movlw	-10
  9958  015D6E  28E3               	incf	plusw1,w,c
  9959  015D70  E13F               	bnz	l7789
  9960  015D72  0EF7               	movlw	-9
  9961  015D74  28E3               	incf	plusw1,w,c
  9962  015D76  A4D8               	btfss	status,2,c
  9963  015D78  D03B               	goto	l7789
  9964  015D7A  0E00               	movlw	0
  9965  015D7C  6E32               	movwf	btemp^0,c
  9966  015D7E  0E00               	movlw	0
  9967  015D80  6E33               	movwf	(btemp+1)^0,c
  9968  015D82  D09B               	goto	l2908
  9969  015D84                     l7787:
  9970                           
  9971                           ;stkvar	_l @ sp[(-4)+2]
  9972  015D84  0EFE               	movlw	-2
  9973  015D86  50E3               	movf	plusw1,w,c
  9974  015D88  0F01               	addlw	1
  9975  015D8A  6E32               	movwf	btemp^0,c
  9976  015D8C  0EFE               	movlw	-2
  9977  015D8E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9978  015D94  6A32               	clrf	btemp^0,c
  9979  015D96  0EFF               	movlw	-1
  9980  015D98  50E3               	movf	plusw1,w,c
  9981  015D9A  2032               	addwfc	btemp^0,w,c
  9982  015D9C  6E32               	movwf	btemp^0,c
  9983  015D9E  0EFF               	movlw	-1
  9984  015DA0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9985                           
  9986                           ;stkvar	_r @ sp[(-4)+0]
  9987  015DA6  0EFC               	movlw	-4
  9988  015DA8  50E3               	movf	plusw1,w,c
  9989  015DAA  0F01               	addlw	1
  9990  015DAC  6E32               	movwf	btemp^0,c
  9991  015DAE  0EFC               	movlw	-4
  9992  015DB0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9993  015DB6  6A32               	clrf	btemp^0,c
  9994  015DB8  0EFD               	movlw	-3
  9995  015DBA  50E3               	movf	plusw1,w,c
  9996  015DBC  2032               	addwfc	btemp^0,w,c
  9997  015DBE  6E32               	movwf	btemp^0,c
  9998  015DC0  0EFD               	movlw	-3
  9999  015DC2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10000                           
 10001                           ;stkvar	_n @ sp[(-4)+-6]
 10002  015DC8  0EF6               	movlw	-10
 10003  015DCA  006F FF8C  F032    	movff	plusw1,btemp
 10004  015DD0  0E01               	movlw	1
 10005  015DD2  5E32               	subwf	btemp^0,f,c
 10006  015DD4  0EF6               	movlw	-10
 10007  015DD6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10008  015DDC  0EF7               	movlw	-9
 10009  015DDE  006F FF8C  F032    	movff	plusw1,btemp
 10010  015DE4  0E00               	movlw	0
 10011  015DE6  5A32               	subwfb	btemp^0,f,c
 10012  015DE8  0EF7               	movlw	-9
 10013  015DEA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10014  015DF0                     l7789:
 10015                           
 10016                           ;stkvar	_l @ sp[(-4)+2]
 10017  015DF0  0EFE               	movlw	-2
 10018  015DF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10019  015DF8  0EFF               	movlw	-1
 10020  015DFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10021  015E00  50DF               	movf	indf2,w,c
 10022  015E02  B4D8               	btfsc	status,2,c
 10023  015E04  D03B               	goto	u7500
 10024                           
 10025                           ;stkvar	_r @ sp[(-4)+0]
 10026  015E06  50E1               	movf	fsr1l,w,c
 10027  015E08  0FFC               	addlw	-4
 10028  015E0A  6ED9               	movwf	fsr2l,c
 10029  015E0C  50E2               	movf	fsr1h,w,c
 10030  015E0E  6EDA               	movwf	fsr2h,c
 10031  015E10  0EFF               	movlw	255
 10032  015E12  22DA               	addwfc	fsr2h,f,c
 10033  015E14  006F FF7B FFF6     	movff	postinc2,tblptrl
 10034  015E1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10035  015E20                     	if	0	;tblptru may be non-zero
 10036  015E20                     	endif
 10037  015E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10038  015E20  0E00               	movlw	low (__mediumconst shr (0+16))
 10039  015E22  6EF8               	movwf	tblptru,c
 10040  015E24                     	endif
 10041  015E24  0008               	tblrd		*
 10042  015E26  50F5               	movf	tablat,w,c
 10043  015E28  0900               	iorlw	0
 10044  015E2A  B4D8               	btfsc	status,2,c
 10045  015E2C  D027               	goto	u7500
 10046                           
 10047                           ;stkvar	_n @ sp[(-4)+-6]
 10048  015E2E  0EF6               	movlw	-10
 10049  015E30  006F FF8C  F032    	movff	plusw1,btemp
 10050  015E36  0EF7               	movlw	-9
 10051  015E38  50E3               	movf	plusw1,w,c
 10052  015E3A  1032               	iorwf	btemp^0,w,c
 10053  015E3C  B4D8               	btfsc	status,2,c
 10054  015E3E  D01E               	goto	u7500
 10055                           
 10056                           ;stkvar	_l @ sp[(-4)+2]
 10057  015E40  0EFE               	movlw	-2
 10058  015E42  006F FF8F FFD9     	movff	plusw1,fsr2l
 10059  015E48  0EFF               	movlw	-1
 10060  015E4A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10061  015E50  50DF               	movf	indf2,w,c
 10062  015E52  6E3D               	movwf	(btemp+11)^0,c
 10063                           
 10064                           ;stkvar	_r @ sp[(-4)+0]
 10065  015E54  50E1               	movf	fsr1l,w,c
 10066  015E56  0FFC               	addlw	-4
 10067  015E58  6ED9               	movwf	fsr2l,c
 10068  015E5A  50E2               	movf	fsr1h,w,c
 10069  015E5C  6EDA               	movwf	fsr2h,c
 10070  015E5E  0EFF               	movlw	255
 10071  015E60  22DA               	addwfc	fsr2h,f,c
 10072  015E62  006F FF7B FFF6     	movff	postinc2,tblptrl
 10073  015E68  006F FF77 FFF7     	movff	postdec2,tblptrh
 10074  015E6E                     	if	0	;tblptru may be non-zero
 10075  015E6E                     	endif
 10076  015E6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10077  015E6E  0E00               	movlw	low (__mediumconst shr (0+16))
 10078  015E70  6EF8               	movwf	tblptru,c
 10079  015E72                     	endif
 10080  015E72  0008               	tblrd		*
 10081  015E74  50F5               	movf	tablat,w,c
 10082  015E76  183D               	xorwf	(btemp+11)^0,w,c
 10083  015E78  B4D8               	btfsc	status,2,c
 10084  015E7A  D784               	goto	l7787
 10085  015E7C                     u7500:
 10086                           
 10087                           ;stkvar	_l @ sp[(-4)+2]
 10088  015E7C  0EFE               	movlw	-2
 10089  015E7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10090  015E84  0EFF               	movlw	-1
 10091  015E86  006F FF8F FFDA     	movff	plusw1,fsr2h
 10092  015E8C  50DF               	movf	indf2,w,c
 10093  015E8E  6E32               	movwf	btemp^0,c
 10094  015E90  6A33               	clrf	(btemp+1)^0,c
 10095                           
 10096                           ;stkvar	_r @ sp[(-4)+0]
 10097  015E92  50E1               	movf	fsr1l,w,c
 10098  015E94  0FFC               	addlw	-4
 10099  015E96  6ED9               	movwf	fsr2l,c
 10100  015E98  50E2               	movf	fsr1h,w,c
 10101  015E9A  6EDA               	movwf	fsr2h,c
 10102  015E9C  0EFF               	movlw	255
 10103  015E9E  22DA               	addwfc	fsr2h,f,c
 10104  015EA0  006F FF7B FFF6     	movff	postinc2,tblptrl
 10105  015EA6  006F FF77 FFF7     	movff	postdec2,tblptrh
 10106  015EAC                     	if	0	;tblptru may be non-zero
 10107  015EAC                     	endif
 10108  015EAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10109  015EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 10110  015EAE  6EF8               	movwf	tblptru,c
 10111  015EB0                     	endif
 10112  015EB0  0008               	tblrd		*
 10113  015EB2  50F5               	movf	tablat,w,c
 10114  015EB4  5E32               	subwf	btemp^0,f,c
 10115  015EB6  0E00               	movlw	0
 10116  015EB8  5A33               	subwfb	(btemp+1)^0,f,c
 10117  015EBA                     l2908:
 10118                           
 10119                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10120  015EBA  0EF6               	movlw	246
 10121  015EBC  26E1               	addwf	fsr1l,f,c
 10122  015EBE  0EFF               	movlw	255
 10123  015EC0  22E2               	addwfc	fsr1h,f,c
 10124  015EC2  0012               	return		;funcret
 10125  015EC4                     __end_of_strncmp:
 10126                           	opt callstack 0
 10127                           
 10128 ;; *************** function _stoa *****************
 10129 ;; Defined at:
 10130 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10133 ;;		 -> f(6), NULL(0), 
 10134 ;;  s               2  [STACK] PTR unsigned char 
 10135 ;;		 -> ?_printf(2), ?_sprintf(2), STR_25(9), STR_24(12), 
 10136 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
 10137 ;;		 -> STR_3(6), V(187), 
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;  nuls            7  [STACK] unsigned char [7]
 10140 ;;  l               2  [STACK] int 
 10141 ;;  p               2  [STACK] int 
 10142 ;;  cp              2  [STACK] PTR unsigned char 
 10143 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_25(9), 
 10144 ;;		 -> STR_24(12), D.lcd(216), D(218), T(144), 
 10145 ;;		 -> STR_7(6), STR_3(6), V(187), 
 10146 ;;  w               2  [STACK] int 
 10147 ;;  i               2  [STACK] int 
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  2  [STACK] int 
 10150 ;; Registers used:
 10151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/5
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10161 ;;Total ram usage:        0 bytes
 10162 ;; Hardware stack levels used:    1
 10163 ;; Hardware stack levels required when called:    9
 10164 ;; This function calls:
 10165 ;;		_fputc
 10166 ;;		_strlen
 10167 ;; This function is called by:
 10168 ;;		_vfpfcnvrt
 10169 ;; This function uses a reentrant model
 10170 ;;
 10171                           
 10172                           	psect	text45
 10173  014EDE                     __ptext45:
 10174                           	opt callstack 0
 10175  014EDE                     _stoa:
 10176                           	opt callstack 0
 10177                           
 10178                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10179  014EDE  0E11               	movlw	17
 10180  014EE0  26E1               	addwf	fsr1l,f,c
 10181  014EE2  0E00               	movlw	0
 10182  014EE4  22E2               	addwfc	fsr1h,f,c
 10183                           
 10184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10185                           
 10186                           ;incstack = 0
 10187  014EE6  EE20  F1D4         	lfsr	2,stoa@F1166
 10188                           
 10189                           ;stkvar	_nuls @ sp[(-17)+0]
 10190  014EEA  0E07               	movlw	7
 10191  014EEC  6E32               	movwf	btemp^0,c
 10192  014EEE  0EEF               	movlw	-17
 10193  014EF0                     us977999:
 10194  014EF0  006F FF7B FFE3     	movff	postinc2,plusw1
 10195  014EF6  28E8               	incf	wreg,w,c
 10196  014EF8  2E32               	decfsz	btemp^0,f,c
 10197  014EFA  D7FA               	bra	us977999
 10198                           
 10199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10200                           ;stkvar	_s @ sp[(-17)+-4]
 10201  014EFC  0EEB               	movlw	-21
 10202  014EFE  006F FF8C  F03C    	movff	plusw1,btemp+10
 10203  014F04  0EEC               	movlw	-20
 10204  014F06  006F FF8C  F03D    	movff	plusw1,btemp+11
 10205                           
 10206                           ;stkvar	_cp @ sp[(-17)+11]
 10207  014F0C  0EFB               	movlw	-5
 10208  014F0E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10209  014F14  0EFA               	movlw	-6
 10210  014F16  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10211                           
 10212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10213                           ;stkvar	_cp @ sp[(-17)+11]
 10214  014F1C  0EFA               	movlw	-6
 10215  014F1E  006F FF8C  F032    	movff	plusw1,btemp
 10216  014F24  0EFB               	movlw	-5
 10217  014F26  50E3               	movf	plusw1,w,c
 10218  014F28  1032               	iorwf	btemp^0,w,c
 10219  014F2A  A4D8               	btfss	status,2,c
 10220  014F2C  D00E               	goto	l9927
 10221                           
 10222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10223                           ;stkvar	_nuls @ sp[(-17)+0]
 10224  014F2E  0EEF               	movlw	239
 10225  014F30  24E1               	addwf	fsr1l,w,c
 10226  014F32  6E3C               	movwf	(btemp+10)^0,c
 10227  014F34  0EFF               	movlw	255
 10228  014F36  20E2               	addwfc	fsr1h,w,c
 10229  014F38  6E3D               	movwf	(btemp+11)^0,c
 10230                           
 10231                           ;stkvar	_cp @ sp[(-17)+11]
 10232  014F3A  0EFB               	movlw	-5
 10233  014F3C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10234  014F42  0EFA               	movlw	-6
 10235  014F44  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10236  014F4A                     l9927:
 10237                           
 10238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10239                           ;stkvar	_cp @ sp[(-17)+11]
 10240  014F4A  0EFA               	movlw	-6
 10241  014F4C  006F FF8F FFE6     	movff	plusw1,postinc1
 10242  014F52  006F FF8F FFE6     	movff	plusw1,postinc1
 10243  014F58  ECA3  F0BA         	call	_strlen	;wreg free
 10244                           
 10245                           ;stkvar	_l @ sp[(-17)+7]
 10246  014F5C  0EF6               	movlw	-10
 10247  014F5E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10248  014F64  0EF7               	movlw	-9
 10249  014F66  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10250                           
 10251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10252                           ;stkvar	_p @ sp[(-17)+9]
 10253  014F6C  0EF8               	movlw	-8
 10254  014F6E  0060  F077  FFE3   	movff	_prec,plusw1
 10255  014F74  0EF9               	movlw	-7
 10256  014F76  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10257                           
 10258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10259                           ;stkvar	_p @ sp[(-17)+9]
 10260  014F7C  0EF9               	movlw	-7
 10261  014F7E  BEE3               	btfsc	plusw1,7,c
 10262  014F80  D023               	goto	l1982
 10263                           
 10264                           ;stkvar	_l @ sp[(-17)+7]
 10265                           ;stkvar	_p @ sp[(-17)+9]
 10266  014F82  50E1               	movf	fsr1l,w,c
 10267  014F84  0FF8               	addlw	-8
 10268  014F86  6ED9               	movwf	fsr2l,c
 10269  014F88  50E2               	movf	fsr1h,w,c
 10270  014F8A  6EDA               	movwf	fsr2h,c
 10271  014F8C  0EFF               	movlw	255
 10272  014F8E  22DA               	addwfc	fsr2h,f,c
 10273  014F90  0EF6               	movlw	-10
 10274  014F92  50E3               	movf	plusw1,w,c
 10275  014F94  5CDE               	subwf	postinc2,w,c
 10276  014F96  50DE               	movf	postinc2,w,c
 10277  014F98  0A80               	xorlw	128
 10278  014F9A  6E32               	movwf	btemp^0,c
 10279  014F9C  0EF7               	movlw	-9
 10280  014F9E  50E3               	movf	plusw1,w,c
 10281  014FA0  0A80               	xorlw	128
 10282  014FA2  5832               	subwfb	btemp^0,w,c
 10283  014FA4  B0D8               	btfsc	status,0,c
 10284  014FA6  D010               	goto	l1982
 10285                           
 10286                           ;stkvar	_p @ sp[(-17)+9]
 10287                           ;stkvar	_l @ sp[(-17)+7]
 10288  014FA8  0EF8               	movlw	-8
 10289  014FAA  006F FF8C  F032    	movff	plusw1,btemp
 10290  014FB0  0EF6               	movlw	-10
 10291  014FB2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10292  014FB8  0EF9               	movlw	-7
 10293  014FBA  006F FF8C  F032    	movff	plusw1,btemp
 10294  014FC0  0EF7               	movlw	-9
 10295  014FC2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10296  014FC8                     l1982:
 10297                           
 10298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10299                           ;stkvar	_l @ sp[(-17)+7]
 10300                           ;stkvar	_p @ sp[(-17)+9]
 10301  014FC8  0EF6               	movlw	-10
 10302  014FCA  006F FF8C  F032    	movff	plusw1,btemp
 10303  014FD0  0EF8               	movlw	-8
 10304  014FD2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10305  014FD8  0EF7               	movlw	-9
 10306  014FDA  006F FF8C  F032    	movff	plusw1,btemp
 10307  014FE0  0EF9               	movlw	-7
 10308  014FE2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10309                           
 10310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10311                           ;stkvar	_w @ sp[(-17)+13]
 10312  014FE8  0EFC               	movlw	-4
 10313  014FEA  0060  F06F  FFE3   	movff	_width,plusw1
 10314  014FF0  0EFD               	movlw	-3
 10315  014FF2  0060  F073  FFE3   	movff	_width+1,plusw1
 10316                           
 10317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10318  014FF8  A01F               	btfss	_flags^0,0,c
 10319  014FFA  D01F               	goto	l9947
 10320  014FFC  D031               	goto	u9820
 10321  014FFE                     l9943:
 10322                           
 10323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10324                           ;stkvar	_fp @ sp[(-17)+-2]
 10325  014FFE  0EED               	movlw	-19
 10326  015000  006F FF8F FFE6     	movff	plusw1,postinc1
 10327  015006  006F FF8F FFE6     	movff	plusw1,postinc1
 10328  01500C  0E20               	movlw	32
 10329  01500E  6EE6               	movwf	postinc1,c
 10330  015010  0E00               	movlw	0
 10331  015012  6EE6               	movwf	postinc1,c
 10332  015014  EC59  F0B4         	call	_fputc	;wreg free
 10333                           
 10334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10335                           ;stkvar	_l @ sp[(-17)+7]
 10336  015018  0EF6               	movlw	-10
 10337  01501A  50E3               	movf	plusw1,w,c
 10338  01501C  0F01               	addlw	1
 10339  01501E  6E32               	movwf	btemp^0,c
 10340  015020  0EF6               	movlw	-10
 10341  015022  0060  F0CB  FFE3   	movff	btemp,plusw1
 10342  015028  6A32               	clrf	btemp^0,c
 10343  01502A  0EF7               	movlw	-9
 10344  01502C  50E3               	movf	plusw1,w,c
 10345  01502E  2032               	addwfc	btemp^0,w,c
 10346  015030  6E32               	movwf	btemp^0,c
 10347  015032  0EF7               	movlw	-9
 10348  015034  0060  F0CB  FFE3   	movff	btemp,plusw1
 10349  01503A                     l9947:
 10350                           
 10351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10352                           ;stkvar	_w @ sp[(-17)+13]
 10353                           ;stkvar	_l @ sp[(-17)+7]
 10354  01503A  50E1               	movf	fsr1l,w,c
 10355  01503C  0FF6               	addlw	-10
 10356  01503E  6ED9               	movwf	fsr2l,c
 10357  015040  50E2               	movf	fsr1h,w,c
 10358  015042  6EDA               	movwf	fsr2h,c
 10359  015044  0EFF               	movlw	255
 10360  015046  22DA               	addwfc	fsr2h,f,c
 10361  015048  0EFC               	movlw	-4
 10362  01504A  50E3               	movf	plusw1,w,c
 10363  01504C  5CDE               	subwf	postinc2,w,c
 10364  01504E  50DE               	movf	postinc2,w,c
 10365  015050  0A80               	xorlw	128
 10366  015052  6E32               	movwf	btemp^0,c
 10367  015054  0EFD               	movlw	-3
 10368  015056  50E3               	movf	plusw1,w,c
 10369  015058  0A80               	xorlw	128
 10370  01505A  5832               	subwfb	btemp^0,w,c
 10371  01505C  A0D8               	btfss	status,0,c
 10372  01505E  D7CF               	goto	l9943
 10373  015060                     u9820:
 10374                           
 10375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10376                           ;stkvar	_i @ sp[(-17)+15]
 10377  015060  0EFE               	movlw	-2
 10378  015062  6AE3               	clrf	plusw1,c
 10379  015064  0EFF               	movlw	-1
 10380  015066  6AE3               	clrf	plusw1,c
 10381                           
 10382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10383  015068  D045               	goto	l9957
 10384  01506A                     l9951:
 10385                           
 10386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10387                           ;stkvar	_fp @ sp[(-17)+-2]
 10388  01506A  0EED               	movlw	-19
 10389  01506C  006F FF8F FFE6     	movff	plusw1,postinc1
 10390  015072  006F FF8F FFE6     	movff	plusw1,postinc1
 10391                           
 10392                           ;stkvar	_cp @ sp[(-19)+11]
 10393  015078  0EF8               	movlw	-8
 10394  01507A  006F FF8F FFF6     	movff	plusw1,tblptrl
 10395  015080  0EF9               	movlw	-7
 10396  015082  006F FF8F FFF7     	movff	plusw1,tblptrh
 10397  015088  0E00               	movlw	low (__mediumconst shr (0+16))
 10398  01508A  6EF8               	movwf	tblptru,c
 10399  01508C  0E1F               	movlw	(high __ramtop+-1)
 10400  01508E  64F7               	cpfsgt	tblptrh,c
 10401  015090  D003               	bra	u9837
 10402  015092  0008               	tblrd		*
 10403  015094  50F5               	movf	tablat,w,c
 10404  015096  D007               	bra	u9830
 10405  015098                     u9837:
 10406  015098  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10407  01509E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10408  0150A4  50EF               	movf	indf0,w,c
 10409  0150A6                     u9830:
 10410  0150A6  6EE6               	movwf	postinc1,c
 10411  0150A8  0E00               	movlw	0
 10412  0150AA  6EE6               	movwf	postinc1,c
 10413  0150AC  EC59  F0B4         	call	_fputc	;wreg free
 10414                           
 10415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10416                           ;stkvar	_cp @ sp[(-17)+11]
 10417  0150B0  0EFA               	movlw	-6
 10418  0150B2  50E3               	movf	plusw1,w,c
 10419  0150B4  0F01               	addlw	1
 10420  0150B6  6E32               	movwf	btemp^0,c
 10421  0150B8  0EFA               	movlw	-6
 10422  0150BA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10423  0150C0  6A32               	clrf	btemp^0,c
 10424  0150C2  0EFB               	movlw	-5
 10425  0150C4  50E3               	movf	plusw1,w,c
 10426  0150C6  2032               	addwfc	btemp^0,w,c
 10427  0150C8  6E32               	movwf	btemp^0,c
 10428  0150CA  0EFB               	movlw	-5
 10429  0150CC  0060  F0CB  FFE3   	movff	btemp,plusw1
 10430                           
 10431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10432                           ;stkvar	_i @ sp[(-17)+15]
 10433  0150D2  0EFE               	movlw	-2
 10434  0150D4  50E3               	movf	plusw1,w,c
 10435  0150D6  0F01               	addlw	1
 10436  0150D8  6E32               	movwf	btemp^0,c
 10437  0150DA  0EFE               	movlw	-2
 10438  0150DC  0060  F0CB  FFE3   	movff	btemp,plusw1
 10439  0150E2  6A32               	clrf	btemp^0,c
 10440  0150E4  0EFF               	movlw	-1
 10441  0150E6  50E3               	movf	plusw1,w,c
 10442  0150E8  2032               	addwfc	btemp^0,w,c
 10443  0150EA  6E32               	movwf	btemp^0,c
 10444  0150EC  0EFF               	movlw	-1
 10445  0150EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10446  0150F4                     l9957:
 10447                           
 10448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10449                           ;stkvar	_p @ sp[(-17)+9]
 10450                           ;stkvar	_i @ sp[(-17)+15]
 10451  0150F4  50E1               	movf	fsr1l,w,c
 10452  0150F6  0FFE               	addlw	-2
 10453  0150F8  6ED9               	movwf	fsr2l,c
 10454  0150FA  50E2               	movf	fsr1h,w,c
 10455  0150FC  6EDA               	movwf	fsr2h,c
 10456  0150FE  0EFF               	movlw	255
 10457  015100  22DA               	addwfc	fsr2h,f,c
 10458  015102  0EF8               	movlw	-8
 10459  015104  50E3               	movf	plusw1,w,c
 10460  015106  5CDE               	subwf	postinc2,w,c
 10461  015108  50DE               	movf	postinc2,w,c
 10462  01510A  0A80               	xorlw	128
 10463  01510C  6E32               	movwf	btemp^0,c
 10464  01510E  0EF9               	movlw	-7
 10465  015110  50E3               	movf	plusw1,w,c
 10466  015112  0A80               	xorlw	128
 10467  015114  5832               	subwfb	btemp^0,w,c
 10468  015116  A0D8               	btfss	status,0,c
 10469  015118  D7A8               	goto	l9951
 10470                           
 10471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10472  01511A  B01F               	btfsc	_flags^0,0,c
 10473  01511C  D01F               	goto	l9965
 10474  01511E  D031               	goto	u9860
 10475  015120                     l9961:
 10476                           
 10477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10478                           ;stkvar	_fp @ sp[(-17)+-2]
 10479  015120  0EED               	movlw	-19
 10480  015122  006F FF8F FFE6     	movff	plusw1,postinc1
 10481  015128  006F FF8F FFE6     	movff	plusw1,postinc1
 10482  01512E  0E20               	movlw	32
 10483  015130  6EE6               	movwf	postinc1,c
 10484  015132  0E00               	movlw	0
 10485  015134  6EE6               	movwf	postinc1,c
 10486  015136  EC59  F0B4         	call	_fputc	;wreg free
 10487                           
 10488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10489                           ;stkvar	_l @ sp[(-17)+7]
 10490  01513A  0EF6               	movlw	-10
 10491  01513C  50E3               	movf	plusw1,w,c
 10492  01513E  0F01               	addlw	1
 10493  015140  6E32               	movwf	btemp^0,c
 10494  015142  0EF6               	movlw	-10
 10495  015144  0060  F0CB  FFE3   	movff	btemp,plusw1
 10496  01514A  6A32               	clrf	btemp^0,c
 10497  01514C  0EF7               	movlw	-9
 10498  01514E  50E3               	movf	plusw1,w,c
 10499  015150  2032               	addwfc	btemp^0,w,c
 10500  015152  6E32               	movwf	btemp^0,c
 10501  015154  0EF7               	movlw	-9
 10502  015156  0060  F0CB  FFE3   	movff	btemp,plusw1
 10503  01515C                     l9965:
 10504                           
 10505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10506                           ;stkvar	_w @ sp[(-17)+13]
 10507                           ;stkvar	_l @ sp[(-17)+7]
 10508  01515C  50E1               	movf	fsr1l,w,c
 10509  01515E  0FF6               	addlw	-10
 10510  015160  6ED9               	movwf	fsr2l,c
 10511  015162  50E2               	movf	fsr1h,w,c
 10512  015164  6EDA               	movwf	fsr2h,c
 10513  015166  0EFF               	movlw	255
 10514  015168  22DA               	addwfc	fsr2h,f,c
 10515  01516A  0EFC               	movlw	-4
 10516  01516C  50E3               	movf	plusw1,w,c
 10517  01516E  5CDE               	subwf	postinc2,w,c
 10518  015170  50DE               	movf	postinc2,w,c
 10519  015172  0A80               	xorlw	128
 10520  015174  6E32               	movwf	btemp^0,c
 10521  015176  0EFD               	movlw	-3
 10522  015178  50E3               	movf	plusw1,w,c
 10523  01517A  0A80               	xorlw	128
 10524  01517C  5832               	subwfb	btemp^0,w,c
 10525  01517E  A0D8               	btfss	status,0,c
 10526  015180  D7CF               	goto	l9961
 10527  015182                     u9860:
 10528                           
 10529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10530                           ;stkvar	_l @ sp[(-17)+7]
 10531  015182  0EF6               	movlw	-10
 10532  015184  006F FF8C  F032    	movff	plusw1,btemp
 10533  01518A  0EF7               	movlw	-9
 10534  01518C  006F FF8C  F033    	movff	plusw1,btemp+1
 10535                           
 10536                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10537  015192  0EEB               	movlw	235
 10538  015194  26E1               	addwf	fsr1l,f,c
 10539  015196  0EFF               	movlw	255
 10540  015198  22E2               	addwfc	fsr1h,f,c
 10541  01519A  0012               	return		;funcret
 10542  01519C                     __end_of_stoa:
 10543                           	opt callstack 0
 10544                           
 10545 ;; *************** function _efgtoa *****************
 10546 ;; Defined at:
 10547 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10550 ;;		 -> f(6), NULL(0), 
 10551 ;;  f               4  [STACK] PTR struct _IO_FILE
 10552 ;;  c               1  [STACK] unsigned char 
 10553 ;; Auto vars:     Size  Location     Type
 10554 ;;  u               4  [STACK] unsigned char 
 10555 ;;  g               4  [STACK] unsigned char 
 10556 ;;  l               4  [STACK] unsigned char 
 10557 ;;  h               4  [STACK] unsigned char 
 10558 ;;  ou              4  [STACK] unsigned char 
 10559 ;;  n               2  [STACK] int 
 10560 ;;  e               2  [STACK] int 
 10561 ;;  i               2  [STACK] int 
 10562 ;;  w               2  [STACK] int 
 10563 ;;  p               2  [STACK] int 
 10564 ;;  sign            2  [STACK] int 
 10565 ;;  d               2  [STACK] int 
 10566 ;;  ne              2  [STACK] int 
 10567 ;;  m               2  [STACK] int 
 10568 ;;  pp              2  [STACK] int 
 10569 ;;  t               2  [STACK] int 
 10570 ;;  mode            1  [STACK] unsigned char 
 10571 ;;  nmode           1  [STACK] unsigned char 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  2  [STACK] int 
 10574 ;; Registers used:
 10575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/5
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10585 ;;Total ram usage:        0 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:   11
 10588 ;; This function calls:
 10589 ;;		___awdiv
 10590 ;;		___awmod
 10591 ;;		___fladd
 10592 ;;		___fldiv
 10593 ;;		___fleq
 10594 ;;		___flge
 10595 ;;		___flmul
 10596 ;;		___flneg
 10597 ;;		___flsub
 10598 ;;		___fltol
 10599 ;;		___fpclassifyf
 10600 ;;		_floorf
 10601 ;;		_isupper
 10602 ;;		_pad
 10603 ;;		_strcpy
 10604 ;;		_tolower
 10605 ;; This function is called by:
 10606 ;;		_vfpfcnvrt
 10607 ;; This function uses a reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text46
 10611  010000                     __ptext46:
 10612                           	opt callstack 0
 10613  010000                     _efgtoa:
 10614                           	opt callstack 0
 10615                           
 10616                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10617  010000  0E38               	movlw	56
 10618  010002  26E1               	addwf	fsr1l,f,c
 10619  010004  0E00               	movlw	0
 10620  010006  22E2               	addwfc	fsr1h,f,c
 10621                           
 10622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 10623                           ;stkvar	_sign @ sp[(-56)+42]
 10624                           
 10625                           ;incstack = 0
 10626  010008  0EF2               	movlw	-14
 10627  01000A  6AE3               	clrf	plusw1,c
 10628  01000C  0EF3               	movlw	-13
 10629  01000E  6AE3               	clrf	plusw1,c
 10630                           
 10631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 10632                           ;stkvar	_f @ sp[(-56)+-6]
 10633  010010  0EC2               	movlw	-62
 10634  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 10635  010018  0EC3               	movlw	-61
 10636  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 10637  010020  0EC4               	movlw	-60
 10638  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 10639  010028  0EC5               	movlw	-59
 10640  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10641                           
 10642                           ;stkvar	_g @ sp[(-56)+16]
 10643  010030  0ED8               	movlw	-40
 10644  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10645  010038  0ED9               	movlw	-39
 10646  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10647  010040  0EDA               	movlw	-38
 10648  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10649  010048  0EDB               	movlw	-37
 10650  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10651                           
 10652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 10653                           ;stkvar	_g @ sp[(-56)+16]
 10654  010050  0EDB               	movlw	-37
 10655  010052  AEE3               	btfss	plusw1,7,c
 10656  010054  D02B               	goto	l9625
 10657                           
 10658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 10659  010056  0E01               	movlw	1
 10660  010058  6E3C               	movwf	(btemp+10)^0,c
 10661  01005A  0E00               	movlw	0
 10662  01005C  6E3D               	movwf	(btemp+11)^0,c
 10663                           
 10664                           ;stkvar	_sign @ sp[(-56)+42]
 10665  01005E  0EF2               	movlw	-14
 10666  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10667  010066  0EF3               	movlw	-13
 10668  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10669                           
 10670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 10671                           ;stkvar	_g @ sp[(-56)+16]
 10672  01006E  0ED8               	movlw	-40
 10673  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 10674  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 10675  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10676  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10677  010088  ECFE  F0BF         	call	___flneg	;wreg free
 10678                           
 10679                           ;stkvar	_g @ sp[(-56)+16]
 10680  01008C  0ED8               	movlw	-40
 10681  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10682  010094  0ED9               	movlw	-39
 10683  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10684  01009C  0EDA               	movlw	-38
 10685  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10686  0100A4  0EDB               	movlw	-37
 10687  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10688  0100AC                     l9625:
 10689                           
 10690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10691                           ;stkvar	_n @ sp[(-56)+32]
 10692  0100AC  0EE8               	movlw	-24
 10693  0100AE  6AE3               	clrf	plusw1,c
 10694  0100B0  0EE9               	movlw	-23
 10695  0100B2  6AE3               	clrf	plusw1,c
 10696                           
 10697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10698                           ;stkvar	_w @ sp[(-56)+38]
 10699  0100B4  0EEE               	movlw	-18
 10700  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10701  0100BC  0EEF               	movlw	-17
 10702  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10703                           
 10704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10705                           ;stkvar	_sign @ sp[(-56)+42]
 10706  0100C4  0EF2               	movlw	-14
 10707  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10708  0100CC  0EF3               	movlw	-13
 10709  0100CE  50E3               	movf	plusw1,w,c
 10710  0100D0  1032               	iorwf	btemp^0,w,c
 10711  0100D2  A4D8               	btfss	status,2,c
 10712  0100D4  D002               	goto	u9270
 10713  0100D6  A41F               	btfss	_flags^0,2,c
 10714  0100D8  D036               	goto	l9645
 10715  0100DA                     u9270:
 10716                           
 10717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10718                           ;stkvar	_sign @ sp[(-56)+42]
 10719  0100DA  0EF2               	movlw	-14
 10720  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10721  0100E2  0EF3               	movlw	-13
 10722  0100E4  50E3               	movf	plusw1,w,c
 10723  0100E6  1032               	iorwf	btemp^0,w,c
 10724  0100E8  A4D8               	btfss	status,2,c
 10725  0100EA  D002               	goto	l9637
 10726  0100EC  0E2B               	movlw	43
 10727  0100EE  D001               	goto	L8
 10728  0100F0                     l9637:
 10729  0100F0  0E2D               	movlw	45
 10730  0100F2                     L8:
 10731  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10732  0100F4  0E00               	movlw	0
 10733  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10734                           
 10735                           ;stkvar	_efgtoa$4507 @ sp[(-56)+10]
 10736  0100F8  0ED2               	movlw	-46
 10737  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10738  010100  0ED3               	movlw	-45
 10739  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10740                           
 10741                           ;stkvar	_efgtoa$4507 @ sp[(-56)+10]
 10742  010108  0ED2               	movlw	-46
 10743  01010A  006F FF8C  F17C    	movff	plusw1,_dbuf
 10744                           
 10745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10746                           ;stkvar	_n @ sp[(-56)+32]
 10747  010110  0EE8               	movlw	-24
 10748  010112  50E3               	movf	plusw1,w,c
 10749  010114  0F01               	addlw	1
 10750  010116  6E32               	movwf	btemp^0,c
 10751  010118  0EE8               	movlw	-24
 10752  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10753  010120  6A32               	clrf	btemp^0,c
 10754  010122  0EE9               	movlw	-23
 10755  010124  50E3               	movf	plusw1,w,c
 10756  010126  2032               	addwfc	btemp^0,w,c
 10757  010128  6E32               	movwf	btemp^0,c
 10758  01012A  0EE9               	movlw	-23
 10759  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10760                           
 10761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10762                           ;stkvar	_w @ sp[(-56)+38]
 10763  010132  50E1               	movf	fsr1l,w,c
 10764  010134  0FEE               	addlw	-18
 10765  010136  6ED9               	movwf	fsr2l,c
 10766  010138  50E2               	movf	fsr1h,w,c
 10767  01013A  6EDA               	movwf	fsr2h,c
 10768  01013C  0EFF               	movlw	255
 10769  01013E  22DA               	addwfc	fsr2h,f,c
 10770  010140  06DE               	decf	postinc2,f,c
 10771  010142  0E00               	movlw	0
 10772  010144  5ADD               	subwfb	postdec2,f,c
 10773  010146                     l9645:
 10774                           
 10775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10776                           ;stkvar	_g @ sp[(-56)+16]
 10777  010146  0ED8               	movlw	-40
 10778  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10779  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10780  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10781  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10782  010160  EC42  F0B0         	call	___fpclassifyf	;wreg free
 10783  010164  0432               	decf	btemp^0,w,c
 10784  010166  1033               	iorwf	(btemp+1)^0,w,c
 10785  010168  A4D8               	btfss	status,2,c
 10786  01016A  D076               	goto	l9663
 10787  01016C  0EBF               	movlw	191
 10788  01016E  6E3C               	movwf	(btemp+10)^0,c
 10789  010170  0EFF               	movlw	255
 10790  010172  6E3D               	movwf	(btemp+11)^0,c
 10791                           
 10792                           ;stkvar	_c @ sp[(-56)+-7]
 10793  010174  0EC1               	movlw	-63
 10794  010176  50E3               	movf	plusw1,w,c
 10795  010178  6E3A               	movwf	(btemp+8)^0,c
 10796  01017A  6A3B               	clrf	(btemp+9)^0,c
 10797  01017C  503C               	movf	(btemp+10)^0,w,c
 10798  01017E  263A               	addwf	(btemp+8)^0,f,c
 10799  010180  503D               	movf	(btemp+11)^0,w,c
 10800  010182  223B               	addwfc	(btemp+9)^0,f,c
 10801  010184  503B               	movf	(btemp+9)^0,w,c
 10802  010186  E106               	bnz	u9300
 10803  010188  0E1A               	movlw	26
 10804  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10805  01018C  B0D8               	btfsc	status,0,c
 10806  01018E  D002               	goto	u9300
 10807  010190  0E01               	movlw	1
 10808  010192  D001               	goto	u9310
 10809  010194                     u9300:
 10810  010194  0E00               	movlw	0
 10811  010196                     u9310:
 10812  010196  6E3C               	movwf	(btemp+10)^0,c
 10813  010198  6A3D               	clrf	(btemp+11)^0,c
 10814                           
 10815                           ;stkvar	_efgtoa$4508 @ sp[(-56)+8]
 10816  01019A  0ED0               	movlw	-48
 10817  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10818  0101A2  0ED1               	movlw	-47
 10819  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10820                           
 10821                           ;stkvar	_efgtoa$4508 @ sp[(-56)+8]
 10822  0101AA  0ED0               	movlw	-48
 10823  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10824  0101B2  0ED1               	movlw	-47
 10825  0101B4  50E3               	movf	plusw1,w,c
 10826  0101B6  1032               	iorwf	btemp^0,w,c
 10827  0101B8  B4D8               	btfsc	status,2,c
 10828  0101BA  D017               	goto	l9655
 10829                           
 10830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10831  0101BC  0EE6               	movlw	low STR_43
 10832  0101BE  6EE6               	movwf	postinc1,c
 10833  0101C0  0EFF               	movlw	high STR_43
 10834  0101C2  6EE6               	movwf	postinc1,c
 10835                           
 10836                           ;stkvar	_n @ sp[(-58)+32]
 10837  0101C4  0E7C               	movlw	low _dbuf
 10838  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10839  0101C8  0E01               	movlw	high _dbuf
 10840  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10841  0101CC  0EE6               	movlw	-26
 10842  0101CE  50E3               	movf	plusw1,w,c
 10843  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10844  0101D2  0EE7               	movlw	-25
 10845  0101D4  50E3               	movf	plusw1,w,c
 10846  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10847  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10848  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10849  0101E4  EC7D  F0B8         	call	_strcpy	;wreg free
 10850                           
 10851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10852  0101E8  D016               	goto	l9657
 10853  0101EA                     l9655:
 10854                           
 10855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10856  0101EA  0EEE               	movlw	low STR_44
 10857  0101EC  6EE6               	movwf	postinc1,c
 10858  0101EE  0EFF               	movlw	high STR_44
 10859  0101F0  6EE6               	movwf	postinc1,c
 10860                           
 10861                           ;stkvar	_n @ sp[(-58)+32]
 10862  0101F2  0E7C               	movlw	low _dbuf
 10863  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10864  0101F6  0E01               	movlw	high _dbuf
 10865  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10866  0101FA  0EE6               	movlw	-26
 10867  0101FC  50E3               	movf	plusw1,w,c
 10868  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10869  010200  0EE7               	movlw	-25
 10870  010202  50E3               	movf	plusw1,w,c
 10871  010204  223D               	addwfc	(btemp+11)^0,f,c
 10872  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10873  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10874  010212  EC7D  F0B8         	call	_strcpy	;wreg free
 10875  010216                     l9657:
 10876                           
 10877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10878                           ;stkvar	_w @ sp[(-56)+38]
 10879  010216  50E1               	movf	fsr1l,w,c
 10880  010218  0FEE               	addlw	-18
 10881  01021A  6ED9               	movwf	fsr2l,c
 10882  01021C  50E2               	movf	fsr1h,w,c
 10883  01021E  6EDA               	movwf	fsr2h,c
 10884  010220  0EFF               	movlw	255
 10885  010222  22DA               	addwfc	fsr2h,f,c
 10886  010224  0EFD               	movlw	253
 10887  010226  26DE               	addwf	postinc2,f,c
 10888  010228  0EFF               	movlw	255
 10889  01022A  22DD               	addwfc	postdec2,f,c
 10890  01022C                     l9659:
 10891                           
 10892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10893                           ;stkvar	_w @ sp[(-56)+38]
 10894  01022C  0EEE               	movlw	-18
 10895  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10896  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10897  01023A  0E7C               	movlw	low _dbuf
 10898  01023C  6EE6               	movwf	postinc1,c
 10899  01023E  0E01               	movlw	high _dbuf
 10900  010240  6EE6               	movwf	postinc1,c
 10901                           
 10902                           ;stkvar	_fp @ sp[(-60)+-2]
 10903  010242  0EC2               	movlw	-62
 10904  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10905  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10906  010250  EC77  F0B5         	call	_pad	;wreg free
 10907  010254  EF1D  F089         	goto	l1900
 10908  010258                     l9663:
 10909                           
 10910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10911                           ;stkvar	_g @ sp[(-56)+16]
 10912  010258  0ED8               	movlw	-40
 10913  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10914  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10915  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10916  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10917  010272  EC42  F0B0         	call	___fpclassifyf	;wreg free
 10918  010276  5032               	movf	btemp^0,w,c
 10919  010278  1033               	iorwf	(btemp+1)^0,w,c
 10920  01027A  A4D8               	btfss	status,2,c
 10921  01027C  D056               	goto	l9681
 10922  01027E  0EBF               	movlw	191
 10923  010280  6E3C               	movwf	(btemp+10)^0,c
 10924  010282  0EFF               	movlw	255
 10925  010284  6E3D               	movwf	(btemp+11)^0,c
 10926                           
 10927                           ;stkvar	_c @ sp[(-56)+-7]
 10928  010286  0EC1               	movlw	-63
 10929  010288  50E3               	movf	plusw1,w,c
 10930  01028A  6E3A               	movwf	(btemp+8)^0,c
 10931  01028C  6A3B               	clrf	(btemp+9)^0,c
 10932  01028E  503C               	movf	(btemp+10)^0,w,c
 10933  010290  263A               	addwf	(btemp+8)^0,f,c
 10934  010292  503D               	movf	(btemp+11)^0,w,c
 10935  010294  223B               	addwfc	(btemp+9)^0,f,c
 10936  010296  503B               	movf	(btemp+9)^0,w,c
 10937  010298  E106               	bnz	u9340
 10938  01029A  0E1A               	movlw	26
 10939  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10940  01029E  B0D8               	btfsc	status,0,c
 10941  0102A0  D002               	goto	u9340
 10942  0102A2  0E01               	movlw	1
 10943  0102A4  D001               	goto	u9350
 10944  0102A6                     u9340:
 10945  0102A6  0E00               	movlw	0
 10946  0102A8                     u9350:
 10947  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10948  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10949                           
 10950                           ;stkvar	_efgtoa$4512 @ sp[(-56)+6]
 10951  0102AC  0ECE               	movlw	-50
 10952  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10953  0102B4  0ECF               	movlw	-49
 10954  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10955                           
 10956                           ;stkvar	_efgtoa$4512 @ sp[(-56)+6]
 10957  0102BC  0ECE               	movlw	-50
 10958  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10959  0102C4  0ECF               	movlw	-49
 10960  0102C6  50E3               	movf	plusw1,w,c
 10961  0102C8  1032               	iorwf	btemp^0,w,c
 10962  0102CA  B4D8               	btfsc	status,2,c
 10963  0102CC  D017               	goto	l9673
 10964                           
 10965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10966  0102CE  0EEA               	movlw	low STR_47
 10967  0102D0  6EE6               	movwf	postinc1,c
 10968  0102D2  0EFF               	movlw	high STR_47
 10969  0102D4  6EE6               	movwf	postinc1,c
 10970                           
 10971                           ;stkvar	_n @ sp[(-58)+32]
 10972  0102D6  0E7C               	movlw	low _dbuf
 10973  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10974  0102DA  0E01               	movlw	high _dbuf
 10975  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10976  0102DE  0EE6               	movlw	-26
 10977  0102E0  50E3               	movf	plusw1,w,c
 10978  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10979  0102E4  0EE7               	movlw	-25
 10980  0102E6  50E3               	movf	plusw1,w,c
 10981  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10982  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10983  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10984  0102F6  EC7D  F0B8         	call	_strcpy	;wreg free
 10985                           
 10986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10987  0102FA  D78D               	goto	l9657
 10988  0102FC                     l9673:
 10989                           
 10990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10991  0102FC  0EF2               	movlw	low STR_48
 10992  0102FE  6EE6               	movwf	postinc1,c
 10993  010300  0EFF               	movlw	high STR_48
 10994  010302  6EE6               	movwf	postinc1,c
 10995                           
 10996                           ;stkvar	_n @ sp[(-58)+32]
 10997  010304  0E7C               	movlw	low _dbuf
 10998  010306  6E3C               	movwf	(btemp+10)^0,c
 10999  010308  0E01               	movlw	high _dbuf
 11000  01030A  6E3D               	movwf	(btemp+11)^0,c
 11001  01030C  0EE6               	movlw	-26
 11002  01030E  50E3               	movf	plusw1,w,c
 11003  010310  263C               	addwf	(btemp+10)^0,f,c
 11004  010312  0EE7               	movlw	-25
 11005  010314  50E3               	movf	plusw1,w,c
 11006  010316  223D               	addwfc	(btemp+11)^0,f,c
 11007  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11008  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11009  010324  EC7D  F0B8         	call	_strcpy	;wreg free
 11010  010328  D776               	goto	l9657
 11011  01032A                     l9681:
 11012                           
 11013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11014  01032A  0E00               	movlw	0
 11015  01032C  6E3A               	movwf	(btemp+8)^0,c
 11016  01032E  0E00               	movlw	0
 11017  010330  6E3B               	movwf	(btemp+9)^0,c
 11018  010332  0E80               	movlw	128
 11019  010334  6E3C               	movwf	(btemp+10)^0,c
 11020  010336  0E3F               	movlw	63
 11021  010338  6E3D               	movwf	(btemp+11)^0,c
 11022                           
 11023                           ;stkvar	_u @ sp[(-56)+12]
 11024  01033A  0ED4               	movlw	-44
 11025  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11026  010342  0ED5               	movlw	-43
 11027  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11028  01034A  0ED6               	movlw	-42
 11029  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11030  010352  0ED7               	movlw	-41
 11031  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11032                           
 11033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11034                           ;stkvar	_e @ sp[(-56)+34]
 11035  01035A  0EEA               	movlw	-22
 11036  01035C  6AE3               	clrf	plusw1,c
 11037  01035E  0EEB               	movlw	-21
 11038  010360  6AE3               	clrf	plusw1,c
 11039                           
 11040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11041  010362  0E00               	movlw	0
 11042  010364  6EE6               	movwf	postinc1,c
 11043  010366  0E00               	movlw	0
 11044  010368  6EE6               	movwf	postinc1,c
 11045  01036A  0E00               	movlw	0
 11046  01036C  6EE6               	movwf	postinc1,c
 11047  01036E  0E00               	movlw	0
 11048  010370  6EE6               	movwf	postinc1,c
 11049                           
 11050                           ;stkvar	_g @ sp[(-60)+16]
 11051  010372  0ED4               	movlw	-44
 11052  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11053  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11054  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11055  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11056  01038C  ECE7  F0B8         	call	___fleq	;wreg free
 11057  010390  A032               	btfss	btemp& (0+255),0,c
 11058  010392  D039               	goto	l9693
 11059  010394  D0BC               	goto	u9390
 11060  010396                     l9689:
 11061                           
 11062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11063  010396  0E00               	movlw	0
 11064  010398  6EE6               	movwf	postinc1,c
 11065  01039A  0E00               	movlw	0
 11066  01039C  6EE6               	movwf	postinc1,c
 11067  01039E  0E20               	movlw	32
 11068  0103A0  6EE6               	movwf	postinc1,c
 11069  0103A2  0E41               	movlw	65
 11070  0103A4  6EE6               	movwf	postinc1,c
 11071                           
 11072                           ;stkvar	_u @ sp[(-60)+12]
 11073  0103A6  0ED0               	movlw	-48
 11074  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11075  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11076  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11077  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11078  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 11079                           
 11080                           ;stkvar	_u @ sp[(-56)+12]
 11081  0103C4  0ED4               	movlw	-44
 11082  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11083  0103CC  0ED5               	movlw	-43
 11084  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11085  0103D4  0ED6               	movlw	-42
 11086  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11087  0103DC  0ED7               	movlw	-41
 11088  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11089                           
 11090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11091                           ;stkvar	_e @ sp[(-56)+34]
 11092  0103E4  0EEA               	movlw	-22
 11093  0103E6  50E3               	movf	plusw1,w,c
 11094  0103E8  0F01               	addlw	1
 11095  0103EA  6E32               	movwf	btemp^0,c
 11096  0103EC  0EEA               	movlw	-22
 11097  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 11098  0103F4  6A32               	clrf	btemp^0,c
 11099  0103F6  0EEB               	movlw	-21
 11100  0103F8  50E3               	movf	plusw1,w,c
 11101  0103FA  2032               	addwfc	btemp^0,w,c
 11102  0103FC  6E32               	movwf	btemp^0,c
 11103  0103FE  0EEB               	movlw	-21
 11104  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 11105  010406                     l9693:
 11106                           
 11107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11108  010406  0E00               	movlw	0
 11109  010408  6EE6               	movwf	postinc1,c
 11110  01040A  0E00               	movlw	0
 11111  01040C  6EE6               	movwf	postinc1,c
 11112  01040E  0E20               	movlw	32
 11113  010410  6EE6               	movwf	postinc1,c
 11114  010412  0E41               	movlw	65
 11115  010414  6EE6               	movwf	postinc1,c
 11116                           
 11117                           ;stkvar	_u @ sp[(-60)+12]
 11118  010416  0ED0               	movlw	-48
 11119  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11120  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11121  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11122  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11123  010430  ECC1  F08E         	call	___flmul	;wreg free
 11124  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 11125  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11126  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11127  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11128                           
 11129                           ;stkvar	_g @ sp[(-60)+16]
 11130  01044C  0ED4               	movlw	-44
 11131  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11132  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11133  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11134  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11135  010466  ECC6  F0B1         	call	___flge	;wreg free
 11136  01046A  A032               	btfss	btemp& (0+255),0,c
 11137  01046C  D032               	goto	l9699
 11138  01046E  D793               	goto	l9689
 11139  010470                     l9695:
 11140                           
 11141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11142  010470  0E00               	movlw	0
 11143  010472  6EE6               	movwf	postinc1,c
 11144  010474  0E00               	movlw	0
 11145  010476  6EE6               	movwf	postinc1,c
 11146  010478  0E20               	movlw	32
 11147  01047A  6EE6               	movwf	postinc1,c
 11148  01047C  0E41               	movlw	65
 11149  01047E  6EE6               	movwf	postinc1,c
 11150                           
 11151                           ;stkvar	_u @ sp[(-60)+12]
 11152  010480  0ED0               	movlw	-48
 11153  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11154  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11155  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11156  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11157  01049A  ECB1  F099         	call	___fldiv	;wreg free
 11158                           
 11159                           ;stkvar	_u @ sp[(-56)+12]
 11160  01049E  0ED4               	movlw	-44
 11161  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11162  0104A6  0ED5               	movlw	-43
 11163  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11164  0104AE  0ED6               	movlw	-42
 11165  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11166  0104B6  0ED7               	movlw	-41
 11167  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11168                           
 11169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11170                           ;stkvar	_e @ sp[(-56)+34]
 11171  0104BE  50E1               	movf	fsr1l,w,c
 11172  0104C0  0FEA               	addlw	-22
 11173  0104C2  6ED9               	movwf	fsr2l,c
 11174  0104C4  50E2               	movf	fsr1h,w,c
 11175  0104C6  6EDA               	movwf	fsr2h,c
 11176  0104C8  0EFF               	movlw	255
 11177  0104CA  22DA               	addwfc	fsr2h,f,c
 11178  0104CC  06DE               	decf	postinc2,f,c
 11179  0104CE  0E00               	movlw	0
 11180  0104D0  5ADD               	subwfb	postdec2,f,c
 11181  0104D2                     l9699:
 11182                           
 11183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11184                           ;stkvar	_u @ sp[(-56)+12]
 11185  0104D2  0ED4               	movlw	-44
 11186  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11187  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11188  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11189  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11190                           
 11191                           ;stkvar	_g @ sp[(-60)+16]
 11192  0104EC  0ED4               	movlw	-44
 11193  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11194  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11195  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11196  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11197  010506  ECC6  F0B1         	call	___flge	;wreg free
 11198  01050A  A032               	btfss	btemp& (0+255),0,c
 11199  01050C  D7B1               	goto	l9695
 11200  01050E                     u9390:
 11201                           
 11202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11203                           ;stkvar	_c @ sp[(-56)+-7]
 11204  01050E  0EC1               	movlw	-63
 11205  010510  50E3               	movf	plusw1,w,c
 11206  010512  6EE6               	movwf	postinc1,c
 11207  010514  0E00               	movlw	0
 11208  010516  6EE6               	movwf	postinc1,c
 11209  010518  ECA0  F0BC         	call	_tolower	;wreg free
 11210                           
 11211                           ;stkvar	_mode @ sp[(-56)+54]
 11212  01051C  0EFE               	movlw	-2
 11213  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11214                           
 11215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11216                           ;stkvar	_mode @ sp[(-56)+54]
 11217                           ;stkvar	_nmode @ sp[(-56)+55]
 11218  010524  0EFE               	movlw	-2
 11219  010526  006F FF8C  F032    	movff	plusw1,btemp
 11220  01052C  0EFF               	movlw	-1
 11221  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11222                           
 11223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11224                           ;stkvar	_mode @ sp[(-56)+54]
 11225  010534  0EFE               	movlw	-2
 11226  010536  006F FF8C  F032    	movff	plusw1,btemp
 11227  01053C  0E67               	movlw	103
 11228  01053E  1832               	xorwf	btemp^0,w,c
 11229  010540  A4D8               	btfss	status,2,c
 11230  010542  D025               	goto	l9717
 11231                           
 11232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11233  010544  501D               	movf	_prec^0,w,c
 11234  010546  101E               	iorwf	(_prec+1)^0,w,c
 11235  010548  A4D8               	btfss	status,2,c
 11236  01054A  D004               	goto	l9711
 11237                           
 11238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11239  01054C  0E00               	movlw	0
 11240  01054E  6E1E               	movwf	(_prec+1)^0,c
 11241  010550  0E01               	movlw	1
 11242  010552  6E1D               	movwf	_prec^0,c
 11243  010554                     l9711:
 11244                           
 11245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11246  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 11247  010556  D005               	goto	u9420
 11248  010558  501E               	movf	(_prec+1)^0,w,c
 11249  01055A  E110               	bnz	l9715
 11250  01055C  041D               	decf	_prec^0,w,c
 11251  01055E  B0D8               	btfsc	status,0,c
 11252  010560  D00D               	goto	l9715
 11253  010562                     u9420:
 11254  010562  0E06               	movlw	6
 11255  010564  6E3C               	movwf	(btemp+10)^0,c
 11256  010566  0E00               	movlw	0
 11257  010568  6E3D               	movwf	(btemp+11)^0,c
 11258                           
 11259                           ;stkvar	_p @ sp[(-56)+40]
 11260  01056A  0EF0               	movlw	-16
 11261  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11262  010572  0EF1               	movlw	-15
 11263  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11264  01057A  D00C               	goto	l9723
 11265  01057C                     l9715:
 11266                           
 11267                           ;stkvar	_p @ sp[(-56)+40]
 11268  01057C  0EF0               	movlw	-16
 11269  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 11270  010584  0EF1               	movlw	-15
 11271  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 11272  01058C  D003               	goto	l9723
 11273  01058E                     l9717:
 11274                           
 11275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11276  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 11277  010590  D7F5               	goto	l9715
 11278  010592  D7E7               	goto	u9420
 11279  010594                     l9723:
 11280                           
 11281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11282                           ;stkvar	_mode @ sp[(-56)+54]
 11283  010594  0EFE               	movlw	-2
 11284  010596  006F FF8C  F032    	movff	plusw1,btemp
 11285  01059C  0E67               	movlw	103
 11286  01059E  1832               	xorwf	btemp^0,w,c
 11287  0105A0  A4D8               	btfss	status,2,c
 11288  0105A2  D02F               	goto	l9733
 11289                           
 11290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11291                           ;stkvar	_e @ sp[(-56)+34]
 11292  0105A4  0EEB               	movlw	-21
 11293  0105A6  AEE3               	btfss	plusw1,7,c
 11294  0105A8  D00E               	goto	u9450
 11295  0105AA  0EEA               	movlw	-22
 11296  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 11297  0105B2  0EFC               	movlw	252
 11298  0105B4  5E32               	subwf	btemp^0,f,c
 11299  0105B6  0EEB               	movlw	-21
 11300  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 11301  0105BE  0EFF               	movlw	255
 11302  0105C0  5A32               	subwfb	btemp^0,f,c
 11303  0105C2  A0D8               	btfss	status,0,c
 11304  0105C4  D018               	goto	l9731
 11305  0105C6                     u9450:
 11306                           
 11307                           ;stkvar	_e @ sp[(-56)+34]
 11308                           ;stkvar	_p @ sp[(-56)+40]
 11309  0105C6  0EF0               	movlw	-16
 11310  0105C8  50E3               	movf	plusw1,w,c
 11311  0105CA  0FFF               	addlw	255
 11312  0105CC  6E3C               	movwf	(btemp+10)^0,c
 11313  0105CE  0EF1               	movlw	-15
 11314  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 11315  0105D6  0EFF               	movlw	255
 11316  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 11317  0105DA  0EEA               	movlw	-22
 11318  0105DC  50E3               	movf	plusw1,w,c
 11319  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 11320  0105E0  503D               	movf	(btemp+11)^0,w,c
 11321  0105E2  0A80               	xorlw	128
 11322  0105E4  6E32               	movwf	btemp^0,c
 11323  0105E6  0EEB               	movlw	-21
 11324  0105E8  50E3               	movf	plusw1,w,c
 11325  0105EA  0A80               	xorlw	128
 11326  0105EC  5832               	subwfb	btemp^0,w,c
 11327  0105EE  A0D8               	btfss	status,0,c
 11328  0105F0  D002               	goto	l9731
 11329                           
 11330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11331  0105F2  0E66               	movlw	102
 11332  0105F4  D001               	goto	L9
 11333  0105F6                     l9731:
 11334                           
 11335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11336  0105F6  0E65               	movlw	101
 11337  0105F8                     L9:
 11338  0105F8  6E3D               	movwf	(btemp+11)^0,c
 11339                           
 11340                           ;stkvar	_nmode @ sp[(-56)+55]
 11341  0105FA  0EFF               	movlw	-1
 11342  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11343  010602                     l9733:
 11344                           
 11345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11346                           ;stkvar	_p @ sp[(-56)+40]
 11347                           ;stkvar	_m @ sp[(-56)+48]
 11348  010602  0EF0               	movlw	-16
 11349  010604  006F FF8C  F032    	movff	plusw1,btemp
 11350  01060A  0EF8               	movlw	-8
 11351  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11352  010612  0EF1               	movlw	-15
 11353  010614  006F FF8C  F032    	movff	plusw1,btemp
 11354  01061A  0EF9               	movlw	-7
 11355  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11356                           
 11357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11358                           ;stkvar	_mode @ sp[(-56)+54]
 11359  010622  0EFE               	movlw	-2
 11360  010624  006F FF8C  F032    	movff	plusw1,btemp
 11361  01062A  0E67               	movlw	103
 11362  01062C  1832               	xorwf	btemp^0,w,c
 11363  01062E  A4D8               	btfss	status,2,c
 11364  010630  D00B               	goto	u9490
 11365                           
 11366                           ;stkvar	_nmode @ sp[(-56)+55]
 11367  010632  0EFF               	movlw	-1
 11368  010634  006F FF8C  F032    	movff	plusw1,btemp
 11369  01063A  0E66               	movlw	102
 11370  01063C  1832               	xorwf	btemp^0,w,c
 11371  01063E  A4D8               	btfss	status,2,c
 11372  010640  D014               	goto	l1929
 11373                           
 11374                           ;stkvar	_e @ sp[(-56)+34]
 11375  010642  0EEB               	movlw	-21
 11376  010644  AEE3               	btfss	plusw1,7,c
 11377  010646  D011               	goto	l1929
 11378  010648                     u9490:
 11379                           
 11380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11381                           ;stkvar	_m @ sp[(-56)+48]
 11382  010648  0EF8               	movlw	-8
 11383  01064A  50E3               	movf	plusw1,w,c
 11384  01064C  0F01               	addlw	1
 11385  01064E  6E32               	movwf	btemp^0,c
 11386  010650  0EF8               	movlw	-8
 11387  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11388  010658  6A32               	clrf	btemp^0,c
 11389  01065A  0EF9               	movlw	-7
 11390  01065C  50E3               	movf	plusw1,w,c
 11391  01065E  2032               	addwfc	btemp^0,w,c
 11392  010660  6E32               	movwf	btemp^0,c
 11393  010662  0EF9               	movlw	-7
 11394  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 11395  01066A                     l1929:
 11396                           
 11397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11398                           ;stkvar	_nmode @ sp[(-56)+55]
 11399  01066A  0EFF               	movlw	-1
 11400  01066C  006F FF8C  F032    	movff	plusw1,btemp
 11401  010672  0E66               	movlw	102
 11402  010674  1832               	xorwf	btemp^0,w,c
 11403  010676  A4D8               	btfss	status,2,c
 11404  010678  D03B               	goto	l9753
 11405                           
 11406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11407                           ;stkvar	_e @ sp[(-56)+34]
 11408  01067A  0EEB               	movlw	-21
 11409  01067C  AEE3               	btfss	plusw1,7,c
 11410  01067E  D01C               	goto	l9749
 11411                           
 11412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11413  010680  0E00               	movlw	0
 11414  010682  6E3A               	movwf	(btemp+8)^0,c
 11415  010684  0E00               	movlw	0
 11416  010686  6E3B               	movwf	(btemp+9)^0,c
 11417  010688  0E80               	movlw	128
 11418  01068A  6E3C               	movwf	(btemp+10)^0,c
 11419  01068C  0E3F               	movlw	63
 11420  01068E  6E3D               	movwf	(btemp+11)^0,c
 11421                           
 11422                           ;stkvar	_u @ sp[(-56)+12]
 11423  010690  0ED4               	movlw	-44
 11424  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11425  010698  0ED5               	movlw	-43
 11426  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11427  0106A0  0ED6               	movlw	-42
 11428  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11429  0106A8  0ED7               	movlw	-41
 11430  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11431                           
 11432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11433                           ;stkvar	_e @ sp[(-56)+34]
 11434  0106B0  0EEA               	movlw	-22
 11435  0106B2  6AE3               	clrf	plusw1,c
 11436  0106B4  0EEB               	movlw	-21
 11437  0106B6  6AE3               	clrf	plusw1,c
 11438  0106B8                     l9749:
 11439                           
 11440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11441                           ;stkvar	_mode @ sp[(-56)+54]
 11442  0106B8  0EFE               	movlw	-2
 11443  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 11444  0106C0  0E67               	movlw	103
 11445  0106C2  1832               	xorwf	btemp^0,w,c
 11446  0106C4  B4D8               	btfsc	status,2,c
 11447  0106C6  D014               	goto	l9753
 11448                           
 11449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 11450                           ;stkvar	_e @ sp[(-56)+34]
 11451                           ;stkvar	_m @ sp[(-56)+48]
 11452  0106C8  0EF8               	movlw	-8
 11453  0106CA  50E3               	movf	plusw1,w,c
 11454  0106CC  6E32               	movwf	btemp^0,c
 11455  0106CE  0EEA               	movlw	-22
 11456  0106D0  50E3               	movf	plusw1,w,c
 11457  0106D2  2632               	addwf	btemp^0,f,c
 11458  0106D4  0EF8               	movlw	-8
 11459  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11460  0106DC  0EF9               	movlw	-7
 11461  0106DE  50E3               	movf	plusw1,w,c
 11462  0106E0  6E32               	movwf	btemp^0,c
 11463  0106E2  0EEB               	movlw	-21
 11464  0106E4  50E3               	movf	plusw1,w,c
 11465  0106E6  2232               	addwfc	btemp^0,f,c
 11466  0106E8  0EF9               	movlw	-7
 11467  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11468  0106F0                     l9753:
 11469                           
 11470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 11471                           ;stkvar	_i @ sp[(-56)+36]
 11472  0106F0  0EEC               	movlw	-20
 11473  0106F2  6AE3               	clrf	plusw1,c
 11474  0106F4  0EED               	movlw	-19
 11475  0106F6  6AE3               	clrf	plusw1,c
 11476                           
 11477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 11478                           ;stkvar	_g @ sp[(-56)+16]
 11479  0106F8  0ED8               	movlw	-40
 11480  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 11481  010700  0ED9               	movlw	-39
 11482  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 11483  010708  0EDA               	movlw	-38
 11484  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11485  010710  0EDB               	movlw	-37
 11486  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 11487                           
 11488                           ;stkvar	_h @ sp[(-56)+24]
 11489  010718  0EE0               	movlw	-32
 11490  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11491  010720  0EE1               	movlw	-31
 11492  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11493  010728  0EE2               	movlw	-30
 11494  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11495  010730  0EE3               	movlw	-29
 11496  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11497                           
 11498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11499                           ;stkvar	_u @ sp[(-56)+12]
 11500  010738  0ED4               	movlw	-44
 11501  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 11502  010740  0ED5               	movlw	-43
 11503  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 11504  010748  0ED6               	movlw	-42
 11505  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11506  010750  0ED7               	movlw	-41
 11507  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 11508                           
 11509                           ;stkvar	_ou @ sp[(-56)+28]
 11510  010758  0EE4               	movlw	-28
 11511  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11512  010760  0EE5               	movlw	-27
 11513  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11514  010768  0EE6               	movlw	-26
 11515  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11516  010770  0EE7               	movlw	-25
 11517  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11518                           
 11519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11520  010778  D0D6               	goto	l9769
 11521  01077A                     l9759:
 11522                           
 11523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11524                           ;stkvar	_u @ sp[(-56)+12]
 11525  01077A  0ED4               	movlw	-44
 11526  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11527  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11528  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11529  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11530                           
 11531                           ;stkvar	_h @ sp[(-60)+24]
 11532  010794  0EDC               	movlw	-36
 11533  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11534  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11535  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11536  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11537  0107AE  ECB1  F099         	call	___fldiv	;wreg free
 11538  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11539  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11540  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11541  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11542  0107CA  ECE1  F0A2         	call	_floorf	;wreg free
 11543                           
 11544                           ;stkvar	_l @ sp[(-56)+20]
 11545  0107CE  0EDC               	movlw	-36
 11546  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11547  0107D6  0EDD               	movlw	-35
 11548  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11549  0107DE  0EDE               	movlw	-34
 11550  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11551  0107E6  0EDF               	movlw	-33
 11552  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11553                           
 11554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11555                           ;stkvar	_l @ sp[(-56)+20]
 11556  0107EE  0EDC               	movlw	-36
 11557  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11558  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11559  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11560  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 11561  010808  EC0D  F0B1         	call	___fltol	;wreg free
 11562  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 11563  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11564                           
 11565                           ;stkvar	_d @ sp[(-56)+44]
 11566  010818  0EF4               	movlw	-12
 11567  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11568  010820  0EF5               	movlw	-11
 11569  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11570                           
 11571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 11572                           ;stkvar	_u @ sp[(-56)+12]
 11573  010828  0ED4               	movlw	-44
 11574  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 11575  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 11576  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 11577  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 11578                           
 11579                           ;stkvar	_l @ sp[(-60)+20]
 11580  010842  0ED8               	movlw	-40
 11581  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 11582  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 11583  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 11584  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 11585  01085C  ECC1  F08E         	call	___flmul	;wreg free
 11586  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 11587  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11588  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11589  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11590                           
 11591                           ;stkvar	_h @ sp[(-60)+24]
 11592  010878  0EDC               	movlw	-36
 11593  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 11594  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 11595  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 11596  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 11597  010892  EC45  F0C0         	call	___flsub	;wreg free
 11598                           
 11599                           ;stkvar	_h @ sp[(-56)+24]
 11600  010896  0EE0               	movlw	-32
 11601  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 11602  01089E  0EE1               	movlw	-31
 11603  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11604  0108A6  0EE2               	movlw	-30
 11605  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11606  0108AE  0EE3               	movlw	-29
 11607  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11608                           
 11609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 11610  0108B6  0E00               	movlw	0
 11611  0108B8  6EE6               	movwf	postinc1,c
 11612  0108BA  0E00               	movlw	0
 11613  0108BC  6EE6               	movwf	postinc1,c
 11614  0108BE  0E20               	movlw	32
 11615  0108C0  6EE6               	movwf	postinc1,c
 11616  0108C2  0E41               	movlw	65
 11617  0108C4  6EE6               	movwf	postinc1,c
 11618                           
 11619                           ;stkvar	_u @ sp[(-60)+12]
 11620  0108C6  0ED0               	movlw	-48
 11621  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11622  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11623  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11624  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11625  0108E0  ECB1  F099         	call	___fldiv	;wreg free
 11626                           
 11627                           ;stkvar	_u @ sp[(-56)+12]
 11628  0108E4  0ED4               	movlw	-44
 11629  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11630  0108EC  0ED5               	movlw	-43
 11631  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11632  0108F4  0ED6               	movlw	-42
 11633  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11634  0108FC  0ED7               	movlw	-41
 11635  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11636                           
 11637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 11638                           ;stkvar	_i @ sp[(-56)+36]
 11639  010904  0EEC               	movlw	-20
 11640  010906  50E3               	movf	plusw1,w,c
 11641  010908  0F01               	addlw	1
 11642  01090A  6E32               	movwf	btemp^0,c
 11643  01090C  0EEC               	movlw	-20
 11644  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11645  010914  6A32               	clrf	btemp^0,c
 11646  010916  0EED               	movlw	-19
 11647  010918  50E3               	movf	plusw1,w,c
 11648  01091A  2032               	addwfc	btemp^0,w,c
 11649  01091C  6E32               	movwf	btemp^0,c
 11650  01091E  0EED               	movlw	-19
 11651  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 11652  010926                     l9769:
 11653                           
 11654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11655                           ;stkvar	_m @ sp[(-56)+48]
 11656                           ;stkvar	_i @ sp[(-56)+36]
 11657  010926  50E1               	movf	fsr1l,w,c
 11658  010928  0FEC               	addlw	-20
 11659  01092A  6ED9               	movwf	fsr2l,c
 11660  01092C  50E2               	movf	fsr1h,w,c
 11661  01092E  6EDA               	movwf	fsr2h,c
 11662  010930  0EFF               	movlw	255
 11663  010932  22DA               	addwfc	fsr2h,f,c
 11664  010934  0EF8               	movlw	-8
 11665  010936  50E3               	movf	plusw1,w,c
 11666  010938  5CDE               	subwf	postinc2,w,c
 11667  01093A  50DE               	movf	postinc2,w,c
 11668  01093C  0A80               	xorlw	128
 11669  01093E  6E32               	movwf	btemp^0,c
 11670  010940  0EF9               	movlw	-7
 11671  010942  50E3               	movf	plusw1,w,c
 11672  010944  0A80               	xorlw	128
 11673  010946  5832               	subwfb	btemp^0,w,c
 11674  010948  A0D8               	btfss	status,0,c
 11675  01094A  D717               	goto	l9759
 11676                           
 11677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11678  01094C  0E00               	movlw	0
 11679  01094E  6EE6               	movwf	postinc1,c
 11680  010950  0E00               	movlw	0
 11681  010952  6EE6               	movwf	postinc1,c
 11682  010954  0EA0               	movlw	160
 11683  010956  6EE6               	movwf	postinc1,c
 11684  010958  0E40               	movlw	64
 11685  01095A  6EE6               	movwf	postinc1,c
 11686                           
 11687                           ;stkvar	_u @ sp[(-60)+12]
 11688  01095C  0ED0               	movlw	-48
 11689  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11690  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11691  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11692  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11693  010976  ECC1  F08E         	call	___flmul	;wreg free
 11694                           
 11695                           ;stkvar	_l @ sp[(-56)+20]
 11696  01097A  0EDC               	movlw	-36
 11697  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11698  010982  0EDD               	movlw	-35
 11699  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11700  01098A  0EDE               	movlw	-34
 11701  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11702  010992  0EDF               	movlw	-33
 11703  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11704                           
 11705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11706                           ;stkvar	_l @ sp[(-56)+20]
 11707  01099A  0EDC               	movlw	-36
 11708  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11709  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11710  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11711  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11712                           
 11713                           ;stkvar	_h @ sp[(-60)+24]
 11714  0109B4  0EDC               	movlw	-36
 11715  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11716  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11717  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11718  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11719  0109CE  ECC6  F0B1         	call	___flge	;wreg free
 11720  0109D2  A032               	btfss	btemp& (0+255),0,c
 11721  0109D4  D021               	goto	u9560
 11722                           
 11723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11724                           ;stkvar	_l @ sp[(-56)+20]
 11725                           
 11726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11727                           
 11728                           ;stkvar	_l @ sp[(-56)+20]
 11729                           
 11730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11731  0109D6  0EDC               	movlw	-36
 11732  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11733  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11734  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11735  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11736                           
 11737                           ;stkvar	_h @ sp[(-60)+24]
 11738  0109F0  0EDC               	movlw	-36
 11739  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11740  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11741  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11742  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11743  010A0A  ECE7  F0B8         	call	___fleq	;wreg free
 11744  010A0E  A032               	btfss	btemp& (0+255),0,c
 11745  010A10  D01B               	goto	l9783
 11746                           
 11747                           ;stkvar	_d @ sp[(-56)+44]
 11748  010A12  0EF4               	movlw	-12
 11749  010A14  B0E3               	btfsc	plusw1,0,c
 11750  010A16  D018               	goto	l9783
 11751  010A18                     u9560:
 11752                           
 11753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11754  010A18  0E00               	movlw	0
 11755  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11756  010A1C  0E00               	movlw	0
 11757  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11758  010A20  0E00               	movlw	0
 11759  010A22  6E3C               	movwf	(btemp+10)^0,c
 11760  010A24  0E00               	movlw	0
 11761  010A26  6E3D               	movwf	(btemp+11)^0,c
 11762                           
 11763                           ;stkvar	_l @ sp[(-56)+20]
 11764  010A28  0EDC               	movlw	-36
 11765  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11766  010A30  0EDD               	movlw	-35
 11767  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11768  010A38  0EDE               	movlw	-34
 11769  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11770  010A40  0EDF               	movlw	-33
 11771  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11772  010A48                     l9783:
 11773                           
 11774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11775                           ;stkvar	_l @ sp[(-56)+20]
 11776  010A48  0EDC               	movlw	-36
 11777  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11778  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11779  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11780  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11781                           
 11782                           ;stkvar	_g @ sp[(-60)+16]
 11783  010A62  0ED4               	movlw	-44
 11784  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11785  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11786  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11787  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11788  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11789                           
 11790                           ;stkvar	_h @ sp[(-56)+24]
 11791  010A80  0EE0               	movlw	-32
 11792  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11793  010A88  0EE1               	movlw	-31
 11794  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11795  010A90  0EE2               	movlw	-30
 11796  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11797  010A98  0EE3               	movlw	-29
 11798  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11799                           
 11800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11801                           ;stkvar	_ou @ sp[(-56)+28]
 11802  010AA0  0EE4               	movlw	-28
 11803  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11804  010AA8  0EE5               	movlw	-27
 11805  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11806  010AB0  0EE6               	movlw	-26
 11807  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11808  010AB8  0EE7               	movlw	-25
 11809  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11810                           
 11811                           ;stkvar	_u @ sp[(-56)+12]
 11812  010AC0  0ED4               	movlw	-44
 11813  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11814  010AC8  0ED5               	movlw	-43
 11815  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11816  010AD0  0ED6               	movlw	-42
 11817  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11818  010AD8  0ED7               	movlw	-41
 11819  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11820                           
 11821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11822                           ;stkvar	_nmode @ sp[(-56)+55]
 11823  010AE0  0EFF               	movlw	-1
 11824  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11825  010AE8  0E65               	movlw	101
 11826  010AEA  1832               	xorwf	btemp^0,w,c
 11827  010AEC  B4D8               	btfsc	status,2,c
 11828  010AEE  D011               	goto	l9791
 11829                           
 11830                           ;stkvar	_e @ sp[(-56)+34]
 11831                           ;stkvar	_ne @ sp[(-56)+46]
 11832  010AF0  0EEA               	movlw	-22
 11833  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11834  010AF8  0EF6               	movlw	-10
 11835  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11836  010B00  0EEB               	movlw	-21
 11837  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11838  010B08  0EF7               	movlw	-9
 11839  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11840  010B10  D004               	goto	l1944
 11841  010B12                     l9791:
 11842                           
 11843                           ;stkvar	_ne @ sp[(-56)+46]
 11844  010B12  0EF6               	movlw	-10
 11845  010B14  6AE3               	clrf	plusw1,c
 11846  010B16  0EF7               	movlw	-9
 11847  010B18  6AE3               	clrf	plusw1,c
 11848  010B1A                     l1944:
 11849                           
 11850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11851                           ;stkvar	_pp @ sp[(-56)+50]
 11852  010B1A  0EFA               	movlw	-6
 11853  010B1C  6AE3               	clrf	plusw1,c
 11854  010B1E  0EFB               	movlw	-5
 11855  010B20  6AE3               	clrf	plusw1,c
 11856                           
 11857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11858                           ;stkvar	_t @ sp[(-56)+52]
 11859  010B22  0EFC               	movlw	-4
 11860  010B24  6AE3               	clrf	plusw1,c
 11861  010B26  0EFD               	movlw	-3
 11862  010B28  6AE3               	clrf	plusw1,c
 11863                           
 11864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11865                           ;stkvar	_i @ sp[(-56)+36]
 11866  010B2A  0EEC               	movlw	-20
 11867  010B2C  6AE3               	clrf	plusw1,c
 11868  010B2E  0EED               	movlw	-19
 11869  010B30  6AE3               	clrf	plusw1,c
 11870                           
 11871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11872  010B32  D1B7               	goto	l9843
 11873  010B34                     l9793:
 11874                           
 11875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11876                           ;stkvar	_u @ sp[(-56)+12]
 11877  010B34  0ED4               	movlw	-44
 11878  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11879  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11880  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11881  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11882                           
 11883                           ;stkvar	_h @ sp[(-60)+24]
 11884  010B4E  0EDC               	movlw	-36
 11885  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11886  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11887  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11888  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11889  010B68  ECB1  F099         	call	___fldiv	;wreg free
 11890  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11891  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11892  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11893  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11894  010B84  ECE1  F0A2         	call	_floorf	;wreg free
 11895                           
 11896                           ;stkvar	_l @ sp[(-56)+20]
 11897  010B88  0EDC               	movlw	-36
 11898  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11899  010B90  0EDD               	movlw	-35
 11900  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11901  010B98  0EDE               	movlw	-34
 11902  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11903  010BA0  0EDF               	movlw	-33
 11904  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11905                           
 11906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11907                           ;stkvar	_l @ sp[(-56)+20]
 11908  010BA8  0EDC               	movlw	-36
 11909  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11910  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11911  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11912  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11913  010BC2  EC0D  F0B1         	call	___fltol	;wreg free
 11914  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11915  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11916                           
 11917                           ;stkvar	_d @ sp[(-56)+44]
 11918  010BD2  0EF4               	movlw	-12
 11919  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11920  010BDA  0EF5               	movlw	-11
 11921  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11922                           
 11923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11924  010BE2  B81F               	btfsc	_flags^0,4,c
 11925  010BE4  D026               	goto	l9807
 11926                           
 11927                           ;stkvar	_d @ sp[(-56)+44]
 11928  010BE6  0EF4               	movlw	-12
 11929  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11930  010BEE  0EF5               	movlw	-11
 11931  010BF0  50E3               	movf	plusw1,w,c
 11932  010BF2  1032               	iorwf	btemp^0,w,c
 11933  010BF4  A4D8               	btfss	status,2,c
 11934  010BF6  D01D               	goto	l9807
 11935                           
 11936                           ;stkvar	_mode @ sp[(-56)+54]
 11937  010BF8  0EFE               	movlw	-2
 11938  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11939  010C00  0E67               	movlw	103
 11940  010C02  1832               	xorwf	btemp^0,w,c
 11941  010C04  A4D8               	btfss	status,2,c
 11942  010C06  D015               	goto	l9807
 11943                           
 11944                           ;stkvar	_ne @ sp[(-56)+46]
 11945  010C08  0EF7               	movlw	-9
 11946  010C0A  AEE3               	btfss	plusw1,7,c
 11947  010C0C  D012               	goto	l9807
 11948                           
 11949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11950                           ;stkvar	_t @ sp[(-56)+52]
 11951  010C0E  0EFC               	movlw	-4
 11952  010C10  50E3               	movf	plusw1,w,c
 11953  010C12  0F01               	addlw	1
 11954  010C14  6E32               	movwf	btemp^0,c
 11955  010C16  0EFC               	movlw	-4
 11956  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11957  010C1E  6A32               	clrf	btemp^0,c
 11958  010C20  0EFD               	movlw	-3
 11959  010C22  50E3               	movf	plusw1,w,c
 11960  010C24  2032               	addwfc	btemp^0,w,c
 11961  010C26  6E32               	movwf	btemp^0,c
 11962  010C28  0EFD               	movlw	-3
 11963  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11964                           
 11965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11966  010C30  D0AF               	goto	l9835
 11967  010C32                     l9807:
 11968                           
 11969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11970                           ;stkvar	_pp @ sp[(-56)+50]
 11971  010C32  0EFA               	movlw	-6
 11972  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11973  010C3A  0EFB               	movlw	-5
 11974  010C3C  50E3               	movf	plusw1,w,c
 11975  010C3E  1032               	iorwf	btemp^0,w,c
 11976  010C40  A4D8               	btfss	status,2,c
 11977  010C42  D070               	goto	l9827
 11978                           
 11979                           ;stkvar	_ne @ sp[(-56)+46]
 11980  010C44  0EF7               	movlw	-9
 11981  010C46  AEE3               	btfss	plusw1,7,c
 11982  010C48  D06D               	goto	l9827
 11983                           
 11984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11985                           ;stkvar	_n @ sp[(-56)+32]
 11986  010C4A  0EE8               	movlw	-24
 11987  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11988  010C52  0EE9               	movlw	-23
 11989  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11990  010C5A  0E7C               	movlw	low _dbuf
 11991  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11992  010C5E  6ED9               	movwf	fsr2l,c
 11993  010C60  0E01               	movlw	high _dbuf
 11994  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11995  010C64  6EDA               	movwf	fsr2h,c
 11996  010C66  0E2E               	movlw	46
 11997  010C68  6EDF               	movwf	indf2,c
 11998                           
 11999                           ;stkvar	_n @ sp[(-56)+32]
 12000  010C6A  0EE8               	movlw	-24
 12001  010C6C  50E3               	movf	plusw1,w,c
 12002  010C6E  0F01               	addlw	1
 12003  010C70  6E32               	movwf	btemp^0,c
 12004  010C72  0EE8               	movlw	-24
 12005  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 12006  010C7A  6A32               	clrf	btemp^0,c
 12007  010C7C  0EE9               	movlw	-23
 12008  010C7E  50E3               	movf	plusw1,w,c
 12009  010C80  2032               	addwfc	btemp^0,w,c
 12010  010C82  6E32               	movwf	btemp^0,c
 12011  010C84  0EE9               	movlw	-23
 12012  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 12013                           
 12014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12015                           ;stkvar	_w @ sp[(-56)+38]
 12016  010C8C  50E1               	movf	fsr1l,w,c
 12017  010C8E  0FEE               	addlw	-18
 12018  010C90  6ED9               	movwf	fsr2l,c
 12019  010C92  50E2               	movf	fsr1h,w,c
 12020  010C94  6EDA               	movwf	fsr2h,c
 12021  010C96  0EFF               	movlw	255
 12022  010C98  22DA               	addwfc	fsr2h,f,c
 12023  010C9A  06DE               	decf	postinc2,f,c
 12024  010C9C  0E00               	movlw	0
 12025  010C9E  5ADD               	subwfb	postdec2,f,c
 12026                           
 12027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12028  010CA0  0E01               	movlw	1
 12029  010CA2  6E3C               	movwf	(btemp+10)^0,c
 12030  010CA4  0E00               	movlw	0
 12031  010CA6  6E3D               	movwf	(btemp+11)^0,c
 12032                           
 12033                           ;stkvar	_pp @ sp[(-56)+50]
 12034  010CA8  0EFA               	movlw	-6
 12035  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12036  010CB0  0EFB               	movlw	-5
 12037  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12038  010CB8  D035               	goto	l9827
 12039  010CBA                     l9819:
 12040                           
 12041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12042                           ;stkvar	_n @ sp[(-56)+32]
 12043  010CBA  0EE8               	movlw	-24
 12044  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12045  010CC2  0EE9               	movlw	-23
 12046  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12047  010CCA  0E7C               	movlw	low _dbuf
 12048  010CCC  243C               	addwf	(btemp+10)^0,w,c
 12049  010CCE  6ED9               	movwf	fsr2l,c
 12050  010CD0  0E01               	movlw	high _dbuf
 12051  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 12052  010CD4  6EDA               	movwf	fsr2h,c
 12053  010CD6  0E30               	movlw	48
 12054  010CD8  6EDF               	movwf	indf2,c
 12055                           
 12056                           ;stkvar	_n @ sp[(-56)+32]
 12057  010CDA  0EE8               	movlw	-24
 12058  010CDC  50E3               	movf	plusw1,w,c
 12059  010CDE  0F01               	addlw	1
 12060  010CE0  6E32               	movwf	btemp^0,c
 12061  010CE2  0EE8               	movlw	-24
 12062  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 12063  010CEA  6A32               	clrf	btemp^0,c
 12064  010CEC  0EE9               	movlw	-23
 12065  010CEE  50E3               	movf	plusw1,w,c
 12066  010CF0  2032               	addwfc	btemp^0,w,c
 12067  010CF2  6E32               	movwf	btemp^0,c
 12068  010CF4  0EE9               	movlw	-23
 12069  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12070                           
 12071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12072                           ;stkvar	_w @ sp[(-56)+38]
 12073  010CFC  50E1               	movf	fsr1l,w,c
 12074  010CFE  0FEE               	addlw	-18
 12075  010D00  6ED9               	movwf	fsr2l,c
 12076  010D02  50E2               	movf	fsr1h,w,c
 12077  010D04  6EDA               	movwf	fsr2h,c
 12078  010D06  0EFF               	movlw	255
 12079  010D08  22DA               	addwfc	fsr2h,f,c
 12080  010D0A  06DE               	decf	postinc2,f,c
 12081  010D0C  0E00               	movlw	0
 12082  010D0E  5ADD               	subwfb	postdec2,f,c
 12083                           
 12084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12085                           ;stkvar	_t @ sp[(-56)+52]
 12086  010D10  50E1               	movf	fsr1l,w,c
 12087  010D12  0FFC               	addlw	-4
 12088  010D14  6ED9               	movwf	fsr2l,c
 12089  010D16  50E2               	movf	fsr1h,w,c
 12090  010D18  6EDA               	movwf	fsr2h,c
 12091  010D1A  0EFF               	movlw	255
 12092  010D1C  22DA               	addwfc	fsr2h,f,c
 12093  010D1E  06DE               	decf	postinc2,f,c
 12094  010D20  0E00               	movlw	0
 12095  010D22  5ADD               	subwfb	postdec2,f,c
 12096  010D24                     l9827:
 12097                           
 12098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12099                           ;stkvar	_t @ sp[(-56)+52]
 12100  010D24  0EFC               	movlw	-4
 12101  010D26  006F FF8C  F032    	movff	plusw1,btemp
 12102  010D2C  0EFD               	movlw	-3
 12103  010D2E  50E3               	movf	plusw1,w,c
 12104  010D30  1032               	iorwf	btemp^0,w,c
 12105  010D32  A4D8               	btfss	status,2,c
 12106  010D34  D7C2               	goto	l9819
 12107                           
 12108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12109                           ;stkvar	_n @ sp[(-56)+32]
 12110  010D36  0EE8               	movlw	-24
 12111  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 12112  010D3E  0EE9               	movlw	-23
 12113  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 12114  010D46  0E7C               	movlw	low _dbuf
 12115  010D48  243C               	addwf	(btemp+10)^0,w,c
 12116  010D4A  6ED9               	movwf	fsr2l,c
 12117  010D4C  0E01               	movlw	high _dbuf
 12118  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 12119  010D50  6EDA               	movwf	fsr2h,c
 12120                           
 12121                           ;stkvar	_d @ sp[(-56)+44]
 12122  010D52  0EF4               	movlw	-12
 12123  010D54  50E3               	movf	plusw1,w,c
 12124  010D56  0F30               	addlw	48
 12125  010D58  6EDF               	movwf	indf2,c
 12126                           
 12127                           ;stkvar	_n @ sp[(-56)+32]
 12128  010D5A  0EE8               	movlw	-24
 12129  010D5C  50E3               	movf	plusw1,w,c
 12130  010D5E  0F01               	addlw	1
 12131  010D60  6E32               	movwf	btemp^0,c
 12132  010D62  0EE8               	movlw	-24
 12133  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 12134  010D6A  6A32               	clrf	btemp^0,c
 12135  010D6C  0EE9               	movlw	-23
 12136  010D6E  50E3               	movf	plusw1,w,c
 12137  010D70  2032               	addwfc	btemp^0,w,c
 12138  010D72  6E32               	movwf	btemp^0,c
 12139  010D74  0EE9               	movlw	-23
 12140  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 12141                           
 12142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12143                           ;stkvar	_w @ sp[(-56)+38]
 12144  010D7C  50E1               	movf	fsr1l,w,c
 12145  010D7E  0FEE               	addlw	-18
 12146  010D80  6ED9               	movwf	fsr2l,c
 12147  010D82  50E2               	movf	fsr1h,w,c
 12148  010D84  6EDA               	movwf	fsr2h,c
 12149  010D86  0EFF               	movlw	255
 12150  010D88  22DA               	addwfc	fsr2h,f,c
 12151  010D8A  06DE               	decf	postinc2,f,c
 12152  010D8C  0E00               	movlw	0
 12153  010D8E  5ADD               	subwfb	postdec2,f,c
 12154  010D90                     l9835:
 12155                           
 12156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12157                           ;stkvar	_u @ sp[(-56)+12]
 12158  010D90  0ED4               	movlw	-44
 12159  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12160  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12161  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12162  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12163                           
 12164                           ;stkvar	_l @ sp[(-60)+20]
 12165  010DAA  0ED8               	movlw	-40
 12166  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12167  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12168  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12169  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12170  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 12171  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 12172  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12173  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12174  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12175                           
 12176                           ;stkvar	_h @ sp[(-60)+24]
 12177  010DE0  0EDC               	movlw	-36
 12178  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12179  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12180  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12181  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12182  010DFA  EC45  F0C0         	call	___flsub	;wreg free
 12183                           
 12184                           ;stkvar	_h @ sp[(-56)+24]
 12185  010DFE  0EE0               	movlw	-32
 12186  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 12187  010E06  0EE1               	movlw	-31
 12188  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12189  010E0E  0EE2               	movlw	-30
 12190  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12191  010E16  0EE3               	movlw	-29
 12192  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12193                           
 12194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12195  010E1E  0E00               	movlw	0
 12196  010E20  6EE6               	movwf	postinc1,c
 12197  010E22  0E00               	movlw	0
 12198  010E24  6EE6               	movwf	postinc1,c
 12199  010E26  0E20               	movlw	32
 12200  010E28  6EE6               	movwf	postinc1,c
 12201  010E2A  0E41               	movlw	65
 12202  010E2C  6EE6               	movwf	postinc1,c
 12203                           
 12204                           ;stkvar	_u @ sp[(-60)+12]
 12205  010E2E  0ED0               	movlw	-48
 12206  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12207  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12208  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12209  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12210  010E48  ECB1  F099         	call	___fldiv	;wreg free
 12211                           
 12212                           ;stkvar	_u @ sp[(-56)+12]
 12213  010E4C  0ED4               	movlw	-44
 12214  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12215  010E54  0ED5               	movlw	-43
 12216  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12217  010E5C  0ED6               	movlw	-42
 12218  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12219  010E64  0ED7               	movlw	-41
 12220  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12221                           
 12222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12223                           ;stkvar	_ne @ sp[(-56)+46]
 12224  010E6C  50E1               	movf	fsr1l,w,c
 12225  010E6E  0FF6               	addlw	-10
 12226  010E70  6ED9               	movwf	fsr2l,c
 12227  010E72  50E2               	movf	fsr1h,w,c
 12228  010E74  6EDA               	movwf	fsr2h,c
 12229  010E76  0EFF               	movlw	255
 12230  010E78  22DA               	addwfc	fsr2h,f,c
 12231  010E7A  06DE               	decf	postinc2,f,c
 12232  010E7C  0E00               	movlw	0
 12233  010E7E  5ADD               	subwfb	postdec2,f,c
 12234                           
 12235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12236                           ;stkvar	_i @ sp[(-56)+36]
 12237  010E80  0EEC               	movlw	-20
 12238  010E82  50E3               	movf	plusw1,w,c
 12239  010E84  0F01               	addlw	1
 12240  010E86  6E32               	movwf	btemp^0,c
 12241  010E88  0EEC               	movlw	-20
 12242  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12243  010E90  6A32               	clrf	btemp^0,c
 12244  010E92  0EED               	movlw	-19
 12245  010E94  50E3               	movf	plusw1,w,c
 12246  010E96  2032               	addwfc	btemp^0,w,c
 12247  010E98  6E32               	movwf	btemp^0,c
 12248  010E9A  0EED               	movlw	-19
 12249  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12250  010EA2                     l9843:
 12251                           
 12252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12253                           ;stkvar	_m @ sp[(-56)+48]
 12254                           ;stkvar	_i @ sp[(-56)+36]
 12255  010EA2  50E1               	movf	fsr1l,w,c
 12256  010EA4  0FEC               	addlw	-20
 12257  010EA6  6ED9               	movwf	fsr2l,c
 12258  010EA8  50E2               	movf	fsr1h,w,c
 12259  010EAA  6EDA               	movwf	fsr2h,c
 12260  010EAC  0EFF               	movlw	255
 12261  010EAE  22DA               	addwfc	fsr2h,f,c
 12262  010EB0  0EF8               	movlw	-8
 12263  010EB2  50E3               	movf	plusw1,w,c
 12264  010EB4  5CDE               	subwf	postinc2,w,c
 12265  010EB6  50DE               	movf	postinc2,w,c
 12266  010EB8  0A80               	xorlw	128
 12267  010EBA  6E32               	movwf	btemp^0,c
 12268  010EBC  0EF9               	movlw	-7
 12269  010EBE  50E3               	movf	plusw1,w,c
 12270  010EC0  0A80               	xorlw	128
 12271  010EC2  5832               	subwfb	btemp^0,w,c
 12272  010EC4  B0D8               	btfsc	status,0,c
 12273  010EC6  D00E               	goto	u9660
 12274                           
 12275                           ;stkvar	_n @ sp[(-56)+32]
 12276  010EC8  0EE9               	movlw	-23
 12277  010ECA  BEE3               	btfsc	plusw1,7,c
 12278  010ECC  D633               	goto	l9793
 12279  010ECE  0EE9               	movlw	-23
 12280  010ED0  50E3               	movf	plusw1,w,c
 12281  010ED2  E108               	bnz	u9660
 12282  010ED4  0EE8               	movlw	-24
 12283  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 12284  010EDC  0E4B               	movlw	75
 12285  010EDE  5E32               	subwf	btemp^0,f,c
 12286  010EE0  A0D8               	btfss	status,0,c
 12287  010EE2  D628               	goto	l9793
 12288  010EE4                     u9660:
 12289                           
 12290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12291                           ;stkvar	_pp @ sp[(-56)+50]
 12292  010EE4  0EFA               	movlw	-6
 12293  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 12294  010EEC  0EFB               	movlw	-5
 12295  010EEE  50E3               	movf	plusw1,w,c
 12296  010EF0  1032               	iorwf	btemp^0,w,c
 12297  010EF2  B4D8               	btfsc	status,2,c
 12298  010EF4  A81F               	btfss	_flags^0,4,c
 12299  010EF6  D021               	goto	l9855
 12300                           
 12301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12302                           ;stkvar	_n @ sp[(-56)+32]
 12303  010EF8  0EE8               	movlw	-24
 12304  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12305  010F00  0EE9               	movlw	-23
 12306  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 12307  010F08  0E7C               	movlw	low _dbuf
 12308  010F0A  243C               	addwf	(btemp+10)^0,w,c
 12309  010F0C  6ED9               	movwf	fsr2l,c
 12310  010F0E  0E01               	movlw	high _dbuf
 12311  010F10  203D               	addwfc	(btemp+11)^0,w,c
 12312  010F12  6EDA               	movwf	fsr2h,c
 12313  010F14  0E2E               	movlw	46
 12314  010F16  6EDF               	movwf	indf2,c
 12315                           
 12316                           ;stkvar	_n @ sp[(-56)+32]
 12317  010F18  0EE8               	movlw	-24
 12318  010F1A  50E3               	movf	plusw1,w,c
 12319  010F1C  0F01               	addlw	1
 12320  010F1E  6E32               	movwf	btemp^0,c
 12321  010F20  0EE8               	movlw	-24
 12322  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 12323  010F28  6A32               	clrf	btemp^0,c
 12324  010F2A  0EE9               	movlw	-23
 12325  010F2C  50E3               	movf	plusw1,w,c
 12326  010F2E  2032               	addwfc	btemp^0,w,c
 12327  010F30  6E32               	movwf	btemp^0,c
 12328  010F32  0EE9               	movlw	-23
 12329  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 12330  010F3A                     l9855:
 12331                           
 12332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12333                           ;stkvar	_n @ sp[(-56)+32]
 12334  010F3A  0EE8               	movlw	-24
 12335  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12336  010F42  0EE9               	movlw	-23
 12337  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 12338  010F4A  0E7C               	movlw	low _dbuf
 12339  010F4C  243C               	addwf	(btemp+10)^0,w,c
 12340  010F4E  6ED9               	movwf	fsr2l,c
 12341  010F50  0E01               	movlw	high _dbuf
 12342  010F52  203D               	addwfc	(btemp+11)^0,w,c
 12343  010F54  6EDA               	movwf	fsr2h,c
 12344  010F56  0E00               	movlw	0
 12345  010F58  6EDF               	movwf	indf2,c
 12346                           
 12347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12348                           ;stkvar	_nmode @ sp[(-56)+55]
 12349  010F5A  0EFF               	movlw	-1
 12350  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 12351  010F62  0E65               	movlw	101
 12352  010F64  1832               	xorwf	btemp^0,w,c
 12353  010F66  A4D8               	btfss	status,2,c
 12354  010F68  EF16  F081         	goto	l9659
 12355                           
 12356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12357  010F6C  0E4F               	movlw	79
 12358  010F6E  6E3C               	movwf	(btemp+10)^0,c
 12359  010F70  0E00               	movlw	0
 12360  010F72  6E3D               	movwf	(btemp+11)^0,c
 12361                           
 12362                           ;stkvar	_i @ sp[(-56)+36]
 12363  010F74  0EEC               	movlw	-20
 12364  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12365  010F7C  0EED               	movlw	-19
 12366  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12367                           
 12368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12369                           ;stkvar	_i @ sp[(-56)+36]
 12370  010F84  0EEC               	movlw	-20
 12371  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 12372  010F8C  0EED               	movlw	-19
 12373  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12374  010F94  0E7C               	movlw	low _dbuf
 12375  010F96  243C               	addwf	(btemp+10)^0,w,c
 12376  010F98  6ED9               	movwf	fsr2l,c
 12377  010F9A  0E01               	movlw	high _dbuf
 12378  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12379  010F9E  6EDA               	movwf	fsr2h,c
 12380  010FA0  0E00               	movlw	0
 12381  010FA2  6EDF               	movwf	indf2,c
 12382                           
 12383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12384                           ;stkvar	_sign @ sp[(-56)+42]
 12385  010FA4  0EF2               	movlw	-14
 12386  010FA6  6AE3               	clrf	plusw1,c
 12387  010FA8  0EF3               	movlw	-13
 12388  010FAA  6AE3               	clrf	plusw1,c
 12389                           
 12390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12391                           ;stkvar	_e @ sp[(-56)+34]
 12392  010FAC  0EEB               	movlw	-21
 12393  010FAE  AEE3               	btfss	plusw1,7,c
 12394  010FB0  D012               	goto	l9869
 12395                           
 12396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12397  010FB2  0E01               	movlw	1
 12398  010FB4  6E3C               	movwf	(btemp+10)^0,c
 12399  010FB6  0E00               	movlw	0
 12400  010FB8  6E3D               	movwf	(btemp+11)^0,c
 12401                           
 12402                           ;stkvar	_sign @ sp[(-56)+42]
 12403  010FBA  0EF2               	movlw	-14
 12404  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12405  010FC2  0EF3               	movlw	-13
 12406  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12407                           
 12408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12409                           ;stkvar	_e @ sp[(-56)+34]
 12410                           ;stkvar	_e @ sp[(-56)+34]
 12411  010FCA  0EEA               	movlw	-22
 12412  010FCC  6CE3               	negf	plusw1,c
 12413  010FCE  0EEB               	movlw	-21
 12414  010FD0  1EE3               	comf	plusw1,f,c
 12415  010FD2  B0D8               	btfsc	status,0,c
 12416  010FD4  2AE3               	incf	plusw1,f,c
 12417  010FD6                     l9869:
 12418                           
 12419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12420  010FD6  0E02               	movlw	2
 12421  010FD8  6E3C               	movwf	(btemp+10)^0,c
 12422  010FDA  0E00               	movlw	0
 12423  010FDC  6E3D               	movwf	(btemp+11)^0,c
 12424                           
 12425                           ;stkvar	_p @ sp[(-56)+40]
 12426  010FDE  0EF0               	movlw	-16
 12427  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12428  010FE6  0EF1               	movlw	-15
 12429  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12430                           
 12431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12432  010FEE  D051               	goto	l9881
 12433  010FF0                     l9871:
 12434                           
 12435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12436                           ;stkvar	_i @ sp[(-56)+36]
 12437  010FF0  50E1               	movf	fsr1l,w,c
 12438  010FF2  0FEC               	addlw	-20
 12439  010FF4  6ED9               	movwf	fsr2l,c
 12440  010FF6  50E2               	movf	fsr1h,w,c
 12441  010FF8  6EDA               	movwf	fsr2h,c
 12442  010FFA  0EFF               	movlw	255
 12443  010FFC  22DA               	addwfc	fsr2h,f,c
 12444  010FFE  06DE               	decf	postinc2,f,c
 12445  011000  0E00               	movlw	0
 12446  011002  5ADD               	subwfb	postdec2,f,c
 12447                           
 12448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 12449                           ;stkvar	_i @ sp[(-56)+36]
 12450  011004  0EEC               	movlw	-20
 12451  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 12452  01100C  0EED               	movlw	-19
 12453  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12454  011014  0E7C               	movlw	low _dbuf
 12455  011016  243C               	addwf	(btemp+10)^0,w,c
 12456  011018  6ED9               	movwf	fsr2l,c
 12457  01101A  0E01               	movlw	high _dbuf
 12458  01101C  203D               	addwfc	(btemp+11)^0,w,c
 12459  01101E  6EDA               	movwf	fsr2h,c
 12460  011020  0E0A               	movlw	10
 12461  011022  6EE6               	movwf	postinc1,c
 12462  011024  0E00               	movlw	0
 12463  011026  6EE6               	movwf	postinc1,c
 12464                           
 12465                           ;stkvar	_e @ sp[(-58)+34]
 12466  011028  0EE8               	movlw	-24
 12467  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 12468  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 12469  011036  ECEB  F0B4         	call	___awmod	;wreg free
 12470  01103A  5032               	movf	btemp^0,w,c
 12471  01103C  0F30               	addlw	48
 12472  01103E  6EDF               	movwf	indf2,c
 12473                           
 12474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 12475  011040  0E0A               	movlw	10
 12476  011042  6EE6               	movwf	postinc1,c
 12477  011044  0E00               	movlw	0
 12478  011046  6EE6               	movwf	postinc1,c
 12479                           
 12480                           ;stkvar	_e @ sp[(-58)+34]
 12481  011048  0EE8               	movlw	-24
 12482  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 12483  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 12484  011056  EC77  F0B2         	call	___awdiv	;wreg free
 12485                           
 12486                           ;stkvar	_e @ sp[(-56)+34]
 12487  01105A  0EEA               	movlw	-22
 12488  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12489  011062  0EEB               	movlw	-21
 12490  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12491                           
 12492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 12493                           ;stkvar	_p @ sp[(-56)+40]
 12494  01106A  50E1               	movf	fsr1l,w,c
 12495  01106C  0FF0               	addlw	-16
 12496  01106E  6ED9               	movwf	fsr2l,c
 12497  011070  50E2               	movf	fsr1h,w,c
 12498  011072  6EDA               	movwf	fsr2h,c
 12499  011074  0EFF               	movlw	255
 12500  011076  22DA               	addwfc	fsr2h,f,c
 12501  011078  06DE               	decf	postinc2,f,c
 12502  01107A  0E00               	movlw	0
 12503  01107C  5ADD               	subwfb	postdec2,f,c
 12504                           
 12505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12506                           ;stkvar	_w @ sp[(-56)+38]
 12507  01107E  50E1               	movf	fsr1l,w,c
 12508  011080  0FEE               	addlw	-18
 12509  011082  6ED9               	movwf	fsr2l,c
 12510  011084  50E2               	movf	fsr1h,w,c
 12511  011086  6EDA               	movwf	fsr2h,c
 12512  011088  0EFF               	movlw	255
 12513  01108A  22DA               	addwfc	fsr2h,f,c
 12514  01108C  06DE               	decf	postinc2,f,c
 12515  01108E  0E00               	movlw	0
 12516  011090  5ADD               	subwfb	postdec2,f,c
 12517  011092                     l9881:
 12518                           
 12519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12520                           ;stkvar	_e @ sp[(-56)+34]
 12521  011092  0EEA               	movlw	-22
 12522  011094  006F FF8C  F032    	movff	plusw1,btemp
 12523  01109A  0EEB               	movlw	-21
 12524  01109C  50E3               	movf	plusw1,w,c
 12525  01109E  1032               	iorwf	btemp^0,w,c
 12526  0110A0  A4D8               	btfss	status,2,c
 12527  0110A2  D7A6               	goto	l9871
 12528                           
 12529                           ;stkvar	_p @ sp[(-56)+40]
 12530  0110A4  0EF1               	movlw	-15
 12531  0110A6  BEE3               	btfsc	plusw1,7,c
 12532  0110A8  D007               	goto	u9720
 12533  0110AA  0EF1               	movlw	-15
 12534  0110AC  50E3               	movf	plusw1,w,c
 12535  0110AE  E1A0               	bnz	l9871
 12536  0110B0  0EF0               	movlw	-16
 12537  0110B2  04E3               	decf	plusw1,w,c
 12538  0110B4  B0D8               	btfsc	status,0,c
 12539  0110B6  D79C               	goto	l9871
 12540  0110B8                     u9720:
 12541                           
 12542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12543                           ;stkvar	_i @ sp[(-56)+36]
 12544  0110B8  50E1               	movf	fsr1l,w,c
 12545  0110BA  0FEC               	addlw	-20
 12546  0110BC  6ED9               	movwf	fsr2l,c
 12547  0110BE  50E2               	movf	fsr1h,w,c
 12548  0110C0  6EDA               	movwf	fsr2h,c
 12549  0110C2  0EFF               	movlw	255
 12550  0110C4  22DA               	addwfc	fsr2h,f,c
 12551  0110C6  06DE               	decf	postinc2,f,c
 12552  0110C8  0E00               	movlw	0
 12553  0110CA  5ADD               	subwfb	postdec2,f,c
 12554                           
 12555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12556                           ;stkvar	_sign @ sp[(-56)+42]
 12557  0110CC  0EF2               	movlw	-14
 12558  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12559  0110D4  0EF3               	movlw	-13
 12560  0110D6  50E3               	movf	plusw1,w,c
 12561  0110D8  1032               	iorwf	btemp^0,w,c
 12562  0110DA  A4D8               	btfss	status,2,c
 12563  0110DC  D002               	goto	l9891
 12564  0110DE  0E2B               	movlw	43
 12565  0110E0  D001               	goto	L10
 12566  0110E2                     l9891:
 12567  0110E2  0E2D               	movlw	45
 12568  0110E4                     L10:
 12569  0110E4  6E3C               	movwf	(btemp+10)^0,c
 12570  0110E6  0E00               	movlw	0
 12571  0110E8  6E3D               	movwf	(btemp+11)^0,c
 12572                           
 12573                           ;stkvar	_efgtoa$4516 @ sp[(-56)+4]
 12574  0110EA  0ECC               	movlw	-52
 12575  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12576  0110F2  0ECD               	movlw	-51
 12577  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12578                           
 12579                           ;stkvar	_efgtoa$4516 @ sp[(-56)+4]
 12580                           ;stkvar	_i @ sp[(-56)+36]
 12581  0110FA  0EEC               	movlw	-20
 12582  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12583  011102  0EED               	movlw	-19
 12584  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 12585  01110A  0E7C               	movlw	low _dbuf
 12586  01110C  243C               	addwf	(btemp+10)^0,w,c
 12587  01110E  6ED9               	movwf	fsr2l,c
 12588  011110  0E01               	movlw	high _dbuf
 12589  011112  203D               	addwfc	(btemp+11)^0,w,c
 12590  011114  6EDA               	movwf	fsr2h,c
 12591  011116  0ECC               	movlw	-52
 12592  011118  006F FF8F FFDF     	movff	plusw1,indf2
 12593                           
 12594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 12595                           ;stkvar	_w @ sp[(-56)+38]
 12596  01111E  50E1               	movf	fsr1l,w,c
 12597  011120  0FEE               	addlw	-18
 12598  011122  6ED9               	movwf	fsr2l,c
 12599  011124  50E2               	movf	fsr1h,w,c
 12600  011126  6EDA               	movwf	fsr2h,c
 12601  011128  0EFF               	movlw	255
 12602  01112A  22DA               	addwfc	fsr2h,f,c
 12603  01112C  06DE               	decf	postinc2,f,c
 12604  01112E  0E00               	movlw	0
 12605  011130  5ADD               	subwfb	postdec2,f,c
 12606                           
 12607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12608                           ;stkvar	_i @ sp[(-56)+36]
 12609  011132  50E1               	movf	fsr1l,w,c
 12610  011134  0FEC               	addlw	-20
 12611  011136  6ED9               	movwf	fsr2l,c
 12612  011138  50E2               	movf	fsr1h,w,c
 12613  01113A  6EDA               	movwf	fsr2h,c
 12614  01113C  0EFF               	movlw	255
 12615  01113E  22DA               	addwfc	fsr2h,f,c
 12616  011140  06DE               	decf	postinc2,f,c
 12617  011142  0E00               	movlw	0
 12618  011144  5ADD               	subwfb	postdec2,f,c
 12619  011146  0EBF               	movlw	191
 12620  011148  6E3C               	movwf	(btemp+10)^0,c
 12621  01114A  0EFF               	movlw	255
 12622  01114C  6E3D               	movwf	(btemp+11)^0,c
 12623                           
 12624                           ;stkvar	_c @ sp[(-56)+-7]
 12625  01114E  0EC1               	movlw	-63
 12626  011150  50E3               	movf	plusw1,w,c
 12627  011152  6E3A               	movwf	(btemp+8)^0,c
 12628  011154  6A3B               	clrf	(btemp+9)^0,c
 12629  011156  503C               	movf	(btemp+10)^0,w,c
 12630  011158  263A               	addwf	(btemp+8)^0,f,c
 12631  01115A  503D               	movf	(btemp+11)^0,w,c
 12632  01115C  223B               	addwfc	(btemp+9)^0,f,c
 12633  01115E  503B               	movf	(btemp+9)^0,w,c
 12634  011160  E106               	bnz	u9740
 12635  011162  0E1A               	movlw	26
 12636  011164  5C3A               	subwf	(btemp+8)^0,w,c
 12637  011166  B0D8               	btfsc	status,0,c
 12638  011168  D002               	goto	u9740
 12639  01116A  0E01               	movlw	1
 12640  01116C  D001               	goto	u9750
 12641  01116E                     u9740:
 12642  01116E  0E00               	movlw	0
 12643  011170                     u9750:
 12644  011170  6E3C               	movwf	(btemp+10)^0,c
 12645  011172  6A3D               	clrf	(btemp+11)^0,c
 12646                           
 12647                           ;stkvar	_efgtoa$4518 @ sp[(-56)+0]
 12648  011174  0EC8               	movlw	-56
 12649  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12650  01117C  0EC9               	movlw	-55
 12651  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12652                           
 12653                           ;stkvar	_efgtoa$4518 @ sp[(-56)+0]
 12654  011184  0EC8               	movlw	-56
 12655  011186  006F FF8C  F032    	movff	plusw1,btemp
 12656  01118C  0EC9               	movlw	-55
 12657  01118E  50E3               	movf	plusw1,w,c
 12658  011190  1032               	iorwf	btemp^0,w,c
 12659  011192  A4D8               	btfss	status,2,c
 12660  011194  D002               	goto	l9907
 12661  011196  0E65               	movlw	101
 12662  011198  D001               	goto	L11
 12663  01119A                     l9907:
 12664  01119A  0E45               	movlw	69
 12665  01119C                     L11:
 12666  01119C  6E3C               	movwf	(btemp+10)^0,c
 12667  01119E  0E00               	movlw	0
 12668  0111A0  6E3D               	movwf	(btemp+11)^0,c
 12669                           
 12670                           ;stkvar	_efgtoa$4517 @ sp[(-56)+2]
 12671  0111A2  0ECA               	movlw	-54
 12672  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12673  0111AA  0ECB               	movlw	-53
 12674  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12675                           
 12676                           ;stkvar	_efgtoa$4517 @ sp[(-56)+2]
 12677                           ;stkvar	_i @ sp[(-56)+36]
 12678  0111B2  0EEC               	movlw	-20
 12679  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12680  0111BA  0EED               	movlw	-19
 12681  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12682  0111C2  0E7C               	movlw	low _dbuf
 12683  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12684  0111C6  6ED9               	movwf	fsr2l,c
 12685  0111C8  0E01               	movlw	high _dbuf
 12686  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12687  0111CC  6EDA               	movwf	fsr2h,c
 12688  0111CE  0ECA               	movlw	-54
 12689  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12690                           
 12691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12692                           ;stkvar	_w @ sp[(-56)+38]
 12693  0111D6  50E1               	movf	fsr1l,w,c
 12694  0111D8  0FEE               	addlw	-18
 12695  0111DA  6ED9               	movwf	fsr2l,c
 12696  0111DC  50E2               	movf	fsr1h,w,c
 12697  0111DE  6EDA               	movwf	fsr2h,c
 12698  0111E0  0EFF               	movlw	255
 12699  0111E2  22DA               	addwfc	fsr2h,f,c
 12700  0111E4  06DE               	decf	postinc2,f,c
 12701  0111E6  0E00               	movlw	0
 12702  0111E8  5ADD               	subwfb	postdec2,f,c
 12703                           
 12704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12705                           ;stkvar	_i @ sp[(-56)+36]
 12706  0111EA  0EEC               	movlw	-20
 12707  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12708  0111F2  0EED               	movlw	-19
 12709  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12710  0111FA  0E7C               	movlw	low _dbuf
 12711  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12712  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12713  011200  0E01               	movlw	high _dbuf
 12714  011202  203D               	addwfc	(btemp+11)^0,w,c
 12715  011204  6E3B               	movwf	(btemp+9)^0,c
 12716  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12717  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12718                           
 12719                           ;stkvar	_n @ sp[(-58)+32]
 12720  011212  0E7C               	movlw	low _dbuf
 12721  011214  6E3C               	movwf	(btemp+10)^0,c
 12722  011216  0E01               	movlw	high _dbuf
 12723  011218  6E3D               	movwf	(btemp+11)^0,c
 12724  01121A  0EE6               	movlw	-26
 12725  01121C  50E3               	movf	plusw1,w,c
 12726  01121E  263C               	addwf	(btemp+10)^0,f,c
 12727  011220  0EE7               	movlw	-25
 12728  011222  50E3               	movf	plusw1,w,c
 12729  011224  223D               	addwfc	(btemp+11)^0,f,c
 12730  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12731  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12732  011232  EC7D  F0B8         	call	_strcpy	;wreg free
 12733  011236  EF16  F081         	goto	l9659
 12734  01123A                     l1900:
 12735                           
 12736                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12737  01123A  0EC1               	movlw	193
 12738  01123C  26E1               	addwf	fsr1l,f,c
 12739  01123E  0EFF               	movlw	255
 12740  011240  22E2               	addwfc	fsr1h,f,c
 12741  011242  0012               	return		;funcret
 12742  011244                     __end_of_efgtoa:
 12743                           	opt callstack 0
 12744                           
 12745 ;; *************** function _tolower *****************
 12746 ;; Defined at:
 12747 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;  c               2  [STACK] int 
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;		None
 12752 ;; Return value:  Size  Location     Type
 12753 ;;                  2  [STACK] int 
 12754 ;; Registers used:
 12755 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12756 ;; Tracked objects:
 12757 ;;		On entry : 0/5
 12758 ;;		On exit  : 0/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12765 ;;Total ram usage:        0 bytes
 12766 ;; Hardware stack levels used:    1
 12767 ;; Hardware stack levels required when called:    7
 12768 ;; This function calls:
 12769 ;;		_isupper
 12770 ;; This function is called by:
 12771 ;;		_efgtoa
 12772 ;;		_vfpfcnvrt
 12773 ;; This function uses a reentrant model
 12774 ;;
 12775                           
 12776                           	psect	text47
 12777  017940                     __ptext47:
 12778                           	opt callstack 0
 12779  017940                     _tolower:
 12780                           	opt callstack 0
 12781                           
 12782                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12783  017940  52E6               	movf	postinc1,f,c
 12784  017942  52E6               	movf	postinc1,f,c
 12785                           
 12786                           ;stkvar	_c @ sp[(-2)+-2]
 12787                           
 12788                           ;incstack = 0
 12789  017944  0EFC               	movlw	-4
 12790  017946  50E3               	movf	plusw1,w,c
 12791  017948  0FBF               	addlw	191
 12792  01794A  6E3C               	movwf	(btemp+10)^0,c
 12793  01794C  0EFD               	movlw	-3
 12794  01794E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12795  017954  0EFF               	movlw	255
 12796  017956  223D               	addwfc	(btemp+11)^0,f,c
 12797  017958  503D               	movf	(btemp+11)^0,w,c
 12798  01795A  E106               	bnz	u5170
 12799  01795C  0E1A               	movlw	26
 12800  01795E  5C3C               	subwf	(btemp+10)^0,w,c
 12801  017960  B0D8               	btfsc	status,0,c
 12802  017962  D002               	goto	u5170
 12803  017964  0E01               	movlw	1
 12804  017966  D001               	goto	u5180
 12805  017968                     u5170:
 12806  017968  0E00               	movlw	0
 12807  01796A                     u5180:
 12808  01796A  6E3C               	movwf	(btemp+10)^0,c
 12809  01796C  6A3D               	clrf	(btemp+11)^0,c
 12810                           
 12811                           ;stkvar	_tolower$5184 @ sp[(-2)+0]
 12812  01796E  0EFE               	movlw	-2
 12813  017970  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12814  017976  0EFF               	movlw	-1
 12815  017978  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12816                           
 12817                           ;stkvar	_tolower$5184 @ sp[(-2)+0]
 12818  01797E  0EFE               	movlw	-2
 12819  017980  006F FF8C  F032    	movff	plusw1,btemp
 12820  017986  0EFF               	movlw	-1
 12821  017988  50E3               	movf	plusw1,w,c
 12822  01798A  1032               	iorwf	btemp^0,w,c
 12823  01798C  B4D8               	btfsc	status,2,c
 12824  01798E  D00D               	goto	l6575
 12825                           
 12826                           ;stkvar	_c @ sp[(-2)+-2]
 12827  017990  0EFC               	movlw	-4
 12828  017992  006F FF8C  F032    	movff	plusw1,btemp
 12829  017998  0EFD               	movlw	-3
 12830  01799A  006F FF8C  F033    	movff	plusw1,btemp+1
 12831  0179A0  0E20               	movlw	32
 12832  0179A2  1232               	iorwf	btemp^0,f,c
 12833  0179A4  0E00               	movlw	0
 12834  0179A6  1233               	iorwf	(btemp+1)^0,f,c
 12835  0179A8  D008               	goto	l2923
 12836  0179AA                     l6575:
 12837                           
 12838                           ;stkvar	_c @ sp[(-2)+-2]
 12839  0179AA  0EFC               	movlw	-4
 12840  0179AC  006F FF8C  F032    	movff	plusw1,btemp
 12841  0179B2  0EFD               	movlw	-3
 12842  0179B4  006F FF8C  F033    	movff	plusw1,btemp+1
 12843  0179BA                     l2923:
 12844                           
 12845                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12846  0179BA  52E5               	movf	postdec1,f,c
 12847  0179BC  52E5               	movf	postdec1,f,c
 12848  0179BE  52E5               	movf	postdec1,f,c
 12849  0179C0  52E5               	movf	postdec1,f,c
 12850  0179C2  0012               	return		;funcret
 12851  0179C4                     __end_of_tolower:
 12852                           	opt callstack 0
 12853                           
 12854 ;; *************** function _isupper *****************
 12855 ;; Defined at:
 12856 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  c               2  [STACK] int 
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  2  [STACK] int 
 12863 ;; Registers used:
 12864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12874 ;;Total ram usage:        0 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    6
 12877 ;; This function calls:
 12878 ;;		Nothing
 12879 ;; This function is called by:
 12880 ;;		_efgtoa
 12881 ;;		_xtoa
 12882 ;;		_vfpfcnvrt
 12883 ;;		_tolower
 12884 ;; This function uses a reentrant model
 12885 ;;
 12886                           
 12887                           	psect	text48
 12888  01841E                     __ptext48:
 12889                           	opt callstack 0
 12890  01841E                     _isupper:
 12891                           	opt callstack 17
 12892                           
 12893                           ;stkvar	_c @ sp[(0)+-2]
 12894                           
 12895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12896                           ;incstack = 0
 12897  01841E  0EFE               	movlw	-2
 12898  018420  50E3               	movf	plusw1,w,c
 12899  018422  0FBF               	addlw	191
 12900  018424  6E3C               	movwf	(btemp+10)^0,c
 12901  018426  0EFF               	movlw	-1
 12902  018428  006F FF8C  F03D    	movff	plusw1,btemp+11
 12903  01842E  0EFF               	movlw	255
 12904  018430  223D               	addwfc	(btemp+11)^0,f,c
 12905  018432  503D               	movf	(btemp+11)^0,w,c
 12906  018434  E106               	bnz	u4570
 12907  018436  0E1A               	movlw	26
 12908  018438  5C3C               	subwf	(btemp+10)^0,w,c
 12909  01843A  B0D8               	btfsc	status,0,c
 12910  01843C  D002               	goto	u4570
 12911  01843E  0E01               	movlw	1
 12912  018440  D001               	goto	u4580
 12913  018442                     u4570:
 12914  018442  0E00               	movlw	0
 12915  018444                     u4580:
 12916  018444  6E32               	movwf	btemp^0,c
 12917  018446  6A33               	clrf	(btemp+1)^0,c
 12918                           
 12919                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12920  018448  52E5               	movf	postdec1,f,c
 12921  01844A  52E5               	movf	postdec1,f,c
 12922  01844C  0012               	return		;funcret
 12923  01844E                     __end_of_isupper:
 12924                           	opt callstack 0
 12925                           
 12926 ;; *************** function _strcpy *****************
 12927 ;; Defined at:
 12928 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;  dest            2  [STACK] PTR unsigned char 
 12931 ;;		 -> dbuf(80), 
 12932 ;;  src             2  [STACK] PTR const unsigned char 
 12933 ;;		 -> STR_48(4), STR_47(4), STR_44(4), STR_43(4), 
 12934 ;;		 -> dbuf(80), 
 12935 ;; Auto vars:     Size  Location     Type
 12936 ;;  d               2  [STACK] PTR unsigned char 
 12937 ;;		 -> dbuf(80), 
 12938 ;;  s               2  [STACK] PTR const unsigned char 
 12939 ;;		 -> STR_48(4), STR_47(4), STR_44(4), STR_43(4), 
 12940 ;;		 -> dbuf(80), 
 12941 ;; Return value:  Size  Location     Type
 12942 ;;                  2  [STACK] PTR unsigned char 
 12943 ;; Registers used:
 12944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12945 ;; Tracked objects:
 12946 ;;		On entry : 0/5
 12947 ;;		On exit  : 0/0
 12948 ;;		Unchanged: 0/0
 12949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12954 ;;Total ram usage:        0 bytes
 12955 ;; Hardware stack levels used:    1
 12956 ;; Hardware stack levels required when called:    6
 12957 ;; This function calls:
 12958 ;;		Nothing
 12959 ;; This function is called by:
 12960 ;;		_efgtoa
 12961 ;; This function uses a reentrant model
 12962 ;;
 12963                           
 12964                           	psect	text49
 12965  0170FA                     __ptext49:
 12966                           	opt callstack 0
 12967  0170FA                     _strcpy:
 12968                           	opt callstack 0
 12969                           
 12970                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12971  0170FA  52E6               	movf	postinc1,f,c
 12972  0170FC  52E6               	movf	postinc1,f,c
 12973  0170FE  52E6               	movf	postinc1,f,c
 12974  017100  52E6               	movf	postinc1,f,c
 12975                           
 12976                           ;stkvar	_src @ sp[(-4)+-4]
 12977                           
 12978                           ;incstack = 0
 12979  017102  0EF8               	movlw	-8
 12980  017104  006F FF8C  F03C    	movff	plusw1,btemp+10
 12981  01710A  0EF9               	movlw	-7
 12982  01710C  006F FF8C  F03D    	movff	plusw1,btemp+11
 12983                           
 12984                           ;stkvar	_s @ sp[(-4)+2]
 12985  017112  0EFF               	movlw	-1
 12986  017114  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12987  01711A  0EFE               	movlw	-2
 12988  01711C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12989                           
 12990                           ;stkvar	_dest @ sp[(-4)+-2]
 12991  017122  0EFA               	movlw	-6
 12992  017124  006F FF8C  F03C    	movff	plusw1,btemp+10
 12993  01712A  0EFB               	movlw	-5
 12994  01712C  006F FF8C  F03D    	movff	plusw1,btemp+11
 12995                           
 12996                           ;stkvar	_d @ sp[(-4)+0]
 12997  017132  0EFD               	movlw	-3
 12998  017134  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12999  01713A  0EFC               	movlw	-4
 13000  01713C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13001  017142                     l9533:
 13002                           
 13003                           ;stkvar	_s @ sp[(-4)+2]
 13004  017142  50E1               	movf	fsr1l,w,c
 13005  017144  0FFE               	addlw	-2
 13006  017146  6ED9               	movwf	fsr2l,c
 13007  017148  50E2               	movf	fsr1h,w,c
 13008  01714A  6EDA               	movwf	fsr2h,c
 13009  01714C  0EFF               	movlw	255
 13010  01714E  22DA               	addwfc	fsr2h,f,c
 13011  017150  006F FF7C  F03C    	movff	indf2,btemp+10
 13012  017156  0E01               	movlw	1
 13013  017158  26DE               	addwf	postinc2,f,c
 13014  01715A  006F FF7C  F03D    	movff	indf2,btemp+11
 13015  017160  0E00               	movlw	0
 13016  017162  22DD               	addwfc	postdec2,f,c
 13017  017164  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 13018  01716A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 13019  017170  0E00               	movlw	low (__mediumconst shr (0+16))
 13020  017172  6EF8               	movwf	tblptru,c
 13021                           
 13022                           ;stkvar	_d @ sp[(-4)+0]
 13023  017174  50E1               	movf	fsr1l,w,c
 13024  017176  0FFC               	addlw	-4
 13025  017178  6ED9               	movwf	fsr2l,c
 13026  01717A  50E2               	movf	fsr1h,w,c
 13027  01717C  6EDA               	movwf	fsr2h,c
 13028  01717E  0EFF               	movlw	255
 13029  017180  22DA               	addwfc	fsr2h,f,c
 13030  017182  006F FF7C  F03C    	movff	indf2,btemp+10
 13031  017188  0E01               	movlw	1
 13032  01718A  26DE               	addwf	postinc2,f,c
 13033  01718C  006F FF7C  F03D    	movff	indf2,btemp+11
 13034  017192  0E00               	movlw	0
 13035  017194  22DD               	addwfc	postdec2,f,c
 13036  017196  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 13037  01719C  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 13038  0171A2  0E1F               	movlw	(high __ramtop+-1)
 13039  0171A4  64F7               	cpfsgt	tblptrh,c
 13040  0171A6  D003               	bra	u9057
 13041  0171A8  0008               	tblrd		*
 13042  0171AA  50F5               	movf	tablat,w,c
 13043  0171AC  D007               	bra	u9050
 13044  0171AE                     u9057:
 13045  0171AE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13046  0171B4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13047  0171BA  50EF               	movf	indf0,w,c
 13048  0171BC                     u9050:
 13049  0171BC  6EDF               	movwf	indf2,c
 13050  0171BE  50DF               	movf	indf2,w,c
 13051  0171C0  A4D8               	btfss	status,2,c
 13052  0171C2  D7BF               	goto	l9533
 13053                           
 13054                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13055  0171C4  0EF8               	movlw	248
 13056  0171C6  26E1               	addwf	fsr1l,f,c
 13057  0171C8  0EFF               	movlw	255
 13058  0171CA  22E2               	addwfc	fsr1h,f,c
 13059  0171CC  0012               	return		;funcret
 13060  0171CE                     __end_of_strcpy:
 13061                           	opt callstack 0
 13062                           
 13063 ;; *************** function _floorf *****************
 13064 ;; Defined at:
 13065 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13066 ;; Parameters:    Size  Location     Type
 13067 ;;  x               4  [STACK] float 
 13068 ;; Auto vars:     Size  Location     Type
 13069 ;;  u               4  [STACK] struct .
 13070 ;;  m               4  [STACK] unsigned long 
 13071 ;;  e               2  [STACK] int 
 13072 ;; Return value:  Size  Location     Type
 13073 ;;                  4  [STACK] float 
 13074 ;; Registers used:
 13075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13076 ;; Tracked objects:
 13077 ;;		On entry : 0/5
 13078 ;;		On exit  : 0/0
 13079 ;;		Unchanged: 0/0
 13080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13085 ;;Total ram usage:        0 bytes
 13086 ;; Hardware stack levels used:    1
 13087 ;; Hardware stack levels required when called:    6
 13088 ;; This function calls:
 13089 ;;		Nothing
 13090 ;; This function is called by:
 13091 ;;		_efgtoa
 13092 ;; This function uses a reentrant model
 13093 ;;
 13094                           
 13095                           	psect	text50
 13096  0145C2                     __ptext50:
 13097                           	opt callstack 0
 13098  0145C2                     _floorf:
 13099                           	opt callstack 0
 13100                           
 13101                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13102  0145C2  0E0A               	movlw	10
 13103  0145C4  26E1               	addwf	fsr1l,f,c
 13104  0145C6  0E00               	movlw	0
 13105  0145C8  22E2               	addwfc	fsr1h,f,c
 13106                           
 13107                           ;incstack = 0
 13108  0145CA  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 13109  0145D0  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 13110  0145D6  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 13111  0145DC  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 13112                           
 13113                           ;stkvar	_u @ sp[(-10)+0]
 13114  0145E2  0EF6               	movlw	-10
 13115  0145E4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13116  0145EA  0EF7               	movlw	-9
 13117  0145EC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13118  0145F2  0EF8               	movlw	-8
 13119  0145F4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13120  0145FA  0EF9               	movlw	-7
 13121  0145FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13122                           
 13123                           ;stkvar	_x @ sp[(-10)+-4]
 13124  014602  0EF2               	movlw	-14
 13125  014604  006F FF8C  F03A    	movff	plusw1,btemp+8
 13126  01460A  0EF3               	movlw	-13
 13127  01460C  006F FF8C  F03B    	movff	plusw1,btemp+9
 13128  014612  0EF4               	movlw	-12
 13129  014614  006F FF8C  F03C    	movff	plusw1,btemp+10
 13130  01461A  0EF5               	movlw	-11
 13131  01461C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13132                           
 13133                           ;stkvar	_u @ sp[(-10)+0]
 13134  014622  0EF6               	movlw	-10
 13135  014624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13136  01462A  0EF7               	movlw	-9
 13137  01462C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13138  014632  0EF8               	movlw	-8
 13139  014634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13140  01463A  0EF9               	movlw	-7
 13141  01463C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13142  014642  0E81               	movlw	129
 13143  014644  6E3C               	movwf	(btemp+10)^0,c
 13144  014646  0EFF               	movlw	255
 13145  014648  6E3D               	movwf	(btemp+11)^0,c
 13146                           
 13147                           ;stkvar	_u @ sp[(-10)+0]
 13148  01464A  0EF6               	movlw	-10
 13149  01464C  006F FF8C  F036    	movff	plusw1,btemp+4
 13150  014652  0EF7               	movlw	-9
 13151  014654  006F FF8C  F037    	movff	plusw1,btemp+5
 13152  01465A  0EF8               	movlw	-8
 13153  01465C  006F FF8C  F038    	movff	plusw1,btemp+6
 13154  014662  0EF9               	movlw	-7
 13155  014664  006F FF8C  F039    	movff	plusw1,btemp+7
 13156  01466A  0E18               	movlw	24
 13157  01466C  D005               	goto	u5200
 13158  01466E                     u5205:
 13159  01466E  90D8               	bcf	status,0,c
 13160  014670  3239               	rrcf	(btemp+7)^0,f,c
 13161  014672  3238               	rrcf	(btemp+6)^0,f,c
 13162  014674  3237               	rrcf	(btemp+5)^0,f,c
 13163  014676  3236               	rrcf	(btemp+4)^0,f,c
 13164  014678                     u5200:
 13165  014678  2EE8               	decfsz	wreg,f,c
 13166  01467A  D7F9               	goto	u5205
 13167  01467C  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 13168  014682  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 13169  014688  0EFF               	movlw	255
 13170  01468A  163A               	andwf	(btemp+8)^0,f,c
 13171  01468C  0E00               	movlw	0
 13172  01468E  163B               	andwf	(btemp+9)^0,f,c
 13173  014690  503C               	movf	(btemp+10)^0,w,c
 13174  014692  263A               	addwf	(btemp+8)^0,f,c
 13175  014694  503D               	movf	(btemp+11)^0,w,c
 13176  014696  223B               	addwfc	(btemp+9)^0,f,c
 13177                           
 13178                           ;stkvar	_e @ sp[(-10)+8]
 13179  014698  0EFE               	movlw	-2
 13180  01469A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13181  0146A0  0EFF               	movlw	-1
 13182  0146A2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13183                           
 13184                           ;stkvar	_e @ sp[(-10)+8]
 13185  0146A8  0EFF               	movlw	-1
 13186  0146AA  BEE3               	btfsc	plusw1,7,c
 13187  0146AC  D019               	goto	l6589
 13188  0146AE  0EFF               	movlw	-1
 13189  0146B0  50E3               	movf	plusw1,w,c
 13190  0146B2  E108               	bnz	u5210
 13191  0146B4  0EFE               	movlw	-2
 13192  0146B6  006F FF8C  F032    	movff	plusw1,btemp
 13193  0146BC  0E17               	movlw	23
 13194  0146BE  5E32               	subwf	btemp^0,f,c
 13195  0146C0  A0D8               	btfss	status,0,c
 13196  0146C2  D00E               	goto	l6589
 13197  0146C4                     u5210:
 13198                           
 13199                           ;stkvar	_x @ sp[(-10)+-4]
 13200  0146C4  0EF2               	movlw	-14
 13201  0146C6  006F FF8C  F032    	movff	plusw1,btemp
 13202  0146CC  0EF3               	movlw	-13
 13203  0146CE  006F FF8C  F033    	movff	plusw1,btemp+1
 13204  0146D4  0EF4               	movlw	-12
 13205  0146D6  006F FF8C  F034    	movff	plusw1,btemp+2
 13206  0146DC  0EF5               	movlw	-11
 13207  0146DE  D11F               	goto	L12
 13208  0146E0                     l6589:
 13209                           
 13210                           ;stkvar	_e @ sp[(-10)+8]
 13211  0146E0  0EFF               	movlw	-1
 13212  0146E2  BEE3               	btfsc	plusw1,7,c
 13213  0146E4  D0B4               	goto	l6605
 13214                           
 13215                           ;stkvar	_e @ sp[(-10)+8]
 13216  0146E6  0EFE               	movlw	-2
 13217  0146E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13218  0146EE  0EFF               	movlw	255
 13219  0146F0  6E36               	movwf	(btemp+4)^0,c
 13220  0146F2  0EFF               	movlw	255
 13221  0146F4  6E37               	movwf	(btemp+5)^0,c
 13222  0146F6  0E7F               	movlw	127
 13223  0146F8  6E38               	movwf	(btemp+6)^0,c
 13224  0146FA  0E00               	movlw	0
 13225  0146FC  6E39               	movwf	(btemp+7)^0,c
 13226  0146FE                     u5235:
 13227  0146FE  663D               	tstfsz	(btemp+11)^0,c
 13228  014700  D001               	goto	u5236
 13229  014702  D007               	goto	u5237
 13230  014704                     u5236:
 13231  014704  3439               	rlcf	(btemp+7)^0,w,c
 13232  014706  3239               	rrcf	(btemp+7)^0,f,c
 13233  014708  3238               	rrcf	(btemp+6)^0,f,c
 13234  01470A  3237               	rrcf	(btemp+5)^0,f,c
 13235  01470C  3236               	rrcf	(btemp+4)^0,f,c
 13236  01470E  2E3D               	decfsz	(btemp+11)^0,f,c
 13237  014710  D7F6               	goto	u5235
 13238  014712                     u5237:
 13239                           
 13240                           ;stkvar	_m @ sp[(-10)+4]
 13241  014712  0EFA               	movlw	-6
 13242  014714  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 13243  01471A  0EFB               	movlw	-5
 13244  01471C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 13245  014722  0EFC               	movlw	-4
 13246  014724  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13247  01472A  0EFD               	movlw	-3
 13248  01472C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13249                           
 13250                           ;stkvar	_m @ sp[(-10)+4]
 13251                           ;stkvar	_u @ sp[(-10)+0]
 13252  014732  0EF6               	movlw	-10
 13253  014734  006F FF8C  F03A    	movff	plusw1,btemp+8
 13254  01473A  0EF7               	movlw	-9
 13255  01473C  006F FF8C  F03B    	movff	plusw1,btemp+9
 13256  014742  0EF8               	movlw	-8
 13257  014744  006F FF8C  F03C    	movff	plusw1,btemp+10
 13258  01474A  0EF9               	movlw	-7
 13259  01474C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13260  014752  0EFA               	movlw	-6
 13261  014754  50E3               	movf	plusw1,w,c
 13262  014756  163A               	andwf	(btemp+8)^0,f,c
 13263  014758  0EFB               	movlw	-5
 13264  01475A  50E3               	movf	plusw1,w,c
 13265  01475C  163B               	andwf	(btemp+9)^0,f,c
 13266  01475E  0EFC               	movlw	-4
 13267  014760  50E3               	movf	plusw1,w,c
 13268  014762  163C               	andwf	(btemp+10)^0,f,c
 13269  014764  0EFD               	movlw	-3
 13270  014766  50E3               	movf	plusw1,w,c
 13271  014768  163D               	andwf	(btemp+11)^0,f,c
 13272  01476A  503A               	movf	(btemp+8)^0,w,c
 13273  01476C  103B               	iorwf	(btemp+9)^0,w,c
 13274  01476E  103C               	iorwf	(btemp+10)^0,w,c
 13275  014770  103D               	iorwf	(btemp+11)^0,w,c
 13276  014772  B4D8               	btfsc	status,2,c
 13277  014774  D7A7               	goto	u5210
 13278                           
 13279                           ;stkvar	_u @ sp[(-10)+0]
 13280  014776  0EF6               	movlw	-10
 13281  014778  006F FF8C  F03A    	movff	plusw1,btemp+8
 13282  01477E  0EF7               	movlw	-9
 13283  014780  006F FF8C  F03B    	movff	plusw1,btemp+9
 13284  014786  0EF8               	movlw	-8
 13285  014788  006F FF8C  F03C    	movff	plusw1,btemp+10
 13286  01478E  0EF9               	movlw	-7
 13287  014790  006F FF8C  F03D    	movff	plusw1,btemp+11
 13288  014796  0E20               	movlw	32
 13289  014798  D005               	goto	u5250
 13290  01479A                     u5255:
 13291  01479A  90D8               	bcf	status,0,c
 13292  01479C  323D               	rrcf	(btemp+11)^0,f,c
 13293  01479E  323C               	rrcf	(btemp+10)^0,f,c
 13294  0147A0  323B               	rrcf	(btemp+9)^0,f,c
 13295  0147A2  323A               	rrcf	(btemp+8)^0,f,c
 13296  0147A4                     u5250:
 13297  0147A4  2EE8               	decfsz	wreg,f,c
 13298  0147A6  D7F9               	goto	u5255
 13299  0147A8  503A               	movf	(btemp+8)^0,w,c
 13300  0147AA  B4D8               	btfsc	status,2,c
 13301  0147AC  D028               	goto	l6603
 13302                           
 13303                           ;stkvar	_m @ sp[(-10)+4]
 13304                           ;stkvar	_u @ sp[(-10)+0]
 13305  0147AE  0EF6               	movlw	-10
 13306  0147B0  50E3               	movf	plusw1,w,c
 13307  0147B2  6E32               	movwf	btemp^0,c
 13308  0147B4  0EFA               	movlw	-6
 13309  0147B6  50E3               	movf	plusw1,w,c
 13310  0147B8  2632               	addwf	btemp^0,f,c
 13311  0147BA  0EF6               	movlw	-10
 13312  0147BC  0060  F0CB  FFE3   	movff	btemp,plusw1
 13313  0147C2  0EF7               	movlw	-9
 13314  0147C4  50E3               	movf	plusw1,w,c
 13315  0147C6  6E32               	movwf	btemp^0,c
 13316  0147C8  0EFB               	movlw	-5
 13317  0147CA  50E3               	movf	plusw1,w,c
 13318  0147CC  2232               	addwfc	btemp^0,f,c
 13319  0147CE  0EF7               	movlw	-9
 13320  0147D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 13321  0147D6  0EF8               	movlw	-8
 13322  0147D8  50E3               	movf	plusw1,w,c
 13323  0147DA  6E32               	movwf	btemp^0,c
 13324  0147DC  0EFC               	movlw	-4
 13325  0147DE  50E3               	movf	plusw1,w,c
 13326  0147E0  2232               	addwfc	btemp^0,f,c
 13327  0147E2  0EF8               	movlw	-8
 13328  0147E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13329  0147EA  0EF9               	movlw	-7
 13330  0147EC  50E3               	movf	plusw1,w,c
 13331  0147EE  6E32               	movwf	btemp^0,c
 13332  0147F0  0EFD               	movlw	-3
 13333  0147F2  50E3               	movf	plusw1,w,c
 13334  0147F4  2232               	addwfc	btemp^0,f,c
 13335  0147F6  0EF9               	movlw	-7
 13336  0147F8  0060  F0CB  FFE3   	movff	btemp,plusw1
 13337  0147FE                     l6603:
 13338                           
 13339                           ;stkvar	_m @ sp[(-10)+4]
 13340  0147FE  0EFA               	movlw	-6
 13341  014800  006F FF8C  F03A    	movff	plusw1,btemp+8
 13342  014806  0EFB               	movlw	-5
 13343  014808  006F FF8C  F03B    	movff	plusw1,btemp+9
 13344  01480E  0EFC               	movlw	-4
 13345  014810  006F FF8C  F03C    	movff	plusw1,btemp+10
 13346  014816  0EFD               	movlw	-3
 13347  014818  006F FF8C  F03D    	movff	plusw1,btemp+11
 13348  01481E  1C3A               	comf	(btemp+8)^0,w,c
 13349  014820  6E36               	movwf	(btemp+4)^0,c
 13350  014822  1C3B               	comf	(btemp+9)^0,w,c
 13351  014824  6E37               	movwf	(btemp+5)^0,c
 13352  014826  1C3C               	comf	(btemp+10)^0,w,c
 13353  014828  6E38               	movwf	(btemp+6)^0,c
 13354  01482A  1C3D               	comf	(btemp+11)^0,w,c
 13355  01482C  6E39               	movwf	(btemp+7)^0,c
 13356                           
 13357                           ;stkvar	_u @ sp[(-10)+0]
 13358  01482E  50E1               	movf	fsr1l,w,c
 13359  014830  0FF6               	addlw	-10
 13360  014832  6ED9               	movwf	fsr2l,c
 13361  014834  50E2               	movf	fsr1h,w,c
 13362  014836  6EDA               	movwf	fsr2h,c
 13363  014838  0EFF               	movlw	255
 13364  01483A  22DA               	addwfc	fsr2h,f,c
 13365  01483C  5036               	movf	(btemp+4)^0,w,c
 13366  01483E  16DE               	andwf	postinc2,f,c
 13367  014840  5037               	movf	(btemp+5)^0,w,c
 13368  014842  16DE               	andwf	postinc2,f,c
 13369  014844  5038               	movf	(btemp+6)^0,w,c
 13370  014846  16DE               	andwf	postinc2,f,c
 13371  014848  5039               	movf	(btemp+7)^0,w,c
 13372  01484A  16DE               	andwf	postinc2,f,c
 13373  01484C  D05B               	goto	l6613
 13374  01484E                     l6605:
 13375                           
 13376                           ;stkvar	_u @ sp[(-10)+0]
 13377  01484E  0EF6               	movlw	-10
 13378  014850  006F FF8C  F03A    	movff	plusw1,btemp+8
 13379  014856  0EF7               	movlw	-9
 13380  014858  006F FF8C  F03B    	movff	plusw1,btemp+9
 13381  01485E  0EF8               	movlw	-8
 13382  014860  006F FF8C  F03C    	movff	plusw1,btemp+10
 13383  014866  0EF9               	movlw	-7
 13384  014868  006F FF8C  F03D    	movff	plusw1,btemp+11
 13385  01486E  0E20               	movlw	32
 13386  014870  D005               	goto	u5270
 13387  014872                     u5275:
 13388  014872  90D8               	bcf	status,0,c
 13389  014874  323D               	rrcf	(btemp+11)^0,f,c
 13390  014876  323C               	rrcf	(btemp+10)^0,f,c
 13391  014878  323B               	rrcf	(btemp+9)^0,f,c
 13392  01487A  323A               	rrcf	(btemp+8)^0,f,c
 13393  01487C                     u5270:
 13394  01487C  2EE8               	decfsz	wreg,f,c
 13395  01487E  D7F9               	goto	u5275
 13396  014880  663A               	tstfsz	(btemp+8)^0,c
 13397  014882  D009               	goto	l6609
 13398                           
 13399                           ;stkvar	_u @ sp[(-10)+0]
 13400  014884  0EF6               	movlw	-10
 13401  014886  6AE3               	clrf	plusw1,c
 13402  014888  0EF7               	movlw	-9
 13403  01488A  6AE3               	clrf	plusw1,c
 13404  01488C  0EF8               	movlw	-8
 13405  01488E  6AE3               	clrf	plusw1,c
 13406  014890  0EF9               	movlw	-7
 13407  014892  6AE3               	clrf	plusw1,c
 13408  014894  D037               	goto	l6613
 13409  014896                     l6609:
 13410                           
 13411                           ;stkvar	_u @ sp[(-10)+0]
 13412  014896  0EF6               	movlw	-10
 13413  014898  006F FF8C  F03A    	movff	plusw1,btemp+8
 13414  01489E  0EF7               	movlw	-9
 13415  0148A0  006F FF8C  F03B    	movff	plusw1,btemp+9
 13416  0148A6  0EF8               	movlw	-8
 13417  0148A8  006F FF8C  F03C    	movff	plusw1,btemp+10
 13418  0148AE  0EF9               	movlw	-7
 13419  0148B0  006F FF8C  F03D    	movff	plusw1,btemp+11
 13420  0148B6  90D8               	bcf	status,0,c
 13421  0148B8  343A               	rlcf	(btemp+8)^0,w,c
 13422  0148BA  6E36               	movwf	(btemp+4)^0,c
 13423  0148BC  343B               	rlcf	(btemp+9)^0,w,c
 13424  0148BE  6E37               	movwf	(btemp+5)^0,c
 13425  0148C0  343C               	rlcf	(btemp+10)^0,w,c
 13426  0148C2  6E38               	movwf	(btemp+6)^0,c
 13427  0148C4  343D               	rlcf	(btemp+11)^0,w,c
 13428  0148C6  6E39               	movwf	(btemp+7)^0,c
 13429  0148C8  5036               	movf	(btemp+4)^0,w,c
 13430  0148CA  1037               	iorwf	(btemp+5)^0,w,c
 13431  0148CC  1038               	iorwf	(btemp+6)^0,w,c
 13432  0148CE  1039               	iorwf	(btemp+7)^0,w,c
 13433  0148D0  B4D8               	btfsc	status,2,c
 13434  0148D2  D018               	goto	l6613
 13435  0148D4  0E00               	movlw	0
 13436  0148D6  6E3A               	movwf	(btemp+8)^0,c
 13437  0148D8  0E00               	movlw	0
 13438  0148DA  6E3B               	movwf	(btemp+9)^0,c
 13439  0148DC  0E80               	movlw	128
 13440  0148DE  6E3C               	movwf	(btemp+10)^0,c
 13441  0148E0  0EBF               	movlw	191
 13442  0148E2  6E3D               	movwf	(btemp+11)^0,c
 13443                           
 13444                           ;stkvar	_u @ sp[(-10)+0]
 13445  0148E4  0EF6               	movlw	-10
 13446  0148E6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13447  0148EC  0EF7               	movlw	-9
 13448  0148EE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13449  0148F4  0EF8               	movlw	-8
 13450  0148F6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13451  0148FC  0EF9               	movlw	-7
 13452  0148FE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13453  014904                     l6613:
 13454                           
 13455                           ;stkvar	_u @ sp[(-10)+0]
 13456  014904  0EF6               	movlw	-10
 13457  014906  006F FF8C  F032    	movff	plusw1,btemp
 13458  01490C  0EF7               	movlw	-9
 13459  01490E  006F FF8C  F033    	movff	plusw1,btemp+1
 13460  014914  0EF8               	movlw	-8
 13461  014916  006F FF8C  F034    	movff	plusw1,btemp+2
 13462  01491C  0EF9               	movlw	-7
 13463  01491E                     L12:
 13464  01491E  006F FF8C  F035    	movff	plusw1,btemp+3
 13465                           
 13466                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13467  014924  0EF2               	movlw	242
 13468  014926  26E1               	addwf	fsr1l,f,c
 13469  014928  0EFF               	movlw	255
 13470  01492A  22E2               	addwfc	fsr1h,f,c
 13471  01492C  0012               	return		;funcret
 13472  01492E                     __end_of_floorf:
 13473                           	opt callstack 0
 13474                           
 13475 ;; *************** function ___fpclassifyf *****************
 13476 ;; Defined at:
 13477 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;  x               4  [STACK] float 
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;  u               4  [STACK] struct .
 13482 ;;  e               2  [STACK] int 
 13483 ;; Return value:  Size  Location     Type
 13484 ;;                  2  [STACK] int 
 13485 ;; Registers used:
 13486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 13487 ;; Tracked objects:
 13488 ;;		On entry : 0/5
 13489 ;;		On exit  : 0/0
 13490 ;;		Unchanged: 0/0
 13491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13496 ;;Total ram usage:        0 bytes
 13497 ;; Hardware stack levels used:    1
 13498 ;; Hardware stack levels required when called:    6
 13499 ;; This function calls:
 13500 ;;		Nothing
 13501 ;; This function is called by:
 13502 ;;		_efgtoa
 13503 ;; This function uses a reentrant model
 13504 ;;
 13505                           
 13506                           	psect	text51
 13507  016084                     __ptext51:
 13508                           	opt callstack 0
 13509  016084                     ___fpclassifyf:
 13510                           	opt callstack 0
 13511                           
 13512                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13513  016084  0E06               	movlw	6
 13514  016086  26E1               	addwf	fsr1l,f,c
 13515  016088  0E00               	movlw	0
 13516  01608A  22E2               	addwfc	fsr1h,f,c
 13517                           
 13518                           ;incstack = 0
 13519  01608C  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 13520  016092  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 13521  016098  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 13522  01609E  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13523                           
 13524                           ;stkvar	_u @ sp[(-6)+0]
 13525  0160A4  0EFA               	movlw	-6
 13526  0160A6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13527  0160AC  0EFB               	movlw	-5
 13528  0160AE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13529  0160B4  0EFC               	movlw	-4
 13530  0160B6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13531  0160BC  0EFD               	movlw	-3
 13532  0160BE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13533                           
 13534                           ;stkvar	_x @ sp[(-6)+-4]
 13535  0160C4  0EF6               	movlw	-10
 13536  0160C6  006F FF8C  F03A    	movff	plusw1,btemp+8
 13537  0160CC  0EF7               	movlw	-9
 13538  0160CE  006F FF8C  F03B    	movff	plusw1,btemp+9
 13539  0160D4  0EF8               	movlw	-8
 13540  0160D6  006F FF8C  F03C    	movff	plusw1,btemp+10
 13541  0160DC  0EF9               	movlw	-7
 13542  0160DE  006F FF8C  F03D    	movff	plusw1,btemp+11
 13543                           
 13544                           ;stkvar	_u @ sp[(-6)+0]
 13545  0160E4  0EFA               	movlw	-6
 13546  0160E6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13547  0160EC  0EFB               	movlw	-5
 13548  0160EE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13549  0160F4  0EFC               	movlw	-4
 13550  0160F6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13551  0160FC  0EFD               	movlw	-3
 13552  0160FE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13553                           
 13554                           ;stkvar	_u @ sp[(-6)+0]
 13555  016104  0EFA               	movlw	-6
 13556  016106  006F FF8C  F03A    	movff	plusw1,btemp+8
 13557  01610C  0EFB               	movlw	-5
 13558  01610E  006F FF8C  F03B    	movff	plusw1,btemp+9
 13559  016114  0EFC               	movlw	-4
 13560  016116  006F FF8C  F03C    	movff	plusw1,btemp+10
 13561  01611C  0EFD               	movlw	-3
 13562  01611E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13563  016124  0E18               	movlw	24
 13564  016126  D005               	goto	u5080
 13565  016128                     u5085:
 13566  016128  90D8               	bcf	status,0,c
 13567  01612A  323D               	rrcf	(btemp+11)^0,f,c
 13568  01612C  323C               	rrcf	(btemp+10)^0,f,c
 13569  01612E  323B               	rrcf	(btemp+9)^0,f,c
 13570  016130  323A               	rrcf	(btemp+8)^0,f,c
 13571  016132                     u5080:
 13572  016132  2EE8               	decfsz	wreg,f,c
 13573  016134  D7F9               	goto	u5085
 13574  016136  0060  F0E8  F038   	movff	btemp+8,btemp+6
 13575  01613C  0060  F0EC  F039   	movff	btemp+9,btemp+7
 13576  016142  0EFF               	movlw	255
 13577  016144  1638               	andwf	(btemp+6)^0,f,c
 13578  016146  0E00               	movlw	0
 13579  016148  1639               	andwf	(btemp+7)^0,f,c
 13580                           
 13581                           ;stkvar	_e @ sp[(-6)+4]
 13582  01614A  0EFE               	movlw	-2
 13583  01614C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13584  016152  0EFF               	movlw	-1
 13585  016154  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13586                           
 13587                           ;stkvar	_e @ sp[(-6)+4]
 13588  01615A  0EFE               	movlw	-2
 13589  01615C  006F FF8C  F032    	movff	plusw1,btemp
 13590  016162  0EFF               	movlw	-1
 13591  016164  50E3               	movf	plusw1,w,c
 13592  016166  1032               	iorwf	btemp^0,w,c
 13593  016168  A4D8               	btfss	status,2,c
 13594  01616A  D023               	goto	l6551
 13595                           
 13596                           ;stkvar	_u @ sp[(-6)+0]
 13597  01616C  0EFA               	movlw	-6
 13598  01616E  006F FF8C  F03A    	movff	plusw1,btemp+8
 13599  016174  0EFB               	movlw	-5
 13600  016176  006F FF8C  F03B    	movff	plusw1,btemp+9
 13601  01617C  0EFC               	movlw	-4
 13602  01617E  006F FF8C  F03C    	movff	plusw1,btemp+10
 13603  016184  0EFD               	movlw	-3
 13604  016186  006F FF8C  F03D    	movff	plusw1,btemp+11
 13605  01618C  90D8               	bcf	status,0,c
 13606  01618E  343A               	rlcf	(btemp+8)^0,w,c
 13607  016190  6E36               	movwf	(btemp+4)^0,c
 13608  016192  343B               	rlcf	(btemp+9)^0,w,c
 13609  016194  6E37               	movwf	(btemp+5)^0,c
 13610  016196  343C               	rlcf	(btemp+10)^0,w,c
 13611  016198  6E38               	movwf	(btemp+6)^0,c
 13612  01619A  343D               	rlcf	(btemp+11)^0,w,c
 13613  01619C  6E39               	movwf	(btemp+7)^0,c
 13614  01619E  5036               	movf	(btemp+4)^0,w,c
 13615  0161A0  1037               	iorwf	(btemp+5)^0,w,c
 13616  0161A2  1038               	iorwf	(btemp+6)^0,w,c
 13617  0161A4  1039               	iorwf	(btemp+7)^0,w,c
 13618  0161A6  A4D8               	btfss	status,2,c
 13619  0161A8  D002               	goto	l6547
 13620  0161AA  0E02               	movlw	2
 13621  0161AC  D02E               	goto	L13
 13622  0161AE                     l6547:
 13623  0161AE  0E03               	movlw	3
 13624  0161B0  D02C               	goto	L13
 13625  0161B2                     l6551:
 13626                           
 13627                           ;stkvar	_e @ sp[(-6)+4]
 13628  0161B2  0EFE               	movlw	-2
 13629  0161B4  28E3               	incf	plusw1,w,c
 13630  0161B6  E128               	bnz	l6557
 13631  0161B8  0EFF               	movlw	-1
 13632  0161BA  50E3               	movf	plusw1,w,c
 13633  0161BC  A4D8               	btfss	status,2,c
 13634  0161BE  D024               	goto	l6557
 13635                           
 13636                           ;stkvar	_u @ sp[(-6)+0]
 13637  0161C0  0EFA               	movlw	-6
 13638  0161C2  006F FF8C  F03A    	movff	plusw1,btemp+8
 13639  0161C8  0EFB               	movlw	-5
 13640  0161CA  006F FF8C  F03B    	movff	plusw1,btemp+9
 13641  0161D0  0EFC               	movlw	-4
 13642  0161D2  006F FF8C  F03C    	movff	plusw1,btemp+10
 13643  0161D8  0EFD               	movlw	-3
 13644  0161DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 13645  0161E0  0E09               	movlw	9
 13646  0161E2                     u5125:
 13647  0161E2  90D8               	bcf	status,0,c
 13648  0161E4  363A               	rlcf	(btemp+8)^0,f,c
 13649  0161E6  363B               	rlcf	(btemp+9)^0,f,c
 13650  0161E8  363C               	rlcf	(btemp+10)^0,f,c
 13651  0161EA  363D               	rlcf	(btemp+11)^0,f,c
 13652  0161EC  2EE8               	decfsz	wreg,f,c
 13653  0161EE  D7F9               	goto	u5125
 13654  0161F0  503A               	movf	(btemp+8)^0,w,c
 13655  0161F2  103B               	iorwf	(btemp+9)^0,w,c
 13656  0161F4  103C               	iorwf	(btemp+10)^0,w,c
 13657  0161F6  103D               	iorwf	(btemp+11)^0,w,c
 13658  0161F8  A4D8               	btfss	status,2,c
 13659  0161FA  D002               	goto	u5130
 13660  0161FC  0E01               	movlw	1
 13661  0161FE  D001               	goto	u5140
 13662  016200                     u5130:
 13663  016200  0E00               	movlw	0
 13664  016202                     u5140:
 13665  016202  6E32               	movwf	btemp^0,c
 13666  016204  6A33               	clrf	(btemp+1)^0,c
 13667  016206  D004               	goto	l2759
 13668  016208                     l6557:
 13669  016208  0E04               	movlw	4
 13670  01620A                     L13:
 13671  01620A  6E32               	movwf	btemp^0,c
 13672  01620C  0E00               	movlw	0
 13673  01620E  6E33               	movwf	(btemp+1)^0,c
 13674  016210                     l2759:
 13675                           
 13676                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13677  016210  0EF6               	movlw	246
 13678  016212  26E1               	addwf	fsr1l,f,c
 13679  016214  0EFF               	movlw	255
 13680  016216  22E2               	addwfc	fsr1h,f,c
 13681  016218  0012               	return		;funcret
 13682  01621A                     __end_of___fpclassifyf:
 13683                           	opt callstack 0
 13684                           
 13685 ;; *************** function ___fltol *****************
 13686 ;; Defined at:
 13687 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;  f1              4  [STACK] int 
 13690 ;; Auto vars:     Size  Location     Type
 13691 ;;  exp1            1  [STACK] unsigned char 
 13692 ;;  sign1           1  [STACK] unsigned char 
 13693 ;; Return value:  Size  Location     Type
 13694 ;;                  4  [STACK] long 
 13695 ;; Registers used:
 13696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13697 ;; Tracked objects:
 13698 ;;		On entry : 0/5
 13699 ;;		On exit  : 0/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13706 ;;Total ram usage:        0 bytes
 13707 ;; Hardware stack levels used:    1
 13708 ;; Hardware stack levels required when called:    6
 13709 ;; This function calls:
 13710 ;;		Nothing
 13711 ;; This function is called by:
 13712 ;;		_efgtoa
 13713 ;; This function uses a reentrant model
 13714 ;;
 13715                           
 13716                           	psect	text52
 13717  01621A                     __ptext52:
 13718                           	opt callstack 0
 13719  01621A                     ___fltol:
 13720                           	opt callstack 0
 13721                           
 13722                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13723  01621A  52E6               	movf	postinc1,f,c
 13724  01621C  52E6               	movf	postinc1,f,c
 13725                           
 13726                           ;stkvar	_f1 @ sp[(-2)+-4]
 13727                           
 13728                           ;incstack = 0
 13729  01621E  0EFA               	movlw	-6
 13730  016220  006F FF8C  F03A    	movff	plusw1,btemp+8
 13731  016226  0EFB               	movlw	-5
 13732  016228  006F FF8C  F03B    	movff	plusw1,btemp+9
 13733  01622E  0EFC               	movlw	-4
 13734  016230  006F FF8C  F03C    	movff	plusw1,btemp+10
 13735  016236  0EFD               	movlw	-3
 13736  016238  006F FF8C  F03D    	movff	plusw1,btemp+11
 13737  01623E  0E18               	movlw	24
 13738  016240  D005               	goto	u6290
 13739  016242                     u6295:
 13740  016242  90D8               	bcf	status,0,c
 13741  016244  323D               	rrcf	(btemp+11)^0,f,c
 13742  016246  323C               	rrcf	(btemp+10)^0,f,c
 13743  016248  323B               	rrcf	(btemp+9)^0,f,c
 13744  01624A  323A               	rrcf	(btemp+8)^0,f,c
 13745  01624C                     u6290:
 13746  01624C  2EE8               	decfsz	wreg,f,c
 13747  01624E  D7F9               	goto	u6295
 13748                           
 13749                           ;stkvar	_exp1 @ sp[(-2)+0]
 13750  016250  0EFE               	movlw	-2
 13751  016252  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13752  016258  0EFE               	movlw	-2
 13753  01625A  50E3               	movf	plusw1,w,c
 13754  01625C  A4D8               	btfss	status,2,c
 13755  01625E  D006               	goto	l7177
 13756  016260                     u6300:
 13757  016260  0E00               	movlw	0
 13758  016262  6E32               	movwf	btemp^0,c
 13759  016264  6A33               	clrf	(btemp+1)^0,c
 13760  016266  6A34               	clrf	(btemp+2)^0,c
 13761  016268  6A35               	clrf	(btemp+3)^0,c
 13762  01626A  D08B               	goto	l2375
 13763  01626C                     l7177:
 13764                           
 13765                           ;stkvar	_f1 @ sp[(-2)+-4]
 13766  01626C  0EFA               	movlw	-6
 13767  01626E  006F FF8C  F03A    	movff	plusw1,btemp+8
 13768  016274  0EFB               	movlw	-5
 13769  016276  006F FF8C  F03B    	movff	plusw1,btemp+9
 13770  01627C  0EFC               	movlw	-4
 13771  01627E  006F FF8C  F03C    	movff	plusw1,btemp+10
 13772  016284  0EFD               	movlw	-3
 13773  016286  006F FF8C  F03D    	movff	plusw1,btemp+11
 13774  01628C  0E20               	movlw	32
 13775  01628E  D005               	goto	u6310
 13776  016290                     u6315:
 13777  016290  90D8               	bcf	status,0,c
 13778  016292  323D               	rrcf	(btemp+11)^0,f,c
 13779  016294  323C               	rrcf	(btemp+10)^0,f,c
 13780  016296  323B               	rrcf	(btemp+9)^0,f,c
 13781  016298  323A               	rrcf	(btemp+8)^0,f,c
 13782  01629A                     u6310:
 13783  01629A  2EE8               	decfsz	wreg,f,c
 13784  01629C  D7F9               	goto	u6315
 13785                           
 13786                           ;stkvar	_sign1 @ sp[(-2)+1]
 13787  01629E  0EFF               	movlw	-1
 13788  0162A0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13789                           
 13790                           ;stkvar	_f1 @ sp[(-2)+-4]
 13791  0162A6  0EFC               	movlw	-4
 13792  0162A8  8EE3               	bsf	plusw1,7,c
 13793                           
 13794                           ;stkvar	_f1 @ sp[(-2)+-4]
 13795  0162AA  50E1               	movf	fsr1l,w,c
 13796  0162AC  0FFA               	addlw	-6
 13797  0162AE  6ED9               	movwf	fsr2l,c
 13798  0162B0  50E2               	movf	fsr1h,w,c
 13799  0162B2  6EDA               	movwf	fsr2h,c
 13800  0162B4  0EFF               	movlw	255
 13801  0162B6  22DA               	addwfc	fsr2h,f,c
 13802  0162B8  0EFF               	movlw	255
 13803  0162BA  16DE               	andwf	postinc2,f,c
 13804  0162BC  0EFF               	movlw	255
 13805  0162BE  16DE               	andwf	postinc2,f,c
 13806  0162C0  0EFF               	movlw	255
 13807  0162C2  16DE               	andwf	postinc2,f,c
 13808  0162C4  0E00               	movlw	0
 13809  0162C6  16DE               	andwf	postinc2,f,c
 13810                           
 13811                           ;stkvar	_exp1 @ sp[(-2)+0]
 13812  0162C8  0EFE               	movlw	-2
 13813  0162CA  006F FF8C  F032    	movff	plusw1,btemp
 13814  0162D0  0E96               	movlw	150
 13815  0162D2  5E32               	subwf	btemp^0,f,c
 13816  0162D4  0EFE               	movlw	-2
 13817  0162D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 13818                           
 13819                           ;stkvar	_exp1 @ sp[(-2)+0]
 13820  0162DC  0EFE               	movlw	-2
 13821  0162DE  AEE3               	btfss	plusw1,7,c
 13822  0162E0  D014               	goto	l7195
 13823                           
 13824                           ;stkvar	_exp1 @ sp[(-2)+0]
 13825  0162E2  0EFE               	movlw	-2
 13826  0162E4  50E3               	movf	plusw1,w,c
 13827  0162E6  0A80               	xorlw	128
 13828  0162E8  0F97               	addlw	151
 13829  0162EA  A0D8               	btfss	status,0,c
 13830  0162EC  D7B9               	goto	u6300
 13831  0162EE                     l7193:
 13832                           
 13833                           ;stkvar	_f1 @ sp[(-2)+-4]
 13834  0162EE  90D8               	bcf	status,0,c
 13835  0162F0  0EFD               	movlw	-3
 13836  0162F2  32E3               	rrcf	plusw1,f,c
 13837  0162F4  0EFC               	movlw	-4
 13838  0162F6  32E3               	rrcf	plusw1,f,c
 13839  0162F8  0EFB               	movlw	-5
 13840  0162FA  32E3               	rrcf	plusw1,f,c
 13841  0162FC  0EFA               	movlw	-6
 13842  0162FE  32E3               	rrcf	plusw1,f,c
 13843                           
 13844                           ;stkvar	_exp1 @ sp[(-2)+0]
 13845  016300  0EFE               	movlw	-2
 13846  016302  2AE3               	incf	plusw1,f,c
 13847  016304  B4D8               	btfsc	status,2,c
 13848  016306  D018               	goto	u6360
 13849  016308  D7F2               	goto	l7193
 13850  01630A                     l7195:
 13851                           
 13852                           ;stkvar	_exp1 @ sp[(-2)+0]
 13853  01630A  0EFE               	movlw	-2
 13854  01630C  006F FF8C  F032    	movff	plusw1,btemp
 13855  016312  0E1F               	movlw	31
 13856  016314  6432               	cpfsgt	btemp^0,c
 13857  016316  D00C               	goto	l7203
 13858  016318  D7A3               	goto	u6300
 13859  01631A                     l7201:
 13860                           
 13861                           ;stkvar	_f1 @ sp[(-2)+-4]
 13862  01631A  90D8               	bcf	status,0,c
 13863  01631C  0EFA               	movlw	-6
 13864  01631E  36E3               	rlcf	plusw1,f,c
 13865  016320  0EFB               	movlw	-5
 13866  016322  36E3               	rlcf	plusw1,f,c
 13867  016324  0EFC               	movlw	-4
 13868  016326  36E3               	rlcf	plusw1,f,c
 13869  016328  0EFD               	movlw	-3
 13870  01632A  36E3               	rlcf	plusw1,f,c
 13871                           
 13872                           ;stkvar	_exp1 @ sp[(-2)+0]
 13873  01632C  0EFE               	movlw	-2
 13874  01632E  06E3               	decf	plusw1,f,c
 13875  016330                     l7203:
 13876                           
 13877                           ;stkvar	_exp1 @ sp[(-2)+0]
 13878  016330  0EFE               	movlw	-2
 13879  016332  50E3               	movf	plusw1,w,c
 13880  016334  A4D8               	btfss	status,2,c
 13881  016336  D7F1               	goto	l7201
 13882  016338                     u6360:
 13883                           
 13884                           ;stkvar	_sign1 @ sp[(-2)+1]
 13885  016338  0EFF               	movlw	-1
 13886  01633A  50E3               	movf	plusw1,w,c
 13887  01633C  B4D8               	btfsc	status,2,c
 13888  01633E  D011               	goto	u6380
 13889                           
 13890                           ;stkvar	_f1 @ sp[(-2)+-4]
 13891                           ;stkvar	_f1 @ sp[(-2)+-4]
 13892  016340  0EFA               	movlw	-6
 13893  016342  6CE3               	negf	plusw1,c
 13894  016344  0EFB               	movlw	-5
 13895  016346  1EE3               	comf	plusw1,f,c
 13896  016348  0EFC               	movlw	-4
 13897  01634A  1EE3               	comf	plusw1,f,c
 13898  01634C  0EFD               	movlw	-3
 13899  01634E  1EE3               	comf	plusw1,f,c
 13900  016350  E308               	bnc	u6380
 13901  016352  0EFB               	movlw	-5
 13902  016354  2AE3               	incf	plusw1,f,c
 13903  016356  E305               	bnc	u6380
 13904  016358  0EFC               	movlw	-4
 13905  01635A  2AE3               	incf	plusw1,f,c
 13906  01635C  E302               	bnc	u6380
 13907  01635E  0EFD               	movlw	-3
 13908  016360  2AE3               	incf	plusw1,f,c
 13909  016362                     u6380:
 13910                           
 13911                           ;stkvar	_f1 @ sp[(-2)+-4]
 13912  016362  0EFA               	movlw	-6
 13913  016364  006F FF8C  F032    	movff	plusw1,btemp
 13914  01636A  0EFB               	movlw	-5
 13915  01636C  006F FF8C  F033    	movff	plusw1,btemp+1
 13916  016372  0EFC               	movlw	-4
 13917  016374  006F FF8C  F034    	movff	plusw1,btemp+2
 13918  01637A  0EFD               	movlw	-3
 13919  01637C  006F FF8C  F035    	movff	plusw1,btemp+3
 13920  016382                     l2375:
 13921                           
 13922                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13923  016382  0EFA               	movlw	250
 13924  016384  26E1               	addwf	fsr1l,f,c
 13925  016386  0EFF               	movlw	255
 13926  016388  22E2               	addwfc	fsr1h,f,c
 13927  01638A  0012               	return		;funcret
 13928  01638C                     __end_of___fltol:
 13929                           	opt callstack 0
 13930                           
 13931 ;; *************** function ___flneg *****************
 13932 ;; Defined at:
 13933 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 13934 ;; Parameters:    Size  Location     Type
 13935 ;;  f1              4  [STACK] long 
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;		None
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  4  [STACK] long 
 13940 ;; Registers used:
 13941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/5
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13951 ;;Total ram usage:        0 bytes
 13952 ;; Hardware stack levels used:    1
 13953 ;; Hardware stack levels required when called:    6
 13954 ;; This function calls:
 13955 ;;		Nothing
 13956 ;; This function is called by:
 13957 ;;		_efgtoa
 13958 ;; This function uses a reentrant model
 13959 ;;
 13960                           
 13961                           	psect	text53
 13962  017FFC                     __ptext53:
 13963                           	opt callstack 0
 13964  017FFC                     ___flneg:
 13965                           	opt callstack 17
 13966                           
 13967                           ;stkvar	_f1 @ sp[(0)+-4]
 13968                           
 13969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13970                           ;incstack = 0
 13971  017FFC  0EFC               	movlw	-4
 13972  017FFE  50E3               	movf	plusw1,w,c
 13973  018000  E10A               	bnz	u6280
 13974  018002  0EFD               	movlw	-3
 13975  018004  50E3               	movf	plusw1,w,c
 13976  018006  E107               	bnz	u6280
 13977  018008  0EFE               	movlw	-2
 13978  01800A  50E3               	movf	plusw1,w,c
 13979  01800C  E104               	bnz	u6280
 13980  01800E  0EFF               	movlw	-1
 13981  018010  50E3               	movf	plusw1,w,c
 13982  018012  B4D8               	btfsc	status,2,c
 13983  018014  D002               	goto	l7167
 13984  018016                     u6280:
 13985                           
 13986                           ;stkvar	_f1 @ sp[(0)+-4]
 13987  018016  0EFF               	movlw	-1
 13988  018018  7EE3               	btg	plusw1,7,c
 13989  01801A                     l7167:
 13990                           
 13991                           ;stkvar	_f1 @ sp[(0)+-4]
 13992  01801A  0EFC               	movlw	-4
 13993  01801C  006F FF8C  F032    	movff	plusw1,btemp
 13994  018022  0EFD               	movlw	-3
 13995  018024  006F FF8C  F033    	movff	plusw1,btemp+1
 13996  01802A  0EFE               	movlw	-2
 13997  01802C  006F FF8C  F034    	movff	plusw1,btemp+2
 13998  018032  0EFF               	movlw	-1
 13999  018034  006F FF8C  F035    	movff	plusw1,btemp+3
 14000                           
 14001                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14002  01803A  52E5               	movf	postdec1,f,c
 14003  01803C  52E5               	movf	postdec1,f,c
 14004  01803E  52E5               	movf	postdec1,f,c
 14005  018040  52E5               	movf	postdec1,f,c
 14006  018042  0012               	return		;funcret
 14007  018044                     __end_of___flneg:
 14008                           	opt callstack 0
 14009                           
 14010 ;; *************** function ___flge *****************
 14011 ;; Defined at:
 14012 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;  ff1             4  [STACK] long 
 14015 ;;  ff2             4  [STACK] long 
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;		None
 14018 ;; Return value:  Size  Location     Type
 14019 ;;		None               void
 14020 ;; Registers used:
 14021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14022 ;; Tracked objects:
 14023 ;;		On entry : 0/5
 14024 ;;		On exit  : 0/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14031 ;;Total ram usage:        0 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:    6
 14034 ;; This function calls:
 14035 ;;		Nothing
 14036 ;; This function is called by:
 14037 ;;		_efgtoa
 14038 ;; This function uses a reentrant model
 14039 ;;
 14040                           
 14041                           	psect	text54
 14042  01638C                     __ptext54:
 14043                           	opt callstack 0
 14044  01638C                     ___flge:
 14045                           	opt callstack 17
 14046                           
 14047                           ;stkvar	_ff1 @ sp[(0)+-4]
 14048                           
 14049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14050                           ;incstack = 0
 14051  01638C  50E1               	movf	fsr1l,w,c
 14052  01638E  0FFC               	addlw	-4
 14053  016390  6ED9               	movwf	fsr2l,c
 14054  016392  50E2               	movf	fsr1h,w,c
 14055  016394  6EDA               	movwf	fsr2h,c
 14056  016396  0EFF               	movlw	255
 14057  016398  22DA               	addwfc	fsr2h,f,c
 14058  01639A  0E00               	movlw	0
 14059  01639C  14DE               	andwf	postinc2,w,c
 14060  01639E  6E3A               	movwf	(btemp+8)^0,c
 14061  0163A0  0E00               	movlw	0
 14062  0163A2  14DE               	andwf	postinc2,w,c
 14063  0163A4  6E3B               	movwf	(btemp+9)^0,c
 14064  0163A6  0E80               	movlw	128
 14065  0163A8  14DE               	andwf	postinc2,w,c
 14066  0163AA  6E3C               	movwf	(btemp+10)^0,c
 14067  0163AC  0E7F               	movlw	127
 14068  0163AE  14DE               	andwf	postinc2,w,c
 14069  0163B0  6E3D               	movwf	(btemp+11)^0,c
 14070  0163B2  503A               	movf	(btemp+8)^0,w,c
 14071  0163B4  103B               	iorwf	(btemp+9)^0,w,c
 14072  0163B6  103C               	iorwf	(btemp+10)^0,w,c
 14073  0163B8  103D               	iorwf	(btemp+11)^0,w,c
 14074  0163BA  A4D8               	btfss	status,2,c
 14075  0163BC  D008               	goto	l7141
 14076                           
 14077                           ;stkvar	_ff1 @ sp[(0)+-4]
 14078  0163BE  0EFC               	movlw	-4
 14079  0163C0  6AE3               	clrf	plusw1,c
 14080  0163C2  0EFD               	movlw	-3
 14081  0163C4  6AE3               	clrf	plusw1,c
 14082  0163C6  0EFE               	movlw	-2
 14083  0163C8  6AE3               	clrf	plusw1,c
 14084  0163CA  0EFF               	movlw	-1
 14085  0163CC  6AE3               	clrf	plusw1,c
 14086  0163CE                     l7141:
 14087                           
 14088                           ;stkvar	_ff2 @ sp[(0)+-8]
 14089  0163CE  50E1               	movf	fsr1l,w,c
 14090  0163D0  0FF8               	addlw	-8
 14091  0163D2  6ED9               	movwf	fsr2l,c
 14092  0163D4  50E2               	movf	fsr1h,w,c
 14093  0163D6  6EDA               	movwf	fsr2h,c
 14094  0163D8  0EFF               	movlw	255
 14095  0163DA  22DA               	addwfc	fsr2h,f,c
 14096  0163DC  0E00               	movlw	0
 14097  0163DE  14DE               	andwf	postinc2,w,c
 14098  0163E0  6E3A               	movwf	(btemp+8)^0,c
 14099  0163E2  0E00               	movlw	0
 14100  0163E4  14DE               	andwf	postinc2,w,c
 14101  0163E6  6E3B               	movwf	(btemp+9)^0,c
 14102  0163E8  0E80               	movlw	128
 14103  0163EA  14DE               	andwf	postinc2,w,c
 14104  0163EC  6E3C               	movwf	(btemp+10)^0,c
 14105  0163EE  0E7F               	movlw	127
 14106  0163F0  14DE               	andwf	postinc2,w,c
 14107  0163F2  6E3D               	movwf	(btemp+11)^0,c
 14108  0163F4  503A               	movf	(btemp+8)^0,w,c
 14109  0163F6  103B               	iorwf	(btemp+9)^0,w,c
 14110  0163F8  103C               	iorwf	(btemp+10)^0,w,c
 14111  0163FA  103D               	iorwf	(btemp+11)^0,w,c
 14112  0163FC  A4D8               	btfss	status,2,c
 14113  0163FE  D008               	goto	l2341
 14114                           
 14115                           ;stkvar	_ff2 @ sp[(0)+-8]
 14116  016400  0EF8               	movlw	-8
 14117  016402  6AE3               	clrf	plusw1,c
 14118  016404  0EF9               	movlw	-7
 14119  016406  6AE3               	clrf	plusw1,c
 14120  016408  0EFA               	movlw	-6
 14121  01640A  6AE3               	clrf	plusw1,c
 14122  01640C  0EFB               	movlw	-5
 14123  01640E  6AE3               	clrf	plusw1,c
 14124  016410                     l2341:
 14125                           
 14126                           ;stkvar	_ff1 @ sp[(0)+-4]
 14127  016410  0EFF               	movlw	-1
 14128  016412  AEE3               	btfss	plusw1,7,c
 14129  016414  D024               	goto	l7147
 14130                           
 14131                           ;stkvar	_ff1 @ sp[(0)+-4]
 14132  016416  0E00               	movlw	0
 14133  016418  6E3A               	movwf	(btemp+8)^0,c
 14134  01641A  0E00               	movlw	0
 14135  01641C  6E3B               	movwf	(btemp+9)^0,c
 14136  01641E  0E00               	movlw	0
 14137  016420  6E3C               	movwf	(btemp+10)^0,c
 14138  016422  0E80               	movlw	128
 14139  016424  6E3D               	movwf	(btemp+11)^0,c
 14140  016426  0EFC               	movlw	-4
 14141  016428  50E3               	movf	plusw1,w,c
 14142  01642A  5E3A               	subwf	(btemp+8)^0,f,c
 14143  01642C  0EFD               	movlw	-3
 14144  01642E  50E3               	movf	plusw1,w,c
 14145  016430  5A3B               	subwfb	(btemp+9)^0,f,c
 14146  016432  0EFE               	movlw	-2
 14147  016434  50E3               	movf	plusw1,w,c
 14148  016436  5A3C               	subwfb	(btemp+10)^0,f,c
 14149  016438  0EFF               	movlw	-1
 14150  01643A  50E3               	movf	plusw1,w,c
 14151  01643C  5A3D               	subwfb	(btemp+11)^0,f,c
 14152                           
 14153                           ;stkvar	_ff1 @ sp[(0)+-4]
 14154  01643E  0EFC               	movlw	-4
 14155  016440  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14156  016446  0EFD               	movlw	-3
 14157  016448  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14158  01644E  0EFE               	movlw	-2
 14159  016450  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14160  016456  0EFF               	movlw	-1
 14161  016458  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14162  01645E                     l7147:
 14163                           
 14164                           ;stkvar	_ff2 @ sp[(0)+-8]
 14165  01645E  0EFB               	movlw	-5
 14166  016460  AEE3               	btfss	plusw1,7,c
 14167  016462  D024               	goto	l7151
 14168                           
 14169                           ;stkvar	_ff2 @ sp[(0)+-8]
 14170  016464  0E00               	movlw	0
 14171  016466  6E3A               	movwf	(btemp+8)^0,c
 14172  016468  0E00               	movlw	0
 14173  01646A  6E3B               	movwf	(btemp+9)^0,c
 14174  01646C  0E00               	movlw	0
 14175  01646E  6E3C               	movwf	(btemp+10)^0,c
 14176  016470  0E80               	movlw	128
 14177  016472  6E3D               	movwf	(btemp+11)^0,c
 14178  016474  0EF8               	movlw	-8
 14179  016476  50E3               	movf	plusw1,w,c
 14180  016478  5E3A               	subwf	(btemp+8)^0,f,c
 14181  01647A  0EF9               	movlw	-7
 14182  01647C  50E3               	movf	plusw1,w,c
 14183  01647E  5A3B               	subwfb	(btemp+9)^0,f,c
 14184  016480  0EFA               	movlw	-6
 14185  016482  50E3               	movf	plusw1,w,c
 14186  016484  5A3C               	subwfb	(btemp+10)^0,f,c
 14187  016486  0EFB               	movlw	-5
 14188  016488  50E3               	movf	plusw1,w,c
 14189  01648A  5A3D               	subwfb	(btemp+11)^0,f,c
 14190                           
 14191                           ;stkvar	_ff2 @ sp[(0)+-8]
 14192  01648C  0EF8               	movlw	-8
 14193  01648E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14194  016494  0EF9               	movlw	-7
 14195  016496  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14196  01649C  0EFA               	movlw	-6
 14197  01649E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14198  0164A4  0EFB               	movlw	-5
 14199  0164A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14200  0164AC                     l7151:
 14201                           
 14202                           ;stkvar	_ff1 @ sp[(0)+-4]
 14203  0164AC  0EFF               	movlw	-1
 14204  0164AE  7EE3               	btg	plusw1,7,c
 14205                           
 14206                           ;stkvar	_ff2 @ sp[(0)+-8]
 14207  0164B0  0EFB               	movlw	-5
 14208  0164B2  7EE3               	btg	plusw1,7,c
 14209                           
 14210                           ;stkvar	_ff2 @ sp[(0)+-8]
 14211                           ;stkvar	_ff1 @ sp[(0)+-4]
 14212  0164B4  50E1               	movf	fsr1l,w,c
 14213  0164B6  0FFC               	addlw	-4
 14214  0164B8  6ED9               	movwf	fsr2l,c
 14215  0164BA  50E2               	movf	fsr1h,w,c
 14216  0164BC  6EDA               	movwf	fsr2h,c
 14217  0164BE  0EFF               	movlw	255
 14218  0164C0  22DA               	addwfc	fsr2h,f,c
 14219  0164C2  0EF8               	movlw	-8
 14220  0164C4  50E3               	movf	plusw1,w,c
 14221  0164C6  5CDE               	subwf	postinc2,w,c
 14222  0164C8  0EF9               	movlw	-7
 14223  0164CA  50E3               	movf	plusw1,w,c
 14224  0164CC  58DE               	subwfb	postinc2,w,c
 14225  0164CE  0EFA               	movlw	-6
 14226  0164D0  50E3               	movf	plusw1,w,c
 14227  0164D2  58DE               	subwfb	postinc2,w,c
 14228  0164D4  0EFB               	movlw	-5
 14229  0164D6  50E3               	movf	plusw1,w,c
 14230  0164D8  58DE               	subwfb	postinc2,w,c
 14231  0164DA  B0D8               	btfsc	status,0,c
 14232  0164DC  D002               	goto	l7159
 14233  0164DE  9032               	bcf	btemp& (0+255),0,c
 14234  0164E0  D001               	goto	l2348
 14235  0164E2                     l7159:
 14236  0164E2  8032               	bsf	btemp& (0+255),0,c
 14237  0164E4                     l2348:
 14238                           
 14239                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14240  0164E4  0EF8               	movlw	248
 14241  0164E6  26E1               	addwf	fsr1l,f,c
 14242  0164E8  0EFF               	movlw	255
 14243  0164EA  22E2               	addwfc	fsr1h,f,c
 14244  0164EC  0012               	return		;funcret
 14245  0164EE                     __end_of___flge:
 14246                           	opt callstack 0
 14247                           
 14248 ;; *************** function ___fleq *****************
 14249 ;; Defined at:
 14250 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;  ff1             4  [STACK] long 
 14253 ;;  ff2             4  [STACK] long 
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;		None
 14256 ;; Return value:  Size  Location     Type
 14257 ;;		None               void
 14258 ;; Registers used:
 14259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14260 ;; Tracked objects:
 14261 ;;		On entry : 0/5
 14262 ;;		On exit  : 0/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14269 ;;Total ram usage:        0 bytes
 14270 ;; Hardware stack levels used:    1
 14271 ;; Hardware stack levels required when called:    6
 14272 ;; This function calls:
 14273 ;;		Nothing
 14274 ;; This function is called by:
 14275 ;;		_efgtoa
 14276 ;; This function uses a reentrant model
 14277 ;;
 14278                           
 14279                           	psect	text55
 14280  0171CE                     __ptext55:
 14281                           	opt callstack 0
 14282  0171CE                     ___fleq:
 14283                           	opt callstack 17
 14284                           
 14285                           ;stkvar	_ff1 @ sp[(0)+-4]
 14286                           
 14287                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14288                           ;incstack = 0
 14289  0171CE  50E1               	movf	fsr1l,w,c
 14290  0171D0  0FFC               	addlw	-4
 14291  0171D2  6ED9               	movwf	fsr2l,c
 14292  0171D4  50E2               	movf	fsr1h,w,c
 14293  0171D6  6EDA               	movwf	fsr2h,c
 14294  0171D8  0EFF               	movlw	255
 14295  0171DA  22DA               	addwfc	fsr2h,f,c
 14296  0171DC  0E00               	movlw	0
 14297  0171DE  14DE               	andwf	postinc2,w,c
 14298  0171E0  6E3A               	movwf	(btemp+8)^0,c
 14299  0171E2  0E00               	movlw	0
 14300  0171E4  14DE               	andwf	postinc2,w,c
 14301  0171E6  6E3B               	movwf	(btemp+9)^0,c
 14302  0171E8  0E80               	movlw	128
 14303  0171EA  14DE               	andwf	postinc2,w,c
 14304  0171EC  6E3C               	movwf	(btemp+10)^0,c
 14305  0171EE  0E7F               	movlw	127
 14306  0171F0  14DE               	andwf	postinc2,w,c
 14307  0171F2  6E3D               	movwf	(btemp+11)^0,c
 14308  0171F4  503A               	movf	(btemp+8)^0,w,c
 14309  0171F6  103B               	iorwf	(btemp+9)^0,w,c
 14310  0171F8  103C               	iorwf	(btemp+10)^0,w,c
 14311  0171FA  103D               	iorwf	(btemp+11)^0,w,c
 14312  0171FC  A4D8               	btfss	status,2,c
 14313  0171FE  D008               	goto	l7125
 14314                           
 14315                           ;stkvar	_ff1 @ sp[(0)+-4]
 14316  017200  0EFC               	movlw	-4
 14317  017202  6AE3               	clrf	plusw1,c
 14318  017204  0EFD               	movlw	-3
 14319  017206  6AE3               	clrf	plusw1,c
 14320  017208  0EFE               	movlw	-2
 14321  01720A  6AE3               	clrf	plusw1,c
 14322  01720C  0EFF               	movlw	-1
 14323  01720E  6AE3               	clrf	plusw1,c
 14324  017210                     l7125:
 14325                           
 14326                           ;stkvar	_ff2 @ sp[(0)+-8]
 14327  017210  50E1               	movf	fsr1l,w,c
 14328  017212  0FF8               	addlw	-8
 14329  017214  6ED9               	movwf	fsr2l,c
 14330  017216  50E2               	movf	fsr1h,w,c
 14331  017218  6EDA               	movwf	fsr2h,c
 14332  01721A  0EFF               	movlw	255
 14333  01721C  22DA               	addwfc	fsr2h,f,c
 14334  01721E  0E00               	movlw	0
 14335  017220  14DE               	andwf	postinc2,w,c
 14336  017222  6E3A               	movwf	(btemp+8)^0,c
 14337  017224  0E00               	movlw	0
 14338  017226  14DE               	andwf	postinc2,w,c
 14339  017228  6E3B               	movwf	(btemp+9)^0,c
 14340  01722A  0E80               	movlw	128
 14341  01722C  14DE               	andwf	postinc2,w,c
 14342  01722E  6E3C               	movwf	(btemp+10)^0,c
 14343  017230  0E7F               	movlw	127
 14344  017232  14DE               	andwf	postinc2,w,c
 14345  017234  6E3D               	movwf	(btemp+11)^0,c
 14346  017236  503A               	movf	(btemp+8)^0,w,c
 14347  017238  103B               	iorwf	(btemp+9)^0,w,c
 14348  01723A  103C               	iorwf	(btemp+10)^0,w,c
 14349  01723C  103D               	iorwf	(btemp+11)^0,w,c
 14350  01723E  A4D8               	btfss	status,2,c
 14351  017240  D008               	goto	l7129
 14352                           
 14353                           ;stkvar	_ff2 @ sp[(0)+-8]
 14354  017242  0EF8               	movlw	-8
 14355  017244  6AE3               	clrf	plusw1,c
 14356  017246  0EF9               	movlw	-7
 14357  017248  6AE3               	clrf	plusw1,c
 14358  01724A  0EFA               	movlw	-6
 14359  01724C  6AE3               	clrf	plusw1,c
 14360  01724E  0EFB               	movlw	-5
 14361  017250  6AE3               	clrf	plusw1,c
 14362  017252                     l7129:
 14363                           
 14364                           ;stkvar	_ff2 @ sp[(0)+-8]
 14365                           ;stkvar	_ff1 @ sp[(0)+-4]
 14366  017252  50E1               	movf	fsr1l,w,c
 14367  017254  0FFC               	addlw	-4
 14368  017256  6ED9               	movwf	fsr2l,c
 14369  017258  50E2               	movf	fsr1h,w,c
 14370  01725A  6EDA               	movwf	fsr2h,c
 14371  01725C  0EFF               	movlw	255
 14372  01725E  22DA               	addwfc	fsr2h,f,c
 14373  017260  0EF8               	movlw	-8
 14374  017262  50E3               	movf	plusw1,w,c
 14375  017264  18DE               	xorwf	postinc2,w,c
 14376  017266  E10D               	bnz	u6220
 14377  017268  0EF9               	movlw	-7
 14378  01726A  50E3               	movf	plusw1,w,c
 14379  01726C  18DE               	xorwf	postinc2,w,c
 14380  01726E  E109               	bnz	u6220
 14381  017270  0EFA               	movlw	-6
 14382  017272  50E3               	movf	plusw1,w,c
 14383  017274  18DE               	xorwf	postinc2,w,c
 14384  017276  E105               	bnz	u6220
 14385  017278  0EFB               	movlw	-5
 14386  01727A  50E3               	movf	plusw1,w,c
 14387  01727C  18DE               	xorwf	postinc2,w,c
 14388  01727E  B4D8               	btfsc	status,2,c
 14389  017280  D002               	goto	l7133
 14390  017282                     u6220:
 14391  017282  9032               	bcf	btemp& (0+255),0,c
 14392  017284  D001               	goto	l2337
 14393  017286                     l7133:
 14394  017286  8032               	bsf	btemp& (0+255),0,c
 14395  017288                     l2337:
 14396                           
 14397                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14398  017288  0EF8               	movlw	248
 14399  01728A  26E1               	addwf	fsr1l,f,c
 14400  01728C  0EFF               	movlw	255
 14401  01728E  22E2               	addwfc	fsr1h,f,c
 14402  017290  0012               	return		;funcret
 14403  017292                     __end_of___fleq:
 14404                           	opt callstack 0
 14405                           
 14406 ;; *************** function ___fldiv *****************
 14407 ;; Defined at:
 14408 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 14409 ;; Parameters:    Size  Location     Type
 14410 ;;  b               4  [STACK] long 
 14411 ;;  a               4  [STACK] long 
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;  grs             4  [STACK] unsigned long 
 14414 ;;  rem             4  [STACK] unsigned long 
 14415 ;;  new_exp         2  [STACK] short 
 14416 ;;  aexp            1  [STACK] unsigned char 
 14417 ;;  bexp            1  [STACK] unsigned char 
 14418 ;;  sign            1  [STACK] unsigned char 
 14419 ;; Return value:  Size  Location     Type
 14420 ;;                  4  [STACK] unsigned char 
 14421 ;; Registers used:
 14422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14423 ;; Tracked objects:
 14424 ;;		On entry : 0/39
 14425 ;;		On exit  : 0/0
 14426 ;;		Unchanged: 0/0
 14427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14432 ;;Total ram usage:        0 bytes
 14433 ;; Hardware stack levels used:    1
 14434 ;; Hardware stack levels required when called:    6
 14435 ;; This function calls:
 14436 ;;		Nothing
 14437 ;; This function is called by:
 14438 ;;		_conv_raw_result
 14439 ;;		_efgtoa
 14440 ;; This function uses a reentrant model
 14441 ;;
 14442                           
 14443                           	psect	text56
 14444  013362                     __ptext56:
 14445                           	opt callstack 0
 14446  013362                     ___fldiv:
 14447                           	opt callstack 0
 14448                           
 14449                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14450  013362  0E0D               	movlw	13
 14451  013364  26E1               	addwf	fsr1l,f,c
 14452  013366  0E00               	movlw	0
 14453  013368  22E2               	addwfc	fsr1h,f,c
 14454                           
 14455                           ;stkvar	_b @ sp[(-13)+-4]
 14456                           
 14457                           ;incstack = 0
 14458  01336A  0EF2               	movlw	242
 14459  01336C  24E1               	addwf	fsr1l,w,c
 14460  01336E  6ED9               	movwf	fsr2l,c
 14461  013370  0EFF               	movlw	255
 14462  013372  20E2               	addwfc	fsr1h,w,c
 14463  013374  6EDA               	movwf	fsr2h,c
 14464  013376  50DF               	movf	indf2,w,c
 14465  013378  6E3D               	movwf	(btemp+11)^0,c
 14466  01337A  0E80               	movlw	128
 14467  01337C  163D               	andwf	(btemp+11)^0,f,c
 14468                           
 14469                           ;stkvar	_sign @ sp[(-13)+12]
 14470  01337E  0EFF               	movlw	-1
 14471  013380  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14472                           
 14473                           ;stkvar	_b @ sp[(-13)+-4]
 14474  013386  0EF2               	movlw	242
 14475  013388  24E1               	addwf	fsr1l,w,c
 14476  01338A  6ED9               	movwf	fsr2l,c
 14477  01338C  0EFF               	movlw	255
 14478  01338E  20E2               	addwfc	fsr1h,w,c
 14479  013390  6EDA               	movwf	fsr2h,c
 14480  013392  50DF               	movf	indf2,w,c
 14481  013394  6E3D               	movwf	(btemp+11)^0,c
 14482  013396  90D8               	bcf	status,0,c
 14483  013398  343D               	rlcf	(btemp+11)^0,w,c
 14484  01339A  6E3C               	movwf	(btemp+10)^0,c
 14485                           
 14486                           ;stkvar	_bexp @ sp[(-13)+11]
 14487  01339C  0EFE               	movlw	-2
 14488  01339E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14489                           
 14490                           ;stkvar	_b @ sp[(-13)+-4]
 14491  0133A4  0EF1               	movlw	241
 14492  0133A6  24E1               	addwf	fsr1l,w,c
 14493  0133A8  6ED9               	movwf	fsr2l,c
 14494  0133AA  0EFF               	movlw	255
 14495  0133AC  20E2               	addwfc	fsr1h,w,c
 14496  0133AE  6EDA               	movwf	fsr2h,c
 14497  0133B0  AEDF               	btfss	indf2,7,c
 14498  0133B2  D002               	goto	l6727
 14499                           
 14500                           ;stkvar	_bexp @ sp[(-13)+11]
 14501  0133B4  0EFE               	movlw	-2
 14502  0133B6  80E3               	bsf	plusw1,0,c
 14503  0133B8                     l6727:
 14504                           
 14505                           ;stkvar	_bexp @ sp[(-13)+11]
 14506  0133B8  0EFE               	movlw	-2
 14507  0133BA  50E3               	movf	plusw1,w,c
 14508  0133BC  B4D8               	btfsc	status,2,c
 14509  0133BE  D027               	goto	l6737
 14510                           
 14511                           ;stkvar	_bexp @ sp[(-13)+11]
 14512  0133C0  0EFE               	movlw	-2
 14513  0133C2  28E3               	incf	plusw1,w,c
 14514  0133C4  A4D8               	btfss	status,2,c
 14515  0133C6  D018               	goto	l6733
 14516  0133C8  0E00               	movlw	0
 14517  0133CA  6E3A               	movwf	(btemp+8)^0,c
 14518  0133CC  0E00               	movlw	0
 14519  0133CE  6E3B               	movwf	(btemp+9)^0,c
 14520  0133D0  0E00               	movlw	0
 14521  0133D2  6E3C               	movwf	(btemp+10)^0,c
 14522  0133D4  0E00               	movlw	0
 14523  0133D6  6E3D               	movwf	(btemp+11)^0,c
 14524                           
 14525                           ;stkvar	_b @ sp[(-13)+-4]
 14526  0133D8  0EEF               	movlw	-17
 14527  0133DA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14528  0133E0  0EF0               	movlw	-16
 14529  0133E2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14530  0133E8  0EF1               	movlw	-15
 14531  0133EA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14532  0133F0  0EF2               	movlw	-14
 14533  0133F2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14534  0133F8                     l6733:
 14535                           
 14536                           ;stkvar	_b @ sp[(-13)+-4]
 14537  0133F8  0EF1               	movlw	-15
 14538  0133FA  8EE3               	bsf	plusw1,7,c
 14539                           
 14540                           ;stkvar	_b @ sp[(-13)+-4]
 14541  0133FC  0EF2               	movlw	242
 14542  0133FE  24E1               	addwf	fsr1l,w,c
 14543  013400  6ED9               	movwf	fsr2l,c
 14544  013402  0EFF               	movlw	255
 14545  013404  20E2               	addwfc	fsr1h,w,c
 14546  013406  6EDA               	movwf	fsr2h,c
 14547  013408  0E00               	movlw	0
 14548  01340A  6EDF               	movwf	indf2,c
 14549  01340C  D018               	goto	l6739
 14550  01340E                     l6737:
 14551  01340E  0E00               	movlw	0
 14552  013410  6E3A               	movwf	(btemp+8)^0,c
 14553  013412  0E00               	movlw	0
 14554  013414  6E3B               	movwf	(btemp+9)^0,c
 14555  013416  0E00               	movlw	0
 14556  013418  6E3C               	movwf	(btemp+10)^0,c
 14557  01341A  0E00               	movlw	0
 14558  01341C  6E3D               	movwf	(btemp+11)^0,c
 14559                           
 14560                           ;stkvar	_b @ sp[(-13)+-4]
 14561  01341E  0EEF               	movlw	-17
 14562  013420  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14563  013426  0EF0               	movlw	-16
 14564  013428  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14565  01342E  0EF1               	movlw	-15
 14566  013430  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14567  013436  0EF2               	movlw	-14
 14568  013438  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14569  01343E                     l6739:
 14570                           
 14571                           ;stkvar	_a @ sp[(-13)+-8]
 14572  01343E  0EEE               	movlw	238
 14573  013440  24E1               	addwf	fsr1l,w,c
 14574  013442  6ED9               	movwf	fsr2l,c
 14575  013444  0EFF               	movlw	255
 14576  013446  20E2               	addwfc	fsr1h,w,c
 14577  013448  6EDA               	movwf	fsr2h,c
 14578  01344A  50DF               	movf	indf2,w,c
 14579  01344C  6E3D               	movwf	(btemp+11)^0,c
 14580  01344E  0E80               	movlw	128
 14581  013450  163D               	andwf	(btemp+11)^0,f,c
 14582                           
 14583                           ;stkvar	_sign @ sp[(-13)+12]
 14584  013452  50E1               	movf	fsr1l,w,c
 14585  013454  0FFF               	addlw	-1
 14586  013456  6ED9               	movwf	fsr2l,c
 14587  013458  50E2               	movf	fsr1h,w,c
 14588  01345A  6EDA               	movwf	fsr2h,c
 14589  01345C  0EFF               	movlw	255
 14590  01345E  22DA               	addwfc	fsr2h,f,c
 14591  013460  503D               	movf	(btemp+11)^0,w,c
 14592  013462  1ADF               	xorwf	indf2,f,c
 14593                           
 14594                           ;stkvar	_a @ sp[(-13)+-8]
 14595  013464  0EEE               	movlw	238
 14596  013466  24E1               	addwf	fsr1l,w,c
 14597  013468  6ED9               	movwf	fsr2l,c
 14598  01346A  0EFF               	movlw	255
 14599  01346C  20E2               	addwfc	fsr1h,w,c
 14600  01346E  6EDA               	movwf	fsr2h,c
 14601  013470  50DF               	movf	indf2,w,c
 14602  013472  6E3D               	movwf	(btemp+11)^0,c
 14603  013474  90D8               	bcf	status,0,c
 14604  013476  343D               	rlcf	(btemp+11)^0,w,c
 14605  013478  6E3C               	movwf	(btemp+10)^0,c
 14606                           
 14607                           ;stkvar	_aexp @ sp[(-13)+10]
 14608  01347A  0EFD               	movlw	-3
 14609  01347C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14610                           
 14611                           ;stkvar	_a @ sp[(-13)+-8]
 14612  013482  0EED               	movlw	237
 14613  013484  24E1               	addwf	fsr1l,w,c
 14614  013486  6ED9               	movwf	fsr2l,c
 14615  013488  0EFF               	movlw	255
 14616  01348A  20E2               	addwfc	fsr1h,w,c
 14617  01348C  6EDA               	movwf	fsr2h,c
 14618  01348E  AEDF               	btfss	indf2,7,c
 14619  013490  D002               	goto	l6747
 14620                           
 14621                           ;stkvar	_aexp @ sp[(-13)+10]
 14622  013492  0EFD               	movlw	-3
 14623  013494  80E3               	bsf	plusw1,0,c
 14624  013496                     l6747:
 14625                           
 14626                           ;stkvar	_aexp @ sp[(-13)+10]
 14627  013496  0EFD               	movlw	-3
 14628  013498  50E3               	movf	plusw1,w,c
 14629  01349A  B4D8               	btfsc	status,2,c
 14630  01349C  D027               	goto	l6757
 14631                           
 14632                           ;stkvar	_aexp @ sp[(-13)+10]
 14633  01349E  0EFD               	movlw	-3
 14634  0134A0  28E3               	incf	plusw1,w,c
 14635  0134A2  A4D8               	btfss	status,2,c
 14636  0134A4  D018               	goto	l6753
 14637  0134A6  0E00               	movlw	0
 14638  0134A8  6E3A               	movwf	(btemp+8)^0,c
 14639  0134AA  0E00               	movlw	0
 14640  0134AC  6E3B               	movwf	(btemp+9)^0,c
 14641  0134AE  0E00               	movlw	0
 14642  0134B0  6E3C               	movwf	(btemp+10)^0,c
 14643  0134B2  0E00               	movlw	0
 14644  0134B4  6E3D               	movwf	(btemp+11)^0,c
 14645                           
 14646                           ;stkvar	_a @ sp[(-13)+-8]
 14647  0134B6  0EEB               	movlw	-21
 14648  0134B8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14649  0134BE  0EEC               	movlw	-20
 14650  0134C0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14651  0134C6  0EED               	movlw	-19
 14652  0134C8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14653  0134CE  0EEE               	movlw	-18
 14654  0134D0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14655  0134D6                     l6753:
 14656                           
 14657                           ;stkvar	_a @ sp[(-13)+-8]
 14658  0134D6  0EED               	movlw	-19
 14659  0134D8  8EE3               	bsf	plusw1,7,c
 14660                           
 14661                           ;stkvar	_a @ sp[(-13)+-8]
 14662  0134DA  0EEE               	movlw	238
 14663  0134DC  24E1               	addwf	fsr1l,w,c
 14664  0134DE  6ED9               	movwf	fsr2l,c
 14665  0134E0  0EFF               	movlw	255
 14666  0134E2  20E2               	addwfc	fsr1h,w,c
 14667  0134E4  6EDA               	movwf	fsr2h,c
 14668  0134E6  0E00               	movlw	0
 14669  0134E8  6EDF               	movwf	indf2,c
 14670  0134EA  D018               	goto	l6759
 14671  0134EC                     l6757:
 14672  0134EC  0E00               	movlw	0
 14673  0134EE  6E3A               	movwf	(btemp+8)^0,c
 14674  0134F0  0E00               	movlw	0
 14675  0134F2  6E3B               	movwf	(btemp+9)^0,c
 14676  0134F4  0E00               	movlw	0
 14677  0134F6  6E3C               	movwf	(btemp+10)^0,c
 14678  0134F8  0E00               	movlw	0
 14679  0134FA  6E3D               	movwf	(btemp+11)^0,c
 14680                           
 14681                           ;stkvar	_a @ sp[(-13)+-8]
 14682  0134FC  0EEB               	movlw	-21
 14683  0134FE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14684  013504  0EEC               	movlw	-20
 14685  013506  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14686  01350C  0EED               	movlw	-19
 14687  01350E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14688  013514  0EEE               	movlw	-18
 14689  013516  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14690  01351C                     l6759:
 14691                           
 14692                           ;stkvar	_a @ sp[(-13)+-8]
 14693  01351C  0EEB               	movlw	-21
 14694  01351E  50E3               	movf	plusw1,w,c
 14695  013520  E139               	bnz	l6771
 14696  013522  0EEC               	movlw	-20
 14697  013524  50E3               	movf	plusw1,w,c
 14698  013526  E136               	bnz	l6771
 14699  013528  0EED               	movlw	-19
 14700  01352A  50E3               	movf	plusw1,w,c
 14701  01352C  E133               	bnz	l6771
 14702  01352E  0EEE               	movlw	-18
 14703  013530  50E3               	movf	plusw1,w,c
 14704  013532  A4D8               	btfss	status,2,c
 14705  013534  D02F               	goto	l6771
 14706                           
 14707                           ;stkvar	_b @ sp[(-13)+-4]
 14708  013536  0EEF               	movlw	-17
 14709  013538  6AE3               	clrf	plusw1,c
 14710  01353A  0EF0               	movlw	-16
 14711  01353C  6AE3               	clrf	plusw1,c
 14712  01353E  0EF1               	movlw	-15
 14713  013540  6AE3               	clrf	plusw1,c
 14714  013542  0EF2               	movlw	-14
 14715  013544  6AE3               	clrf	plusw1,c
 14716                           
 14717                           ;stkvar	_b @ sp[(-13)+-4]
 14718  013546  0EF1               	movlw	241
 14719  013548  24E1               	addwf	fsr1l,w,c
 14720  01354A  6ED9               	movwf	fsr2l,c
 14721  01354C  0EFF               	movlw	255
 14722  01354E  20E2               	addwfc	fsr1h,w,c
 14723  013550  6EDA               	movwf	fsr2h,c
 14724  013552  0E80               	movlw	128
 14725  013554  12DE               	iorwf	postinc2,f,c
 14726  013556  0E7F               	movlw	127
 14727  013558  12DD               	iorwf	postdec2,f,c
 14728  01355A                     l6765:
 14729                           
 14730                           ;stkvar	_sign @ sp[(-13)+12]
 14731  01355A  0EFF               	movlw	-1
 14732  01355C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14733                           
 14734                           ;stkvar	_b @ sp[(-13)+-4]
 14735  013562  0EF2               	movlw	242
 14736  013564  24E1               	addwf	fsr1l,w,c
 14737  013566  6ED9               	movwf	fsr2l,c
 14738  013568  0EFF               	movlw	255
 14739  01356A  20E2               	addwfc	fsr1h,w,c
 14740  01356C  6EDA               	movwf	fsr2h,c
 14741  01356E  503D               	movf	(btemp+11)^0,w,c
 14742  013570  12DF               	iorwf	indf2,f,c
 14743                           
 14744                           ;stkvar	_b @ sp[(-13)+-4]
 14745  013572  0EEF               	movlw	-17
 14746  013574  006F FF8C  F032    	movff	plusw1,btemp
 14747  01357A  0EF0               	movlw	-16
 14748  01357C  006F FF8C  F033    	movff	plusw1,btemp+1
 14749  013582  0EF1               	movlw	-15
 14750  013584  006F FF8C  F034    	movff	plusw1,btemp+2
 14751  01358A  0EF2               	movlw	-14
 14752  01358C  006F FF8C  F035    	movff	plusw1,btemp+3
 14753  013592  D19F               	goto	l2660
 14754  013594                     l6771:
 14755                           
 14756                           ;stkvar	_bexp @ sp[(-13)+11]
 14757  013594  0EFE               	movlw	-2
 14758  013596  50E3               	movf	plusw1,w,c
 14759  013598  A4D8               	btfss	status,2,c
 14760  01359A  D009               	goto	l6779
 14761  01359C  0E00               	movlw	0
 14762  01359E  6E32               	movwf	btemp^0,c
 14763  0135A0  0E00               	movlw	0
 14764  0135A2  6E33               	movwf	(btemp+1)^0,c
 14765  0135A4  0E00               	movlw	0
 14766  0135A6  6E34               	movwf	(btemp+2)^0,c
 14767  0135A8  0E00               	movlw	0
 14768  0135AA  6E35               	movwf	(btemp+3)^0,c
 14769  0135AC  D192               	goto	l2660
 14770  0135AE                     l6779:
 14771                           
 14772                           ;stkvar	_bexp @ sp[(-13)+11]
 14773  0135AE  0EFE               	movlw	-2
 14774  0135B0  50E3               	movf	plusw1,w,c
 14775  0135B2  6E3C               	movwf	(btemp+10)^0,c
 14776  0135B4  6A3D               	clrf	(btemp+11)^0,c
 14777                           
 14778                           ;stkvar	_aexp @ sp[(-13)+10]
 14779  0135B6  0EFD               	movlw	-3
 14780  0135B8  50E3               	movf	plusw1,w,c
 14781  0135BA  5E3C               	subwf	(btemp+10)^0,f,c
 14782  0135BC  0E00               	movlw	0
 14783  0135BE  5A3D               	subwfb	(btemp+11)^0,f,c
 14784  0135C0  0E7F               	movlw	127
 14785  0135C2  263C               	addwf	(btemp+10)^0,f,c
 14786  0135C4  0E00               	movlw	0
 14787  0135C6  223D               	addwfc	(btemp+11)^0,f,c
 14788                           
 14789                           ;stkvar	_new_exp @ sp[(-13)+8]
 14790  0135C8  0EFB               	movlw	-5
 14791  0135CA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14792  0135D0  0EFC               	movlw	-4
 14793  0135D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14794                           
 14795                           ;stkvar	_b @ sp[(-13)+-4]
 14796  0135D8  0EEF               	movlw	-17
 14797  0135DA  006F FF8C  F03A    	movff	plusw1,btemp+8
 14798  0135E0  0EF0               	movlw	-16
 14799  0135E2  006F FF8C  F03B    	movff	plusw1,btemp+9
 14800  0135E8  0EF1               	movlw	-15
 14801  0135EA  006F FF8C  F03C    	movff	plusw1,btemp+10
 14802  0135F0  0EF2               	movlw	-14
 14803  0135F2  006F FF8C  F03D    	movff	plusw1,btemp+11
 14804                           
 14805                           ;stkvar	_rem @ sp[(-13)+4]
 14806  0135F8  0EF7               	movlw	-9
 14807  0135FA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14808  013600  0EF8               	movlw	-8
 14809  013602  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14810  013608  0EF9               	movlw	-7
 14811  01360A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14812  013610  0EFA               	movlw	-6
 14813  013612  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14814                           
 14815                           ;stkvar	_b @ sp[(-13)+-4]
 14816  013618  0EEF               	movlw	-17
 14817  01361A  6AE3               	clrf	plusw1,c
 14818  01361C  0EF0               	movlw	-16
 14819  01361E  6AE3               	clrf	plusw1,c
 14820  013620  0EF1               	movlw	-15
 14821  013622  6AE3               	clrf	plusw1,c
 14822  013624  0EF2               	movlw	-14
 14823  013626  6AE3               	clrf	plusw1,c
 14824                           
 14825                           ;stkvar	_grs @ sp[(-13)+0]
 14826  013628  0EF3               	movlw	-13
 14827  01362A  6AE3               	clrf	plusw1,c
 14828  01362C  0EF4               	movlw	-12
 14829  01362E  6AE3               	clrf	plusw1,c
 14830  013630  0EF5               	movlw	-11
 14831  013632  6AE3               	clrf	plusw1,c
 14832  013634  0EF6               	movlw	-10
 14833  013636  6AE3               	clrf	plusw1,c
 14834                           
 14835                           ;stkvar	_aexp @ sp[(-13)+10]
 14836  013638  0EFD               	movlw	-3
 14837  01363A  6AE3               	clrf	plusw1,c
 14838  01363C  D050               	goto	l6807
 14839  01363E                     l6789:
 14840                           
 14841                           ;stkvar	_aexp @ sp[(-13)+10]
 14842  01363E  0EFD               	movlw	-3
 14843  013640  50E3               	movf	plusw1,w,c
 14844  013642  B4D8               	btfsc	status,2,c
 14845  013644  D020               	goto	l6799
 14846                           
 14847                           ;stkvar	_rem @ sp[(-13)+4]
 14848  013646  90D8               	bcf	status,0,c
 14849  013648  0EF7               	movlw	-9
 14850  01364A  36E3               	rlcf	plusw1,f,c
 14851  01364C  0EF8               	movlw	-8
 14852  01364E  36E3               	rlcf	plusw1,f,c
 14853  013650  0EF9               	movlw	-7
 14854  013652  36E3               	rlcf	plusw1,f,c
 14855  013654  0EFA               	movlw	-6
 14856  013656  36E3               	rlcf	plusw1,f,c
 14857                           
 14858                           ;stkvar	_b @ sp[(-13)+-4]
 14859  013658  90D8               	bcf	status,0,c
 14860  01365A  0EEF               	movlw	-17
 14861  01365C  36E3               	rlcf	plusw1,f,c
 14862  01365E  0EF0               	movlw	-16
 14863  013660  36E3               	rlcf	plusw1,f,c
 14864  013662  0EF1               	movlw	-15
 14865  013664  36E3               	rlcf	plusw1,f,c
 14866  013666  0EF2               	movlw	-14
 14867  013668  36E3               	rlcf	plusw1,f,c
 14868                           
 14869                           ;stkvar	_grs @ sp[(-13)+0]
 14870  01366A  0EF6               	movlw	-10
 14871  01366C  AEE3               	btfss	plusw1,7,c
 14872  01366E  D002               	goto	l6797
 14873                           
 14874                           ;stkvar	_b @ sp[(-13)+-4]
 14875  013670  0EEF               	movlw	-17
 14876  013672  80E3               	bsf	plusw1,0,c
 14877  013674                     l6797:
 14878                           
 14879                           ;stkvar	_grs @ sp[(-13)+0]
 14880  013674  90D8               	bcf	status,0,c
 14881  013676  0EF3               	movlw	-13
 14882  013678  36E3               	rlcf	plusw1,f,c
 14883  01367A  0EF4               	movlw	-12
 14884  01367C  36E3               	rlcf	plusw1,f,c
 14885  01367E  0EF5               	movlw	-11
 14886  013680  36E3               	rlcf	plusw1,f,c
 14887  013682  0EF6               	movlw	-10
 14888  013684  36E3               	rlcf	plusw1,f,c
 14889  013686                     l6799:
 14890                           
 14891                           ;stkvar	_a @ sp[(-13)+-8]
 14892                           ;stkvar	_rem @ sp[(-13)+4]
 14893  013686  50E1               	movf	fsr1l,w,c
 14894  013688  0FF7               	addlw	-9
 14895  01368A  6ED9               	movwf	fsr2l,c
 14896  01368C  50E2               	movf	fsr1h,w,c
 14897  01368E  6EDA               	movwf	fsr2h,c
 14898  013690  0EFF               	movlw	255
 14899  013692  22DA               	addwfc	fsr2h,f,c
 14900  013694  0EEB               	movlw	-21
 14901  013696  50E3               	movf	plusw1,w,c
 14902  013698  5CDE               	subwf	postinc2,w,c
 14903  01369A  0EEC               	movlw	-20
 14904  01369C  50E3               	movf	plusw1,w,c
 14905  01369E  58DE               	subwfb	postinc2,w,c
 14906  0136A0  0EED               	movlw	-19
 14907  0136A2  50E3               	movf	plusw1,w,c
 14908  0136A4  58DE               	subwfb	postinc2,w,c
 14909  0136A6  0EEE               	movlw	-18
 14910  0136A8  50E3               	movf	plusw1,w,c
 14911  0136AA  58DE               	subwfb	postinc2,w,c
 14912  0136AC  A0D8               	btfss	status,0,c
 14913  0136AE  D015               	goto	l6805
 14914                           
 14915                           ;stkvar	_grs @ sp[(-13)+0]
 14916  0136B0  0EF6               	movlw	-10
 14917  0136B2  8CE3               	bsf	plusw1,6,c
 14918                           
 14919                           ;stkvar	_a @ sp[(-13)+-8]
 14920                           ;stkvar	_rem @ sp[(-13)+4]
 14921  0136B4  50E1               	movf	fsr1l,w,c
 14922  0136B6  0FF7               	addlw	-9
 14923  0136B8  6ED9               	movwf	fsr2l,c
 14924  0136BA  50E2               	movf	fsr1h,w,c
 14925  0136BC  6EDA               	movwf	fsr2h,c
 14926  0136BE  0EFF               	movlw	255
 14927  0136C0  22DA               	addwfc	fsr2h,f,c
 14928  0136C2  0EEB               	movlw	-21
 14929  0136C4  50E3               	movf	plusw1,w,c
 14930  0136C6  5EDE               	subwf	postinc2,f,c
 14931  0136C8  0EEC               	movlw	-20
 14932  0136CA  50E3               	movf	plusw1,w,c
 14933  0136CC  5ADE               	subwfb	postinc2,f,c
 14934  0136CE  0EED               	movlw	-19
 14935  0136D0  50E3               	movf	plusw1,w,c
 14936  0136D2  5ADE               	subwfb	postinc2,f,c
 14937  0136D4  0EEE               	movlw	-18
 14938  0136D6  50E3               	movf	plusw1,w,c
 14939  0136D8  5ADE               	subwfb	postinc2,f,c
 14940  0136DA                     l6805:
 14941                           
 14942                           ;stkvar	_aexp @ sp[(-13)+10]
 14943  0136DA  0EFD               	movlw	-3
 14944  0136DC  2AE3               	incf	plusw1,f,c
 14945  0136DE                     l6807:
 14946                           
 14947                           ;stkvar	_aexp @ sp[(-13)+10]
 14948  0136DE  0EFD               	movlw	-3
 14949  0136E0  006F FF8C  F032    	movff	plusw1,btemp
 14950  0136E6  0E19               	movlw	25
 14951  0136E8  6432               	cpfsgt	btemp^0,c
 14952  0136EA  D7A9               	goto	l6789
 14953                           
 14954                           ;stkvar	_rem @ sp[(-13)+4]
 14955  0136EC  0EF7               	movlw	-9
 14956  0136EE  50E3               	movf	plusw1,w,c
 14957  0136F0  E10A               	bnz	u5720
 14958  0136F2  0EF8               	movlw	-8
 14959  0136F4  50E3               	movf	plusw1,w,c
 14960  0136F6  E107               	bnz	u5720
 14961  0136F8  0EF9               	movlw	-7
 14962  0136FA  50E3               	movf	plusw1,w,c
 14963  0136FC  E104               	bnz	u5720
 14964  0136FE  0EFA               	movlw	-6
 14965  013700  50E3               	movf	plusw1,w,c
 14966  013702  B4D8               	btfsc	status,2,c
 14967  013704  D024               	goto	l6823
 14968  013706                     u5720:
 14969                           
 14970                           ;stkvar	_grs @ sp[(-13)+0]
 14971  013706  0EF3               	movlw	-13
 14972  013708  80E3               	bsf	plusw1,0,c
 14973  01370A  D021               	goto	l6823
 14974  01370C                     l6813:
 14975                           
 14976                           ;stkvar	_b @ sp[(-13)+-4]
 14977  01370C  90D8               	bcf	status,0,c
 14978  01370E  0EEF               	movlw	-17
 14979  013710  36E3               	rlcf	plusw1,f,c
 14980  013712  0EF0               	movlw	-16
 14981  013714  36E3               	rlcf	plusw1,f,c
 14982  013716  0EF1               	movlw	-15
 14983  013718  36E3               	rlcf	plusw1,f,c
 14984  01371A  0EF2               	movlw	-14
 14985  01371C  36E3               	rlcf	plusw1,f,c
 14986                           
 14987                           ;stkvar	_grs @ sp[(-13)+0]
 14988  01371E  0EF6               	movlw	-10
 14989  013720  AEE3               	btfss	plusw1,7,c
 14990  013722  D002               	goto	l6819
 14991                           
 14992                           ;stkvar	_b @ sp[(-13)+-4]
 14993  013724  0EEF               	movlw	-17
 14994  013726  80E3               	bsf	plusw1,0,c
 14995  013728                     l6819:
 14996                           
 14997                           ;stkvar	_grs @ sp[(-13)+0]
 14998  013728  90D8               	bcf	status,0,c
 14999  01372A  0EF3               	movlw	-13
 15000  01372C  36E3               	rlcf	plusw1,f,c
 15001  01372E  0EF4               	movlw	-12
 15002  013730  36E3               	rlcf	plusw1,f,c
 15003  013732  0EF5               	movlw	-11
 15004  013734  36E3               	rlcf	plusw1,f,c
 15005  013736  0EF6               	movlw	-10
 15006  013738  36E3               	rlcf	plusw1,f,c
 15007                           
 15008                           ;stkvar	_new_exp @ sp[(-13)+8]
 15009  01373A  50E1               	movf	fsr1l,w,c
 15010  01373C  0FFB               	addlw	-5
 15011  01373E  6ED9               	movwf	fsr2l,c
 15012  013740  50E2               	movf	fsr1h,w,c
 15013  013742  6EDA               	movwf	fsr2h,c
 15014  013744  0EFF               	movlw	255
 15015  013746  22DA               	addwfc	fsr2h,f,c
 15016  013748  06DE               	decf	postinc2,f,c
 15017  01374A  0E00               	movlw	0
 15018  01374C  5ADD               	subwfb	postdec2,f,c
 15019  01374E                     l6823:
 15020                           
 15021                           ;stkvar	_b @ sp[(-13)+-4]
 15022  01374E  0EF1               	movlw	-15
 15023  013750  AEE3               	btfss	plusw1,7,c
 15024  013752  D7DC               	goto	l6813
 15025                           
 15026                           ;stkvar	_aexp @ sp[(-13)+10]
 15027  013754  0EFD               	movlw	-3
 15028  013756  6AE3               	clrf	plusw1,c
 15029                           
 15030                           ;stkvar	_grs @ sp[(-13)+0]
 15031  013758  0EF6               	movlw	-10
 15032  01375A  AEE3               	btfss	plusw1,7,c
 15033  01375C  D020               	goto	l6837
 15034                           
 15035                           ;stkvar	_grs @ sp[(-13)+0]
 15036  01375E  50E1               	movf	fsr1l,w,c
 15037  013760  0FF3               	addlw	-13
 15038  013762  6ED9               	movwf	fsr2l,c
 15039  013764  50E2               	movf	fsr1h,w,c
 15040  013766  6EDA               	movwf	fsr2h,c
 15041  013768  0EFF               	movlw	255
 15042  01376A  22DA               	addwfc	fsr2h,f,c
 15043  01376C  0EFF               	movlw	255
 15044  01376E  14DE               	andwf	postinc2,w,c
 15045  013770  6E3A               	movwf	(btemp+8)^0,c
 15046  013772  0EFF               	movlw	255
 15047  013774  14DE               	andwf	postinc2,w,c
 15048  013776  6E3B               	movwf	(btemp+9)^0,c
 15049  013778  0EFF               	movlw	255
 15050  01377A  14DE               	andwf	postinc2,w,c
 15051  01377C  6E3C               	movwf	(btemp+10)^0,c
 15052  01377E  0E7F               	movlw	127
 15053  013780  14DE               	andwf	postinc2,w,c
 15054  013782  6E3D               	movwf	(btemp+11)^0,c
 15055  013784  503A               	movf	(btemp+8)^0,w,c
 15056  013786  103B               	iorwf	(btemp+9)^0,w,c
 15057  013788  103C               	iorwf	(btemp+10)^0,w,c
 15058  01378A  103D               	iorwf	(btemp+11)^0,w,c
 15059  01378C  B4D8               	btfsc	status,2,c
 15060  01378E  D004               	goto	l6833
 15061  013790                     u5760:
 15062                           
 15063                           ;stkvar	_aexp @ sp[(-13)+10]
 15064  013790  0EFD               	movlw	-3
 15065  013792  6AE3               	clrf	plusw1,c
 15066  013794  2AE3               	incf	plusw1,f,c
 15067  013796  D003               	goto	l6837
 15068  013798                     l6833:
 15069                           
 15070                           ;stkvar	_b @ sp[(-13)+-4]
 15071  013798  0EEF               	movlw	-17
 15072  01379A  B0E3               	btfsc	plusw1,0,c
 15073  01379C  D7F9               	goto	u5760
 15074  01379E                     l6837:
 15075                           
 15076                           ;stkvar	_aexp @ sp[(-13)+10]
 15077  01379E  0EFD               	movlw	-3
 15078  0137A0  50E3               	movf	plusw1,w,c
 15079  0137A2  B4D8               	btfsc	status,2,c
 15080  0137A4  D036               	goto	l6847
 15081                           
 15082                           ;stkvar	_b @ sp[(-13)+-4]
 15083  0137A6  50E1               	movf	fsr1l,w,c
 15084  0137A8  0FEF               	addlw	-17
 15085  0137AA  6ED9               	movwf	fsr2l,c
 15086  0137AC  50E2               	movf	fsr1h,w,c
 15087  0137AE  6EDA               	movwf	fsr2h,c
 15088  0137B0  0EFF               	movlw	255
 15089  0137B2  22DA               	addwfc	fsr2h,f,c
 15090  0137B4  2ADE               	incf	postinc2,f,c
 15091  0137B6  0E00               	movlw	0
 15092  0137B8  22DE               	addwfc	postinc2,f,c
 15093  0137BA  22DE               	addwfc	postinc2,f,c
 15094  0137BC  22DE               	addwfc	postinc2,f,c
 15095                           
 15096                           ;stkvar	_b @ sp[(-13)+-4]
 15097  0137BE  0EF2               	movlw	-14
 15098  0137C0  A0E3               	btfss	plusw1,0,c
 15099  0137C2  D027               	goto	l6847
 15100  0137C4  0E01               	movlw	1
 15101  0137C6  6E3D               	movwf	(btemp+11)^0,c
 15102                           
 15103                           ;stkvar	_b @ sp[(-13)+-4]
 15104  0137C8  50E1               	movf	fsr1l,w,c
 15105  0137CA  0FEF               	addlw	-17
 15106  0137CC  6ED9               	movwf	fsr2l,c
 15107  0137CE  50E2               	movf	fsr1h,w,c
 15108  0137D0  6EDA               	movwf	fsr2h,c
 15109  0137D2  0EFF               	movlw	255
 15110  0137D4  22DA               	addwfc	fsr2h,f,c
 15111  0137D6  283D               	incf	(btemp+11)^0,w,c
 15112  0137D8  52DE               	movf	postinc2,f,c
 15113  0137DA  D008               	goto	u5800
 15114  0137DC                     u5805:
 15115  0137DC  52DE               	movf	postinc2,f,c
 15116  0137DE  90D8               	bcf	status,0,c
 15117  0137E0  BEDC               	btfsc	preinc2,7,c
 15118  0137E2  80D8               	bsf	status,0,c
 15119  0137E4  32DD               	rrcf	postdec2,f,c
 15120  0137E6  32DD               	rrcf	postdec2,f,c
 15121  0137E8  32DD               	rrcf	postdec2,f,c
 15122  0137EA  32DE               	rrcf	postinc2,f,c
 15123  0137EC                     u5800:
 15124  0137EC  2EE8               	decfsz	wreg,f,c
 15125  0137EE  D7F6               	goto	u5805
 15126                           
 15127                           ;stkvar	_new_exp @ sp[(-13)+8]
 15128  0137F0  0EFB               	movlw	-5
 15129  0137F2  50E3               	movf	plusw1,w,c
 15130  0137F4  0F01               	addlw	1
 15131  0137F6  6E32               	movwf	btemp^0,c
 15132  0137F8  0EFB               	movlw	-5
 15133  0137FA  0060  F0CB  FFE3   	movff	btemp,plusw1
 15134  013800  6A32               	clrf	btemp^0,c
 15135  013802  0EFC               	movlw	-4
 15136  013804  50E3               	movf	plusw1,w,c
 15137  013806  2032               	addwfc	btemp^0,w,c
 15138  013808  6E32               	movwf	btemp^0,c
 15139  01380A  0EFC               	movlw	-4
 15140  01380C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15141  013812                     l6847:
 15142                           
 15143                           ;stkvar	_new_exp @ sp[(-13)+8]
 15144  013812  0EFC               	movlw	-4
 15145  013814  BEE3               	btfsc	plusw1,7,c
 15146  013816  D01B               	goto	l6853
 15147  013818  0EFC               	movlw	-4
 15148  01381A  50E3               	movf	plusw1,w,c
 15149  01381C  E104               	bnz	u5810
 15150  01381E  0EFB               	movlw	-5
 15151  013820  28E3               	incf	plusw1,w,c
 15152  013822  A0D8               	btfss	status,0,c
 15153  013824  D014               	goto	l6853
 15154  013826                     u5810:
 15155  013826  0EFF               	movlw	255
 15156  013828  6E3C               	movwf	(btemp+10)^0,c
 15157  01382A  0E00               	movlw	0
 15158  01382C  6E3D               	movwf	(btemp+11)^0,c
 15159                           
 15160                           ;stkvar	_new_exp @ sp[(-13)+8]
 15161  01382E  0EFB               	movlw	-5
 15162  013830  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15163  013836  0EFC               	movlw	-4
 15164  013838  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15165                           
 15166                           ;stkvar	_b @ sp[(-13)+-4]
 15167  01383E  0EEF               	movlw	-17
 15168  013840  6AE3               	clrf	plusw1,c
 15169  013842  0EF0               	movlw	-16
 15170  013844  6AE3               	clrf	plusw1,c
 15171  013846  0EF1               	movlw	-15
 15172  013848  6AE3               	clrf	plusw1,c
 15173  01384A  0EF2               	movlw	-14
 15174  01384C  6AE3               	clrf	plusw1,c
 15175  01384E                     l6853:
 15176                           
 15177                           ;stkvar	_new_exp @ sp[(-13)+8]
 15178  01384E  0EFC               	movlw	-4
 15179  013850  BEE3               	btfsc	plusw1,7,c
 15180  013852  D007               	goto	u5820
 15181  013854  0EFC               	movlw	-4
 15182  013856  50E3               	movf	plusw1,w,c
 15183  013858  E112               	bnz	l6859
 15184  01385A  0EFB               	movlw	-5
 15185  01385C  04E3               	decf	plusw1,w,c
 15186  01385E  B0D8               	btfsc	status,0,c
 15187  013860  D00E               	goto	l6859
 15188  013862                     u5820:
 15189                           
 15190                           ;stkvar	_new_exp @ sp[(-13)+8]
 15191  013862  0EFB               	movlw	-5
 15192  013864  6AE3               	clrf	plusw1,c
 15193  013866  0EFC               	movlw	-4
 15194  013868  6AE3               	clrf	plusw1,c
 15195                           
 15196                           ;stkvar	_b @ sp[(-13)+-4]
 15197  01386A  0EEF               	movlw	-17
 15198  01386C  6AE3               	clrf	plusw1,c
 15199  01386E  0EF0               	movlw	-16
 15200  013870  6AE3               	clrf	plusw1,c
 15201  013872  0EF1               	movlw	-15
 15202  013874  6AE3               	clrf	plusw1,c
 15203  013876  0EF2               	movlw	-14
 15204  013878  6AE3               	clrf	plusw1,c
 15205                           
 15206                           ;stkvar	_sign @ sp[(-13)+12]
 15207  01387A  0EFF               	movlw	-1
 15208  01387C  6AE3               	clrf	plusw1,c
 15209  01387E                     l6859:
 15210                           
 15211                           ;stkvar	_new_exp @ sp[(-13)+8]
 15212                           ;stkvar	_bexp @ sp[(-13)+11]
 15213  01387E  0EFB               	movlw	-5
 15214  013880  006F FF8C  F032    	movff	plusw1,btemp
 15215  013886  0EFE               	movlw	-2
 15216  013888  0060  F0CB  FFE3   	movff	btemp,plusw1
 15217                           
 15218                           ;stkvar	_bexp @ sp[(-13)+11]
 15219  01388E  0EFE               	movlw	-2
 15220  013890  A0E3               	btfss	plusw1,0,c
 15221  013892  D009               	goto	l6865
 15222                           
 15223                           ;stkvar	_b @ sp[(-13)+-4]
 15224  013894  0EF1               	movlw	241
 15225  013896  24E1               	addwf	fsr1l,w,c
 15226  013898  6ED9               	movwf	fsr2l,c
 15227  01389A  0EFF               	movlw	255
 15228  01389C  20E2               	addwfc	fsr1h,w,c
 15229  01389E  6EDA               	movwf	fsr2h,c
 15230  0138A0  0E00               	movlw	0
 15231  0138A2  8EDB               	bsf	plusw2,7,c
 15232  0138A4  D008               	goto	l6867
 15233  0138A6                     l6865:
 15234                           
 15235                           ;stkvar	_b @ sp[(-13)+-4]
 15236  0138A6  0EF1               	movlw	241
 15237  0138A8  24E1               	addwf	fsr1l,w,c
 15238  0138AA  6ED9               	movwf	fsr2l,c
 15239  0138AC  0EFF               	movlw	255
 15240  0138AE  20E2               	addwfc	fsr1h,w,c
 15241  0138B0  6EDA               	movwf	fsr2h,c
 15242  0138B2  0E7F               	movlw	127
 15243  0138B4  16DF               	andwf	indf2,f,c
 15244  0138B6                     l6867:
 15245                           
 15246                           ;stkvar	_b @ sp[(-13)+-4]
 15247  0138B6  0EF2               	movlw	242
 15248  0138B8  24E1               	addwf	fsr1l,w,c
 15249  0138BA  6ED9               	movwf	fsr2l,c
 15250  0138BC  0EFF               	movlw	255
 15251  0138BE  20E2               	addwfc	fsr1h,w,c
 15252  0138C0  6EDA               	movwf	fsr2h,c
 15253                           
 15254                           ;stkvar	_bexp @ sp[(-13)+11]
 15255  0138C2  0EFE               	movlw	-2
 15256  0138C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 15257  0138CA  90D8               	bcf	status,0,c
 15258  0138CC  303D               	rrcf	(btemp+11)^0,w,c
 15259  0138CE  6EDF               	movwf	indf2,c
 15260  0138D0  D644               	goto	l6765
 15261  0138D2                     l2660:
 15262                           
 15263                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15264  0138D2  0EEB               	movlw	235
 15265  0138D4  26E1               	addwf	fsr1l,f,c
 15266  0138D6  0EFF               	movlw	255
 15267  0138D8  22E2               	addwfc	fsr1h,f,c
 15268  0138DA  0012               	return		;funcret
 15269  0138DC                     __end_of___fldiv:
 15270                           	opt callstack 0
 15271                           
 15272 ;; *************** function ___awmod *****************
 15273 ;; Defined at:
 15274 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 15275 ;; Parameters:    Size  Location     Type
 15276 ;;  dividend        2  [STACK] int 
 15277 ;;  divisor         2  [STACK] int 
 15278 ;; Auto vars:     Size  Location     Type
 15279 ;;  sign            1  [STACK] unsigned char 
 15280 ;;  counter         1  [STACK] unsigned char 
 15281 ;; Return value:  Size  Location     Type
 15282 ;;                  2  [STACK] int 
 15283 ;; Registers used:
 15284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15285 ;; Tracked objects:
 15286 ;;		On entry : 0/5
 15287 ;;		On exit  : 0/0
 15288 ;;		Unchanged: 0/0
 15289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15294 ;;Total ram usage:        0 bytes
 15295 ;; Hardware stack levels used:    1
 15296 ;; Hardware stack levels required when called:    6
 15297 ;; This function calls:
 15298 ;;		Nothing
 15299 ;; This function is called by:
 15300 ;;		_efgtoa
 15301 ;; This function uses a reentrant model
 15302 ;;
 15303                           
 15304                           	psect	text57
 15305  0169D6                     __ptext57:
 15306                           	opt callstack 0
 15307  0169D6                     ___awmod:
 15308                           	opt callstack 0
 15309                           
 15310                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15311  0169D6  52E6               	movf	postinc1,f,c
 15312  0169D8  52E6               	movf	postinc1,f,c
 15313                           
 15314                           ;stkvar	_sign @ sp[(-2)+0]
 15315                           
 15316                           ;incstack = 0
 15317  0169DA  0EFE               	movlw	-2
 15318  0169DC  6AE3               	clrf	plusw1,c
 15319                           
 15320                           ;stkvar	_dividend @ sp[(-2)+-2]
 15321  0169DE  0EFD               	movlw	-3
 15322  0169E0  AEE3               	btfss	plusw1,7,c
 15323  0169E2  D009               	goto	l7091
 15324                           
 15325                           ;stkvar	_dividend @ sp[(-2)+-2]
 15326                           ;stkvar	_dividend @ sp[(-2)+-2]
 15327  0169E4  0EFC               	movlw	-4
 15328  0169E6  6CE3               	negf	plusw1,c
 15329  0169E8  0EFD               	movlw	-3
 15330  0169EA  1EE3               	comf	plusw1,f,c
 15331  0169EC  B0D8               	btfsc	status,0,c
 15332  0169EE  2AE3               	incf	plusw1,f,c
 15333                           
 15334                           ;stkvar	_sign @ sp[(-2)+0]
 15335  0169F0  0EFE               	movlw	-2
 15336  0169F2  6AE3               	clrf	plusw1,c
 15337  0169F4  2AE3               	incf	plusw1,f,c
 15338  0169F6                     l7091:
 15339                           
 15340                           ;stkvar	_divisor @ sp[(-2)+-4]
 15341  0169F6  0EFB               	movlw	-5
 15342  0169F8  AEE3               	btfss	plusw1,7,c
 15343  0169FA  D006               	goto	l7095
 15344                           
 15345                           ;stkvar	_divisor @ sp[(-2)+-4]
 15346                           ;stkvar	_divisor @ sp[(-2)+-4]
 15347  0169FC  0EFA               	movlw	-6
 15348  0169FE  6CE3               	negf	plusw1,c
 15349  016A00  0EFB               	movlw	-5
 15350  016A02  1EE3               	comf	plusw1,f,c
 15351  016A04  B0D8               	btfsc	status,0,c
 15352  016A06  2AE3               	incf	plusw1,f,c
 15353  016A08                     l7095:
 15354                           
 15355                           ;stkvar	_divisor @ sp[(-2)+-4]
 15356  016A08  0EFA               	movlw	-6
 15357  016A0A  006F FF8C  F032    	movff	plusw1,btemp
 15358  016A10  0EFB               	movlw	-5
 15359  016A12  50E3               	movf	plusw1,w,c
 15360  016A14  1032               	iorwf	btemp^0,w,c
 15361  016A16  B4D8               	btfsc	status,2,c
 15362  016A18  D053               	goto	u6180
 15363                           
 15364                           ;stkvar	_counter @ sp[(-2)+1]
 15365  016A1A  0EFF               	movlw	-1
 15366  016A1C  6AE3               	clrf	plusw1,c
 15367  016A1E  D012               	goto	L14
 15368  016A20                     l7099:
 15369                           
 15370                           ;stkvar	_divisor @ sp[(-2)+-4]
 15371  016A20  0EFA               	movlw	-6
 15372  016A22  50E3               	movf	plusw1,w,c
 15373  016A24  90D8               	bcf	status,0,c
 15374  016A26  34E8               	rlcf	wreg,w,c
 15375  016A28  6E32               	movwf	btemp^0,c
 15376  016A2A  0EFA               	movlw	-6
 15377  016A2C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15378  016A32  0EFB               	movlw	-5
 15379  016A34  50E3               	movf	plusw1,w,c
 15380  016A36  34E8               	rlcf	wreg,w,c
 15381  016A38  6E32               	movwf	btemp^0,c
 15382  016A3A  0EFB               	movlw	-5
 15383  016A3C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15384                           
 15385                           ;stkvar	_counter @ sp[(-2)+1]
 15386  016A42  0EFF               	movlw	-1
 15387  016A44                     L14:
 15388  016A44  2AE3               	incf	plusw1,f,c
 15389                           
 15390                           ;stkvar	_divisor @ sp[(-2)+-4]
 15391  016A46  0EFB               	movlw	-5
 15392  016A48  AEE3               	btfss	plusw1,7,c
 15393  016A4A  D7EA               	goto	l7099
 15394  016A4C                     u6160:
 15395                           
 15396                           ;stkvar	_divisor @ sp[(-2)+-4]
 15397  016A4C  0EFA               	movlw	-6
 15398  016A4E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15399  016A54  0EFB               	movlw	-5
 15400  016A56  006F FF8C  F03D    	movff	plusw1,btemp+11
 15401                           
 15402                           ;stkvar	_dividend @ sp[(-2)+-2]
 15403  016A5C  0EFC               	movlw	-4
 15404  016A5E  006F FF8C  F03A    	movff	plusw1,btemp+8
 15405  016A64  0EFD               	movlw	-3
 15406  016A66  006F FF8C  F03B    	movff	plusw1,btemp+9
 15407  016A6C  503C               	movf	(btemp+10)^0,w,c
 15408  016A6E  5C3A               	subwf	(btemp+8)^0,w,c
 15409  016A70  503D               	movf	(btemp+11)^0,w,c
 15410  016A72  583B               	subwfb	(btemp+9)^0,w,c
 15411  016A74  A0D8               	btfss	status,0,c
 15412  016A76  D014               	goto	l7109
 15413                           
 15414                           ;stkvar	_divisor @ sp[(-2)+-4]
 15415                           ;stkvar	_dividend @ sp[(-2)+-2]
 15416  016A78  0EFC               	movlw	-4
 15417  016A7A  50E3               	movf	plusw1,w,c
 15418  016A7C  6E32               	movwf	btemp^0,c
 15419  016A7E  0EFA               	movlw	-6
 15420  016A80  50E3               	movf	plusw1,w,c
 15421  016A82  5E32               	subwf	btemp^0,f,c
 15422  016A84  0EFC               	movlw	-4
 15423  016A86  0060  F0CB  FFE3   	movff	btemp,plusw1
 15424  016A8C  0EFD               	movlw	-3
 15425  016A8E  50E3               	movf	plusw1,w,c
 15426  016A90  6E32               	movwf	btemp^0,c
 15427  016A92  0EFB               	movlw	-5
 15428  016A94  50E3               	movf	plusw1,w,c
 15429  016A96  5A32               	subwfb	btemp^0,f,c
 15430  016A98  0EFD               	movlw	-3
 15431  016A9A  0060  F0CB  FFE3   	movff	btemp,plusw1
 15432  016AA0                     l7109:
 15433                           
 15434                           ;stkvar	_divisor @ sp[(-2)+-4]
 15435  016AA0  90D8               	bcf	status,0,c
 15436  016AA2  0EFB               	movlw	-5
 15437  016AA4  32E3               	rrcf	plusw1,f,c
 15438  016AA6  0EFA               	movlw	-6
 15439  016AA8  32E3               	rrcf	plusw1,f,c
 15440                           
 15441                           ;stkvar	_counter @ sp[(-2)+1]
 15442  016AAA  0EFF               	movlw	-1
 15443  016AAC  50E3               	movf	plusw1,w,c
 15444  016AAE  6E32               	movwf	btemp^0,c
 15445  016AB0  0E01               	movlw	1
 15446  016AB2  5E32               	subwf	btemp^0,f,c
 15447  016AB4  0EFF               	movlw	-1
 15448  016AB6  0060  F0CB  FFE3   	movff	btemp,plusw1
 15449  016ABC  A4D8               	btfss	status,2,c
 15450  016ABE  D7C6               	goto	u6160
 15451  016AC0                     u6180:
 15452                           
 15453                           ;stkvar	_sign @ sp[(-2)+0]
 15454  016AC0  0EFE               	movlw	-2
 15455  016AC2  50E3               	movf	plusw1,w,c
 15456  016AC4  B4D8               	btfsc	status,2,c
 15457  016AC6  D006               	goto	l7117
 15458                           
 15459                           ;stkvar	_dividend @ sp[(-2)+-2]
 15460                           ;stkvar	_dividend @ sp[(-2)+-2]
 15461  016AC8  0EFC               	movlw	-4
 15462  016ACA  6CE3               	negf	plusw1,c
 15463  016ACC  0EFD               	movlw	-3
 15464  016ACE  1EE3               	comf	plusw1,f,c
 15465  016AD0  B0D8               	btfsc	status,0,c
 15466  016AD2  2AE3               	incf	plusw1,f,c
 15467  016AD4                     l7117:
 15468                           
 15469                           ;stkvar	_dividend @ sp[(-2)+-2]
 15470  016AD4  0EFC               	movlw	-4
 15471  016AD6  006F FF8C  F032    	movff	plusw1,btemp
 15472  016ADC  0EFD               	movlw	-3
 15473  016ADE  006F FF8C  F033    	movff	plusw1,btemp+1
 15474                           
 15475                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15476  016AE4  0EFA               	movlw	250
 15477  016AE6  26E1               	addwf	fsr1l,f,c
 15478  016AE8  0EFF               	movlw	255
 15479  016AEA  22E2               	addwfc	fsr1h,f,c
 15480  016AEC  0012               	return		;funcret
 15481  016AEE                     __end_of___awmod:
 15482                           	opt callstack 0
 15483                           
 15484 ;; *************** function ___awdiv *****************
 15485 ;; Defined at:
 15486 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;  dividend        2  [STACK] int 
 15489 ;;  divisor         2  [STACK] int 
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;  quotient        2  [STACK] int 
 15492 ;;  sign            1  [STACK] unsigned char 
 15493 ;;  counter         1  [STACK] unsigned char 
 15494 ;; Return value:  Size  Location     Type
 15495 ;;                  2  [STACK] int 
 15496 ;; Registers used:
 15497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15498 ;; Tracked objects:
 15499 ;;		On entry : 0/5
 15500 ;;		On exit  : 0/0
 15501 ;;		Unchanged: 0/0
 15502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15507 ;;Total ram usage:        0 bytes
 15508 ;; Hardware stack levels used:    1
 15509 ;; Hardware stack levels required when called:    6
 15510 ;; This function calls:
 15511 ;;		Nothing
 15512 ;; This function is called by:
 15513 ;;		_efgtoa
 15514 ;; This function uses a reentrant model
 15515 ;;
 15516                           
 15517                           	psect	text58
 15518  0164EE                     __ptext58:
 15519                           	opt callstack 0
 15520  0164EE                     ___awdiv:
 15521                           	opt callstack 0
 15522                           
 15523                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15524  0164EE  52E6               	movf	postinc1,f,c
 15525  0164F0  52E6               	movf	postinc1,f,c
 15526  0164F2  52E6               	movf	postinc1,f,c
 15527  0164F4  52E6               	movf	postinc1,f,c
 15528                           
 15529                           ;stkvar	_sign @ sp[(-4)+2]
 15530                           
 15531                           ;incstack = 0
 15532  0164F6  0EFE               	movlw	-2
 15533  0164F8  6AE3               	clrf	plusw1,c
 15534                           
 15535                           ;stkvar	_divisor @ sp[(-4)+-4]
 15536  0164FA  0EF9               	movlw	-7
 15537  0164FC  AEE3               	btfss	plusw1,7,c
 15538  0164FE  D009               	goto	l7045
 15539                           
 15540                           ;stkvar	_divisor @ sp[(-4)+-4]
 15541                           ;stkvar	_divisor @ sp[(-4)+-4]
 15542  016500  0EF8               	movlw	-8
 15543  016502  6CE3               	negf	plusw1,c
 15544  016504  0EF9               	movlw	-7
 15545  016506  1EE3               	comf	plusw1,f,c
 15546  016508  B0D8               	btfsc	status,0,c
 15547  01650A  2AE3               	incf	plusw1,f,c
 15548                           
 15549                           ;stkvar	_sign @ sp[(-4)+2]
 15550  01650C  0EFE               	movlw	-2
 15551  01650E  6AE3               	clrf	plusw1,c
 15552  016510  2AE3               	incf	plusw1,f,c
 15553  016512                     l7045:
 15554                           
 15555                           ;stkvar	_dividend @ sp[(-4)+-2]
 15556  016512  0EFB               	movlw	-5
 15557  016514  AEE3               	btfss	plusw1,7,c
 15558  016516  D008               	goto	l7051
 15559                           
 15560                           ;stkvar	_dividend @ sp[(-4)+-2]
 15561                           ;stkvar	_dividend @ sp[(-4)+-2]
 15562  016518  0EFA               	movlw	-6
 15563  01651A  6CE3               	negf	plusw1,c
 15564  01651C  0EFB               	movlw	-5
 15565  01651E  1EE3               	comf	plusw1,f,c
 15566  016520  B0D8               	btfsc	status,0,c
 15567  016522  2AE3               	incf	plusw1,f,c
 15568                           
 15569                           ;stkvar	_sign @ sp[(-4)+2]
 15570  016524  0EFE               	movlw	-2
 15571  016526  70E3               	btg	plusw1,0,c
 15572  016528                     l7051:
 15573                           
 15574                           ;stkvar	_quotient @ sp[(-4)+0]
 15575  016528  0EFC               	movlw	-4
 15576  01652A  6AE3               	clrf	plusw1,c
 15577  01652C  0EFD               	movlw	-3
 15578  01652E  6AE3               	clrf	plusw1,c
 15579                           
 15580                           ;stkvar	_divisor @ sp[(-4)+-4]
 15581  016530  0EF8               	movlw	-8
 15582  016532  006F FF8C  F032    	movff	plusw1,btemp
 15583  016538  0EF9               	movlw	-7
 15584  01653A  50E3               	movf	plusw1,w,c
 15585  01653C  1032               	iorwf	btemp^0,w,c
 15586  01653E  B4D8               	btfsc	status,2,c
 15587  016540  D066               	goto	u6110
 15588                           
 15589                           ;stkvar	_counter @ sp[(-4)+3]
 15590  016542  0EFF               	movlw	-1
 15591  016544  6AE3               	clrf	plusw1,c
 15592  016546  D012               	goto	L15
 15593  016548                     l7057:
 15594                           
 15595                           ;stkvar	_divisor @ sp[(-4)+-4]
 15596  016548  0EF8               	movlw	-8
 15597  01654A  50E3               	movf	plusw1,w,c
 15598  01654C  90D8               	bcf	status,0,c
 15599  01654E  34E8               	rlcf	wreg,w,c
 15600  016550  6E32               	movwf	btemp^0,c
 15601  016552  0EF8               	movlw	-8
 15602  016554  0060  F0CB  FFE3   	movff	btemp,plusw1
 15603  01655A  0EF9               	movlw	-7
 15604  01655C  50E3               	movf	plusw1,w,c
 15605  01655E  34E8               	rlcf	wreg,w,c
 15606  016560  6E32               	movwf	btemp^0,c
 15607  016562  0EF9               	movlw	-7
 15608  016564  0060  F0CB  FFE3   	movff	btemp,plusw1
 15609                           
 15610                           ;stkvar	_counter @ sp[(-4)+3]
 15611  01656A  0EFF               	movlw	-1
 15612  01656C                     L15:
 15613  01656C  2AE3               	incf	plusw1,f,c
 15614                           
 15615                           ;stkvar	_divisor @ sp[(-4)+-4]
 15616  01656E  0EF9               	movlw	-7
 15617  016570  AEE3               	btfss	plusw1,7,c
 15618  016572  D7EA               	goto	l7057
 15619  016574                     u6090:
 15620                           
 15621                           ;stkvar	_quotient @ sp[(-4)+0]
 15622  016574  0EFC               	movlw	-4
 15623  016576  50E3               	movf	plusw1,w,c
 15624  016578  90D8               	bcf	status,0,c
 15625  01657A  34E8               	rlcf	wreg,w,c
 15626  01657C  6E32               	movwf	btemp^0,c
 15627  01657E  0EFC               	movlw	-4
 15628  016580  0060  F0CB  FFE3   	movff	btemp,plusw1
 15629  016586  0EFD               	movlw	-3
 15630  016588  50E3               	movf	plusw1,w,c
 15631  01658A  34E8               	rlcf	wreg,w,c
 15632  01658C  6E32               	movwf	btemp^0,c
 15633  01658E  0EFD               	movlw	-3
 15634  016590  0060  F0CB  FFE3   	movff	btemp,plusw1
 15635                           
 15636                           ;stkvar	_divisor @ sp[(-4)+-4]
 15637  016596  0EF8               	movlw	-8
 15638  016598  006F FF8C  F03C    	movff	plusw1,btemp+10
 15639  01659E  0EF9               	movlw	-7
 15640  0165A0  006F FF8C  F03D    	movff	plusw1,btemp+11
 15641                           
 15642                           ;stkvar	_dividend @ sp[(-4)+-2]
 15643  0165A6  0EFA               	movlw	-6
 15644  0165A8  006F FF8C  F03A    	movff	plusw1,btemp+8
 15645  0165AE  0EFB               	movlw	-5
 15646  0165B0  006F FF8C  F03B    	movff	plusw1,btemp+9
 15647  0165B6  503C               	movf	(btemp+10)^0,w,c
 15648  0165B8  5C3A               	subwf	(btemp+8)^0,w,c
 15649  0165BA  503D               	movf	(btemp+11)^0,w,c
 15650  0165BC  583B               	subwfb	(btemp+9)^0,w,c
 15651  0165BE  A0D8               	btfss	status,0,c
 15652  0165C0  D016               	goto	l7071
 15653                           
 15654                           ;stkvar	_divisor @ sp[(-4)+-4]
 15655                           ;stkvar	_dividend @ sp[(-4)+-2]
 15656  0165C2  0EFA               	movlw	-6
 15657  0165C4  50E3               	movf	plusw1,w,c
 15658  0165C6  6E32               	movwf	btemp^0,c
 15659  0165C8  0EF8               	movlw	-8
 15660  0165CA  50E3               	movf	plusw1,w,c
 15661  0165CC  5E32               	subwf	btemp^0,f,c
 15662  0165CE  0EFA               	movlw	-6
 15663  0165D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 15664  0165D6  0EFB               	movlw	-5
 15665  0165D8  50E3               	movf	plusw1,w,c
 15666  0165DA  6E32               	movwf	btemp^0,c
 15667  0165DC  0EF9               	movlw	-7
 15668  0165DE  50E3               	movf	plusw1,w,c
 15669  0165E0  5A32               	subwfb	btemp^0,f,c
 15670  0165E2  0EFB               	movlw	-5
 15671  0165E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 15672                           
 15673                           ;stkvar	_quotient @ sp[(-4)+0]
 15674  0165EA  0EFC               	movlw	-4
 15675  0165EC  80E3               	bsf	plusw1,0,c
 15676  0165EE                     l7071:
 15677                           
 15678                           ;stkvar	_divisor @ sp[(-4)+-4]
 15679  0165EE  90D8               	bcf	status,0,c
 15680  0165F0  0EF9               	movlw	-7
 15681  0165F2  32E3               	rrcf	plusw1,f,c
 15682  0165F4  0EF8               	movlw	-8
 15683  0165F6  32E3               	rrcf	plusw1,f,c
 15684                           
 15685                           ;stkvar	_counter @ sp[(-4)+3]
 15686  0165F8  0EFF               	movlw	-1
 15687  0165FA  50E3               	movf	plusw1,w,c
 15688  0165FC  6E32               	movwf	btemp^0,c
 15689  0165FE  0E01               	movlw	1
 15690  016600  5E32               	subwf	btemp^0,f,c
 15691  016602  0EFF               	movlw	-1
 15692  016604  0060  F0CB  FFE3   	movff	btemp,plusw1
 15693  01660A  A4D8               	btfss	status,2,c
 15694  01660C  D7B3               	goto	u6090
 15695  01660E                     u6110:
 15696                           
 15697                           ;stkvar	_sign @ sp[(-4)+2]
 15698  01660E  0EFE               	movlw	-2
 15699  016610  50E3               	movf	plusw1,w,c
 15700  016612  B4D8               	btfsc	status,2,c
 15701  016614  D006               	goto	l7079
 15702                           
 15703                           ;stkvar	_quotient @ sp[(-4)+0]
 15704                           ;stkvar	_quotient @ sp[(-4)+0]
 15705  016616  0EFC               	movlw	-4
 15706  016618  6CE3               	negf	plusw1,c
 15707  01661A  0EFD               	movlw	-3
 15708  01661C  1EE3               	comf	plusw1,f,c
 15709  01661E  B0D8               	btfsc	status,0,c
 15710  016620  2AE3               	incf	plusw1,f,c
 15711  016622                     l7079:
 15712                           
 15713                           ;stkvar	_quotient @ sp[(-4)+0]
 15714  016622  0EFC               	movlw	-4
 15715  016624  006F FF8C  F032    	movff	plusw1,btemp
 15716  01662A  0EFD               	movlw	-3
 15717  01662C  006F FF8C  F033    	movff	plusw1,btemp+1
 15718                           
 15719                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15720  016632  0EF8               	movlw	248
 15721  016634  26E1               	addwf	fsr1l,f,c
 15722  016636  0EFF               	movlw	255
 15723  016638  22E2               	addwfc	fsr1h,f,c
 15724  01663A  0012               	return		;funcret
 15725  01663C                     __end_of___awdiv:
 15726                           	opt callstack 0
 15727                           
 15728 ;; *************** function _dtoa *****************
 15729 ;; Defined at:
 15730 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15731 ;; Parameters:    Size  Location     Type
 15732 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15733 ;;		 -> f(6), NULL(0), 
 15734 ;;  d               8  [STACK] long long 
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;  n               8  [STACK] long long 
 15737 ;;  i               2  [STACK] int 
 15738 ;;  s               2  [STACK] int 
 15739 ;;  w               2  [STACK] int 
 15740 ;;  p               2  [STACK] int 
 15741 ;; Return value:  Size  Location     Type
 15742 ;;                  2  [STACK] int 
 15743 ;; Registers used:
 15744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 15745 ;; Tracked objects:
 15746 ;;		On entry : 0/5
 15747 ;;		On exit  : 0/0
 15748 ;;		Unchanged: 0/0
 15749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15754 ;;Total ram usage:        0 bytes
 15755 ;; Hardware stack levels used:    1
 15756 ;; Hardware stack levels required when called:   11
 15757 ;; This function calls:
 15758 ;;		___aodiv
 15759 ;;		___aomod
 15760 ;;		_abs
 15761 ;;		_pad
 15762 ;; This function is called by:
 15763 ;;		_vfpfcnvrt
 15764 ;; This function uses a reentrant model
 15765 ;;
 15766                           
 15767                           	psect	text59
 15768  013D88                     __ptext59:
 15769                           	opt callstack 0
 15770  013D88                     _dtoa:
 15771                           	opt callstack 0
 15772                           
 15773                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15774  013D88  0E12               	movlw	18
 15775  013D8A  26E1               	addwf	fsr1l,f,c
 15776  013D8C  0E00               	movlw	0
 15777  013D8E  22E2               	addwfc	fsr1h,f,c
 15778                           
 15779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 15780                           ;stkvar	_d @ sp[(-18)+-10]
 15781                           
 15782                           ;incstack = 0
 15783  013D90  0EE4               	movlw	228
 15784  013D92  24E1               	addwf	fsr1l,w,c
 15785  013D94  6ED9               	movwf	fsr2l,c
 15786  013D96  0EFF               	movlw	255
 15787  013D98  20E2               	addwfc	fsr1h,w,c
 15788  013D9A  6EDA               	movwf	fsr2h,c
 15789                           
 15790                           ;stkvar	_n @ sp[(-18)+2]
 15791  013D9C  0E08               	movlw	8
 15792  013D9E  6E32               	movwf	btemp^0,c
 15793  013DA0  0EF0               	movlw	-16
 15794  013DA2                     us908999:
 15795  013DA2  006F FF7B FFE3     	movff	postinc2,plusw1
 15796  013DA8  28E8               	incf	wreg,w,c
 15797  013DAA  2E32               	decfsz	btemp^0,f,c
 15798  013DAC  D7FA               	bra	us908999
 15799                           
 15800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 15801                           ;stkvar	_n @ sp[(-18)+2]
 15802  013DAE  0EF7               	movlw	-9
 15803  013DB0  AEE3               	btfss	plusw1,7,c
 15804  013DB2  D002               	goto	u9090
 15805  013DB4  0E01               	movlw	1
 15806  013DB6  D001               	goto	u9100
 15807  013DB8                     u9090:
 15808  013DB8  0E00               	movlw	0
 15809  013DBA                     u9100:
 15810  013DBA  6E3C               	movwf	(btemp+10)^0,c
 15811  013DBC  6A3D               	clrf	(btemp+11)^0,c
 15812                           
 15813                           ;stkvar	_s @ sp[(-18)+12]
 15814  013DBE  0EFA               	movlw	-6
 15815  013DC0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15816  013DC6  0EFB               	movlw	-5
 15817  013DC8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15818                           
 15819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 15820                           ;stkvar	_s @ sp[(-18)+12]
 15821  013DCE  0EFA               	movlw	-6
 15822  013DD0  006F FF8C  F032    	movff	plusw1,btemp
 15823  013DD6  0EFB               	movlw	-5
 15824  013DD8  50E3               	movf	plusw1,w,c
 15825  013DDA  1032               	iorwf	btemp^0,w,c
 15826  013DDC  B4D8               	btfsc	status,2,c
 15827  013DDE  D025               	goto	u9120
 15828                           
 15829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 15830                           ;stkvar	_n @ sp[(-18)+2]
 15831                           ;stkvar	_n @ sp[(-18)+2]
 15832  013DE0  0EF0               	movlw	-16
 15833  013DE2  6CE3               	negf	plusw1,c
 15834  013DE4  0EF1               	movlw	-15
 15835  013DE6  1EE3               	comf	plusw1,f,c
 15836  013DE8  0EF2               	movlw	-14
 15837  013DEA  1EE3               	comf	plusw1,f,c
 15838  013DEC  0EF3               	movlw	-13
 15839  013DEE  1EE3               	comf	plusw1,f,c
 15840  013DF0  0EF4               	movlw	-12
 15841  013DF2  1EE3               	comf	plusw1,f,c
 15842  013DF4  0EF5               	movlw	-11
 15843  013DF6  1EE3               	comf	plusw1,f,c
 15844  013DF8  0EF6               	movlw	-10
 15845  013DFA  1EE3               	comf	plusw1,f,c
 15846  013DFC  0EF7               	movlw	-9
 15847  013DFE  1EE3               	comf	plusw1,f,c
 15848  013E00  E314               	bnc	u9120
 15849  013E02  0EF1               	movlw	-15
 15850  013E04  2AE3               	incf	plusw1,f,c
 15851  013E06  E311               	bnc	u9120
 15852  013E08  0EF2               	movlw	-14
 15853  013E0A  2AE3               	incf	plusw1,f,c
 15854  013E0C  E30E               	bnc	u9120
 15855  013E0E  0EF3               	movlw	-13
 15856  013E10  2AE3               	incf	plusw1,f,c
 15857  013E12  E30B               	bnc	u9120
 15858  013E14  0EF4               	movlw	-12
 15859  013E16  2AE3               	incf	plusw1,f,c
 15860  013E18  E308               	bnc	u9120
 15861  013E1A  0EF5               	movlw	-11
 15862  013E1C  2AE3               	incf	plusw1,f,c
 15863  013E1E  E305               	bnc	u9120
 15864  013E20  0EF6               	movlw	-10
 15865  013E22  2AE3               	incf	plusw1,f,c
 15866  013E24  E302               	bnc	u9120
 15867  013E26  0EF7               	movlw	-9
 15868  013E28  2AE3               	incf	plusw1,f,c
 15869  013E2A                     u9120:
 15870                           
 15871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 15872  013E2A  AE1E               	btfss	(_prec+1)^0,7,c
 15873                           
 15874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 15875  013E2C  921F               	bcf	_flags^0,1,c
 15876                           
 15877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 15878  013E2E  BE1E               	btfsc	(_prec+1)^0,7,c
 15879  013E30  D005               	goto	u9140
 15880  013E32  501E               	movf	(_prec+1)^0,w,c
 15881  013E34  E110               	bnz	l9565
 15882  013E36  041D               	decf	_prec^0,w,c
 15883  013E38  B0D8               	btfsc	status,0,c
 15884  013E3A  D00D               	goto	l9565
 15885  013E3C                     u9140:
 15886  013E3C  0E01               	movlw	1
 15887  013E3E  6E3C               	movwf	(btemp+10)^0,c
 15888  013E40  0E00               	movlw	0
 15889  013E42  6E3D               	movwf	(btemp+11)^0,c
 15890                           
 15891                           ;stkvar	_p @ sp[(-18)+16]
 15892  013E44  0EFE               	movlw	-2
 15893  013E46  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15894  013E4C  0EFF               	movlw	-1
 15895  013E4E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15896  013E54  D008               	goto	l1864
 15897  013E56                     l9565:
 15898                           
 15899                           ;stkvar	_p @ sp[(-18)+16]
 15900  013E56  0EFE               	movlw	-2
 15901  013E58  0060  F077  FFE3   	movff	_prec,plusw1
 15902  013E5E  0EFF               	movlw	-1
 15903  013E60  0060  F07B  FFE3   	movff	_prec+1,plusw1
 15904  013E66                     l1864:
 15905                           
 15906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 15907                           ;stkvar	_w @ sp[(-18)+14]
 15908  013E66  0EFC               	movlw	-4
 15909  013E68  0060  F06F  FFE3   	movff	_width,plusw1
 15910  013E6E  0EFD               	movlw	-3
 15911  013E70  0060  F073  FFE3   	movff	_width+1,plusw1
 15912                           
 15913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 15914                           ;stkvar	_s @ sp[(-18)+12]
 15915  013E76  0EFA               	movlw	-6
 15916  013E78  006F FF8C  F032    	movff	plusw1,btemp
 15917  013E7E  0EFB               	movlw	-5
 15918  013E80  50E3               	movf	plusw1,w,c
 15919  013E82  1032               	iorwf	btemp^0,w,c
 15920  013E84  A4D8               	btfss	status,2,c
 15921  013E86  D002               	goto	u9160
 15922  013E88  A41F               	btfss	_flags^0,2,c
 15923  013E8A  D00A               	goto	l9573
 15924  013E8C                     u9160:
 15925                           
 15926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 15927                           ;stkvar	_w @ sp[(-18)+14]
 15928  013E8C  50E1               	movf	fsr1l,w,c
 15929  013E8E  0FFC               	addlw	-4
 15930  013E90  6ED9               	movwf	fsr2l,c
 15931  013E92  50E2               	movf	fsr1h,w,c
 15932  013E94  6EDA               	movwf	fsr2h,c
 15933  013E96  0EFF               	movlw	255
 15934  013E98  22DA               	addwfc	fsr2h,f,c
 15935  013E9A  06DE               	decf	postinc2,f,c
 15936  013E9C  0E00               	movlw	0
 15937  013E9E  5ADD               	subwfb	postdec2,f,c
 15938  013EA0                     l9573:
 15939                           
 15940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 15941  013EA0  0E4F               	movlw	79
 15942  013EA2  6E3C               	movwf	(btemp+10)^0,c
 15943  013EA4  0E00               	movlw	0
 15944  013EA6  6E3D               	movwf	(btemp+11)^0,c
 15945                           
 15946                           ;stkvar	_i @ sp[(-18)+10]
 15947  013EA8  0EF8               	movlw	-8
 15948  013EAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15949  013EB0  0EF9               	movlw	-7
 15950  013EB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15951                           
 15952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 15953  013EB8  0101               	movlb	1	; () banked
 15954  013EBA  6BCB               	clrf	(_dbuf+79)& (0+255),b
 15955                           
 15956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15957  013EBC  D109               	goto	l9587
 15958  013EBE                     l9577:
 15959                           
 15960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 15961                           ;stkvar	_i @ sp[(-18)+10]
 15962  013EBE  50E1               	movf	fsr1l,w,c
 15963  013EC0  0FF8               	addlw	-8
 15964  013EC2  6ED9               	movwf	fsr2l,c
 15965  013EC4  50E2               	movf	fsr1h,w,c
 15966  013EC6  6EDA               	movwf	fsr2h,c
 15967  013EC8  0EFF               	movlw	255
 15968  013ECA  22DA               	addwfc	fsr2h,f,c
 15969  013ECC  06DE               	decf	postinc2,f,c
 15970  013ECE  0E00               	movlw	0
 15971  013ED0  5ADD               	subwfb	postdec2,f,c
 15972                           
 15973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 15974  013ED2  0E0A               	movlw	10
 15975  013ED4  6EE6               	movwf	postinc1,c
 15976  013ED6  0E00               	movlw	0
 15977  013ED8  6EE6               	movwf	postinc1,c
 15978  013EDA  0E00               	movlw	0
 15979  013EDC  6EE6               	movwf	postinc1,c
 15980  013EDE  0E00               	movlw	0
 15981  013EE0  6EE6               	movwf	postinc1,c
 15982  013EE2  0E00               	movlw	0
 15983  013EE4  6EE6               	movwf	postinc1,c
 15984  013EE6  0E00               	movlw	0
 15985  013EE8  6EE6               	movwf	postinc1,c
 15986  013EEA  0E00               	movlw	0
 15987  013EEC  6EE6               	movwf	postinc1,c
 15988  013EEE  0E00               	movlw	0
 15989  013EF0  6EE6               	movwf	postinc1,c
 15990                           
 15991                           ;stkvar	_n @ sp[(-26)+2]
 15992  013EF2  50E1               	movf	fsr1l,w,c
 15993  013EF4  0FE8               	addlw	-24
 15994  013EF6  6ED9               	movwf	fsr2l,c
 15995  013EF8  50E2               	movf	fsr1h,w,c
 15996  013EFA  6EDA               	movwf	fsr2h,c
 15997  013EFC  0EFF               	movlw	255
 15998  013EFE  22DA               	addwfc	fsr2h,f,c
 15999  013F00  006F FF7B FFE6     	movff	postinc2,postinc1
 16000  013F06  006F FF7B FFE6     	movff	postinc2,postinc1
 16001  013F0C  006F FF7B FFE6     	movff	postinc2,postinc1
 16002  013F12  006F FF7B FFE6     	movff	postinc2,postinc1
 16003  013F18  006F FF7B FFE6     	movff	postinc2,postinc1
 16004  013F1E  006F FF7B FFE6     	movff	postinc2,postinc1
 16005  013F24  006F FF7B FFE6     	movff	postinc2,postinc1
 16006  013F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 16007  013F30  EC48  F0AB         	call	___aomod	;wreg free
 16008  013F34  52E5               	movf	postdec1,f,c
 16009  013F36  006F FF9C  F049    	movff	indf1,btemp+23
 16010  013F3C  52E5               	movf	postdec1,f,c
 16011  013F3E  006F FF9C  F048    	movff	indf1,btemp+22
 16012  013F44  52E5               	movf	postdec1,f,c
 16013  013F46  006F FF9C  F047    	movff	indf1,btemp+21
 16014  013F4C  52E5               	movf	postdec1,f,c
 16015  013F4E  006F FF9C  F046    	movff	indf1,btemp+20
 16016  013F54  52E5               	movf	postdec1,f,c
 16017  013F56  006F FF9C  F045    	movff	indf1,btemp+19
 16018  013F5C  52E5               	movf	postdec1,f,c
 16019  013F5E  006F FF9C  F044    	movff	indf1,btemp+18
 16020  013F64  52E5               	movf	postdec1,f,c
 16021  013F66  006F FF9C  F043    	movff	indf1,btemp+17
 16022  013F6C  52E5               	movf	postdec1,f,c
 16023  013F6E  006F FF9C  F042    	movff	indf1,btemp+16
 16024  013F74  0EF8               	movlw	248
 16025  013F76  26E1               	addwf	fsr1l,f,c
 16026  013F78  0EFF               	movlw	255
 16027  013F7A  22E2               	addwfc	fsr1h,f,c
 16028  013F7C  0060  F108  F03C   	movff	btemp+16,btemp+10
 16029  013F82  0060  F10C  F03D   	movff	btemp+17,btemp+11
 16030  013F88  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16031  013F8E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16032  013F94  EC22  F0C0         	call	_abs	;wreg free
 16033  013F98  0E30               	movlw	48
 16034  013F9A  2632               	addwf	btemp^0,f,c
 16035                           
 16036                           ;stkvar	_i @ sp[(-18)+10]
 16037  013F9C  0EF8               	movlw	-8
 16038  013F9E  006F FF8C  F03C    	movff	plusw1,btemp+10
 16039  013FA4  0EF9               	movlw	-7
 16040  013FA6  006F FF8C  F03D    	movff	plusw1,btemp+11
 16041  013FAC  0E7C               	movlw	low _dbuf
 16042  013FAE  243C               	addwf	(btemp+10)^0,w,c
 16043  013FB0  6ED9               	movwf	fsr2l,c
 16044  013FB2  0E01               	movlw	high _dbuf
 16045  013FB4  203D               	addwfc	(btemp+11)^0,w,c
 16046  013FB6  6EDA               	movwf	fsr2h,c
 16047  013FB8  0060  F0CB  FFDF   	movff	btemp,indf2
 16048                           
 16049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16050                           ;stkvar	_p @ sp[(-18)+16]
 16051  013FBE  50E1               	movf	fsr1l,w,c
 16052  013FC0  0FFE               	addlw	-2
 16053  013FC2  6ED9               	movwf	fsr2l,c
 16054  013FC4  50E2               	movf	fsr1h,w,c
 16055  013FC6  6EDA               	movwf	fsr2h,c
 16056  013FC8  0EFF               	movlw	255
 16057  013FCA  22DA               	addwfc	fsr2h,f,c
 16058  013FCC  06DE               	decf	postinc2,f,c
 16059  013FCE  0E00               	movlw	0
 16060  013FD0  5ADD               	subwfb	postdec2,f,c
 16061                           
 16062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16063                           ;stkvar	_w @ sp[(-18)+14]
 16064  013FD2  50E1               	movf	fsr1l,w,c
 16065  013FD4  0FFC               	addlw	-4
 16066  013FD6  6ED9               	movwf	fsr2l,c
 16067  013FD8  50E2               	movf	fsr1h,w,c
 16068  013FDA  6EDA               	movwf	fsr2h,c
 16069  013FDC  0EFF               	movlw	255
 16070  013FDE  22DA               	addwfc	fsr2h,f,c
 16071  013FE0  06DE               	decf	postinc2,f,c
 16072  013FE2  0E00               	movlw	0
 16073  013FE4  5ADD               	subwfb	postdec2,f,c
 16074                           
 16075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16076  013FE6  0E0A               	movlw	10
 16077  013FE8  6EE6               	movwf	postinc1,c
 16078  013FEA  0E00               	movlw	0
 16079  013FEC  6EE6               	movwf	postinc1,c
 16080  013FEE  0E00               	movlw	0
 16081  013FF0  6EE6               	movwf	postinc1,c
 16082  013FF2  0E00               	movlw	0
 16083  013FF4  6EE6               	movwf	postinc1,c
 16084  013FF6  0E00               	movlw	0
 16085  013FF8  6EE6               	movwf	postinc1,c
 16086  013FFA  0E00               	movlw	0
 16087  013FFC  6EE6               	movwf	postinc1,c
 16088  013FFE  0E00               	movlw	0
 16089  014000  6EE6               	movwf	postinc1,c
 16090  014002  0E00               	movlw	0
 16091  014004  6EE6               	movwf	postinc1,c
 16092                           
 16093                           ;stkvar	_n @ sp[(-26)+2]
 16094  014006  50E1               	movf	fsr1l,w,c
 16095  014008  0FE8               	addlw	-24
 16096  01400A  6ED9               	movwf	fsr2l,c
 16097  01400C  50E2               	movf	fsr1h,w,c
 16098  01400E  6EDA               	movwf	fsr2h,c
 16099  014010  0EFF               	movlw	255
 16100  014012  22DA               	addwfc	fsr2h,f,c
 16101  014014  006F FF7B FFE6     	movff	postinc2,postinc1
 16102  01401A  006F FF7B FFE6     	movff	postinc2,postinc1
 16103  014020  006F FF7B FFE6     	movff	postinc2,postinc1
 16104  014026  006F FF7B FFE6     	movff	postinc2,postinc1
 16105  01402C  006F FF7B FFE6     	movff	postinc2,postinc1
 16106  014032  006F FF7B FFE6     	movff	postinc2,postinc1
 16107  014038  006F FF7B FFE6     	movff	postinc2,postinc1
 16108  01403E  006F FF7B FFE6     	movff	postinc2,postinc1
 16109  014044  ECCE  F0A8         	call	___aodiv	;wreg free
 16110  014048  52E5               	movf	postdec1,f,c
 16111  01404A  006F FF9C  F049    	movff	indf1,btemp+23
 16112  014050  52E5               	movf	postdec1,f,c
 16113  014052  006F FF9C  F048    	movff	indf1,btemp+22
 16114  014058  52E5               	movf	postdec1,f,c
 16115  01405A  006F FF9C  F047    	movff	indf1,btemp+21
 16116  014060  52E5               	movf	postdec1,f,c
 16117  014062  006F FF9C  F046    	movff	indf1,btemp+20
 16118  014068  52E5               	movf	postdec1,f,c
 16119  01406A  006F FF9C  F045    	movff	indf1,btemp+19
 16120  014070  52E5               	movf	postdec1,f,c
 16121  014072  006F FF9C  F044    	movff	indf1,btemp+18
 16122  014078  52E5               	movf	postdec1,f,c
 16123  01407A  006F FF9C  F043    	movff	indf1,btemp+17
 16124  014080  52E5               	movf	postdec1,f,c
 16125  014082  006F FF9C  F042    	movff	indf1,btemp+16
 16126  014088  0EF8               	movlw	248
 16127  01408A  26E1               	addwf	fsr1l,f,c
 16128  01408C  0EFF               	movlw	255
 16129  01408E  22E2               	addwfc	fsr1h,f,c
 16130                           
 16131                           ;stkvar	_n @ sp[(-18)+2]
 16132  014090  0EF0               	movlw	-16
 16133  014092  0060  F10B  FFE3   	movff	btemp+16,plusw1
 16134  014098  0EF1               	movlw	-15
 16135  01409A  0060  F10F  FFE3   	movff	btemp+17,plusw1
 16136  0140A0  0EF2               	movlw	-14
 16137  0140A2  0060  F113  FFE3   	movff	btemp+18,plusw1
 16138  0140A8  0EF3               	movlw	-13
 16139  0140AA  0060  F117  FFE3   	movff	btemp+19,plusw1
 16140  0140B0  0EF4               	movlw	-12
 16141  0140B2  0060  F11B  FFE3   	movff	btemp+20,plusw1
 16142  0140B8  0EF5               	movlw	-11
 16143  0140BA  0060  F11F  FFE3   	movff	btemp+21,plusw1
 16144  0140C0  0EF6               	movlw	-10
 16145  0140C2  0060  F123  FFE3   	movff	btemp+22,plusw1
 16146  0140C8  0EF7               	movlw	-9
 16147  0140CA  0060  F127  FFE3   	movff	btemp+23,plusw1
 16148  0140D0                     l9587:
 16149                           
 16150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16151                           ;stkvar	_i @ sp[(-18)+10]
 16152  0140D0  0EF9               	movlw	-7
 16153  0140D2  BEE3               	btfsc	plusw1,7,c
 16154  0140D4  D036               	goto	u9210
 16155  0140D6  0EF9               	movlw	-7
 16156  0140D8  50E3               	movf	plusw1,w,c
 16157  0140DA  E104               	bnz	u9170
 16158  0140DC  0EF8               	movlw	-8
 16159  0140DE  04E3               	decf	plusw1,w,c
 16160  0140E0  A0D8               	btfss	status,0,c
 16161  0140E2  D02F               	goto	u9210
 16162  0140E4                     u9170:
 16163                           
 16164                           ;stkvar	_n @ sp[(-18)+2]
 16165  0140E4  0EF0               	movlw	-16
 16166  0140E6  50E3               	movf	plusw1,w,c
 16167  0140E8  E115               	bnz	u9181
 16168  0140EA  0EF1               	movlw	-15
 16169  0140EC  50E3               	movf	plusw1,w,c
 16170  0140EE  E112               	bnz	u9181
 16171  0140F0  0EF2               	movlw	-14
 16172  0140F2  50E3               	movf	plusw1,w,c
 16173  0140F4  E10F               	bnz	u9181
 16174  0140F6  0EF3               	movlw	-13
 16175  0140F8  50E3               	movf	plusw1,w,c
 16176  0140FA  E10C               	bnz	u9181
 16177  0140FC  0EF4               	movlw	-12
 16178  0140FE  50E3               	movf	plusw1,w,c
 16179  014100  E109               	bnz	u9181
 16180  014102  0EF5               	movlw	-11
 16181  014104  50E3               	movf	plusw1,w,c
 16182  014106  E106               	bnz	u9181
 16183  014108  0EF6               	movlw	-10
 16184  01410A  50E3               	movf	plusw1,w,c
 16185  01410C  E103               	bnz	u9181
 16186  01410E  0EF7               	movlw	-9
 16187  014110  50E3               	movf	plusw1,w,c
 16188  014112  A4D8               	btfss	status,2,c
 16189  014114                     u9181:
 16190  014114  D6D4               	goto	l9577
 16191                           
 16192                           ;stkvar	_p @ sp[(-18)+16]
 16193  014116  0EFF               	movlw	-1
 16194  014118  BEE3               	btfsc	plusw1,7,c
 16195  01411A  D007               	goto	u9190
 16196  01411C  0EFF               	movlw	-1
 16197  01411E  50E3               	movf	plusw1,w,c
 16198  014120  E103               	bnz	u9191
 16199  014122  0EFE               	movlw	-2
 16200  014124  04E3               	decf	plusw1,w,c
 16201  014126  B0D8               	btfsc	status,0,c
 16202  014128                     u9191:
 16203  014128  D6CA               	goto	l9577
 16204  01412A                     u9190:
 16205                           
 16206                           ;stkvar	_w @ sp[(-18)+14]
 16207  01412A  0EFD               	movlw	-3
 16208  01412C  BEE3               	btfsc	plusw1,7,c
 16209  01412E  D009               	goto	u9210
 16210  014130  0EFD               	movlw	-3
 16211  014132  50E3               	movf	plusw1,w,c
 16212  014134  E104               	bnz	u9200
 16213  014136  0EFC               	movlw	-4
 16214  014138  04E3               	decf	plusw1,w,c
 16215  01413A  A0D8               	btfss	status,0,c
 16216  01413C  D002               	goto	u9210
 16217  01413E                     u9200:
 16218  01413E  B21F               	btfsc	_flags^0,1,c
 16219  014140  D6BE               	goto	l9577
 16220  014142                     u9210:
 16221                           
 16222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16223                           ;stkvar	_s @ sp[(-18)+12]
 16224  014142  0EFA               	movlw	-6
 16225  014144  006F FF8C  F032    	movff	plusw1,btemp
 16226  01414A  0EFB               	movlw	-5
 16227  01414C  50E3               	movf	plusw1,w,c
 16228  01414E  1032               	iorwf	btemp^0,w,c
 16229  014150  A4D8               	btfss	status,2,c
 16230  014152  D002               	goto	u9230
 16231  014154  A41F               	btfss	_flags^0,2,c
 16232  014156  D033               	goto	l9611
 16233  014158                     u9230:
 16234                           
 16235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 16236                           ;stkvar	_i @ sp[(-18)+10]
 16237  014158  50E1               	movf	fsr1l,w,c
 16238  01415A  0FF8               	addlw	-8
 16239  01415C  6ED9               	movwf	fsr2l,c
 16240  01415E  50E2               	movf	fsr1h,w,c
 16241  014160  6EDA               	movwf	fsr2h,c
 16242  014162  0EFF               	movlw	255
 16243  014164  22DA               	addwfc	fsr2h,f,c
 16244  014166  06DE               	decf	postinc2,f,c
 16245  014168  0E00               	movlw	0
 16246  01416A  5ADD               	subwfb	postdec2,f,c
 16247                           
 16248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 16249                           ;stkvar	_s @ sp[(-18)+12]
 16250  01416C  0EFA               	movlw	-6
 16251  01416E  006F FF8C  F032    	movff	plusw1,btemp
 16252  014174  0EFB               	movlw	-5
 16253  014176  50E3               	movf	plusw1,w,c
 16254  014178  1032               	iorwf	btemp^0,w,c
 16255  01417A  A4D8               	btfss	status,2,c
 16256  01417C  D002               	goto	l9607
 16257  01417E  0E2B               	movlw	43
 16258  014180  D001               	goto	L16
 16259  014182                     l9607:
 16260  014182  0E2D               	movlw	45
 16261  014184                     L16:
 16262  014184  6E3C               	movwf	(btemp+10)^0,c
 16263  014186  0E00               	movlw	0
 16264  014188  6E3D               	movwf	(btemp+11)^0,c
 16265                           
 16266                           ;stkvar	_dtoa$4484 @ sp[(-18)+0]
 16267  01418A  0EEE               	movlw	-18
 16268  01418C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16269  014192  0EEF               	movlw	-17
 16270  014194  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16271                           
 16272                           ;stkvar	_dtoa$4484 @ sp[(-18)+0]
 16273                           ;stkvar	_i @ sp[(-18)+10]
 16274  01419A  0EF8               	movlw	-8
 16275  01419C  006F FF8C  F03C    	movff	plusw1,btemp+10
 16276  0141A2  0EF9               	movlw	-7
 16277  0141A4  006F FF8C  F03D    	movff	plusw1,btemp+11
 16278  0141AA  0E7C               	movlw	low _dbuf
 16279  0141AC  243C               	addwf	(btemp+10)^0,w,c
 16280  0141AE  6ED9               	movwf	fsr2l,c
 16281  0141B0  0E01               	movlw	high _dbuf
 16282  0141B2  203D               	addwfc	(btemp+11)^0,w,c
 16283  0141B4  6EDA               	movwf	fsr2h,c
 16284  0141B6  0EEE               	movlw	-18
 16285  0141B8  006F FF8F FFDF     	movff	plusw1,indf2
 16286  0141BE                     l9611:
 16287                           
 16288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 16289                           ;stkvar	_w @ sp[(-18)+14]
 16290  0141BE  0EFC               	movlw	-4
 16291  0141C0  006F FF8F FFE6     	movff	plusw1,postinc1
 16292  0141C6  006F FF8F FFE6     	movff	plusw1,postinc1
 16293                           
 16294                           ;stkvar	_i @ sp[(-20)+10]
 16295  0141CC  0E7C               	movlw	low _dbuf
 16296  0141CE  6E3C               	movwf	(btemp+10)^0,c
 16297  0141D0  0E01               	movlw	high _dbuf
 16298  0141D2  6E3D               	movwf	(btemp+11)^0,c
 16299  0141D4  0EF6               	movlw	-10
 16300  0141D6  50E3               	movf	plusw1,w,c
 16301  0141D8  263C               	addwf	(btemp+10)^0,f,c
 16302  0141DA  0EF7               	movlw	-9
 16303  0141DC  50E3               	movf	plusw1,w,c
 16304  0141DE  223D               	addwfc	(btemp+11)^0,f,c
 16305  0141E0  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16306  0141E6  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16307                           
 16308                           ;stkvar	_fp @ sp[(-22)+-2]
 16309  0141EC  0EE8               	movlw	-24
 16310  0141EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16311  0141F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16312  0141FA  EC77  F0B5         	call	_pad	;wreg free
 16313                           
 16314                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16315  0141FE  0EE4               	movlw	228
 16316  014200  26E1               	addwf	fsr1l,f,c
 16317  014202  0EFF               	movlw	255
 16318  014204  22E2               	addwfc	fsr1h,f,c
 16319  014206  0012               	return		;funcret
 16320  014208                     __end_of_dtoa:
 16321                           	opt callstack 0
 16322                           
 16323 ;; *************** function _abs *****************
 16324 ;; Defined at:
 16325 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 16326 ;; Parameters:    Size  Location     Type
 16327 ;;  a               2  [STACK] int 
 16328 ;; Auto vars:     Size  Location     Type
 16329 ;;		None
 16330 ;; Return value:  Size  Location     Type
 16331 ;;                  2  [STACK] int 
 16332 ;; Registers used:
 16333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 16334 ;; Tracked objects:
 16335 ;;		On entry : 0/1
 16336 ;;		On exit  : 0/0
 16337 ;;		Unchanged: 0/0
 16338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16343 ;;Total ram usage:        0 bytes
 16344 ;; Hardware stack levels used:    1
 16345 ;; Hardware stack levels required when called:    6
 16346 ;; This function calls:
 16347 ;;		Nothing
 16348 ;; This function is called by:
 16349 ;;		_dtoa
 16350 ;; This function uses a reentrant model
 16351 ;;
 16352                           
 16353                           	psect	text60
 16354  018044                     __ptext60:
 16355                           	opt callstack 0
 16356  018044                     _abs:
 16357                           	opt callstack 17
 16358                           
 16359                           ;stkvar	_a @ sp[(0)+-2]
 16360                           
 16361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16362                           ;incstack = 0
 16363  018044  0EFF               	movlw	-1
 16364  018046  BEE3               	btfsc	plusw1,7,c
 16365  018048  D007               	goto	u5070
 16366  01804A  0EFF               	movlw	-1
 16367  01804C  50E3               	movf	plusw1,w,c
 16368  01804E  E112               	bnz	l6533
 16369  018050  0EFE               	movlw	-2
 16370  018052  04E3               	decf	plusw1,w,c
 16371  018054  B0D8               	btfsc	status,0,c
 16372  018056  D00E               	goto	l6533
 16373  018058                     u5070:
 16374                           
 16375                           ;stkvar	_a @ sp[(0)+-2]
 16376  018058  0EFE               	movlw	-2
 16377  01805A  006F FF8C  F032    	movff	plusw1,btemp
 16378  018060  1E32               	comf	btemp^0,f,c
 16379  018062  0EFF               	movlw	-1
 16380  018064  006F FF8C  F033    	movff	plusw1,btemp+1
 16381  01806A  1E33               	comf	(btemp+1)^0,f,c
 16382  01806C  2A32               	incf	btemp^0,f,c
 16383  01806E  B4D8               	btfsc	status,2,c
 16384  018070  2A33               	incf	(btemp+1)^0,f,c
 16385  018072  D008               	goto	l2767
 16386  018074                     l6533:
 16387                           
 16388                           ;stkvar	_a @ sp[(0)+-2]
 16389  018074  0EFE               	movlw	-2
 16390  018076  006F FF8C  F032    	movff	plusw1,btemp
 16391  01807C  0EFF               	movlw	-1
 16392  01807E  006F FF8C  F033    	movff	plusw1,btemp+1
 16393  018084                     l2767:
 16394                           
 16395                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 16396  018084  52E5               	movf	postdec1,f,c
 16397  018086  52E5               	movf	postdec1,f,c
 16398  018088  0012               	return		;funcret
 16399  01808A                     __end_of_abs:
 16400                           	opt callstack 0
 16401                           
 16402 ;; *************** function ___aomod *****************
 16403 ;; Defined at:
 16404 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 16405 ;; Parameters:    Size  Location     Type
 16406 ;;  dividend        8  [STACK] long long 
 16407 ;;  divisor         8  [STACK] long long 
 16408 ;; Auto vars:     Size  Location     Type
 16409 ;;  sign            1  [STACK] unsigned char 
 16410 ;;  counter         1  [STACK] unsigned char 
 16411 ;; Return value:  Size  Location     Type
 16412 ;;                  8  [STACK] long long 
 16413 ;; Registers used:
 16414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16415 ;; Tracked objects:
 16416 ;;		On entry : 0/1
 16417 ;;		On exit  : 0/0
 16418 ;;		Unchanged: 0/0
 16419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16424 ;;Total ram usage:        0 bytes
 16425 ;; Hardware stack levels used:    1
 16426 ;; Hardware stack levels required when called:    6
 16427 ;; This function calls:
 16428 ;;		Nothing
 16429 ;; This function is called by:
 16430 ;;		_dtoa
 16431 ;; This function uses a reentrant model
 16432 ;;
 16433                           
 16434                           	psect	text61
 16435  015690                     __ptext61:
 16436                           	opt callstack 0
 16437  015690                     ___aomod:
 16438                           	opt callstack 0
 16439                           
 16440                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16441  015690  52E6               	movf	postinc1,f,c
 16442  015692  52E6               	movf	postinc1,f,c
 16443                           
 16444                           ;stkvar	_sign @ sp[(-2)+0]
 16445                           
 16446                           ;incstack = 0
 16447  015694  0EFE               	movlw	-2
 16448  015696  6AE3               	clrf	plusw1,c
 16449                           
 16450                           ;stkvar	_dividend @ sp[(-2)+-8]
 16451  015698  0EFD               	movlw	-3
 16452  01569A  AEE3               	btfss	plusw1,7,c
 16453  01569C  D028               	goto	l6691
 16454                           
 16455                           ;stkvar	_dividend @ sp[(-2)+-8]
 16456                           ;stkvar	_dividend @ sp[(-2)+-8]
 16457  01569E  0EF6               	movlw	-10
 16458  0156A0  6CE3               	negf	plusw1,c
 16459  0156A2  0EF7               	movlw	-9
 16460  0156A4  1EE3               	comf	plusw1,f,c
 16461  0156A6  0EF8               	movlw	-8
 16462  0156A8  1EE3               	comf	plusw1,f,c
 16463  0156AA  0EF9               	movlw	-7
 16464  0156AC  1EE3               	comf	plusw1,f,c
 16465  0156AE  0EFA               	movlw	-6
 16466  0156B0  1EE3               	comf	plusw1,f,c
 16467  0156B2  0EFB               	movlw	-5
 16468  0156B4  1EE3               	comf	plusw1,f,c
 16469  0156B6  0EFC               	movlw	-4
 16470  0156B8  1EE3               	comf	plusw1,f,c
 16471  0156BA  0EFD               	movlw	-3
 16472  0156BC  1EE3               	comf	plusw1,f,c
 16473  0156BE  E314               	bnc	u5500
 16474  0156C0  0EF7               	movlw	-9
 16475  0156C2  2AE3               	incf	plusw1,f,c
 16476  0156C4  E311               	bnc	u5500
 16477  0156C6  0EF8               	movlw	-8
 16478  0156C8  2AE3               	incf	plusw1,f,c
 16479  0156CA  E30E               	bnc	u5500
 16480  0156CC  0EF9               	movlw	-7
 16481  0156CE  2AE3               	incf	plusw1,f,c
 16482  0156D0  E30B               	bnc	u5500
 16483  0156D2  0EFA               	movlw	-6
 16484  0156D4  2AE3               	incf	plusw1,f,c
 16485  0156D6  E308               	bnc	u5500
 16486  0156D8  0EFB               	movlw	-5
 16487  0156DA  2AE3               	incf	plusw1,f,c
 16488  0156DC  E305               	bnc	u5500
 16489  0156DE  0EFC               	movlw	-4
 16490  0156E0  2AE3               	incf	plusw1,f,c
 16491  0156E2  E302               	bnc	u5500
 16492  0156E4  0EFD               	movlw	-3
 16493  0156E6  2AE3               	incf	plusw1,f,c
 16494  0156E8                     u5500:
 16495                           
 16496                           ;stkvar	_sign @ sp[(-2)+0]
 16497  0156E8  0EFE               	movlw	-2
 16498  0156EA  6AE3               	clrf	plusw1,c
 16499  0156EC  2AE3               	incf	plusw1,f,c
 16500  0156EE                     l6691:
 16501                           
 16502                           ;stkvar	_divisor @ sp[(-2)+-16]
 16503  0156EE  0EF5               	movlw	-11
 16504  0156F0  AEE3               	btfss	plusw1,7,c
 16505  0156F2  D025               	goto	u5520
 16506                           
 16507                           ;stkvar	_divisor @ sp[(-2)+-16]
 16508                           ;stkvar	_divisor @ sp[(-2)+-16]
 16509  0156F4  0EEE               	movlw	-18
 16510  0156F6  6CE3               	negf	plusw1,c
 16511  0156F8  0EEF               	movlw	-17
 16512  0156FA  1EE3               	comf	plusw1,f,c
 16513  0156FC  0EF0               	movlw	-16
 16514  0156FE  1EE3               	comf	plusw1,f,c
 16515  015700  0EF1               	movlw	-15
 16516  015702  1EE3               	comf	plusw1,f,c
 16517  015704  0EF2               	movlw	-14
 16518  015706  1EE3               	comf	plusw1,f,c
 16519  015708  0EF3               	movlw	-13
 16520  01570A  1EE3               	comf	plusw1,f,c
 16521  01570C  0EF4               	movlw	-12
 16522  01570E  1EE3               	comf	plusw1,f,c
 16523  015710  0EF5               	movlw	-11
 16524  015712  1EE3               	comf	plusw1,f,c
 16525  015714  E314               	bnc	u5520
 16526  015716  0EEF               	movlw	-17
 16527  015718  2AE3               	incf	plusw1,f,c
 16528  01571A  E311               	bnc	u5520
 16529  01571C  0EF0               	movlw	-16
 16530  01571E  2AE3               	incf	plusw1,f,c
 16531  015720  E30E               	bnc	u5520
 16532  015722  0EF1               	movlw	-15
 16533  015724  2AE3               	incf	plusw1,f,c
 16534  015726  E30B               	bnc	u5520
 16535  015728  0EF2               	movlw	-14
 16536  01572A  2AE3               	incf	plusw1,f,c
 16537  01572C  E308               	bnc	u5520
 16538  01572E  0EF3               	movlw	-13
 16539  015730  2AE3               	incf	plusw1,f,c
 16540  015732  E305               	bnc	u5520
 16541  015734  0EF4               	movlw	-12
 16542  015736  2AE3               	incf	plusw1,f,c
 16543  015738  E302               	bnc	u5520
 16544  01573A  0EF5               	movlw	-11
 16545  01573C  2AE3               	incf	plusw1,f,c
 16546  01573E                     u5520:
 16547                           
 16548                           ;stkvar	_divisor @ sp[(-2)+-16]
 16549  01573E  0EEE               	movlw	-18
 16550  015740  50E3               	movf	plusw1,w,c
 16551  015742  E116               	bnz	u5530
 16552  015744  0EEF               	movlw	-17
 16553  015746  50E3               	movf	plusw1,w,c
 16554  015748  E113               	bnz	u5530
 16555  01574A  0EF0               	movlw	-16
 16556  01574C  50E3               	movf	plusw1,w,c
 16557  01574E  E110               	bnz	u5530
 16558  015750  0EF1               	movlw	-15
 16559  015752  50E3               	movf	plusw1,w,c
 16560  015754  E10D               	bnz	u5530
 16561  015756  0EF2               	movlw	-14
 16562  015758  50E3               	movf	plusw1,w,c
 16563  01575A  E10A               	bnz	u5530
 16564  01575C  0EF3               	movlw	-13
 16565  01575E  50E3               	movf	plusw1,w,c
 16566  015760  E107               	bnz	u5530
 16567  015762  0EF4               	movlw	-12
 16568  015764  50E3               	movf	plusw1,w,c
 16569  015766  E104               	bnz	u5530
 16570  015768  0EF5               	movlw	-11
 16571  01576A  50E3               	movf	plusw1,w,c
 16572  01576C  B4D8               	btfsc	status,2,c
 16573  01576E  D075               	goto	u5560
 16574  015770                     u5530:
 16575                           
 16576                           ;stkvar	_counter @ sp[(-2)+1]
 16577  015770  0EFF               	movlw	-1
 16578  015772  6AE3               	clrf	plusw1,c
 16579  015774  D012               	goto	L17
 16580  015776                     l6699:
 16581                           
 16582                           ;stkvar	_divisor @ sp[(-2)+-16]
 16583  015776  90D8               	bcf	status,0,c
 16584  015778  0EEE               	movlw	-18
 16585  01577A  36E3               	rlcf	plusw1,f,c
 16586  01577C  0EEF               	movlw	-17
 16587  01577E  36E3               	rlcf	plusw1,f,c
 16588  015780  0EF0               	movlw	-16
 16589  015782  36E3               	rlcf	plusw1,f,c
 16590  015784  0EF1               	movlw	-15
 16591  015786  36E3               	rlcf	plusw1,f,c
 16592  015788  0EF2               	movlw	-14
 16593  01578A  36E3               	rlcf	plusw1,f,c
 16594  01578C  0EF3               	movlw	-13
 16595  01578E  36E3               	rlcf	plusw1,f,c
 16596  015790  0EF4               	movlw	-12
 16597  015792  36E3               	rlcf	plusw1,f,c
 16598  015794  0EF5               	movlw	-11
 16599  015796  36E3               	rlcf	plusw1,f,c
 16600                           
 16601                           ;stkvar	_counter @ sp[(-2)+1]
 16602  015798  0EFF               	movlw	-1
 16603  01579A                     L17:
 16604  01579A  2AE3               	incf	plusw1,f,c
 16605                           
 16606                           ;stkvar	_divisor @ sp[(-2)+-16]
 16607  01579C  0EF5               	movlw	-11
 16608  01579E  AEE3               	btfss	plusw1,7,c
 16609  0157A0  D7EA               	goto	l6699
 16610  0157A2                     u5540:
 16611                           
 16612                           ;stkvar	_divisor @ sp[(-2)+-16]
 16613                           ;stkvar	_dividend @ sp[(-2)+-8]
 16614  0157A2  50E1               	movf	fsr1l,w,c
 16615  0157A4  0FF6               	addlw	-10
 16616  0157A6  6ED9               	movwf	fsr2l,c
 16617  0157A8  50E2               	movf	fsr1h,w,c
 16618  0157AA  6EDA               	movwf	fsr2h,c
 16619  0157AC  0EFF               	movlw	255
 16620  0157AE  22DA               	addwfc	fsr2h,f,c
 16621  0157B0  0EEE               	movlw	-18
 16622  0157B2  50E3               	movf	plusw1,w,c
 16623  0157B4  5CDE               	subwf	postinc2,w,c
 16624  0157B6  0EEF               	movlw	-17
 16625  0157B8  50E3               	movf	plusw1,w,c
 16626  0157BA  58DE               	subwfb	postinc2,w,c
 16627  0157BC  0EF0               	movlw	-16
 16628  0157BE  50E3               	movf	plusw1,w,c
 16629  0157C0  58DE               	subwfb	postinc2,w,c
 16630  0157C2  0EF1               	movlw	-15
 16631  0157C4  50E3               	movf	plusw1,w,c
 16632  0157C6  58DE               	subwfb	postinc2,w,c
 16633  0157C8  0EF2               	movlw	-14
 16634  0157CA  50E3               	movf	plusw1,w,c
 16635  0157CC  58DE               	subwfb	postinc2,w,c
 16636  0157CE  0EF3               	movlw	-13
 16637  0157D0  50E3               	movf	plusw1,w,c
 16638  0157D2  58DE               	subwfb	postinc2,w,c
 16639  0157D4  0EF4               	movlw	-12
 16640  0157D6  50E3               	movf	plusw1,w,c
 16641  0157D8  58DE               	subwfb	postinc2,w,c
 16642  0157DA  0EF5               	movlw	-11
 16643  0157DC  50E3               	movf	plusw1,w,c
 16644  0157DE  58DE               	subwfb	postinc2,w,c
 16645  0157E0  A0D8               	btfss	status,0,c
 16646  0157E2  D01F               	goto	l6707
 16647                           
 16648                           ;stkvar	_divisor @ sp[(-2)+-16]
 16649                           ;stkvar	_dividend @ sp[(-2)+-8]
 16650  0157E4  50E1               	movf	fsr1l,w,c
 16651  0157E6  0FF6               	addlw	-10
 16652  0157E8  6ED9               	movwf	fsr2l,c
 16653  0157EA  50E2               	movf	fsr1h,w,c
 16654  0157EC  6EDA               	movwf	fsr2h,c
 16655  0157EE  0EFF               	movlw	255
 16656  0157F0  22DA               	addwfc	fsr2h,f,c
 16657  0157F2  0EEE               	movlw	-18
 16658  0157F4  50E3               	movf	plusw1,w,c
 16659  0157F6  5EDE               	subwf	postinc2,f,c
 16660  0157F8  0EEF               	movlw	-17
 16661  0157FA  50E3               	movf	plusw1,w,c
 16662  0157FC  5ADE               	subwfb	postinc2,f,c
 16663  0157FE  0EF0               	movlw	-16
 16664  015800  50E3               	movf	plusw1,w,c
 16665  015802  5ADE               	subwfb	postinc2,f,c
 16666  015804  0EF1               	movlw	-15
 16667  015806  50E3               	movf	plusw1,w,c
 16668  015808  5ADE               	subwfb	postinc2,f,c
 16669  01580A  0EF2               	movlw	-14
 16670  01580C  50E3               	movf	plusw1,w,c
 16671  01580E  5ADE               	subwfb	postinc2,f,c
 16672  015810  0EF3               	movlw	-13
 16673  015812  50E3               	movf	plusw1,w,c
 16674  015814  5ADE               	subwfb	postinc2,f,c
 16675  015816  0EF4               	movlw	-12
 16676  015818  50E3               	movf	plusw1,w,c
 16677  01581A  5ADE               	subwfb	postinc2,f,c
 16678  01581C  0EF5               	movlw	-11
 16679  01581E  50E3               	movf	plusw1,w,c
 16680  015820  5ADE               	subwfb	postinc2,f,c
 16681  015822                     l6707:
 16682                           
 16683                           ;stkvar	_divisor @ sp[(-2)+-16]
 16684  015822  90D8               	bcf	status,0,c
 16685  015824  0EF5               	movlw	-11
 16686  015826  32E3               	rrcf	plusw1,f,c
 16687  015828  0EF4               	movlw	-12
 16688  01582A  32E3               	rrcf	plusw1,f,c
 16689  01582C  0EF3               	movlw	-13
 16690  01582E  32E3               	rrcf	plusw1,f,c
 16691  015830  0EF2               	movlw	-14
 16692  015832  32E3               	rrcf	plusw1,f,c
 16693  015834  0EF1               	movlw	-15
 16694  015836  32E3               	rrcf	plusw1,f,c
 16695  015838  0EF0               	movlw	-16
 16696  01583A  32E3               	rrcf	plusw1,f,c
 16697  01583C  0EEF               	movlw	-17
 16698  01583E  32E3               	rrcf	plusw1,f,c
 16699  015840  0EEE               	movlw	-18
 16700  015842  32E3               	rrcf	plusw1,f,c
 16701                           
 16702                           ;stkvar	_counter @ sp[(-2)+1]
 16703  015844  0EFF               	movlw	-1
 16704  015846  50E3               	movf	plusw1,w,c
 16705  015848  6E32               	movwf	btemp^0,c
 16706  01584A  0E01               	movlw	1
 16707  01584C  5E32               	subwf	btemp^0,f,c
 16708  01584E  0EFF               	movlw	-1
 16709  015850  0060  F0CB  FFE3   	movff	btemp,plusw1
 16710  015856  A4D8               	btfss	status,2,c
 16711  015858  D7A4               	goto	u5540
 16712  01585A                     u5560:
 16713                           
 16714                           ;stkvar	_sign @ sp[(-2)+0]
 16715  01585A  0EFE               	movlw	-2
 16716  01585C  50E3               	movf	plusw1,w,c
 16717  01585E  B4D8               	btfsc	status,2,c
 16718  015860  D025               	goto	u5580
 16719                           
 16720                           ;stkvar	_dividend @ sp[(-2)+-8]
 16721                           ;stkvar	_dividend @ sp[(-2)+-8]
 16722  015862  0EF6               	movlw	-10
 16723  015864  6CE3               	negf	plusw1,c
 16724  015866  0EF7               	movlw	-9
 16725  015868  1EE3               	comf	plusw1,f,c
 16726  01586A  0EF8               	movlw	-8
 16727  01586C  1EE3               	comf	plusw1,f,c
 16728  01586E  0EF9               	movlw	-7
 16729  015870  1EE3               	comf	plusw1,f,c
 16730  015872  0EFA               	movlw	-6
 16731  015874  1EE3               	comf	plusw1,f,c
 16732  015876  0EFB               	movlw	-5
 16733  015878  1EE3               	comf	plusw1,f,c
 16734  01587A  0EFC               	movlw	-4
 16735  01587C  1EE3               	comf	plusw1,f,c
 16736  01587E  0EFD               	movlw	-3
 16737  015880  1EE3               	comf	plusw1,f,c
 16738  015882  E314               	bnc	u5580
 16739  015884  0EF7               	movlw	-9
 16740  015886  2AE3               	incf	plusw1,f,c
 16741  015888  E311               	bnc	u5580
 16742  01588A  0EF8               	movlw	-8
 16743  01588C  2AE3               	incf	plusw1,f,c
 16744  01588E  E30E               	bnc	u5580
 16745  015890  0EF9               	movlw	-7
 16746  015892  2AE3               	incf	plusw1,f,c
 16747  015894  E30B               	bnc	u5580
 16748  015896  0EFA               	movlw	-6
 16749  015898  2AE3               	incf	plusw1,f,c
 16750  01589A  E308               	bnc	u5580
 16751  01589C  0EFB               	movlw	-5
 16752  01589E  2AE3               	incf	plusw1,f,c
 16753  0158A0  E305               	bnc	u5580
 16754  0158A2  0EFC               	movlw	-4
 16755  0158A4  2AE3               	incf	plusw1,f,c
 16756  0158A6  E302               	bnc	u5580
 16757  0158A8  0EFD               	movlw	-3
 16758  0158AA  2AE3               	incf	plusw1,f,c
 16759  0158AC                     u5580:
 16760                           
 16761                           ;stkvar	_dividend @ sp[(-2)+-8]
 16762  0158AC  0EF6               	movlw	246
 16763  0158AE  24E1               	addwf	fsr1l,w,c
 16764  0158B0  6ED9               	movwf	fsr2l,c
 16765  0158B2  0EFF               	movlw	255
 16766  0158B4  20E2               	addwfc	fsr1h,w,c
 16767  0158B6  6EDA               	movwf	fsr2h,c
 16768                           
 16769                           ;stkvar	?___aomod @ sp[(-2)+-8]
 16770  0158B8  0E08               	movlw	8
 16771  0158BA  6E32               	movwf	btemp^0,c
 16772  0158BC  0EF6               	movlw	-10
 16773  0158BE                     us559999:
 16774  0158BE  006F FF7B FFE3     	movff	postinc2,plusw1
 16775  0158C4  28E8               	incf	wreg,w,c
 16776  0158C6  2E32               	decfsz	btemp^0,f,c
 16777  0158C8  D7FA               	bra	us559999
 16778                           
 16779                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16780  0158CA  52E5               	movf	postdec1,f,c
 16781  0158CC  52E5               	movf	postdec1,f,c
 16782  0158CE  0012               	return		;funcret
 16783  0158D0                     __end_of___aomod:
 16784                           	opt callstack 0
 16785                           
 16786 ;; *************** function ___aodiv *****************
 16787 ;; Defined at:
 16788 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 16789 ;; Parameters:    Size  Location     Type
 16790 ;;  dividend        8  [STACK] long long 
 16791 ;;  divisor         8  [STACK] long long 
 16792 ;; Auto vars:     Size  Location     Type
 16793 ;;  quotient        8  [STACK] long long 
 16794 ;;  sign            1  [STACK] unsigned char 
 16795 ;;  counter         1  [STACK] unsigned char 
 16796 ;; Return value:  Size  Location     Type
 16797 ;;                  8  [STACK] long long 
 16798 ;; Registers used:
 16799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16800 ;; Tracked objects:
 16801 ;;		On entry : 0/1
 16802 ;;		On exit  : 0/0
 16803 ;;		Unchanged: 0/0
 16804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16809 ;;Total ram usage:        0 bytes
 16810 ;; Hardware stack levels used:    1
 16811 ;; Hardware stack levels required when called:    6
 16812 ;; This function calls:
 16813 ;;		Nothing
 16814 ;; This function is called by:
 16815 ;;		_dtoa
 16816 ;; This function uses a reentrant model
 16817 ;;
 16818                           
 16819                           	psect	text62
 16820  01519C                     __ptext62:
 16821                           	opt callstack 0
 16822  01519C                     ___aodiv:
 16823                           	opt callstack 0
 16824                           
 16825                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 16826  01519C  0E0A               	movlw	10
 16827  01519E  26E1               	addwf	fsr1l,f,c
 16828  0151A0  0E00               	movlw	0
 16829  0151A2  22E2               	addwfc	fsr1h,f,c
 16830                           
 16831                           ;stkvar	_sign @ sp[(-10)+8]
 16832                           
 16833                           ;incstack = 0
 16834  0151A4  0EFE               	movlw	-2
 16835  0151A6  6AE3               	clrf	plusw1,c
 16836                           
 16837                           ;stkvar	_divisor @ sp[(-10)+-16]
 16838  0151A8  0EED               	movlw	-19
 16839  0151AA  AEE3               	btfss	plusw1,7,c
 16840  0151AC  D028               	goto	l6647
 16841                           
 16842                           ;stkvar	_divisor @ sp[(-10)+-16]
 16843                           ;stkvar	_divisor @ sp[(-10)+-16]
 16844  0151AE  0EE6               	movlw	-26
 16845  0151B0  6CE3               	negf	plusw1,c
 16846  0151B2  0EE7               	movlw	-25
 16847  0151B4  1EE3               	comf	plusw1,f,c
 16848  0151B6  0EE8               	movlw	-24
 16849  0151B8  1EE3               	comf	plusw1,f,c
 16850  0151BA  0EE9               	movlw	-23
 16851  0151BC  1EE3               	comf	plusw1,f,c
 16852  0151BE  0EEA               	movlw	-22
 16853  0151C0  1EE3               	comf	plusw1,f,c
 16854  0151C2  0EEB               	movlw	-21
 16855  0151C4  1EE3               	comf	plusw1,f,c
 16856  0151C6  0EEC               	movlw	-20
 16857  0151C8  1EE3               	comf	plusw1,f,c
 16858  0151CA  0EED               	movlw	-19
 16859  0151CC  1EE3               	comf	plusw1,f,c
 16860  0151CE  E314               	bnc	u5380
 16861  0151D0  0EE7               	movlw	-25
 16862  0151D2  2AE3               	incf	plusw1,f,c
 16863  0151D4  E311               	bnc	u5380
 16864  0151D6  0EE8               	movlw	-24
 16865  0151D8  2AE3               	incf	plusw1,f,c
 16866  0151DA  E30E               	bnc	u5380
 16867  0151DC  0EE9               	movlw	-23
 16868  0151DE  2AE3               	incf	plusw1,f,c
 16869  0151E0  E30B               	bnc	u5380
 16870  0151E2  0EEA               	movlw	-22
 16871  0151E4  2AE3               	incf	plusw1,f,c
 16872  0151E6  E308               	bnc	u5380
 16873  0151E8  0EEB               	movlw	-21
 16874  0151EA  2AE3               	incf	plusw1,f,c
 16875  0151EC  E305               	bnc	u5380
 16876  0151EE  0EEC               	movlw	-20
 16877  0151F0  2AE3               	incf	plusw1,f,c
 16878  0151F2  E302               	bnc	u5380
 16879  0151F4  0EED               	movlw	-19
 16880  0151F6  2AE3               	incf	plusw1,f,c
 16881  0151F8                     u5380:
 16882                           
 16883                           ;stkvar	_sign @ sp[(-10)+8]
 16884  0151F8  0EFE               	movlw	-2
 16885  0151FA  6AE3               	clrf	plusw1,c
 16886  0151FC  2AE3               	incf	plusw1,f,c
 16887  0151FE                     l6647:
 16888                           
 16889                           ;stkvar	_dividend @ sp[(-10)+-8]
 16890  0151FE  0EF5               	movlw	-11
 16891  015200  AEE3               	btfss	plusw1,7,c
 16892  015202  D027               	goto	l6653
 16893                           
 16894                           ;stkvar	_dividend @ sp[(-10)+-8]
 16895                           ;stkvar	_dividend @ sp[(-10)+-8]
 16896  015204  0EEE               	movlw	-18
 16897  015206  6CE3               	negf	plusw1,c
 16898  015208  0EEF               	movlw	-17
 16899  01520A  1EE3               	comf	plusw1,f,c
 16900  01520C  0EF0               	movlw	-16
 16901  01520E  1EE3               	comf	plusw1,f,c
 16902  015210  0EF1               	movlw	-15
 16903  015212  1EE3               	comf	plusw1,f,c
 16904  015214  0EF2               	movlw	-14
 16905  015216  1EE3               	comf	plusw1,f,c
 16906  015218  0EF3               	movlw	-13
 16907  01521A  1EE3               	comf	plusw1,f,c
 16908  01521C  0EF4               	movlw	-12
 16909  01521E  1EE3               	comf	plusw1,f,c
 16910  015220  0EF5               	movlw	-11
 16911  015222  1EE3               	comf	plusw1,f,c
 16912  015224  E314               	bnc	u5400
 16913  015226  0EEF               	movlw	-17
 16914  015228  2AE3               	incf	plusw1,f,c
 16915  01522A  E311               	bnc	u5400
 16916  01522C  0EF0               	movlw	-16
 16917  01522E  2AE3               	incf	plusw1,f,c
 16918  015230  E30E               	bnc	u5400
 16919  015232  0EF1               	movlw	-15
 16920  015234  2AE3               	incf	plusw1,f,c
 16921  015236  E30B               	bnc	u5400
 16922  015238  0EF2               	movlw	-14
 16923  01523A  2AE3               	incf	plusw1,f,c
 16924  01523C  E308               	bnc	u5400
 16925  01523E  0EF3               	movlw	-13
 16926  015240  2AE3               	incf	plusw1,f,c
 16927  015242  E305               	bnc	u5400
 16928  015244  0EF4               	movlw	-12
 16929  015246  2AE3               	incf	plusw1,f,c
 16930  015248  E302               	bnc	u5400
 16931  01524A  0EF5               	movlw	-11
 16932  01524C  2AE3               	incf	plusw1,f,c
 16933  01524E                     u5400:
 16934                           
 16935                           ;stkvar	_sign @ sp[(-10)+8]
 16936  01524E  0EFE               	movlw	-2
 16937  015250  70E3               	btg	plusw1,0,c
 16938  015252                     l6653:
 16939                           
 16940                           ;stkvar	_quotient @ sp[(-10)+0]
 16941  015252  0E07               	movlw	7
 16942  015254  6E32               	movwf	btemp^0,c
 16943  015256  0EF6               	movlw	-10
 16944  015258                     u5411:
 16945  015258  6AE3               	clrf	plusw1,c
 16946  01525A  2AE8               	incf	wreg,f,c
 16947  01525C  0632               	decf	btemp^0,f,c
 16948  01525E  E2FC               	bc	u5411
 16949                           
 16950                           ;stkvar	_divisor @ sp[(-10)+-16]
 16951  015260  0EE6               	movlw	-26
 16952  015262  50E3               	movf	plusw1,w,c
 16953  015264  E116               	bnz	u5420
 16954  015266  0EE7               	movlw	-25
 16955  015268  50E3               	movf	plusw1,w,c
 16956  01526A  E113               	bnz	u5420
 16957  01526C  0EE8               	movlw	-24
 16958  01526E  50E3               	movf	plusw1,w,c
 16959  015270  E110               	bnz	u5420
 16960  015272  0EE9               	movlw	-23
 16961  015274  50E3               	movf	plusw1,w,c
 16962  015276  E10D               	bnz	u5420
 16963  015278  0EEA               	movlw	-22
 16964  01527A  50E3               	movf	plusw1,w,c
 16965  01527C  E10A               	bnz	u5420
 16966  01527E  0EEB               	movlw	-21
 16967  015280  50E3               	movf	plusw1,w,c
 16968  015282  E107               	bnz	u5420
 16969  015284  0EEC               	movlw	-20
 16970  015286  50E3               	movf	plusw1,w,c
 16971  015288  E104               	bnz	u5420
 16972  01528A  0EED               	movlw	-19
 16973  01528C  50E3               	movf	plusw1,w,c
 16974  01528E  B4D8               	btfsc	status,2,c
 16975  015290  D088               	goto	u5450
 16976  015292                     u5420:
 16977                           
 16978                           ;stkvar	_counter @ sp[(-10)+9]
 16979  015292  0EFF               	movlw	-1
 16980  015294  6AE3               	clrf	plusw1,c
 16981  015296  D012               	goto	L18
 16982  015298                     l6659:
 16983                           
 16984                           ;stkvar	_divisor @ sp[(-10)+-16]
 16985  015298  90D8               	bcf	status,0,c
 16986  01529A  0EE6               	movlw	-26
 16987  01529C  36E3               	rlcf	plusw1,f,c
 16988  01529E  0EE7               	movlw	-25
 16989  0152A0  36E3               	rlcf	plusw1,f,c
 16990  0152A2  0EE8               	movlw	-24
 16991  0152A4  36E3               	rlcf	plusw1,f,c
 16992  0152A6  0EE9               	movlw	-23
 16993  0152A8  36E3               	rlcf	plusw1,f,c
 16994  0152AA  0EEA               	movlw	-22
 16995  0152AC  36E3               	rlcf	plusw1,f,c
 16996  0152AE  0EEB               	movlw	-21
 16997  0152B0  36E3               	rlcf	plusw1,f,c
 16998  0152B2  0EEC               	movlw	-20
 16999  0152B4  36E3               	rlcf	plusw1,f,c
 17000  0152B6  0EED               	movlw	-19
 17001  0152B8  36E3               	rlcf	plusw1,f,c
 17002                           
 17003                           ;stkvar	_counter @ sp[(-10)+9]
 17004  0152BA  0EFF               	movlw	-1
 17005  0152BC                     L18:
 17006  0152BC  2AE3               	incf	plusw1,f,c
 17007                           
 17008                           ;stkvar	_divisor @ sp[(-10)+-16]
 17009  0152BE  0EED               	movlw	-19
 17010  0152C0  AEE3               	btfss	plusw1,7,c
 17011  0152C2  D7EA               	goto	l6659
 17012  0152C4                     u5430:
 17013                           
 17014                           ;stkvar	_quotient @ sp[(-10)+0]
 17015  0152C4  90D8               	bcf	status,0,c
 17016  0152C6  0EF6               	movlw	-10
 17017  0152C8  36E3               	rlcf	plusw1,f,c
 17018  0152CA  0EF7               	movlw	-9
 17019  0152CC  36E3               	rlcf	plusw1,f,c
 17020  0152CE  0EF8               	movlw	-8
 17021  0152D0  36E3               	rlcf	plusw1,f,c
 17022  0152D2  0EF9               	movlw	-7
 17023  0152D4  36E3               	rlcf	plusw1,f,c
 17024  0152D6  0EFA               	movlw	-6
 17025  0152D8  36E3               	rlcf	plusw1,f,c
 17026  0152DA  0EFB               	movlw	-5
 17027  0152DC  36E3               	rlcf	plusw1,f,c
 17028  0152DE  0EFC               	movlw	-4
 17029  0152E0  36E3               	rlcf	plusw1,f,c
 17030  0152E2  0EFD               	movlw	-3
 17031  0152E4  36E3               	rlcf	plusw1,f,c
 17032                           
 17033                           ;stkvar	_divisor @ sp[(-10)+-16]
 17034                           ;stkvar	_dividend @ sp[(-10)+-8]
 17035  0152E6  50E1               	movf	fsr1l,w,c
 17036  0152E8  0FEE               	addlw	-18
 17037  0152EA  6ED9               	movwf	fsr2l,c
 17038  0152EC  50E2               	movf	fsr1h,w,c
 17039  0152EE  6EDA               	movwf	fsr2h,c
 17040  0152F0  0EFF               	movlw	255
 17041  0152F2  22DA               	addwfc	fsr2h,f,c
 17042  0152F4  0EE6               	movlw	-26
 17043  0152F6  50E3               	movf	plusw1,w,c
 17044  0152F8  5CDE               	subwf	postinc2,w,c
 17045  0152FA  0EE7               	movlw	-25
 17046  0152FC  50E3               	movf	plusw1,w,c
 17047  0152FE  58DE               	subwfb	postinc2,w,c
 17048  015300  0EE8               	movlw	-24
 17049  015302  50E3               	movf	plusw1,w,c
 17050  015304  58DE               	subwfb	postinc2,w,c
 17051  015306  0EE9               	movlw	-23
 17052  015308  50E3               	movf	plusw1,w,c
 17053  01530A  58DE               	subwfb	postinc2,w,c
 17054  01530C  0EEA               	movlw	-22
 17055  01530E  50E3               	movf	plusw1,w,c
 17056  015310  58DE               	subwfb	postinc2,w,c
 17057  015312  0EEB               	movlw	-21
 17058  015314  50E3               	movf	plusw1,w,c
 17059  015316  58DE               	subwfb	postinc2,w,c
 17060  015318  0EEC               	movlw	-20
 17061  01531A  50E3               	movf	plusw1,w,c
 17062  01531C  58DE               	subwfb	postinc2,w,c
 17063  01531E  0EED               	movlw	-19
 17064  015320  50E3               	movf	plusw1,w,c
 17065  015322  58DE               	subwfb	postinc2,w,c
 17066  015324  A0D8               	btfss	status,0,c
 17067  015326  D021               	goto	l6671
 17068                           
 17069                           ;stkvar	_divisor @ sp[(-10)+-16]
 17070                           ;stkvar	_dividend @ sp[(-10)+-8]
 17071  015328  50E1               	movf	fsr1l,w,c
 17072  01532A  0FEE               	addlw	-18
 17073  01532C  6ED9               	movwf	fsr2l,c
 17074  01532E  50E2               	movf	fsr1h,w,c
 17075  015330  6EDA               	movwf	fsr2h,c
 17076  015332  0EFF               	movlw	255
 17077  015334  22DA               	addwfc	fsr2h,f,c
 17078  015336  0EE6               	movlw	-26
 17079  015338  50E3               	movf	plusw1,w,c
 17080  01533A  5EDE               	subwf	postinc2,f,c
 17081  01533C  0EE7               	movlw	-25
 17082  01533E  50E3               	movf	plusw1,w,c
 17083  015340  5ADE               	subwfb	postinc2,f,c
 17084  015342  0EE8               	movlw	-24
 17085  015344  50E3               	movf	plusw1,w,c
 17086  015346  5ADE               	subwfb	postinc2,f,c
 17087  015348  0EE9               	movlw	-23
 17088  01534A  50E3               	movf	plusw1,w,c
 17089  01534C  5ADE               	subwfb	postinc2,f,c
 17090  01534E  0EEA               	movlw	-22
 17091  015350  50E3               	movf	plusw1,w,c
 17092  015352  5ADE               	subwfb	postinc2,f,c
 17093  015354  0EEB               	movlw	-21
 17094  015356  50E3               	movf	plusw1,w,c
 17095  015358  5ADE               	subwfb	postinc2,f,c
 17096  01535A  0EEC               	movlw	-20
 17097  01535C  50E3               	movf	plusw1,w,c
 17098  01535E  5ADE               	subwfb	postinc2,f,c
 17099  015360  0EED               	movlw	-19
 17100  015362  50E3               	movf	plusw1,w,c
 17101  015364  5ADE               	subwfb	postinc2,f,c
 17102                           
 17103                           ;stkvar	_quotient @ sp[(-10)+0]
 17104  015366  0EF6               	movlw	-10
 17105  015368  80E3               	bsf	plusw1,0,c
 17106  01536A                     l6671:
 17107                           
 17108                           ;stkvar	_divisor @ sp[(-10)+-16]
 17109  01536A  90D8               	bcf	status,0,c
 17110  01536C  0EED               	movlw	-19
 17111  01536E  32E3               	rrcf	plusw1,f,c
 17112  015370  0EEC               	movlw	-20
 17113  015372  32E3               	rrcf	plusw1,f,c
 17114  015374  0EEB               	movlw	-21
 17115  015376  32E3               	rrcf	plusw1,f,c
 17116  015378  0EEA               	movlw	-22
 17117  01537A  32E3               	rrcf	plusw1,f,c
 17118  01537C  0EE9               	movlw	-23
 17119  01537E  32E3               	rrcf	plusw1,f,c
 17120  015380  0EE8               	movlw	-24
 17121  015382  32E3               	rrcf	plusw1,f,c
 17122  015384  0EE7               	movlw	-25
 17123  015386  32E3               	rrcf	plusw1,f,c
 17124  015388  0EE6               	movlw	-26
 17125  01538A  32E3               	rrcf	plusw1,f,c
 17126                           
 17127                           ;stkvar	_counter @ sp[(-10)+9]
 17128  01538C  0EFF               	movlw	-1
 17129  01538E  50E3               	movf	plusw1,w,c
 17130  015390  6E32               	movwf	btemp^0,c
 17131  015392  0E01               	movlw	1
 17132  015394  5E32               	subwf	btemp^0,f,c
 17133  015396  0EFF               	movlw	-1
 17134  015398  0060  F0CB  FFE3   	movff	btemp,plusw1
 17135  01539E  A4D8               	btfss	status,2,c
 17136  0153A0  D791               	goto	u5430
 17137  0153A2                     u5450:
 17138                           
 17139                           ;stkvar	_sign @ sp[(-10)+8]
 17140  0153A2  0EFE               	movlw	-2
 17141  0153A4  50E3               	movf	plusw1,w,c
 17142  0153A6  B4D8               	btfsc	status,2,c
 17143  0153A8  D025               	goto	u5470
 17144                           
 17145                           ;stkvar	_quotient @ sp[(-10)+0]
 17146                           ;stkvar	_quotient @ sp[(-10)+0]
 17147  0153AA  0EF6               	movlw	-10
 17148  0153AC  6CE3               	negf	plusw1,c
 17149  0153AE  0EF7               	movlw	-9
 17150  0153B0  1EE3               	comf	plusw1,f,c
 17151  0153B2  0EF8               	movlw	-8
 17152  0153B4  1EE3               	comf	plusw1,f,c
 17153  0153B6  0EF9               	movlw	-7
 17154  0153B8  1EE3               	comf	plusw1,f,c
 17155  0153BA  0EFA               	movlw	-6
 17156  0153BC  1EE3               	comf	plusw1,f,c
 17157  0153BE  0EFB               	movlw	-5
 17158  0153C0  1EE3               	comf	plusw1,f,c
 17159  0153C2  0EFC               	movlw	-4
 17160  0153C4  1EE3               	comf	plusw1,f,c
 17161  0153C6  0EFD               	movlw	-3
 17162  0153C8  1EE3               	comf	plusw1,f,c
 17163  0153CA  E314               	bnc	u5470
 17164  0153CC  0EF7               	movlw	-9
 17165  0153CE  2AE3               	incf	plusw1,f,c
 17166  0153D0  E311               	bnc	u5470
 17167  0153D2  0EF8               	movlw	-8
 17168  0153D4  2AE3               	incf	plusw1,f,c
 17169  0153D6  E30E               	bnc	u5470
 17170  0153D8  0EF9               	movlw	-7
 17171  0153DA  2AE3               	incf	plusw1,f,c
 17172  0153DC  E30B               	bnc	u5470
 17173  0153DE  0EFA               	movlw	-6
 17174  0153E0  2AE3               	incf	plusw1,f,c
 17175  0153E2  E308               	bnc	u5470
 17176  0153E4  0EFB               	movlw	-5
 17177  0153E6  2AE3               	incf	plusw1,f,c
 17178  0153E8  E305               	bnc	u5470
 17179  0153EA  0EFC               	movlw	-4
 17180  0153EC  2AE3               	incf	plusw1,f,c
 17181  0153EE  E302               	bnc	u5470
 17182  0153F0  0EFD               	movlw	-3
 17183  0153F2  2AE3               	incf	plusw1,f,c
 17184  0153F4                     u5470:
 17185                           
 17186                           ;stkvar	_quotient @ sp[(-10)+0]
 17187  0153F4  0EF6               	movlw	246
 17188  0153F6  24E1               	addwf	fsr1l,w,c
 17189  0153F8  6ED9               	movwf	fsr2l,c
 17190  0153FA  0EFF               	movlw	255
 17191  0153FC  20E2               	addwfc	fsr1h,w,c
 17192  0153FE  6EDA               	movwf	fsr2h,c
 17193                           
 17194                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17195  015400  0E08               	movlw	8
 17196  015402  6E32               	movwf	btemp^0,c
 17197  015404  0EEE               	movlw	-18
 17198  015406                     us548999:
 17199  015406  006F FF7B FFE3     	movff	postinc2,plusw1
 17200  01540C  28E8               	incf	wreg,w,c
 17201  01540E  2E32               	decfsz	btemp^0,f,c
 17202  015410  D7FA               	bra	us548999
 17203                           
 17204                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17205  015412  0EF6               	movlw	246
 17206  015414  26E1               	addwf	fsr1l,f,c
 17207  015416  0EFF               	movlw	255
 17208  015418  22E2               	addwfc	fsr1h,f,c
 17209  01541A  0012               	return		;funcret
 17210  01541C                     __end_of___aodiv:
 17211                           	opt callstack 0
 17212                           
 17213 ;; *************** function _ctoa *****************
 17214 ;; Defined at:
 17215 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17216 ;; Parameters:    Size  Location     Type
 17217 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17218 ;;		 -> f(6), NULL(0), 
 17219 ;;  c               1  [STACK] unsigned char 
 17220 ;; Auto vars:     Size  Location     Type
 17221 ;;  w               2  [STACK] int 
 17222 ;;  l               2    0        int 
 17223 ;; Return value:  Size  Location     Type
 17224 ;;                  2  [STACK] int 
 17225 ;; Registers used:
 17226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17227 ;; Tracked objects:
 17228 ;;		On entry : 0/5
 17229 ;;		On exit  : 0/0
 17230 ;;		Unchanged: 0/0
 17231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17236 ;;Total ram usage:        0 bytes
 17237 ;; Hardware stack levels used:    1
 17238 ;; Hardware stack levels required when called:   11
 17239 ;; This function calls:
 17240 ;;		_pad
 17241 ;; This function is called by:
 17242 ;;		_vfpfcnvrt
 17243 ;; This function uses a reentrant model
 17244 ;;
 17245                           
 17246                           	psect	text63
 17247  017834                     __ptext63:
 17248                           	opt callstack 0
 17249  017834                     _ctoa:
 17250                           	opt callstack 0
 17251                           
 17252                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17253  017834  52E6               	movf	postinc1,f,c
 17254  017836  52E6               	movf	postinc1,f,c
 17255                           
 17256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17257                           
 17258                           ;incstack = 0
 17259  017838  501B               	movf	_width^0,w,c
 17260  01783A  101C               	iorwf	(_width+1)^0,w,c
 17261  01783C  A4D8               	btfss	status,2,c
 17262  01783E  D009               	goto	l9539
 17263                           
 17264                           ;stkvar	_w @ sp[(-2)+0]
 17265  017840  0EFE               	movlw	-2
 17266  017842  0060  F06F  FFE3   	movff	_width,plusw1
 17267  017848  0EFF               	movlw	-1
 17268  01784A  0060  F073  FFE3   	movff	_width+1,plusw1
 17269  017850  D016               	goto	l9541
 17270  017852                     l9539:
 17271  017852  0EFF               	movlw	255
 17272  017854  6E3C               	movwf	(btemp+10)^0,c
 17273  017856  0EFF               	movlw	255
 17274  017858  6E3D               	movwf	(btemp+11)^0,c
 17275  01785A  0060  F06C  F03A   	movff	_width,btemp+8
 17276  017860  0060  F070  F03B   	movff	_width+1,btemp+9
 17277  017866  503C               	movf	(btemp+10)^0,w,c
 17278  017868  263A               	addwf	(btemp+8)^0,f,c
 17279  01786A  503D               	movf	(btemp+11)^0,w,c
 17280  01786C  223B               	addwfc	(btemp+9)^0,f,c
 17281                           
 17282                           ;stkvar	_w @ sp[(-2)+0]
 17283  01786E  0EFE               	movlw	-2
 17284  017870  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17285  017876  0EFF               	movlw	-1
 17286  017878  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17287  01787E                     l9541:
 17288                           
 17289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17290                           ;stkvar	_c @ sp[(-2)+-3]
 17291  01787E  0EFB               	movlw	-5
 17292  017880  006F FF8C  F17C    	movff	plusw1,_dbuf
 17293                           
 17294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17295  017886  0101               	movlb	1	; () banked
 17296  017888  6B7D               	clrf	(_dbuf+1)& (0+255),b
 17297                           
 17298                           ; BSR set to: 1
 17299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17300                           ;stkvar	_w @ sp[(-2)+0]
 17301  01788A  0EFE               	movlw	-2
 17302  01788C  006F FF8F FFE6     	movff	plusw1,postinc1
 17303  017892  006F FF8F FFE6     	movff	plusw1,postinc1
 17304  017898  0E7C               	movlw	low _dbuf
 17305  01789A  6EE6               	movwf	postinc1,c
 17306  01789C  0E01               	movlw	high _dbuf
 17307  01789E  6EE6               	movwf	postinc1,c
 17308                           
 17309                           ;stkvar	_fp @ sp[(-6)+-2]
 17310  0178A0  0EF8               	movlw	-8
 17311  0178A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17312  0178A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17313  0178AE  EC77  F0B5         	call	_pad	;wreg free
 17314                           
 17315                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 17316  0178B2  0EFB               	movlw	251
 17317  0178B4  26E1               	addwf	fsr1l,f,c
 17318  0178B6  0EFF               	movlw	255
 17319  0178B8  22E2               	addwfc	fsr1h,f,c
 17320  0178BA  0012               	return		;funcret
 17321  0178BC                     __end_of_ctoa:
 17322                           	opt callstack 0
 17323                           
 17324 ;; *************** function _pad *****************
 17325 ;; Defined at:
 17326 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17327 ;; Parameters:    Size  Location     Type
 17328 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17329 ;;		 -> f(6), NULL(0), 
 17330 ;;  buf             2  [STACK] PTR unsigned char 
 17331 ;;		 -> dbuf(80), 
 17332 ;;  p               2  [STACK] int 
 17333 ;; Auto vars:     Size  Location     Type
 17334 ;;  w               2  [STACK] int 
 17335 ;;  i               2  [STACK] int 
 17336 ;; Return value:  Size  Location     Type
 17337 ;;                  2  [STACK] int 
 17338 ;; Registers used:
 17339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17340 ;; Tracked objects:
 17341 ;;		On entry : 0/1
 17342 ;;		On exit  : 0/0
 17343 ;;		Unchanged: 0/0
 17344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17349 ;;Total ram usage:        0 bytes
 17350 ;; Hardware stack levels used:    1
 17351 ;; Hardware stack levels required when called:   10
 17352 ;; This function calls:
 17353 ;;		_fputc
 17354 ;;		_fputs
 17355 ;;		_strlen
 17356 ;; This function is called by:
 17357 ;;		_ctoa
 17358 ;;		_dtoa
 17359 ;;		_efgtoa
 17360 ;;		_xtoa
 17361 ;; This function uses a reentrant model
 17362 ;;
 17363                           
 17364                           	psect	text64
 17365  016AEE                     __ptext64:
 17366                           	opt callstack 0
 17367  016AEE                     _pad:
 17368                           	opt callstack 0
 17369                           
 17370                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17371  016AEE  52E6               	movf	postinc1,f,c
 17372  016AF0  52E6               	movf	postinc1,f,c
 17373  016AF2  52E6               	movf	postinc1,f,c
 17374  016AF4  52E6               	movf	postinc1,f,c
 17375                           
 17376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17377                           
 17378                           ;incstack = 0
 17379  016AF6  A01F               	btfss	_flags^0,0,c
 17380  016AF8  D010               	goto	l9513
 17381                           
 17382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17383                           ;stkvar	_fp @ sp[(-4)+-2]
 17384  016AFA  0EFA               	movlw	-6
 17385  016AFC  006F FF8F FFE6     	movff	plusw1,postinc1
 17386  016B02  006F FF8F FFE6     	movff	plusw1,postinc1
 17387                           
 17388                           ;stkvar	_buf @ sp[(-6)+-4]
 17389  016B08  0EF6               	movlw	-10
 17390  016B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 17391  016B10  006F FF8F FFE6     	movff	plusw1,postinc1
 17392  016B16  ECF4  F0BA         	call	_fputs	;wreg free
 17393  016B1A                     l9513:
 17394                           
 17395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17396                           ;stkvar	_p @ sp[(-4)+-6]
 17397  016B1A  0EF7               	movlw	-9
 17398  016B1C  BEE3               	btfsc	plusw1,7,c
 17399  016B1E  D011               	goto	l9517
 17400                           
 17401                           ;stkvar	_p @ sp[(-4)+-6]
 17402                           ;stkvar	_w @ sp[(-4)+0]
 17403  016B20  0EF6               	movlw	-10
 17404  016B22  006F FF8C  F032    	movff	plusw1,btemp
 17405  016B28  0EFC               	movlw	-4
 17406  016B2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17407  016B30  0EF7               	movlw	-9
 17408  016B32  006F FF8C  F032    	movff	plusw1,btemp
 17409  016B38  0EFD               	movlw	-3
 17410  016B3A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17411  016B40  D004               	goto	l1844
 17412  016B42                     l9517:
 17413                           
 17414                           ;stkvar	_w @ sp[(-4)+0]
 17415  016B42  0EFC               	movlw	-4
 17416  016B44  6AE3               	clrf	plusw1,c
 17417  016B46  0EFD               	movlw	-3
 17418  016B48  6AE3               	clrf	plusw1,c
 17419  016B4A                     l1844:
 17420                           
 17421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17422                           ;stkvar	_i @ sp[(-4)+2]
 17423  016B4A  0EFE               	movlw	-2
 17424  016B4C  6AE3               	clrf	plusw1,c
 17425  016B4E  0EFF               	movlw	-1
 17426  016B50  6AE3               	clrf	plusw1,c
 17427                           
 17428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17429  016B52  D01E               	goto	l9523
 17430  016B54                     l9519:
 17431                           
 17432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 17433                           ;stkvar	_fp @ sp[(-4)+-2]
 17434  016B54  0EFA               	movlw	-6
 17435  016B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17436  016B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17437  016B62  0E20               	movlw	32
 17438  016B64  6EE6               	movwf	postinc1,c
 17439  016B66  0E00               	movlw	0
 17440  016B68  6EE6               	movwf	postinc1,c
 17441  016B6A  EC59  F0B4         	call	_fputc	;wreg free
 17442                           
 17443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17444                           ;stkvar	_i @ sp[(-4)+2]
 17445  016B6E  0EFE               	movlw	-2
 17446  016B70  50E3               	movf	plusw1,w,c
 17447  016B72  0F01               	addlw	1
 17448  016B74  6E32               	movwf	btemp^0,c
 17449  016B76  0EFE               	movlw	-2
 17450  016B78  0060  F0CB  FFE3   	movff	btemp,plusw1
 17451  016B7E  6A32               	clrf	btemp^0,c
 17452  016B80  0EFF               	movlw	-1
 17453  016B82  50E3               	movf	plusw1,w,c
 17454  016B84  2032               	addwfc	btemp^0,w,c
 17455  016B86  6E32               	movwf	btemp^0,c
 17456  016B88  0EFF               	movlw	-1
 17457  016B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17458  016B90                     l9523:
 17459                           
 17460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17461                           ;stkvar	_w @ sp[(-4)+0]
 17462                           ;stkvar	_i @ sp[(-4)+2]
 17463  016B90  50E1               	movf	fsr1l,w,c
 17464  016B92  0FFE               	addlw	-2
 17465  016B94  6ED9               	movwf	fsr2l,c
 17466  016B96  50E2               	movf	fsr1h,w,c
 17467  016B98  6EDA               	movwf	fsr2h,c
 17468  016B9A  0EFF               	movlw	255
 17469  016B9C  22DA               	addwfc	fsr2h,f,c
 17470  016B9E  0EFC               	movlw	-4
 17471  016BA0  50E3               	movf	plusw1,w,c
 17472  016BA2  5CDE               	subwf	postinc2,w,c
 17473  016BA4  50DE               	movf	postinc2,w,c
 17474  016BA6  0A80               	xorlw	128
 17475  016BA8  6E32               	movwf	btemp^0,c
 17476  016BAA  0EFD               	movlw	-3
 17477  016BAC  50E3               	movf	plusw1,w,c
 17478  016BAE  0A80               	xorlw	128
 17479  016BB0  5832               	subwfb	btemp^0,w,c
 17480  016BB2  A0D8               	btfss	status,0,c
 17481  016BB4  D7CF               	goto	l9519
 17482                           
 17483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 17484  016BB6  B01F               	btfsc	_flags^0,0,c
 17485  016BB8  D010               	goto	l9527
 17486                           
 17487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 17488                           ;stkvar	_fp @ sp[(-4)+-2]
 17489  016BBA  0EFA               	movlw	-6
 17490  016BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17491  016BC2  006F FF8F FFE6     	movff	plusw1,postinc1
 17492                           
 17493                           ;stkvar	_buf @ sp[(-6)+-4]
 17494  016BC8  0EF6               	movlw	-10
 17495  016BCA  006F FF8F FFE6     	movff	plusw1,postinc1
 17496  016BD0  006F FF8F FFE6     	movff	plusw1,postinc1
 17497  016BD6  ECF4  F0BA         	call	_fputs	;wreg free
 17498  016BDA                     l9527:
 17499                           
 17500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 17501                           ;stkvar	_w @ sp[(-4)+0]
 17502                           ;stkvar	_buf @ sp[(-4)+-4]
 17503  016BDA  0EF8               	movlw	-8
 17504  016BDC  006F FF8F FFE6     	movff	plusw1,postinc1
 17505  016BE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17506  016BE8  ECA3  F0BA         	call	_strlen	;wreg free
 17507  016BEC  0EFC               	movlw	-4
 17508  016BEE  50E3               	movf	plusw1,w,c
 17509  016BF0  2632               	addwf	btemp^0,f,c
 17510  016BF2  0EFD               	movlw	-3
 17511  016BF4  50E3               	movf	plusw1,w,c
 17512  016BF6  2233               	addwfc	(btemp+1)^0,f,c
 17513                           
 17514                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 17515  016BF8  0EF6               	movlw	246
 17516  016BFA  26E1               	addwf	fsr1l,f,c
 17517  016BFC  0EFF               	movlw	255
 17518  016BFE  22E2               	addwfc	fsr1h,f,c
 17519  016C00  0012               	return		;funcret
 17520  016C02                     __end_of_pad:
 17521                           	opt callstack 0
 17522                           
 17523 ;; *************** function _strlen *****************
 17524 ;; Defined at:
 17525 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 17526 ;; Parameters:    Size  Location     Type
 17527 ;;  s               2  [STACK] PTR const unsigned char 
 17528 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17529 ;;		 -> STR_25(9), STR_24(12), D.lcd(216), D(218), 
 17530 ;;		 -> T(144), STR_7(6), STR_3(6), V(187), 
 17531 ;; Auto vars:     Size  Location     Type
 17532 ;;  a               2  [STACK] PTR const unsigned char 
 17533 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17534 ;;		 -> STR_25(9), STR_24(12), D.lcd(216), D(218), 
 17535 ;;		 -> T(144), STR_7(6), STR_3(6), V(187), 
 17536 ;; Return value:  Size  Location     Type
 17537 ;;                  2  [STACK] unsigned int 
 17538 ;; Registers used:
 17539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 17540 ;; Tracked objects:
 17541 ;;		On entry : 0/0
 17542 ;;		On exit  : 0/0
 17543 ;;		Unchanged: 0/0
 17544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17549 ;;Total ram usage:        0 bytes
 17550 ;; Hardware stack levels used:    1
 17551 ;; Hardware stack levels required when called:    6
 17552 ;; This function calls:
 17553 ;;		Nothing
 17554 ;; This function is called by:
 17555 ;;		_eaDogM_WriteString
 17556 ;;		_pad
 17557 ;;		_stoa
 17558 ;; This function uses a reentrant model
 17559 ;;
 17560                           
 17561                           	psect	text65
 17562  017546                     __ptext65:
 17563                           	opt callstack 0
 17564  017546                     _strlen:
 17565                           	opt callstack 0
 17566                           
 17567                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17568  017546  52E6               	movf	postinc1,f,c
 17569  017548  52E6               	movf	postinc1,f,c
 17570                           
 17571                           ;stkvar	_s @ sp[(-2)+-2]
 17572                           
 17573                           ;incstack = 0
 17574  01754A  0EFC               	movlw	-4
 17575  01754C  006F FF8C  F03C    	movff	plusw1,btemp+10
 17576  017552  0EFD               	movlw	-3
 17577  017554  006F FF8C  F03D    	movff	plusw1,btemp+11
 17578                           
 17579                           ;stkvar	_a @ sp[(-2)+0]
 17580  01755A  0EFF               	movlw	-1
 17581  01755C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17582  017562  0EFE               	movlw	-2
 17583  017564  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17584  01756A  D011               	goto	l9495
 17585  01756C                     l9493:
 17586                           
 17587                           ;stkvar	_s @ sp[(-2)+-2]
 17588  01756C  0EFC               	movlw	-4
 17589  01756E  50E3               	movf	plusw1,w,c
 17590  017570  0F01               	addlw	1
 17591  017572  6E32               	movwf	btemp^0,c
 17592  017574  0EFC               	movlw	-4
 17593  017576  0060  F0CB  FFE3   	movff	btemp,plusw1
 17594  01757C  6A32               	clrf	btemp^0,c
 17595  01757E  0EFD               	movlw	-3
 17596  017580  50E3               	movf	plusw1,w,c
 17597  017582  2032               	addwfc	btemp^0,w,c
 17598  017584  6E32               	movwf	btemp^0,c
 17599  017586  0EFD               	movlw	-3
 17600  017588  0060  F0CB  FFE3   	movff	btemp,plusw1
 17601  01758E                     l9495:
 17602                           
 17603                           ;stkvar	_s @ sp[(-2)+-2]
 17604  01758E  0EFC               	movlw	-4
 17605  017590  006F FF8F FFF6     	movff	plusw1,tblptrl
 17606  017596  0EFD               	movlw	-3
 17607  017598  006F FF8F FFF7     	movff	plusw1,tblptrh
 17608  01759E  0E00               	movlw	low (__mediumconst shr (0+16))
 17609  0175A0  6EF8               	movwf	tblptru,c
 17610  0175A2  0E1F               	movlw	(high __ramtop+-1)
 17611  0175A4  64F7               	cpfsgt	tblptrh,c
 17612  0175A6  D003               	bra	u8987
 17613  0175A8  0008               	tblrd		*
 17614  0175AA  50F5               	movf	tablat,w,c
 17615  0175AC  D007               	bra	u8980
 17616  0175AE                     u8987:
 17617  0175AE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17618  0175B4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17619  0175BA  50EF               	movf	indf0,w,c
 17620  0175BC                     u8980:
 17621  0175BC  0900               	iorlw	0
 17622  0175BE  A4D8               	btfss	status,2,c
 17623  0175C0  D7D5               	goto	l9493
 17624                           
 17625                           ;stkvar	_a @ sp[(-2)+0]
 17626                           ;stkvar	_s @ sp[(-2)+-2]
 17627  0175C2  0EFC               	movlw	-4
 17628  0175C4  006F FF8C  F032    	movff	plusw1,btemp
 17629  0175CA  0EFD               	movlw	-3
 17630  0175CC  006F FF8C  F033    	movff	plusw1,btemp+1
 17631  0175D2  0EFE               	movlw	-2
 17632  0175D4  50E3               	movf	plusw1,w,c
 17633  0175D6  5E32               	subwf	btemp^0,f,c
 17634  0175D8  0EFF               	movlw	-1
 17635  0175DA  50E3               	movf	plusw1,w,c
 17636  0175DC  5A33               	subwfb	(btemp+1)^0,f,c
 17637                           
 17638                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 17639  0175DE  52E5               	movf	postdec1,f,c
 17640  0175E0  52E5               	movf	postdec1,f,c
 17641  0175E2  52E5               	movf	postdec1,f,c
 17642  0175E4  52E5               	movf	postdec1,f,c
 17643  0175E6  0012               	return		;funcret
 17644  0175E8                     __end_of_strlen:
 17645                           	opt callstack 0
 17646                           
 17647 ;; *************** function _fputs *****************
 17648 ;; Defined at:
 17649 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 17650 ;; Parameters:    Size  Location     Type
 17651 ;;  s               2  [STACK] PTR const unsigned char 
 17652 ;;		 -> dbuf(80), 
 17653 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17654 ;;		 -> f(6), NULL(0), 
 17655 ;; Auto vars:     Size  Location     Type
 17656 ;;  i               2  [STACK] int 
 17657 ;;  c               1  [STACK] unsigned char 
 17658 ;; Return value:  Size  Location     Type
 17659 ;;                  2  [STACK] int 
 17660 ;; Registers used:
 17661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17662 ;; Tracked objects:
 17663 ;;		On entry : 0/1
 17664 ;;		On exit  : 0/0
 17665 ;;		Unchanged: 0/0
 17666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17671 ;;Total ram usage:        0 bytes
 17672 ;; Hardware stack levels used:    1
 17673 ;; Hardware stack levels required when called:    9
 17674 ;; This function calls:
 17675 ;;		_fputc
 17676 ;; This function is called by:
 17677 ;;		_pad
 17678 ;; This function uses a reentrant model
 17679 ;;
 17680                           
 17681                           	psect	text66
 17682  0175E8                     __ptext66:
 17683                           	opt callstack 0
 17684  0175E8                     _fputs:
 17685                           	opt callstack 0
 17686                           
 17687                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17688  0175E8  52E6               	movf	postinc1,f,c
 17689  0175EA  52E6               	movf	postinc1,f,c
 17690  0175EC  52E6               	movf	postinc1,f,c
 17691                           
 17692                           ;stkvar	_i @ sp[(-3)+0]
 17693                           
 17694                           ;incstack = 0
 17695  0175EE  0EFD               	movlw	-3
 17696  0175F0  6AE3               	clrf	plusw1,c
 17697  0175F2  0EFE               	movlw	-2
 17698  0175F4  6AE3               	clrf	plusw1,c
 17699  0175F6  D01F               	goto	l9507
 17700  0175F8                     l9503:
 17701                           
 17702                           ;stkvar	_fp @ sp[(-3)+-4]
 17703  0175F8  0EF9               	movlw	-7
 17704  0175FA  006F FF8F FFE6     	movff	plusw1,postinc1
 17705  017600  006F FF8F FFE6     	movff	plusw1,postinc1
 17706                           
 17707                           ;stkvar	_c @ sp[(-5)+2]
 17708  017606  0EFD               	movlw	-3
 17709  017608  50E3               	movf	plusw1,w,c
 17710  01760A  6EE6               	movwf	postinc1,c
 17711  01760C  0E00               	movlw	0
 17712  01760E  6EE6               	movwf	postinc1,c
 17713  017610  EC59  F0B4         	call	_fputc	;wreg free
 17714                           
 17715                           ;stkvar	_i @ sp[(-3)+0]
 17716  017614  0EFD               	movlw	-3
 17717  017616  50E3               	movf	plusw1,w,c
 17718  017618  0F01               	addlw	1
 17719  01761A  6E32               	movwf	btemp^0,c
 17720  01761C  0EFD               	movlw	-3
 17721  01761E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17722  017624  6A32               	clrf	btemp^0,c
 17723  017626  0EFE               	movlw	-2
 17724  017628  50E3               	movf	plusw1,w,c
 17725  01762A  2032               	addwfc	btemp^0,w,c
 17726  01762C  6E32               	movwf	btemp^0,c
 17727  01762E  0EFE               	movlw	-2
 17728  017630  0060  F0CB  FFE3   	movff	btemp,plusw1
 17729  017636                     l9507:
 17730                           
 17731                           ;stkvar	_i @ sp[(-3)+0]
 17732  017636  0EFD               	movlw	-3
 17733  017638  006F FF8C  F03C    	movff	plusw1,btemp+10
 17734  01763E  0EFE               	movlw	-2
 17735  017640  006F FF8C  F03D    	movff	plusw1,btemp+11
 17736                           
 17737                           ;stkvar	_s @ sp[(-3)+-2]
 17738  017646  0EFB               	movlw	-5
 17739  017648  006F FF8C  F03A    	movff	plusw1,btemp+8
 17740  01764E  0EFC               	movlw	-4
 17741  017650  006F FF8C  F03B    	movff	plusw1,btemp+9
 17742  017656  503C               	movf	(btemp+10)^0,w,c
 17743  017658  243A               	addwf	(btemp+8)^0,w,c
 17744  01765A  6ED9               	movwf	fsr2l,c
 17745  01765C  503D               	movf	(btemp+11)^0,w,c
 17746  01765E  203B               	addwfc	(btemp+9)^0,w,c
 17747  017660  6EDA               	movwf	fsr2h,c
 17748  017662  50DF               	movf	indf2,w,c
 17749  017664  6E3D               	movwf	(btemp+11)^0,c
 17750                           
 17751                           ;stkvar	_c @ sp[(-3)+2]
 17752  017666  0EFF               	movlw	-1
 17753  017668  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17754  01766E  0EFF               	movlw	-1
 17755  017670  50E3               	movf	plusw1,w,c
 17756  017672  A4D8               	btfss	status,2,c
 17757  017674  D7C1               	goto	l9503
 17758                           
 17759                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17760  017676  0EF9               	movlw	249
 17761  017678  26E1               	addwf	fsr1l,f,c
 17762  01767A  0EFF               	movlw	255
 17763  01767C  22E2               	addwfc	fsr1h,f,c
 17764  01767E  0012               	return		;funcret
 17765  017680                     __end_of_fputs:
 17766                           	opt callstack 0
 17767                           
 17768 ;; *************** function _fputc *****************
 17769 ;; Defined at:
 17770 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 17771 ;; Parameters:    Size  Location     Type
 17772 ;;  c               2  [STACK] int 
 17773 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17774 ;;		 -> f(6), NULL(0), 
 17775 ;; Auto vars:     Size  Location     Type
 17776 ;;		None
 17777 ;; Return value:  Size  Location     Type
 17778 ;;                  2  [STACK] int 
 17779 ;; Registers used:
 17780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17781 ;; Tracked objects:
 17782 ;;		On entry : 0/5
 17783 ;;		On exit  : 0/0
 17784 ;;		Unchanged: 0/0
 17785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17790 ;;Total ram usage:        0 bytes
 17791 ;; Hardware stack levels used:    1
 17792 ;; Hardware stack levels required when called:    8
 17793 ;; This function calls:
 17794 ;;		_putch
 17795 ;; This function is called by:
 17796 ;;		_pad
 17797 ;;		_stoa
 17798 ;;		_vfpfcnvrt
 17799 ;;		_fputs
 17800 ;; This function uses a reentrant model
 17801 ;;
 17802                           
 17803                           	psect	text67
 17804  0168B2                     __ptext67:
 17805                           	opt callstack 0
 17806  0168B2                     _fputc:
 17807                           	opt callstack 13
 17808                           
 17809                           ;stkvar	_fp @ sp[(0)+-4]
 17810                           
 17811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17812                           ;incstack = 0
 17813  0168B2  0EFC               	movlw	-4
 17814  0168B4  006F FF8C  F032    	movff	plusw1,btemp
 17815  0168BA  0EFD               	movlw	-3
 17816  0168BC  50E3               	movf	plusw1,w,c
 17817  0168BE  1032               	iorwf	btemp^0,w,c
 17818  0168C0  B4D8               	btfsc	status,2,c
 17819  0168C2  D009               	goto	u8950
 17820                           
 17821                           ;stkvar	_fp @ sp[(0)+-4]
 17822  0168C4  0EFC               	movlw	-4
 17823  0168C6  006F FF8C  F032    	movff	plusw1,btemp
 17824  0168CC  0EFD               	movlw	-3
 17825  0168CE  50E3               	movf	plusw1,w,c
 17826  0168D0  1032               	iorwf	btemp^0,w,c
 17827  0168D2  A4D8               	btfss	status,2,c
 17828  0168D4  D006               	goto	l9481
 17829  0168D6                     u8950:
 17830                           
 17831                           ;stkvar	_c @ sp[(0)+-2]
 17832  0168D6  0EFE               	movlw	-2
 17833  0168D8  50E3               	movf	plusw1,w,c
 17834  0168DA  6EE6               	movwf	postinc1,c
 17835  0168DC  EC22  F0C5         	call	_putch	;wreg free
 17836  0168E0  D075               	goto	l2862
 17837  0168E2                     l9481:
 17838                           
 17839                           ;stkvar	_fp @ sp[(0)+-4]
 17840  0168E2  0EFC               	movlw	-4
 17841  0168E4  006F FF8C  F03C    	movff	plusw1,btemp+10
 17842  0168EA  0EFD               	movlw	-3
 17843  0168EC  006F FF8C  F03D    	movff	plusw1,btemp+11
 17844  0168F2  0E04               	movlw	4
 17845  0168F4  243C               	addwf	(btemp+10)^0,w,c
 17846  0168F6  6ED9               	movwf	fsr2l,c
 17847  0168F8  0E00               	movlw	0
 17848  0168FA  203D               	addwfc	(btemp+11)^0,w,c
 17849  0168FC  6EDA               	movwf	fsr2h,c
 17850  0168FE  50DE               	movf	postinc2,w,c
 17851  016900  10DE               	iorwf	postinc2,w,c
 17852  016902  B4D8               	btfsc	status,2,c
 17853  016904  D026               	goto	u8970
 17854                           
 17855                           ;stkvar	_fp @ sp[(0)+-4]
 17856  016906  0EFC               	movlw	-4
 17857  016908  006F FF8C  F03C    	movff	plusw1,btemp+10
 17858  01690E  0EFD               	movlw	-3
 17859  016910  006F FF8C  F03D    	movff	plusw1,btemp+11
 17860  016916  0E04               	movlw	4
 17861  016918  243C               	addwf	(btemp+10)^0,w,c
 17862  01691A  6ED9               	movwf	fsr2l,c
 17863  01691C  0E00               	movlw	0
 17864  01691E  203D               	addwfc	(btemp+11)^0,w,c
 17865  016920  6EDA               	movwf	fsr2h,c
 17866                           
 17867                           ;stkvar	_fp @ sp[(0)+-4]
 17868  016922  0EFC               	movlw	-4
 17869  016924  006F FF8C  F03C    	movff	plusw1,btemp+10
 17870  01692A  0EFD               	movlw	-3
 17871  01692C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17872  016932  0E02               	movlw	2
 17873  016934  243C               	addwf	(btemp+10)^0,w,c
 17874  016936  6EE9               	movwf	fsr0l,c
 17875  016938  0E00               	movlw	0
 17876  01693A  203D               	addwfc	(btemp+11)^0,w,c
 17877  01693C  6EEA               	movwf	fsr0h,c
 17878  01693E  50DE               	movf	postinc2,w,c
 17879  016940  5CEE               	subwf	postinc0,w,c
 17880  016942  50EE               	movf	postinc0,w,c
 17881  016944  0A80               	xorlw	128
 17882  016946  6E32               	movwf	btemp^0,c
 17883  016948  50DE               	movf	postinc2,w,c
 17884  01694A  0A80               	xorlw	128
 17885  01694C  5832               	subwfb	btemp^0,w,c
 17886  01694E  B0D8               	btfsc	status,0,c
 17887  016950  D03D               	goto	l2862
 17888  016952                     u8970:
 17889                           
 17890                           ;stkvar	_c @ sp[(0)+-2]
 17891                           ;stkvar	_fp @ sp[(0)+-4]
 17892  016952  0EFC               	movlw	-4
 17893  016954  006F FF8C  F03C    	movff	plusw1,btemp+10
 17894  01695A  0EFD               	movlw	-3
 17895  01695C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17896  016962  0E02               	movlw	2
 17897  016964  243C               	addwf	(btemp+10)^0,w,c
 17898  016966  6ED9               	movwf	fsr2l,c
 17899  016968  0E00               	movlw	0
 17900  01696A  203D               	addwfc	(btemp+11)^0,w,c
 17901  01696C  6EDA               	movwf	fsr2h,c
 17902  01696E  006F FF78  F03C    	movff	postinc2,btemp+10
 17903  016974  006F FF74  F03D    	movff	postdec2,btemp+11
 17904                           
 17905                           ;stkvar	_fp @ sp[(0)+-4]
 17906  01697A  0EFC               	movlw	-4
 17907  01697C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17908  016982  0EFD               	movlw	-3
 17909  016984  006F FF8F FFDA     	movff	plusw1,fsr2h
 17910  01698A  006F FF78  F03A    	movff	postinc2,btemp+8
 17911  016990  006F FF74  F03B    	movff	postdec2,btemp+9
 17912  016996  503C               	movf	(btemp+10)^0,w,c
 17913  016998  243A               	addwf	(btemp+8)^0,w,c
 17914  01699A  6ED9               	movwf	fsr2l,c
 17915  01699C  503D               	movf	(btemp+11)^0,w,c
 17916  01699E  203B               	addwfc	(btemp+9)^0,w,c
 17917  0169A0  6EDA               	movwf	fsr2h,c
 17918  0169A2  0EFE               	movlw	-2
 17919  0169A4  006F FF8F FFDF     	movff	plusw1,indf2
 17920                           
 17921                           ;stkvar	_fp @ sp[(0)+-4]
 17922  0169AA  0EFC               	movlw	-4
 17923  0169AC  006F FF8C  F03C    	movff	plusw1,btemp+10
 17924  0169B2  0EFD               	movlw	-3
 17925  0169B4  006F FF8C  F03D    	movff	plusw1,btemp+11
 17926  0169BA  0E02               	movlw	2
 17927  0169BC  243C               	addwf	(btemp+10)^0,w,c
 17928  0169BE  6ED9               	movwf	fsr2l,c
 17929  0169C0  0E00               	movlw	0
 17930  0169C2  203D               	addwfc	(btemp+11)^0,w,c
 17931  0169C4  6EDA               	movwf	fsr2h,c
 17932  0169C6  2ADE               	incf	postinc2,f,c
 17933  0169C8  0E00               	movlw	0
 17934  0169CA  22DD               	addwfc	postdec2,f,c
 17935  0169CC                     l2862:
 17936                           
 17937                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17938  0169CC  52E5               	movf	postdec1,f,c
 17939  0169CE  52E5               	movf	postdec1,f,c
 17940  0169D0  52E5               	movf	postdec1,f,c
 17941  0169D2  52E5               	movf	postdec1,f,c
 17942  0169D4  0012               	return		;funcret
 17943  0169D6                     __end_of_fputc:
 17944                           	opt callstack 0
 17945                           
 17946 ;; *************** function _putch *****************
 17947 ;; Defined at:
 17948 ;;		line 155 in file "eadog.c"
 17949 ;; Parameters:    Size  Location     Type
 17950 ;;  c               1  [STACK] unsigned char 
 17951 ;; Auto vars:     Size  Location     Type
 17952 ;;		None
 17953 ;; Return value:  Size  Location     Type
 17954 ;;                  1  [STACK] void 
 17955 ;; Registers used:
 17956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17957 ;; Tracked objects:
 17958 ;;		On entry : 0/5
 17959 ;;		On exit  : 0/0
 17960 ;;		Unchanged: 0/0
 17961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17966 ;;Total ram usage:        0 bytes
 17967 ;; Hardware stack levels used:    1
 17968 ;; Hardware stack levels required when called:    7
 17969 ;; This function calls:
 17970 ;;		_ringBufS_put_dma
 17971 ;; This function is called by:
 17972 ;;		_fputc
 17973 ;; This function uses a reentrant model
 17974 ;;
 17975                           
 17976                           	psect	text68
 17977  018A44                     __ptext68:
 17978                           	opt callstack 0
 17979  018A44                     _putch:
 17980                           	opt callstack 13
 17981                           
 17982                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 17983                           ;stkvar	_c @ sp[(0)+-1]
 17984                           
 17985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17986                           ;incstack = 0
 17987  018A44  0EFF               	movlw	-1
 17988  018A46  50E3               	movf	plusw1,w,c
 17989  018A48  6EE6               	movwf	postinc1,c
 17990  018A4A  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 17991  018A50  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 17992  018A56  ECA7  F0B9         	call	_ringBufS_put_dma	;wreg free
 17993                           
 17994                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 17995  018A5A  52E5               	movf	postdec1,f,c
 17996  018A5C  0012               	return		;funcret
 17997  018A5E                     __end_of_putch:
 17998                           	opt callstack 0
 17999                           
 18000 ;; *************** function _ringBufS_put_dma *****************
 18001 ;; Defined at:
 18002 ;;		line 67 in file "ringbufs.c"
 18003 ;; Parameters:    Size  Location     Type
 18004 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18005 ;;		 -> ring_buf1(67), 
 18006 ;;  c               1  [STACK] const unsigned char 
 18007 ;; Auto vars:     Size  Location     Type
 18008 ;;		None
 18009 ;; Return value:  Size  Location     Type
 18010 ;;                  1  [STACK] void 
 18011 ;; Registers used:
 18012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18013 ;; Tracked objects:
 18014 ;;		On entry : 0/5
 18015 ;;		On exit  : 0/0
 18016 ;;		Unchanged: 0/0
 18017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18022 ;;Total ram usage:        0 bytes
 18023 ;; Hardware stack levels used:    1
 18024 ;; Hardware stack levels required when called:    6
 18025 ;; This function calls:
 18026 ;;		Nothing
 18027 ;; This function is called by:
 18028 ;;		_putch
 18029 ;; This function uses a reentrant model
 18030 ;;
 18031                           
 18032                           	psect	text69
 18033  01734E                     __ptext69:
 18034                           	opt callstack 0
 18035  01734E                     _ringBufS_put_dma:
 18036                           	opt callstack 13
 18037                           
 18038                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18039                           ;stkvar	__this @ sp[(0)+-2]
 18040                           
 18041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18042                           ;incstack = 0
 18043  01734E  0EFE               	movlw	-2
 18044  017350  006F FF8C  F03C    	movff	plusw1,btemp+10
 18045  017356  0EFF               	movlw	-1
 18046  017358  006F FF8C  F03D    	movff	plusw1,btemp+11
 18047  01735E  0E42               	movlw	66
 18048  017360  243C               	addwf	(btemp+10)^0,w,c
 18049  017362  6ED9               	movwf	fsr2l,c
 18050  017364  0E00               	movlw	0
 18051  017366  203D               	addwfc	(btemp+11)^0,w,c
 18052  017368  6EDA               	movwf	fsr2h,c
 18053  01736A  0E40               	movlw	64
 18054  01736C  60DF               	cpfslt	indf2,c
 18055  01736E  D040               	goto	l1481
 18056                           
 18057                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18058                           ;stkvar	_c @ sp[(0)+-3]
 18059                           ;stkvar	__this @ sp[(0)+-2]
 18060  017370  0EFE               	movlw	-2
 18061  017372  006F FF8C  F03C    	movff	plusw1,btemp+10
 18062  017378  0EFF               	movlw	-1
 18063  01737A  006F FF8C  F03D    	movff	plusw1,btemp+11
 18064  017380  0E40               	movlw	64
 18065  017382  243C               	addwf	(btemp+10)^0,w,c
 18066  017384  6ED9               	movwf	fsr2l,c
 18067  017386  0E00               	movlw	0
 18068  017388  203D               	addwfc	(btemp+11)^0,w,c
 18069  01738A  6EDA               	movwf	fsr2h,c
 18070  01738C  50DF               	movf	indf2,w,c
 18071  01738E  6E3D               	movwf	(btemp+11)^0,c
 18072                           
 18073                           ;stkvar	__this @ sp[(0)+-2]
 18074  017390  0EFE               	movlw	-2
 18075  017392  006F FF8C  F03A    	movff	plusw1,btemp+8
 18076  017398  0EFF               	movlw	-1
 18077  01739A  006F FF8C  F03B    	movff	plusw1,btemp+9
 18078  0173A0  503D               	movf	(btemp+11)^0,w,c
 18079  0173A2  243A               	addwf	(btemp+8)^0,w,c
 18080  0173A4  6ED9               	movwf	fsr2l,c
 18081  0173A6  0E00               	movlw	0
 18082  0173A8  203B               	addwfc	(btemp+9)^0,w,c
 18083  0173AA  6EDA               	movwf	fsr2h,c
 18084  0173AC  0EFD               	movlw	-3
 18085  0173AE  006F FF8F FFDF     	movff	plusw1,indf2
 18086                           
 18087                           ;ringbufs.c: 71:   ++_this->head;
 18088                           ;stkvar	__this @ sp[(0)+-2]
 18089  0173B4  0EFE               	movlw	-2
 18090  0173B6  006F FF8C  F03C    	movff	plusw1,btemp+10
 18091  0173BC  0EFF               	movlw	-1
 18092  0173BE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18093  0173C4  0E40               	movlw	64
 18094  0173C6  243C               	addwf	(btemp+10)^0,w,c
 18095  0173C8  6ED9               	movwf	fsr2l,c
 18096  0173CA  0E00               	movlw	0
 18097  0173CC  203D               	addwfc	(btemp+11)^0,w,c
 18098  0173CE  6EDA               	movwf	fsr2h,c
 18099  0173D0  2ADF               	incf	indf2,f,c
 18100                           
 18101                           ;ringbufs.c: 72:   ++_this->count;
 18102                           ;stkvar	__this @ sp[(0)+-2]
 18103  0173D2  0EFE               	movlw	-2
 18104  0173D4  006F FF8C  F03C    	movff	plusw1,btemp+10
 18105  0173DA  0EFF               	movlw	-1
 18106  0173DC  006F FF8C  F03D    	movff	plusw1,btemp+11
 18107  0173E2  0E42               	movlw	66
 18108  0173E4  243C               	addwf	(btemp+10)^0,w,c
 18109  0173E6  6ED9               	movwf	fsr2l,c
 18110  0173E8  0E00               	movlw	0
 18111  0173EA  203D               	addwfc	(btemp+11)^0,w,c
 18112  0173EC  6EDA               	movwf	fsr2h,c
 18113  0173EE  2ADF               	incf	indf2,f,c
 18114  0173F0                     l1481:
 18115                           
 18116                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18117  0173F0  52E5               	movf	postdec1,f,c
 18118  0173F2  52E5               	movf	postdec1,f,c
 18119  0173F4  52E5               	movf	postdec1,f,c
 18120  0173F6  0012               	return		;funcret
 18121  0173F8                     __end_of_ringBufS_put_dma:
 18122                           	opt callstack 0
 18123                           
 18124 ;; *************** function _atoi *****************
 18125 ;; Defined at:
 18126 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18127 ;; Parameters:    Size  Location     Type
 18128 ;;  s               2  [STACK] PTR const unsigned char 
 18129 ;;		 -> STR_41(3), STR_40(3), STR_39(19), STR_38(19), 
 18130 ;;		 -> STR_37(19), STR_36(19), STR_35(19), STR_34(19), 
 18131 ;;		 -> STR_33(24), STR_32(15), STR_31(15), STR_30(15), 
 18132 ;;		 -> STR_29(10), STR_28(10), STR_27(19), STR_26(19), 
 18133 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(19), 
 18134 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
 18135 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
 18136 ;;		 -> STR_11(19), STR_10(19), STR_9(19), STR_8(17), 
 18137 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 18138 ;;		 -> STR_1(17), 
 18139 ;; Auto vars:     Size  Location     Type
 18140 ;;  n               2  [STACK] int 
 18141 ;;  neg             2  [STACK] int 
 18142 ;; Return value:  Size  Location     Type
 18143 ;;                  2  [STACK] int 
 18144 ;; Registers used:
 18145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18146 ;; Tracked objects:
 18147 ;;		On entry : 0/5
 18148 ;;		On exit  : 0/0
 18149 ;;		Unchanged: 0/0
 18150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18155 ;;Total ram usage:        0 bytes
 18156 ;; Hardware stack levels used:    1
 18157 ;; Hardware stack levels required when called:    7
 18158 ;; This function calls:
 18159 ;;		_isdigit
 18160 ;;		_isspace
 18161 ;; This function is called by:
 18162 ;;		_vfpfcnvrt
 18163 ;; This function uses a reentrant model
 18164 ;;
 18165                           
 18166                           	psect	text70
 18167  01541C                     __ptext70:
 18168                           	opt callstack 0
 18169  01541C                     _atoi:
 18170                           	opt callstack 0
 18171                           
 18172                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18173  01541C  0E09               	movlw	9
 18174  01541E  26E1               	addwf	fsr1l,f,c
 18175  015420  0E00               	movlw	0
 18176  015422  22E2               	addwfc	fsr1h,f,c
 18177                           
 18178                           ;stkvar	_n @ sp[(-9)+5]
 18179                           
 18180                           ;incstack = 0
 18181  015424  0EFC               	movlw	-4
 18182  015426  6AE3               	clrf	plusw1,c
 18183  015428  0EFD               	movlw	-3
 18184  01542A  6AE3               	clrf	plusw1,c
 18185                           
 18186                           ;stkvar	_neg @ sp[(-9)+7]
 18187  01542C  0EFE               	movlw	-2
 18188  01542E  6AE3               	clrf	plusw1,c
 18189  015430  0EFF               	movlw	-1
 18190  015432  6AE3               	clrf	plusw1,c
 18191  015434  D011               	goto	l7737
 18192  015436                     l7735:
 18193                           
 18194                           ;stkvar	_s @ sp[(-9)+-2]
 18195  015436  0EF5               	movlw	-11
 18196  015438  50E3               	movf	plusw1,w,c
 18197  01543A  0F01               	addlw	1
 18198  01543C  6E32               	movwf	btemp^0,c
 18199  01543E  0EF5               	movlw	-11
 18200  015440  0060  F0CB  FFE3   	movff	btemp,plusw1
 18201  015446  6A32               	clrf	btemp^0,c
 18202  015448  0EF6               	movlw	-10
 18203  01544A  50E3               	movf	plusw1,w,c
 18204  01544C  2032               	addwfc	btemp^0,w,c
 18205  01544E  6E32               	movwf	btemp^0,c
 18206  015450  0EF6               	movlw	-10
 18207  015452  0060  F0CB  FFE3   	movff	btemp,plusw1
 18208  015458                     l7737:
 18209                           
 18210                           ;stkvar	_atoi$5036 @ sp[(-9)+4]
 18211  015458  0EFB               	movlw	-5
 18212  01545A  6AE3               	clrf	plusw1,c
 18213  01545C  2AE3               	incf	plusw1,f,c
 18214                           
 18215                           ;stkvar	_s @ sp[(-9)+-2]
 18216  01545E  50E1               	movf	fsr1l,w,c
 18217  015460  0FF5               	addlw	-11
 18218  015462  6ED9               	movwf	fsr2l,c
 18219  015464  50E2               	movf	fsr1h,w,c
 18220  015466  6EDA               	movwf	fsr2h,c
 18221  015468  0EFF               	movlw	255
 18222  01546A  22DA               	addwfc	fsr2h,f,c
 18223  01546C  006F FF7B FFF6     	movff	postinc2,tblptrl
 18224  015472  006F FF77 FFF7     	movff	postdec2,tblptrh
 18225  015478                     	if	0	;tblptru may be non-zero
 18226  015478                     	endif
 18227  015478                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18228  015478  0E00               	movlw	low (__mediumconst shr (0+16))
 18229  01547A  6EF8               	movwf	tblptru,c
 18230  01547C                     	endif
 18231  01547C  0008               	tblrd		*
 18232  01547E  50F5               	movf	tablat,w,c
 18233  015480  0A20               	xorlw	32
 18234  015482  B4D8               	btfsc	status,2,c
 18235  015484  D023               	goto	l7745
 18236  015486  0EF7               	movlw	247
 18237  015488  6E3C               	movwf	(btemp+10)^0,c
 18238  01548A  0EFF               	movlw	255
 18239  01548C  6E3D               	movwf	(btemp+11)^0,c
 18240                           
 18241                           ;stkvar	_s @ sp[(-9)+-2]
 18242  01548E  50E1               	movf	fsr1l,w,c
 18243  015490  0FF5               	addlw	-11
 18244  015492  6ED9               	movwf	fsr2l,c
 18245  015494  50E2               	movf	fsr1h,w,c
 18246  015496  6EDA               	movwf	fsr2h,c
 18247  015498  0EFF               	movlw	255
 18248  01549A  22DA               	addwfc	fsr2h,f,c
 18249  01549C  006F FF7B FFF6     	movff	postinc2,tblptrl
 18250  0154A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 18251  0154A8                     	if	0	;tblptru may be non-zero
 18252  0154A8                     	endif
 18253  0154A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18254  0154A8  0E00               	movlw	low (__mediumconst shr (0+16))
 18255  0154AA  6EF8               	movwf	tblptru,c
 18256  0154AC                     	endif
 18257  0154AC  0008               	tblrd		*
 18258  0154AE  50F5               	movf	tablat,w,c
 18259  0154B0  6E3A               	movwf	(btemp+8)^0,c
 18260  0154B2  6A3B               	clrf	(btemp+9)^0,c
 18261  0154B4  503C               	movf	(btemp+10)^0,w,c
 18262  0154B6  263A               	addwf	(btemp+8)^0,f,c
 18263  0154B8  503D               	movf	(btemp+11)^0,w,c
 18264  0154BA  223B               	addwfc	(btemp+9)^0,f,c
 18265  0154BC  503B               	movf	(btemp+9)^0,w,c
 18266  0154BE  E104               	bnz	u7400
 18267  0154C0  0E05               	movlw	5
 18268  0154C2  5C3A               	subwf	(btemp+8)^0,w,c
 18269  0154C4  A0D8               	btfss	status,0,c
 18270  0154C6  D002               	goto	l7745
 18271  0154C8                     u7400:
 18272                           
 18273                           ;stkvar	_atoi$5036 @ sp[(-9)+4]
 18274  0154C8  0EFB               	movlw	-5
 18275  0154CA  6AE3               	clrf	plusw1,c
 18276  0154CC                     l7745:
 18277                           
 18278                           ;stkvar	_atoi$5036 @ sp[(-9)+4]
 18279  0154CC  0EFB               	movlw	-5
 18280  0154CE  50E3               	movf	plusw1,w,c
 18281  0154D0  6E3C               	movwf	(btemp+10)^0,c
 18282  0154D2  6A3D               	clrf	(btemp+11)^0,c
 18283                           
 18284                           ;stkvar	_atoi$5035 @ sp[(-9)+2]
 18285  0154D4  0EF9               	movlw	-7
 18286  0154D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18287  0154DC  0EFA               	movlw	-6
 18288  0154DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18289                           
 18290                           ;stkvar	_atoi$5035 @ sp[(-9)+2]
 18291  0154E4  0EF9               	movlw	-7
 18292  0154E6  006F FF8C  F032    	movff	plusw1,btemp
 18293  0154EC  0EFA               	movlw	-6
 18294  0154EE  50E3               	movf	plusw1,w,c
 18295  0154F0  1032               	iorwf	btemp^0,w,c
 18296  0154F2  B4D8               	btfsc	status,2,c
 18297  0154F4  D01F               	goto	l7755
 18298  0154F6  D79F               	goto	l7735
 18299  0154F8                     l7751:
 18300  0154F8  0E01               	movlw	1
 18301  0154FA  6E3C               	movwf	(btemp+10)^0,c
 18302  0154FC  0E00               	movlw	0
 18303  0154FE  6E3D               	movwf	(btemp+11)^0,c
 18304                           
 18305                           ;stkvar	_neg @ sp[(-9)+7]
 18306  015500  0EFE               	movlw	-2
 18307  015502  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18308  015508  0EFF               	movlw	-1
 18309  01550A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18310  015510                     l7753:
 18311                           
 18312                           ;stkvar	_s @ sp[(-9)+-2]
 18313  015510  0EF5               	movlw	-11
 18314  015512  50E3               	movf	plusw1,w,c
 18315  015514  0F01               	addlw	1
 18316  015516  6E32               	movwf	btemp^0,c
 18317  015518  0EF5               	movlw	-11
 18318  01551A  0060  F0CB  FFE3   	movff	btemp,plusw1
 18319  015520  6A32               	clrf	btemp^0,c
 18320  015522  0EF6               	movlw	-10
 18321  015524  50E3               	movf	plusw1,w,c
 18322  015526  2032               	addwfc	btemp^0,w,c
 18323  015528  6E32               	movwf	btemp^0,c
 18324  01552A  0EF6               	movlw	-10
 18325  01552C  0060  F0CB  FFE3   	movff	btemp,plusw1
 18326  015532  D053               	goto	l7761
 18327  015534                     l7755:
 18328                           
 18329                           ;stkvar	_s @ sp[(-9)+-2]
 18330  015534  50E1               	movf	fsr1l,w,c
 18331  015536  0FF5               	addlw	-11
 18332  015538  6ED9               	movwf	fsr2l,c
 18333  01553A  50E2               	movf	fsr1h,w,c
 18334  01553C  6EDA               	movwf	fsr2h,c
 18335  01553E  0EFF               	movlw	255
 18336  015540  22DA               	addwfc	fsr2h,f,c
 18337  015542  006F FF7B FFF6     	movff	postinc2,tblptrl
 18338  015548  006F FF77 FFF7     	movff	postdec2,tblptrh
 18339  01554E                     	if	0	;tblptru may be non-zero
 18340  01554E                     	endif
 18341  01554E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18342  01554E  0E00               	movlw	low (__mediumconst shr (0+16))
 18343  015550  6EF8               	movwf	tblptru,c
 18344  015552                     	endif
 18345  015552  0008               	tblrd		*
 18346  015554  50F5               	movf	tablat,w,c
 18347  015556  6E3C               	movwf	(btemp+10)^0,c
 18348  015558  6A3D               	clrf	(btemp+11)^0,c
 18349                           
 18350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18351                           ; Switch size 1, requested type "simple"
 18352                           ; Number of cases is 1, Range of values is 0 to 0
 18353                           ; switch strategies available:
 18354                           ; Name         Instructions Cycles
 18355                           ; simple_byte            4     3 (average)
 18356                           ;	Chosen strategy is simple_byte
 18357  01555A  503D               	movf	(btemp+11)^0,w,c
 18358  01555C  0A00               	xorlw	0	; case 0
 18359  01555E  A4D8               	btfss	status,2,c
 18360  015560  D03C               	goto	l7761
 18361                           
 18362                           ; Switch size 1, requested type "simple"
 18363                           ; Number of cases is 2, Range of values is 43 to 45
 18364                           ; switch strategies available:
 18365                           ; Name         Instructions Cycles
 18366                           ; simple_byte            7     4 (average)
 18367                           ;	Chosen strategy is simple_byte
 18368  015562  503C               	movf	(btemp+10)^0,w,c
 18369  015564  0A2B               	xorlw	43	; case 43
 18370  015566  B4D8               	btfsc	status,2,c
 18371  015568  D7D3               	goto	l7753
 18372  01556A  0A06               	xorlw	6	; case 45
 18373  01556C  B4D8               	btfsc	status,2,c
 18374  01556E  D7C4               	goto	l7751
 18375  015570  D034               	goto	l7761
 18376  015572                     l7757:
 18377                           
 18378                           ;stkvar	_n @ sp[(-9)+5]
 18379  015572  0EFC               	movlw	-4
 18380  015574  006F FF8C  F03C    	movff	plusw1,btemp+10
 18381  01557A  0EFD               	movlw	-3
 18382  01557C  006F FF8C  F03D    	movff	plusw1,btemp+11
 18383  015582  0E0A               	movlw	10
 18384  015584  023C               	mulwf	(btemp+10)^0,c
 18385  015586  006F FFCC  F03A    	movff	prodl,btemp+8
 18386  01558C  006F FFD0  F03B    	movff	prodh,btemp+9
 18387  015592  023D               	mulwf	(btemp+11)^0,c
 18388  015594  50F3               	movf	prodl,w,c
 18389  015596  263B               	addwf	(btemp+9)^0,f,c
 18390                           
 18391                           ;stkvar	_s @ sp[(-9)+-2]
 18392  015598  50E1               	movf	fsr1l,w,c
 18393  01559A  0FF5               	addlw	-11
 18394  01559C  6ED9               	movwf	fsr2l,c
 18395  01559E  50E2               	movf	fsr1h,w,c
 18396  0155A0  6EDA               	movwf	fsr2h,c
 18397  0155A2  0EFF               	movlw	255
 18398  0155A4  22DA               	addwfc	fsr2h,f,c
 18399  0155A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 18400  0155AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 18401  0155B2                     	if	0	;tblptru may be non-zero
 18402  0155B2                     	endif
 18403  0155B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18404  0155B2  0E00               	movlw	low (__mediumconst shr (0+16))
 18405  0155B4  6EF8               	movwf	tblptru,c
 18406  0155B6                     	endif
 18407  0155B6  0008               	tblrd		*
 18408  0155B8  50F5               	movf	tablat,w,c
 18409  0155BA  5E3A               	subwf	(btemp+8)^0,f,c
 18410  0155BC  0E00               	movlw	0
 18411  0155BE  5A3B               	subwfb	(btemp+9)^0,f,c
 18412  0155C0  0E30               	movlw	48
 18413  0155C2  263A               	addwf	(btemp+8)^0,f,c
 18414  0155C4  0E00               	movlw	0
 18415  0155C6  223B               	addwfc	(btemp+9)^0,f,c
 18416                           
 18417                           ;stkvar	_n @ sp[(-9)+5]
 18418  0155C8  0EFC               	movlw	-4
 18419  0155CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 18420  0155D0  0EFD               	movlw	-3
 18421  0155D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 18422  0155D8  D79B               	goto	l7753
 18423  0155DA                     l7761:
 18424  0155DA  0ED0               	movlw	208
 18425  0155DC  6E3C               	movwf	(btemp+10)^0,c
 18426  0155DE  0EFF               	movlw	255
 18427  0155E0  6E3D               	movwf	(btemp+11)^0,c
 18428                           
 18429                           ;stkvar	_s @ sp[(-9)+-2]
 18430  0155E2  50E1               	movf	fsr1l,w,c
 18431  0155E4  0FF5               	addlw	-11
 18432  0155E6  6ED9               	movwf	fsr2l,c
 18433  0155E8  50E2               	movf	fsr1h,w,c
 18434  0155EA  6EDA               	movwf	fsr2h,c
 18435  0155EC  0EFF               	movlw	255
 18436  0155EE  22DA               	addwfc	fsr2h,f,c
 18437  0155F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 18438  0155F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 18439  0155FC                     	if	0	;tblptru may be non-zero
 18440  0155FC                     	endif
 18441  0155FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18442  0155FC  0E00               	movlw	low (__mediumconst shr (0+16))
 18443  0155FE  6EF8               	movwf	tblptru,c
 18444  015600                     	endif
 18445  015600  0008               	tblrd		*
 18446  015602  50F5               	movf	tablat,w,c
 18447  015604  6E3A               	movwf	(btemp+8)^0,c
 18448  015606  6A3B               	clrf	(btemp+9)^0,c
 18449  015608  503C               	movf	(btemp+10)^0,w,c
 18450  01560A  263A               	addwf	(btemp+8)^0,f,c
 18451  01560C  503D               	movf	(btemp+11)^0,w,c
 18452  01560E  223B               	addwfc	(btemp+9)^0,f,c
 18453  015610  503B               	movf	(btemp+9)^0,w,c
 18454  015612  E106               	bnz	u7420
 18455  015614  0E0A               	movlw	10
 18456  015616  5C3A               	subwf	(btemp+8)^0,w,c
 18457  015618  B0D8               	btfsc	status,0,c
 18458  01561A  D002               	goto	u7420
 18459  01561C  0E01               	movlw	1
 18460  01561E  D001               	goto	u7430
 18461  015620                     u7420:
 18462  015620  0E00               	movlw	0
 18463  015622                     u7430:
 18464  015622  6E3C               	movwf	(btemp+10)^0,c
 18465  015624  6A3D               	clrf	(btemp+11)^0,c
 18466                           
 18467                           ;stkvar	_atoi$5037 @ sp[(-9)+0]
 18468  015626  0EF7               	movlw	-9
 18469  015628  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18470  01562E  0EF8               	movlw	-8
 18471  015630  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18472                           
 18473                           ;stkvar	_atoi$5037 @ sp[(-9)+0]
 18474  015636  0EF7               	movlw	-9
 18475  015638  006F FF8C  F032    	movff	plusw1,btemp
 18476  01563E  0EF8               	movlw	-8
 18477  015640  50E3               	movf	plusw1,w,c
 18478  015642  1032               	iorwf	btemp^0,w,c
 18479  015644  A4D8               	btfss	status,2,c
 18480  015646  D795               	goto	l7757
 18481                           
 18482                           ;stkvar	_neg @ sp[(-9)+7]
 18483  015648  0EFE               	movlw	-2
 18484  01564A  006F FF8C  F032    	movff	plusw1,btemp
 18485  015650  0EFF               	movlw	-1
 18486  015652  50E3               	movf	plusw1,w,c
 18487  015654  1032               	iorwf	btemp^0,w,c
 18488  015656  A4D8               	btfss	status,2,c
 18489  015658  D00E               	goto	l7771
 18490                           
 18491                           ;stkvar	_n @ sp[(-9)+5]
 18492  01565A  0EFC               	movlw	-4
 18493  01565C  006F FF8C  F032    	movff	plusw1,btemp
 18494  015662  1E32               	comf	btemp^0,f,c
 18495  015664  0EFD               	movlw	-3
 18496  015666  006F FF8C  F033    	movff	plusw1,btemp+1
 18497  01566C  1E33               	comf	(btemp+1)^0,f,c
 18498  01566E  2A32               	incf	btemp^0,f,c
 18499  015670  B4D8               	btfsc	status,2,c
 18500  015672  2A33               	incf	(btemp+1)^0,f,c
 18501  015674  D008               	goto	l2798
 18502  015676                     l7771:
 18503                           
 18504                           ;stkvar	_n @ sp[(-9)+5]
 18505  015676  0EFC               	movlw	-4
 18506  015678  006F FF8C  F032    	movff	plusw1,btemp
 18507  01567E  0EFD               	movlw	-3
 18508  015680  006F FF8C  F033    	movff	plusw1,btemp+1
 18509  015686                     l2798:
 18510                           
 18511                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 18512  015686  0EF5               	movlw	245
 18513  015688  26E1               	addwf	fsr1l,f,c
 18514  01568A  0EFF               	movlw	255
 18515  01568C  22E2               	addwfc	fsr1h,f,c
 18516  01568E  0012               	return		;funcret
 18517  015690                     __end_of_atoi:
 18518                           	opt callstack 0
 18519                           
 18520 ;; *************** function _isspace *****************
 18521 ;; Defined at:
 18522 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 18523 ;; Parameters:    Size  Location     Type
 18524 ;;  c               2  [STACK] int 
 18525 ;; Auto vars:     Size  Location     Type
 18526 ;;		None
 18527 ;; Return value:  Size  Location     Type
 18528 ;;                  2  [STACK] int 
 18529 ;; Registers used:
 18530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18531 ;; Tracked objects:
 18532 ;;		On entry : 0/0
 18533 ;;		On exit  : 0/0
 18534 ;;		Unchanged: 0/0
 18535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18540 ;;Total ram usage:        0 bytes
 18541 ;; Hardware stack levels used:    1
 18542 ;; Hardware stack levels required when called:    6
 18543 ;; This function calls:
 18544 ;;		Nothing
 18545 ;; This function is called by:
 18546 ;;		_atoi
 18547 ;; This function uses a reentrant model
 18548 ;;
 18549                           
 18550                           	psect	text71
 18551  017FAA                     __ptext71:
 18552                           	opt callstack 0
 18553  017FAA                     _isspace:
 18554                           	opt callstack 0
 18555                           
 18556                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18557  017FAA  52E6               	movf	postinc1,f,c
 18558                           
 18559                           ;stkvar	_isspace$5075 @ sp[(-1)+0]
 18560                           
 18561                           ;incstack = 0
 18562  017FAC  0EFF               	movlw	-1
 18563  017FAE  6AE3               	clrf	plusw1,c
 18564  017FB0  2AE3               	incf	plusw1,f,c
 18565                           
 18566                           ;stkvar	_c @ sp[(-1)+-2]
 18567  017FB2  0EFD               	movlw	-3
 18568  017FB4  006F FF8C  F032    	movff	plusw1,btemp
 18569  017FBA  0E20               	movlw	32
 18570  017FBC  1832               	xorwf	btemp^0,w,c
 18571  017FBE  E104               	bnz	u6390
 18572  017FC0  0EFE               	movlw	-2
 18573  017FC2  50E3               	movf	plusw1,w,c
 18574  017FC4  B4D8               	btfsc	status,2,c
 18575  017FC6  D012               	goto	l7221
 18576  017FC8                     u6390:
 18577                           
 18578                           ;stkvar	_c @ sp[(-1)+-2]
 18579  017FC8  0EFD               	movlw	-3
 18580  017FCA  50E3               	movf	plusw1,w,c
 18581  017FCC  0FF7               	addlw	247
 18582  017FCE  6E3C               	movwf	(btemp+10)^0,c
 18583  017FD0  0EFE               	movlw	-2
 18584  017FD2  006F FF8C  F03D    	movff	plusw1,btemp+11
 18585  017FD8  0EFF               	movlw	255
 18586  017FDA  223D               	addwfc	(btemp+11)^0,f,c
 18587  017FDC  503D               	movf	(btemp+11)^0,w,c
 18588  017FDE  E104               	bnz	u6400
 18589  017FE0  0E05               	movlw	5
 18590  017FE2  5C3C               	subwf	(btemp+10)^0,w,c
 18591  017FE4  A0D8               	btfss	status,0,c
 18592  017FE6  D002               	goto	l7221
 18593  017FE8                     u6400:
 18594                           
 18595                           ;stkvar	_isspace$5075 @ sp[(-1)+0]
 18596  017FE8  0EFF               	movlw	-1
 18597  017FEA  6AE3               	clrf	plusw1,c
 18598  017FEC                     l7221:
 18599                           
 18600                           ;stkvar	_isspace$5075 @ sp[(-1)+0]
 18601  017FEC  0EFF               	movlw	-1
 18602  017FEE  50E3               	movf	plusw1,w,c
 18603  017FF0  6E32               	movwf	btemp^0,c
 18604  017FF2  6A33               	clrf	(btemp+1)^0,c
 18605                           
 18606                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18607  017FF4  52E5               	movf	postdec1,f,c
 18608  017FF6  52E5               	movf	postdec1,f,c
 18609  017FF8  52E5               	movf	postdec1,f,c
 18610  017FFA  0012               	return		;funcret
 18611  017FFC                     __end_of_isspace:
 18612                           	opt callstack 0
 18613                           
 18614 ;; *************** function _isdigit *****************
 18615 ;; Defined at:
 18616 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 18617 ;; Parameters:    Size  Location     Type
 18618 ;;  c               2  [STACK] int 
 18619 ;; Auto vars:     Size  Location     Type
 18620 ;;		None
 18621 ;; Return value:  Size  Location     Type
 18622 ;;                  2  [STACK] int 
 18623 ;; Registers used:
 18624 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18625 ;; Tracked objects:
 18626 ;;		On entry : 0/0
 18627 ;;		On exit  : 0/0
 18628 ;;		Unchanged: 0/0
 18629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18634 ;;Total ram usage:        0 bytes
 18635 ;; Hardware stack levels used:    1
 18636 ;; Hardware stack levels required when called:    6
 18637 ;; This function calls:
 18638 ;;		Nothing
 18639 ;; This function is called by:
 18640 ;;		_vfpfcnvrt
 18641 ;;		_atoi
 18642 ;; This function uses a reentrant model
 18643 ;;
 18644                           
 18645                           	psect	text72
 18646  01844E                     __ptext72:
 18647                           	opt callstack 0
 18648  01844E                     _isdigit:
 18649                           	opt callstack 18
 18650                           
 18651                           ;stkvar	_c @ sp[(0)+-2]
 18652                           
 18653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18654                           ;incstack = 0
 18655  01844E  0EFE               	movlw	-2
 18656  018450  50E3               	movf	plusw1,w,c
 18657  018452  0FD0               	addlw	208
 18658  018454  6E3C               	movwf	(btemp+10)^0,c
 18659  018456  0EFF               	movlw	-1
 18660  018458  006F FF8C  F03D    	movff	plusw1,btemp+11
 18661  01845E  0EFF               	movlw	255
 18662  018460  223D               	addwfc	(btemp+11)^0,f,c
 18663  018462  503D               	movf	(btemp+11)^0,w,c
 18664  018464  E106               	bnz	u5350
 18665  018466  0E0A               	movlw	10
 18666  018468  5C3C               	subwf	(btemp+10)^0,w,c
 18667  01846A  B0D8               	btfsc	status,0,c
 18668  01846C  D002               	goto	u5350
 18669  01846E  0E01               	movlw	1
 18670  018470  D001               	goto	u5360
 18671  018472                     u5350:
 18672  018472  0E00               	movlw	0
 18673  018474                     u5360:
 18674  018474  6E32               	movwf	btemp^0,c
 18675  018476  6A33               	clrf	(btemp+1)^0,c
 18676                           
 18677                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18678  018478  52E5               	movf	postdec1,f,c
 18679  01847A  52E5               	movf	postdec1,f,c
 18680  01847C  0012               	return		;funcret
 18681  01847E                     __end_of_isdigit:
 18682                           	opt callstack 0
 18683                           
 18684 ;; *************** function _set_vterm *****************
 18685 ;; Defined at:
 18686 ;;		line 107 in file "mconfig.c"
 18687 ;; Parameters:    Size  Location     Type
 18688 ;;  vterm           1  [STACK] const unsigned char 
 18689 ;; Auto vars:     Size  Location     Type
 18690 ;;		None
 18691 ;; Return value:  Size  Location     Type
 18692 ;;                  1  [STACK] unsigned char 
 18693 ;; Registers used:
 18694 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 18695 ;; Tracked objects:
 18696 ;;		On entry : 0/1
 18697 ;;		On exit  : 3F/5
 18698 ;;		Unchanged: 0/0
 18699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18704 ;;Total ram usage:        0 bytes
 18705 ;; Hardware stack levels used:    1
 18706 ;; Hardware stack levels required when called:    6
 18707 ;; This function calls:
 18708 ;;		Nothing
 18709 ;; This function is called by:
 18710 ;;		_main
 18711 ;;		_check_help
 18712 ;; This function uses a reentrant model
 18713 ;;
 18714                           
 18715                           	psect	text73
 18716  018A28                     __ptext73:
 18717                           	opt callstack 0
 18718  018A28                     _set_vterm:
 18719                           	opt callstack 24
 18720                           
 18721                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 18722                           ;stkvar	_vterm @ sp[(0)+-1]
 18723                           
 18724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18725                           ;incstack = 0
 18726  018A28  0EFF               	movlw	-1
 18727  018A2A  006F FF8C  F03D    	movff	plusw1,btemp+11
 18728  018A30  0E03               	movlw	3
 18729  018A32  163D               	andwf	(btemp+11)^0,f,c
 18730  018A34  0105               	movlb	5	; () banked
 18731  018A36  51D8               	movf	(_D+216)& (0+255),w,b
 18732  018A38  183D               	xorwf	(btemp+11)^0,w,c
 18733  018A3A  0BFE               	andlw	-2
 18734  018A3C  183D               	xorwf	(btemp+11)^0,w,c
 18735  018A3E  6FD8               	movwf	(_D+216)& (0+255),b
 18736                           
 18737                           ; BSR set to: 5
 18738                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 18739  018A40  52E5               	movf	postdec1,f,c
 18740  018A42  0012               	return		;funcret
 18741  018A44                     __end_of_set_vterm:
 18742                           	opt callstack 0
 18743                           
 18744 ;; *************** function _set_temp_display_help *****************
 18745 ;; Defined at:
 18746 ;;		line 211 in file "mconfig.c"
 18747 ;; Parameters:    Size  Location     Type
 18748 ;;  new_response    1  [STACK] const enum E16501
 18749 ;; Auto vars:     Size  Location     Type
 18750 ;;		None
 18751 ;; Return value:  Size  Location     Type
 18752 ;;                  1  [STACK] enum E16501
 18753 ;; Registers used:
 18754 ;;		wreg, fsr1l, fsr1h
 18755 ;; Tracked objects:
 18756 ;;		On entry : 0/5
 18757 ;;		On exit  : 3F/2
 18758 ;;		Unchanged: 0/0
 18759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18764 ;;Total ram usage:        0 bytes
 18765 ;; Hardware stack levels used:    1
 18766 ;; Hardware stack levels required when called:    6
 18767 ;; This function calls:
 18768 ;;		Nothing
 18769 ;; This function is called by:
 18770 ;;		_check_help
 18771 ;; This function uses a reentrant model
 18772 ;;
 18773                           
 18774                           	psect	text74
 18775  018B2A                     __ptext74:
 18776                           	opt callstack 0
 18777  018B2A                     _set_temp_display_help:
 18778                           	opt callstack 23
 18779                           
 18780                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 18781                           
 18782                           ; BSR set to: 5
 18783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18784                           ;incstack = 0
 18785  018B2A  0102               	movlb	2	; () banked
 18786  018B2C  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 18787                           
 18788                           ; BSR set to: 2
 18789                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 18790                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18791  018B2E  0EFF               	movlw	-1
 18792  018B30  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 18793                           
 18794                           ; BSR set to: 2
 18795                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 18796  018B36  52E5               	movf	postdec1,f,c
 18797  018B38  0012               	return		;funcret
 18798  018B3A                     __end_of_set_temp_display_help:
 18799                           	opt callstack 0
 18800                           
 18801 ;; *************** function _set_display_info *****************
 18802 ;; Defined at:
 18803 ;;		line 200 in file "mconfig.c"
 18804 ;; Parameters:    Size  Location     Type
 18805 ;;  new_response    1  [STACK] const enum E16501
 18806 ;; Auto vars:     Size  Location     Type
 18807 ;;		None
 18808 ;; Return value:  Size  Location     Type
 18809 ;;                  1  [STACK] enum E16986
 18810 ;; Registers used:
 18811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18812 ;; Tracked objects:
 18813 ;;		On entry : 0/39
 18814 ;;		On exit  : 0/0
 18815 ;;		Unchanged: 0/0
 18816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18821 ;;Total ram usage:        0 bytes
 18822 ;; Hardware stack levels used:    1
 18823 ;; Hardware stack levels required when called:    7
 18824 ;; This function calls:
 18825 ;;		_TimerDone
 18826 ;; This function is called by:
 18827 ;;		_main
 18828 ;;		_check_help
 18829 ;; This function uses a reentrant model
 18830 ;;
 18831                           
 18832                           	psect	text75
 18833  0189B2                     __ptext75:
 18834                           	opt callstack 0
 18835  0189B2                     _set_display_info:
 18836                           	opt callstack 23
 18837                           
 18838                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 18839                           
 18840                           ; BSR set to: 2
 18841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18842                           ;incstack = 0
 18843  0189B2  0E07               	movlw	7
 18844  0189B4  6EE6               	movwf	postinc1,c
 18845  0189B6  EC53  F0C4         	call	_TimerDone	;wreg free
 18846  0189BA  5032               	movf	btemp^0,w,c
 18847  0189BC  B4D8               	btfsc	status,2,c
 18848  0189BE  D006               	goto	l1618
 18849                           
 18850                           ;mconfig.c: 205:   old_info = V.response.info;
 18851  0189C0  0102               	movlb	2	; () banked
 18852  0189C2  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 18853                           
 18854                           ; BSR set to: 2
 18855                           ;mconfig.c: 206:   V.response.info = new_response_info;
 18856                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18857  0189C4  0EFF               	movlw	-1
 18858  0189C6  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 18859  0189CC                     l1618:
 18860                           
 18861                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 18862  0189CC  52E5               	movf	postdec1,f,c
 18863  0189CE  0012               	return		;funcret
 18864  0189D0                     __end_of_set_display_info:
 18865                           	opt callstack 0
 18866                           
 18867 ;; *************** function _mode_lamp_dim *****************
 18868 ;; Defined at:
 18869 ;;		line 13 in file "mconfig.c"
 18870 ;; Parameters:    Size  Location     Type
 18871 ;;  level           2  [STACK] const unsigned short 
 18872 ;; Auto vars:     Size  Location     Type
 18873 ;;		None
 18874 ;; Return value:  Size  Location     Type
 18875 ;;                  1  [STACK] void 
 18876 ;; Registers used:
 18877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18878 ;; Tracked objects:
 18879 ;;		On entry : 0/2
 18880 ;;		On exit  : 0/0
 18881 ;;		Unchanged: 0/0
 18882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18887 ;;Total ram usage:        0 bytes
 18888 ;; Hardware stack levels used:    1
 18889 ;; Hardware stack levels required when called:    7
 18890 ;; This function calls:
 18891 ;;		_PWM8_LoadDutyValue
 18892 ;; This function is called by:
 18893 ;;		_main
 18894 ;;		_check_help
 18895 ;; This function uses a reentrant model
 18896 ;;
 18897                           
 18898                           	psect	text76
 18899  018A7A                     __ptext76:
 18900                           	opt callstack 0
 18901  018A7A                     _mode_lamp_dim:
 18902                           	opt callstack 23
 18903                           
 18904                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 18905                           ;stkvar	_level @ sp[(0)+-2]
 18906                           
 18907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18908                           ;incstack = 0
 18909  018A7A  0EFE               	movlw	-2
 18910  018A7C  006F FF8F FFE6     	movff	plusw1,postinc1
 18911  018A82  006F FF8F FFE6     	movff	plusw1,postinc1
 18912  018A88  ECF3  F0C0         	call	_PWM8_LoadDutyValue	;wreg free
 18913                           
 18914                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 18915  018A8C  52E5               	movf	postdec1,f,c
 18916  018A8E  52E5               	movf	postdec1,f,c
 18917  018A90  0012               	return		;funcret
 18918  018A92                     __end_of_mode_lamp_dim:
 18919                           	opt callstack 0
 18920                           
 18921 ;; *************** function _mode_lamp_bright *****************
 18922 ;; Defined at:
 18923 ;;		line 18 in file "mconfig.c"
 18924 ;; Parameters:    Size  Location     Type
 18925 ;;		None
 18926 ;; Auto vars:     Size  Location     Type
 18927 ;;		None
 18928 ;; Return value:  Size  Location     Type
 18929 ;;                  1  [STACK] void 
 18930 ;; Registers used:
 18931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18932 ;; Tracked objects:
 18933 ;;		On entry : 0/2
 18934 ;;		On exit  : 0/0
 18935 ;;		Unchanged: 0/0
 18936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18941 ;;Total ram usage:        0 bytes
 18942 ;; Hardware stack levels used:    1
 18943 ;; Hardware stack levels required when called:    7
 18944 ;; This function calls:
 18945 ;;		_PWM8_LoadDutyValue
 18946 ;; This function is called by:
 18947 ;;		_check_help
 18948 ;; This function uses a reentrant model
 18949 ;;
 18950                           
 18951                           	psect	text77
 18952  018B48                     __ptext77:
 18953                           	opt callstack 0
 18954  018B48                     _mode_lamp_bright:
 18955                           	opt callstack 22
 18956                           
 18957                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 18958                           
 18959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18960                           ;incstack = 0
 18961  018B48  0E2C               	movlw	44
 18962  018B4A  6EE6               	movwf	postinc1,c
 18963  018B4C  0E01               	movlw	1
 18964  018B4E  6EE6               	movwf	postinc1,c
 18965  018B50  ECF3  F0C0         	call	_PWM8_LoadDutyValue	;wreg free
 18966                           
 18967                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 18968  018B54  0012               	return		;funcret
 18969  018B56                     __end_of_mode_lamp_bright:
 18970                           	opt callstack 0
 18971                           
 18972 ;; *************** function _PWM8_LoadDutyValue *****************
 18973 ;; Defined at:
 18974 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 18975 ;; Parameters:    Size  Location     Type
 18976 ;;  dutyValue       2  [STACK] unsigned short 
 18977 ;; Auto vars:     Size  Location     Type
 18978 ;;		None
 18979 ;; Return value:  Size  Location     Type
 18980 ;;                  1  [STACK] void 
 18981 ;; Registers used:
 18982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18983 ;; Tracked objects:
 18984 ;;		On entry : 0/2
 18985 ;;		On exit  : 0/0
 18986 ;;		Unchanged: 0/0
 18987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18992 ;;Total ram usage:        0 bytes
 18993 ;; Hardware stack levels used:    1
 18994 ;; Hardware stack levels required when called:    6
 18995 ;; This function calls:
 18996 ;;		Nothing
 18997 ;; This function is called by:
 18998 ;;		_mode_lamp_dim
 18999 ;;		_mode_lamp_bright
 19000 ;; This function uses a reentrant model
 19001 ;;
 19002                           
 19003                           	psect	text78
 19004  0181E6                     __ptext78:
 19005                           	opt callstack 0
 19006  0181E6                     _PWM8_LoadDutyValue:
 19007                           	opt callstack 23
 19008                           
 19009                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19010                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19011                           
 19012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19013                           ;incstack = 0
 19014  0181E6  0EFE               	movlw	-2
 19015  0181E8  006F FF8C  F03C    	movff	plusw1,btemp+10
 19016  0181EE  0EFF               	movlw	-1
 19017  0181F0  006F FF8C  F03D    	movff	plusw1,btemp+11
 19018  0181F6  90D8               	bcf	status,0,c
 19019  0181F8  323D               	rrcf	(btemp+11)^0,f,c
 19020  0181FA  323C               	rrcf	(btemp+10)^0,f,c
 19021  0181FC  90D8               	bcf	status,0,c
 19022  0181FE  323D               	rrcf	(btemp+11)^0,f,c
 19023  018200  323C               	rrcf	(btemp+10)^0,f,c
 19024  018202  503C               	movf	(btemp+10)^0,w,c
 19025  018204  6E61               	movwf	97,c	;volatile
 19026                           
 19027                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19028                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19029  018206  0EFE               	movlw	-2
 19030  018208  006F FF8C  F03D    	movff	plusw1,btemp+11
 19031  01820E  0E03               	movlw	3
 19032  018210  163D               	andwf	(btemp+11)^0,f,c
 19033  018212  0E06               	movlw	6
 19034  018214  6E32               	movwf	btemp^0,c
 19035  018216                     u7885:
 19036  018216  90D8               	bcf	status,0,c
 19037  018218  363D               	rlcf	(btemp+11)^0,f,c
 19038  01821A  2E32               	decfsz	btemp^0,f,c
 19039  01821C  D7FC               	goto	u7885
 19040  01821E  503D               	movf	(btemp+11)^0,w,c
 19041  018220  6E60               	movwf	96,c	;volatile
 19042                           
 19043                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19044  018222  52E5               	movf	postdec1,f,c
 19045  018224  52E5               	movf	postdec1,f,c
 19046  018226  0012               	return		;funcret
 19047  018228                     __end_of_PWM8_LoadDutyValue:
 19048                           	opt callstack 0
 19049                           
 19050 ;; *************** function _help_button *****************
 19051 ;; Defined at:
 19052 ;;		line 26 in file "mconfig.c"
 19053 ;; Parameters:    Size  Location     Type
 19054 ;;		None
 19055 ;; Auto vars:     Size  Location     Type
 19056 ;;		None
 19057 ;; Return value:  Size  Location     Type
 19058 ;;                  1  [STACK] _Bool 
 19059 ;; Registers used:
 19060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19061 ;; Tracked objects:
 19062 ;;		On entry : 0/2
 19063 ;;		On exit  : 0/0
 19064 ;;		Unchanged: 0/0
 19065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19070 ;;Total ram usage:        0 bytes
 19071 ;; Hardware stack levels used:    1
 19072 ;; Hardware stack levels required when called:    7
 19073 ;; This function calls:
 19074 ;;		_StartTimer
 19075 ;;		_TimerDone
 19076 ;; This function is called by:
 19077 ;;		_check_help
 19078 ;; This function uses a reentrant model
 19079 ;;
 19080                           
 19081                           	psect	text79
 19082  0182E2                     __ptext79:
 19083                           	opt callstack 0
 19084  0182E2                     _help_button:
 19085                           	opt callstack 22
 19086                           
 19087                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19088                           
 19089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19090                           ;incstack = 0
 19091  0182E2  B0CB               	btfsc	203,0,c	;volatile
 19092  0182E4  D00C               	goto	l1561
 19093                           
 19094                           ;mconfig.c: 29:   V.help = 1;
 19095  0182E6  0102               	movlb	2	; () banked
 19096  0182E8  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19097                           
 19098                           ; BSR set to: 2
 19099                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19100  0182EA  0E08               	movlw	8
 19101  0182EC  6EE6               	movwf	postinc1,c
 19102  0182EE  EC53  F0C4         	call	_TimerDone	;wreg free
 19103  0182F2  5032               	movf	btemp^0,w,c
 19104  0182F4  B4D8               	btfsc	status,2,c
 19105  0182F6  D003               	goto	l1561
 19106                           
 19107                           ;mconfig.c: 31:    return 1;
 19108  0182F8  0E01               	movlw	1
 19109  0182FA  6E32               	movwf	btemp^0,c
 19110  0182FC  0012               	return	
 19111  0182FE                     l1561:
 19112                           
 19113                           ;mconfig.c: 34:  if (!V.help)
 19114  0182FE  0102               	movlb	2	; () banked
 19115  018300  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19116  018302  D008               	goto	l8671
 19117                           
 19118                           ; BSR set to: 2
 19119                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19120  018304  0E2C               	movlw	44
 19121  018306  6EE6               	movwf	postinc1,c
 19122  018308  0E01               	movlw	1
 19123  01830A  6EE6               	movwf	postinc1,c
 19124  01830C  0E08               	movlw	8
 19125  01830E  6EE6               	movwf	postinc1,c
 19126  018310  EC53  F0C1         	call	_StartTimer	;wreg free
 19127  018314                     l8671:
 19128                           
 19129                           ;mconfig.c: 37:  return 0;
 19130  018314  0E00               	movlw	0
 19131  018316  6E32               	movwf	btemp^0,c
 19132                           
 19133                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19134  018318  0012               	return		;funcret
 19135  01831A                     __end_of_help_button:
 19136                           	opt callstack 0
 19137                           
 19138 ;; *************** function _TimerDone *****************
 19139 ;; Defined at:
 19140 ;;		line 20 in file "timers.c"
 19141 ;; Parameters:    Size  Location     Type
 19142 ;;  timer           1  [STACK] const unsigned char 
 19143 ;; Auto vars:     Size  Location     Type
 19144 ;;		None
 19145 ;; Return value:  Size  Location     Type
 19146 ;;                  1  [STACK] _Bool 
 19147 ;; Registers used:
 19148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19149 ;; Tracked objects:
 19150 ;;		On entry : 0/39
 19151 ;;		On exit  : 0/0
 19152 ;;		Unchanged: 0/0
 19153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19158 ;;Total ram usage:        0 bytes
 19159 ;; Hardware stack levels used:    1
 19160 ;; Hardware stack levels required when called:    6
 19161 ;; This function calls:
 19162 ;;		Nothing
 19163 ;; This function is called by:
 19164 ;;		_main
 19165 ;;		_WaitMs
 19166 ;;		_help_button
 19167 ;;		_check_help
 19168 ;;		_set_display_info
 19169 ;; This function uses a reentrant model
 19170 ;;
 19171                           
 19172                           	psect	text80
 19173  0188A6                     __ptext80:
 19174                           	opt callstack 0
 19175  0188A6                     _TimerDone:
 19176                           	opt callstack 23
 19177                           
 19178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19179                           ;incstack = 0
 19180  0188A6  0004               	clrwdt		;# 
 19181                           
 19182                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19183                           ;stkvar	_timer @ sp[(0)+-1]
 19184  0188A8  0EFF               	movlw	-1
 19185  0188AA  50E3               	movf	plusw1,w,c
 19186  0188AC  0D02               	mullw	2
 19187  0188AE  50F3               	movf	243,w,c
 19188  0188B0  0F89               	addlw	low _tickCount
 19189  0188B2  6ED9               	movwf	fsr2l,c
 19190  0188B4  6ADA               	clrf	fsr2h,c
 19191  0188B6  50DE               	movf	postinc2,w,c
 19192  0188B8  10DE               	iorwf	postinc2,w,c
 19193  0188BA  A4D8               	btfss	status,2,c
 19194  0188BC  D002               	goto	l8057
 19195                           
 19196                           ;timers.c: 24:   return 1;
 19197  0188BE  0E01               	movlw	1
 19198  0188C0  D001               	goto	L19
 19199  0188C2                     l8057:
 19200                           
 19201                           ;timers.c: 26:  return 0;
 19202  0188C2  0E00               	movlw	0
 19203  0188C4                     L19:
 19204  0188C4  6E32               	movwf	btemp^0,c
 19205                           
 19206                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19207  0188C6  52E5               	movf	postdec1,f,c
 19208  0188C8  0012               	return		;funcret
 19209  0188CA                     __end_of_TimerDone:
 19210                           	opt callstack 0
 19211                           
 19212 ;; *************** function _StartTimer *****************
 19213 ;; Defined at:
 19214 ;;		line 12 in file "timers.c"
 19215 ;; Parameters:    Size  Location     Type
 19216 ;;  timer           1  [STACK] const unsigned char 
 19217 ;;  count           2  [STACK] const unsigned short 
 19218 ;; Auto vars:     Size  Location     Type
 19219 ;;		None
 19220 ;; Return value:  Size  Location     Type
 19221 ;;                  1  [STACK] void 
 19222 ;; Registers used:
 19223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19224 ;; Tracked objects:
 19225 ;;		On entry : 0/5
 19226 ;;		On exit  : 0/0
 19227 ;;		Unchanged: 0/0
 19228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19233 ;;Total ram usage:        0 bytes
 19234 ;; Hardware stack levels used:    1
 19235 ;; Hardware stack levels required when called:    6
 19236 ;; This function calls:
 19237 ;;		Nothing
 19238 ;; This function is called by:
 19239 ;;		_main
 19240 ;;		_WaitMs
 19241 ;;		_help_button
 19242 ;;		_check_help
 19243 ;; This function uses a reentrant model
 19244 ;;
 19245                           
 19246                           	psect	text81
 19247  0182A6                     __ptext81:
 19248                           	opt callstack 0
 19249  0182A6                     _StartTimer:
 19250                           	opt callstack 21
 19251                           
 19252                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 19253                           ;stkvar	_count @ sp[(0)+-3]
 19254                           
 19255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19256                           ;incstack = 0
 19257  0182A6  0EFD               	movlw	-3
 19258  0182A8  006F FF8C  F03C    	movff	plusw1,btemp+10
 19259  0182AE  0EFE               	movlw	-2
 19260  0182B0  006F FF8C  F03D    	movff	plusw1,btemp+11
 19261  0182B6  90D8               	bcf	status,0,c
 19262  0182B8  343C               	rlcf	(btemp+10)^0,w,c
 19263  0182BA  6E3A               	movwf	(btemp+8)^0,c
 19264  0182BC  343D               	rlcf	(btemp+11)^0,w,c
 19265  0182BE  6E3B               	movwf	(btemp+9)^0,c
 19266                           
 19267                           ;stkvar	_timer @ sp[(0)+-1]
 19268  0182C0  0EFF               	movlw	-1
 19269  0182C2  50E3               	movf	plusw1,w,c
 19270  0182C4  0D02               	mullw	2
 19271  0182C6  50F3               	movf	243,w,c
 19272  0182C8  0F89               	addlw	low _tickCount
 19273  0182CA  6ED9               	movwf	fsr2l,c
 19274  0182CC  6ADA               	clrf	fsr2h,c
 19275  0182CE  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 19276  0182D4  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 19277                           
 19278                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 19279  0182DA  52E5               	movf	postdec1,f,c
 19280  0182DC  52E5               	movf	postdec1,f,c
 19281  0182DE  52E5               	movf	postdec1,f,c
 19282  0182E0  0012               	return		;funcret
 19283  0182E2                     __end_of_StartTimer:
 19284                           	opt callstack 0
 19285                           
 19286 ;; *************** function _display_info *****************
 19287 ;; Defined at:
 19288 ;;		line 190 in file "mconfig.c"
 19289 ;; Parameters:    Size  Location     Type
 19290 ;;		None
 19291 ;; Auto vars:     Size  Location     Type
 19292 ;;		None
 19293 ;; Return value:  Size  Location     Type
 19294 ;;                  1  [STACK] enum E16501
 19295 ;; Registers used:
 19296 ;;		btemp
 19297 ;; Tracked objects:
 19298 ;;		On entry : 0/2
 19299 ;;		On exit  : 0/0
 19300 ;;		Unchanged: 0/0
 19301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19306 ;;Total ram usage:        0 bytes
 19307 ;; Hardware stack levels used:    1
 19308 ;; Hardware stack levels required when called:    6
 19309 ;; This function calls:
 19310 ;;		Nothing
 19311 ;; This function is called by:
 19312 ;;		_check_help
 19313 ;; This function uses a reentrant model
 19314 ;;
 19315                           
 19316                           	psect	text82
 19317  018BAA                     __ptext82:
 19318                           	opt callstack 0
 19319  018BAA                     _display_info:
 19320                           	opt callstack 23
 19321                           
 19322                           ;mconfig.c: 192:  return V.response.info;
 19323                           
 19324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19325                           ;incstack = 0
 19326  018BAA  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 19327                           
 19328                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19329  018BB0  0012               	return		;funcret
 19330  018BB2                     __end_of_display_info:
 19331                           	opt callstack 0
 19332                           
 19333 ;; *************** function _display_help *****************
 19334 ;; Defined at:
 19335 ;;		line 195 in file "mconfig.c"
 19336 ;; Parameters:    Size  Location     Type
 19337 ;;		None
 19338 ;; Auto vars:     Size  Location     Type
 19339 ;;		None
 19340 ;; Return value:  Size  Location     Type
 19341 ;;                  1  [STACK] enum E16501
 19342 ;; Registers used:
 19343 ;;		btemp
 19344 ;; Tracked objects:
 19345 ;;		On entry : 3F/2
 19346 ;;		On exit  : 0/0
 19347 ;;		Unchanged: 0/0
 19348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19353 ;;Total ram usage:        0 bytes
 19354 ;; Hardware stack levels used:    1
 19355 ;; Hardware stack levels required when called:    6
 19356 ;; This function calls:
 19357 ;;		Nothing
 19358 ;; This function is called by:
 19359 ;;		_check_help
 19360 ;; This function uses a reentrant model
 19361 ;;
 19362                           
 19363                           	psect	text83
 19364  018BB2                     __ptext83:
 19365                           	opt callstack 0
 19366  018BB2                     _display_help:
 19367                           	opt callstack 23
 19368                           
 19369                           ;mconfig.c: 197:  return V.response.help_temp;
 19370                           
 19371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19372                           ;incstack = 0
 19373  018BB2  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 19374                           
 19375                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19376  018BB8  0012               	return		;funcret
 19377  018BBA                     __end_of_display_help:
 19378                           	opt callstack 0
 19379                           
 19380 ;; *************** function _check_adc_scan *****************
 19381 ;; Defined at:
 19382 ;;		line 56 in file "daq.c"
 19383 ;; Parameters:    Size  Location     Type
 19384 ;;		None
 19385 ;; Auto vars:     Size  Location     Type
 19386 ;;		None
 19387 ;; Return value:  Size  Location     Type
 19388 ;;                  1  [STACK] _Bool 
 19389 ;; Registers used:
 19390 ;;		btemp
 19391 ;; Tracked objects:
 19392 ;;		On entry : 0/39
 19393 ;;		On exit  : 0/0
 19394 ;;		Unchanged: 0/0
 19395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19400 ;;Total ram usage:        0 bytes
 19401 ;; Hardware stack levels used:    1
 19402 ;; Hardware stack levels required when called:    6
 19403 ;; This function calls:
 19404 ;;		Nothing
 19405 ;; This function is called by:
 19406 ;;		_main
 19407 ;; This function uses a reentrant model
 19408 ;;
 19409                           
 19410                           	psect	text84
 19411  018BBA                     __ptext84:
 19412                           	opt callstack 0
 19413  018BBA                     _check_adc_scan:
 19414                           	opt callstack 24
 19415                           
 19416                           ;daq.c: 58:  return R.done;
 19417                           
 19418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19419                           ;incstack = 0
 19420  018BBA  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 19421                           
 19422                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 19423  018BC0  0012               	return		;funcret
 19424  018BC2                     __end_of_check_adc_scan:
 19425                           	opt callstack 0
 19426                           
 19427 ;; *************** function _calc_model_data *****************
 19428 ;; Defined at:
 19429 ;;		line 54 in file "mbmc.c"
 19430 ;; Parameters:    Size  Location     Type
 19431 ;;		None
 19432 ;; Auto vars:     Size  Location     Type
 19433 ;;		None
 19434 ;; Return value:  Size  Location     Type
 19435 ;;                  1  [STACK] void 
 19436 ;; Registers used:
 19437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19438 ;; Tracked objects:
 19439 ;;		On entry : 0/39
 19440 ;;		On exit  : 3F/1
 19441 ;;		Unchanged: 0/0
 19442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19447 ;;Total ram usage:        0 bytes
 19448 ;; Hardware stack levels used:    1
 19449 ;; Hardware stack levels required when called:    9
 19450 ;; This function calls:
 19451 ;;		___fladd
 19452 ;;		___flmul
 19453 ;;		___flsub
 19454 ;;		_lp_filter
 19455 ;; This function is called by:
 19456 ;;		_main
 19457 ;; This function uses a reentrant model
 19458 ;;
 19459                           
 19460                           	psect	text85
 19461  014C1A                     __ptext85:
 19462                           	opt callstack 0
 19463  014C1A                     _calc_model_data:
 19464                           	opt callstack 21
 19465                           
 19466                           ;mbmc.c: 56:  C.c_bat = C.calc[C_BATT];
 19467                           
 19468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19469                           ;incstack = 0
 19470  014C1A  C100  F144         	movff	_C,_C+68
 19471  014C1E  C101  F145         	movff	_C+1,_C+69
 19472  014C22  C102  F146         	movff	_C+2,_C+70
 19473  014C26  C103  F147         	movff	_C+3,_C+71
 19474                           
 19475                           ;mbmc.c: 57:  C.c_pv = C.calc[C_PV];
 19476  014C2A  C104  F148         	movff	_C+4,_C+72
 19477  014C2E  C105  F149         	movff	_C+5,_C+73
 19478  014C32  C106  F14A         	movff	_C+6,_C+74
 19479  014C36  C107  F14B         	movff	_C+7,_C+75
 19480                           
 19481                           ;mbmc.c: 58:  C.v_bat = C.calc[V_BAT];
 19482  014C3A  C110  F154         	movff	_C+16,_C+84
 19483  014C3E  C111  F155         	movff	_C+17,_C+85
 19484  014C42  C112  F156         	movff	_C+18,_C+86
 19485  014C46  C113  F157         	movff	_C+19,_C+87
 19486                           
 19487                           ;mbmc.c: 59:  C.v_pv = C.calc[V_PV];
 19488  014C4A  C114  F150         	movff	_C+20,_C+80
 19489  014C4E  C115  F151         	movff	_C+21,_C+81
 19490  014C52  C116  F152         	movff	_C+22,_C+82
 19491  014C56  C117  F153         	movff	_C+23,_C+83
 19492                           
 19493                           ;mbmc.c: 60:  C.v_inverter = C.calc[V_INVERTER];
 19494  014C5A  C130  F164         	movff	_C+48,_C+100
 19495  014C5E  C131  F165         	movff	_C+49,_C+101
 19496  014C62  C132  F166         	movff	_C+50,_C+102
 19497  014C66  C133  F167         	movff	_C+51,_C+103
 19498                           
 19499                           ;mbmc.c: 61:  C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 19500  014C6A  0E01               	movlw	1
 19501  014C6C  6EE6               	movwf	postinc1,c
 19502  014C6E  0E10               	movlw	16
 19503  014C70  6EE6               	movwf	postinc1,c
 19504  014C72  0060  F403  FFE6   	movff	_C,postinc1
 19505  014C78  0060  F407  FFE6   	movff	_C+1,postinc1
 19506  014C7E  0060  F40B  FFE6   	movff	_C+2,postinc1
 19507  014C84  0060  F40F  FFE6   	movff	_C+3,postinc1
 19508  014C8A  0060  F413  FFE6   	movff	_C+4,postinc1
 19509  014C90  0060  F417  FFE6   	movff	_C+5,postinc1
 19510  014C96  0060  F41B  FFE6   	movff	_C+6,postinc1
 19511  014C9C  0060  F41F  FFE6   	movff	_C+7,postinc1
 19512  014CA2  EC45  F0C0         	call	___flsub	;wreg free
 19513  014CA6  0060  F0CB  FFE6   	movff	btemp,postinc1
 19514  014CAC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19515  014CB2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19516  014CB8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19517  014CBE  EC62  F0AF         	call	_lp_filter	;wreg free
 19518  014CC2  0060  F0C8  F140   	movff	btemp,_C+64
 19519  014CC8  0060  F0CC  F141   	movff	btemp+1,_C+65
 19520  014CCE  0060  F0D0  F142   	movff	btemp+2,_C+66
 19521  014CD4  0060  F0D4  F143   	movff	btemp+3,_C+67
 19522                           
 19523                           ;mbmc.c: 62:  C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 19524  014CDA  0E01               	movlw	1
 19525  014CDC  6EE6               	movwf	postinc1,c
 19526  014CDE  0E11               	movlw	17
 19527  014CE0  6EE6               	movwf	postinc1,c
 19528  014CE2  0060  F553  FFE6   	movff	_C+84,postinc1
 19529  014CE8  0060  F557  FFE6   	movff	_C+85,postinc1
 19530  014CEE  0060  F55B  FFE6   	movff	_C+86,postinc1
 19531  014CF4  0060  F55F  FFE6   	movff	_C+87,postinc1
 19532  014CFA  0060  F503  FFE6   	movff	_C+64,postinc1
 19533  014D00  0060  F507  FFE6   	movff	_C+65,postinc1
 19534  014D06  0060  F50B  FFE6   	movff	_C+66,postinc1
 19535  014D0C  0060  F50F  FFE6   	movff	_C+67,postinc1
 19536  014D12  ECC1  F08E         	call	___flmul	;wreg free
 19537  014D16  0060  F0CB  FFE6   	movff	btemp,postinc1
 19538  014D1C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19539  014D22  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19540  014D28  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19541  014D2E  EC62  F0AF         	call	_lp_filter	;wreg free
 19542  014D32  0060  F0C8  F168   	movff	btemp,_C+104
 19543  014D38  0060  F0CC  F169   	movff	btemp+1,_C+105
 19544  014D3E  0060  F0D0  F16A   	movff	btemp+2,_C+106
 19545  014D44  0060  F0D4  F16B   	movff	btemp+3,_C+107
 19546                           
 19547                           ;mbmc.c: 63:  C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 19548  014D4A  0E01               	movlw	1
 19549  014D4C  6EE6               	movwf	postinc1,c
 19550  014D4E  0E12               	movlw	18
 19551  014D50  6EE6               	movwf	postinc1,c
 19552  014D52  0060  F543  FFE6   	movff	_C+80,postinc1
 19553  014D58  0060  F547  FFE6   	movff	_C+81,postinc1
 19554  014D5E  0060  F54B  FFE6   	movff	_C+82,postinc1
 19555  014D64  0060  F54F  FFE6   	movff	_C+83,postinc1
 19556  014D6A  0060  F523  FFE6   	movff	_C+72,postinc1
 19557  014D70  0060  F527  FFE6   	movff	_C+73,postinc1
 19558  014D76  0060  F52B  FFE6   	movff	_C+74,postinc1
 19559  014D7C  0060  F52F  FFE6   	movff	_C+75,postinc1
 19560  014D82  ECC1  F08E         	call	___flmul	;wreg free
 19561  014D86  0060  F0CB  FFE6   	movff	btemp,postinc1
 19562  014D8C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19563  014D92  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19564  014D98  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19565  014D9E  EC62  F0AF         	call	_lp_filter	;wreg free
 19566  014DA2  0060  F0C8  F170   	movff	btemp,_C+112
 19567  014DA8  0060  F0CC  F171   	movff	btemp+1,_C+113
 19568  014DAE  0060  F0D0  F172   	movff	btemp+2,_C+114
 19569  014DB4  0060  F0D4  F173   	movff	btemp+3,_C+115
 19570                           
 19571                           ;mbmc.c: 64:  C.p_inverter = lp_filter((C.c_load * C.v_inverter)-14.00, 19, 1);
 19572  014DBA  0E01               	movlw	1
 19573  014DBC  6EE6               	movwf	postinc1,c
 19574  014DBE  0E13               	movlw	19
 19575  014DC0  6EE6               	movwf	postinc1,c
 19576  014DC2  0E00               	movlw	0
 19577  014DC4  6EE6               	movwf	postinc1,c
 19578  014DC6  0E00               	movlw	0
 19579  014DC8  6EE6               	movwf	postinc1,c
 19580  014DCA  0E60               	movlw	96
 19581  014DCC  6EE6               	movwf	postinc1,c
 19582  014DCE  0EC1               	movlw	193
 19583  014DD0  6EE6               	movwf	postinc1,c
 19584  014DD2  0060  F593  FFE6   	movff	_C+100,postinc1
 19585  014DD8  0060  F597  FFE6   	movff	_C+101,postinc1
 19586  014DDE  0060  F59B  FFE6   	movff	_C+102,postinc1
 19587  014DE4  0060  F59F  FFE6   	movff	_C+103,postinc1
 19588  014DEA  0060  F503  FFE6   	movff	_C+64,postinc1
 19589  014DF0  0060  F507  FFE6   	movff	_C+65,postinc1
 19590  014DF6  0060  F50B  FFE6   	movff	_C+66,postinc1
 19591  014DFC  0060  F50F  FFE6   	movff	_C+67,postinc1
 19592  014E02  ECC1  F08E         	call	___flmul	;wreg free
 19593  014E06  0060  F0CB  FFE6   	movff	btemp,postinc1
 19594  014E0C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19595  014E12  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19596  014E18  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19597  014E1E  ECD6  F092         	call	___fladd	;wreg free
 19598  014E22  0060  F0CB  FFE6   	movff	btemp,postinc1
 19599  014E28  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19600  014E2E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19601  014E34  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19602  014E3A  EC62  F0AF         	call	_lp_filter	;wreg free
 19603  014E3E  0060  F0C8  F16C   	movff	btemp,_C+108
 19604  014E44  0060  F0CC  F16D   	movff	btemp+1,_C+109
 19605  014E4A  0060  F0D0  F16E   	movff	btemp+2,_C+110
 19606  014E50  0060  F0D4  F16F   	movff	btemp+3,_C+111
 19607                           
 19608                           ;mbmc.c: 65:  C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 19609  014E56  0E01               	movlw	1
 19610  014E58  6EE6               	movwf	postinc1,c
 19611  014E5A  0E14               	movlw	20
 19612  014E5C  6EE6               	movwf	postinc1,c
 19613  014E5E  0060  F553  FFE6   	movff	_C+84,postinc1
 19614  014E64  0060  F557  FFE6   	movff	_C+85,postinc1
 19615  014E6A  0060  F55B  FFE6   	movff	_C+86,postinc1
 19616  014E70  0060  F55F  FFE6   	movff	_C+87,postinc1
 19617  014E76  0060  F513  FFE6   	movff	_C+68,postinc1
 19618  014E7C  0060  F517  FFE6   	movff	_C+69,postinc1
 19619  014E82  0060  F51B  FFE6   	movff	_C+70,postinc1
 19620  014E88  0060  F51F  FFE6   	movff	_C+71,postinc1
 19621  014E8E  ECC1  F08E         	call	___flmul	;wreg free
 19622  014E92  0060  F0CB  FFE6   	movff	btemp,postinc1
 19623  014E98  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19624  014E9E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19625  014EA4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19626  014EAA  EC62  F0AF         	call	_lp_filter	;wreg free
 19627  014EAE  0060  F0C8  F174   	movff	btemp,_C+116
 19628  014EB4  0060  F0CC  F175   	movff	btemp+1,_C+117
 19629  014EBA  0060  F0D0  F176   	movff	btemp+2,_C+118
 19630  014EC0  0060  F0D4  F177   	movff	btemp+3,_C+119
 19631                           
 19632                           ;mbmc.c: 69:  if (C.p_inverter<0.0)
 19633  014EC6  0101               	movlb	1	; () banked
 19634  014EC8  AF6F               	btfss	(_C+111)& (0+255),7,b
 19635  014ECA  0012               	return	
 19636                           
 19637                           ; BSR set to: 1
 19638                           ;mbmc.c: 70:   C.p_inverter=0.0001;
 19639  014ECC  0E17               	movlw	23
 19640  014ECE  6F6C               	movwf	(_C+108)& (0+255),b
 19641  014ED0  0EB7               	movlw	183
 19642  014ED2  6F6D               	movwf	(_C+109)& (0+255),b
 19643  014ED4  0ED1               	movlw	209
 19644  014ED6  6F6E               	movwf	(_C+110)& (0+255),b
 19645  014ED8  0E38               	movlw	56
 19646  014EDA  6F6F               	movwf	(_C+111)& (0+255),b
 19647                           
 19648                           ; BSR set to: 1
 19649                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 19650  014EDC  0012               	return		;funcret
 19651  014EDE                     __end_of_calc_model_data:
 19652                           	opt callstack 0
 19653                           
 19654 ;; *************** function _lp_filter *****************
 19655 ;; Defined at:
 19656 ;;		line 16 in file "mbmc.c"
 19657 ;; Parameters:    Size  Location     Type
 19658 ;;  new             4  [STACK] const float 
 19659 ;;  bn              1  [STACK] const unsigned char 
 19660 ;;  slow            1  [STACK] const char 
 19661 ;; Auto vars:     Size  Location     Type
 19662 ;;  lp_speed        4  [STACK] float 
 19663 ;; Return value:  Size  Location     Type
 19664 ;;                  4  [STACK] float 
 19665 ;; Registers used:
 19666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19667 ;; Tracked objects:
 19668 ;;		On entry : 0/39
 19669 ;;		On exit  : 0/0
 19670 ;;		Unchanged: 0/0
 19671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19676 ;;Total ram usage:        0 bytes
 19677 ;; Hardware stack levels used:    1
 19678 ;; Hardware stack levels required when called:    8
 19679 ;; This function calls:
 19680 ;;		___fladd
 19681 ;;		___flmul
 19682 ;;		___flsub
 19683 ;; This function is called by:
 19684 ;;		_convert_adc_data
 19685 ;;		_calc_model_data
 19686 ;; This function uses a reentrant model
 19687 ;;
 19688                           
 19689                           	psect	text86
 19690  015EC4                     __ptext86:
 19691                           	opt callstack 0
 19692  015EC4                     _lp_filter:
 19693                           	opt callstack 0
 19694                           
 19695                           ; BSR set to: 1
 19696                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19697  015EC4  52E6               	movf	postinc1,f,c
 19698  015EC6  52E6               	movf	postinc1,f,c
 19699  015EC8  52E6               	movf	postinc1,f,c
 19700  015ECA  52E6               	movf	postinc1,f,c
 19701                           
 19702                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16 +5];;mbmc.c: 19:  float lp_speed;;mbmc.c: 2
      +                          1:  if (bn >= 16 +5)
 19703                           ;stkvar	_bn @ sp[(-4)+-5]
 19704                           
 19705                           ;incstack = 0
 19706  015ECC  0EF7               	movlw	-9
 19707  015ECE  006F FF8C  F032    	movff	plusw1,btemp
 19708  015ED4  0E14               	movlw	20
 19709  015ED6  6432               	cpfsgt	btemp^0,c
 19710  015ED8  D011               	goto	l8777
 19711  015EDA                     u8260:
 19712                           
 19713                           ;mbmc.c: 22:   return new;
 19714                           ;stkvar	_new @ sp[(-4)+-4]
 19715  015EDA  0EF8               	movlw	-8
 19716  015EDC  006F FF8C  F032    	movff	plusw1,btemp
 19717  015EE2  0EF9               	movlw	-7
 19718  015EE4  006F FF8C  F033    	movff	plusw1,btemp+1
 19719  015EEA  0EFA               	movlw	-6
 19720  015EEC  006F FF8C  F034    	movff	plusw1,btemp+2
 19721  015EF2  0EFB               	movlw	-5
 19722  015EF4  006F FF8C  F035    	movff	plusw1,btemp+3
 19723  015EFA  D0BF               	goto	l1703
 19724  015EFC                     l8777:
 19725                           
 19726                           ;mbmc.c: 24:  if (slow == (-1)) {
 19727                           ;stkvar	_slow @ sp[(-4)+-6]
 19728  015EFC  0EF6               	movlw	-10
 19729  015EFE  28E3               	incf	plusw1,w,c
 19730  015F00  A4D8               	btfss	status,2,c
 19731  015F02  D012               	goto	l8785
 19732                           
 19733                           ;mbmc.c: 25:   smooth[bn] = 0.0;
 19734                           ;stkvar	_bn @ sp[(-4)+-5]
 19735  015F04  0EF7               	movlw	-9
 19736  015F06  50E3               	movf	plusw1,w,c
 19737  015F08  0D04               	mullw	4
 19738  015F0A  0E00               	movlw	low lp_filter@smooth
 19739  015F0C  24F3               	addwf	243,w,c
 19740  015F0E  6ED9               	movwf	fsr2l,c
 19741  015F10  0E03               	movlw	high lp_filter@smooth
 19742  015F12  20F4               	addwfc	prodh,w,c
 19743  015F14  6EDA               	movwf	fsr2h,c
 19744  015F16  0E00               	movlw	0
 19745  015F18  6EDE               	movwf	postinc2,c
 19746  015F1A  0E00               	movlw	0
 19747  015F1C  6EDE               	movwf	postinc2,c
 19748  015F1E  0E00               	movlw	0
 19749  015F20  6EDE               	movwf	postinc2,c
 19750  015F22  0E00               	movlw	0
 19751  015F24  6EDD               	movwf	postdec2,c
 19752  015F26  D7D9               	goto	u8260
 19753  015F28                     l8785:
 19754                           
 19755                           ;mbmc.c: 29:  if (slow) {
 19756                           ;stkvar	_slow @ sp[(-4)+-6]
 19757  015F28  0EF6               	movlw	-10
 19758  015F2A  50E3               	movf	plusw1,w,c
 19759  015F2C  B4D8               	btfsc	status,2,c
 19760  015F2E  D008               	goto	l8789
 19761                           
 19762                           ;mbmc.c: 30:   lp_speed = 0.033;
 19763  015F30  0E02               	movlw	2
 19764  015F32  6E3A               	movwf	(btemp+8)^0,c
 19765  015F34  0E2B               	movlw	43
 19766  015F36  6E3B               	movwf	(btemp+9)^0,c
 19767  015F38  0E07               	movlw	7
 19768  015F3A  6E3C               	movwf	(btemp+10)^0,c
 19769  015F3C  0E3D               	movlw	61
 19770  015F3E  D007               	goto	L20
 19771  015F40                     l8789:
 19772                           
 19773                           ;mbmc.c: 32:   lp_speed = 0.125;
 19774  015F40  0E00               	movlw	0
 19775  015F42  6E3A               	movwf	(btemp+8)^0,c
 19776  015F44  0E00               	movlw	0
 19777  015F46  6E3B               	movwf	(btemp+9)^0,c
 19778  015F48  0E00               	movlw	0
 19779  015F4A  6E3C               	movwf	(btemp+10)^0,c
 19780  015F4C  0E3E               	movlw	62
 19781  015F4E                     L20:
 19782  015F4E  6E3D               	movwf	(btemp+11)^0,c
 19783                           
 19784                           ;stkvar	_lp_speed @ sp[(-4)+0]
 19785  015F50  0EFC               	movlw	-4
 19786  015F52  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19787  015F58  0EFD               	movlw	-3
 19788  015F5A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19789  015F60  0EFE               	movlw	-2
 19790  015F62  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19791  015F68  0EFF               	movlw	-1
 19792  015F6A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19793                           
 19794                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 19795                           ;stkvar	_bn @ sp[(-4)+-5]
 19796  015F70  0EF7               	movlw	-9
 19797  015F72  50E3               	movf	plusw1,w,c
 19798  015F74  0D04               	mullw	4
 19799  015F76  0E00               	movlw	low lp_filter@smooth
 19800  015F78  24F3               	addwf	243,w,c
 19801  015F7A  6ED9               	movwf	fsr2l,c
 19802  015F7C  0E03               	movlw	high lp_filter@smooth
 19803  015F7E  20F4               	addwfc	prodh,w,c
 19804  015F80  6EDA               	movwf	fsr2h,c
 19805  015F82  006F FF7B FFE6     	movff	postinc2,postinc1
 19806  015F88  006F FF7B FFE6     	movff	postinc2,postinc1
 19807  015F8E  006F FF7B FFE6     	movff	postinc2,postinc1
 19808  015F94  006F FF7B FFE6     	movff	postinc2,postinc1
 19809                           
 19810                           ;stkvar	_lp_speed @ sp[(-8)+0]
 19811  015F9A  0EF8               	movlw	-8
 19812  015F9C  006F FF8F FFE6     	movff	plusw1,postinc1
 19813  015FA2  006F FF8F FFE6     	movff	plusw1,postinc1
 19814  015FA8  006F FF8F FFE6     	movff	plusw1,postinc1
 19815  015FAE  006F FF8F FFE6     	movff	plusw1,postinc1
 19816                           
 19817                           ;stkvar	_bn @ sp[(-12)+-5]
 19818  015FB4  0EEF               	movlw	-17
 19819  015FB6  50E3               	movf	plusw1,w,c
 19820  015FB8  0D04               	mullw	4
 19821  015FBA  0E00               	movlw	low lp_filter@smooth
 19822  015FBC  24F3               	addwf	243,w,c
 19823  015FBE  6ED9               	movwf	fsr2l,c
 19824  015FC0  0E03               	movlw	high lp_filter@smooth
 19825  015FC2  20F4               	addwfc	prodh,w,c
 19826  015FC4  6EDA               	movwf	fsr2h,c
 19827  015FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 19828  015FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 19829  015FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 19830  015FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 19831                           
 19832                           ;stkvar	_new @ sp[(-16)+-4]
 19833  015FDE  0EEC               	movlw	-20
 19834  015FE0  006F FF8F FFE6     	movff	plusw1,postinc1
 19835  015FE6  006F FF8F FFE6     	movff	plusw1,postinc1
 19836  015FEC  006F FF8F FFE6     	movff	plusw1,postinc1
 19837  015FF2  006F FF8F FFE6     	movff	plusw1,postinc1
 19838  015FF8  EC45  F0C0         	call	___flsub	;wreg free
 19839  015FFC  0060  F0CB  FFE6   	movff	btemp,postinc1
 19840  016002  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19841  016008  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19842  01600E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19843  016014  ECC1  F08E         	call	___flmul	;wreg free
 19844  016018  0060  F0CB  FFE6   	movff	btemp,postinc1
 19845  01601E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19846  016024  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19847  01602A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19848  016030  ECD6  F092         	call	___fladd	;wreg free
 19849                           
 19850                           ;stkvar	_bn @ sp[(-4)+-5]
 19851  016034  0EF7               	movlw	-9
 19852  016036  50E3               	movf	plusw1,w,c
 19853  016038  0D04               	mullw	4
 19854  01603A  0E00               	movlw	low lp_filter@smooth
 19855  01603C  24F3               	addwf	243,w,c
 19856  01603E  6ED9               	movwf	fsr2l,c
 19857  016040  0E03               	movlw	high lp_filter@smooth
 19858  016042  20F4               	addwfc	prodh,w,c
 19859  016044  6EDA               	movwf	fsr2h,c
 19860  016046  0060  F0CB  FFDE   	movff	btemp,postinc2
 19861  01604C  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 19862  016052  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 19863  016058  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 19864  01605E  52DD               	movf	postdec2,f,c
 19865  016060  52DD               	movf	postdec2,f,c
 19866  016062  006F FF78  F032    	movff	postinc2,btemp
 19867  016068  006F FF78  F033    	movff	postinc2,btemp+1
 19868  01606E  006F FF78  F034    	movff	postinc2,btemp+2
 19869  016074  006F FF78  F035    	movff	postinc2,btemp+3
 19870  01607A                     l1703:
 19871                           
 19872                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 19873  01607A  0EF6               	movlw	246
 19874  01607C  26E1               	addwf	fsr1l,f,c
 19875  01607E  0EFF               	movlw	255
 19876  016080  22E2               	addwfc	fsr1h,f,c
 19877  016082  0012               	return		;funcret
 19878  016084                     __end_of_lp_filter:
 19879                           	opt callstack 0
 19880                           
 19881 ;; *************** function ___flsub *****************
 19882 ;; Defined at:
 19883 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19884 ;; Parameters:    Size  Location     Type
 19885 ;;  b               4  [STACK] float 
 19886 ;;  a               4  [STACK] float 
 19887 ;; Auto vars:     Size  Location     Type
 19888 ;;		None
 19889 ;; Return value:  Size  Location     Type
 19890 ;;                  4  [STACK] float 
 19891 ;; Registers used:
 19892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19893 ;; Tracked objects:
 19894 ;;		On entry : 0/39
 19895 ;;		On exit  : 0/0
 19896 ;;		Unchanged: 0/0
 19897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19902 ;;Total ram usage:        0 bytes
 19903 ;; Hardware stack levels used:    1
 19904 ;; Hardware stack levels required when called:    7
 19905 ;; This function calls:
 19906 ;;		___fladd
 19907 ;; This function is called by:
 19908 ;;		_conv_raw_result
 19909 ;;		_lp_filter
 19910 ;;		_calc_model_data
 19911 ;;		_efgtoa
 19912 ;; This function uses a reentrant model
 19913 ;;
 19914                           
 19915                           	psect	text87
 19916  01808A                     __ptext87:
 19917                           	opt callstack 0
 19918  01808A                     ___flsub:
 19919                           	opt callstack 16
 19920                           
 19921                           ;stkvar	_a @ sp[(0)+-8]
 19922                           
 19923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19924                           ;incstack = 0
 19925  01808A  0EFB               	movlw	-5
 19926  01808C  7EE3               	btg	plusw1,7,c
 19927                           
 19928                           ;stkvar	_a @ sp[(0)+-8]
 19929  01808E  0EF8               	movlw	-8
 19930  018090  006F FF8F FFE6     	movff	plusw1,postinc1
 19931  018096  006F FF8F FFE6     	movff	plusw1,postinc1
 19932  01809C  006F FF8F FFE6     	movff	plusw1,postinc1
 19933  0180A2  006F FF8F FFE6     	movff	plusw1,postinc1
 19934                           
 19935                           ;stkvar	_b @ sp[(-4)+-4]
 19936  0180A8  0EF8               	movlw	-8
 19937  0180AA  006F FF8F FFE6     	movff	plusw1,postinc1
 19938  0180B0  006F FF8F FFE6     	movff	plusw1,postinc1
 19939  0180B6  006F FF8F FFE6     	movff	plusw1,postinc1
 19940  0180BC  006F FF8F FFE6     	movff	plusw1,postinc1
 19941  0180C2  ECD6  F092         	call	___fladd	;wreg free
 19942                           
 19943                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19944  0180C6  0EF8               	movlw	248
 19945  0180C8  26E1               	addwf	fsr1l,f,c
 19946  0180CA  0EFF               	movlw	255
 19947  0180CC  22E2               	addwfc	fsr1h,f,c
 19948  0180CE  0012               	return		;funcret
 19949  0180D0                     __end_of___flsub:
 19950                           	opt callstack 0
 19951                           
 19952 ;; *************** function ___fladd *****************
 19953 ;; Defined at:
 19954 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19955 ;; Parameters:    Size  Location     Type
 19956 ;;  b               4  [STACK] float 
 19957 ;;  a               4  [STACK] float 
 19958 ;; Auto vars:     Size  Location     Type
 19959 ;;  grs             1  [STACK] unsigned char 
 19960 ;;  bexp            1  [STACK] unsigned char 
 19961 ;;  aexp            1  [STACK] unsigned char 
 19962 ;;  signs           1  [STACK] unsigned char 
 19963 ;; Return value:  Size  Location     Type
 19964 ;;                  4  [STACK] unsigned char 
 19965 ;; Registers used:
 19966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19967 ;; Tracked objects:
 19968 ;;		On entry : 0/5
 19969 ;;		On exit  : 0/0
 19970 ;;		Unchanged: 0/0
 19971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19976 ;;Total ram usage:        0 bytes
 19977 ;; Hardware stack levels used:    1
 19978 ;; Hardware stack levels required when called:    6
 19979 ;; This function calls:
 19980 ;;		Nothing
 19981 ;; This function is called by:
 19982 ;;		_lp_filter
 19983 ;;		_calc_model_data
 19984 ;;		_efgtoa
 19985 ;;		___flsub
 19986 ;; This function uses a reentrant model
 19987 ;;
 19988                           
 19989                           	psect	text88
 19990  0125AC                     __ptext88:
 19991                           	opt callstack 0
 19992  0125AC                     ___fladd:
 19993                           	opt callstack 0
 19994                           
 19995                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19996  0125AC  52E6               	movf	postinc1,f,c
 19997  0125AE  52E6               	movf	postinc1,f,c
 19998  0125B0  52E6               	movf	postinc1,f,c
 19999  0125B2  52E6               	movf	postinc1,f,c
 20000                           
 20001                           ;stkvar	_b @ sp[(-4)+-4]
 20002                           
 20003                           ;incstack = 0
 20004  0125B4  0EFB               	movlw	251
 20005  0125B6  24E1               	addwf	fsr1l,w,c
 20006  0125B8  6ED9               	movwf	fsr2l,c
 20007  0125BA  0EFF               	movlw	255
 20008  0125BC  20E2               	addwfc	fsr1h,w,c
 20009  0125BE  6EDA               	movwf	fsr2h,c
 20010  0125C0  50DF               	movf	indf2,w,c
 20011  0125C2  6E3D               	movwf	(btemp+11)^0,c
 20012  0125C4  0E80               	movlw	128
 20013  0125C6  163D               	andwf	(btemp+11)^0,f,c
 20014                           
 20015                           ;stkvar	_signs @ sp[(-4)+3]
 20016  0125C8  0EFF               	movlw	-1
 20017  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20018                           
 20019                           ;stkvar	_b @ sp[(-4)+-4]
 20020  0125D0  0EFB               	movlw	251
 20021  0125D2  24E1               	addwf	fsr1l,w,c
 20022  0125D4  6ED9               	movwf	fsr2l,c
 20023  0125D6  0EFF               	movlw	255
 20024  0125D8  20E2               	addwfc	fsr1h,w,c
 20025  0125DA  6EDA               	movwf	fsr2h,c
 20026  0125DC  50DF               	movf	indf2,w,c
 20027  0125DE  6E3D               	movwf	(btemp+11)^0,c
 20028  0125E0  90D8               	bcf	status,0,c
 20029  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 20030  0125E4  6E3C               	movwf	(btemp+10)^0,c
 20031                           
 20032                           ;stkvar	_bexp @ sp[(-4)+1]
 20033  0125E6  0EFD               	movlw	-3
 20034  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20035                           
 20036                           ;stkvar	_b @ sp[(-4)+-4]
 20037  0125EE  0EFA               	movlw	250
 20038  0125F0  24E1               	addwf	fsr1l,w,c
 20039  0125F2  6ED9               	movwf	fsr2l,c
 20040  0125F4  0EFF               	movlw	255
 20041  0125F6  20E2               	addwfc	fsr1h,w,c
 20042  0125F8  6EDA               	movwf	fsr2h,c
 20043  0125FA  AEDF               	btfss	indf2,7,c
 20044  0125FC  D002               	goto	l6291
 20045                           
 20046                           ;stkvar	_bexp @ sp[(-4)+1]
 20047  0125FE  0EFD               	movlw	-3
 20048  012600  80E3               	bsf	plusw1,0,c
 20049  012602                     l6291:
 20050                           
 20051                           ;stkvar	_bexp @ sp[(-4)+1]
 20052  012602  0EFD               	movlw	-3
 20053  012604  50E3               	movf	plusw1,w,c
 20054  012606  B4D8               	btfsc	status,2,c
 20055  012608  D027               	goto	l6301
 20056                           
 20057                           ;stkvar	_bexp @ sp[(-4)+1]
 20058  01260A  0EFD               	movlw	-3
 20059  01260C  28E3               	incf	plusw1,w,c
 20060  01260E  A4D8               	btfss	status,2,c
 20061  012610  D018               	goto	l6297
 20062  012612  0E00               	movlw	0
 20063  012614  6E3A               	movwf	(btemp+8)^0,c
 20064  012616  0E00               	movlw	0
 20065  012618  6E3B               	movwf	(btemp+9)^0,c
 20066  01261A  0E00               	movlw	0
 20067  01261C  6E3C               	movwf	(btemp+10)^0,c
 20068  01261E  0E00               	movlw	0
 20069  012620  6E3D               	movwf	(btemp+11)^0,c
 20070                           
 20071                           ;stkvar	_b @ sp[(-4)+-4]
 20072  012622  0EF8               	movlw	-8
 20073  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20074  01262A  0EF9               	movlw	-7
 20075  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20076  012632  0EFA               	movlw	-6
 20077  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20078  01263A  0EFB               	movlw	-5
 20079  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20080  012642                     l6297:
 20081                           
 20082                           ;stkvar	_b @ sp[(-4)+-4]
 20083  012642  0EFA               	movlw	-6
 20084  012644  8EE3               	bsf	plusw1,7,c
 20085                           
 20086                           ;stkvar	_b @ sp[(-4)+-4]
 20087  012646  0EFB               	movlw	251
 20088  012648  24E1               	addwf	fsr1l,w,c
 20089  01264A  6ED9               	movwf	fsr2l,c
 20090  01264C  0EFF               	movlw	255
 20091  01264E  20E2               	addwfc	fsr1h,w,c
 20092  012650  6EDA               	movwf	fsr2h,c
 20093  012652  0E00               	movlw	0
 20094  012654  6EDF               	movwf	indf2,c
 20095  012656  D018               	goto	l6303
 20096  012658                     l6301:
 20097  012658  0E00               	movlw	0
 20098  01265A  6E3A               	movwf	(btemp+8)^0,c
 20099  01265C  0E00               	movlw	0
 20100  01265E  6E3B               	movwf	(btemp+9)^0,c
 20101  012660  0E00               	movlw	0
 20102  012662  6E3C               	movwf	(btemp+10)^0,c
 20103  012664  0E00               	movlw	0
 20104  012666  6E3D               	movwf	(btemp+11)^0,c
 20105                           
 20106                           ;stkvar	_b @ sp[(-4)+-4]
 20107  012668  0EF8               	movlw	-8
 20108  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20109  012670  0EF9               	movlw	-7
 20110  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20111  012678  0EFA               	movlw	-6
 20112  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20113  012680  0EFB               	movlw	-5
 20114  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20115  012688                     l6303:
 20116                           
 20117                           ;stkvar	_a @ sp[(-4)+-8]
 20118  012688  0EF7               	movlw	247
 20119  01268A  24E1               	addwf	fsr1l,w,c
 20120  01268C  6ED9               	movwf	fsr2l,c
 20121  01268E  0EFF               	movlw	255
 20122  012690  20E2               	addwfc	fsr1h,w,c
 20123  012692  6EDA               	movwf	fsr2h,c
 20124  012694  50DF               	movf	indf2,w,c
 20125  012696  6E3D               	movwf	(btemp+11)^0,c
 20126  012698  0E80               	movlw	128
 20127  01269A  163D               	andwf	(btemp+11)^0,f,c
 20128                           
 20129                           ;stkvar	_aexp @ sp[(-4)+2]
 20130  01269C  0EFE               	movlw	-2
 20131  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20132                           
 20133                           ;stkvar	_signs @ sp[(-4)+3]
 20134                           ;stkvar	_aexp @ sp[(-4)+2]
 20135  0126A4  50E1               	movf	fsr1l,w,c
 20136  0126A6  0FFE               	addlw	-2
 20137  0126A8  6ED9               	movwf	fsr2l,c
 20138  0126AA  50E2               	movf	fsr1h,w,c
 20139  0126AC  6EDA               	movwf	fsr2h,c
 20140  0126AE  0EFF               	movlw	255
 20141  0126B0  22DA               	addwfc	fsr2h,f,c
 20142  0126B2  0EFF               	movlw	-1
 20143  0126B4  50E3               	movf	plusw1,w,c
 20144  0126B6  18DE               	xorwf	postinc2,w,c
 20145  0126B8  B4D8               	btfsc	status,2,c
 20146  0126BA  D002               	goto	l6309
 20147                           
 20148                           ;stkvar	_signs @ sp[(-4)+3]
 20149  0126BC  0EFF               	movlw	-1
 20150  0126BE  8CE3               	bsf	plusw1,6,c
 20151  0126C0                     l6309:
 20152                           
 20153                           ;stkvar	_a @ sp[(-4)+-8]
 20154  0126C0  0EF7               	movlw	247
 20155  0126C2  24E1               	addwf	fsr1l,w,c
 20156  0126C4  6ED9               	movwf	fsr2l,c
 20157  0126C6  0EFF               	movlw	255
 20158  0126C8  20E2               	addwfc	fsr1h,w,c
 20159  0126CA  6EDA               	movwf	fsr2h,c
 20160  0126CC  50DF               	movf	indf2,w,c
 20161  0126CE  6E3D               	movwf	(btemp+11)^0,c
 20162  0126D0  90D8               	bcf	status,0,c
 20163  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 20164  0126D4  6E3C               	movwf	(btemp+10)^0,c
 20165                           
 20166                           ;stkvar	_aexp @ sp[(-4)+2]
 20167  0126D6  0EFE               	movlw	-2
 20168  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20169                           
 20170                           ;stkvar	_a @ sp[(-4)+-8]
 20171  0126DE  0EF6               	movlw	246
 20172  0126E0  24E1               	addwf	fsr1l,w,c
 20173  0126E2  6ED9               	movwf	fsr2l,c
 20174  0126E4  0EFF               	movlw	255
 20175  0126E6  20E2               	addwfc	fsr1h,w,c
 20176  0126E8  6EDA               	movwf	fsr2h,c
 20177  0126EA  AEDF               	btfss	indf2,7,c
 20178  0126EC  D002               	goto	l6315
 20179                           
 20180                           ;stkvar	_aexp @ sp[(-4)+2]
 20181  0126EE  0EFE               	movlw	-2
 20182  0126F0  80E3               	bsf	plusw1,0,c
 20183  0126F2                     l6315:
 20184                           
 20185                           ;stkvar	_aexp @ sp[(-4)+2]
 20186  0126F2  0EFE               	movlw	-2
 20187  0126F4  50E3               	movf	plusw1,w,c
 20188  0126F6  B4D8               	btfsc	status,2,c
 20189  0126F8  D027               	goto	l6325
 20190                           
 20191                           ;stkvar	_aexp @ sp[(-4)+2]
 20192  0126FA  0EFE               	movlw	-2
 20193  0126FC  28E3               	incf	plusw1,w,c
 20194  0126FE  A4D8               	btfss	status,2,c
 20195  012700  D018               	goto	l6321
 20196  012702  0E00               	movlw	0
 20197  012704  6E3A               	movwf	(btemp+8)^0,c
 20198  012706  0E00               	movlw	0
 20199  012708  6E3B               	movwf	(btemp+9)^0,c
 20200  01270A  0E00               	movlw	0
 20201  01270C  6E3C               	movwf	(btemp+10)^0,c
 20202  01270E  0E00               	movlw	0
 20203  012710  6E3D               	movwf	(btemp+11)^0,c
 20204                           
 20205                           ;stkvar	_a @ sp[(-4)+-8]
 20206  012712  0EF4               	movlw	-12
 20207  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20208  01271A  0EF5               	movlw	-11
 20209  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20210  012722  0EF6               	movlw	-10
 20211  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20212  01272A  0EF7               	movlw	-9
 20213  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20214  012732                     l6321:
 20215                           
 20216                           ;stkvar	_a @ sp[(-4)+-8]
 20217  012732  0EF6               	movlw	-10
 20218  012734  8EE3               	bsf	plusw1,7,c
 20219                           
 20220                           ;stkvar	_a @ sp[(-4)+-8]
 20221  012736  0EF7               	movlw	247
 20222  012738  24E1               	addwf	fsr1l,w,c
 20223  01273A  6ED9               	movwf	fsr2l,c
 20224  01273C  0EFF               	movlw	255
 20225  01273E  20E2               	addwfc	fsr1h,w,c
 20226  012740  6EDA               	movwf	fsr2h,c
 20227  012742  0E00               	movlw	0
 20228  012744  6EDF               	movwf	indf2,c
 20229  012746  D018               	goto	l6327
 20230  012748                     l6325:
 20231  012748  0E00               	movlw	0
 20232  01274A  6E3A               	movwf	(btemp+8)^0,c
 20233  01274C  0E00               	movlw	0
 20234  01274E  6E3B               	movwf	(btemp+9)^0,c
 20235  012750  0E00               	movlw	0
 20236  012752  6E3C               	movwf	(btemp+10)^0,c
 20237  012754  0E00               	movlw	0
 20238  012756  6E3D               	movwf	(btemp+11)^0,c
 20239                           
 20240                           ;stkvar	_a @ sp[(-4)+-8]
 20241  012758  0EF4               	movlw	-12
 20242  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20243  012760  0EF5               	movlw	-11
 20244  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20245  012768  0EF6               	movlw	-10
 20246  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20247  012770  0EF7               	movlw	-9
 20248  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20249  012778                     l6327:
 20250                           
 20251                           ;stkvar	_bexp @ sp[(-4)+1]
 20252                           ;stkvar	_aexp @ sp[(-4)+2]
 20253  012778  50E1               	movf	fsr1l,w,c
 20254  01277A  0FFE               	addlw	-2
 20255  01277C  6ED9               	movwf	fsr2l,c
 20256  01277E  50E2               	movf	fsr1h,w,c
 20257  012780  6EDA               	movwf	fsr2h,c
 20258  012782  0EFF               	movlw	255
 20259  012784  22DA               	addwfc	fsr2h,f,c
 20260  012786  0EFD               	movlw	-3
 20261  012788  50E3               	movf	plusw1,w,c
 20262  01278A  5CDE               	subwf	postinc2,w,c
 20263  01278C  B0D8               	btfsc	status,0,c
 20264  01278E  D0A4               	goto	l6363
 20265                           
 20266                           ;stkvar	_signs @ sp[(-4)+3]
 20267  012790  0EFF               	movlw	-1
 20268  012792  ACE3               	btfss	plusw1,6,c
 20269  012794  D002               	goto	l6333
 20270                           
 20271                           ;stkvar	_signs @ sp[(-4)+3]
 20272  012796  0EFF               	movlw	-1
 20273  012798  7EE3               	btg	plusw1,7,c
 20274  01279A                     l6333:
 20275                           
 20276                           ;stkvar	_bexp @ sp[(-4)+1]
 20277                           ;stkvar	_grs @ sp[(-4)+0]
 20278  01279A  0EFD               	movlw	-3
 20279  01279C  006F FF8C  F032    	movff	plusw1,btemp
 20280  0127A2  0EFC               	movlw	-4
 20281  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20282                           
 20283                           ;stkvar	_aexp @ sp[(-4)+2]
 20284                           ;stkvar	_bexp @ sp[(-4)+1]
 20285  0127AA  0EFE               	movlw	-2
 20286  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 20287  0127B2  0EFD               	movlw	-3
 20288  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20289                           
 20290                           ;stkvar	_grs @ sp[(-4)+0]
 20291                           ;stkvar	_aexp @ sp[(-4)+2]
 20292  0127BA  0EFC               	movlw	-4
 20293  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 20294  0127C2  0EFE               	movlw	-2
 20295  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20296                           
 20297                           ;stkvar	_b @ sp[(-4)+-4]
 20298                           ;stkvar	_grs @ sp[(-4)+0]
 20299  0127CA  0EF8               	movlw	-8
 20300  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 20301  0127D2  0EFC               	movlw	-4
 20302  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20303                           
 20304                           ;stkvar	_a @ sp[(-4)+-8]
 20305                           ;stkvar	_b @ sp[(-4)+-4]
 20306  0127DA  0EF4               	movlw	-12
 20307  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 20308  0127E2  0EF8               	movlw	-8
 20309  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20310                           
 20311                           ;stkvar	_grs @ sp[(-4)+0]
 20312                           ;stkvar	_a @ sp[(-4)+-8]
 20313  0127EA  0EFC               	movlw	-4
 20314  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 20315  0127F2  0EF4               	movlw	-12
 20316  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20317                           
 20318                           ;stkvar	_b @ sp[(-4)+-4]
 20319  0127FA  0EF9               	movlw	249
 20320  0127FC  24E1               	addwf	fsr1l,w,c
 20321  0127FE  6ED9               	movwf	fsr2l,c
 20322  012800  0EFF               	movlw	255
 20323  012802  20E2               	addwfc	fsr1h,w,c
 20324  012804  6EDA               	movwf	fsr2h,c
 20325  012806  50DF               	movf	indf2,w,c
 20326  012808  6E3D               	movwf	(btemp+11)^0,c
 20327                           
 20328                           ;stkvar	_grs @ sp[(-4)+0]
 20329  01280A  0EFC               	movlw	-4
 20330  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20331                           
 20332                           ;stkvar	_a @ sp[(-4)+-8]
 20333  012812  0EF5               	movlw	245
 20334  012814  24E1               	addwf	fsr1l,w,c
 20335  012816  6ED9               	movwf	fsr2l,c
 20336  012818  0EFF               	movlw	255
 20337  01281A  20E2               	addwfc	fsr1h,w,c
 20338  01281C  6EDA               	movwf	fsr2h,c
 20339                           
 20340                           ;stkvar	_b @ sp[(-4)+-4]
 20341  01281E  0EF9               	movlw	249
 20342  012820  24E1               	addwf	fsr1l,w,c
 20343  012822  6EE9               	movwf	fsr0l,c
 20344  012824  0EFF               	movlw	255
 20345  012826  20E2               	addwfc	fsr1h,w,c
 20346  012828  6EEA               	movwf	fsr0h,c
 20347  01282A  006F FF7F FFEF     	movff	indf2,indf0
 20348                           
 20349                           ;stkvar	_grs @ sp[(-4)+0]
 20350                           ;stkvar	_a @ sp[(-4)+-8]
 20351  012830  0EF5               	movlw	245
 20352  012832  24E1               	addwf	fsr1l,w,c
 20353  012834  6ED9               	movwf	fsr2l,c
 20354  012836  0EFF               	movlw	255
 20355  012838  20E2               	addwfc	fsr1h,w,c
 20356  01283A  6EDA               	movwf	fsr2h,c
 20357  01283C  0EFC               	movlw	-4
 20358  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 20359                           
 20360                           ;stkvar	_b @ sp[(-4)+-4]
 20361  012844  0EFA               	movlw	250
 20362  012846  24E1               	addwf	fsr1l,w,c
 20363  012848  6ED9               	movwf	fsr2l,c
 20364  01284A  0EFF               	movlw	255
 20365  01284C  20E2               	addwfc	fsr1h,w,c
 20366  01284E  6EDA               	movwf	fsr2h,c
 20367  012850  50DF               	movf	indf2,w,c
 20368  012852  6E3D               	movwf	(btemp+11)^0,c
 20369                           
 20370                           ;stkvar	_grs @ sp[(-4)+0]
 20371  012854  0EFC               	movlw	-4
 20372  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20373                           
 20374                           ;stkvar	_a @ sp[(-4)+-8]
 20375  01285C  0EF6               	movlw	246
 20376  01285E  24E1               	addwf	fsr1l,w,c
 20377  012860  6ED9               	movwf	fsr2l,c
 20378  012862  0EFF               	movlw	255
 20379  012864  20E2               	addwfc	fsr1h,w,c
 20380  012866  6EDA               	movwf	fsr2h,c
 20381                           
 20382                           ;stkvar	_b @ sp[(-4)+-4]
 20383  012868  0EFA               	movlw	250
 20384  01286A  24E1               	addwf	fsr1l,w,c
 20385  01286C  6EE9               	movwf	fsr0l,c
 20386  01286E  0EFF               	movlw	255
 20387  012870  20E2               	addwfc	fsr1h,w,c
 20388  012872  6EEA               	movwf	fsr0h,c
 20389  012874  006F FF7F FFEF     	movff	indf2,indf0
 20390                           
 20391                           ;stkvar	_grs @ sp[(-4)+0]
 20392                           ;stkvar	_a @ sp[(-4)+-8]
 20393  01287A  0EF6               	movlw	246
 20394  01287C  24E1               	addwf	fsr1l,w,c
 20395  01287E  6ED9               	movwf	fsr2l,c
 20396  012880  0EFF               	movlw	255
 20397  012882  20E2               	addwfc	fsr1h,w,c
 20398  012884  6EDA               	movwf	fsr2h,c
 20399  012886  0EFC               	movlw	-4
 20400  012888  006F FF8F FFDF     	movff	plusw1,indf2
 20401                           
 20402                           ;stkvar	_b @ sp[(-4)+-4]
 20403  01288E  0EFB               	movlw	251
 20404  012890  24E1               	addwf	fsr1l,w,c
 20405  012892  6ED9               	movwf	fsr2l,c
 20406  012894  0EFF               	movlw	255
 20407  012896  20E2               	addwfc	fsr1h,w,c
 20408  012898  6EDA               	movwf	fsr2h,c
 20409  01289A  50DF               	movf	indf2,w,c
 20410  01289C  6E3D               	movwf	(btemp+11)^0,c
 20411                           
 20412                           ;stkvar	_grs @ sp[(-4)+0]
 20413  01289E  0EFC               	movlw	-4
 20414  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20415                           
 20416                           ;stkvar	_a @ sp[(-4)+-8]
 20417  0128A6  0EF7               	movlw	247
 20418  0128A8  24E1               	addwf	fsr1l,w,c
 20419  0128AA  6ED9               	movwf	fsr2l,c
 20420  0128AC  0EFF               	movlw	255
 20421  0128AE  20E2               	addwfc	fsr1h,w,c
 20422  0128B0  6EDA               	movwf	fsr2h,c
 20423                           
 20424                           ;stkvar	_b @ sp[(-4)+-4]
 20425  0128B2  0EFB               	movlw	251
 20426  0128B4  24E1               	addwf	fsr1l,w,c
 20427  0128B6  6EE9               	movwf	fsr0l,c
 20428  0128B8  0EFF               	movlw	255
 20429  0128BA  20E2               	addwfc	fsr1h,w,c
 20430  0128BC  6EEA               	movwf	fsr0h,c
 20431  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 20432                           
 20433                           ;stkvar	_grs @ sp[(-4)+0]
 20434                           ;stkvar	_a @ sp[(-4)+-8]
 20435  0128C4  0EF7               	movlw	247
 20436  0128C6  24E1               	addwf	fsr1l,w,c
 20437  0128C8  6ED9               	movwf	fsr2l,c
 20438  0128CA  0EFF               	movlw	255
 20439  0128CC  20E2               	addwfc	fsr1h,w,c
 20440  0128CE  6EDA               	movwf	fsr2h,c
 20441  0128D0  0EFC               	movlw	-4
 20442  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 20443  0128D8                     l6363:
 20444                           
 20445                           ;stkvar	_grs @ sp[(-4)+0]
 20446  0128D8  0EFC               	movlw	-4
 20447  0128DA  6AE3               	clrf	plusw1,c
 20448                           
 20449                           ;stkvar	_aexp @ sp[(-4)+2]
 20450  0128DC  0EFE               	movlw	-2
 20451  0128DE  50E3               	movf	plusw1,w,c
 20452  0128E0  6E3C               	movwf	(btemp+10)^0,c
 20453  0128E2  6A3D               	clrf	(btemp+11)^0,c
 20454                           
 20455                           ;stkvar	_bexp @ sp[(-4)+1]
 20456  0128E4  0EFD               	movlw	-3
 20457  0128E6  50E3               	movf	plusw1,w,c
 20458  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 20459  0128EA  0E00               	movlw	0
 20460  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 20461  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 20462  0128F0  D062               	goto	l6387
 20463  0128F2  503D               	movf	(btemp+11)^0,w,c
 20464  0128F4  E104               	bnz	u4680
 20465  0128F6  0E1A               	movlw	26
 20466  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 20467  0128FA  A0D8               	btfss	status,0,c
 20468  0128FC  D05C               	goto	l6387
 20469  0128FE                     u4680:
 20470                           
 20471                           ;stkvar	_b @ sp[(-4)+-4]
 20472  0128FE  0EF8               	movlw	-8
 20473  012900  50E3               	movf	plusw1,w,c
 20474  012902  E10A               	bnz	u4691
 20475  012904  0EF9               	movlw	-7
 20476  012906  50E3               	movf	plusw1,w,c
 20477  012908  E107               	bnz	u4691
 20478  01290A  0EFA               	movlw	-6
 20479  01290C  50E3               	movf	plusw1,w,c
 20480  01290E  E104               	bnz	u4691
 20481  012910  0EFB               	movlw	-5
 20482  012912  50E3               	movf	plusw1,w,c
 20483  012914  B4D8               	btfsc	status,2,c
 20484  012916  D003               	goto	u4690
 20485  012918                     u4691:
 20486  012918  6A3D               	clrf	(btemp+11)^0,c
 20487  01291A  2A3D               	incf	(btemp+11)^0,f,c
 20488  01291C  D001               	goto	u4708
 20489  01291E                     u4690:
 20490  01291E  6A3D               	clrf	(btemp+11)^0,c
 20491  012920                     u4708:
 20492                           
 20493                           ;stkvar	_grs @ sp[(-4)+0]
 20494  012920  0EFC               	movlw	-4
 20495  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20496                           
 20497                           ;stkvar	_b @ sp[(-4)+-4]
 20498  012928  0EF8               	movlw	-8
 20499  01292A  6AE3               	clrf	plusw1,c
 20500  01292C  0EF9               	movlw	-7
 20501  01292E  6AE3               	clrf	plusw1,c
 20502  012930  0EFA               	movlw	-6
 20503  012932  6AE3               	clrf	plusw1,c
 20504  012934  0EFB               	movlw	-5
 20505  012936  6AE3               	clrf	plusw1,c
 20506                           
 20507                           ;stkvar	_aexp @ sp[(-4)+2]
 20508                           ;stkvar	_bexp @ sp[(-4)+1]
 20509  012938  0EFE               	movlw	-2
 20510  01293A  006F FF8C  F032    	movff	plusw1,btemp
 20511  012940  0EFD               	movlw	-3
 20512  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 20513  012948  D042               	goto	u4740
 20514  01294A                     l6373:
 20515                           
 20516                           ;stkvar	_grs @ sp[(-4)+0]
 20517  01294A  0EFC               	movlw	-4
 20518  01294C  A0E3               	btfss	plusw1,0,c
 20519  01294E  D00D               	goto	l6377
 20520                           
 20521                           ;stkvar	_grs @ sp[(-4)+0]
 20522  012950  0EFC               	movlw	-4
 20523  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 20524  012958  90D8               	bcf	status,0,c
 20525  01295A  323D               	rrcf	(btemp+11)^0,f,c
 20526  01295C  0E01               	movlw	1
 20527  01295E  123D               	iorwf	(btemp+11)^0,f,c
 20528                           
 20529                           ;stkvar	_grs @ sp[(-4)+0]
 20530  012960  0EFC               	movlw	-4
 20531  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20532  012968  D009               	goto	l6379
 20533  01296A                     l6377:
 20534                           
 20535                           ;stkvar	_grs @ sp[(-4)+0]
 20536  01296A  50E1               	movf	fsr1l,w,c
 20537  01296C  0FFC               	addlw	-4
 20538  01296E  6ED9               	movwf	fsr2l,c
 20539  012970  50E2               	movf	fsr1h,w,c
 20540  012972  6EDA               	movwf	fsr2h,c
 20541  012974  0EFF               	movlw	255
 20542  012976  22DA               	addwfc	fsr2h,f,c
 20543  012978  90D8               	bcf	status,0,c
 20544  01297A  32DF               	rrcf	indf2,f,c
 20545  01297C                     l6379:
 20546                           
 20547                           ;stkvar	_b @ sp[(-4)+-4]
 20548  01297C  0EF8               	movlw	-8
 20549  01297E  A0E3               	btfss	plusw1,0,c
 20550  012980  D002               	goto	l6383
 20551                           
 20552                           ;stkvar	_grs @ sp[(-4)+0]
 20553  012982  0EFC               	movlw	-4
 20554  012984  8EE3               	bsf	plusw1,7,c
 20555  012986                     l6383:
 20556  012986  0E01               	movlw	1
 20557  012988  6E3D               	movwf	(btemp+11)^0,c
 20558                           
 20559                           ;stkvar	_b @ sp[(-4)+-4]
 20560  01298A  50E1               	movf	fsr1l,w,c
 20561  01298C  0FF8               	addlw	-8
 20562  01298E  6ED9               	movwf	fsr2l,c
 20563  012990  50E2               	movf	fsr1h,w,c
 20564  012992  6EDA               	movwf	fsr2h,c
 20565  012994  0EFF               	movlw	255
 20566  012996  22DA               	addwfc	fsr2h,f,c
 20567  012998  283D               	incf	(btemp+11)^0,w,c
 20568  01299A  52DE               	movf	postinc2,f,c
 20569  01299C  D008               	goto	u4730
 20570  01299E                     u4735:
 20571  01299E  52DE               	movf	postinc2,f,c
 20572  0129A0  90D8               	bcf	status,0,c
 20573  0129A2  BEDC               	btfsc	preinc2,7,c
 20574  0129A4  80D8               	bsf	status,0,c
 20575  0129A6  32DD               	rrcf	postdec2,f,c
 20576  0129A8  32DD               	rrcf	postdec2,f,c
 20577  0129AA  32DD               	rrcf	postdec2,f,c
 20578  0129AC  32DE               	rrcf	postinc2,f,c
 20579  0129AE                     u4730:
 20580  0129AE  2EE8               	decfsz	wreg,f,c
 20581  0129B0  D7F6               	goto	u4735
 20582                           
 20583                           ;stkvar	_bexp @ sp[(-4)+1]
 20584  0129B2  0EFD               	movlw	-3
 20585  0129B4  2AE3               	incf	plusw1,f,c
 20586  0129B6                     l6387:
 20587                           
 20588                           ;stkvar	_aexp @ sp[(-4)+2]
 20589                           ;stkvar	_bexp @ sp[(-4)+1]
 20590  0129B6  50E1               	movf	fsr1l,w,c
 20591  0129B8  0FFD               	addlw	-3
 20592  0129BA  6ED9               	movwf	fsr2l,c
 20593  0129BC  50E2               	movf	fsr1h,w,c
 20594  0129BE  6EDA               	movwf	fsr2h,c
 20595  0129C0  0EFF               	movlw	255
 20596  0129C2  22DA               	addwfc	fsr2h,f,c
 20597  0129C4  0EFE               	movlw	-2
 20598  0129C6  50E3               	movf	plusw1,w,c
 20599  0129C8  5CDE               	subwf	postinc2,w,c
 20600  0129CA  A0D8               	btfss	status,0,c
 20601  0129CC  D7BE               	goto	l6373
 20602  0129CE                     u4740:
 20603                           
 20604                           ;stkvar	_signs @ sp[(-4)+3]
 20605  0129CE  0EFF               	movlw	-1
 20606  0129D0  BCE3               	btfsc	plusw1,6,c
 20607  0129D2  D066               	goto	l6415
 20608                           
 20609                           ;stkvar	_bexp @ sp[(-4)+1]
 20610  0129D4  0EFD               	movlw	-3
 20611  0129D6  50E3               	movf	plusw1,w,c
 20612  0129D8  B4D8               	btfsc	status,2,c
 20613  0129DA  D0F2               	goto	u4840
 20614                           
 20615                           ;stkvar	_a @ sp[(-4)+-8]
 20616                           ;stkvar	_b @ sp[(-4)+-4]
 20617  0129DC  0EF8               	movlw	-8
 20618  0129DE  50E3               	movf	plusw1,w,c
 20619  0129E0  6E32               	movwf	btemp^0,c
 20620  0129E2  0EF4               	movlw	-12
 20621  0129E4  50E3               	movf	plusw1,w,c
 20622  0129E6  2632               	addwf	btemp^0,f,c
 20623  0129E8  0EF8               	movlw	-8
 20624  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 20625  0129F0  0EF9               	movlw	-7
 20626  0129F2  50E3               	movf	plusw1,w,c
 20627  0129F4  6E32               	movwf	btemp^0,c
 20628  0129F6  0EF5               	movlw	-11
 20629  0129F8  50E3               	movf	plusw1,w,c
 20630  0129FA  2232               	addwfc	btemp^0,f,c
 20631  0129FC  0EF9               	movlw	-7
 20632  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 20633  012A04  0EFA               	movlw	-6
 20634  012A06  50E3               	movf	plusw1,w,c
 20635  012A08  6E32               	movwf	btemp^0,c
 20636  012A0A  0EF6               	movlw	-10
 20637  012A0C  50E3               	movf	plusw1,w,c
 20638  012A0E  2232               	addwfc	btemp^0,f,c
 20639  012A10  0EFA               	movlw	-6
 20640  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 20641  012A18  0EFB               	movlw	-5
 20642  012A1A  50E3               	movf	plusw1,w,c
 20643  012A1C  6E32               	movwf	btemp^0,c
 20644  012A1E  0EF7               	movlw	-9
 20645  012A20  50E3               	movf	plusw1,w,c
 20646  012A22  2232               	addwfc	btemp^0,f,c
 20647  012A24  0EFB               	movlw	-5
 20648  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 20649                           
 20650                           ;stkvar	_b @ sp[(-4)+-4]
 20651  012A2C  0EFB               	movlw	-5
 20652  012A2E  A0E3               	btfss	plusw1,0,c
 20653  012A30  D101               	goto	u4880
 20654                           
 20655                           ;stkvar	_grs @ sp[(-4)+0]
 20656  012A32  0EFC               	movlw	-4
 20657  012A34  A0E3               	btfss	plusw1,0,c
 20658  012A36  D00D               	goto	l6405
 20659                           
 20660                           ;stkvar	_grs @ sp[(-4)+0]
 20661  012A38  0EFC               	movlw	-4
 20662  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 20663  012A40  90D8               	bcf	status,0,c
 20664  012A42  323D               	rrcf	(btemp+11)^0,f,c
 20665  012A44  0E01               	movlw	1
 20666  012A46  123D               	iorwf	(btemp+11)^0,f,c
 20667                           
 20668                           ;stkvar	_grs @ sp[(-4)+0]
 20669  012A48  0EFC               	movlw	-4
 20670  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20671  012A50  D009               	goto	l6407
 20672  012A52                     l6405:
 20673                           
 20674                           ;stkvar	_grs @ sp[(-4)+0]
 20675  012A52  50E1               	movf	fsr1l,w,c
 20676  012A54  0FFC               	addlw	-4
 20677  012A56  6ED9               	movwf	fsr2l,c
 20678  012A58  50E2               	movf	fsr1h,w,c
 20679  012A5A  6EDA               	movwf	fsr2h,c
 20680  012A5C  0EFF               	movlw	255
 20681  012A5E  22DA               	addwfc	fsr2h,f,c
 20682  012A60  90D8               	bcf	status,0,c
 20683  012A62  32DF               	rrcf	indf2,f,c
 20684  012A64                     l6407:
 20685                           
 20686                           ;stkvar	_b @ sp[(-4)+-4]
 20687  012A64  0EF8               	movlw	-8
 20688  012A66  A0E3               	btfss	plusw1,0,c
 20689  012A68  D002               	goto	l6411
 20690                           
 20691                           ;stkvar	_grs @ sp[(-4)+0]
 20692  012A6A  0EFC               	movlw	-4
 20693  012A6C  8EE3               	bsf	plusw1,7,c
 20694  012A6E                     l6411:
 20695  012A6E  0E01               	movlw	1
 20696  012A70  6E3D               	movwf	(btemp+11)^0,c
 20697                           
 20698                           ;stkvar	_b @ sp[(-4)+-4]
 20699  012A72  50E1               	movf	fsr1l,w,c
 20700  012A74  0FF8               	addlw	-8
 20701  012A76  6ED9               	movwf	fsr2l,c
 20702  012A78  50E2               	movf	fsr1h,w,c
 20703  012A7A  6EDA               	movwf	fsr2h,c
 20704  012A7C  0EFF               	movlw	255
 20705  012A7E  22DA               	addwfc	fsr2h,f,c
 20706  012A80  283D               	incf	(btemp+11)^0,w,c
 20707  012A82  52DE               	movf	postinc2,f,c
 20708  012A84  D008               	goto	u4800
 20709  012A86                     u4805:
 20710  012A86  52DE               	movf	postinc2,f,c
 20711  012A88  90D8               	bcf	status,0,c
 20712  012A8A  BEDC               	btfsc	preinc2,7,c
 20713  012A8C  80D8               	bsf	status,0,c
 20714  012A8E  32DD               	rrcf	postdec2,f,c
 20715  012A90  32DD               	rrcf	postdec2,f,c
 20716  012A92  32DD               	rrcf	postdec2,f,c
 20717  012A94  32DE               	rrcf	postinc2,f,c
 20718  012A96                     u4800:
 20719  012A96  2EE8               	decfsz	wreg,f,c
 20720  012A98  D7F6               	goto	u4805
 20721                           
 20722                           ;stkvar	_bexp @ sp[(-4)+1]
 20723  012A9A  0EFD               	movlw	-3
 20724  012A9C  2AE3               	incf	plusw1,f,c
 20725  012A9E  D0CA               	goto	u4880
 20726  012AA0                     l6415:
 20727                           
 20728                           ;stkvar	_a @ sp[(-4)+-8]
 20729                           ;stkvar	_b @ sp[(-4)+-4]
 20730  012AA0  50E1               	movf	fsr1l,w,c
 20731  012AA2  0FF8               	addlw	-8
 20732  012AA4  6ED9               	movwf	fsr2l,c
 20733  012AA6  50E2               	movf	fsr1h,w,c
 20734  012AA8  6EDA               	movwf	fsr2h,c
 20735  012AAA  0EFF               	movlw	255
 20736  012AAC  22DA               	addwfc	fsr2h,f,c
 20737  012AAE  0EF4               	movlw	-12
 20738  012AB0  50E3               	movf	plusw1,w,c
 20739  012AB2  5CDE               	subwf	postinc2,w,c
 20740  012AB4  0EF5               	movlw	-11
 20741  012AB6  50E3               	movf	plusw1,w,c
 20742  012AB8  58DE               	subwfb	postinc2,w,c
 20743  012ABA  0EF6               	movlw	-10
 20744  012ABC  50E3               	movf	plusw1,w,c
 20745  012ABE  58DE               	subwfb	postinc2,w,c
 20746  012AC0  50DE               	movf	postinc2,w,c
 20747  012AC2  0A80               	xorlw	128
 20748  012AC4  6E32               	movwf	btemp^0,c
 20749  012AC6  0EF7               	movlw	-9
 20750  012AC8  50E3               	movf	plusw1,w,c
 20751  012ACA  0A80               	xorlw	128
 20752  012ACC  5832               	subwfb	btemp^0,w,c
 20753  012ACE  B0D8               	btfsc	status,0,c
 20754  012AD0  D053               	goto	l6427
 20755                           
 20756                           ;stkvar	_b @ sp[(-4)+-4]
 20757                           ;stkvar	_a @ sp[(-4)+-8]
 20758  012AD2  0EF4               	movlw	-12
 20759  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 20760  012ADA  0EF5               	movlw	-11
 20761  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 20762  012AE2  0EF6               	movlw	-10
 20763  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 20764  012AEA  0EF7               	movlw	-9
 20765  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20766  012AF2  0EF8               	movlw	-8
 20767  012AF4  50E3               	movf	plusw1,w,c
 20768  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 20769  012AF8  0EF9               	movlw	-7
 20770  012AFA  50E3               	movf	plusw1,w,c
 20771  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 20772  012AFE  0EFA               	movlw	-6
 20773  012B00  50E3               	movf	plusw1,w,c
 20774  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 20775  012B04  0EFB               	movlw	-5
 20776  012B06  50E3               	movf	plusw1,w,c
 20777  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 20778  012B0A  0EFF               	movlw	255
 20779  012B0C  243A               	addwf	(btemp+8)^0,w,c
 20780  012B0E  6E36               	movwf	(btemp+4)^0,c
 20781  012B10  0EFF               	movlw	255
 20782  012B12  203B               	addwfc	(btemp+9)^0,w,c
 20783  012B14  6E37               	movwf	(btemp+5)^0,c
 20784  012B16  0EFF               	movlw	255
 20785  012B18  203C               	addwfc	(btemp+10)^0,w,c
 20786  012B1A  6E38               	movwf	(btemp+6)^0,c
 20787  012B1C  0EFF               	movlw	255
 20788  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 20789  012B20  6E39               	movwf	(btemp+7)^0,c
 20790                           
 20791                           ;stkvar	_b @ sp[(-4)+-4]
 20792  012B22  0EF8               	movlw	-8
 20793  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 20794  012B2A  0EF9               	movlw	-7
 20795  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 20796  012B32  0EFA               	movlw	-6
 20797  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 20798  012B3A  0EFB               	movlw	-5
 20799  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 20800                           
 20801                           ;stkvar	_signs @ sp[(-4)+3]
 20802  012B42  0EFF               	movlw	-1
 20803  012B44  7EE3               	btg	plusw1,7,c
 20804                           
 20805                           ;stkvar	_grs @ sp[(-4)+0]
 20806  012B46  0EFC               	movlw	-4
 20807  012B48  50E3               	movf	plusw1,w,c
 20808  012B4A  0800               	sublw	0
 20809  012B4C  6E3D               	movwf	(btemp+11)^0,c
 20810                           
 20811                           ;stkvar	_grs @ sp[(-4)+0]
 20812  012B4E  0EFC               	movlw	-4
 20813  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20814                           
 20815                           ;stkvar	_grs @ sp[(-4)+0]
 20816  012B56  0EFC               	movlw	-4
 20817  012B58  50E3               	movf	plusw1,w,c
 20818  012B5A  A4D8               	btfss	status,2,c
 20819  012B5C  D020               	goto	l6429
 20820                           
 20821                           ;stkvar	_b @ sp[(-4)+-4]
 20822  012B5E  50E1               	movf	fsr1l,w,c
 20823  012B60  0FF8               	addlw	-8
 20824  012B62  6ED9               	movwf	fsr2l,c
 20825  012B64  50E2               	movf	fsr1h,w,c
 20826  012B66  6EDA               	movwf	fsr2h,c
 20827  012B68  0EFF               	movlw	255
 20828  012B6A  22DA               	addwfc	fsr2h,f,c
 20829  012B6C  2ADE               	incf	postinc2,f,c
 20830  012B6E  0E00               	movlw	0
 20831  012B70  22DE               	addwfc	postinc2,f,c
 20832  012B72  22DE               	addwfc	postinc2,f,c
 20833  012B74  22DE               	addwfc	postinc2,f,c
 20834  012B76  D013               	goto	l6429
 20835  012B78                     l6427:
 20836                           
 20837                           ;stkvar	_a @ sp[(-4)+-8]
 20838                           ;stkvar	_b @ sp[(-4)+-4]
 20839  012B78  50E1               	movf	fsr1l,w,c
 20840  012B7A  0FF8               	addlw	-8
 20841  012B7C  6ED9               	movwf	fsr2l,c
 20842  012B7E  50E2               	movf	fsr1h,w,c
 20843  012B80  6EDA               	movwf	fsr2h,c
 20844  012B82  0EFF               	movlw	255
 20845  012B84  22DA               	addwfc	fsr2h,f,c
 20846  012B86  0EF4               	movlw	-12
 20847  012B88  50E3               	movf	plusw1,w,c
 20848  012B8A  5EDE               	subwf	postinc2,f,c
 20849  012B8C  0EF5               	movlw	-11
 20850  012B8E  50E3               	movf	plusw1,w,c
 20851  012B90  5ADE               	subwfb	postinc2,f,c
 20852  012B92  0EF6               	movlw	-10
 20853  012B94  50E3               	movf	plusw1,w,c
 20854  012B96  5ADE               	subwfb	postinc2,f,c
 20855  012B98  0EF7               	movlw	-9
 20856  012B9A  50E3               	movf	plusw1,w,c
 20857  012B9C  5ADE               	subwfb	postinc2,f,c
 20858  012B9E                     l6429:
 20859                           
 20860                           ;stkvar	_b @ sp[(-4)+-4]
 20861  012B9E  0EF8               	movlw	-8
 20862  012BA0  50E3               	movf	plusw1,w,c
 20863  012BA2  E145               	bnz	l6451
 20864  012BA4  0EF9               	movlw	-7
 20865  012BA6  50E3               	movf	plusw1,w,c
 20866  012BA8  E142               	bnz	l6451
 20867  012BAA  0EFA               	movlw	-6
 20868  012BAC  50E3               	movf	plusw1,w,c
 20869  012BAE  E13F               	bnz	l6451
 20870  012BB0  0EFB               	movlw	-5
 20871  012BB2  50E3               	movf	plusw1,w,c
 20872  012BB4  A4D8               	btfss	status,2,c
 20873  012BB6  D03B               	goto	l6451
 20874                           
 20875                           ;stkvar	_grs @ sp[(-4)+0]
 20876  012BB8  0EFC               	movlw	-4
 20877  012BBA  50E3               	movf	plusw1,w,c
 20878  012BBC  A4D8               	btfss	status,2,c
 20879  012BBE  D037               	goto	l6451
 20880  012BC0                     u4840:
 20881  012BC0  0E00               	movlw	0
 20882  012BC2  6E32               	movwf	btemp^0,c
 20883  012BC4  0E00               	movlw	0
 20884  012BC6  6E33               	movwf	(btemp+1)^0,c
 20885  012BC8  0E00               	movlw	0
 20886  012BCA  6E34               	movwf	(btemp+2)^0,c
 20887  012BCC  0E00               	movlw	0
 20888  012BCE  6E35               	movwf	(btemp+3)^0,c
 20889  012BD0  D0C6               	goto	l2615
 20890  012BD2                     l6437:
 20891                           
 20892                           ;stkvar	_b @ sp[(-4)+-4]
 20893  012BD2  90D8               	bcf	status,0,c
 20894  012BD4  0EF8               	movlw	-8
 20895  012BD6  36E3               	rlcf	plusw1,f,c
 20896  012BD8  0EF9               	movlw	-7
 20897  012BDA  36E3               	rlcf	plusw1,f,c
 20898  012BDC  0EFA               	movlw	-6
 20899  012BDE  36E3               	rlcf	plusw1,f,c
 20900  012BE0  0EFB               	movlw	-5
 20901  012BE2  36E3               	rlcf	plusw1,f,c
 20902                           
 20903                           ;stkvar	_grs @ sp[(-4)+0]
 20904  012BE4  0EFC               	movlw	-4
 20905  012BE6  AEE3               	btfss	plusw1,7,c
 20906  012BE8  D002               	goto	l2627
 20907                           
 20908                           ;stkvar	_b @ sp[(-4)+-4]
 20909  012BEA  0EF8               	movlw	-8
 20910  012BEC  80E3               	bsf	plusw1,0,c
 20911  012BEE                     l2627:
 20912                           
 20913                           ;stkvar	_grs @ sp[(-4)+0]
 20914  012BEE  0EFC               	movlw	-4
 20915  012BF0  A0E3               	btfss	plusw1,0,c
 20916  012BF2  D00E               	goto	l6445
 20917                           
 20918                           ;stkvar	_grs @ sp[(-4)+0]
 20919  012BF4  0EFC               	movlw	-4
 20920  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 20921  012BFC  90D8               	bcf	status,0,c
 20922  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 20923  012C00  6E3C               	movwf	(btemp+10)^0,c
 20924  012C02  0E01               	movlw	1
 20925  012C04  123C               	iorwf	(btemp+10)^0,f,c
 20926                           
 20927                           ;stkvar	_grs @ sp[(-4)+0]
 20928  012C06  0EFC               	movlw	-4
 20929  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20930  012C0E  D009               	goto	l6447
 20931  012C10                     l6445:
 20932                           
 20933                           ;stkvar	_grs @ sp[(-4)+0]
 20934  012C10  50E1               	movf	fsr1l,w,c
 20935  012C12  0FFC               	addlw	-4
 20936  012C14  6ED9               	movwf	fsr2l,c
 20937  012C16  50E2               	movf	fsr1h,w,c
 20938  012C18  6EDA               	movwf	fsr2h,c
 20939  012C1A  0EFF               	movlw	255
 20940  012C1C  22DA               	addwfc	fsr2h,f,c
 20941  012C1E  90D8               	bcf	status,0,c
 20942  012C20  36DF               	rlcf	indf2,f,c
 20943  012C22                     l6447:
 20944                           
 20945                           ;stkvar	_bexp @ sp[(-4)+1]
 20946  012C22  0EFD               	movlw	-3
 20947  012C24  50E3               	movf	plusw1,w,c
 20948  012C26  B4D8               	btfsc	status,2,c
 20949  012C28  D002               	goto	l6451
 20950                           
 20951                           ;stkvar	_bexp @ sp[(-4)+1]
 20952  012C2A  0EFD               	movlw	-3
 20953  012C2C  06E3               	decf	plusw1,f,c
 20954  012C2E                     l6451:
 20955                           
 20956                           ;stkvar	_b @ sp[(-4)+-4]
 20957  012C2E  0EFA               	movlw	-6
 20958  012C30  AEE3               	btfss	plusw1,7,c
 20959  012C32  D7CF               	goto	l6437
 20960  012C34                     u4880:
 20961                           
 20962                           ;stkvar	_aexp @ sp[(-4)+2]
 20963  012C34  0EFE               	movlw	-2
 20964  012C36  6AE3               	clrf	plusw1,c
 20965                           
 20966                           ;stkvar	_grs @ sp[(-4)+0]
 20967  012C38  0EFC               	movlw	-4
 20968  012C3A  AEE3               	btfss	plusw1,7,c
 20969  012C3C  D00F               	goto	l6465
 20970                           
 20971                           ;stkvar	_grs @ sp[(-4)+0]
 20972  012C3E  0EFC               	movlw	-4
 20973  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 20974  012C46  0E7F               	movlw	127
 20975  012C48  163D               	andwf	(btemp+11)^0,f,c
 20976  012C4A  B4D8               	btfsc	status,2,c
 20977  012C4C  D004               	goto	l6461
 20978  012C4E                     u4900:
 20979                           
 20980                           ;stkvar	_aexp @ sp[(-4)+2]
 20981  012C4E  0EFE               	movlw	-2
 20982  012C50  6AE3               	clrf	plusw1,c
 20983  012C52  2AE3               	incf	plusw1,f,c
 20984  012C54  D003               	goto	l6465
 20985  012C56                     l6461:
 20986                           
 20987                           ;stkvar	_b @ sp[(-4)+-4]
 20988  012C56  0EF8               	movlw	-8
 20989  012C58  B0E3               	btfsc	plusw1,0,c
 20990  012C5A  D7F9               	goto	u4900
 20991  012C5C                     l6465:
 20992                           
 20993                           ;stkvar	_aexp @ sp[(-4)+2]
 20994  012C5C  0EFE               	movlw	-2
 20995  012C5E  50E3               	movf	plusw1,w,c
 20996  012C60  B4D8               	btfsc	status,2,c
 20997  012C62  D02B               	goto	l6477
 20998                           
 20999                           ;stkvar	_b @ sp[(-4)+-4]
 21000  012C64  50E1               	movf	fsr1l,w,c
 21001  012C66  0FF8               	addlw	-8
 21002  012C68  6ED9               	movwf	fsr2l,c
 21003  012C6A  50E2               	movf	fsr1h,w,c
 21004  012C6C  6EDA               	movwf	fsr2h,c
 21005  012C6E  0EFF               	movlw	255
 21006  012C70  22DA               	addwfc	fsr2h,f,c
 21007  012C72  2ADE               	incf	postinc2,f,c
 21008  012C74  0E00               	movlw	0
 21009  012C76  22DE               	addwfc	postinc2,f,c
 21010  012C78  22DE               	addwfc	postinc2,f,c
 21011  012C7A  22DE               	addwfc	postinc2,f,c
 21012                           
 21013                           ;stkvar	_b @ sp[(-4)+-4]
 21014  012C7C  0EFB               	movlw	-5
 21015  012C7E  A0E3               	btfss	plusw1,0,c
 21016  012C80  D01C               	goto	l6477
 21017  012C82  0E01               	movlw	1
 21018  012C84  6E3D               	movwf	(btemp+11)^0,c
 21019                           
 21020                           ;stkvar	_b @ sp[(-4)+-4]
 21021  012C86  50E1               	movf	fsr1l,w,c
 21022  012C88  0FF8               	addlw	-8
 21023  012C8A  6ED9               	movwf	fsr2l,c
 21024  012C8C  50E2               	movf	fsr1h,w,c
 21025  012C8E  6EDA               	movwf	fsr2h,c
 21026  012C90  0EFF               	movlw	255
 21027  012C92  22DA               	addwfc	fsr2h,f,c
 21028  012C94  283D               	incf	(btemp+11)^0,w,c
 21029  012C96  52DE               	movf	postinc2,f,c
 21030  012C98  D008               	goto	u4940
 21031  012C9A                     u4945:
 21032  012C9A  52DE               	movf	postinc2,f,c
 21033  012C9C  90D8               	bcf	status,0,c
 21034  012C9E  BEDC               	btfsc	preinc2,7,c
 21035  012CA0  80D8               	bsf	status,0,c
 21036  012CA2  32DD               	rrcf	postdec2,f,c
 21037  012CA4  32DD               	rrcf	postdec2,f,c
 21038  012CA6  32DD               	rrcf	postdec2,f,c
 21039  012CA8  32DE               	rrcf	postinc2,f,c
 21040  012CAA                     u4940:
 21041  012CAA  2EE8               	decfsz	wreg,f,c
 21042  012CAC  D7F6               	goto	u4945
 21043                           
 21044                           ;stkvar	_bexp @ sp[(-4)+1]
 21045  012CAE  0EFD               	movlw	-3
 21046  012CB0  28E3               	incf	plusw1,w,c
 21047  012CB2  B4D8               	btfsc	status,2,c
 21048  012CB4  D002               	goto	l6477
 21049                           
 21050                           ;stkvar	_bexp @ sp[(-4)+1]
 21051  012CB6  0EFD               	movlw	-3
 21052  012CB8  2AE3               	incf	plusw1,f,c
 21053  012CBA                     l6477:
 21054                           
 21055                           ;stkvar	_bexp @ sp[(-4)+1]
 21056  012CBA  0EFD               	movlw	-3
 21057  012CBC  28E3               	incf	plusw1,w,c
 21058  012CBE  B4D8               	btfsc	status,2,c
 21059  012CC0  D004               	goto	u4970
 21060                           
 21061                           ;stkvar	_bexp @ sp[(-4)+1]
 21062  012CC2  0EFD               	movlw	-3
 21063  012CC4  50E3               	movf	plusw1,w,c
 21064  012CC6  A4D8               	btfss	status,2,c
 21065  012CC8  D00E               	goto	l6487
 21066  012CCA                     u4970:
 21067                           
 21068                           ;stkvar	_b @ sp[(-4)+-4]
 21069  012CCA  0EF8               	movlw	-8
 21070  012CCC  6AE3               	clrf	plusw1,c
 21071  012CCE  0EF9               	movlw	-7
 21072  012CD0  6AE3               	clrf	plusw1,c
 21073  012CD2  0EFA               	movlw	-6
 21074  012CD4  6AE3               	clrf	plusw1,c
 21075  012CD6  0EFB               	movlw	-5
 21076  012CD8  6AE3               	clrf	plusw1,c
 21077                           
 21078                           ;stkvar	_bexp @ sp[(-4)+1]
 21079  012CDA  0EFD               	movlw	-3
 21080  012CDC  50E3               	movf	plusw1,w,c
 21081  012CDE  A4D8               	btfss	status,2,c
 21082  012CE0  D002               	goto	l6487
 21083                           
 21084                           ;stkvar	_signs @ sp[(-4)+3]
 21085  012CE2  0EFF               	movlw	-1
 21086  012CE4  6AE3               	clrf	plusw1,c
 21087  012CE6                     l6487:
 21088                           
 21089                           ;stkvar	_bexp @ sp[(-4)+1]
 21090  012CE6  0EFD               	movlw	-3
 21091  012CE8  A0E3               	btfss	plusw1,0,c
 21092  012CEA  D009               	goto	l6491
 21093                           
 21094                           ;stkvar	_b @ sp[(-4)+-4]
 21095  012CEC  0EFA               	movlw	250
 21096  012CEE  24E1               	addwf	fsr1l,w,c
 21097  012CF0  6ED9               	movwf	fsr2l,c
 21098  012CF2  0EFF               	movlw	255
 21099  012CF4  20E2               	addwfc	fsr1h,w,c
 21100  012CF6  6EDA               	movwf	fsr2h,c
 21101  012CF8  0E00               	movlw	0
 21102  012CFA  8EDB               	bsf	plusw2,7,c
 21103  012CFC  D008               	goto	l6493
 21104  012CFE                     l6491:
 21105                           
 21106                           ;stkvar	_b @ sp[(-4)+-4]
 21107  012CFE  0EFA               	movlw	250
 21108  012D00  24E1               	addwf	fsr1l,w,c
 21109  012D02  6ED9               	movwf	fsr2l,c
 21110  012D04  0EFF               	movlw	255
 21111  012D06  20E2               	addwfc	fsr1h,w,c
 21112  012D08  6EDA               	movwf	fsr2h,c
 21113  012D0A  0E7F               	movlw	127
 21114  012D0C  16DF               	andwf	indf2,f,c
 21115  012D0E                     l6493:
 21116                           
 21117                           ;stkvar	_b @ sp[(-4)+-4]
 21118  012D0E  0EFB               	movlw	251
 21119  012D10  24E1               	addwf	fsr1l,w,c
 21120  012D12  6ED9               	movwf	fsr2l,c
 21121  012D14  0EFF               	movlw	255
 21122  012D16  20E2               	addwfc	fsr1h,w,c
 21123  012D18  6EDA               	movwf	fsr2h,c
 21124                           
 21125                           ;stkvar	_bexp @ sp[(-4)+1]
 21126  012D1A  0EFD               	movlw	-3
 21127  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21128  012D22  90D8               	bcf	status,0,c
 21129  012D24  303D               	rrcf	(btemp+11)^0,w,c
 21130  012D26  6EDF               	movwf	indf2,c
 21131                           
 21132                           ;stkvar	_signs @ sp[(-4)+3]
 21133  012D28  0EFF               	movlw	-1
 21134  012D2A  AEE3               	btfss	plusw1,7,c
 21135  012D2C  D008               	goto	l6499
 21136                           
 21137                           ;stkvar	_b @ sp[(-4)+-4]
 21138  012D2E  0EFB               	movlw	251
 21139  012D30  24E1               	addwf	fsr1l,w,c
 21140  012D32  6ED9               	movwf	fsr2l,c
 21141  012D34  0EFF               	movlw	255
 21142  012D36  20E2               	addwfc	fsr1h,w,c
 21143  012D38  6EDA               	movwf	fsr2h,c
 21144  012D3A  0E00               	movlw	0
 21145  012D3C  8EDB               	bsf	plusw2,7,c
 21146  012D3E                     l6499:
 21147                           
 21148                           ;stkvar	_b @ sp[(-4)+-4]
 21149  012D3E  0EF8               	movlw	-8
 21150  012D40  006F FF8C  F032    	movff	plusw1,btemp
 21151  012D46  0EF9               	movlw	-7
 21152  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 21153  012D4E  0EFA               	movlw	-6
 21154  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 21155  012D56  0EFB               	movlw	-5
 21156  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 21157  012D5E                     l2615:
 21158                           
 21159                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 21160  012D5E  0EF4               	movlw	244
 21161  012D60  26E1               	addwf	fsr1l,f,c
 21162  012D62  0EFF               	movlw	255
 21163  012D64  22E2               	addwfc	fsr1h,f,c
 21164  012D66  0012               	return		;funcret
 21165  012D68                     __end_of___fladd:
 21166                           	opt callstack 0
 21167                           
 21168 ;; *************** function ___flmul *****************
 21169 ;; Defined at:
 21170 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 21171 ;; Parameters:    Size  Location     Type
 21172 ;;  b               4  [STACK] unsigned char 
 21173 ;;  a               4  [STACK] unsigned char 
 21174 ;; Auto vars:     Size  Location     Type
 21175 ;;  prod            4  [STACK] struct .
 21176 ;;  grs             4  [STACK] unsigned long 
 21177 ;;  temp            2  [STACK] struct .
 21178 ;;  bexp            1  [STACK] unsigned char 
 21179 ;;  aexp            1  [STACK] unsigned char 
 21180 ;;  sign            1  [STACK] unsigned char 
 21181 ;; Return value:  Size  Location     Type
 21182 ;;                  4  [STACK] unsigned char 
 21183 ;; Registers used:
 21184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21185 ;; Tracked objects:
 21186 ;;		On entry : 0/39
 21187 ;;		On exit  : 0/0
 21188 ;;		Unchanged: 0/0
 21189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21194 ;;Total ram usage:        0 bytes
 21195 ;; Hardware stack levels used:    1
 21196 ;; Hardware stack levels required when called:    6
 21197 ;; This function calls:
 21198 ;;		Nothing
 21199 ;; This function is called by:
 21200 ;;		_conv_raw_result
 21201 ;;		_lp_filter
 21202 ;;		_calc_model_data
 21203 ;;		_efgtoa
 21204 ;; This function uses a reentrant model
 21205 ;;
 21206                           
 21207                           	psect	text89
 21208  011D82                     __ptext89:
 21209                           	opt callstack 0
 21210  011D82                     ___flmul:
 21211                           	opt callstack 0
 21212                           
 21213                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21214  011D82  0E0D               	movlw	13
 21215  011D84  26E1               	addwf	fsr1l,f,c
 21216  011D86  0E00               	movlw	0
 21217  011D88  22E2               	addwfc	fsr1h,f,c
 21218                           
 21219                           ;stkvar	_b @ sp[(-13)+-4]
 21220                           
 21221                           ;incstack = 0
 21222  011D8A  0EF2               	movlw	242
 21223  011D8C  24E1               	addwf	fsr1l,w,c
 21224  011D8E  6ED9               	movwf	fsr2l,c
 21225  011D90  0EFF               	movlw	255
 21226  011D92  20E2               	addwfc	fsr1h,w,c
 21227  011D94  6EDA               	movwf	fsr2h,c
 21228  011D96  50DF               	movf	indf2,w,c
 21229  011D98  6E3D               	movwf	(btemp+11)^0,c
 21230  011D9A  0E80               	movlw	128
 21231  011D9C  163D               	andwf	(btemp+11)^0,f,c
 21232                           
 21233                           ;stkvar	_sign @ sp[(-13)+12]
 21234  011D9E  0EFF               	movlw	-1
 21235  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21236                           
 21237                           ;stkvar	_b @ sp[(-13)+-4]
 21238  011DA6  0EF2               	movlw	242
 21239  011DA8  24E1               	addwf	fsr1l,w,c
 21240  011DAA  6ED9               	movwf	fsr2l,c
 21241  011DAC  0EFF               	movlw	255
 21242  011DAE  20E2               	addwfc	fsr1h,w,c
 21243  011DB0  6EDA               	movwf	fsr2h,c
 21244  011DB2  50DF               	movf	indf2,w,c
 21245  011DB4  6E3D               	movwf	(btemp+11)^0,c
 21246  011DB6  90D8               	bcf	status,0,c
 21247  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 21248  011DBA  6E3C               	movwf	(btemp+10)^0,c
 21249                           
 21250                           ;stkvar	_bexp @ sp[(-13)+10]
 21251  011DBC  0EFD               	movlw	-3
 21252  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21253                           
 21254                           ;stkvar	_b @ sp[(-13)+-4]
 21255  011DC4  0EF1               	movlw	241
 21256  011DC6  24E1               	addwf	fsr1l,w,c
 21257  011DC8  6ED9               	movwf	fsr2l,c
 21258  011DCA  0EFF               	movlw	255
 21259  011DCC  20E2               	addwfc	fsr1h,w,c
 21260  011DCE  6EDA               	movwf	fsr2h,c
 21261  011DD0  AEDF               	btfss	indf2,7,c
 21262  011DD2  D002               	goto	l6883
 21263                           
 21264                           ;stkvar	_bexp @ sp[(-13)+10]
 21265  011DD4  0EFD               	movlw	-3
 21266  011DD6  80E3               	bsf	plusw1,0,c
 21267  011DD8                     l6883:
 21268                           
 21269                           ;stkvar	_bexp @ sp[(-13)+10]
 21270  011DD8  0EFD               	movlw	-3
 21271  011DDA  50E3               	movf	plusw1,w,c
 21272  011DDC  B4D8               	btfsc	status,2,c
 21273  011DDE  D01F               	goto	l6891
 21274                           
 21275                           ;stkvar	_bexp @ sp[(-13)+10]
 21276  011DE0  0EFD               	movlw	-3
 21277  011DE2  28E3               	incf	plusw1,w,c
 21278  011DE4  A4D8               	btfss	status,2,c
 21279  011DE6  D018               	goto	l6889
 21280  011DE8  0E00               	movlw	0
 21281  011DEA  6E3A               	movwf	(btemp+8)^0,c
 21282  011DEC  0E00               	movlw	0
 21283  011DEE  6E3B               	movwf	(btemp+9)^0,c
 21284  011DF0  0E00               	movlw	0
 21285  011DF2  6E3C               	movwf	(btemp+10)^0,c
 21286  011DF4  0E00               	movlw	0
 21287  011DF6  6E3D               	movwf	(btemp+11)^0,c
 21288                           
 21289                           ;stkvar	_b @ sp[(-13)+-4]
 21290  011DF8  0EEF               	movlw	-17
 21291  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21292  011E00  0EF0               	movlw	-16
 21293  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21294  011E08  0EF1               	movlw	-15
 21295  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21296  011E10  0EF2               	movlw	-14
 21297  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21298  011E18                     l6889:
 21299                           
 21300                           ;stkvar	_b @ sp[(-13)+-4]
 21301  011E18  0EF1               	movlw	-15
 21302  011E1A  8EE3               	bsf	plusw1,7,c
 21303  011E1C  D018               	goto	l6893
 21304  011E1E                     l6891:
 21305  011E1E  0E00               	movlw	0
 21306  011E20  6E3A               	movwf	(btemp+8)^0,c
 21307  011E22  0E00               	movlw	0
 21308  011E24  6E3B               	movwf	(btemp+9)^0,c
 21309  011E26  0E00               	movlw	0
 21310  011E28  6E3C               	movwf	(btemp+10)^0,c
 21311  011E2A  0E00               	movlw	0
 21312  011E2C  6E3D               	movwf	(btemp+11)^0,c
 21313                           
 21314                           ;stkvar	_b @ sp[(-13)+-4]
 21315  011E2E  0EEF               	movlw	-17
 21316  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21317  011E36  0EF0               	movlw	-16
 21318  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21319  011E3E  0EF1               	movlw	-15
 21320  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21321  011E46  0EF2               	movlw	-14
 21322  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21323  011E4E                     l6893:
 21324                           
 21325                           ;stkvar	_a @ sp[(-13)+-8]
 21326  011E4E  0EEE               	movlw	238
 21327  011E50  24E1               	addwf	fsr1l,w,c
 21328  011E52  6ED9               	movwf	fsr2l,c
 21329  011E54  0EFF               	movlw	255
 21330  011E56  20E2               	addwfc	fsr1h,w,c
 21331  011E58  6EDA               	movwf	fsr2h,c
 21332  011E5A  50DF               	movf	indf2,w,c
 21333  011E5C  6E3D               	movwf	(btemp+11)^0,c
 21334  011E5E  0E80               	movlw	128
 21335  011E60  163D               	andwf	(btemp+11)^0,f,c
 21336                           
 21337                           ;stkvar	_sign @ sp[(-13)+12]
 21338  011E62  50E1               	movf	fsr1l,w,c
 21339  011E64  0FFF               	addlw	-1
 21340  011E66  6ED9               	movwf	fsr2l,c
 21341  011E68  50E2               	movf	fsr1h,w,c
 21342  011E6A  6EDA               	movwf	fsr2h,c
 21343  011E6C  0EFF               	movlw	255
 21344  011E6E  22DA               	addwfc	fsr2h,f,c
 21345  011E70  503D               	movf	(btemp+11)^0,w,c
 21346  011E72  1ADF               	xorwf	indf2,f,c
 21347                           
 21348                           ;stkvar	_a @ sp[(-13)+-8]
 21349  011E74  0EEE               	movlw	238
 21350  011E76  24E1               	addwf	fsr1l,w,c
 21351  011E78  6ED9               	movwf	fsr2l,c
 21352  011E7A  0EFF               	movlw	255
 21353  011E7C  20E2               	addwfc	fsr1h,w,c
 21354  011E7E  6EDA               	movwf	fsr2h,c
 21355  011E80  50DF               	movf	indf2,w,c
 21356  011E82  6E3D               	movwf	(btemp+11)^0,c
 21357  011E84  90D8               	bcf	status,0,c
 21358  011E86  343D               	rlcf	(btemp+11)^0,w,c
 21359  011E88  6E3C               	movwf	(btemp+10)^0,c
 21360                           
 21361                           ;stkvar	_aexp @ sp[(-13)+11]
 21362  011E8A  0EFE               	movlw	-2
 21363  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21364                           
 21365                           ;stkvar	_a @ sp[(-13)+-8]
 21366  011E92  0EED               	movlw	237
 21367  011E94  24E1               	addwf	fsr1l,w,c
 21368  011E96  6ED9               	movwf	fsr2l,c
 21369  011E98  0EFF               	movlw	255
 21370  011E9A  20E2               	addwfc	fsr1h,w,c
 21371  011E9C  6EDA               	movwf	fsr2h,c
 21372  011E9E  AEDF               	btfss	indf2,7,c
 21373  011EA0  D002               	goto	l6901
 21374                           
 21375                           ;stkvar	_aexp @ sp[(-13)+11]
 21376  011EA2  0EFE               	movlw	-2
 21377  011EA4  80E3               	bsf	plusw1,0,c
 21378  011EA6                     l6901:
 21379                           
 21380                           ;stkvar	_aexp @ sp[(-13)+11]
 21381  011EA6  0EFE               	movlw	-2
 21382  011EA8  50E3               	movf	plusw1,w,c
 21383  011EAA  B4D8               	btfsc	status,2,c
 21384  011EAC  D01F               	goto	l6909
 21385                           
 21386                           ;stkvar	_aexp @ sp[(-13)+11]
 21387  011EAE  0EFE               	movlw	-2
 21388  011EB0  28E3               	incf	plusw1,w,c
 21389  011EB2  A4D8               	btfss	status,2,c
 21390  011EB4  D018               	goto	l6907
 21391  011EB6  0E00               	movlw	0
 21392  011EB8  6E3A               	movwf	(btemp+8)^0,c
 21393  011EBA  0E00               	movlw	0
 21394  011EBC  6E3B               	movwf	(btemp+9)^0,c
 21395  011EBE  0E00               	movlw	0
 21396  011EC0  6E3C               	movwf	(btemp+10)^0,c
 21397  011EC2  0E00               	movlw	0
 21398  011EC4  6E3D               	movwf	(btemp+11)^0,c
 21399                           
 21400                           ;stkvar	_a @ sp[(-13)+-8]
 21401  011EC6  0EEB               	movlw	-21
 21402  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21403  011ECE  0EEC               	movlw	-20
 21404  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21405  011ED6  0EED               	movlw	-19
 21406  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21407  011EDE  0EEE               	movlw	-18
 21408  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21409  011EE6                     l6907:
 21410                           
 21411                           ;stkvar	_a @ sp[(-13)+-8]
 21412  011EE6  0EED               	movlw	-19
 21413  011EE8  8EE3               	bsf	plusw1,7,c
 21414  011EEA  D018               	goto	l6911
 21415  011EEC                     l6909:
 21416  011EEC  0E00               	movlw	0
 21417  011EEE  6E3A               	movwf	(btemp+8)^0,c
 21418  011EF0  0E00               	movlw	0
 21419  011EF2  6E3B               	movwf	(btemp+9)^0,c
 21420  011EF4  0E00               	movlw	0
 21421  011EF6  6E3C               	movwf	(btemp+10)^0,c
 21422  011EF8  0E00               	movlw	0
 21423  011EFA  6E3D               	movwf	(btemp+11)^0,c
 21424                           
 21425                           ;stkvar	_a @ sp[(-13)+-8]
 21426  011EFC  0EEB               	movlw	-21
 21427  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21428  011F04  0EEC               	movlw	-20
 21429  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21430  011F0C  0EED               	movlw	-19
 21431  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21432  011F14  0EEE               	movlw	-18
 21433  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21434  011F1C                     l6911:
 21435                           
 21436                           ;stkvar	_aexp @ sp[(-13)+11]
 21437  011F1C  0EFE               	movlw	-2
 21438  011F1E  50E3               	movf	plusw1,w,c
 21439  011F20  B4D8               	btfsc	status,2,c
 21440  011F22  D004               	goto	u5910
 21441                           
 21442                           ;stkvar	_bexp @ sp[(-13)+10]
 21443  011F24  0EFD               	movlw	-3
 21444  011F26  50E3               	movf	plusw1,w,c
 21445  011F28  A4D8               	btfss	status,2,c
 21446  011F2A  D009               	goto	l6919
 21447  011F2C                     u5910:
 21448  011F2C  0E00               	movlw	0
 21449  011F2E  6E32               	movwf	btemp^0,c
 21450  011F30  0E00               	movlw	0
 21451  011F32  6E33               	movwf	(btemp+1)^0,c
 21452  011F34  0E00               	movlw	0
 21453  011F36  6E34               	movwf	(btemp+2)^0,c
 21454  011F38  0E00               	movlw	0
 21455  011F3A  6E35               	movwf	(btemp+3)^0,c
 21456  011F3C  D332               	goto	l2696
 21457  011F3E                     l6919:
 21458                           
 21459                           ;stkvar	_b @ sp[(-13)+-4]
 21460  011F3E  0EEF               	movlw	-17
 21461  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 21462                           
 21463                           ;stkvar	_a @ sp[(-13)+-8]
 21464  011F46  0EED               	movlw	237
 21465  011F48  24E1               	addwf	fsr1l,w,c
 21466  011F4A  6ED9               	movwf	fsr2l,c
 21467  011F4C  0EFF               	movlw	255
 21468  011F4E  20E2               	addwfc	fsr1h,w,c
 21469  011F50  6EDA               	movwf	fsr2h,c
 21470  011F52  50DF               	movf	indf2,w,c
 21471  011F54  023D               	mulwf	(btemp+11)^0,c
 21472                           
 21473                           ;stkvar	_temp @ sp[(-13)+8]
 21474  011F56  0EFB               	movlw	-5
 21475  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 21476  011F5E  0EFC               	movlw	-4
 21477  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 21478                           
 21479                           ;stkvar	_temp @ sp[(-13)+8]
 21480  011F66  0EFB               	movlw	-5
 21481  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 21482  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21483  011F74  6A37               	clrf	(btemp+5)^0,c
 21484  011F76  6A38               	clrf	(btemp+6)^0,c
 21485  011F78  6A39               	clrf	(btemp+7)^0,c
 21486                           
 21487                           ;stkvar	_grs @ sp[(-13)+4]
 21488  011F7A  0EF7               	movlw	-9
 21489  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21490  011F82  0EF8               	movlw	-8
 21491  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21492  011F8A  0EF9               	movlw	-7
 21493  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21494  011F92  0EFA               	movlw	-6
 21495  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21496                           
 21497                           ;stkvar	_temp @ sp[(-13)+8]
 21498  011F9A  0EFC               	movlw	252
 21499  011F9C  24E1               	addwf	fsr1l,w,c
 21500  011F9E  6ED9               	movwf	fsr2l,c
 21501  011FA0  0EFF               	movlw	255
 21502  011FA2  20E2               	addwfc	fsr1h,w,c
 21503  011FA4  6EDA               	movwf	fsr2h,c
 21504  011FA6  50DF               	movf	indf2,w,c
 21505  011FA8  6E3D               	movwf	(btemp+11)^0,c
 21506  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21507  011FB0  6A37               	clrf	(btemp+5)^0,c
 21508  011FB2  6A38               	clrf	(btemp+6)^0,c
 21509  011FB4  6A39               	clrf	(btemp+7)^0,c
 21510                           
 21511                           ;stkvar	_prod @ sp[(-13)+0]
 21512  011FB6  0EF3               	movlw	-13
 21513  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21514  011FBE  0EF4               	movlw	-12
 21515  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21516  011FC6  0EF5               	movlw	-11
 21517  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21518  011FCE  0EF6               	movlw	-10
 21519  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21520                           
 21521                           ;stkvar	_b @ sp[(-13)+-4]
 21522  011FD6  0EF0               	movlw	240
 21523  011FD8  24E1               	addwf	fsr1l,w,c
 21524  011FDA  6ED9               	movwf	fsr2l,c
 21525  011FDC  0EFF               	movlw	255
 21526  011FDE  20E2               	addwfc	fsr1h,w,c
 21527  011FE0  6EDA               	movwf	fsr2h,c
 21528  011FE2  50DF               	movf	indf2,w,c
 21529  011FE4  6E3D               	movwf	(btemp+11)^0,c
 21530                           
 21531                           ;stkvar	_a @ sp[(-13)+-8]
 21532  011FE6  0EEC               	movlw	236
 21533  011FE8  24E1               	addwf	fsr1l,w,c
 21534  011FEA  6ED9               	movwf	fsr2l,c
 21535  011FEC  0EFF               	movlw	255
 21536  011FEE  20E2               	addwfc	fsr1h,w,c
 21537  011FF0  6EDA               	movwf	fsr2h,c
 21538  011FF2  50DF               	movf	indf2,w,c
 21539  011FF4  023D               	mulwf	(btemp+11)^0,c
 21540                           
 21541                           ;stkvar	_temp @ sp[(-13)+8]
 21542  011FF6  0EFB               	movlw	-5
 21543  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 21544  011FFE  0EFC               	movlw	-4
 21545  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 21546                           
 21547                           ;stkvar	_grs @ sp[(-13)+4]
 21548  012006  50E1               	movf	fsr1l,w,c
 21549  012008  0FF7               	addlw	-9
 21550  01200A  6ED9               	movwf	fsr2l,c
 21551  01200C  50E2               	movf	fsr1h,w,c
 21552  01200E  6EDA               	movwf	fsr2h,c
 21553  012010  0EFF               	movlw	255
 21554  012012  22DA               	addwfc	fsr2h,f,c
 21555                           
 21556                           ;stkvar	_temp @ sp[(-13)+8]
 21557  012014  0EFB               	movlw	-5
 21558  012016  50E3               	movf	plusw1,w,c
 21559  012018  26DE               	addwf	postinc2,f,c
 21560  01201A  0E00               	movlw	0
 21561  01201C  22DE               	addwfc	postinc2,f,c
 21562  01201E  22DE               	addwfc	postinc2,f,c
 21563  012020  22DE               	addwfc	postinc2,f,c
 21564                           
 21565                           ;stkvar	_prod @ sp[(-13)+0]
 21566  012022  50E1               	movf	fsr1l,w,c
 21567  012024  0FF3               	addlw	-13
 21568  012026  6ED9               	movwf	fsr2l,c
 21569  012028  50E2               	movf	fsr1h,w,c
 21570  01202A  6EDA               	movwf	fsr2h,c
 21571  01202C  0EFF               	movlw	255
 21572  01202E  22DA               	addwfc	fsr2h,f,c
 21573                           
 21574                           ;stkvar	_temp @ sp[(-13)+8]
 21575  012030  0EFC               	movlw	252
 21576  012032  24E1               	addwf	fsr1l,w,c
 21577  012034  6EE9               	movwf	fsr0l,c
 21578  012036  0EFF               	movlw	255
 21579  012038  20E2               	addwfc	fsr1h,w,c
 21580  01203A  6EEA               	movwf	fsr0h,c
 21581  01203C  50EF               	movf	indf0,w,c
 21582  01203E  26DE               	addwf	postinc2,f,c
 21583  012040  0E00               	movlw	0
 21584  012042  22DE               	addwfc	postinc2,f,c
 21585  012044  22DE               	addwfc	postinc2,f,c
 21586  012046  22DE               	addwfc	postinc2,f,c
 21587                           
 21588                           ;stkvar	_b @ sp[(-13)+-4]
 21589  012048  0EF1               	movlw	241
 21590  01204A  24E1               	addwf	fsr1l,w,c
 21591  01204C  6ED9               	movwf	fsr2l,c
 21592  01204E  0EFF               	movlw	255
 21593  012050  20E2               	addwfc	fsr1h,w,c
 21594  012052  6EDA               	movwf	fsr2h,c
 21595  012054  50DF               	movf	indf2,w,c
 21596  012056  6E3D               	movwf	(btemp+11)^0,c
 21597                           
 21598                           ;stkvar	_a @ sp[(-13)+-8]
 21599  012058  0EEB               	movlw	-21
 21600  01205A  50E3               	movf	plusw1,w,c
 21601  01205C  023D               	mulwf	(btemp+11)^0,c
 21602                           
 21603                           ;stkvar	_temp @ sp[(-13)+8]
 21604  01205E  0EFB               	movlw	-5
 21605  012060  006F FFCF FFE3     	movff	prodl,plusw1
 21606  012066  0EFC               	movlw	-4
 21607  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 21608                           
 21609                           ;stkvar	_grs @ sp[(-13)+4]
 21610  01206E  50E1               	movf	fsr1l,w,c
 21611  012070  0FF7               	addlw	-9
 21612  012072  6ED9               	movwf	fsr2l,c
 21613  012074  50E2               	movf	fsr1h,w,c
 21614  012076  6EDA               	movwf	fsr2h,c
 21615  012078  0EFF               	movlw	255
 21616  01207A  22DA               	addwfc	fsr2h,f,c
 21617                           
 21618                           ;stkvar	_temp @ sp[(-13)+8]
 21619  01207C  0EFB               	movlw	-5
 21620  01207E  50E3               	movf	plusw1,w,c
 21621  012080  26DE               	addwf	postinc2,f,c
 21622  012082  0E00               	movlw	0
 21623  012084  22DE               	addwfc	postinc2,f,c
 21624  012086  22DE               	addwfc	postinc2,f,c
 21625  012088  22DE               	addwfc	postinc2,f,c
 21626                           
 21627                           ;stkvar	_prod @ sp[(-13)+0]
 21628  01208A  50E1               	movf	fsr1l,w,c
 21629  01208C  0FF3               	addlw	-13
 21630  01208E  6ED9               	movwf	fsr2l,c
 21631  012090  50E2               	movf	fsr1h,w,c
 21632  012092  6EDA               	movwf	fsr2h,c
 21633  012094  0EFF               	movlw	255
 21634  012096  22DA               	addwfc	fsr2h,f,c
 21635                           
 21636                           ;stkvar	_temp @ sp[(-13)+8]
 21637  012098  0EFC               	movlw	252
 21638  01209A  24E1               	addwf	fsr1l,w,c
 21639  01209C  6EE9               	movwf	fsr0l,c
 21640  01209E  0EFF               	movlw	255
 21641  0120A0  20E2               	addwfc	fsr1h,w,c
 21642  0120A2  6EEA               	movwf	fsr0h,c
 21643  0120A4  50EF               	movf	indf0,w,c
 21644  0120A6  26DE               	addwf	postinc2,f,c
 21645  0120A8  0E00               	movlw	0
 21646  0120AA  22DE               	addwfc	postinc2,f,c
 21647  0120AC  22DE               	addwfc	postinc2,f,c
 21648  0120AE  22DE               	addwfc	postinc2,f,c
 21649                           
 21650                           ;stkvar	_grs @ sp[(-13)+4]
 21651  0120B0  50E1               	movf	fsr1l,w,c
 21652  0120B2  0FF7               	addlw	-9
 21653  0120B4  6ED9               	movwf	fsr2l,c
 21654  0120B6  50E2               	movf	fsr1h,w,c
 21655  0120B8  6EDA               	movwf	fsr2h,c
 21656  0120BA  0EFF               	movlw	255
 21657  0120BC  22DA               	addwfc	fsr2h,f,c
 21658  0120BE  0E08               	movlw	8
 21659  0120C0                     u5925:
 21660  0120C0  90D8               	bcf	status,0,c
 21661  0120C2  36DE               	rlcf	postinc2,f,c
 21662  0120C4  36DE               	rlcf	postinc2,f,c
 21663  0120C6  36DE               	rlcf	postinc2,f,c
 21664  0120C8  36DD               	rlcf	postdec2,f,c
 21665  0120CA  52DD               	movf	postdec2,f,c
 21666  0120CC  52DD               	movf	postdec2,f,c
 21667  0120CE  2EE8               	decfsz	wreg,f,c
 21668  0120D0  D7F7               	goto	u5925
 21669                           
 21670                           ;stkvar	_b @ sp[(-13)+-4]
 21671  0120D2  0EF0               	movlw	240
 21672  0120D4  24E1               	addwf	fsr1l,w,c
 21673  0120D6  6ED9               	movwf	fsr2l,c
 21674  0120D8  0EFF               	movlw	255
 21675  0120DA  20E2               	addwfc	fsr1h,w,c
 21676  0120DC  6EDA               	movwf	fsr2h,c
 21677  0120DE  50DF               	movf	indf2,w,c
 21678  0120E0  6E3D               	movwf	(btemp+11)^0,c
 21679                           
 21680                           ;stkvar	_a @ sp[(-13)+-8]
 21681  0120E2  0EEB               	movlw	-21
 21682  0120E4  50E3               	movf	plusw1,w,c
 21683  0120E6  023D               	mulwf	(btemp+11)^0,c
 21684                           
 21685                           ;stkvar	_temp @ sp[(-13)+8]
 21686  0120E8  0EFB               	movlw	-5
 21687  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 21688  0120F0  0EFC               	movlw	-4
 21689  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 21690                           
 21691                           ;stkvar	_temp @ sp[(-13)+8]
 21692  0120F8  0EFB               	movlw	-5
 21693  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21694  012100  0EFC               	movlw	-4
 21695  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 21696                           
 21697                           ;stkvar	_grs @ sp[(-13)+4]
 21698  012108  50E1               	movf	fsr1l,w,c
 21699  01210A  0FF7               	addlw	-9
 21700  01210C  6ED9               	movwf	fsr2l,c
 21701  01210E  50E2               	movf	fsr1h,w,c
 21702  012110  6EDA               	movwf	fsr2h,c
 21703  012112  0EFF               	movlw	255
 21704  012114  22DA               	addwfc	fsr2h,f,c
 21705  012116  503C               	movf	(btemp+10)^0,w,c
 21706  012118  26DE               	addwf	postinc2,f,c
 21707  01211A  503D               	movf	(btemp+11)^0,w,c
 21708  01211C  22DE               	addwfc	postinc2,f,c
 21709  01211E  0E00               	movlw	0
 21710  012120  22DE               	addwfc	postinc2,f,c
 21711  012122  22DE               	addwfc	postinc2,f,c
 21712                           
 21713                           ;stkvar	_b @ sp[(-13)+-4]
 21714  012124  0EEF               	movlw	-17
 21715  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 21716                           
 21717                           ;stkvar	_a @ sp[(-13)+-8]
 21718  01212C  0EEC               	movlw	236
 21719  01212E  24E1               	addwf	fsr1l,w,c
 21720  012130  6ED9               	movwf	fsr2l,c
 21721  012132  0EFF               	movlw	255
 21722  012134  20E2               	addwfc	fsr1h,w,c
 21723  012136  6EDA               	movwf	fsr2h,c
 21724  012138  50DF               	movf	indf2,w,c
 21725  01213A  023D               	mulwf	(btemp+11)^0,c
 21726                           
 21727                           ;stkvar	_temp @ sp[(-13)+8]
 21728  01213C  0EFB               	movlw	-5
 21729  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 21730  012144  0EFC               	movlw	-4
 21731  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 21732                           
 21733                           ;stkvar	_temp @ sp[(-13)+8]
 21734  01214C  0EFB               	movlw	-5
 21735  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 21736  012154  0EFC               	movlw	-4
 21737  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 21738                           
 21739                           ;stkvar	_grs @ sp[(-13)+4]
 21740  01215C  50E1               	movf	fsr1l,w,c
 21741  01215E  0FF7               	addlw	-9
 21742  012160  6ED9               	movwf	fsr2l,c
 21743  012162  50E2               	movf	fsr1h,w,c
 21744  012164  6EDA               	movwf	fsr2h,c
 21745  012166  0EFF               	movlw	255
 21746  012168  22DA               	addwfc	fsr2h,f,c
 21747  01216A  503C               	movf	(btemp+10)^0,w,c
 21748  01216C  26DE               	addwf	postinc2,f,c
 21749  01216E  503D               	movf	(btemp+11)^0,w,c
 21750  012170  22DE               	addwfc	postinc2,f,c
 21751  012172  0E00               	movlw	0
 21752  012174  22DE               	addwfc	postinc2,f,c
 21753  012176  22DE               	addwfc	postinc2,f,c
 21754                           
 21755                           ;stkvar	_grs @ sp[(-13)+4]
 21756  012178  50E1               	movf	fsr1l,w,c
 21757  01217A  0FF7               	addlw	-9
 21758  01217C  6ED9               	movwf	fsr2l,c
 21759  01217E  50E2               	movf	fsr1h,w,c
 21760  012180  6EDA               	movwf	fsr2h,c
 21761  012182  0EFF               	movlw	255
 21762  012184  22DA               	addwfc	fsr2h,f,c
 21763  012186  0E08               	movlw	8
 21764  012188                     u5935:
 21765  012188  90D8               	bcf	status,0,c
 21766  01218A  36DE               	rlcf	postinc2,f,c
 21767  01218C  36DE               	rlcf	postinc2,f,c
 21768  01218E  36DE               	rlcf	postinc2,f,c
 21769  012190  36DD               	rlcf	postdec2,f,c
 21770  012192  52DD               	movf	postdec2,f,c
 21771  012194  52DD               	movf	postdec2,f,c
 21772  012196  2EE8               	decfsz	wreg,f,c
 21773  012198  D7F7               	goto	u5935
 21774                           
 21775                           ;stkvar	_b @ sp[(-13)+-4]
 21776  01219A  0EEF               	movlw	-17
 21777  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21778                           
 21779                           ;stkvar	_a @ sp[(-13)+-8]
 21780  0121A2  0EEB               	movlw	-21
 21781  0121A4  50E3               	movf	plusw1,w,c
 21782  0121A6  023D               	mulwf	(btemp+11)^0,c
 21783                           
 21784                           ;stkvar	_temp @ sp[(-13)+8]
 21785  0121A8  0EFB               	movlw	-5
 21786  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 21787  0121B0  0EFC               	movlw	-4
 21788  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 21789                           
 21790                           ;stkvar	_temp @ sp[(-13)+8]
 21791  0121B8  0EFB               	movlw	-5
 21792  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21793  0121C0  0EFC               	movlw	-4
 21794  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 21795                           
 21796                           ;stkvar	_grs @ sp[(-13)+4]
 21797  0121C8  50E1               	movf	fsr1l,w,c
 21798  0121CA  0FF7               	addlw	-9
 21799  0121CC  6ED9               	movwf	fsr2l,c
 21800  0121CE  50E2               	movf	fsr1h,w,c
 21801  0121D0  6EDA               	movwf	fsr2h,c
 21802  0121D2  0EFF               	movlw	255
 21803  0121D4  22DA               	addwfc	fsr2h,f,c
 21804  0121D6  503C               	movf	(btemp+10)^0,w,c
 21805  0121D8  26DE               	addwf	postinc2,f,c
 21806  0121DA  503D               	movf	(btemp+11)^0,w,c
 21807  0121DC  22DE               	addwfc	postinc2,f,c
 21808  0121DE  0E00               	movlw	0
 21809  0121E0  22DE               	addwfc	postinc2,f,c
 21810  0121E2  22DE               	addwfc	postinc2,f,c
 21811                           
 21812                           ;stkvar	_b @ sp[(-13)+-4]
 21813  0121E4  0EF0               	movlw	240
 21814  0121E6  24E1               	addwf	fsr1l,w,c
 21815  0121E8  6ED9               	movwf	fsr2l,c
 21816  0121EA  0EFF               	movlw	255
 21817  0121EC  20E2               	addwfc	fsr1h,w,c
 21818  0121EE  6EDA               	movwf	fsr2h,c
 21819  0121F0  50DF               	movf	indf2,w,c
 21820  0121F2  6E3D               	movwf	(btemp+11)^0,c
 21821                           
 21822                           ;stkvar	_a @ sp[(-13)+-8]
 21823  0121F4  0EED               	movlw	237
 21824  0121F6  24E1               	addwf	fsr1l,w,c
 21825  0121F8  6ED9               	movwf	fsr2l,c
 21826  0121FA  0EFF               	movlw	255
 21827  0121FC  20E2               	addwfc	fsr1h,w,c
 21828  0121FE  6EDA               	movwf	fsr2h,c
 21829  012200  50DF               	movf	indf2,w,c
 21830  012202  023D               	mulwf	(btemp+11)^0,c
 21831                           
 21832                           ;stkvar	_temp @ sp[(-13)+8]
 21833  012204  0EFB               	movlw	-5
 21834  012206  006F FFCF FFE3     	movff	prodl,plusw1
 21835  01220C  0EFC               	movlw	-4
 21836  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 21837                           
 21838                           ;stkvar	_temp @ sp[(-13)+8]
 21839  012214  0EFB               	movlw	-5
 21840  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 21841  01221C  0EFC               	movlw	-4
 21842  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21843                           
 21844                           ;stkvar	_prod @ sp[(-13)+0]
 21845  012224  50E1               	movf	fsr1l,w,c
 21846  012226  0FF3               	addlw	-13
 21847  012228  6ED9               	movwf	fsr2l,c
 21848  01222A  50E2               	movf	fsr1h,w,c
 21849  01222C  6EDA               	movwf	fsr2h,c
 21850  01222E  0EFF               	movlw	255
 21851  012230  22DA               	addwfc	fsr2h,f,c
 21852  012232  503C               	movf	(btemp+10)^0,w,c
 21853  012234  26DE               	addwf	postinc2,f,c
 21854  012236  503D               	movf	(btemp+11)^0,w,c
 21855  012238  22DE               	addwfc	postinc2,f,c
 21856  01223A  0E00               	movlw	0
 21857  01223C  22DE               	addwfc	postinc2,f,c
 21858  01223E  22DE               	addwfc	postinc2,f,c
 21859                           
 21860                           ;stkvar	_b @ sp[(-13)+-4]
 21861  012240  0EF1               	movlw	241
 21862  012242  24E1               	addwf	fsr1l,w,c
 21863  012244  6ED9               	movwf	fsr2l,c
 21864  012246  0EFF               	movlw	255
 21865  012248  20E2               	addwfc	fsr1h,w,c
 21866  01224A  6EDA               	movwf	fsr2h,c
 21867  01224C  50DF               	movf	indf2,w,c
 21868  01224E  6E3D               	movwf	(btemp+11)^0,c
 21869                           
 21870                           ;stkvar	_a @ sp[(-13)+-8]
 21871  012250  0EEC               	movlw	236
 21872  012252  24E1               	addwf	fsr1l,w,c
 21873  012254  6ED9               	movwf	fsr2l,c
 21874  012256  0EFF               	movlw	255
 21875  012258  20E2               	addwfc	fsr1h,w,c
 21876  01225A  6EDA               	movwf	fsr2h,c
 21877  01225C  50DF               	movf	indf2,w,c
 21878  01225E  023D               	mulwf	(btemp+11)^0,c
 21879                           
 21880                           ;stkvar	_temp @ sp[(-13)+8]
 21881  012260  0EFB               	movlw	-5
 21882  012262  006F FFCF FFE3     	movff	prodl,plusw1
 21883  012268  0EFC               	movlw	-4
 21884  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 21885                           
 21886                           ;stkvar	_temp @ sp[(-13)+8]
 21887  012270  0EFB               	movlw	-5
 21888  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 21889  012278  0EFC               	movlw	-4
 21890  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 21891                           
 21892                           ;stkvar	_prod @ sp[(-13)+0]
 21893  012280  50E1               	movf	fsr1l,w,c
 21894  012282  0FF3               	addlw	-13
 21895  012284  6ED9               	movwf	fsr2l,c
 21896  012286  50E2               	movf	fsr1h,w,c
 21897  012288  6EDA               	movwf	fsr2h,c
 21898  01228A  0EFF               	movlw	255
 21899  01228C  22DA               	addwfc	fsr2h,f,c
 21900  01228E  503C               	movf	(btemp+10)^0,w,c
 21901  012290  26DE               	addwf	postinc2,f,c
 21902  012292  503D               	movf	(btemp+11)^0,w,c
 21903  012294  22DE               	addwfc	postinc2,f,c
 21904  012296  0E00               	movlw	0
 21905  012298  22DE               	addwfc	postinc2,f,c
 21906  01229A  22DE               	addwfc	postinc2,f,c
 21907                           
 21908                           ;stkvar	_b @ sp[(-13)+-4]
 21909  01229C  0EF1               	movlw	241
 21910  01229E  24E1               	addwf	fsr1l,w,c
 21911  0122A0  6ED9               	movwf	fsr2l,c
 21912  0122A2  0EFF               	movlw	255
 21913  0122A4  20E2               	addwfc	fsr1h,w,c
 21914  0122A6  6EDA               	movwf	fsr2h,c
 21915  0122A8  50DF               	movf	indf2,w,c
 21916  0122AA  6E3D               	movwf	(btemp+11)^0,c
 21917                           
 21918                           ;stkvar	_a @ sp[(-13)+-8]
 21919  0122AC  0EED               	movlw	237
 21920  0122AE  24E1               	addwf	fsr1l,w,c
 21921  0122B0  6ED9               	movwf	fsr2l,c
 21922  0122B2  0EFF               	movlw	255
 21923  0122B4  20E2               	addwfc	fsr1h,w,c
 21924  0122B6  6EDA               	movwf	fsr2h,c
 21925  0122B8  50DF               	movf	indf2,w,c
 21926  0122BA  023D               	mulwf	(btemp+11)^0,c
 21927                           
 21928                           ;stkvar	_temp @ sp[(-13)+8]
 21929  0122BC  0EFB               	movlw	-5
 21930  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 21931  0122C4  0EFC               	movlw	-4
 21932  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 21933                           
 21934                           ;stkvar	_temp @ sp[(-13)+8]
 21935  0122CC  0EFB               	movlw	-5
 21936  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 21937  0122D4  0EFC               	movlw	-4
 21938  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 21939  0122DC  503C               	movf	(btemp+10)^0,w,c
 21940  0122DE  6E36               	movwf	(btemp+4)^0,c
 21941  0122E0  503D               	movf	(btemp+11)^0,w,c
 21942  0122E2  6E37               	movwf	(btemp+5)^0,c
 21943  0122E4  6A38               	clrf	(btemp+6)^0,c
 21944  0122E6  6A39               	clrf	(btemp+7)^0,c
 21945  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 21946  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 21947  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 21948  0122FA  6A36               	clrf	(btemp+4)^0,c
 21949                           
 21950                           ;stkvar	_prod @ sp[(-13)+0]
 21951  0122FC  50E1               	movf	fsr1l,w,c
 21952  0122FE  0FF3               	addlw	-13
 21953  012300  6ED9               	movwf	fsr2l,c
 21954  012302  50E2               	movf	fsr1h,w,c
 21955  012304  6EDA               	movwf	fsr2h,c
 21956  012306  0EFF               	movlw	255
 21957  012308  22DA               	addwfc	fsr2h,f,c
 21958  01230A  5036               	movf	(btemp+4)^0,w,c
 21959  01230C  26DE               	addwf	postinc2,f,c
 21960  01230E  5037               	movf	(btemp+5)^0,w,c
 21961  012310  22DE               	addwfc	postinc2,f,c
 21962  012312  5038               	movf	(btemp+6)^0,w,c
 21963  012314  22DE               	addwfc	postinc2,f,c
 21964  012316  5039               	movf	(btemp+7)^0,w,c
 21965  012318  22DE               	addwfc	postinc2,f,c
 21966                           
 21967                           ;stkvar	_prod @ sp[(-13)+0]
 21968  01231A  50E1               	movf	fsr1l,w,c
 21969  01231C  0FF3               	addlw	-13
 21970  01231E  6ED9               	movwf	fsr2l,c
 21971  012320  50E2               	movf	fsr1h,w,c
 21972  012322  6EDA               	movwf	fsr2h,c
 21973  012324  0EFF               	movlw	255
 21974  012326  22DA               	addwfc	fsr2h,f,c
 21975                           
 21976                           ;stkvar	_grs @ sp[(-13)+4]
 21977  012328  0EFA               	movlw	250
 21978  01232A  24E1               	addwf	fsr1l,w,c
 21979  01232C  6EE9               	movwf	fsr0l,c
 21980  01232E  0EFF               	movlw	255
 21981  012330  20E2               	addwfc	fsr1h,w,c
 21982  012332  6EEA               	movwf	fsr0h,c
 21983  012334  50EF               	movf	indf0,w,c
 21984  012336  26DE               	addwf	postinc2,f,c
 21985  012338  0E00               	movlw	0
 21986  01233A  22DE               	addwfc	postinc2,f,c
 21987  01233C  22DE               	addwfc	postinc2,f,c
 21988  01233E  22DE               	addwfc	postinc2,f,c
 21989                           
 21990                           ;stkvar	_grs @ sp[(-13)+4]
 21991  012340  50E1               	movf	fsr1l,w,c
 21992  012342  0FF7               	addlw	-9
 21993  012344  6ED9               	movwf	fsr2l,c
 21994  012346  50E2               	movf	fsr1h,w,c
 21995  012348  6EDA               	movwf	fsr2h,c
 21996  01234A  0EFF               	movlw	255
 21997  01234C  22DA               	addwfc	fsr2h,f,c
 21998  01234E  0E08               	movlw	8
 21999  012350                     u5945:
 22000  012350  90D8               	bcf	status,0,c
 22001  012352  36DE               	rlcf	postinc2,f,c
 22002  012354  36DE               	rlcf	postinc2,f,c
 22003  012356  36DE               	rlcf	postinc2,f,c
 22004  012358  36DD               	rlcf	postdec2,f,c
 22005  01235A  52DD               	movf	postdec2,f,c
 22006  01235C  52DD               	movf	postdec2,f,c
 22007  01235E  2EE8               	decfsz	wreg,f,c
 22008  012360  D7F7               	goto	u5945
 22009  012362  0E82               	movlw	130
 22010  012364  6E3C               	movwf	(btemp+10)^0,c
 22011  012366  0EFF               	movlw	255
 22012  012368  6E3D               	movwf	(btemp+11)^0,c
 22013                           
 22014                           ;stkvar	_bexp @ sp[(-13)+10]
 22015  01236A  0EFD               	movlw	-3
 22016  01236C  50E3               	movf	plusw1,w,c
 22017  01236E  6E3A               	movwf	(btemp+8)^0,c
 22018  012370  6A3B               	clrf	(btemp+9)^0,c
 22019                           
 22020                           ;stkvar	_aexp @ sp[(-13)+11]
 22021  012372  0EFE               	movlw	-2
 22022  012374  50E3               	movf	plusw1,w,c
 22023  012376  263A               	addwf	(btemp+8)^0,f,c
 22024  012378  0E00               	movlw	0
 22025  01237A  223B               	addwfc	(btemp+9)^0,f,c
 22026  01237C  503C               	movf	(btemp+10)^0,w,c
 22027  01237E  263A               	addwf	(btemp+8)^0,f,c
 22028  012380  503D               	movf	(btemp+11)^0,w,c
 22029  012382  223B               	addwfc	(btemp+9)^0,f,c
 22030                           
 22031                           ;stkvar	_temp @ sp[(-13)+8]
 22032  012384  0EFB               	movlw	-5
 22033  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22034  01238C  0EFC               	movlw	-4
 22035  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22036  012394  D021               	goto	l6981
 22037  012396                     l6971:
 22038                           
 22039                           ;stkvar	_prod @ sp[(-13)+0]
 22040  012396  90D8               	bcf	status,0,c
 22041  012398  0EF3               	movlw	-13
 22042  01239A  36E3               	rlcf	plusw1,f,c
 22043  01239C  0EF4               	movlw	-12
 22044  01239E  36E3               	rlcf	plusw1,f,c
 22045  0123A0  0EF5               	movlw	-11
 22046  0123A2  36E3               	rlcf	plusw1,f,c
 22047  0123A4  0EF6               	movlw	-10
 22048  0123A6  36E3               	rlcf	plusw1,f,c
 22049                           
 22050                           ;stkvar	_grs @ sp[(-13)+4]
 22051  0123A8  0EFA               	movlw	-6
 22052  0123AA  AEE3               	btfss	plusw1,7,c
 22053  0123AC  D002               	goto	l6977
 22054                           
 22055                           ;stkvar	_prod @ sp[(-13)+0]
 22056  0123AE  0EF3               	movlw	-13
 22057  0123B0  80E3               	bsf	plusw1,0,c
 22058  0123B2                     l6977:
 22059                           
 22060                           ;stkvar	_grs @ sp[(-13)+4]
 22061  0123B2  90D8               	bcf	status,0,c
 22062  0123B4  0EF7               	movlw	-9
 22063  0123B6  36E3               	rlcf	plusw1,f,c
 22064  0123B8  0EF8               	movlw	-8
 22065  0123BA  36E3               	rlcf	plusw1,f,c
 22066  0123BC  0EF9               	movlw	-7
 22067  0123BE  36E3               	rlcf	plusw1,f,c
 22068  0123C0  0EFA               	movlw	-6
 22069  0123C2  36E3               	rlcf	plusw1,f,c
 22070                           
 22071                           ;stkvar	_temp @ sp[(-13)+8]
 22072  0123C4  50E1               	movf	fsr1l,w,c
 22073  0123C6  0FFB               	addlw	-5
 22074  0123C8  6ED9               	movwf	fsr2l,c
 22075  0123CA  50E2               	movf	fsr1h,w,c
 22076  0123CC  6EDA               	movwf	fsr2h,c
 22077  0123CE  0EFF               	movlw	255
 22078  0123D0  22DA               	addwfc	fsr2h,f,c
 22079  0123D2  06DE               	decf	postinc2,f,c
 22080  0123D4  0E00               	movlw	0
 22081  0123D6  5ADD               	subwfb	postdec2,f,c
 22082  0123D8                     l6981:
 22083                           
 22084                           ;stkvar	_prod @ sp[(-13)+0]
 22085  0123D8  0EF5               	movlw	-11
 22086  0123DA  AEE3               	btfss	plusw1,7,c
 22087  0123DC  D7DC               	goto	l6971
 22088                           
 22089                           ;stkvar	_aexp @ sp[(-13)+11]
 22090  0123DE  0EFE               	movlw	-2
 22091  0123E0  6AE3               	clrf	plusw1,c
 22092                           
 22093                           ;stkvar	_grs @ sp[(-13)+4]
 22094  0123E2  0EFA               	movlw	-6
 22095  0123E4  AEE3               	btfss	plusw1,7,c
 22096  0123E6  D020               	goto	l6995
 22097                           
 22098                           ;stkvar	_grs @ sp[(-13)+4]
 22099  0123E8  50E1               	movf	fsr1l,w,c
 22100  0123EA  0FF7               	addlw	-9
 22101  0123EC  6ED9               	movwf	fsr2l,c
 22102  0123EE  50E2               	movf	fsr1h,w,c
 22103  0123F0  6EDA               	movwf	fsr2h,c
 22104  0123F2  0EFF               	movlw	255
 22105  0123F4  22DA               	addwfc	fsr2h,f,c
 22106  0123F6  0EFF               	movlw	255
 22107  0123F8  14DE               	andwf	postinc2,w,c
 22108  0123FA  6E3A               	movwf	(btemp+8)^0,c
 22109  0123FC  0EFF               	movlw	255
 22110  0123FE  14DE               	andwf	postinc2,w,c
 22111  012400  6E3B               	movwf	(btemp+9)^0,c
 22112  012402  0EFF               	movlw	255
 22113  012404  14DE               	andwf	postinc2,w,c
 22114  012406  6E3C               	movwf	(btemp+10)^0,c
 22115  012408  0E7F               	movlw	127
 22116  01240A  14DE               	andwf	postinc2,w,c
 22117  01240C  6E3D               	movwf	(btemp+11)^0,c
 22118  01240E  503A               	movf	(btemp+8)^0,w,c
 22119  012410  103B               	iorwf	(btemp+9)^0,w,c
 22120  012412  103C               	iorwf	(btemp+10)^0,w,c
 22121  012414  103D               	iorwf	(btemp+11)^0,w,c
 22122  012416  B4D8               	btfsc	status,2,c
 22123  012418  D004               	goto	l6991
 22124  01241A                     u5980:
 22125                           
 22126                           ;stkvar	_aexp @ sp[(-13)+11]
 22127  01241A  0EFE               	movlw	-2
 22128  01241C  6AE3               	clrf	plusw1,c
 22129  01241E  2AE3               	incf	plusw1,f,c
 22130  012420  D003               	goto	l6995
 22131  012422                     l6991:
 22132                           
 22133                           ;stkvar	_prod @ sp[(-13)+0]
 22134  012422  0EF3               	movlw	-13
 22135  012424  B0E3               	btfsc	plusw1,0,c
 22136  012426  D7F9               	goto	u5980
 22137  012428                     l6995:
 22138                           
 22139                           ;stkvar	_aexp @ sp[(-13)+11]
 22140  012428  0EFE               	movlw	-2
 22141  01242A  50E3               	movf	plusw1,w,c
 22142  01242C  B4D8               	btfsc	status,2,c
 22143  01242E  D036               	goto	l7005
 22144                           
 22145                           ;stkvar	_prod @ sp[(-13)+0]
 22146  012430  50E1               	movf	fsr1l,w,c
 22147  012432  0FF3               	addlw	-13
 22148  012434  6ED9               	movwf	fsr2l,c
 22149  012436  50E2               	movf	fsr1h,w,c
 22150  012438  6EDA               	movwf	fsr2h,c
 22151  01243A  0EFF               	movlw	255
 22152  01243C  22DA               	addwfc	fsr2h,f,c
 22153  01243E  2ADE               	incf	postinc2,f,c
 22154  012440  0E00               	movlw	0
 22155  012442  22DE               	addwfc	postinc2,f,c
 22156  012444  22DE               	addwfc	postinc2,f,c
 22157  012446  22DE               	addwfc	postinc2,f,c
 22158                           
 22159                           ;stkvar	_prod @ sp[(-13)+0]
 22160  012448  0EF6               	movlw	-10
 22161  01244A  A0E3               	btfss	plusw1,0,c
 22162  01244C  D027               	goto	l7005
 22163  01244E  0E01               	movlw	1
 22164  012450  6E3D               	movwf	(btemp+11)^0,c
 22165                           
 22166                           ;stkvar	_prod @ sp[(-13)+0]
 22167  012452  50E1               	movf	fsr1l,w,c
 22168  012454  0FF3               	addlw	-13
 22169  012456  6ED9               	movwf	fsr2l,c
 22170  012458  50E2               	movf	fsr1h,w,c
 22171  01245A  6EDA               	movwf	fsr2h,c
 22172  01245C  0EFF               	movlw	255
 22173  01245E  22DA               	addwfc	fsr2h,f,c
 22174  012460  283D               	incf	(btemp+11)^0,w,c
 22175  012462  52DE               	movf	postinc2,f,c
 22176  012464  D008               	goto	u6020
 22177  012466                     u6025:
 22178  012466  52DE               	movf	postinc2,f,c
 22179  012468  90D8               	bcf	status,0,c
 22180  01246A  BEDC               	btfsc	preinc2,7,c
 22181  01246C  80D8               	bsf	status,0,c
 22182  01246E  32DD               	rrcf	postdec2,f,c
 22183  012470  32DD               	rrcf	postdec2,f,c
 22184  012472  32DD               	rrcf	postdec2,f,c
 22185  012474  32DE               	rrcf	postinc2,f,c
 22186  012476                     u6020:
 22187  012476  2EE8               	decfsz	wreg,f,c
 22188  012478  D7F6               	goto	u6025
 22189                           
 22190                           ;stkvar	_temp @ sp[(-13)+8]
 22191  01247A  0EFB               	movlw	-5
 22192  01247C  50E3               	movf	plusw1,w,c
 22193  01247E  0F01               	addlw	1
 22194  012480  6E32               	movwf	btemp^0,c
 22195  012482  0EFB               	movlw	-5
 22196  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 22197  01248A  6A32               	clrf	btemp^0,c
 22198  01248C  0EFC               	movlw	-4
 22199  01248E  50E3               	movf	plusw1,w,c
 22200  012490  2032               	addwfc	btemp^0,w,c
 22201  012492  6E32               	movwf	btemp^0,c
 22202  012494  0EFC               	movlw	-4
 22203  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 22204  01249C                     l7005:
 22205                           
 22206                           ;stkvar	_temp @ sp[(-13)+8]
 22207  01249C  0EFC               	movlw	-4
 22208  01249E  BEE3               	btfsc	plusw1,7,c
 22209  0124A0  D020               	goto	l7009
 22210  0124A2  0EFC               	movlw	-4
 22211  0124A4  50E3               	movf	plusw1,w,c
 22212  0124A6  E104               	bnz	u6030
 22213  0124A8  0EFB               	movlw	-5
 22214  0124AA  28E3               	incf	plusw1,w,c
 22215  0124AC  A0D8               	btfss	status,0,c
 22216  0124AE  D019               	goto	l7009
 22217  0124B0                     u6030:
 22218  0124B0  0E00               	movlw	0
 22219  0124B2  6E3A               	movwf	(btemp+8)^0,c
 22220  0124B4  0E00               	movlw	0
 22221  0124B6  6E3B               	movwf	(btemp+9)^0,c
 22222  0124B8  0E80               	movlw	128
 22223  0124BA  6E3C               	movwf	(btemp+10)^0,c
 22224  0124BC  0E7F               	movlw	127
 22225  0124BE  6E3D               	movwf	(btemp+11)^0,c
 22226                           
 22227                           ;stkvar	_prod @ sp[(-13)+0]
 22228  0124C0  0EF3               	movlw	-13
 22229  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22230  0124C8  0EF4               	movlw	-12
 22231  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22232  0124D0  0EF5               	movlw	-11
 22233  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22234  0124D8  0EF6               	movlw	-10
 22235  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22236  0124E0  D044               	goto	l7025
 22237  0124E2                     l7009:
 22238                           
 22239                           ;stkvar	_temp @ sp[(-13)+8]
 22240  0124E2  0EFC               	movlw	-4
 22241  0124E4  BEE3               	btfsc	plusw1,7,c
 22242  0124E6  D007               	goto	u6040
 22243  0124E8  0EFC               	movlw	-4
 22244  0124EA  50E3               	movf	plusw1,w,c
 22245  0124EC  E10F               	bnz	l7015
 22246  0124EE  0EFB               	movlw	-5
 22247  0124F0  04E3               	decf	plusw1,w,c
 22248  0124F2  B0D8               	btfsc	status,0,c
 22249  0124F4  D00B               	goto	l7015
 22250  0124F6                     u6040:
 22251                           
 22252                           ;stkvar	_prod @ sp[(-13)+0]
 22253  0124F6  0EF3               	movlw	-13
 22254  0124F8  6AE3               	clrf	plusw1,c
 22255  0124FA  0EF4               	movlw	-12
 22256  0124FC  6AE3               	clrf	plusw1,c
 22257  0124FE  0EF5               	movlw	-11
 22258  012500  6AE3               	clrf	plusw1,c
 22259  012502  0EF6               	movlw	-10
 22260  012504  6AE3               	clrf	plusw1,c
 22261                           
 22262                           ;stkvar	_sign @ sp[(-13)+12]
 22263  012506  0EFF               	movlw	-1
 22264  012508  6AE3               	clrf	plusw1,c
 22265  01250A  D02F               	goto	l7025
 22266  01250C                     l7015:
 22267                           
 22268                           ;stkvar	_temp @ sp[(-13)+8]
 22269                           ;stkvar	_bexp @ sp[(-13)+10]
 22270  01250C  0EFB               	movlw	-5
 22271  01250E  006F FF8C  F032    	movff	plusw1,btemp
 22272  012514  0EFD               	movlw	-3
 22273  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 22274                           
 22275                           ;stkvar	_prod @ sp[(-13)+0]
 22276  01251C  50E1               	movf	fsr1l,w,c
 22277  01251E  0FF3               	addlw	-13
 22278  012520  6ED9               	movwf	fsr2l,c
 22279  012522  50E2               	movf	fsr1h,w,c
 22280  012524  6EDA               	movwf	fsr2h,c
 22281  012526  0EFF               	movlw	255
 22282  012528  22DA               	addwfc	fsr2h,f,c
 22283  01252A  0EFF               	movlw	255
 22284  01252C  16DE               	andwf	postinc2,f,c
 22285  01252E  0EFF               	movlw	255
 22286  012530  16DE               	andwf	postinc2,f,c
 22287  012532  0E7F               	movlw	127
 22288  012534  16DE               	andwf	postinc2,f,c
 22289  012536  0E00               	movlw	0
 22290  012538  16DE               	andwf	postinc2,f,c
 22291                           
 22292                           ;stkvar	_bexp @ sp[(-13)+10]
 22293  01253A  0EFD               	movlw	-3
 22294  01253C  A0E3               	btfss	plusw1,0,c
 22295  01253E  D008               	goto	l7023
 22296                           
 22297                           ;stkvar	_prod @ sp[(-13)+0]
 22298  012540  0EF5               	movlw	245
 22299  012542  24E1               	addwf	fsr1l,w,c
 22300  012544  6ED9               	movwf	fsr2l,c
 22301  012546  0EFF               	movlw	255
 22302  012548  20E2               	addwfc	fsr1h,w,c
 22303  01254A  6EDA               	movwf	fsr2h,c
 22304  01254C  0E00               	movlw	0
 22305  01254E  8EDB               	bsf	plusw2,7,c
 22306  012550                     l7023:
 22307                           
 22308                           ;stkvar	_prod @ sp[(-13)+0]
 22309  012550  0EF6               	movlw	246
 22310  012552  24E1               	addwf	fsr1l,w,c
 22311  012554  6ED9               	movwf	fsr2l,c
 22312  012556  0EFF               	movlw	255
 22313  012558  20E2               	addwfc	fsr1h,w,c
 22314  01255A  6EDA               	movwf	fsr2h,c
 22315                           
 22316                           ;stkvar	_bexp @ sp[(-13)+10]
 22317  01255C  0EFD               	movlw	-3
 22318  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 22319  012564  90D8               	bcf	status,0,c
 22320  012566  303D               	rrcf	(btemp+11)^0,w,c
 22321  012568  6EDF               	movwf	indf2,c
 22322  01256A                     l7025:
 22323                           
 22324                           ;stkvar	_sign @ sp[(-13)+12]
 22325  01256A  0EFF               	movlw	-1
 22326  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22327                           
 22328                           ;stkvar	_prod @ sp[(-13)+0]
 22329  012572  0EF6               	movlw	246
 22330  012574  24E1               	addwf	fsr1l,w,c
 22331  012576  6ED9               	movwf	fsr2l,c
 22332  012578  0EFF               	movlw	255
 22333  01257A  20E2               	addwfc	fsr1h,w,c
 22334  01257C  6EDA               	movwf	fsr2h,c
 22335  01257E  503D               	movf	(btemp+11)^0,w,c
 22336  012580  12DF               	iorwf	indf2,f,c
 22337                           
 22338                           ;stkvar	_prod @ sp[(-13)+0]
 22339  012582  0EF3               	movlw	-13
 22340  012584  006F FF8C  F032    	movff	plusw1,btemp
 22341  01258A  0EF4               	movlw	-12
 22342  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 22343  012592  0EF5               	movlw	-11
 22344  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 22345  01259A  0EF6               	movlw	-10
 22346  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 22347  0125A2                     l2696:
 22348                           
 22349                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 22350  0125A2  0EEB               	movlw	235
 22351  0125A4  26E1               	addwf	fsr1l,f,c
 22352  0125A6  0EFF               	movlw	255
 22353  0125A8  22E2               	addwfc	fsr1h,f,c
 22354  0125AA  0012               	return		;funcret
 22355  0125AC                     __end_of___flmul:
 22356                           	opt callstack 0
 22357                           
 22358 ;; *************** function _SYSTEM_Initialize *****************
 22359 ;; Defined at:
 22360 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22361 ;; Parameters:    Size  Location     Type
 22362 ;;		None
 22363 ;; Auto vars:     Size  Location     Type
 22364 ;;		None
 22365 ;; Return value:  Size  Location     Type
 22366 ;;                  1  [STACK] void 
 22367 ;; Registers used:
 22368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22369 ;; Tracked objects:
 22370 ;;		On entry : 0/0
 22371 ;;		On exit  : 3F/3C
 22372 ;;		Unchanged: 0/0
 22373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22378 ;;Total ram usage:        0 bytes
 22379 ;; Hardware stack levels used:    1
 22380 ;; Hardware stack levels required when called:    8
 22381 ;; This function calls:
 22382 ;;		_ADCC_Initialize
 22383 ;;		_CLKREF_Initialize
 22384 ;;		_DMA1_Initialize
 22385 ;;		_DMA2_Initialize
 22386 ;;		_EXT_INT_Initialize
 22387 ;;		_FVR_Initialize
 22388 ;;		_INTERRUPT_Initialize
 22389 ;;		_OSCILLATOR_Initialize
 22390 ;;		_PIN_MANAGER_Initialize
 22391 ;;		_PMD_Initialize
 22392 ;;		_PWM8_Initialize
 22393 ;;		_SPI1_Initialize
 22394 ;;		_TMR2_Initialize
 22395 ;;		_TMR5_Initialize
 22396 ;;		_TMR6_Initialize
 22397 ;;		_UART1_Initialize
 22398 ;;		_UART2_Initialize
 22399 ;; This function is called by:
 22400 ;;		_main
 22401 ;; This function uses a reentrant model
 22402 ;;
 22403                           
 22404                           	psect	text90
 22405  0180D0                     __ptext90:
 22406                           	opt callstack 0
 22407  0180D0                     _SYSTEM_Initialize:
 22408                           	opt callstack 22
 22409                           
 22410                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22411                           
 22412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22413                           ;incstack = 0
 22414  0180D0  ECFC  F0BD         	call	_INTERRUPT_Initialize	;wreg free
 22415                           
 22416                           ; BSR set to: 57
 22417                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22418  0180D4  EC82  F0C5         	call	_PMD_Initialize	;wreg free
 22419                           
 22420                           ; BSR set to: 57
 22421                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22422  0180D8  EC89  F0BB         	call	_PIN_MANAGER_Initialize	;wreg free
 22423                           
 22424                           ; BSR set to: 58
 22425                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22426  0180DC  EC77  F0C5         	call	_OSCILLATOR_Initialize	;wreg free
 22427                           
 22428                           ; BSR set to: 57
 22429                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22430  0180E0  ECE1  F0C5         	call	_FVR_Initialize	;wreg free
 22431                           
 22432                           ; BSR set to: 62
 22433                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22434  0180E4  EC93  F0BD         	call	_ADCC_Initialize	;wreg free
 22435                           
 22436                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 22437  0180E8  EC49  F0C5         	call	_TMR2_Initialize	;wreg free
 22438                           
 22439                           ; BSR set to: 57
 22440                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 22441  0180EC  EC6C  F0C5         	call	_PWM8_Initialize	;wreg free
 22442                           
 22443                           ; BSR set to: 63
 22444                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22445  0180F0  ECDD  F0C1         	call	_EXT_INT_Initialize	;wreg free
 22446                           
 22447                           ; BSR set to: 57
 22448                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22449  0180F4  EC9A  F0C2         	call	_TMR6_Initialize	;wreg free
 22450                           
 22451                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22452  0180F8  EC8B  F0C0         	call	_TMR5_Initialize	;wreg free
 22453                           
 22454                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22455  0180FC  EC61  F0BE         	call	_UART1_Initialize	;wreg free
 22456                           
 22457                           ; BSR set to: 57
 22458                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22459  018100  ECF5  F0BE         	call	_UART2_Initialize	;wreg free
 22460                           
 22461                           ; BSR set to: 57
 22462                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22463  018104  EC61  F0C5         	call	_SPI1_Initialize	;wreg free
 22464                           
 22465                           ; BSR set to: 61
 22466                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22467  018108  EC7F  F0BF         	call	_DMA2_Initialize	;wreg free
 22468                           
 22469                           ; BSR set to: 59
 22470                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22471  01810C  EC5E  F0BD         	call	_DMA1_Initialize	;wreg free
 22472                           
 22473                           ; BSR set to: 59
 22474                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22475  018110  ECBB  F0C5         	call	_CLKREF_Initialize	;wreg free
 22476                           
 22477                           ; BSR set to: 60
 22478                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22479  018114  0012               	return		;funcret
 22480  018116                     __end_of_SYSTEM_Initialize:
 22481                           	opt callstack 0
 22482                           
 22483 ;; *************** function _UART2_Initialize *****************
 22484 ;; Defined at:
 22485 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22486 ;; Parameters:    Size  Location     Type
 22487 ;;		None
 22488 ;; Auto vars:     Size  Location     Type
 22489 ;;		None
 22490 ;; Return value:  Size  Location     Type
 22491 ;;                  1  [STACK] void 
 22492 ;; Registers used:
 22493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22494 ;; Tracked objects:
 22495 ;;		On entry : 3F/39
 22496 ;;		On exit  : 3F/39
 22497 ;;		Unchanged: 0/0
 22498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22503 ;;Total ram usage:        0 bytes
 22504 ;; Hardware stack levels used:    1
 22505 ;; Hardware stack levels required when called:    7
 22506 ;; This function calls:
 22507 ;;		_UART2_SetRxInterruptHandler
 22508 ;;		_UART2_SetTxInterruptHandler
 22509 ;; This function is called by:
 22510 ;;		_SYSTEM_Initialize
 22511 ;; This function uses a reentrant model
 22512 ;;
 22513                           
 22514                           	psect	text91
 22515  017DEA                     __ptext91:
 22516                           	opt callstack 0
 22517  017DEA                     _UART2_Initialize:
 22518                           	opt callstack 22
 22519                           
 22520                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22521                           
 22522                           ; BSR set to: 60
 22523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22524                           ;incstack = 0
 22525  017DEA  0139               	movlb	57	; () banked
 22526  017DEC  9596               	bcf	150,2,b	;volatile
 22527                           
 22528                           ; BSR set to: 57
 22529                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22530  017DEE  0EEE               	movlw	low _UART2_Receive_ISR
 22531  017DF0  6EE6               	movwf	postinc1,c
 22532  017DF2  0E89               	movlw	high _UART2_Receive_ISR
 22533  017DF4  6EE6               	movwf	postinc1,c
 22534  017DF6  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22535  017DF8  6EE6               	movwf	postinc1,c
 22536  017DFA  EC29  F0C3         	call	_UART2_SetRxInterruptHandler	;wreg free
 22537                           
 22538                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22539  017DFE  0139               	movlb	57	; () banked
 22540  017E00  9796               	bcf	150,3,b	;volatile
 22541                           
 22542                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22543  017E02  0E08               	movlw	low _UART2_Transmit_ISR
 22544  017E04  6EE6               	movwf	postinc1,c
 22545  017E06  0E85               	movlw	high _UART2_Transmit_ISR
 22546  017E08  6EE6               	movwf	postinc1,c
 22547  017E0A  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22548  017E0C  6EE6               	movwf	postinc1,c
 22549  017E0E  EC15  F0C3         	call	_UART2_SetTxInterruptHandler	;wreg free
 22550                           
 22551                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22552  017E12  013D               	movlb	61	; () banked
 22553  017E14  6BD4               	clrf	212,b	;volatile
 22554                           
 22555                           ; BSR set to: 61
 22556                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22557  017E16  6BD6               	clrf	214,b	;volatile
 22558                           
 22559                           ; BSR set to: 61
 22560                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22561  017E18  6BD8               	clrf	216,b	;volatile
 22562                           
 22563                           ; BSR set to: 61
 22564                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22565  017E1A  0EB0               	movlw	176
 22566  017E1C  6FDA               	movwf	218,b	;volatile
 22567                           
 22568                           ; BSR set to: 61
 22569                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22570  017E1E  0E80               	movlw	128
 22571  017E20  6FDB               	movwf	219,b	;volatile
 22572                           
 22573                           ; BSR set to: 61
 22574                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22575  017E22  6BDC               	clrf	220,b	;volatile
 22576                           
 22577                           ; BSR set to: 61
 22578                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22579  017E24  0E82               	movlw	130
 22580  017E26  6FDD               	movwf	221,b	;volatile
 22581                           
 22582                           ; BSR set to: 61
 22583                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22584  017E28  0E06               	movlw	6
 22585  017E2A  6FDE               	movwf	222,b	;volatile
 22586                           
 22587                           ; BSR set to: 61
 22588                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22589  017E2C  6BDF               	clrf	223,b	;volatile
 22590                           
 22591                           ; BSR set to: 61
 22592                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22593  017E2E  6BE0               	clrf	224,b	;volatile
 22594                           
 22595                           ; BSR set to: 61
 22596                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22597  017E30  6BE1               	clrf	225,b	;volatile
 22598                           
 22599                           ; BSR set to: 61
 22600                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22601  017E32  6BE2               	clrf	226,b	;volatile
 22602                           
 22603                           ; BSR set to: 61
 22604                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22605  017E34  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 22606                           
 22607                           ; BSR set to: 61
 22608                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22609  017E36  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 22610                           
 22611                           ; BSR set to: 61
 22612                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22613  017E38  0E40               	movlw	64
 22614  017E3A  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22615                           
 22616                           ; BSR set to: 61
 22617                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22618  017E3C  6A28               	clrf	_uart2RxHead^0,c	;volatile
 22619                           
 22620                           ; BSR set to: 61
 22621                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22622  017E3E  6A27               	clrf	_uart2RxTail^0,c	;volatile
 22623                           
 22624                           ; BSR set to: 61
 22625                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22626  017E40  6A26               	clrf	_uart2RxCount^0,c	;volatile
 22627                           
 22628                           ; BSR set to: 61
 22629                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22630  017E42  0139               	movlb	57	; () banked
 22631  017E44  8596               	bsf	150,2,b	;volatile
 22632                           
 22633                           ; BSR set to: 57
 22634                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22635  017E46  0012               	return		;funcret
 22636  017E48                     __end_of_UART2_Initialize:
 22637                           	opt callstack 0
 22638                           
 22639 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22640 ;; Defined at:
 22641 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22642 ;; Parameters:    Size  Location     Type
 22643 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22644 ;;		 -> UART2_Transmit_ISR(1), 
 22645 ;; Auto vars:     Size  Location     Type
 22646 ;;		None
 22647 ;; Return value:  Size  Location     Type
 22648 ;;                  1  [STACK] void 
 22649 ;; Registers used:
 22650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22651 ;; Tracked objects:
 22652 ;;		On entry : 3F/39
 22653 ;;		On exit  : 0/0
 22654 ;;		Unchanged: 0/0
 22655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22660 ;;Total ram usage:        0 bytes
 22661 ;; Hardware stack levels used:    1
 22662 ;; Hardware stack levels required when called:    6
 22663 ;; This function calls:
 22664 ;;		Nothing
 22665 ;; This function is called by:
 22666 ;;		_UART2_Initialize
 22667 ;; This function uses a reentrant model
 22668 ;;
 22669                           
 22670                           	psect	text92
 22671  01862A                     __ptext92:
 22672                           	opt callstack 0
 22673  01862A                     _UART2_SetTxInterruptHandler:
 22674                           	opt callstack 22
 22675                           
 22676                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22677                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22678                           
 22679                           ; BSR set to: 57
 22680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22681                           ;incstack = 0
 22682  01862A  50E1               	movf	fsr1l,w,c
 22683  01862C  0FFD               	addlw	-3
 22684  01862E  6ED9               	movwf	fsr2l,c
 22685  018630  50E2               	movf	fsr1h,w,c
 22686  018632  6EDA               	movwf	fsr2h,c
 22687  018634  0EFF               	movlw	255
 22688  018636  22DA               	addwfc	fsr2h,f,c
 22689  018638  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 22690  01863E  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 22691  018644  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 22692                           
 22693                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22694  01864A  52E5               	movf	postdec1,f,c
 22695  01864C  52E5               	movf	postdec1,f,c
 22696  01864E  52E5               	movf	postdec1,f,c
 22697  018650  0012               	return		;funcret
 22698  018652                     __end_of_UART2_SetTxInterruptHandler:
 22699                           	opt callstack 0
 22700                           
 22701 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22702 ;; Defined at:
 22703 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22704 ;; Parameters:    Size  Location     Type
 22705 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22706 ;;		 -> UART2_Receive_ISR(1), 
 22707 ;; Auto vars:     Size  Location     Type
 22708 ;;		None
 22709 ;; Return value:  Size  Location     Type
 22710 ;;                  1  [STACK] void 
 22711 ;; Registers used:
 22712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22713 ;; Tracked objects:
 22714 ;;		On entry : 3F/39
 22715 ;;		On exit  : 0/0
 22716 ;;		Unchanged: 0/0
 22717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22722 ;;Total ram usage:        0 bytes
 22723 ;; Hardware stack levels used:    1
 22724 ;; Hardware stack levels required when called:    6
 22725 ;; This function calls:
 22726 ;;		Nothing
 22727 ;; This function is called by:
 22728 ;;		_UART2_Initialize
 22729 ;; This function uses a reentrant model
 22730 ;;
 22731                           
 22732                           	psect	text93
 22733  018652                     __ptext93:
 22734                           	opt callstack 0
 22735  018652                     _UART2_SetRxInterruptHandler:
 22736                           	opt callstack 22
 22737                           
 22738                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 22739                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22740                           
 22741                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22742                           ;incstack = 0
 22743  018652  50E1               	movf	fsr1l,w,c
 22744  018654  0FFD               	addlw	-3
 22745  018656  6ED9               	movwf	fsr2l,c
 22746  018658  50E2               	movf	fsr1h,w,c
 22747  01865A  6EDA               	movwf	fsr2h,c
 22748  01865C  0EFF               	movlw	255
 22749  01865E  22DA               	addwfc	fsr2h,f,c
 22750  018660  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 22751  018666  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 22752  01866C  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 22753                           
 22754                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22755  018672  52E5               	movf	postdec1,f,c
 22756  018674  52E5               	movf	postdec1,f,c
 22757  018676  52E5               	movf	postdec1,f,c
 22758  018678  0012               	return		;funcret
 22759  01867A                     __end_of_UART2_SetRxInterruptHandler:
 22760                           	opt callstack 0
 22761                           
 22762 ;; *************** function _UART1_Initialize *****************
 22763 ;; Defined at:
 22764 ;;		line 79 in file "mcc_generated_files/uart1.c"
 22765 ;; Parameters:    Size  Location     Type
 22766 ;;		None
 22767 ;; Auto vars:     Size  Location     Type
 22768 ;;		None
 22769 ;; Return value:  Size  Location     Type
 22770 ;;                  1  [STACK] void 
 22771 ;; Registers used:
 22772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22773 ;; Tracked objects:
 22774 ;;		On entry : 0/39
 22775 ;;		On exit  : 3F/39
 22776 ;;		Unchanged: 0/0
 22777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22782 ;;Total ram usage:        0 bytes
 22783 ;; Hardware stack levels used:    1
 22784 ;; Hardware stack levels required when called:    7
 22785 ;; This function calls:
 22786 ;;		_UART1_SetRxInterruptHandler
 22787 ;;		_UART1_SetTxInterruptHandler
 22788 ;; This function is called by:
 22789 ;;		_SYSTEM_Initialize
 22790 ;; This function uses a reentrant model
 22791 ;;
 22792                           
 22793                           	psect	text94
 22794  017CC2                     __ptext94:
 22795                           	opt callstack 0
 22796  017CC2                     _UART1_Initialize:
 22797                           	opt callstack 22
 22798                           
 22799                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 22800                           
 22801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22802                           ;incstack = 0
 22803  017CC2  0139               	movlb	57	; () banked
 22804  017CC4  9793               	bcf	147,3,b	;volatile
 22805                           
 22806                           ; BSR set to: 57
 22807                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 22808  017CC6  0ED0               	movlw	low _UART1_Receive_ISR
 22809  017CC8  6EE6               	movwf	postinc1,c
 22810  017CCA  0E89               	movlw	high _UART1_Receive_ISR
 22811  017CCC  6EE6               	movwf	postinc1,c
 22812  017CCE  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 22813  017CD0  6EE6               	movwf	postinc1,c
 22814  017CD2  EC51  F0C3         	call	_UART1_SetRxInterruptHandler	;wreg free
 22815                           
 22816                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 22817  017CD6  0139               	movlb	57	; () banked
 22818  017CD8  9993               	bcf	147,4,b	;volatile
 22819                           
 22820                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 22821  017CDA  0EDC               	movlw	low _UART1_Transmit_ISR
 22822  017CDC  6EE6               	movwf	postinc1,c
 22823  017CDE  0E84               	movlw	high _UART1_Transmit_ISR
 22824  017CE0  6EE6               	movwf	postinc1,c
 22825  017CE2  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 22826  017CE4  6EE6               	movwf	postinc1,c
 22827  017CE6  EC3D  F0C3         	call	_UART1_SetTxInterruptHandler	;wreg free
 22828                           
 22829                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 22830  017CEA  013D               	movlb	61	; () banked
 22831  017CEC  6BEC               	clrf	236,b	;volatile
 22832                           
 22833                           ; BSR set to: 61
 22834                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 22835  017CEE  6BED               	clrf	237,b	;volatile
 22836                           
 22837                           ; BSR set to: 61
 22838                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 22839  017CF0  6BEE               	clrf	238,b	;volatile
 22840                           
 22841                           ; BSR set to: 61
 22842                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 22843  017CF2  6BEF               	clrf	239,b	;volatile
 22844                           
 22845                           ; BSR set to: 61
 22846                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 22847  017CF4  6BF0               	clrf	240,b	;volatile
 22848                           
 22849                           ; BSR set to: 61
 22850                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 22851  017CF6  6BF1               	clrf	241,b	;volatile
 22852                           
 22853                           ; BSR set to: 61
 22854                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 22855  017CF8  0EB0               	movlw	176
 22856  017CFA  6FF2               	movwf	242,b	;volatile
 22857                           
 22858                           ; BSR set to: 61
 22859                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 22860  017CFC  0E80               	movlw	128
 22861  017CFE  6FF3               	movwf	243,b	;volatile
 22862                           
 22863                           ; BSR set to: 61
 22864                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 22865  017D00  6BF4               	clrf	244,b	;volatile
 22866                           
 22867                           ; BSR set to: 61
 22868                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 22869  017D02  0E82               	movlw	130
 22870  017D04  6FF5               	movwf	245,b	;volatile
 22871                           
 22872                           ; BSR set to: 61
 22873                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 22874  017D06  0E06               	movlw	6
 22875  017D08  6FF6               	movwf	246,b	;volatile
 22876                           
 22877                           ; BSR set to: 61
 22878                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 22879  017D0A  6BF7               	clrf	247,b	;volatile
 22880                           
 22881                           ; BSR set to: 61
 22882                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 22883  017D0C  6BF8               	clrf	248,b	;volatile
 22884                           
 22885                           ; BSR set to: 61
 22886                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 22887  017D0E  6BF9               	clrf	249,b	;volatile
 22888                           
 22889                           ; BSR set to: 61
 22890                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 22891  017D10  6BFA               	clrf	250,b	;volatile
 22892                           
 22893                           ; BSR set to: 61
 22894                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 22895  017D12  6A31               	clrf	_uart1TxHead^0,c	;volatile
 22896                           
 22897                           ; BSR set to: 61
 22898                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 22899  017D14  6A30               	clrf	_uart1TxTail^0,c	;volatile
 22900                           
 22901                           ; BSR set to: 61
 22902                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 22903  017D16  0E40               	movlw	64
 22904  017D18  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 22905                           
 22906                           ; BSR set to: 61
 22907                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 22908  017D1A  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 22909                           
 22910                           ; BSR set to: 61
 22911                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 22912  017D1C  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 22913                           
 22914                           ; BSR set to: 61
 22915                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 22916  017D1E  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 22917                           
 22918                           ; BSR set to: 61
 22919                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 22920  017D20  0139               	movlb	57	; () banked
 22921  017D22  8793               	bsf	147,3,b	;volatile
 22922                           
 22923                           ; BSR set to: 57
 22924                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22925  017D24  0012               	return		;funcret
 22926  017D26                     __end_of_UART1_Initialize:
 22927                           	opt callstack 0
 22928                           
 22929 ;; *************** function _UART1_SetTxInterruptHandler *****************
 22930 ;; Defined at:
 22931 ;;		line 246 in file "mcc_generated_files/uart1.c"
 22932 ;; Parameters:    Size  Location     Type
 22933 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22934 ;;		 -> UART1_Transmit_ISR(1), 
 22935 ;; Auto vars:     Size  Location     Type
 22936 ;;		None
 22937 ;; Return value:  Size  Location     Type
 22938 ;;                  1  [STACK] void 
 22939 ;; Registers used:
 22940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22941 ;; Tracked objects:
 22942 ;;		On entry : 3F/39
 22943 ;;		On exit  : 0/0
 22944 ;;		Unchanged: 0/0
 22945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22950 ;;Total ram usage:        0 bytes
 22951 ;; Hardware stack levels used:    1
 22952 ;; Hardware stack levels required when called:    6
 22953 ;; This function calls:
 22954 ;;		Nothing
 22955 ;; This function is called by:
 22956 ;;		_UART1_Initialize
 22957 ;; This function uses a reentrant model
 22958 ;;
 22959                           
 22960                           	psect	text95
 22961  01867A                     __ptext95:
 22962                           	opt callstack 0
 22963  01867A                     _UART1_SetTxInterruptHandler:
 22964                           	opt callstack 22
 22965                           
 22966                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 22967                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22968                           
 22969                           ; BSR set to: 57
 22970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22971                           ;incstack = 0
 22972  01867A  50E1               	movf	fsr1l,w,c
 22973  01867C  0FFD               	addlw	-3
 22974  01867E  6ED9               	movwf	fsr2l,c
 22975  018680  50E2               	movf	fsr1h,w,c
 22976  018682  6EDA               	movwf	fsr2h,c
 22977  018684  0EFF               	movlw	255
 22978  018686  22DA               	addwfc	fsr2h,f,c
 22979  018688  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 22980  01868E  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 22981  018694  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 22982                           
 22983                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22984  01869A  52E5               	movf	postdec1,f,c
 22985  01869C  52E5               	movf	postdec1,f,c
 22986  01869E  52E5               	movf	postdec1,f,c
 22987  0186A0  0012               	return		;funcret
 22988  0186A2                     __end_of_UART1_SetTxInterruptHandler:
 22989                           	opt callstack 0
 22990                           
 22991 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22992 ;; Defined at:
 22993 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22994 ;; Parameters:    Size  Location     Type
 22995 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22996 ;;		 -> UART1_Receive_ISR(1), 
 22997 ;; Auto vars:     Size  Location     Type
 22998 ;;		None
 22999 ;; Return value:  Size  Location     Type
 23000 ;;                  1  [STACK] void 
 23001 ;; Registers used:
 23002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23003 ;; Tracked objects:
 23004 ;;		On entry : 3F/39
 23005 ;;		On exit  : 0/0
 23006 ;;		Unchanged: 0/0
 23007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23012 ;;Total ram usage:        0 bytes
 23013 ;; Hardware stack levels used:    1
 23014 ;; Hardware stack levels required when called:    6
 23015 ;; This function calls:
 23016 ;;		Nothing
 23017 ;; This function is called by:
 23018 ;;		_UART1_Initialize
 23019 ;; This function uses a reentrant model
 23020 ;;
 23021                           
 23022                           	psect	text96
 23023  0186A2                     __ptext96:
 23024                           	opt callstack 0
 23025  0186A2                     _UART1_SetRxInterruptHandler:
 23026                           	opt callstack 22
 23027                           
 23028                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23029                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23030                           
 23031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23032                           ;incstack = 0
 23033  0186A2  50E1               	movf	fsr1l,w,c
 23034  0186A4  0FFD               	addlw	-3
 23035  0186A6  6ED9               	movwf	fsr2l,c
 23036  0186A8  50E2               	movf	fsr1h,w,c
 23037  0186AA  6EDA               	movwf	fsr2h,c
 23038  0186AC  0EFF               	movlw	255
 23039  0186AE  22DA               	addwfc	fsr2h,f,c
 23040  0186B0  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 23041  0186B6  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 23042  0186BC  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 23043                           
 23044                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23045  0186C2  52E5               	movf	postdec1,f,c
 23046  0186C4  52E5               	movf	postdec1,f,c
 23047  0186C6  52E5               	movf	postdec1,f,c
 23048  0186C8  0012               	return		;funcret
 23049  0186CA                     __end_of_UART1_SetRxInterruptHandler:
 23050                           	opt callstack 0
 23051                           
 23052 ;; *************** function _TMR6_Initialize *****************
 23053 ;; Defined at:
 23054 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23055 ;; Parameters:    Size  Location     Type
 23056 ;;		None
 23057 ;; Auto vars:     Size  Location     Type
 23058 ;;		None
 23059 ;; Return value:  Size  Location     Type
 23060 ;;                  1  [STACK] void 
 23061 ;; Registers used:
 23062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23063 ;; Tracked objects:
 23064 ;;		On entry : 3F/39
 23065 ;;		On exit  : 0/0
 23066 ;;		Unchanged: 0/0
 23067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23072 ;;Total ram usage:        0 bytes
 23073 ;; Hardware stack levels used:    1
 23074 ;; Hardware stack levels required when called:    7
 23075 ;; This function calls:
 23076 ;;		_TMR6_SetInterruptHandler
 23077 ;; This function is called by:
 23078 ;;		_SYSTEM_Initialize
 23079 ;; This function uses a reentrant model
 23080 ;;
 23081                           
 23082                           	psect	text97
 23083  018534                     __ptext97:
 23084                           	opt callstack 0
 23085  018534                     _TMR6_Initialize:
 23086                           	opt callstack 22
 23087                           
 23088                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23089                           
 23090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23091                           ;incstack = 0
 23092  018534  0E01               	movlw	1
 23093  018536  6E96               	movwf	150,c	;volatile
 23094                           
 23095                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23096  018538  6A95               	clrf	149,c	;volatile
 23097                           
 23098                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23099  01853A  6A97               	clrf	151,c	;volatile
 23100                           
 23101                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23102  01853C  0E7C               	movlw	124
 23103  01853E  6E93               	movwf	147,c	;volatile
 23104                           
 23105                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23106  018540  6A92               	clrf	146,c	;volatile
 23107                           
 23108                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23109  018542  0139               	movlb	57	; () banked
 23110  018544  91A9               	bcf	169,0,b	;volatile
 23111                           
 23112                           ; BSR set to: 57
 23113                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23114  018546  8199               	bsf	153,0,b	;volatile
 23115                           
 23116                           ; BSR set to: 57
 23117                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23118  018548  0E5C               	movlw	low _TMR6_DefaultInterruptHandler
 23119  01854A  6EE6               	movwf	postinc1,c
 23120  01854C  0E81               	movlw	high _TMR6_DefaultInterruptHandler
 23121  01854E  6EE6               	movwf	postinc1,c
 23122  018550  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23123  018552  6EE6               	movwf	postinc1,c
 23124  018554  EC65  F0C3         	call	_TMR6_SetInterruptHandler	;wreg free
 23125                           
 23126                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23127  018558  0EE0               	movlw	224
 23128  01855A  6E94               	movwf	148,c	;volatile
 23129                           
 23130                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23131  01855C  0012               	return		;funcret
 23132  01855E                     __end_of_TMR6_Initialize:
 23133                           	opt callstack 0
 23134                           
 23135 ;; *************** function _TMR6_SetInterruptHandler *****************
 23136 ;; Defined at:
 23137 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23138 ;; Parameters:    Size  Location     Type
 23139 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23140 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23141 ;; Auto vars:     Size  Location     Type
 23142 ;;		None
 23143 ;; Return value:  Size  Location     Type
 23144 ;;                  1  [STACK] void 
 23145 ;; Registers used:
 23146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23147 ;; Tracked objects:
 23148 ;;		On entry : 3F/39
 23149 ;;		On exit  : 0/0
 23150 ;;		Unchanged: 0/0
 23151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23156 ;;Total ram usage:        0 bytes
 23157 ;; Hardware stack levels used:    1
 23158 ;; Hardware stack levels required when called:    6
 23159 ;; This function calls:
 23160 ;;		Nothing
 23161 ;; This function is called by:
 23162 ;;		_TMR6_Initialize
 23163 ;; This function uses a reentrant model
 23164 ;;
 23165                           
 23166                           	psect	text98
 23167  0186CA                     __ptext98:
 23168                           	opt callstack 0
 23169  0186CA                     _TMR6_SetInterruptHandler:
 23170                           	opt callstack 22
 23171                           
 23172                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23173                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23174                           
 23175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23176                           ;incstack = 0
 23177  0186CA  50E1               	movf	fsr1l,w,c
 23178  0186CC  0FFD               	addlw	-3
 23179  0186CE  6ED9               	movwf	fsr2l,c
 23180  0186D0  50E2               	movf	fsr1h,w,c
 23181  0186D2  6EDA               	movwf	fsr2h,c
 23182  0186D4  0EFF               	movlw	255
 23183  0186D6  22DA               	addwfc	fsr2h,f,c
 23184  0186D8  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 23185  0186DE  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 23186  0186E4  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 23187                           
 23188                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23189  0186EA  52E5               	movf	postdec1,f,c
 23190  0186EC  52E5               	movf	postdec1,f,c
 23191  0186EE  52E5               	movf	postdec1,f,c
 23192  0186F0  0012               	return		;funcret
 23193  0186F2                     __end_of_TMR6_SetInterruptHandler:
 23194                           	opt callstack 0
 23195                           
 23196 ;; *************** function _TMR5_Initialize *****************
 23197 ;; Defined at:
 23198 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23199 ;; Parameters:    Size  Location     Type
 23200 ;;		None
 23201 ;; Auto vars:     Size  Location     Type
 23202 ;;		None
 23203 ;; Return value:  Size  Location     Type
 23204 ;;                  1  [STACK] void 
 23205 ;; Registers used:
 23206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23207 ;; Tracked objects:
 23208 ;;		On entry : 0/39
 23209 ;;		On exit  : 0/0
 23210 ;;		Unchanged: 0/0
 23211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23216 ;;Total ram usage:        0 bytes
 23217 ;; Hardware stack levels used:    1
 23218 ;; Hardware stack levels required when called:    7
 23219 ;; This function calls:
 23220 ;;		_TMR5_SetInterruptHandler
 23221 ;; This function is called by:
 23222 ;;		_SYSTEM_Initialize
 23223 ;; This function uses a reentrant model
 23224 ;;
 23225                           
 23226                           	psect	text99
 23227  018116                     __ptext99:
 23228                           	opt callstack 0
 23229  018116                     _TMR5_Initialize:
 23230                           	opt callstack 22
 23231                           
 23232                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23233                           
 23234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23235                           ;incstack = 0
 23236  018116  6A9B               	clrf	155,c	;volatile
 23237                           
 23238                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23239  018118  6A9C               	clrf	156,c	;volatile
 23240                           
 23241                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23242  01811A  0E01               	movlw	1
 23243  01811C  6E9D               	movwf	157,c	;volatile
 23244                           
 23245                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23246  01811E  0E63               	movlw	99
 23247  018120  6E99               	movwf	153,c	;volatile
 23248                           
 23249                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23250  018122  0EC0               	movlw	192
 23251  018124  6E98               	movwf	152,c	;volatile
 23252                           
 23253                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23254  018126  5098               	movf	152,w,c	;volatile
 23255  018128  006F FE64  F032    	movff	16281,btemp	;volatile
 23256  01812E  6A33               	clrf	(btemp+1)^0,c
 23257  018130  0060  F0C8  F033   	movff	btemp,btemp+1
 23258  018136  6A32               	clrf	btemp^0,c
 23259  018138  1032               	iorwf	btemp^0,w,c
 23260  01813A  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 23261  01813C  5033               	movf	(btemp+1)^0,w,c
 23262  01813E  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23263                           
 23264                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23265  018140  0139               	movlb	57	; () banked
 23266  018142  9DA8               	bcf	168,6,b	;volatile
 23267                           
 23268                           ; BSR set to: 57
 23269                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23270  018144  8D98               	bsf	152,6,b	;volatile
 23271                           
 23272                           ; BSR set to: 57
 23273                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23274  018146  0EBA               	movlw	low _TMR5_DefaultInterruptHandler
 23275  018148  6EE6               	movwf	postinc1,c
 23276  01814A  0E87               	movlw	high _TMR5_DefaultInterruptHandler
 23277  01814C  6EE6               	movwf	postinc1,c
 23278  01814E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23279  018150  6EE6               	movwf	postinc1,c
 23280  018152  EC79  F0C3         	call	_TMR5_SetInterruptHandler	;wreg free
 23281                           
 23282                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23283  018156  0E31               	movlw	49
 23284  018158  6E9A               	movwf	154,c	;volatile
 23285                           
 23286                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23287  01815A  0012               	return		;funcret
 23288  01815C                     __end_of_TMR5_Initialize:
 23289                           	opt callstack 0
 23290                           
 23291 ;; *************** function _TMR5_SetInterruptHandler *****************
 23292 ;; Defined at:
 23293 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23294 ;; Parameters:    Size  Location     Type
 23295 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23296 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;		None
 23299 ;; Return value:  Size  Location     Type
 23300 ;;                  1  [STACK] void 
 23301 ;; Registers used:
 23302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23303 ;; Tracked objects:
 23304 ;;		On entry : 3F/39
 23305 ;;		On exit  : 0/0
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23312 ;;Total ram usage:        0 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; Hardware stack levels required when called:    6
 23315 ;; This function calls:
 23316 ;;		Nothing
 23317 ;; This function is called by:
 23318 ;;		_TMR5_Initialize
 23319 ;; This function uses a reentrant model
 23320 ;;
 23321                           
 23322                           	psect	text100
 23323  0186F2                     __ptext100:
 23324                           	opt callstack 0
 23325  0186F2                     _TMR5_SetInterruptHandler:
 23326                           	opt callstack 22
 23327                           
 23328                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23329                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23330                           
 23331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23332                           ;incstack = 0
 23333  0186F2  50E1               	movf	fsr1l,w,c
 23334  0186F4  0FFD               	addlw	-3
 23335  0186F6  6ED9               	movwf	fsr2l,c
 23336  0186F8  50E2               	movf	fsr1h,w,c
 23337  0186FA  6EDA               	movwf	fsr2h,c
 23338  0186FC  0EFF               	movlw	255
 23339  0186FE  22DA               	addwfc	fsr2h,f,c
 23340  018700  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 23341  018706  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 23342  01870C  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 23343                           
 23344                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23345  018712  52E5               	movf	postdec1,f,c
 23346  018714  52E5               	movf	postdec1,f,c
 23347  018716  52E5               	movf	postdec1,f,c
 23348  018718  0012               	return		;funcret
 23349  01871A                     __end_of_TMR5_SetInterruptHandler:
 23350                           	opt callstack 0
 23351                           
 23352 ;; *************** function _TMR2_Initialize *****************
 23353 ;; Defined at:
 23354 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23355 ;; Parameters:    Size  Location     Type
 23356 ;;		None
 23357 ;; Auto vars:     Size  Location     Type
 23358 ;;		None
 23359 ;; Return value:  Size  Location     Type
 23360 ;;                  1  [STACK] void 
 23361 ;; Registers used:
 23362 ;;		wreg, status,2
 23363 ;; Tracked objects:
 23364 ;;		On entry : 0/3E
 23365 ;;		On exit  : 3F/39
 23366 ;;		Unchanged: 0/0
 23367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23372 ;;Total ram usage:        0 bytes
 23373 ;; Hardware stack levels used:    1
 23374 ;; Hardware stack levels required when called:    6
 23375 ;; This function calls:
 23376 ;;		Nothing
 23377 ;; This function is called by:
 23378 ;;		_SYSTEM_Initialize
 23379 ;; This function uses a reentrant model
 23380 ;;
 23381                           
 23382                           	psect	text101
 23383  018A92                     __ptext101:
 23384                           	opt callstack 0
 23385  018A92                     _TMR2_Initialize:
 23386                           	opt callstack 23
 23387                           
 23388                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23389                           
 23390                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23391                           ;incstack = 0
 23392  018A92  0E01               	movlw	1
 23393  018A94  6EAE               	movwf	174,c	;volatile
 23394                           
 23395                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23396  018A96  6AAD               	clrf	173,c	;volatile
 23397                           
 23398                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23399  018A98  6AAF               	clrf	175,c	;volatile
 23400                           
 23401                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23402  018A9A  0E63               	movlw	99
 23403  018A9C  6EAB               	movwf	171,c	;volatile
 23404                           
 23405                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23406  018A9E  6AAA               	clrf	170,c	;volatile
 23407                           
 23408                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23409  018AA0  0139               	movlb	57	; () banked
 23410  018AA2  95A4               	bcf	164,2,b	;volatile
 23411                           
 23412                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23413  018AA4  0EC0               	movlw	192
 23414  018AA6  6EAC               	movwf	172,c	;volatile
 23415                           
 23416                           ; BSR set to: 57
 23417                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23418  018AA8  0012               	return		;funcret
 23419  018AAA                     __end_of_TMR2_Initialize:
 23420                           	opt callstack 0
 23421                           
 23422 ;; *************** function _SPI1_Initialize *****************
 23423 ;; Defined at:
 23424 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23425 ;; Parameters:    Size  Location     Type
 23426 ;;		None
 23427 ;; Auto vars:     Size  Location     Type
 23428 ;;		None
 23429 ;; Return value:  Size  Location     Type
 23430 ;;                  1  [STACK] void 
 23431 ;; Registers used:
 23432 ;;		wreg, status,2
 23433 ;; Tracked objects:
 23434 ;;		On entry : 3F/39
 23435 ;;		On exit  : 3F/3D
 23436 ;;		Unchanged: 0/0
 23437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23442 ;;Total ram usage:        0 bytes
 23443 ;; Hardware stack levels used:    1
 23444 ;; Hardware stack levels required when called:    6
 23445 ;; This function calls:
 23446 ;;		Nothing
 23447 ;; This function is called by:
 23448 ;;		_SYSTEM_Initialize
 23449 ;; This function uses a reentrant model
 23450 ;;
 23451                           
 23452                           	psect	text102
 23453  018AC2                     __ptext102:
 23454                           	opt callstack 0
 23455  018AC2                     _SPI1_Initialize:
 23456                           	opt callstack 23
 23457                           
 23458                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23459                           
 23460                           ; BSR set to: 57
 23461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23462                           ;incstack = 0
 23463  018AC2  0E40               	movlw	64
 23464  018AC4  013D               	movlb	61	; () banked
 23465  018AC6  6F15               	movwf	21,b	;volatile
 23466                           
 23467                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23468  018AC8  0E03               	movlw	3
 23469  018ACA  6F16               	movwf	22,b	;volatile
 23470                           
 23471                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23472  018ACC  0E4F               	movlw	79
 23473  018ACE  6F19               	movwf	25,b	;volatile
 23474                           
 23475                           ; BSR set to: 61
 23476                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23477  018AD0  6B1C               	clrf	28,b	;volatile
 23478                           
 23479                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23480  018AD2  0E83               	movlw	131
 23481  018AD4  6F14               	movwf	20,b	;volatile
 23482                           
 23483                           ; BSR set to: 61
 23484                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23485  018AD6  0012               	return		;funcret
 23486  018AD8                     __end_of_SPI1_Initialize:
 23487                           	opt callstack 0
 23488                           
 23489 ;; *************** function _PWM8_Initialize *****************
 23490 ;; Defined at:
 23491 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23492 ;; Parameters:    Size  Location     Type
 23493 ;;		None
 23494 ;; Auto vars:     Size  Location     Type
 23495 ;;		None
 23496 ;; Return value:  Size  Location     Type
 23497 ;;                  1  [STACK] void 
 23498 ;; Registers used:
 23499 ;;		wreg, status,2
 23500 ;; Tracked objects:
 23501 ;;		On entry : 3F/39
 23502 ;;		On exit  : 3F/3F
 23503 ;;		Unchanged: 0/0
 23504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23509 ;;Total ram usage:        0 bytes
 23510 ;; Hardware stack levels used:    1
 23511 ;; Hardware stack levels required when called:    6
 23512 ;; This function calls:
 23513 ;;		Nothing
 23514 ;; This function is called by:
 23515 ;;		_SYSTEM_Initialize
 23516 ;; This function uses a reentrant model
 23517 ;;
 23518                           
 23519                           	psect	text103
 23520  018AD8                     __ptext103:
 23521                           	opt callstack 0
 23522  018AD8                     _PWM8_Initialize:
 23523                           	opt callstack 23
 23524                           
 23525                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23526                           
 23527                           ; BSR set to: 61
 23528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23529                           ;incstack = 0
 23530  018AD8  0E80               	movlw	128
 23531  018ADA  6E62               	movwf	98,c	;volatile
 23532                           
 23533                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23534  018ADC  6A61               	clrf	97,c	;volatile
 23535                           
 23536                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23537  018ADE  0E40               	movlw	64
 23538  018AE0  6E60               	movwf	96,c	;volatile
 23539                           
 23540                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23541  018AE2  013F               	movlb	63	; () banked
 23542  018AE4  515F               	movf	95,w,b	;volatile
 23543  018AE6  0B3F               	andlw	-193
 23544  018AE8  0940               	iorlw	64
 23545  018AEA  6F5F               	movwf	95,b	;volatile
 23546                           
 23547                           ; BSR set to: 63
 23548                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23549  018AEC  0012               	return		;funcret
 23550  018AEE                     __end_of_PWM8_Initialize:
 23551                           	opt callstack 0
 23552                           
 23553 ;; *************** function _PMD_Initialize *****************
 23554 ;; Defined at:
 23555 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23556 ;; Parameters:    Size  Location     Type
 23557 ;;		None
 23558 ;; Auto vars:     Size  Location     Type
 23559 ;;		None
 23560 ;; Return value:  Size  Location     Type
 23561 ;;                  1  [STACK] void 
 23562 ;; Registers used:
 23563 ;;		None
 23564 ;; Tracked objects:
 23565 ;;		On entry : 3F/39
 23566 ;;		On exit  : 3F/39
 23567 ;;		Unchanged: 0/0
 23568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23573 ;;Total ram usage:        0 bytes
 23574 ;; Hardware stack levels used:    1
 23575 ;; Hardware stack levels required when called:    6
 23576 ;; This function calls:
 23577 ;;		Nothing
 23578 ;; This function is called by:
 23579 ;;		_SYSTEM_Initialize
 23580 ;; This function uses a reentrant model
 23581 ;;
 23582                           
 23583                           	psect	text104
 23584  018B04                     __ptext104:
 23585                           	opt callstack 0
 23586  018B04                     _PMD_Initialize:
 23587                           	opt callstack 23
 23588                           
 23589                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23590                           
 23591                           ; BSR set to: 63
 23592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23593                           ;incstack = 0
 23594  018B04  0139               	movlb	57	; () banked
 23595  018B06  6BC0               	clrf	192,b	;volatile
 23596                           
 23597                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23598  018B08  6BC1               	clrf	193,b	;volatile
 23599                           
 23600                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23601  018B0A  6BC2               	clrf	194,b	;volatile
 23602                           
 23603                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23604  018B0C  6BC3               	clrf	195,b	;volatile
 23605                           
 23606                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23607  018B0E  6BC4               	clrf	196,b	;volatile
 23608                           
 23609                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23610  018B10  6BC5               	clrf	197,b	;volatile
 23611                           
 23612                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23613  018B12  6BC6               	clrf	198,b	;volatile
 23614                           
 23615                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23616  018B14  6BC7               	clrf	199,b	;volatile
 23617                           
 23618                           ; BSR set to: 57
 23619                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23620  018B16  0012               	return		;funcret
 23621  018B18                     __end_of_PMD_Initialize:
 23622                           	opt callstack 0
 23623                           
 23624 ;; *************** function _PIN_MANAGER_Initialize *****************
 23625 ;; Defined at:
 23626 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23627 ;; Parameters:    Size  Location     Type
 23628 ;;		None
 23629 ;; Auto vars:     Size  Location     Type
 23630 ;;		None
 23631 ;; Return value:  Size  Location     Type
 23632 ;;                  1  [STACK] void 
 23633 ;; Registers used:
 23634 ;;		wreg, status,2
 23635 ;; Tracked objects:
 23636 ;;		On entry : 3F/39
 23637 ;;		On exit  : 3F/3A
 23638 ;;		Unchanged: 0/0
 23639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23644 ;;Total ram usage:        0 bytes
 23645 ;; Hardware stack levels used:    1
 23646 ;; Hardware stack levels required when called:    6
 23647 ;; This function calls:
 23648 ;;		Nothing
 23649 ;; This function is called by:
 23650 ;;		_SYSTEM_Initialize
 23651 ;; This function uses a reentrant model
 23652 ;;
 23653                           
 23654                           	psect	text105
 23655  017712                     __ptext105:
 23656                           	opt callstack 0
 23657  017712                     _PIN_MANAGER_Initialize:
 23658                           	opt callstack 23
 23659                           
 23660                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23661                           
 23662                           ; BSR set to: 57
 23663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23664                           ;incstack = 0
 23665  017712  0E07               	movlw	7
 23666  017714  6EBE               	movwf	190,c	;volatile
 23667                           
 23668                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 23669  017716  0E80               	movlw	128
 23670  017718  6EBD               	movwf	189,c	;volatile
 23671                           
 23672                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23673  01771A  6ABA               	clrf	186,c	;volatile
 23674                           
 23675                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23676  01771C  6ABF               	clrf	191,c	;volatile
 23677                           
 23678                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23679  01771E  6ABB               	clrf	187,c	;volatile
 23680                           
 23681                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23682  017720  0E07               	movlw	7
 23683  017722  6EBC               	movwf	188,c	;volatile
 23684                           
 23685                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23686  017724  6AC6               	clrf	198,c	;volatile
 23687                           
 23688                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23689  017726  0E0F               	movlw	15
 23690  017728  6EC7               	movwf	199,c	;volatile
 23691                           
 23692                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23693  01772A  68C2               	setf	194,c	;volatile
 23694                           
 23695                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23696  01772C  0EBF               	movlw	191
 23697  01772E  6EC3               	movwf	195,c	;volatile
 23698                           
 23699                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23700  017730  0E90               	movlw	144
 23701  017732  6EC4               	movwf	196,c	;volatile
 23702                           
 23703                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23704  017734  0E0C               	movlw	12
 23705  017736  6EC5               	movwf	197,c	;volatile
 23706                           
 23707                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23708  017738  013A               	movlb	58	; () banked
 23709  01773A  6B70               	clrf	112,b	;volatile
 23710                           
 23711                           ; BSR set to: 58
 23712                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23713  01773C  6B60               	clrf	96,b	;volatile
 23714                           
 23715                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23716  01773E  0E3C               	movlw	60
 23717  017740  6F50               	movwf	80,b	;volatile
 23718                           
 23719                           ; BSR set to: 58
 23720                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 23721  017742  6B80               	clrf	128,b	;volatile
 23722                           
 23723                           ; BSR set to: 58
 23724                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 23725  017744  6B90               	clrf	144,b	;volatile
 23726                           
 23727                           ; BSR set to: 58
 23728                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 23729  017746  6940               	setf	64,b	;volatile
 23730                           
 23731                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 23732  017748  0E0C               	movlw	12
 23733  01774A  6F71               	movwf	113,b	;volatile
 23734                           
 23735                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 23736  01774C  0E0F               	movlw	15
 23737  01774E  6F91               	movwf	145,b	;volatile
 23738                           
 23739                           ; BSR set to: 58
 23740                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23741  017750  6B81               	clrf	129,b	;volatile
 23742                           
 23743                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 23744  017752  0E83               	movlw	131
 23745  017754  6F51               	movwf	81,b	;volatile
 23746                           
 23747                           ; BSR set to: 58
 23748                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23749  017756  6B41               	clrf	65,b	;volatile
 23750                           
 23751                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 23752  017758  0E97               	movlw	151
 23753  01775A  6F61               	movwf	97,b	;volatile
 23754                           
 23755                           ; BSR set to: 58
 23756                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 23757  01775C  6B82               	clrf	130,b	;volatile
 23758                           
 23759                           ; BSR set to: 58
 23760                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 23761  01775E  6B92               	clrf	146,b	;volatile
 23762                           
 23763                           ; BSR set to: 58
 23764                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 23765  017760  6B42               	clrf	66,b	;volatile
 23766                           
 23767                           ; BSR set to: 58
 23768                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 23769  017762  6B52               	clrf	82,b	;volatile
 23770                           
 23771                           ; BSR set to: 58
 23772                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 23773  017764  6B62               	clrf	98,b	;volatile
 23774                           
 23775                           ; BSR set to: 58
 23776                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 23777  017766  6B72               	clrf	114,b	;volatile
 23778                           
 23779                           ; BSR set to: 58
 23780                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 23781  017768  6943               	setf	67,b	;volatile
 23782                           
 23783                           ; BSR set to: 58
 23784                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 23785  01776A  6953               	setf	83,b	;volatile
 23786                           
 23787                           ; BSR set to: 58
 23788                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 23789  01776C  6963               	setf	99,b	;volatile
 23790                           
 23791                           ; BSR set to: 58
 23792                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 23793  01776E  6973               	setf	115,b	;volatile
 23794                           
 23795                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 23796  017770  0E07               	movlw	7
 23797  017772  6F83               	movwf	131,b	;volatile
 23798                           
 23799                           ; BSR set to: 58
 23800                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 23801  017774  6993               	setf	147,b	;volatile
 23802                           
 23803                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 23804  017776  0E0F               	movlw	15
 23805  017778  6FE8               	movwf	232,b	;volatile
 23806                           
 23807                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 23808  01777A  0E13               	movlw	19
 23809  01777C  6FDE               	movwf	222,b	;volatile
 23810                           
 23811                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 23812  01777E  0E16               	movlw	22
 23813  017780  6F0E               	movwf	14,b	;volatile
 23814                           
 23815                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 23816  017782  0E1E               	movlw	30
 23817  017784  6F13               	movwf	19,b	;volatile
 23818                           
 23819                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 23820  017786  0E08               	movlw	8
 23821  017788  6FC0               	movwf	192,b	;volatile
 23822                           
 23823                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 23824  01778A  0E10               	movlw	16
 23825  01778C  6F19               	movwf	25,b	;volatile
 23826                           
 23827                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 23828  01778E  0E09               	movlw	9
 23829  017790  6FC1               	movwf	193,b	;volatile
 23830                           
 23831                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 23832  017792  0E1F               	movlw	31
 23833  017794  6F15               	movwf	21,b	;volatile
 23834                           
 23835                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 23836  017796  0E13               	movlw	19
 23837  017798  6F16               	movwf	22,b	;volatile
 23838                           
 23839                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 23840  01779A  0E17               	movlw	23
 23841  01779C  6FE5               	movwf	229,b	;volatile
 23842                           
 23843                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 23844  01779E  0E14               	movlw	20
 23845  0177A0  6FDF               	movwf	223,b	;volatile
 23846                           
 23847                           ; BSR set to: 58
 23848                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 23849  0177A2  0012               	return		;funcret
 23850  0177A4                     __end_of_PIN_MANAGER_Initialize:
 23851                           	opt callstack 0
 23852                           
 23853 ;; *************** function _OSCILLATOR_Initialize *****************
 23854 ;; Defined at:
 23855 ;;		line 71 in file "mcc_generated_files/mcc.c"
 23856 ;; Parameters:    Size  Location     Type
 23857 ;;		None
 23858 ;; Auto vars:     Size  Location     Type
 23859 ;;		None
 23860 ;; Return value:  Size  Location     Type
 23861 ;;                  1  [STACK] void 
 23862 ;; Registers used:
 23863 ;;		wreg, status,2
 23864 ;; Tracked objects:
 23865 ;;		On entry : 3F/3A
 23866 ;;		On exit  : 3F/39
 23867 ;;		Unchanged: 0/0
 23868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23873 ;;Total ram usage:        0 bytes
 23874 ;; Hardware stack levels used:    1
 23875 ;; Hardware stack levels required when called:    6
 23876 ;; This function calls:
 23877 ;;		Nothing
 23878 ;; This function is called by:
 23879 ;;		_SYSTEM_Initialize
 23880 ;; This function uses a reentrant model
 23881 ;;
 23882                           
 23883                           	psect	text106
 23884  018AEE                     __ptext106:
 23885                           	opt callstack 0
 23886  018AEE                     _OSCILLATOR_Initialize:
 23887                           	opt callstack 23
 23888                           
 23889                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 23890                           
 23891                           ; BSR set to: 58
 23892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23893                           ;incstack = 0
 23894  018AEE  0E20               	movlw	32
 23895  018AF0  0139               	movlb	57	; () banked
 23896  018AF2  6FD9               	movwf	217,b	;volatile
 23897                           
 23898                           ; BSR set to: 57
 23899                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 23900  018AF4  6BDB               	clrf	219,b	;volatile
 23901                           
 23902                           ; BSR set to: 57
 23903                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 23904  018AF6  6BDD               	clrf	221,b	;volatile
 23905                           
 23906                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 23907  018AF8  0E02               	movlw	2
 23908  018AFA  6FDF               	movwf	223,b	;volatile
 23909                           
 23910                           ; BSR set to: 57
 23911                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 23912  018AFC  6BDE               	clrf	222,b	;volatile
 23913  018AFE                     l171:
 23914                           
 23915                           ; BSR set to: 57
 23916                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 23917  018AFE  B1DC               	btfsc	220,0,b	;volatile
 23918  018B00  0012               	return	
 23919  018B02  D7FD               	goto	l171
 23920  018B04                     __end_of_OSCILLATOR_Initialize:
 23921                           	opt callstack 0
 23922                           
 23923 ;; *************** function _INTERRUPT_Initialize *****************
 23924 ;; Defined at:
 23925 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23926 ;; Parameters:    Size  Location     Type
 23927 ;;		None
 23928 ;; Auto vars:     Size  Location     Type
 23929 ;;  state           1  [STACK] _Bool 
 23930 ;; Return value:  Size  Location     Type
 23931 ;;                  1  [STACK] void 
 23932 ;; Registers used:
 23933 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 23934 ;; Tracked objects:
 23935 ;;		On entry : 0/0
 23936 ;;		On exit  : 3F/39
 23937 ;;		Unchanged: 0/0
 23938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23943 ;;Total ram usage:        0 bytes
 23944 ;; Hardware stack levels used:    1
 23945 ;; Hardware stack levels required when called:    6
 23946 ;; This function calls:
 23947 ;;		Nothing
 23948 ;; This function is called by:
 23949 ;;		_SYSTEM_Initialize
 23950 ;; This function uses a reentrant model
 23951 ;;
 23952                           
 23953                           	psect	text107
 23954  017BF8                     __ptext107:
 23955                           	opt callstack 0
 23956  017BF8                     _INTERRUPT_Initialize:
 23957                           	opt callstack 0
 23958                           
 23959                           ; BSR set to: 57
 23960                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23961  017BF8  52E6               	movf	postinc1,f,c
 23962                           
 23963                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 23964                           
 23965                           ;incstack = 0
 23966  017BFA  8AD2               	bsf	210,5,c	;volatile
 23967                           
 23968                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 23969  017BFC  AED2               	btfss	16338,7,c	;volatile
 23970  017BFE  D003               	goto	u8010
 23971  017C00  6A3D               	clrf	(btemp+11)^0,c
 23972  017C02  2A3D               	incf	(btemp+11)^0,f,c
 23973  017C04  D001               	goto	u8028
 23974  017C06                     u8010:
 23975  017C06  6A3D               	clrf	(btemp+11)^0,c
 23976  017C08                     u8028:
 23977                           
 23978                           ;stkvar	_state @ sp[(-1)+0]
 23979  017C08  0EFF               	movlw	-1
 23980  017C0A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 23981                           
 23982                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23983  017C10  9ED2               	bcf	16338,7,c	;volatile
 23984                           
 23985                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23986  017C12  0E55               	movlw	85
 23987  017C14  6ED4               	movwf	212,c	;volatile
 23988                           
 23989                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23990  017C16  0EAA               	movlw	170
 23991  017C18  6ED4               	movwf	212,c	;volatile
 23992                           
 23993                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23994  017C1A  90D4               	bcf	212,0,c	;volatile
 23995                           
 23996                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23997  017C1C  0138               	movlb	56	; () banked
 23998  017C1E  6B9F               	clrf	159,b	;volatile
 23999                           
 24000                           ; BSR set to: 56
 24001                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24002  017C20  6B9E               	clrf	158,b	;volatile
 24003                           
 24004                           ; BSR set to: 56
 24005                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24006  017C22  0E08               	movlw	8
 24007  017C24  6F9D               	movwf	157,b	;volatile
 24008                           
 24009                           ; BSR set to: 56
 24010                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24011  017C26  0E55               	movlw	85
 24012  017C28  6ED4               	movwf	212,c	;volatile
 24013                           
 24014                           ; BSR set to: 56
 24015                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24016  017C2A  0EAA               	movlw	170
 24017  017C2C  6ED4               	movwf	212,c	;volatile
 24018                           
 24019                           ; BSR set to: 56
 24020                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24021  017C2E  80D4               	bsf	212,0,c	;volatile
 24022                           
 24023                           ; BSR set to: 56
 24024                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24025                           ;stkvar	_state @ sp[(-1)+0]
 24026  017C30  0EFF               	movlw	-1
 24027  017C32  B0E3               	btfsc	plusw1,0,c
 24028  017C34  D002               	bra	u8035
 24029  017C36  9ED2               	bcf	16338,7,c	;volatile
 24030  017C38  D001               	bra	u8036
 24031  017C3A                     u8035:
 24032  017C3A  8ED2               	bsf	16338,7,c	;volatile
 24033  017C3C                     u8036:
 24034                           
 24035                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24036  017C3C  0139               	movlb	57	; () banked
 24037  017C3E  8782               	bsf	130,3,b	;volatile
 24038                           
 24039                           ; BSR set to: 57
 24040                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24041  017C40  8382               	bsf	130,1,b	;volatile
 24042                           
 24043                           ; BSR set to: 57
 24044                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24045  017C42  8182               	bsf	130,0,b	;volatile
 24046                           
 24047                           ; BSR set to: 57
 24048                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24049  017C44  8582               	bsf	130,2,b	;volatile
 24050                           
 24051                           ; BSR set to: 57
 24052                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24053  017C46  8786               	bsf	134,3,b	;volatile
 24054                           
 24055                           ; BSR set to: 57
 24056                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24057  017C48  8586               	bsf	134,2,b	;volatile
 24058                           
 24059                           ; BSR set to: 57
 24060                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24061  017C4A  8983               	bsf	131,4,b	;volatile
 24062                           
 24063                           ; BSR set to: 57
 24064                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24065  017C4C  8783               	bsf	131,3,b	;volatile
 24066                           
 24067                           ; BSR set to: 57
 24068                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24069  017C4E  8181               	bsf	129,0,b	;volatile
 24070                           
 24071                           ; BSR set to: 57
 24072                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 24073  017C50  9185               	bcf	133,0,b	;volatile
 24074                           
 24075                           ; BSR set to: 57
 24076                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24077  017C52  8189               	bsf	137,0,b	;volatile
 24078                           
 24079                           ; BSR set to: 57
 24080                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24081  017C54  9D88               	bcf	136,6,b	;volatile
 24082                           
 24083                           ; BSR set to: 57
 24084                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24085  017C56  8581               	bsf	129,2,b	;volatile
 24086                           
 24087                           ; BSR set to: 57
 24088                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24089  017C58  8781               	bsf	129,3,b	;volatile
 24090                           
 24091                           ; BSR set to: 57
 24092                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24093  017C5A  52E5               	movf	postdec1,f,c
 24094  017C5C  0012               	return		;funcret
 24095  017C5E                     __end_of_INTERRUPT_Initialize:
 24096                           	opt callstack 0
 24097                           
 24098 ;; *************** function _FVR_Initialize *****************
 24099 ;; Defined at:
 24100 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24101 ;; Parameters:    Size  Location     Type
 24102 ;;		None
 24103 ;; Auto vars:     Size  Location     Type
 24104 ;;		None
 24105 ;; Return value:  Size  Location     Type
 24106 ;;                  1  [STACK] void 
 24107 ;; Registers used:
 24108 ;;		wreg, status,2
 24109 ;; Tracked objects:
 24110 ;;		On entry : 3F/39
 24111 ;;		On exit  : 3F/3E
 24112 ;;		Unchanged: 0/0
 24113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24118 ;;Total ram usage:        0 bytes
 24119 ;; Hardware stack levels used:    1
 24120 ;; Hardware stack levels required when called:    6
 24121 ;; This function calls:
 24122 ;;		Nothing
 24123 ;; This function is called by:
 24124 ;;		_SYSTEM_Initialize
 24125 ;; This function uses a reentrant model
 24126 ;;
 24127                           
 24128                           	psect	text108
 24129  018BC2                     __ptext108:
 24130                           	opt callstack 0
 24131  018BC2                     _FVR_Initialize:
 24132                           	opt callstack 23
 24133                           
 24134                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24135                           
 24136                           ; BSR set to: 57
 24137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24138                           ;incstack = 0
 24139  018BC2  0EAF               	movlw	175
 24140  018BC4  013E               	movlb	62	; () banked
 24141  018BC6  6FC1               	movwf	193,b	;volatile
 24142                           
 24143                           ; BSR set to: 62
 24144                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24145  018BC8  0012               	return		;funcret
 24146  018BCA                     __end_of_FVR_Initialize:
 24147                           	opt callstack 0
 24148                           
 24149 ;; *************** function _EXT_INT_Initialize *****************
 24150 ;; Defined at:
 24151 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 24152 ;; Parameters:    Size  Location     Type
 24153 ;;		None
 24154 ;; Auto vars:     Size  Location     Type
 24155 ;;		None
 24156 ;; Return value:  Size  Location     Type
 24157 ;;                  1  [STACK] void 
 24158 ;; Registers used:
 24159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24160 ;; Tracked objects:
 24161 ;;		On entry : 3F/3F
 24162 ;;		On exit  : 3F/39
 24163 ;;		Unchanged: 0/0
 24164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24169 ;;Total ram usage:        0 bytes
 24170 ;; Hardware stack levels used:    1
 24171 ;; Hardware stack levels required when called:    7
 24172 ;; This function calls:
 24173 ;;		_INT0_SetInterruptHandler
 24174 ;;		_INT1_SetInterruptHandler
 24175 ;; This function is called by:
 24176 ;;		_SYSTEM_Initialize
 24177 ;; This function uses a reentrant model
 24178 ;;
 24179                           
 24180                           	psect	text109
 24181  0183BA                     __ptext109:
 24182                           	opt callstack 0
 24183  0183BA                     _EXT_INT_Initialize:
 24184                           	opt callstack 22
 24185                           
 24186                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 24187                           
 24188                           ; BSR set to: 62
 24189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24190                           ;incstack = 0
 24191  0183BA  0139               	movlb	57	; () banked
 24192  0183BC  91A1               	bcf	161,0,b	;volatile
 24193                           
 24194                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 24195  0183BE  90D2               	bcf	210,0,c	;volatile
 24196                           
 24197                           ; BSR set to: 57
 24198                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24199  0183C0  0EE4               	movlw	low _INT0_DefaultInterruptHandler
 24200  0183C2  6EE6               	movwf	postinc1,c
 24201  0183C4  0E8B               	movlw	high _INT0_DefaultInterruptHandler
 24202  0183C6  6EE6               	movwf	postinc1,c
 24203  0183C8  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24204  0183CA  6EE6               	movwf	postinc1,c
 24205  0183CC  ECA1  F0C3         	call	_INT0_SetInterruptHandler	;wreg free
 24206                           
 24207                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 24208  0183D0  0139               	movlb	57	; () banked
 24209  0183D2  8191               	bsf	145,0,b	;volatile
 24210                           
 24211                           ; BSR set to: 57
 24212                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 24213  0183D4  91A5               	bcf	165,0,b	;volatile
 24214                           
 24215                           ; BSR set to: 57
 24216                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 24217  0183D6  92D2               	bcf	210,1,c	;volatile
 24218                           
 24219                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24220  0183D8  0EE2               	movlw	low _INT1_DefaultInterruptHandler
 24221  0183DA  6EE6               	movwf	postinc1,c
 24222  0183DC  0E8B               	movlw	high _INT1_DefaultInterruptHandler
 24223  0183DE  6EE6               	movwf	postinc1,c
 24224  0183E0  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24225  0183E2  6EE6               	movwf	postinc1,c
 24226  0183E4  EC8D  F0C3         	call	_INT1_SetInterruptHandler	;wreg free
 24227                           
 24228                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 24229  0183E8  0139               	movlb	57	; () banked
 24230  0183EA  8195               	bsf	149,0,b	;volatile
 24231                           
 24232                           ; BSR set to: 57
 24233                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24234  0183EC  0012               	return		;funcret
 24235  0183EE                     __end_of_EXT_INT_Initialize:
 24236                           	opt callstack 0
 24237                           
 24238 ;; *************** function _INT1_SetInterruptHandler *****************
 24239 ;; Defined at:
 24240 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 24241 ;; Parameters:    Size  Location     Type
 24242 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24243 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 24244 ;; Auto vars:     Size  Location     Type
 24245 ;;		None
 24246 ;; Return value:  Size  Location     Type
 24247 ;;                  1  [STACK] void 
 24248 ;; Registers used:
 24249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24250 ;; Tracked objects:
 24251 ;;		On entry : 3F/39
 24252 ;;		On exit  : 0/0
 24253 ;;		Unchanged: 0/0
 24254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24259 ;;Total ram usage:        0 bytes
 24260 ;; Hardware stack levels used:    1
 24261 ;; Hardware stack levels required when called:    6
 24262 ;; This function calls:
 24263 ;;		Nothing
 24264 ;; This function is called by:
 24265 ;;		_EXT_INT_Initialize
 24266 ;;		_start_switch_handler
 24267 ;; This function uses a reentrant model
 24268 ;;
 24269                           
 24270                           	psect	text110
 24271  01871A                     __ptext110:
 24272                           	opt callstack 0
 24273  01871A                     _INT1_SetInterruptHandler:
 24274                           	opt callstack 23
 24275                           
 24276                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24277                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24278                           
 24279                           ; BSR set to: 57
 24280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24281                           ;incstack = 0
 24282  01871A  50E1               	movf	fsr1l,w,c
 24283  01871C  0FFD               	addlw	-3
 24284  01871E  6ED9               	movwf	fsr2l,c
 24285  018720  50E2               	movf	fsr1h,w,c
 24286  018722  6EDA               	movwf	fsr2h,c
 24287  018724  0EFF               	movlw	255
 24288  018726  22DA               	addwfc	fsr2h,f,c
 24289  018728  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 24290  01872E  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 24291  018734  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 24292                           
 24293                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24294  01873A  52E5               	movf	postdec1,f,c
 24295  01873C  52E5               	movf	postdec1,f,c
 24296  01873E  52E5               	movf	postdec1,f,c
 24297  018740  0012               	return		;funcret
 24298  018742                     __end_of_INT1_SetInterruptHandler:
 24299                           	opt callstack 0
 24300                           
 24301 ;; *************** function _INT0_SetInterruptHandler *****************
 24302 ;; Defined at:
 24303 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24304 ;; Parameters:    Size  Location     Type
 24305 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24306 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24307 ;; Auto vars:     Size  Location     Type
 24308 ;;		None
 24309 ;; Return value:  Size  Location     Type
 24310 ;;                  1  [STACK] void 
 24311 ;; Registers used:
 24312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24313 ;; Tracked objects:
 24314 ;;		On entry : 3F/39
 24315 ;;		On exit  : 0/0
 24316 ;;		Unchanged: 0/0
 24317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24322 ;;Total ram usage:        0 bytes
 24323 ;; Hardware stack levels used:    1
 24324 ;; Hardware stack levels required when called:    6
 24325 ;; This function calls:
 24326 ;;		Nothing
 24327 ;; This function is called by:
 24328 ;;		_EXT_INT_Initialize
 24329 ;; This function uses a reentrant model
 24330 ;;
 24331                           
 24332                           	psect	text111
 24333  018742                     __ptext111:
 24334                           	opt callstack 0
 24335  018742                     _INT0_SetInterruptHandler:
 24336                           	opt callstack 22
 24337                           
 24338                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24339                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24340                           
 24341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24342                           ;incstack = 0
 24343  018742  50E1               	movf	fsr1l,w,c
 24344  018744  0FFD               	addlw	-3
 24345  018746  6ED9               	movwf	fsr2l,c
 24346  018748  50E2               	movf	fsr1h,w,c
 24347  01874A  6EDA               	movwf	fsr2h,c
 24348  01874C  0EFF               	movlw	255
 24349  01874E  22DA               	addwfc	fsr2h,f,c
 24350  018750  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 24351  018756  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 24352  01875C  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 24353                           
 24354                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24355  018762  52E5               	movf	postdec1,f,c
 24356  018764  52E5               	movf	postdec1,f,c
 24357  018766  52E5               	movf	postdec1,f,c
 24358  018768  0012               	return		;funcret
 24359  01876A                     __end_of_INT0_SetInterruptHandler:
 24360                           	opt callstack 0
 24361                           
 24362 ;; *************** function _DMA2_Initialize *****************
 24363 ;; Defined at:
 24364 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24365 ;; Parameters:    Size  Location     Type
 24366 ;;		None
 24367 ;; Auto vars:     Size  Location     Type
 24368 ;;		None
 24369 ;; Return value:  Size  Location     Type
 24370 ;;                  1  [STACK] void 
 24371 ;; Registers used:
 24372 ;;		wreg, status,2
 24373 ;; Tracked objects:
 24374 ;;		On entry : 3F/3D
 24375 ;;		On exit  : 3F/3B
 24376 ;;		Unchanged: 0/0
 24377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24382 ;;Total ram usage:        0 bytes
 24383 ;; Hardware stack levels used:    1
 24384 ;; Hardware stack levels required when called:    6
 24385 ;; This function calls:
 24386 ;;		Nothing
 24387 ;; This function is called by:
 24388 ;;		_SYSTEM_Initialize
 24389 ;; This function uses a reentrant model
 24390 ;;
 24391                           
 24392                           	psect	text112
 24393  017EFE                     __ptext112:
 24394                           	opt callstack 0
 24395  017EFE                     _DMA2_Initialize:
 24396                           	opt callstack 23
 24397                           
 24398                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24399                           
 24400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24401                           ;incstack = 0
 24402  017EFE  0E00               	movlw	0
 24403  017F00  013B               	movlb	59	; () banked
 24404  017F02  6FD9               	movwf	217,b	;volatile
 24405  017F04  0E10               	movlw	16
 24406  017F06  6FDA               	movwf	218,b	;volatile
 24407  017F08  0E00               	movlw	0
 24408  017F0A  6FDB               	movwf	219,b	;volatile
 24409                           
 24410                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24411  017F0C  0E3F               	movlw	63
 24412  017F0E  6FD1               	movwf	209,b	;volatile
 24413  017F10  0EBB               	movlw	187
 24414  017F12  6FD0               	movwf	208,b	;volatile
 24415                           
 24416                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24417  017F14  0E03               	movlw	3
 24418  017F16  6FDD               	movwf	221,b	;volatile
 24419                           
 24420                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24421  017F18  0E00               	movlw	0
 24422  017F1A  6FD8               	movwf	216,b	;volatile
 24423  017F1C  0E01               	movlw	1
 24424  017F1E  6FD7               	movwf	215,b	;volatile
 24425                           
 24426                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24427  017F20  0E00               	movlw	0
 24428  017F22  6FCF               	movwf	207,b	;volatile
 24429  017F24  0E01               	movlw	1
 24430  017F26  6FCE               	movwf	206,b	;volatile
 24431                           
 24432                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24433  017F28  0E46               	movlw	70
 24434  017F2A  6FDF               	movwf	223,b	;volatile
 24435                           
 24436                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24437  017F2C  0E3D               	movlw	61
 24438  017F2E  6FDE               	movwf	222,b	;volatile
 24439                           
 24440                           ; BSR set to: 59
 24441                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24442  017F30  0139               	movlb	57	; () banked
 24443  017F32  97A5               	bcf	165,3,b	;volatile
 24444                           
 24445                           ; BSR set to: 57
 24446                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24447  017F34  95A5               	bcf	165,2,b	;volatile
 24448                           
 24449                           ; BSR set to: 57
 24450                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24451  017F36  9BA5               	bcf	165,5,b	;volatile
 24452                           
 24453                           ; BSR set to: 57
 24454                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24455  017F38  99A5               	bcf	165,4,b	;volatile
 24456                           
 24457                           ; BSR set to: 57
 24458                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24459  017F3A  9795               	bcf	149,3,b	;volatile
 24460                           
 24461                           ; BSR set to: 57
 24462                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24463  017F3C  9595               	bcf	149,2,b	;volatile
 24464                           
 24465                           ; BSR set to: 57
 24466                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24467  017F3E  9B95               	bcf	149,5,b	;volatile
 24468                           
 24469                           ; BSR set to: 57
 24470                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24471  017F40  9995               	bcf	149,4,b	;volatile
 24472  017F42  9ED2               	bcf	16338,7,c	;# 
 24473  017F44  0139               	banksel	14831	;# 
 24474  017F46  0E55               	movlw	85	;# 
 24475  017F48  6FEF               	movwf	14831,b	;# 
 24476  017F4A  0EAA               	movlw	170	;# 
 24477  017F4C  6FEF               	movwf	14831,b	;# 
 24478  017F4E  81EF               	bsf	14831,0,b	;# 
 24479  017F50  8ED2               	bsf	16338,7,c	;# 
 24480                           
 24481                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24482  017F52  013B               	movlb	59	; () banked
 24483  017F54  6BDC               	clrf	220,b	;volatile
 24484                           
 24485                           ; BSR set to: 59
 24486                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24487  017F56  0012               	return		;funcret
 24488  017F58                     __end_of_DMA2_Initialize:
 24489                           	opt callstack 0
 24490                           
 24491 ;; *************** function _DMA1_Initialize *****************
 24492 ;; Defined at:
 24493 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24494 ;; Parameters:    Size  Location     Type
 24495 ;;		None
 24496 ;; Auto vars:     Size  Location     Type
 24497 ;;		None
 24498 ;; Return value:  Size  Location     Type
 24499 ;;                  1  [STACK] void 
 24500 ;; Registers used:
 24501 ;;		wreg, status,2
 24502 ;; Tracked objects:
 24503 ;;		On entry : 3F/3B
 24504 ;;		On exit  : 3F/3B
 24505 ;;		Unchanged: 0/0
 24506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24511 ;;Total ram usage:        0 bytes
 24512 ;; Hardware stack levels used:    1
 24513 ;; Hardware stack levels required when called:    6
 24514 ;; This function calls:
 24515 ;;		Nothing
 24516 ;; This function is called by:
 24517 ;;		_SYSTEM_Initialize
 24518 ;; This function uses a reentrant model
 24519 ;;
 24520                           
 24521                           	psect	text113
 24522  017ABC                     __ptext113:
 24523                           	opt callstack 0
 24524  017ABC                     _DMA1_Initialize:
 24525                           	opt callstack 23
 24526                           
 24527                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24528                           
 24529                           ; BSR set to: 59
 24530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24531                           ;incstack = 0
 24532  017ABC  0E00               	movlw	0
 24533  017ABE  013B               	movlb	59	; () banked
 24534  017AC0  6FF9               	movwf	249,b	;volatile
 24535  017AC2  0E10               	movlw	16
 24536  017AC4  6FFA               	movwf	250,b	;volatile
 24537  017AC6  0E00               	movlw	0
 24538  017AC8  6FFB               	movwf	251,b	;volatile
 24539                           
 24540                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24541  017ACA  0E3D               	movlw	61
 24542  017ACC  6FF1               	movwf	241,b	;volatile
 24543  017ACE  0E11               	movlw	17
 24544  017AD0  6FF0               	movwf	240,b	;volatile
 24545                           
 24546                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24547  017AD2  0E03               	movlw	3
 24548  017AD4  6FFD               	movwf	253,b	;volatile
 24549                           
 24550                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24551  017AD6  0E00               	movlw	0
 24552  017AD8  6FF8               	movwf	248,b	;volatile
 24553  017ADA  0E01               	movlw	1
 24554  017ADC  6FF7               	movwf	247,b	;volatile
 24555                           
 24556                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24557  017ADE  0E00               	movlw	0
 24558  017AE0  6FEF               	movwf	239,b	;volatile
 24559  017AE2  0E01               	movlw	1
 24560  017AE4  6FEE               	movwf	238,b	;volatile
 24561                           
 24562                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24563  017AE6  0E15               	movlw	21
 24564  017AE8  6FFF               	movwf	255,b	;volatile
 24565                           
 24566                           ; BSR set to: 59
 24567                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24568  017AEA  6BFE               	clrf	254,b	;volatile
 24569                           
 24570                           ; BSR set to: 59
 24571                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24572  017AEC  0139               	movlb	57	; () banked
 24573  017AEE  93A2               	bcf	162,1,b	;volatile
 24574                           
 24575                           ; BSR set to: 57
 24576                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24577  017AF0  91A2               	bcf	162,0,b	;volatile
 24578                           
 24579                           ; BSR set to: 57
 24580                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24581  017AF2  97A2               	bcf	162,3,b	;volatile
 24582                           
 24583                           ; BSR set to: 57
 24584                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24585  017AF4  95A2               	bcf	162,2,b	;volatile
 24586                           
 24587                           ; BSR set to: 57
 24588                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24589  017AF6  8392               	bsf	146,1,b	;volatile
 24590                           
 24591                           ; BSR set to: 57
 24592                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24593  017AF8  8192               	bsf	146,0,b	;volatile
 24594                           
 24595                           ; BSR set to: 57
 24596                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24597  017AFA  8792               	bsf	146,3,b	;volatile
 24598                           
 24599                           ; BSR set to: 57
 24600                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24601  017AFC  8592               	bsf	146,2,b	;volatile
 24602                           
 24603                           ; BSR set to: 57
 24604                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24605  017AFE  6BF1               	clrf	241,b	;volatile
 24606                           
 24607                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24608  017B00  0E01               	movlw	1
 24609  017B02  6FF2               	movwf	242,b	;volatile
 24610                           
 24611                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24612  017B04  0E04               	movlw	4
 24613  017B06  6FF3               	movwf	243,b	;volatile
 24614                           
 24615                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24616  017B08  0E02               	movlw	2
 24617  017B0A  6FF4               	movwf	244,b	;volatile
 24618                           
 24619                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24620  017B0C  0E03               	movlw	3
 24621  017B0E  6FF7               	movwf	247,b	;volatile
 24622  017B10  9ED2               	bcf	16338,7,c	;# 
 24623  017B12  0139               	banksel	14831	;# 
 24624  017B14  0E55               	movlw	85	;# 
 24625  017B16  6FEF               	movwf	14831,b	;# 
 24626  017B18  0EAA               	movlw	170	;# 
 24627  017B1A  6FEF               	movwf	14831,b	;# 
 24628  017B1C  81EF               	bsf	14831,0,b	;# 
 24629  017B1E  8ED2               	bsf	16338,7,c	;# 
 24630                           
 24631                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24632  017B20  013B               	movlb	59	; () banked
 24633  017B22  6BFC               	clrf	252,b	;volatile
 24634                           
 24635                           ; BSR set to: 59
 24636                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24637  017B24  0012               	return		;funcret
 24638  017B26                     __end_of_DMA1_Initialize:
 24639                           	opt callstack 0
 24640                           
 24641 ;; *************** function _CLKREF_Initialize *****************
 24642 ;; Defined at:
 24643 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24644 ;; Parameters:    Size  Location     Type
 24645 ;;		None
 24646 ;; Auto vars:     Size  Location     Type
 24647 ;;		None
 24648 ;; Return value:  Size  Location     Type
 24649 ;;                  1  [STACK] void 
 24650 ;; Registers used:
 24651 ;;		wreg, status,2
 24652 ;; Tracked objects:
 24653 ;;		On entry : 3F/3B
 24654 ;;		On exit  : 3F/3C
 24655 ;;		Unchanged: 0/0
 24656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24661 ;;Total ram usage:        0 bytes
 24662 ;; Hardware stack levels used:    1
 24663 ;; Hardware stack levels required when called:    6
 24664 ;; This function calls:
 24665 ;;		Nothing
 24666 ;; This function is called by:
 24667 ;;		_SYSTEM_Initialize
 24668 ;; This function uses a reentrant model
 24669 ;;
 24670                           
 24671                           	psect	text114
 24672  018B76                     __ptext114:
 24673                           	opt callstack 0
 24674  018B76                     _CLKREF_Initialize:
 24675                           	opt callstack 23
 24676                           
 24677                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24678                           
 24679                           ; BSR set to: 59
 24680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24681                           ;incstack = 0
 24682  018B76  013C               	movlb	60	; () banked
 24683  018B78  6BE6               	clrf	230,b	;volatile
 24684                           
 24685                           ; BSR set to: 60
 24686                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24687  018B7A  0E94               	movlw	148
 24688  018B7C  6FE5               	movwf	229,b	;volatile
 24689                           
 24690                           ; BSR set to: 60
 24691                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24692  018B7E  0012               	return		;funcret
 24693  018B80                     __end_of_CLKREF_Initialize:
 24694                           	opt callstack 0
 24695                           
 24696 ;; *************** function _ADCC_Initialize *****************
 24697 ;; Defined at:
 24698 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24699 ;; Parameters:    Size  Location     Type
 24700 ;;		None
 24701 ;; Auto vars:     Size  Location     Type
 24702 ;;		None
 24703 ;; Return value:  Size  Location     Type
 24704 ;;                  1  [STACK] void 
 24705 ;; Registers used:
 24706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24707 ;; Tracked objects:
 24708 ;;		On entry : 3F/3E
 24709 ;;		On exit  : 0/0
 24710 ;;		Unchanged: 0/0
 24711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24716 ;;Total ram usage:        0 bytes
 24717 ;; Hardware stack levels used:    1
 24718 ;; Hardware stack levels required when called:    7
 24719 ;; This function calls:
 24720 ;;		_ADCC_SetADIInterruptHandler
 24721 ;;		_ADCC_SetADTIInterruptHandler
 24722 ;; This function is called by:
 24723 ;;		_SYSTEM_Initialize
 24724 ;; This function uses a reentrant model
 24725 ;;
 24726                           
 24727                           	psect	text115
 24728  017B26                     __ptext115:
 24729                           	opt callstack 0
 24730  017B26                     _ADCC_Initialize:
 24731                           	opt callstack 22
 24732                           
 24733                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 24734                           
 24735                           ; BSR set to: 60
 24736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24737                           ;incstack = 0
 24738  017B26  013E               	movlb	62	; () banked
 24739  017B28  6BDE               	clrf	222,b	;volatile
 24740                           
 24741                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24742  017B2A  6BDF               	clrf	223,b	;volatile
 24743                           
 24744                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24745  017B2C  6BE0               	clrf	224,b	;volatile
 24746                           
 24747                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24748  017B2E  6BE1               	clrf	225,b	;volatile
 24749                           
 24750                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 24751  017B30  6BE4               	clrf	228,b	;volatile
 24752                           
 24753                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 24754  017B32  6BE5               	clrf	229,b	;volatile
 24755                           
 24756                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 24757  017B34  6BEA               	clrf	234,b	;volatile
 24758                           
 24759                           ; BSR set to: 62
 24760                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 24761  017B36  0E40               	movlw	64
 24762  017B38  6FEC               	movwf	236,b	;volatile
 24763                           
 24764                           ; BSR set to: 62
 24765                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 24766  017B3A  6BF1               	clrf	241,b	;volatile
 24767                           
 24768                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 24769  017B3C  0E20               	movlw	32
 24770  017B3E  6FF3               	movwf	243,b	;volatile
 24771                           
 24772                           ; BSR set to: 62
 24773                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 24774  017B40  6BF4               	clrf	244,b	;volatile
 24775                           
 24776                           ; BSR set to: 62
 24777                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 24778  017B42  6BF5               	clrf	245,b	;volatile
 24779                           
 24780                           ; BSR set to: 62
 24781                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 24782  017B44  6BF6               	clrf	246,b	;volatile
 24783                           
 24784                           ; BSR set to: 62
 24785                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 24786  017B46  6BF7               	clrf	247,b	;volatile
 24787                           
 24788                           ; BSR set to: 62
 24789                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 24790  017B48  6BF9               	clrf	249,b	;volatile
 24791                           
 24792                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 24793  017B4A  0E5B               	movlw	91
 24794  017B4C  6FFA               	movwf	250,b	;volatile
 24795                           
 24796                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 24797  017B4E  0E27               	movlw	39
 24798  017B50  6FFB               	movwf	251,b	;volatile
 24799                           
 24800                           ; BSR set to: 62
 24801                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 24802  017B52  6BFC               	clrf	252,b	;volatile
 24803                           
 24804                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 24805  017B54  0E02               	movlw	2
 24806  017B56  6FFD               	movwf	253,b	;volatile
 24807                           
 24808                           ; BSR set to: 62
 24809                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 24810  017B58  6BFE               	clrf	254,b	;volatile
 24811                           
 24812                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 24813  017B5A  0E07               	movlw	7
 24814  017B5C  6FFF               	movwf	255,b	;volatile
 24815                           
 24816                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 24817  017B5E  0E84               	movlw	132
 24818  017B60  6FF8               	movwf	248,b	;volatile
 24819                           
 24820                           ; BSR set to: 62
 24821                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 24822  017B62  0139               	movlb	57	; () banked
 24823  017B64  95A1               	bcf	161,2,b	;volatile
 24824                           
 24825                           ; BSR set to: 57
 24826                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 24827  017B66  8591               	bsf	145,2,b	;volatile
 24828                           
 24829                           ; BSR set to: 57
 24830                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 24831  017B68  0EE6               	movlw	low _ADCC_DefaultInterruptHandler
 24832  017B6A  6EE6               	movwf	postinc1,c
 24833  017B6C  0E8B               	movlw	high _ADCC_DefaultInterruptHandler
 24834  017B6E  6EE6               	movwf	postinc1,c
 24835  017B70  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24836  017B72  6EE6               	movwf	postinc1,c
 24837  017B74  ECC9  F0C3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 24838                           
 24839                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 24840  017B78  0139               	movlb	57	; () banked
 24841  017B7A  97A1               	bcf	161,3,b	;volatile
 24842                           
 24843                           ; BSR set to: 57
 24844                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 24845  017B7C  8791               	bsf	145,3,b	;volatile
 24846                           
 24847                           ; BSR set to: 57
 24848                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 24849  017B7E  0EE6               	movlw	low _ADCC_DefaultInterruptHandler
 24850  017B80  6EE6               	movwf	postinc1,c
 24851  017B82  0E8B               	movlw	high _ADCC_DefaultInterruptHandler
 24852  017B84  6EE6               	movwf	postinc1,c
 24853  017B86  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24854  017B88  6EE6               	movwf	postinc1,c
 24855  017B8A  ECB5  F0C3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24856                           
 24857                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24858  017B8E  0012               	return		;funcret
 24859  017B90                     __end_of_ADCC_Initialize:
 24860                           	opt callstack 0
 24861                           
 24862 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24863 ;; Defined at:
 24864 ;;		line 336 in file "mcc_generated_files/adcc.c"
 24865 ;; Parameters:    Size  Location     Type
 24866 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24867 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 24868 ;; Auto vars:     Size  Location     Type
 24869 ;;		None
 24870 ;; Return value:  Size  Location     Type
 24871 ;;                  1  [STACK] void 
 24872 ;; Registers used:
 24873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24874 ;; Tracked objects:
 24875 ;;		On entry : 0/0
 24876 ;;		On exit  : 0/0
 24877 ;;		Unchanged: 0/0
 24878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24883 ;;Total ram usage:        0 bytes
 24884 ;; Hardware stack levels used:    1
 24885 ;; Hardware stack levels required when called:    6
 24886 ;; This function calls:
 24887 ;;		Nothing
 24888 ;; This function is called by:
 24889 ;;		_ADCC_Initialize
 24890 ;;		_start_adc_scan
 24891 ;; This function uses a reentrant model
 24892 ;;
 24893                           
 24894                           	psect	text116
 24895  01876A                     __ptext116:
 24896                           	opt callstack 0
 24897  01876A                     _ADCC_SetADTIInterruptHandler:
 24898                           	opt callstack 23
 24899                           
 24900                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 24901                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24902                           
 24903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24904                           ;incstack = 0
 24905  01876A  50E1               	movf	fsr1l,w,c
 24906  01876C  0FFD               	addlw	-3
 24907  01876E  6ED9               	movwf	fsr2l,c
 24908  018770  50E2               	movf	fsr1h,w,c
 24909  018772  6EDA               	movwf	fsr2h,c
 24910  018774  0EFF               	movlw	255
 24911  018776  22DA               	addwfc	fsr2h,f,c
 24912  018778  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 24913  01877E  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 24914  018784  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 24915                           
 24916                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 24917  01878A  52E5               	movf	postdec1,f,c
 24918  01878C  52E5               	movf	postdec1,f,c
 24919  01878E  52E5               	movf	postdec1,f,c
 24920  018790  0012               	return		;funcret
 24921  018792                     __end_of_ADCC_SetADTIInterruptHandler:
 24922                           	opt callstack 0
 24923                           
 24924 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 24925 ;; Defined at:
 24926 ;;		line 323 in file "mcc_generated_files/adcc.c"
 24927 ;; Parameters:    Size  Location     Type
 24928 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24929 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 24930 ;; Auto vars:     Size  Location     Type
 24931 ;;		None
 24932 ;; Return value:  Size  Location     Type
 24933 ;;                  1  [STACK] void 
 24934 ;; Registers used:
 24935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24936 ;; Tracked objects:
 24937 ;;		On entry : 6/0
 24938 ;;		On exit  : 0/0
 24939 ;;		Unchanged: 0/0
 24940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24945 ;;Total ram usage:        0 bytes
 24946 ;; Hardware stack levels used:    1
 24947 ;; Hardware stack levels required when called:    6
 24948 ;; This function calls:
 24949 ;;		Nothing
 24950 ;; This function is called by:
 24951 ;;		_ADCC_Initialize
 24952 ;;		_start_adc_scan
 24953 ;; This function uses a reentrant model
 24954 ;;
 24955                           
 24956                           	psect	text117
 24957  018792                     __ptext117:
 24958                           	opt callstack 0
 24959  018792                     _ADCC_SetADIInterruptHandler:
 24960                           	opt callstack 23
 24961                           
 24962                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 24963                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24964                           
 24965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24966                           ;incstack = 0
 24967  018792  50E1               	movf	fsr1l,w,c
 24968  018794  0FFD               	addlw	-3
 24969  018796  6ED9               	movwf	fsr2l,c
 24970  018798  50E2               	movf	fsr1h,w,c
 24971  01879A  6EDA               	movwf	fsr2h,c
 24972  01879C  0EFF               	movlw	255
 24973  01879E  22DA               	addwfc	fsr2h,f,c
 24974  0187A0  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 24975  0187A6  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 24976  0187AC  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 24977                           
 24978                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24979  0187B2  52E5               	movf	postdec1,f,c
 24980  0187B4  52E5               	movf	postdec1,f,c
 24981  0187B6  52E5               	movf	postdec1,f,c
 24982  0187B8  0012               	return		;funcret
 24983  0187BA                     __end_of_ADCC_SetADIInterruptHandler:
 24984                           	opt callstack 0
 24985                           
 24986 ;; *************** function _INT1_ISR *****************
 24987 ;; Defined at:
 24988 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24989 ;; Parameters:    Size  Location     Type
 24990 ;;		None
 24991 ;; Auto vars:     Size  Location     Type
 24992 ;;		None
 24993 ;; Return value:  Size  Location     Type
 24994 ;;                  1    wreg      void 
 24995 ;; Registers used:
 24996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24997 ;; Tracked objects:
 24998 ;;		On entry : 0/0
 24999 ;;		On exit  : 0/0
 25000 ;;		Unchanged: 0/0
 25001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25004 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25005 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25006 ;;Total ram usage:        4 bytes
 25007 ;; Hardware stack levels used:    1
 25008 ;; Hardware stack levels required when called:    5
 25009 ;; This function calls:
 25010 ;;		_INT1_CallBack
 25011 ;; This function is called by:
 25012 ;;		Interrupt level 1
 25013 ;; This function uses a non-reentrant model
 25014 ;;
 25015                           
 25016                           	psect	text118
 25017  018268                     __ptext118:
 25018                           	opt callstack 0
 25019  018268                     _INT1_ISR:
 25020                           	opt callstack 12
 25021                           
 25022                           ;incstack = 0
 25023  018268  006F FF60  F0F6    	movff	status,??_INT1_ISR
 25024  01826E  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 25025  018274  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 25026  01827A  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 25027  018280  EE16  F000         	lfsr	1,___intlo_sp
 25028                           
 25029                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 25030  018284  0139               	movlb	57	; () banked
 25031  018286  91A5               	bcf	165,0,b	;volatile
 25032                           
 25033                           ; BSR set to: 57
 25034                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 25035  018288  EC89  F0C4         	call	_INT1_CallBack	;wreg free
 25036  01828C  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 25037  018292  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 25038  018298  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 25039  01829E  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 25040  0182A4  0011               	retfie		f
 25041  0182A6                     __end_of_INT1_ISR:
 25042                           	opt callstack 0
 25043                           
 25044 ;; *************** function _INT1_CallBack *****************
 25045 ;; Defined at:
 25046 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 25047 ;; Parameters:    Size  Location     Type
 25048 ;;		None
 25049 ;; Auto vars:     Size  Location     Type
 25050 ;;		None
 25051 ;; Return value:  Size  Location     Type
 25052 ;;                  1  [STACK] void 
 25053 ;; Registers used:
 25054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25055 ;; Tracked objects:
 25056 ;;		On entry : 3F/39
 25057 ;;		On exit  : 0/0
 25058 ;;		Unchanged: 0/0
 25059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25064 ;;Total ram usage:        0 bytes
 25065 ;; Hardware stack levels used:    1
 25066 ;; Hardware stack levels required when called:    4
 25067 ;; This function calls:
 25068 ;;		Absolute function
 25069 ;;		_INT1_DefaultInterruptHandler
 25070 ;;		_switch_handler
 25071 ;; This function is called by:
 25072 ;;		_INT1_ISR
 25073 ;; This function uses a reentrant model
 25074 ;;
 25075                           
 25076                           	psect	text119
 25077  018912                     __ptext119:
 25078                           	opt callstack 0
 25079  018912                     _INT1_CallBack:
 25080                           	opt callstack 12
 25081                           
 25082                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 25083                           
 25084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25085                           ;incstack = 0
 25086  018912  5013               	movf	_INT1_InterruptHandler^0,w,c
 25087  018914  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25088  018916  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25089  018918  B4D8               	btfsc	status,2,c
 25090  01891A  0012               	return	
 25091                           
 25092                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 25093  01891C  D801               	call	u846_28
 25094  01891E  0012               	return	
 25095  018920                     u846_28:
 25096  018920  0005               	push	
 25097  018922  6EFA               	movwf	pclath,c
 25098  018924  5013               	movf	_INT1_InterruptHandler^0,w,c
 25099  018926  6EFD               	movwf	tosl,c
 25100  018928  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25101  01892A  6EFE               	movwf	tosh,c
 25102  01892C  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25103  01892E  6EFF               	movwf	tosu,c
 25104  018930  50FA               	movf	pclath,w,c
 25105  018932  0012               	return		;indir
 25106  018934                     __end_of_INT1_CallBack:
 25107                           	opt callstack 0
 25108                           
 25109 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25110 ;; Defined at:
 25111 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 25112 ;; Parameters:    Size  Location     Type
 25113 ;;		None
 25114 ;; Auto vars:     Size  Location     Type
 25115 ;;		None
 25116 ;; Return value:  Size  Location     Type
 25117 ;;                  1  [STACK] void 
 25118 ;; Registers used:
 25119 ;;		None
 25120 ;; Tracked objects:
 25121 ;;		On entry : 0/39
 25122 ;;		On exit  : 0/0
 25123 ;;		Unchanged: 0/0
 25124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25129 ;;Total ram usage:        0 bytes
 25130 ;; Hardware stack levels used:    1
 25131 ;; Hardware stack levels required when called:    3
 25132 ;; This function calls:
 25133 ;;		Nothing
 25134 ;; This function is called by:
 25135 ;;		_EXT_INT_Initialize
 25136 ;;		_INT1_CallBack
 25137 ;; This function uses a reentrant model
 25138 ;;
 25139                           
 25140                           	psect	text120
 25141  018BE2                     __ptext120:
 25142                           	opt callstack 0
 25143  018BE2                     _INT1_DefaultInterruptHandler:
 25144                           	opt callstack 12
 25145                           
 25146                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25147                           
 25148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25149                           ;incstack = 0
 25150  018BE2  0012               	return		;funcret
 25151  018BE4                     __end_of_INT1_DefaultInterruptHandler:
 25152                           	opt callstack 0
 25153                           
 25154 ;; *************** function _switch_handler *****************
 25155 ;; Defined at:
 25156 ;;		line 58 in file "dio.c"
 25157 ;; Parameters:    Size  Location     Type
 25158 ;;		None
 25159 ;; Auto vars:     Size  Location     Type
 25160 ;;  i               1  [STACK] unsigned char 
 25161 ;;  sw_value        1  [STACK] unsigned char 
 25162 ;; Return value:  Size  Location     Type
 25163 ;;                  1  [STACK] void 
 25164 ;; Registers used:
 25165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 25166 ;; Tracked objects:
 25167 ;;		On entry : 0/39
 25168 ;;		On exit  : 0/0
 25169 ;;		Unchanged: 0/0
 25170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25175 ;;Total ram usage:        0 bytes
 25176 ;; Hardware stack levels used:    1
 25177 ;; Hardware stack levels required when called:    3
 25178 ;; This function calls:
 25179 ;;		Nothing
 25180 ;; This function is called by:
 25181 ;;		_start_switch_handler
 25182 ;;		_INT1_CallBack
 25183 ;; This function uses a reentrant model
 25184 ;;
 25185                           
 25186                           	psect	text121
 25187  01663C                     __ptext121:
 25188                           	opt callstack 0
 25189  01663C                     _switch_handler:
 25190                           	opt callstack 0
 25191                           
 25192                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25193  01663C  52E6               	movf	postinc1,f,c
 25194  01663E  52E6               	movf	postinc1,f,c
 25195                           
 25196                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 25197                           ;stkvar	_i @ sp[(-2)+0]
 25198                           
 25199                           ;incstack = 0
 25200  016640  0EFE               	movlw	-2
 25201  016642  6AE3               	clrf	plusw1,c
 25202  016644  9EBD               	bcf	189,7,c	;volatile
 25203  016646  82BE               	bsf	190,1,c	;volatile
 25204                           
 25205                           ;dio.c: 72:  __nop();
 25206  016648  F000               	nop	
 25207                           
 25208                           ;dio.c: 73:  __nop();
 25209  01664A  F000               	nop	
 25210                           
 25211                           ;dio.c: 74:  __nop();
 25212  01664C  F000               	nop	
 25213  01664E  D019               	goto	l8819
 25214  016650                     l8807:
 25215                           
 25216                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 25217  016650  A6CF               	btfss	207,3,c	;volatile
 25218  016652  D011               	goto	u832_20
 25219  016654  D00D               	goto	u832_21
 25220  016656                     u829_28:
 25221                           
 25222                           ;stkvar	_sw_value @ sp[(-2)+1]
 25223  016656  0EFF               	movlw	-1
 25224  016658  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 25225                           
 25226                           ;dio.c: 80:    break;
 25227  01665E  D027               	goto	l8821
 25228  016660                     l8809:
 25229                           
 25230                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 25231  016660  A4CF               	btfss	207,2,c	;volatile
 25232  016662  D009               	goto	u832_20
 25233  016664  D005               	goto	u832_21
 25234  016666                     l8811:
 25235                           
 25236                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 25237  016666  A2CF               	btfss	207,1,c	;volatile
 25238  016668  D006               	goto	u832_20
 25239  01666A  D002               	goto	u832_21
 25240  01666C                     l8813:
 25241                           
 25242                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 25243  01666C  A0CF               	btfss	207,0,c	;volatile
 25244  01666E  D003               	goto	u832_20
 25245  016670                     u832_21:
 25246  016670  6A3D               	clrf	(btemp+11)^0,c
 25247  016672  2A3D               	incf	(btemp+11)^0,f,c
 25248  016674  D7F0               	goto	u829_28
 25249  016676                     u832_20:
 25250  016676  6A3D               	clrf	(btemp+11)^0,c
 25251  016678  D7EE               	goto	u829_28
 25252  01667A                     l8815:
 25253                           
 25254                           ;dio.c: 91:    sw_value = 1;
 25255                           ;stkvar	_sw_value @ sp[(-2)+1]
 25256  01667A  0EFF               	movlw	-1
 25257  01667C  6AE3               	clrf	plusw1,c
 25258  01667E  2AE3               	incf	plusw1,f,c
 25259                           
 25260                           ;dio.c: 92:    break;
 25261  016680  D016               	goto	l8821
 25262  016682                     l8819:
 25263                           
 25264                           ;stkvar	_i @ sp[(-2)+0]
 25265  016682  0EFE               	movlw	-2
 25266  016684  50E3               	movf	plusw1,w,c
 25267  016686  6E3C               	movwf	(btemp+10)^0,c
 25268  016688  6A3D               	clrf	(btemp+11)^0,c
 25269                           
 25270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25271                           ; Switch size 1, requested type "simple"
 25272                           ; Number of cases is 1, Range of values is 0 to 0
 25273                           ; switch strategies available:
 25274                           ; Name         Instructions Cycles
 25275                           ; simple_byte            4     3 (average)
 25276                           ;	Chosen strategy is simple_byte
 25277  01668A  503D               	movf	(btemp+11)^0,w,c
 25278  01668C  0A00               	xorlw	0	; case 0
 25279  01668E  A4D8               	btfss	status,2,c
 25280  016690  D7F4               	goto	l8815
 25281                           
 25282                           ; Switch size 1, requested type "simple"
 25283                           ; Number of cases is 4, Range of values is 0 to 3
 25284                           ; switch strategies available:
 25285                           ; Name         Instructions Cycles
 25286                           ; simple_byte           13     7 (average)
 25287                           ;	Chosen strategy is simple_byte
 25288  016692  503C               	movf	(btemp+10)^0,w,c
 25289  016694  0A00               	xorlw	0	; case 0
 25290  016696  B4D8               	btfsc	status,2,c
 25291  016698  D7E9               	goto	l8813
 25292  01669A  0A01               	xorlw	1	; case 1
 25293  01669C  B4D8               	btfsc	status,2,c
 25294  01669E  D7E3               	goto	l8811
 25295  0166A0  0A03               	xorlw	3	; case 2
 25296  0166A2  B4D8               	btfsc	status,2,c
 25297  0166A4  D7DD               	goto	l8809
 25298  0166A6  0A01               	xorlw	1	; case 3
 25299  0166A8  B4D8               	btfsc	status,2,c
 25300  0166AA  D7D2               	goto	l8807
 25301  0166AC  D7E6               	goto	l8815
 25302  0166AE                     l8821:
 25303                           
 25304                           ;dio.c: 96:   if (sw_value) {
 25305                           ;stkvar	_sw_value @ sp[(-2)+1]
 25306  0166AE  0EFF               	movlw	-1
 25307  0166B0  50E3               	movf	plusw1,w,c
 25308  0166B2  B4D8               	btfsc	status,2,c
 25309  0166B4  D014               	goto	l8827
 25310                           
 25311                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 25312                           ;stkvar	_i @ sp[(-2)+0]
 25313  0166B6  0EFE               	movlw	-2
 25314  0166B8  50E3               	movf	plusw1,w,c
 25315  0166BA  0D05               	mullw	5
 25316  0166BC  50F3               	movf	243,w,c
 25317  0166BE  0F60               	addlw	low _S
 25318  0166C0  6ED9               	movwf	fsr2l,c
 25319  0166C2  6ADA               	clrf	fsr2h,c
 25320  0166C4  04DE               	decf	postinc2,w,c
 25321  0166C6  A4D8               	btfss	status,2,c
 25322  0166C8  D041               	goto	l8835
 25323                           
 25324                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 25325                           ;stkvar	_i @ sp[(-2)+0]
 25326  0166CA  0EFE               	movlw	-2
 25327  0166CC  50E3               	movf	plusw1,w,c
 25328  0166CE  0D05               	mullw	5
 25329  0166D0  50F3               	movf	243,w,c
 25330  0166D2  0F60               	addlw	low _S
 25331  0166D4  6ED9               	movwf	fsr2l,c
 25332  0166D6  6ADA               	clrf	fsr2h,c
 25333  0166D8  0E00               	movlw	0
 25334  0166DA  6EDF               	movwf	indf2,c
 25335  0166DC  D037               	goto	l8835
 25336  0166DE                     l8827:
 25337                           
 25338                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 25339                           ;stkvar	_i @ sp[(-2)+0]
 25340  0166DE  0EFE               	movlw	-2
 25341  0166E0  50E3               	movf	plusw1,w,c
 25342  0166E2  0D05               	mullw	5
 25343  0166E4  50F3               	movf	243,w,c
 25344  0166E6  0F60               	addlw	low _S
 25345  0166E8  6ED9               	movwf	fsr2l,c
 25346  0166EA  6ADA               	clrf	fsr2h,c
 25347  0166EC  50DF               	movf	indf2,w,c
 25348  0166EE  A4D8               	btfss	status,2,c
 25349  0166F0  D02D               	goto	l8835
 25350                           
 25351                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 25352                           ;stkvar	_i @ sp[(-2)+0]
 25353  0166F2  0EFE               	movlw	-2
 25354  0166F4  50E3               	movf	plusw1,w,c
 25355  0166F6  0D05               	mullw	5
 25356  0166F8  50F3               	movf	243,w,c
 25357  0166FA  0F60               	addlw	low _S
 25358  0166FC  6ED9               	movwf	fsr2l,c
 25359  0166FE  6ADA               	clrf	fsr2h,c
 25360  016700  0E01               	movlw	1
 25361  016702  6EDF               	movwf	indf2,c
 25362                           
 25363                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 25364  016704  EE20  F2B7         	lfsr	2,_V+183	;volatile
 25365                           
 25366                           ;stkvar	_i @ sp[(-2)+0]
 25367  016708  0EFE               	movlw	-2
 25368  01670A  50E3               	movf	plusw1,w,c
 25369  01670C  0D05               	mullw	5
 25370  01670E  50F3               	movf	243,w,c
 25371  016710  0F61               	addlw	low (_S+1)
 25372  016712  6EE9               	movwf	fsr0l,c
 25373  016714  6AEA               	clrf	fsr0h,c
 25374  016716  006F FF7B FFEE     	movff	postinc2,postinc0
 25375  01671C  006F FF7B FFEE     	movff	postinc2,postinc0
 25376  016722  006F FF7B FFEE     	movff	postinc2,postinc0
 25377  016728  006F FF7B FFEE     	movff	postinc2,postinc0
 25378                           
 25379                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 25380                           ;stkvar	_i @ sp[(-2)+0]
 25381  01672E  0EFE               	movlw	-2
 25382  016730  006F FF8C  F03D    	movff	plusw1,btemp+11
 25383  016736  0E01               	movlw	1
 25384  016738  6E3C               	movwf	(btemp+10)^0,c
 25385  01673A  2A3D               	incf	(btemp+11)^0,f,c
 25386  01673C  D002               	goto	u836_24
 25387  01673E                     u836_25:
 25388  01673E  90D8               	bcf	status,0,c
 25389  016740  363C               	rlcf	(btemp+10)^0,f,c
 25390  016742                     u836_24:
 25391  016742  2E3D               	decfsz	(btemp+11)^0,f,c
 25392  016744  D7FC               	goto	u836_25
 25393  016746  503C               	movf	(btemp+10)^0,w,c
 25394  016748  0100               	movlb	0	; () banked
 25395  01674A  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 25396  01674C                     l8835:
 25397                           
 25398                           ;dio.c: 107:  } while (++i < 4);
 25399                           ;stkvar	_i @ sp[(-2)+0]
 25400  01674C  0EFE               	movlw	-2
 25401  01674E  2AE3               	incf	plusw1,f,c
 25402  016750  0EFE               	movlw	-2
 25403  016752  006F FF8C  F032    	movff	plusw1,btemp
 25404  016758  0E03               	movlw	3
 25405  01675A  6432               	cpfsgt	btemp^0,c
 25406  01675C  D792               	goto	l8819
 25407                           
 25408                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 25409  01675E  92BE               	bcf	190,1,c	;volatile
 25410  016760  A4BE               	btfss	190,2,c	;volatile
 25411  016762  D002               	goto	u838_20
 25412  016764  0E01               	movlw	1
 25413  016766  D001               	goto	u838_26
 25414  016768                     u838_20:
 25415  016768  0E00               	movlw	0
 25416  01676A                     u838_26:
 25417  01676A  0AFF               	xorlw	255
 25418  01676C  6E3D               	movwf	(btemp+11)^0,c
 25419  01676E  463D               	rlncf	(btemp+11)^0,f,c
 25420  016770  463D               	rlncf	(btemp+11)^0,f,c
 25421  016772  50BE               	movf	190,w,c	;volatile
 25422  016774  183D               	xorwf	(btemp+11)^0,w,c
 25423  016776  0BFB               	andlw	-5
 25424  016778  183D               	xorwf	(btemp+11)^0,w,c
 25425  01677A  6EBE               	movwf	190,c	;volatile
 25426  01677C  8EBD               	bsf	189,7,c	;volatile
 25427                           
 25428                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25429  01677E  52E5               	movf	postdec1,f,c
 25430  016780  52E5               	movf	postdec1,f,c
 25431  016782  0012               	return		;funcret
 25432  016784                     __end_of_switch_handler:
 25433                           	opt callstack 0
 25434                           
 25435 ;; *************** function _TMR5_ISR *****************
 25436 ;; Defined at:
 25437 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25438 ;; Parameters:    Size  Location     Type
 25439 ;;		None
 25440 ;; Auto vars:     Size  Location     Type
 25441 ;;		None
 25442 ;; Return value:  Size  Location     Type
 25443 ;;                  1    wreg      void 
 25444 ;; Registers used:
 25445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25446 ;; Tracked objects:
 25447 ;;		On entry : 0/0
 25448 ;;		On exit  : 0/0
 25449 ;;		Unchanged: 0/0
 25450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25453 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25454 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25455 ;;Total ram usage:        4 bytes
 25456 ;; Hardware stack levels used:    1
 25457 ;; Hardware stack levels required when called:    5
 25458 ;; This function calls:
 25459 ;;		_TMR5_CallBack
 25460 ;;		_TMR5_WriteTimer
 25461 ;; This function is called by:
 25462 ;;		Interrupt level 1
 25463 ;; This function uses a non-reentrant model
 25464 ;;
 25465                           
 25466                           	psect	text122
 25467  017E48                     __ptext122:
 25468                           	opt callstack 0
 25469  017E48                     _TMR5_ISR:
 25470                           	opt callstack 12
 25471                           
 25472                           ;incstack = 0
 25473  017E48  006F FF60  F1ED    	movff	status,??_TMR5_ISR+2
 25474  017E4E  0060  F0F4  F1EE   	movff	btemp+11,??_TMR5_ISR+3
 25475  017E54  EE16  F000         	lfsr	1,___intlo_sp
 25476                           
 25477                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25478  017E58  0139               	movlb	57	; () banked
 25479  017E5A  9DA8               	bcf	168,6,b	;volatile
 25480                           
 25481                           ; BSR set to: 57
 25482                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25483  017E5C  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 25484  017E62  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25485  017E68  EC14  F0C1         	call	_TMR5_WriteTimer	;wreg free
 25486                           
 25487                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25488  017E6C  0102               	movlb	2	; () banked
 25489  017E6E  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25490  017E70  0101               	movlb	1	; () banked
 25491  017E72  6FEB               	movwf	??_TMR5_ISR& (0+255),b
 25492  017E74  6BEC               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25493  017E76  0E05               	movlw	5
 25494  017E78  27EB               	addwf	??_TMR5_ISR& (0+255),f,b
 25495  017E7A  0E00               	movlw	0
 25496  017E7C  23EC               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25497  017E7E  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25498  017E80  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25499  017E82  51EB               	movf	??_TMR5_ISR& (0+255),w,b
 25500  017E84  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25501  017E86  51EC               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25502  017E88  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25503  017E8A  A0D8               	btfss	status,0,c
 25504  017E8C  D004               	goto	i1l1045
 25505                           
 25506                           ; BSR set to: 1
 25507                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25508  017E8E  EC65  F0C4         	call	_TMR5_CallBack	;wreg free
 25509                           
 25510                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25511  017E92  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25512  017E94  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25513  017E96                     i1l1045:
 25514  017E96  0060  F7B8  F03D   	movff	??_TMR5_ISR+3,btemp+11
 25515  017E9C  0060  F7B7  FFD8   	movff	??_TMR5_ISR+2,status
 25516  017EA2  0011               	retfie		f
 25517  017EA4                     __end_of_TMR5_ISR:
 25518                           	opt callstack 0
 25519                           
 25520 ;; *************** function _TMR5_WriteTimer *****************
 25521 ;; Defined at:
 25522 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25523 ;; Parameters:    Size  Location     Type
 25524 ;;  timerVal        2  [STACK] unsigned short 
 25525 ;; Auto vars:     Size  Location     Type
 25526 ;;		None
 25527 ;; Return value:  Size  Location     Type
 25528 ;;                  1  [STACK] void 
 25529 ;; Registers used:
 25530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25531 ;; Tracked objects:
 25532 ;;		On entry : 3F/39
 25533 ;;		On exit  : 0/0
 25534 ;;		Unchanged: 0/0
 25535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25540 ;;Total ram usage:        0 bytes
 25541 ;; Hardware stack levels used:    1
 25542 ;; Hardware stack levels required when called:    3
 25543 ;; This function calls:
 25544 ;;		Nothing
 25545 ;; This function is called by:
 25546 ;;		_TMR5_ISR
 25547 ;; This function uses a reentrant model
 25548 ;;
 25549                           
 25550                           	psect	text123
 25551  018228                     __ptext123:
 25552                           	opt callstack 0
 25553  018228                     _TMR5_WriteTimer:
 25554                           	opt callstack 13
 25555                           
 25556                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25557                           
 25558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25559                           ;incstack = 0
 25560  018228  A49A               	btfss	154,2,c	;volatile
 25561  01822A  D00F               	goto	l8955
 25562                           
 25563                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25564  01822C  909A               	bcf	154,0,c	;volatile
 25565                           
 25566                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25567                           ;stkvar	_timerVal @ sp[(0)+-2]
 25568  01822E  0EFF               	movlw	255
 25569  018230  24E1               	addwf	fsr1l,w,c
 25570  018232  6ED9               	movwf	fsr2l,c
 25571  018234  0EFF               	movlw	255
 25572  018236  20E2               	addwfc	fsr1h,w,c
 25573  018238  6EDA               	movwf	fsr2h,c
 25574  01823A  50DF               	movf	indf2,w,c
 25575  01823C  6E99               	movwf	153,c	;volatile
 25576                           
 25577                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25578                           ;stkvar	_timerVal @ sp[(0)+-2]
 25579  01823E  0EFE               	movlw	-2
 25580  018240  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25581                           
 25582                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25583  018246  809A               	bsf	154,0,c	;volatile
 25584                           
 25585                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25586  018248  D00C               	goto	l1028
 25587  01824A                     l8955:
 25588                           
 25589                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25590                           ;stkvar	_timerVal @ sp[(0)+-2]
 25591  01824A  0EFF               	movlw	255
 25592  01824C  24E1               	addwf	fsr1l,w,c
 25593  01824E  6ED9               	movwf	fsr2l,c
 25594  018250  0EFF               	movlw	255
 25595  018252  20E2               	addwfc	fsr1h,w,c
 25596  018254  6EDA               	movwf	fsr2h,c
 25597  018256  50DF               	movf	indf2,w,c
 25598  018258  6E99               	movwf	153,c	;volatile
 25599                           
 25600                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25601                           ;stkvar	_timerVal @ sp[(0)+-2]
 25602  01825A  0EFE               	movlw	-2
 25603  01825C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25604  018262                     l1028:
 25605                           
 25606                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25607  018262  52E5               	movf	postdec1,f,c
 25608  018264  52E5               	movf	postdec1,f,c
 25609  018266  0012               	return		;funcret
 25610  018268                     __end_of_TMR5_WriteTimer:
 25611                           	opt callstack 0
 25612                           
 25613 ;; *************** function _TMR5_CallBack *****************
 25614 ;; Defined at:
 25615 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25616 ;; Parameters:    Size  Location     Type
 25617 ;;		None
 25618 ;; Auto vars:     Size  Location     Type
 25619 ;;		None
 25620 ;; Return value:  Size  Location     Type
 25621 ;;                  1  [STACK] void 
 25622 ;; Registers used:
 25623 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25624 ;; Tracked objects:
 25625 ;;		On entry : 3F/1
 25626 ;;		On exit  : 0/0
 25627 ;;		Unchanged: 0/0
 25628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25633 ;;Total ram usage:        0 bytes
 25634 ;; Hardware stack levels used:    1
 25635 ;; Hardware stack levels required when called:    4
 25636 ;; This function calls:
 25637 ;;		Absolute function
 25638 ;;		_TMR5_DefaultInterruptHandler
 25639 ;; This function is called by:
 25640 ;;		_TMR5_ISR
 25641 ;; This function uses a reentrant model
 25642 ;;
 25643                           
 25644                           	psect	text124
 25645  0188CA                     __ptext124:
 25646                           	opt callstack 0
 25647  0188CA                     _TMR5_CallBack:
 25648                           	opt callstack 12
 25649                           
 25650                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25651                           
 25652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25653                           ;incstack = 0
 25654  0188CA  0100               	movlb	0	; () banked
 25655  0188CC  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25656  0188CE  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25657  0188D0  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25658  0188D2  B4D8               	btfsc	status,2,c
 25659  0188D4  0012               	return	
 25660                           
 25661                           ; BSR set to: 0
 25662                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25663  0188D6  D801               	call	u857_28
 25664  0188D8  0012               	return	
 25665  0188DA                     u857_28:
 25666  0188DA  0005               	push	
 25667  0188DC  6EFA               	movwf	pclath,c
 25668  0188DE  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25669  0188E0  6EFD               	movwf	tosl,c
 25670  0188E2  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25671  0188E4  6EFE               	movwf	tosh,c
 25672  0188E6  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25673  0188E8  6EFF               	movwf	tosu,c
 25674  0188EA  50FA               	movf	pclath,w,c
 25675  0188EC  0012               	return		;indir
 25676  0188EE                     __end_of_TMR5_CallBack:
 25677                           	opt callstack 0
 25678                           
 25679 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25680 ;; Defined at:
 25681 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25682 ;; Parameters:    Size  Location     Type
 25683 ;;		None
 25684 ;; Auto vars:     Size  Location     Type
 25685 ;;		None
 25686 ;; Return value:  Size  Location     Type
 25687 ;;                  1  [STACK] void 
 25688 ;; Registers used:
 25689 ;;		wreg, status,2, status,0, btemp+11
 25690 ;; Tracked objects:
 25691 ;;		On entry : 3F/0
 25692 ;;		On exit  : 3F/2
 25693 ;;		Unchanged: 0/0
 25694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25699 ;;Total ram usage:        0 bytes
 25700 ;; Hardware stack levels used:    1
 25701 ;; Hardware stack levels required when called:    3
 25702 ;; This function calls:
 25703 ;;		Nothing
 25704 ;; This function is called by:
 25705 ;;		_TMR5_Initialize
 25706 ;;		_TMR5_CallBack
 25707 ;; This function uses a reentrant model
 25708 ;;
 25709                           
 25710                           	psect	text125
 25711  0187BA                     __ptext125:
 25712                           	opt callstack 0
 25713  0187BA                     _TMR5_DefaultInterruptHandler:
 25714                           	opt callstack 12
 25715                           
 25716                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25717                           
 25718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25719                           ;incstack = 0
 25720  0187BA  A0BE               	btfss	190,0,c	;volatile
 25721  0187BC  D002               	goto	u807_20
 25722  0187BE  0E01               	movlw	1
 25723  0187C0  D001               	goto	u807_26
 25724  0187C2                     u807_20:
 25725  0187C2  0E00               	movlw	0
 25726  0187C4                     u807_26:
 25727  0187C4  0AFF               	xorlw	255
 25728  0187C6  6E3D               	movwf	(btemp+11)^0,c
 25729  0187C8  50BE               	movf	190,w,c	;volatile
 25730  0187CA  183D               	xorwf	(btemp+11)^0,w,c
 25731  0187CC  0BFE               	andlw	-2
 25732  0187CE  183D               	xorwf	(btemp+11)^0,w,c
 25733  0187D0  6EBE               	movwf	190,c	;volatile
 25734                           
 25735                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25736  0187D2  0E01               	movlw	1
 25737  0187D4  0102               	movlb	2	; () banked
 25738  0187D6  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25739  0187D8  0E00               	movlw	0
 25740  0187DA  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25741  0187DC  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25742  0187DE  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25743                           
 25744                           ; BSR set to: 2
 25745                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25746  0187E0  0012               	return		;funcret
 25747  0187E2                     __end_of_TMR5_DefaultInterruptHandler:
 25748                           	opt callstack 0
 25749                           
 25750 ;; *************** function _INT0_ISR *****************
 25751 ;; Defined at:
 25752 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25753 ;; Parameters:    Size  Location     Type
 25754 ;;		None
 25755 ;; Auto vars:     Size  Location     Type
 25756 ;;		None
 25757 ;; Return value:  Size  Location     Type
 25758 ;;                  1    wreg      void 
 25759 ;; Registers used:
 25760 ;;		wreg, status,2, status,0, pclath, tosl
 25761 ;; Tracked objects:
 25762 ;;		On entry : 0/0
 25763 ;;		On exit  : 0/0
 25764 ;;		Unchanged: 0/0
 25765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25770 ;;Total ram usage:        0 bytes
 25771 ;; Hardware stack levels used:    1
 25772 ;; Hardware stack levels required when called:    2
 25773 ;; This function calls:
 25774 ;;		_INT0_CallBack
 25775 ;; This function is called by:
 25776 ;;		Interrupt level 2
 25777 ;; This function uses a non-reentrant model
 25778 ;;
 25779                           
 25780                           	psect	text126
 25781  018B58                     __ptext126:
 25782                           	opt callstack 0
 25783  018B58                     _INT0_ISR:
 25784                           	opt callstack 12
 25785                           
 25786                           ; BSR set to: 2
 25787                           ;incstack = 0
 25788  018B58  EE14  F000         	lfsr	1,___inthi_sp
 25789                           
 25790                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25791  018B5C  0139               	movlb	57	; () banked
 25792  018B5E  91A1               	bcf	161,0,b	;volatile
 25793                           
 25794                           ; BSR set to: 57
 25795                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25796  018B60  EC9A  F0C4         	call	_INT0_CallBack	;wreg free
 25797  018B64  0011               	retfie		f
 25798  018B66                     __end_of_INT0_ISR:
 25799                           	opt callstack 0
 25800                           
 25801 ;; *************** function _INT0_CallBack *****************
 25802 ;; Defined at:
 25803 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25804 ;; Parameters:    Size  Location     Type
 25805 ;;		None
 25806 ;; Auto vars:     Size  Location     Type
 25807 ;;		None
 25808 ;; Return value:  Size  Location     Type
 25809 ;;                  1  [STACK] void 
 25810 ;; Registers used:
 25811 ;;		wreg, status,2, status,0, pclath, tosl
 25812 ;; Tracked objects:
 25813 ;;		On entry : 3F/39
 25814 ;;		On exit  : 0/0
 25815 ;;		Unchanged: 0/0
 25816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25821 ;;Total ram usage:        0 bytes
 25822 ;; Hardware stack levels used:    1
 25823 ;; Hardware stack levels required when called:    1
 25824 ;; This function calls:
 25825 ;;		Absolute function
 25826 ;;		_INT0_DefaultInterruptHandler
 25827 ;; This function is called by:
 25828 ;;		_INT0_ISR
 25829 ;; This function uses a reentrant model
 25830 ;;
 25831                           
 25832                           	psect	text127
 25833  018934                     __ptext127:
 25834                           	opt callstack 0
 25835  018934                     _INT0_CallBack:
 25836                           	opt callstack 12
 25837                           
 25838                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25839                           
 25840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25841                           ;incstack = 0
 25842  018934  5016               	movf	_INT0_InterruptHandler^0,w,c
 25843  018936  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25844  018938  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25845  01893A  B4D8               	btfsc	status,2,c
 25846  01893C  0012               	return	
 25847                           
 25848                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25849  01893E  D801               	call	u398_48
 25850  018940  0012               	return	
 25851  018942                     u398_48:
 25852  018942  0005               	push	
 25853  018944  6EFA               	movwf	pclath,c
 25854  018946  5016               	movf	_INT0_InterruptHandler^0,w,c
 25855  018948  6EFD               	movwf	tosl,c
 25856  01894A  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25857  01894C  6EFE               	movwf	tosh,c
 25858  01894E  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25859  018950  6EFF               	movwf	tosu,c
 25860  018952  50FA               	movf	pclath,w,c
 25861  018954  0012               	return		;indir
 25862  018956                     __end_of_INT0_CallBack:
 25863                           	opt callstack 0
 25864                           
 25865 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25866 ;; Defined at:
 25867 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25868 ;; Parameters:    Size  Location     Type
 25869 ;;		None
 25870 ;; Auto vars:     Size  Location     Type
 25871 ;;		None
 25872 ;; Return value:  Size  Location     Type
 25873 ;;                  1  [STACK] void 
 25874 ;; Registers used:
 25875 ;;		None
 25876 ;; Tracked objects:
 25877 ;;		On entry : 0/39
 25878 ;;		On exit  : 0/0
 25879 ;;		Unchanged: 0/0
 25880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25885 ;;Total ram usage:        0 bytes
 25886 ;; Hardware stack levels used:    1
 25887 ;; This function calls:
 25888 ;;		Nothing
 25889 ;; This function is called by:
 25890 ;;		_EXT_INT_Initialize
 25891 ;;		_INT0_CallBack
 25892 ;; This function uses a reentrant model
 25893 ;;
 25894                           
 25895                           	psect	text128
 25896  018BE4                     __ptext128:
 25897                           	opt callstack 0
 25898  018BE4                     _INT0_DefaultInterruptHandler:
 25899                           	opt callstack 12
 25900                           
 25901                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25902                           
 25903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25904                           ;incstack = 0
 25905  018BE4  0012               	return		;funcret
 25906  018BE6                     __end_of_INT0_DefaultInterruptHandler:
 25907                           	opt callstack 0
 25908                           
 25909 ;; *************** function _Default_ISR *****************
 25910 ;; Defined at:
 25911 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25912 ;; Parameters:    Size  Location     Type
 25913 ;;		None
 25914 ;; Auto vars:     Size  Location     Type
 25915 ;;		None
 25916 ;; Return value:  Size  Location     Type
 25917 ;;                  1    wreg      void 
 25918 ;; Registers used:
 25919 ;;		None
 25920 ;; Tracked objects:
 25921 ;;		On entry : 0/0
 25922 ;;		On exit  : 0/0
 25923 ;;		Unchanged: 0/0
 25924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25929 ;;Total ram usage:        0 bytes
 25930 ;; Hardware stack levels used:    1
 25931 ;; This function calls:
 25932 ;;		Nothing
 25933 ;; This function is called by:
 25934 ;;		Interrupt level 2
 25935 ;; This function uses a non-reentrant model
 25936 ;;
 25937                           
 25938                           	psect	text129
 25939  018BDC                     __ptext129:
 25940                           	opt callstack 0
 25941  018BDC                     _Default_ISR:
 25942                           	opt callstack 14
 25943                           
 25944                           ;incstack = 0
 25945  018BDC  EE14  F000         	lfsr	1,___inthi_sp
 25946  018BE0  0011               	retfie		f
 25947  018BE2                     __end_of_Default_ISR:
 25948                           	opt callstack 0
 25949                           
 25950 ;; *************** function _ADCC_ISR *****************
 25951 ;; Defined at:
 25952 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25953 ;; Parameters:    Size  Location     Type
 25954 ;;		None
 25955 ;; Auto vars:     Size  Location     Type
 25956 ;;		None
 25957 ;; Return value:  Size  Location     Type
 25958 ;;                  1    wreg      void 
 25959 ;; Registers used:
 25960 ;;		wreg, status,2, status,0, pclath, tosl
 25961 ;; Tracked objects:
 25962 ;;		On entry : 0/0
 25963 ;;		On exit  : 0/0
 25964 ;;		Unchanged: 0/0
 25965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25970 ;;Total ram usage:        0 bytes
 25971 ;; Hardware stack levels used:    1
 25972 ;; Hardware stack levels required when called:    1
 25973 ;; This function calls:
 25974 ;;		Absolute function
 25975 ;;		_ADCC_DefaultInterruptHandler
 25976 ;;		_adc_int_handler
 25977 ;; This function is called by:
 25978 ;;		Interrupt level 2
 25979 ;; This function uses a non-reentrant model
 25980 ;;
 25981                           
 25982                           	psect	text130
 25983  018560                     __ptext130:
 25984                           	opt callstack 0
 25985  018560                     _ADCC_ISR:
 25986                           	opt callstack 13
 25987                           
 25988                           ;incstack = 0
 25989  018560  EE14  F000         	lfsr	1,___inthi_sp
 25990                           
 25991                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25992  018564  0139               	movlb	57	; () banked
 25993  018566  95A1               	bcf	161,2,b	;volatile
 25994                           
 25995                           ; BSR set to: 57
 25996                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25997  018568  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25998  01856A  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25999  01856C  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26000  01856E  B4D8               	btfsc	status,2,c
 26001  018570  0011               	retfie		f
 26002                           
 26003                           ; BSR set to: 57
 26004                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 26005  018572  D801               	call	i2u429_48
 26006  018574  0011               	retfie		f
 26007  018576                     i2u429_48:
 26008  018576  0005               	push	
 26009  018578  6EFA               	movwf	pclath,c
 26010  01857A  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26011  01857C  6EFD               	movwf	tosl,c
 26012  01857E  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26013  018580  6EFE               	movwf	tosh,c
 26014  018582  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26015  018584  6EFF               	movwf	tosu,c
 26016  018586  50FA               	movf	pclath,w,c
 26017  018588  0012               	return		;indir
 26018  01858A                     __end_of_ADCC_ISR:
 26019                           	opt callstack 0
 26020                           
 26021 ;; *************** function _adc_int_t_handler *****************
 26022 ;; Defined at:
 26023 ;;		line 128 in file "daq.c"
 26024 ;; Parameters:    Size  Location     Type
 26025 ;;		None
 26026 ;; Auto vars:     Size  Location     Type
 26027 ;;		None
 26028 ;; Return value:  Size  Location     Type
 26029 ;;                  1  [STACK] void 
 26030 ;; Registers used:
 26031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 26032 ;; Tracked objects:
 26033 ;;		On entry : 3F/39
 26034 ;;		On exit  : 1/0
 26035 ;;		Unchanged: 0/0
 26036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26041 ;;Total ram usage:        0 bytes
 26042 ;; Hardware stack levels used:    1
 26043 ;; Hardware stack levels required when called:    1
 26044 ;; This function calls:
 26045 ;;		_ADCC_DischargeSampleCapacitor
 26046 ;;		_ADCC_StartConversion
 26047 ;; This function is called by:
 26048 ;;		_start_adc_scan
 26049 ;;		_ADCC_ThresholdISR
 26050 ;; This function uses a reentrant model
 26051 ;;
 26052                           
 26053                           	psect	text131
 26054  0179C4                     __ptext131:
 26055                           	opt callstack 0
 26056  0179C4                     _adc_int_t_handler:
 26057                           	opt callstack 12
 26058                           
 26059                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 26060                           
 26061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26062                           ;incstack = 0
 26063  0179C4  013E               	movlb	62	; () banked
 26064  0179C6  51E6               	movf	230,w,b	;volatile
 26065  0179C8  006F FB9C  F032    	movff	16103,btemp	;volatile
 26066  0179CE  6A33               	clrf	(btemp+1)^0,c
 26067  0179D0  0060  F0C8  F033   	movff	btemp,btemp+1
 26068  0179D6  6A32               	clrf	btemp^0,c
 26069  0179D8  2632               	addwf	btemp^0,f,c
 26070  0179DA  0E00               	movlw	0
 26071  0179DC  2233               	addwfc	(btemp+1)^0,f,c
 26072  0179DE  0100               	movlb	0	; () banked
 26073  0179E0  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26074  0179E2  0D02               	mullw	2
 26075  0179E4  50F3               	movf	243,w,c
 26076  0179E6  0FC7               	addlw	low _R
 26077  0179E8  6ED9               	movwf	fsr2l,c
 26078  0179EA  6ADA               	clrf	fsr2h,c
 26079  0179EC  0060  F0CB  FFDE   	movff	btemp,postinc2
 26080  0179F2  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 26081  0179F8                     l9161:
 26082                           
 26083                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 26084  0179F8  0100               	movlb	0	; () banked
 26085  0179FA  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 26086  0179FC  0E0D               	movlw	13
 26087  0179FE  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 26088  017A00  D003               	goto	l9167
 26089                           
 26090                           ; BSR set to: 0
 26091                           ;daq.c: 136:    R.done = 1;
 26092  017A02  0E01               	movlw	1
 26093  017A04  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 26094  017A06  0012               	return	
 26095  017A08                     l9167:
 26096                           
 26097                           ; BSR set to: 0
 26098                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26099  017A08  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 26100  017A0E  EE20  F0EC         	lfsr	2,_R+37	;volatile
 26101  017A12  006F FF78  F03A    	movff	postinc2,btemp+8
 26102  017A18  006F FF74  F03B    	movff	postdec2,btemp+9
 26103  017A1E  2A3D               	incf	(btemp+11)^0,f,c
 26104  017A20  D003               	goto	u872_44
 26105  017A22                     u872_45:
 26106  017A22  90D8               	bcf	status,0,c
 26107  017A24  323B               	rrcf	(btemp+9)^0,f,c
 26108  017A26  323A               	rrcf	(btemp+8)^0,f,c
 26109  017A28                     u872_44:
 26110  017A28  2E3D               	decfsz	(btemp+11)^0,f,c
 26111  017A2A  D7FB               	goto	u872_45
 26112  017A2C  A03A               	btfss	(btemp+8)^0,0,c
 26113  017A2E  D7E4               	goto	l9161
 26114                           
 26115                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 26116  017A30  ECD1  F0C5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26117                           
 26118                           ; BSR set to: 62
 26119                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 26120  017A34  0100               	movlb	0	; () banked
 26121  017A36  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26122  017A38  0B0F               	andlw	15
 26123  017A3A  6EE6               	movwf	postinc1,c
 26124  017A3C  EC8C  F0C5         	call	_ADCC_StartConversion	;wreg free
 26125                           
 26126                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26127  017A40  0012               	return		;funcret
 26128  017A42                     __end_of_adc_int_t_handler:
 26129                           	opt callstack 0
 26130                           
 26131 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26132 ;; Defined at:
 26133 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26134 ;; Parameters:    Size  Location     Type
 26135 ;;		None
 26136 ;; Auto vars:     Size  Location     Type
 26137 ;;		None
 26138 ;; Return value:  Size  Location     Type
 26139 ;;                  1  [STACK] void 
 26140 ;; Registers used:
 26141 ;;		None
 26142 ;; Tracked objects:
 26143 ;;		On entry : 3F/39
 26144 ;;		On exit  : 0/0
 26145 ;;		Unchanged: 0/0
 26146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26151 ;;Total ram usage:        0 bytes
 26152 ;; Hardware stack levels used:    1
 26153 ;; This function calls:
 26154 ;;		Nothing
 26155 ;; This function is called by:
 26156 ;;		_ADCC_Initialize
 26157 ;;		_ADCC_ISR
 26158 ;;		_ADCC_ThresholdISR
 26159 ;; This function uses a reentrant model
 26160 ;;
 26161                           
 26162                           	psect	text132
 26163  018BE6                     __ptext132:
 26164                           	opt callstack 0
 26165  018BE6                     _ADCC_DefaultInterruptHandler:
 26166                           	opt callstack 13
 26167                           
 26168                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26169                           
 26170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26171                           ;incstack = 0
 26172  018BE6  0012               	return		;funcret
 26173  018BE8                     __end_of_ADCC_DefaultInterruptHandler:
 26174                           	opt callstack 0
 26175                           
 26176 ;; *************** function _adc_int_handler *****************
 26177 ;; Defined at:
 26178 ;;		line 118 in file "daq.c"
 26179 ;; Parameters:    Size  Location     Type
 26180 ;;		None
 26181 ;; Auto vars:     Size  Location     Type
 26182 ;;		None
 26183 ;; Return value:  Size  Location     Type
 26184 ;;                  1  [STACK] void 
 26185 ;; Registers used:
 26186 ;;		None
 26187 ;; Tracked objects:
 26188 ;;		On entry : 3F/39
 26189 ;;		On exit  : 0/0
 26190 ;;		Unchanged: 0/0
 26191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26196 ;;Total ram usage:        0 bytes
 26197 ;; Hardware stack levels used:    1
 26198 ;; This function calls:
 26199 ;;		Nothing
 26200 ;; This function is called by:
 26201 ;;		_start_adc_scan
 26202 ;;		_ADCC_ISR
 26203 ;; This function uses a reentrant model
 26204 ;;
 26205                           
 26206                           	psect	text133
 26207  018BE8                     __ptext133:
 26208                           	opt callstack 0
 26209  018BE8                     _adc_int_handler:
 26210                           	opt callstack 13
 26211                           
 26212                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26213                           
 26214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26215                           ;incstack = 0
 26216  018BE8  0012               	return		;funcret
 26217  018BEA                     __end_of_adc_int_handler:
 26218                           	opt callstack 0
 26219                           
 26220 ;; *************** function _ADCC_ThresholdISR *****************
 26221 ;; Defined at:
 26222 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26223 ;; Parameters:    Size  Location     Type
 26224 ;;		None
 26225 ;; Auto vars:     Size  Location     Type
 26226 ;;		None
 26227 ;; Return value:  Size  Location     Type
 26228 ;;                  1    wreg      void 
 26229 ;; Registers used:
 26230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26231 ;; Tracked objects:
 26232 ;;		On entry : 0/0
 26233 ;;		On exit  : 0/0
 26234 ;;		Unchanged: 0/0
 26235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26238 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26239 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26240 ;;Total ram usage:        5 bytes
 26241 ;; Hardware stack levels used:    1
 26242 ;; Hardware stack levels required when called:    2
 26243 ;; This function calls:
 26244 ;;		Absolute function
 26245 ;;		_ADCC_DefaultInterruptHandler
 26246 ;;		_adc_int_t_handler
 26247 ;; This function is called by:
 26248 ;;		Interrupt level 2
 26249 ;; This function uses a non-reentrant model
 26250 ;;
 26251                           
 26252                           	psect	text134
 26253  017B90                     __ptext134:
 26254                           	opt callstack 0
 26255  017B90                     _ADCC_ThresholdISR:
 26256                           	opt callstack 12
 26257                           
 26258                           ;incstack = 0
 26259  017B90  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 26260  017B96  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26261  017B9C  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26262  017BA2  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26263  017BA8  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26264  017BAE  EE14  F000         	lfsr	1,___inthi_sp
 26265                           
 26266                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26267  017BB2  0139               	movlb	57	; () banked
 26268  017BB4  97A1               	bcf	161,3,b	;volatile
 26269                           
 26270                           ; BSR set to: 57
 26271                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26272  017BB6  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26273  017BB8  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26274  017BBA  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26275  017BBC  B4D8               	btfsc	status,2,c
 26276  017BBE  D00C               	goto	i2u875_49
 26277                           
 26278                           ; BSR set to: 57
 26279                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26280  017BC0  D801               	call	i2u875_48
 26281  017BC2  D00A               	goto	i2u875_49
 26282  017BC4                     i2u875_48:
 26283  017BC4  0005               	push	
 26284  017BC6  6EFA               	movwf	pclath,c
 26285  017BC8  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26286  017BCA  6EFD               	movwf	tosl,c
 26287  017BCC  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26288  017BCE  6EFE               	movwf	tosh,c
 26289  017BD0  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26290  017BD2  6EFF               	movwf	tosu,c
 26291  017BD4  50FA               	movf	pclath,w,c
 26292  017BD6  0012               	return		;indir
 26293  017BD8                     i2u875_49:
 26294  017BD8  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26295  017BDE  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26296  017BE4  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26297  017BEA  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26298  017BF0  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 26299  017BF6  0011               	retfie		f
 26300  017BF8                     __end_of_ADCC_ThresholdISR:
 26301                           	opt callstack 0
 26302                           
 26303 ;; *************** function _UART1_tx_vect_isr *****************
 26304 ;; Defined at:
 26305 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26306 ;; Parameters:    Size  Location     Type
 26307 ;;		None
 26308 ;; Auto vars:     Size  Location     Type
 26309 ;;		None
 26310 ;; Return value:  Size  Location     Type
 26311 ;;                  1    wreg      void 
 26312 ;; Registers used:
 26313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26314 ;; Tracked objects:
 26315 ;;		On entry : 0/0
 26316 ;;		On exit  : 0/0
 26317 ;;		Unchanged: 0/0
 26318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26323 ;;Total ram usage:        0 bytes
 26324 ;; Hardware stack levels used:    1
 26325 ;; Hardware stack levels required when called:    1
 26326 ;; This function calls:
 26327 ;;		Absolute function
 26328 ;;		_UART1_Transmit_ISR
 26329 ;; This function is called by:
 26330 ;;		Interrupt level 2
 26331 ;; This function uses a non-reentrant model
 26332 ;;
 26333                           
 26334                           	psect	text135
 26335  0187E4                     __ptext135:
 26336                           	opt callstack 0
 26337  0187E4                     _UART1_tx_vect_isr:
 26338                           	opt callstack 13
 26339                           
 26340                           ;incstack = 0
 26341  0187E4  EE14  F000         	lfsr	1,___inthi_sp
 26342                           
 26343                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26344  0187E8  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26345  0187EA  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26346  0187EC  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26347  0187EE  B4D8               	btfsc	status,2,c
 26348  0187F0  0011               	retfie		f
 26349                           
 26350                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26351  0187F2  D801               	call	i2u877_48
 26352  0187F4  0011               	retfie		f
 26353  0187F6                     i2u877_48:
 26354  0187F6  0005               	push	
 26355  0187F8  6EFA               	movwf	pclath,c
 26356  0187FA  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26357  0187FC  6EFD               	movwf	tosl,c
 26358  0187FE  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26359  018800  6EFE               	movwf	tosh,c
 26360  018802  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26361  018804  6EFF               	movwf	tosu,c
 26362  018806  50FA               	movf	pclath,w,c
 26363  018808  0012               	return		;indir
 26364  01880A                     __end_of_UART1_tx_vect_isr:
 26365                           	opt callstack 0
 26366                           
 26367 ;; *************** function _UART1_Transmit_ISR *****************
 26368 ;; Defined at:
 26369 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26370 ;; Parameters:    Size  Location     Type
 26371 ;;		None
 26372 ;; Auto vars:     Size  Location     Type
 26373 ;;		None
 26374 ;; Return value:  Size  Location     Type
 26375 ;;                  1  [STACK] void 
 26376 ;; Registers used:
 26377 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26378 ;; Tracked objects:
 26379 ;;		On entry : 0/0
 26380 ;;		On exit  : 3B/39
 26381 ;;		Unchanged: 0/0
 26382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26387 ;;Total ram usage:        0 bytes
 26388 ;; Hardware stack levels used:    1
 26389 ;; This function calls:
 26390 ;;		Nothing
 26391 ;; This function is called by:
 26392 ;;		_UART1_Initialize
 26393 ;;		_UART1_tx_vect_isr
 26394 ;; This function uses a reentrant model
 26395 ;;
 26396                           
 26397                           	psect	text136
 26398  0184DC                     __ptext136:
 26399                           	opt callstack 0
 26400  0184DC                     _UART1_Transmit_ISR:
 26401                           	opt callstack 13
 26402                           
 26403                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26404                           
 26405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26406                           ;incstack = 0
 26407  0184DC  0E40               	movlw	64
 26408  0184DE  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 26409  0184E0  D010               	goto	l581
 26410                           
 26411                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26412  0184E2  0EBB               	movlw	low _uart1TxBuffer
 26413  0184E4  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 26414  0184E6  6ED9               	movwf	fsr2l,c
 26415  0184E8  6ADA               	clrf	fsr2h,c
 26416  0184EA  0E02               	movlw	high _uart1TxBuffer
 26417  0184EC  22DA               	addwfc	fsr2h,f,c
 26418  0184EE  50DF               	movf	indf2,w,c
 26419  0184F0  013D               	movlb	61	; () banked
 26420  0184F2  6FEA               	movwf	234,b	;volatile
 26421                           
 26422                           ; BSR set to: 61
 26423  0184F4  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 26424                           
 26425                           ; BSR set to: 61
 26426                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26427  0184F6  0E3F               	movlw	63
 26428  0184F8  6430               	cpfsgt	_uart1TxTail^0,c
 26429  0184FA  D001               	goto	l8907
 26430                           
 26431                           ; BSR set to: 61
 26432                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26433  0184FC  6A30               	clrf	_uart1TxTail^0,c	;volatile
 26434  0184FE                     l8907:
 26435                           
 26436                           ; BSR set to: 61
 26437                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26438  0184FE  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26439                           
 26440                           ;mcc_generated_files/uart1.c: 222:  } else {
 26441  018500  0012               	return	
 26442  018502                     l581:
 26443                           
 26444                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26445  018502  0139               	movlb	57	; () banked
 26446  018504  9993               	bcf	147,4,b	;volatile
 26447                           
 26448                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26449  018506  0012               	return		;funcret
 26450  018508                     __end_of_UART1_Transmit_ISR:
 26451                           	opt callstack 0
 26452                           
 26453 ;; *************** function _UART1_rx_vect_isr *****************
 26454 ;; Defined at:
 26455 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26456 ;; Parameters:    Size  Location     Type
 26457 ;;		None
 26458 ;; Auto vars:     Size  Location     Type
 26459 ;;		None
 26460 ;; Return value:  Size  Location     Type
 26461 ;;                  1    wreg      void 
 26462 ;; Registers used:
 26463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26464 ;; Tracked objects:
 26465 ;;		On entry : 0/0
 26466 ;;		On exit  : 0/0
 26467 ;;		Unchanged: 0/0
 26468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26473 ;;Total ram usage:        0 bytes
 26474 ;; Hardware stack levels used:    1
 26475 ;; Hardware stack levels required when called:    1
 26476 ;; This function calls:
 26477 ;;		Absolute function
 26478 ;;		_UART1_Receive_ISR
 26479 ;; This function is called by:
 26480 ;;		Interrupt level 2
 26481 ;; This function uses a non-reentrant model
 26482 ;;
 26483                           
 26484                           	psect	text137
 26485  01880C                     __ptext137:
 26486                           	opt callstack 0
 26487  01880C                     _UART1_rx_vect_isr:
 26488                           	opt callstack 13
 26489                           
 26490                           ;incstack = 0
 26491  01880C  EE14  F000         	lfsr	1,___inthi_sp
 26492                           
 26493                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26494  018810  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26495  018812  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26496  018814  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26497  018816  B4D8               	btfsc	status,2,c
 26498  018818  0011               	retfie		f
 26499                           
 26500                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26501  01881A  D801               	call	i2u879_48
 26502  01881C  0011               	retfie		f
 26503  01881E                     i2u879_48:
 26504  01881E  0005               	push	
 26505  018820  6EFA               	movwf	pclath,c
 26506  018822  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26507  018824  6EFD               	movwf	tosl,c
 26508  018826  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26509  018828  6EFE               	movwf	tosh,c
 26510  01882A  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26511  01882C  6EFF               	movwf	tosu,c
 26512  01882E  50FA               	movf	pclath,w,c
 26513  018830  0012               	return		;indir
 26514  018832                     __end_of_UART1_rx_vect_isr:
 26515                           	opt callstack 0
 26516                           
 26517 ;; *************** function _UART1_Receive_ISR *****************
 26518 ;; Defined at:
 26519 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26520 ;; Parameters:    Size  Location     Type
 26521 ;;		None
 26522 ;; Auto vars:     Size  Location     Type
 26523 ;;		None
 26524 ;; Return value:  Size  Location     Type
 26525 ;;                  1  [STACK] void 
 26526 ;; Registers used:
 26527 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26528 ;; Tracked objects:
 26529 ;;		On entry : 0/0
 26530 ;;		On exit  : 0/0
 26531 ;;		Unchanged: 0/0
 26532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26537 ;;Total ram usage:        0 bytes
 26538 ;; Hardware stack levels used:    1
 26539 ;; This function calls:
 26540 ;;		Nothing
 26541 ;; This function is called by:
 26542 ;;		_UART1_Initialize
 26543 ;;		_UART1_rx_vect_isr
 26544 ;; This function uses a reentrant model
 26545 ;;
 26546                           
 26547                           	psect	text138
 26548  0189D0                     __ptext138:
 26549                           	opt callstack 0
 26550  0189D0                     _UART1_Receive_ISR:
 26551                           	opt callstack 13
 26552                           
 26553                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26554                           
 26555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26556                           ;incstack = 0
 26557  0189D0  0E00               	movlw	low _uart1RxBuffer
 26558  0189D2  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 26559  0189D4  6ED9               	movwf	fsr2l,c
 26560  0189D6  6ADA               	clrf	fsr2h,c
 26561  0189D8  0E06               	movlw	high _uart1RxBuffer
 26562  0189DA  22DA               	addwfc	fsr2h,f,c
 26563  0189DC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26564  0189E2  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 26565                           
 26566                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26567  0189E4  282E               	incf	_uart1RxHead^0,w,c
 26568  0189E6  B4D8               	btfsc	status,2,c
 26569                           
 26570                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26571  0189E8  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 26572                           
 26573                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26574  0189EA  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 26575                           
 26576                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26577  0189EC  0012               	return		;funcret
 26578  0189EE                     __end_of_UART1_Receive_ISR:
 26579                           	opt callstack 0
 26580                           
 26581 ;; *************** function _UART2_tx_vect_isr *****************
 26582 ;; Defined at:
 26583 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26584 ;; Parameters:    Size  Location     Type
 26585 ;;		None
 26586 ;; Auto vars:     Size  Location     Type
 26587 ;;		None
 26588 ;; Return value:  Size  Location     Type
 26589 ;;                  1    wreg      void 
 26590 ;; Registers used:
 26591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26592 ;; Tracked objects:
 26593 ;;		On entry : 0/0
 26594 ;;		On exit  : 0/0
 26595 ;;		Unchanged: 0/0
 26596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26601 ;;Total ram usage:        0 bytes
 26602 ;; Hardware stack levels used:    1
 26603 ;; Hardware stack levels required when called:    1
 26604 ;; This function calls:
 26605 ;;		Absolute function
 26606 ;;		_UART2_Transmit_ISR
 26607 ;; This function is called by:
 26608 ;;		Interrupt level 2
 26609 ;; This function uses a non-reentrant model
 26610 ;;
 26611                           
 26612                           	psect	text139
 26613  018834                     __ptext139:
 26614                           	opt callstack 0
 26615  018834                     _UART2_tx_vect_isr:
 26616                           	opt callstack 13
 26617                           
 26618                           ;incstack = 0
 26619  018834  EE14  F000         	lfsr	1,___inthi_sp
 26620                           
 26621                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26622  018838  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 26623  01883A  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26624  01883C  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26625  01883E  B4D8               	btfsc	status,2,c
 26626  018840  0011               	retfie		f
 26627                           
 26628                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26629  018842  D801               	call	i2u881_48
 26630  018844  0011               	retfie		f
 26631  018846                     i2u881_48:
 26632  018846  0005               	push	
 26633  018848  6EFA               	movwf	pclath,c
 26634  01884A  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 26635  01884C  6EFD               	movwf	tosl,c
 26636  01884E  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26637  018850  6EFE               	movwf	tosh,c
 26638  018852  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26639  018854  6EFF               	movwf	tosu,c
 26640  018856  50FA               	movf	pclath,w,c
 26641  018858  0012               	return		;indir
 26642  01885A                     __end_of_UART2_tx_vect_isr:
 26643                           	opt callstack 0
 26644                           
 26645 ;; *************** function _UART2_Transmit_ISR *****************
 26646 ;; Defined at:
 26647 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26648 ;; Parameters:    Size  Location     Type
 26649 ;;		None
 26650 ;; Auto vars:     Size  Location     Type
 26651 ;;		None
 26652 ;; Return value:  Size  Location     Type
 26653 ;;                  1  [STACK] void 
 26654 ;; Registers used:
 26655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26656 ;; Tracked objects:
 26657 ;;		On entry : 0/0
 26658 ;;		On exit  : 3B/39
 26659 ;;		Unchanged: 0/0
 26660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26665 ;;Total ram usage:        0 bytes
 26666 ;; Hardware stack levels used:    1
 26667 ;; This function calls:
 26668 ;;		Nothing
 26669 ;; This function is called by:
 26670 ;;		_UART2_Initialize
 26671 ;;		_UART2_tx_vect_isr
 26672 ;; This function uses a reentrant model
 26673 ;;
 26674                           
 26675                           	psect	text140
 26676  018508                     __ptext140:
 26677                           	opt callstack 0
 26678  018508                     _UART2_Transmit_ISR:
 26679                           	opt callstack 13
 26680                           
 26681                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26682                           
 26683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26684                           ;incstack = 0
 26685  018508  0E40               	movlw	64
 26686  01850A  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 26687  01850C  D010               	goto	l701
 26688                           
 26689                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26690  01850E  0E54               	movlw	low _uart2TxBuffer
 26691  018510  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 26692  018512  6ED9               	movwf	fsr2l,c
 26693  018514  6ADA               	clrf	fsr2h,c
 26694  018516  0E03               	movlw	high _uart2TxBuffer
 26695  018518  22DA               	addwfc	fsr2h,f,c
 26696  01851A  50DF               	movf	indf2,w,c
 26697  01851C  013D               	movlb	61	; () banked
 26698  01851E  6FD2               	movwf	210,b	;volatile
 26699                           
 26700                           ; BSR set to: 61
 26701  018520  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 26702                           
 26703                           ; BSR set to: 61
 26704                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26705  018522  0E3F               	movlw	63
 26706  018524  642A               	cpfsgt	_uart2TxTail^0,c
 26707  018526  D001               	goto	l8929
 26708                           
 26709                           ; BSR set to: 61
 26710                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26711  018528  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 26712  01852A                     l8929:
 26713                           
 26714                           ; BSR set to: 61
 26715                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26716  01852A  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26717                           
 26718                           ;mcc_generated_files/uart2.c: 224:     }
 26719  01852C  0012               	return	
 26720  01852E                     l701:
 26721                           
 26722                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26723  01852E  0139               	movlb	57	; () banked
 26724  018530  9796               	bcf	150,3,b	;volatile
 26725                           
 26726                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26727  018532  0012               	return		;funcret
 26728  018534                     __end_of_UART2_Transmit_ISR:
 26729                           	opt callstack 0
 26730                           
 26731 ;; *************** function _UART2_rx_vect_isr *****************
 26732 ;; Defined at:
 26733 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26734 ;; Parameters:    Size  Location     Type
 26735 ;;		None
 26736 ;; Auto vars:     Size  Location     Type
 26737 ;;		None
 26738 ;; Return value:  Size  Location     Type
 26739 ;;                  1    wreg      void 
 26740 ;; Registers used:
 26741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26742 ;; Tracked objects:
 26743 ;;		On entry : 0/0
 26744 ;;		On exit  : 0/0
 26745 ;;		Unchanged: 0/0
 26746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26751 ;;Total ram usage:        0 bytes
 26752 ;; Hardware stack levels used:    1
 26753 ;; Hardware stack levels required when called:    1
 26754 ;; This function calls:
 26755 ;;		Absolute function
 26756 ;;		_UART2_Receive_ISR
 26757 ;; This function is called by:
 26758 ;;		Interrupt level 2
 26759 ;; This function uses a non-reentrant model
 26760 ;;
 26761                           
 26762                           	psect	text141
 26763  01885C                     __ptext141:
 26764                           	opt callstack 0
 26765  01885C                     _UART2_rx_vect_isr:
 26766                           	opt callstack 13
 26767                           
 26768                           ;incstack = 0
 26769  01885C  EE14  F000         	lfsr	1,___inthi_sp
 26770                           
 26771                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26772  018860  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26773  018862  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26774  018864  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26775  018866  B4D8               	btfsc	status,2,c
 26776  018868  0011               	retfie		f
 26777                           
 26778                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26779  01886A  D801               	call	i2u883_48
 26780  01886C  0011               	retfie		f
 26781  01886E                     i2u883_48:
 26782  01886E  0005               	push	
 26783  018870  6EFA               	movwf	pclath,c
 26784  018872  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26785  018874  6EFD               	movwf	tosl,c
 26786  018876  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26787  018878  6EFE               	movwf	tosh,c
 26788  01887A  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26789  01887C  6EFF               	movwf	tosu,c
 26790  01887E  50FA               	movf	pclath,w,c
 26791  018880  0012               	return		;indir
 26792  018882                     __end_of_UART2_rx_vect_isr:
 26793                           	opt callstack 0
 26794                           
 26795 ;; *************** function _UART2_Receive_ISR *****************
 26796 ;; Defined at:
 26797 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26798 ;; Parameters:    Size  Location     Type
 26799 ;;		None
 26800 ;; Auto vars:     Size  Location     Type
 26801 ;;		None
 26802 ;; Return value:  Size  Location     Type
 26803 ;;                  1  [STACK] void 
 26804 ;; Registers used:
 26805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26806 ;; Tracked objects:
 26807 ;;		On entry : 0/0
 26808 ;;		On exit  : 0/0
 26809 ;;		Unchanged: 0/0
 26810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26815 ;;Total ram usage:        0 bytes
 26816 ;; Hardware stack levels used:    1
 26817 ;; This function calls:
 26818 ;;		Nothing
 26819 ;; This function is called by:
 26820 ;;		_UART2_Initialize
 26821 ;;		_UART2_rx_vect_isr
 26822 ;; This function uses a reentrant model
 26823 ;;
 26824                           
 26825                           	psect	text142
 26826  0189EE                     __ptext142:
 26827                           	opt callstack 0
 26828  0189EE                     _UART2_Receive_ISR:
 26829                           	opt callstack 13
 26830                           
 26831                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26832                           
 26833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26834                           ;incstack = 0
 26835  0189EE  0E00               	movlw	low _uart2RxBuffer
 26836  0189F0  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 26837  0189F2  6ED9               	movwf	fsr2l,c
 26838  0189F4  6ADA               	clrf	fsr2h,c
 26839  0189F6  0E07               	movlw	high _uart2RxBuffer
 26840  0189F8  22DA               	addwfc	fsr2h,f,c
 26841  0189FA  006F F743 FFDF     	movff	15824,indf2	;volatile
 26842  018A00  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 26843                           
 26844                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26845  018A02  2828               	incf	_uart2RxHead^0,w,c
 26846  018A04  B4D8               	btfsc	status,2,c
 26847                           
 26848                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26849  018A06  6A28               	clrf	_uart2RxHead^0,c	;volatile
 26850                           
 26851                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26852  018A08  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 26853                           
 26854                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26855  018A0A  0012               	return		;funcret
 26856  018A0C                     __end_of_UART2_Receive_ISR:
 26857                           	opt callstack 0
 26858                           
 26859 ;; *************** function _TMR6_ISR *****************
 26860 ;; Defined at:
 26861 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26862 ;; Parameters:    Size  Location     Type
 26863 ;;		None
 26864 ;; Auto vars:     Size  Location     Type
 26865 ;;		None
 26866 ;; Return value:  Size  Location     Type
 26867 ;;                  1    wreg      void 
 26868 ;; Registers used:
 26869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26870 ;; Tracked objects:
 26871 ;;		On entry : 0/0
 26872 ;;		On exit  : 0/0
 26873 ;;		Unchanged: 0/0
 26874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26879 ;;Total ram usage:        1 bytes
 26880 ;; Hardware stack levels used:    1
 26881 ;; Hardware stack levels required when called:    2
 26882 ;; This function calls:
 26883 ;;		_TMR6_CallBack
 26884 ;; This function is called by:
 26885 ;;		Interrupt level 2
 26886 ;; This function uses a non-reentrant model
 26887 ;;
 26888                           
 26889                           	psect	text143
 26890  018A60                     __ptext143:
 26891                           	opt callstack 0
 26892  018A60                     _TMR6_ISR:
 26893                           	opt callstack 12
 26894                           
 26895                           ;incstack = 0
 26896  018A60  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 26897  018A66  EE14  F000         	lfsr	1,___inthi_sp
 26898                           
 26899                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26900  018A6A  0139               	movlb	57	; () banked
 26901  018A6C  91A9               	bcf	169,0,b	;volatile
 26902                           
 26903                           ; BSR set to: 57
 26904                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26905  018A6E  EC77  F0C4         	call	_TMR6_CallBack	;wreg free
 26906  018A72  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 26907  018A78  0011               	retfie		f
 26908  018A7A                     __end_of_TMR6_ISR:
 26909                           	opt callstack 0
 26910                           
 26911 ;; *************** function _TMR6_CallBack *****************
 26912 ;; Defined at:
 26913 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26914 ;; Parameters:    Size  Location     Type
 26915 ;;		None
 26916 ;; Auto vars:     Size  Location     Type
 26917 ;;		None
 26918 ;; Return value:  Size  Location     Type
 26919 ;;                  1  [STACK] void 
 26920 ;; Registers used:
 26921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26922 ;; Tracked objects:
 26923 ;;		On entry : 3F/39
 26924 ;;		On exit  : 0/0
 26925 ;;		Unchanged: 0/0
 26926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26931 ;;Total ram usage:        0 bytes
 26932 ;; Hardware stack levels used:    1
 26933 ;; Hardware stack levels required when called:    1
 26934 ;; This function calls:
 26935 ;;		Absolute function
 26936 ;;		_TMR6_DefaultInterruptHandler
 26937 ;; This function is called by:
 26938 ;;		_TMR6_ISR
 26939 ;; This function uses a reentrant model
 26940 ;;
 26941                           
 26942                           	psect	text144
 26943  0188EE                     __ptext144:
 26944                           	opt callstack 0
 26945  0188EE                     _TMR6_CallBack:
 26946                           	opt callstack 12
 26947                           
 26948                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26949                           
 26950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26951                           ;incstack = 0
 26952  0188EE  0100               	movlb	0	; () banked
 26953  0188F0  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26954  0188F2  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26955  0188F4  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26956  0188F6  B4D8               	btfsc	status,2,c
 26957  0188F8  0012               	return	
 26958                           
 26959                           ; BSR set to: 0
 26960                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26961  0188FA  D801               	call	u854_48
 26962  0188FC  0012               	return	
 26963  0188FE                     u854_48:
 26964  0188FE  0005               	push	
 26965  018900  6EFA               	movwf	pclath,c
 26966  018902  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26967  018904  6EFD               	movwf	tosl,c
 26968  018906  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26969  018908  6EFE               	movwf	tosh,c
 26970  01890A  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26971  01890C  6EFF               	movwf	tosu,c
 26972  01890E  50FA               	movf	pclath,w,c
 26973  018910  0012               	return		;indir
 26974  018912                     __end_of_TMR6_CallBack:
 26975                           	opt callstack 0
 26976                           
 26977 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26978 ;; Defined at:
 26979 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26980 ;; Parameters:    Size  Location     Type
 26981 ;;		None
 26982 ;; Auto vars:     Size  Location     Type
 26983 ;;  i               1  [STACK] unsigned char 
 26984 ;; Return value:  Size  Location     Type
 26985 ;;                  1  [STACK] void 
 26986 ;; Registers used:
 26987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26988 ;; Tracked objects:
 26989 ;;		On entry : 3F/0
 26990 ;;		On exit  : 0/0
 26991 ;;		Unchanged: 0/0
 26992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26997 ;;Total ram usage:        0 bytes
 26998 ;; Hardware stack levels used:    1
 26999 ;; This function calls:
 27000 ;;		Nothing
 27001 ;; This function is called by:
 27002 ;;		_TMR6_Initialize
 27003 ;;		_TMR6_CallBack
 27004 ;; This function uses a reentrant model
 27005 ;;
 27006                           
 27007                           	psect	text145
 27008  01815C                     __ptext145:
 27009                           	opt callstack 0
 27010  01815C                     _TMR6_DefaultInterruptHandler:
 27011                           	opt callstack 0
 27012                           
 27013                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27014  01815C  52E6               	movf	postinc1,f,c
 27015                           
 27016                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 27017                           ;stkvar	_i @ sp[(-1)+0]
 27018                           
 27019                           ;incstack = 0
 27020  01815E  0EFF               	movlw	-1
 27021  018160  6AE3               	clrf	plusw1,c
 27022  018162                     l8593:
 27023                           
 27024                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 27025                           ;stkvar	_i @ sp[(-1)+0]
 27026  018162  0EFF               	movlw	-1
 27027  018164  50E3               	movf	plusw1,w,c
 27028  018166  0D02               	mullw	2
 27029  018168  50F3               	movf	243,w,c
 27030  01816A  0F89               	addlw	low _tickCount
 27031  01816C  6ED9               	movwf	fsr2l,c
 27032  01816E  6ADA               	clrf	fsr2h,c
 27033  018170  50DE               	movf	postinc2,w,c
 27034  018172  10DE               	iorwf	postinc2,w,c
 27035  018174  B4D8               	btfsc	status,2,c
 27036  018176  D00A               	goto	l8597
 27037                           
 27038                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 27039                           ;stkvar	_i @ sp[(-1)+0]
 27040  018178  0EFF               	movlw	-1
 27041  01817A  50E3               	movf	plusw1,w,c
 27042  01817C  0D02               	mullw	2
 27043  01817E  50F3               	movf	243,w,c
 27044  018180  0F89               	addlw	low _tickCount
 27045  018182  6ED9               	movwf	fsr2l,c
 27046  018184  6ADA               	clrf	fsr2h,c
 27047  018186  06DE               	decf	postinc2,f,c
 27048  018188  0E00               	movlw	0
 27049  01818A  5ADD               	subwfb	postdec2,f,c
 27050  01818C                     l8597:
 27051                           
 27052                           ;mcc_generated_files/tmr6.c: 207:  }
 27053                           ;stkvar	_i @ sp[(-1)+0]
 27054  01818C  0EFF               	movlw	-1
 27055  01818E  2AE3               	incf	plusw1,f,c
 27056                           
 27057                           ;stkvar	_i @ sp[(-1)+0]
 27058  018190  0EFF               	movlw	-1
 27059  018192  006F FF8C  F032    	movff	plusw1,btemp
 27060  018198  0E0B               	movlw	11
 27061  01819A  6432               	cpfsgt	btemp^0,c
 27062  01819C  D7E2               	goto	l8593
 27063                           
 27064                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27065  01819E  52E5               	movf	postdec1,f,c
 27066  0181A0  0012               	return		;funcret
 27067  0181A2                     __end_of_TMR6_DefaultInterruptHandler:
 27068                           	opt callstack 0
 27069                           
 27070 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27071 ;; Defined at:
 27072 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27073 ;; Parameters:    Size  Location     Type
 27074 ;;		None
 27075 ;; Auto vars:     Size  Location     Type
 27076 ;;		None
 27077 ;; Return value:  Size  Location     Type
 27078 ;;                  1    wreg      void 
 27079 ;; Registers used:
 27080 ;;		None
 27081 ;; Tracked objects:
 27082 ;;		On entry : 0/0
 27083 ;;		On exit  : 3F/0
 27084 ;;		Unchanged: 0/0
 27085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27090 ;;Total ram usage:        0 bytes
 27091 ;; Hardware stack levels used:    1
 27092 ;; This function calls:
 27093 ;;		Nothing
 27094 ;; This function is called by:
 27095 ;;		Interrupt level 2
 27096 ;; This function uses a non-reentrant model
 27097 ;;
 27098                           
 27099                           	psect	text146
 27100  018B68                     __ptext146:
 27101                           	opt callstack 0
 27102  018B68                     _DMA1_DMASCNT_ISR:
 27103                           	opt callstack 14
 27104                           
 27105                           ;incstack = 0
 27106  018B68  EE14  F000         	lfsr	1,___inthi_sp
 27107                           
 27108                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27109  018B6C  0139               	movlb	57	; () banked
 27110  018B6E  91A2               	bcf	162,0,b	;volatile
 27111                           
 27112                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27113  018B70  0100               	movlb	0	; () banked
 27114  018B72  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 27115                           
 27116                           ; BSR set to: 0
 27117  018B74  0011               	retfie		f
 27118  018B76                     __end_of_DMA1_DMASCNT_ISR:
 27119                           	opt callstack 0
 27120                           
 27121 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27122 ;; Defined at:
 27123 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27124 ;; Parameters:    Size  Location     Type
 27125 ;;		None
 27126 ;; Auto vars:     Size  Location     Type
 27127 ;;		None
 27128 ;; Return value:  Size  Location     Type
 27129 ;;                  1    wreg      void 
 27130 ;; Registers used:
 27131 ;;		None
 27132 ;; Tracked objects:
 27133 ;;		On entry : 0/0
 27134 ;;		On exit  : 3F/39
 27135 ;;		Unchanged: 0/0
 27136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27141 ;;Total ram usage:        0 bytes
 27142 ;; Hardware stack levels used:    1
 27143 ;; This function calls:
 27144 ;;		Nothing
 27145 ;; This function is called by:
 27146 ;;		Interrupt level 2
 27147 ;; This function uses a non-reentrant model
 27148 ;;
 27149                           
 27150                           	psect	text147
 27151  018B80                     __ptext147:
 27152                           	opt callstack 0
 27153  018B80                     _DMA1_DMADCNT_ISR:
 27154                           	opt callstack 14
 27155                           
 27156                           ; BSR set to: 0
 27157                           ;incstack = 0
 27158  018B80  EE14  F000         	lfsr	1,___inthi_sp
 27159                           
 27160                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27161  018B84  0139               	movlb	57	; () banked
 27162  018B86  93A2               	bcf	162,1,b	;volatile
 27163                           
 27164                           ; BSR set to: 57
 27165  018B88  0011               	retfie		f
 27166  018B8A                     __end_of_DMA1_DMADCNT_ISR:
 27167                           	opt callstack 0
 27168                           
 27169 ;; *************** function _DMA1_DMAA_ISR *****************
 27170 ;; Defined at:
 27171 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27172 ;; Parameters:    Size  Location     Type
 27173 ;;		None
 27174 ;; Auto vars:     Size  Location     Type
 27175 ;;		None
 27176 ;; Return value:  Size  Location     Type
 27177 ;;                  1    wreg      void 
 27178 ;; Registers used:
 27179 ;;		None
 27180 ;; Tracked objects:
 27181 ;;		On entry : 0/0
 27182 ;;		On exit  : 3F/39
 27183 ;;		Unchanged: 0/0
 27184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27189 ;;Total ram usage:        0 bytes
 27190 ;; Hardware stack levels used:    1
 27191 ;; This function calls:
 27192 ;;		Nothing
 27193 ;; This function is called by:
 27194 ;;		Interrupt level 2
 27195 ;; This function uses a non-reentrant model
 27196 ;;
 27197                           
 27198                           	psect	text148
 27199  018B8C                     __ptext148:
 27200                           	opt callstack 0
 27201  018B8C                     _DMA1_DMAA_ISR:
 27202                           	opt callstack 14
 27203                           
 27204                           ; BSR set to: 57
 27205                           ;incstack = 0
 27206  018B8C  EE14  F000         	lfsr	1,___inthi_sp
 27207                           
 27208                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27209  018B90  0139               	movlb	57	; () banked
 27210  018B92  97A2               	bcf	162,3,b	;volatile
 27211                           
 27212                           ; BSR set to: 57
 27213  018B94  0011               	retfie		f
 27214  018B96                     __end_of_DMA1_DMAA_ISR:
 27215                           	opt callstack 0
 27216                           
 27217 ;; *************** function _DMA1_DMAOR_ISR *****************
 27218 ;; Defined at:
 27219 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27220 ;; Parameters:    Size  Location     Type
 27221 ;;		None
 27222 ;; Auto vars:     Size  Location     Type
 27223 ;;		None
 27224 ;; Return value:  Size  Location     Type
 27225 ;;                  1    wreg      void 
 27226 ;; Registers used:
 27227 ;;		None
 27228 ;; Tracked objects:
 27229 ;;		On entry : 0/0
 27230 ;;		On exit  : 3F/39
 27231 ;;		Unchanged: 0/0
 27232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27237 ;;Total ram usage:        0 bytes
 27238 ;; Hardware stack levels used:    1
 27239 ;; This function calls:
 27240 ;;		Nothing
 27241 ;; This function is called by:
 27242 ;;		Interrupt level 2
 27243 ;; This function uses a non-reentrant model
 27244 ;;
 27245                           
 27246                           	psect	text149
 27247  018B98                     __ptext149:
 27248                           	opt callstack 0
 27249  018B98                     _DMA1_DMAOR_ISR:
 27250                           	opt callstack 14
 27251                           
 27252                           ; BSR set to: 57
 27253                           ;incstack = 0
 27254  018B98  EE14  F000         	lfsr	1,___inthi_sp
 27255                           
 27256                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27257  018B9C  0139               	movlb	57	; () banked
 27258  018B9E  95A2               	bcf	162,2,b	;volatile
 27259                           
 27260                           ; BSR set to: 57
 27261  018BA0  0011               	retfie		f
 27262  018BA2                     __end_of_DMA1_DMAOR_ISR:
 27263                           	opt callstack 0
 27264                           
 27265                           ;
 27266                           ; Interrupt Vector Table @ 0x8
 27267                           ;
 27268                           
 27269                           	psect	ivt0x8
 27270  000008                     __pivt0x8:
 27271                           	opt callstack 0
 27272  000008                     ivt0x8_base:
 27273                           	opt callstack 0
 27274                           
 27275                           ; Vector 0 : SWINT
 27276  000008  62F7               	dw	_Default_ISR shr (0+2)
 27277                           
 27278                           ; Vector 1 : HLVD
 27279  00000A  62F7               	dw	_Default_ISR shr (0+2)
 27280                           
 27281                           ; Vector 2 : OSF
 27282  00000C  62F7               	dw	_Default_ISR shr (0+2)
 27283                           
 27284                           ; Vector 3 : CSW
 27285  00000E  62F7               	dw	_Default_ISR shr (0+2)
 27286                           
 27287                           ; Vector 4 : NVM
 27288  000010  62F7               	dw	_Default_ISR shr (0+2)
 27289                           
 27290                           ; Vector 5 : SCAN
 27291  000012  62F7               	dw	_Default_ISR shr (0+2)
 27292                           
 27293                           ; Vector 6 : CRC
 27294  000014  62F7               	dw	_Default_ISR shr (0+2)
 27295                           
 27296                           ; Vector 7 : IOC
 27297  000016  62F7               	dw	_Default_ISR shr (0+2)
 27298                           
 27299                           ; Vector 8 : INT0
 27300  000018  62D6               	dw	_INT0_ISR shr (0+2)
 27301                           
 27302                           ; Vector 9 : ZCD
 27303  00001A  62F7               	dw	_Default_ISR shr (0+2)
 27304                           
 27305                           ; Vector 10 : AD
 27306  00001C  6158               	dw	_ADCC_ISR shr (0+2)
 27307                           
 27308                           ; Vector 11 : ADT
 27309  00001E  5EE4               	dw	_ADCC_ThresholdISR shr (0+2)
 27310                           
 27311                           ; Vector 12 : CMP1
 27312  000020  62F7               	dw	_Default_ISR shr (0+2)
 27313                           
 27314                           ; Vector 13 : SMT1
 27315  000022  62F7               	dw	_Default_ISR shr (0+2)
 27316                           
 27317                           ; Vector 14 : SMT1PRA
 27318  000024  62F7               	dw	_Default_ISR shr (0+2)
 27319                           
 27320                           ; Vector 15 : SMT1PRW
 27321  000026  62F7               	dw	_Default_ISR shr (0+2)
 27322                           
 27323                           ; Vector 16 : DMA1SCNT
 27324  000028  62DA               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27325                           
 27326                           ; Vector 17 : DMA1DCNT
 27327  00002A  62E0               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27328                           
 27329                           ; Vector 18 : DMA1OR
 27330  00002C  62E6               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27331                           
 27332                           ; Vector 19 : DMA1A
 27333  00002E  62E3               	dw	_DMA1_DMAA_ISR shr (0+2)
 27334                           
 27335                           ; Vector 20 : SPI1RX
 27336  000030  62F7               	dw	_Default_ISR shr (0+2)
 27337                           
 27338                           ; Vector 21 : SPI1TX
 27339  000032  62F7               	dw	_Default_ISR shr (0+2)
 27340                           
 27341                           ; Vector 22 : SPI1
 27342  000034  62F7               	dw	_Default_ISR shr (0+2)
 27343                           
 27344                           ; Vector 23 : I2C1RX
 27345  000036  62F7               	dw	_Default_ISR shr (0+2)
 27346                           
 27347                           ; Vector 24 : I2C1TX
 27348  000038  62F7               	dw	_Default_ISR shr (0+2)
 27349                           
 27350                           ; Vector 25 : I2C1
 27351  00003A  62F7               	dw	_Default_ISR shr (0+2)
 27352                           
 27353                           ; Vector 26 : I2C1E
 27354  00003C  62F7               	dw	_Default_ISR shr (0+2)
 27355                           
 27356                           ; Vector 27 : U1RX
 27357  00003E  6203               	dw	_UART1_rx_vect_isr shr (0+2)
 27358                           
 27359                           ; Vector 28 : U1TX
 27360  000040  61F9               	dw	_UART1_tx_vect_isr shr (0+2)
 27361                           
 27362                           ; Vector 29 : U1E
 27363  000042  62F7               	dw	_Default_ISR shr (0+2)
 27364                           
 27365                           ; Vector 30 : U1
 27366  000044  62F7               	dw	_Default_ISR shr (0+2)
 27367                           
 27368                           ; Vector 31 : TMR0
 27369  000046  62F7               	dw	_Default_ISR shr (0+2)
 27370                           
 27371                           ; Vector 32 : TMR1
 27372  000048  62F7               	dw	_Default_ISR shr (0+2)
 27373                           
 27374                           ; Vector 33 : TMR1G
 27375  00004A  62F7               	dw	_Default_ISR shr (0+2)
 27376                           
 27377                           ; Vector 34 : TMR2
 27378  00004C  62F7               	dw	_Default_ISR shr (0+2)
 27379                           
 27380                           ; Vector 35 : CCP1
 27381  00004E  62F7               	dw	_Default_ISR shr (0+2)
 27382                           
 27383                           ; Vector 36 : Undefined
 27384  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27385                           
 27386                           ; Vector 37 : NCO1
 27387  000052  62F7               	dw	_Default_ISR shr (0+2)
 27388                           
 27389                           ; Vector 38 : CWG1
 27390  000054  62F7               	dw	_Default_ISR shr (0+2)
 27391                           
 27392                           ; Vector 39 : CLC1
 27393  000056  62F7               	dw	_Default_ISR shr (0+2)
 27394                           
 27395                           ; Vector 40 : INT1
 27396  000058  609A               	dw	_INT1_ISR shr (0+2)
 27397                           
 27398                           ; Vector 41 : CMP2
 27399  00005A  62F7               	dw	_Default_ISR shr (0+2)
 27400                           
 27401                           ; Vector 42 : DMA2SCNT
 27402  00005C  62F7               	dw	_Default_ISR shr (0+2)
 27403                           
 27404                           ; Vector 43 : DMA2DCNT
 27405  00005E  62F7               	dw	_Default_ISR shr (0+2)
 27406                           
 27407                           ; Vector 44 : DMA2OR
 27408  000060  62F7               	dw	_Default_ISR shr (0+2)
 27409                           
 27410                           ; Vector 45 : DMA2A
 27411  000062  62F7               	dw	_Default_ISR shr (0+2)
 27412                           
 27413                           ; Vector 46 : I2C2RX
 27414  000064  62F7               	dw	_Default_ISR shr (0+2)
 27415                           
 27416                           ; Vector 47 : I2C2TX
 27417  000066  62F7               	dw	_Default_ISR shr (0+2)
 27418                           
 27419                           ; Vector 48 : I2C2
 27420  000068  62F7               	dw	_Default_ISR shr (0+2)
 27421                           
 27422                           ; Vector 49 : I2C2E
 27423  00006A  62F7               	dw	_Default_ISR shr (0+2)
 27424                           
 27425                           ; Vector 50 : U2RX
 27426  00006C  6217               	dw	_UART2_rx_vect_isr shr (0+2)
 27427                           
 27428                           ; Vector 51 : U2TX
 27429  00006E  620D               	dw	_UART2_tx_vect_isr shr (0+2)
 27430                           
 27431                           ; Vector 52 : U2E
 27432  000070  62F7               	dw	_Default_ISR shr (0+2)
 27433                           
 27434                           ; Vector 53 : U2
 27435  000072  62F7               	dw	_Default_ISR shr (0+2)
 27436                           
 27437                           ; Vector 54 : TMR3
 27438  000074  62F7               	dw	_Default_ISR shr (0+2)
 27439                           
 27440                           ; Vector 55 : TMR3G
 27441  000076  62F7               	dw	_Default_ISR shr (0+2)
 27442                           
 27443                           ; Vector 56 : TMR4
 27444  000078  62F7               	dw	_Default_ISR shr (0+2)
 27445                           
 27446                           ; Vector 57 : CCP2
 27447  00007A  62F7               	dw	_Default_ISR shr (0+2)
 27448                           
 27449                           ; Vector 58 : Undefined
 27450  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27451                           
 27452                           ; Vector 59 : CWG2
 27453  00007E  62F7               	dw	_Default_ISR shr (0+2)
 27454                           
 27455                           ; Vector 60 : CLC2
 27456  000080  62F7               	dw	_Default_ISR shr (0+2)
 27457                           
 27458                           ; Vector 61 : INT2
 27459  000082  62F7               	dw	_Default_ISR shr (0+2)
 27460                           
 27461                           ; Vector 62 : Undefined
 27462  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27463                           
 27464                           ; Vector 63 : Undefined
 27465  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27466                           
 27467                           ; Vector 64 : Undefined
 27468  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27469                           
 27470                           ; Vector 65 : Undefined
 27471  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27472                           
 27473                           ; Vector 66 : Undefined
 27474  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27475                           
 27476                           ; Vector 67 : Undefined
 27477  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27478                           
 27479                           ; Vector 68 : Undefined
 27480  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27481                           
 27482                           ; Vector 69 : Undefined
 27483  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27484                           
 27485                           ; Vector 70 : TMR5
 27486  000094  5F92               	dw	_TMR5_ISR shr (0+2)
 27487                           
 27488                           ; Vector 71 : TMR5G
 27489  000096  62F7               	dw	_Default_ISR shr (0+2)
 27490                           
 27491                           ; Vector 72 : TMR6
 27492  000098  6298               	dw	_TMR6_ISR shr (0+2)
 27493                           
 27494                           ; Vector 73 : CCP3
 27495  00009A  62F7               	dw	_Default_ISR shr (0+2)
 27496                           
 27497                           ; Vector 74 : CWG3
 27498  00009C  62F7               	dw	_Default_ISR shr (0+2)
 27499                           
 27500                           ; Vector 75 : CLC3
 27501  00009E  62F7               	dw	_Default_ISR shr (0+2)
 27502                           
 27503                           ; Vector 76 : Undefined
 27504  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27505                           
 27506                           ; Vector 77 : Undefined
 27507  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27508                           
 27509                           ; Vector 78 : Undefined
 27510  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27511                           
 27512                           ; Vector 79 : Undefined
 27513  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27514                           
 27515                           ; Vector 80 : CCP4
 27516  0000A8  62F7               	dw	_Default_ISR shr (0+2)
 27517                           
 27518                           ; Vector 81 : CLC4
 27519  0000AA  62F7               	dw	_Default_ISR shr (0+2)
 27520  0000AC                     ivt0x8_undefint:
 27521                           	opt callstack 0
 27522  0000AC  00FF               	reset	
 27523                           
 27524                           	psect	text150
 27525  000000                     __ptext150:
 27526                           	opt callstack 0
 27527                           
 27528                           	psect	rparam
 27529  0000                     
 27530                           	psect	temp
 27531  000032                     btemp:
 27532                           	opt callstack 0
 27533  000032                     	ds	32
 27534  0000                     wtemp0	set	btemp
 27535  0000                     wtemp1	set	btemp+2
 27536  0000                     wtemp2	set	btemp+4
 27537  0000                     wtemp3	set	btemp+6
 27538  0000                     wtemp4	set	btemp+8
 27539  0000                     wtemp5	set	btemp+10
 27540  0000                     wtemp8	set	btemp+1
 27541  0000                     ttemp0	set	btemp
 27542  0000                     ttemp1	set	btemp+3
 27543  0000                     ttemp2	set	btemp+6
 27544  0000                     ttemp3	set	btemp+9
 27545  0000                     ttemp5	set	btemp+1
 27546  0000                     ttemp6	set	btemp+4
 27547  0000                     ttemp7	set	btemp+8
 27548  0000                     ltemp0	set	btemp
 27549  0000                     ltemp1	set	btemp+4
 27550  0000                     ltemp2	set	btemp+8
 27551  0000                     lltemp0	set	btemp
 27552  0000                     lltemp1	set	btemp+8
 27553  0000                     lltemp2	set	btemp+16
 27554  0000                     lltemp3	set	btemp+24
 27555                           tosu	equ	0x3FFF
 27556                           tosh	equ	0x3FFE
 27557                           tosl	equ	0x3FFD
 27558                           stkptr	equ	0x3FFC
 27559                           pclatu	equ	0x3FFB
 27560                           pclath	equ	0x3FFA
 27561                           pcl	equ	0x3FF9
 27562                           tblptru	equ	0x3FF8
 27563                           tblptrh	equ	0x3FF7
 27564                           tblptrl	equ	0x3FF6
 27565                           tablat	equ	0x3FF5
 27566                           prodh	equ	0x3FF4
 27567                           prodl	equ	0x3FF3
 27568                           indf0	equ	0x3FEF
 27569                           postinc0	equ	0x3FEE
 27570                           postdec0	equ	0x3FED
 27571                           preinc0	equ	0x3FEC
 27572                           plusw0	equ	0x3FEB
 27573                           fsr0h	equ	0x3FEA
 27574                           fsr0l	equ	0x3FE9
 27575                           wreg	equ	0x3FE8
 27576                           indf1	equ	0x3FE7
 27577                           postinc1	equ	0x3FE6
 27578                           postdec1	equ	0x3FE5
 27579                           preinc1	equ	0x3FE4
 27580                           plusw1	equ	0x3FE3
 27581                           fsr1h	equ	0x3FE2
 27582                           fsr1l	equ	0x3FE1
 27583                           bsr	equ	0x3FE0
 27584                           indf2	equ	0x3FDF
 27585                           postinc2	equ	0x3FDE
 27586                           postdec2	equ	0x3FDD
 27587                           preinc2	equ	0x3FDC
 27588                           plusw2	equ	0x3FDB
 27589                           fsr2h	equ	0x3FDA
 27590                           fsr2l	equ	0x3FD9
 27591                           status	equ	0x3FD8


Data Sizes:
    Strings     412
    Constant    144
    Data        257
    BSS         1438
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     239
    BANK2           256      0     251
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_42(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_53(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_53(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_25(CODE[9]), STR_24(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_25(CODE[9]), STR_24(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_48(CODE[4]), STR_47(CODE[4]), STR_44(CODE[4]), STR_43(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_48(CODE[4]), STR_47(CODE[4]), STR_44(CODE[4]), STR_43(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_41(CODE[3]), STR_40(CODE[3]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), 
		 -> STR_33(CODE[24]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[10]), STR_28(CODE[10]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_20(CODE[19]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[19]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5103_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_41(CODE[3]), STR_40(CODE[3]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), 
		 -> STR_33(CODE[24]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[10]), STR_28(CODE[10]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_41(CODE[3]), STR_40(CODE[3]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), 
		 -> STR_33(CODE[24]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[10]), STR_28(CODE[10]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_41(CODE[3]), STR_40(CODE[3]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), 
		 -> STR_33(CODE[24]), STR_32(CODE[15]), STR_31(CODE[15]), STR_30(CODE[15]), 
		 -> STR_29(CODE[10]), STR_28(CODE[10]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_25(CODE[9]), STR_24(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_25(CODE[9]), STR_24(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_25(CODE[9]), 
		 -> STR_24(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4022tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_25(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_24(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  304915
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                        _hid_display
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   28176
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  168252
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83861
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   27123
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56826
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56562
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   28145
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28324
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26898
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26769
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26437
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6AD      58        0.0%
DATA                 0      0     6AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec  1 00:39:01 2019

                     _SPI1_Exchange8bit 8976                __end_of_set_display_info 89D0  
                                     _C 0100                                       _D 0500  
                                     _H 00EF                                       _P 00BD  
                                     _R 00C7                                       _S 0060  
                                     _T FDD3                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 871A            __end_of_start_switch_handler 8976  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 8BCA                             __CFG_LVP$ON 000000  
                                   l171 8AFE                                     l701 852E  
                                   l581 8502                                     l835 8984  
                                   _GIE 01FE97                                     _abs 8044  
                                   _pad 6AEE                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 8A92                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8934                      _UART1_Transmit_ISR 84DC  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8912  
                          __CFG_ZCD$OFF 000000                                    l2003 424C  
                                  l1028 8262                                    l1250 2DAC  
                                  l1500 8332                                    l1260 2F62  
                                  l2053 1D78                                    l1345 7EAE  
                                  l1258 2F5C                                    l2341 6410  
                                  l1703 607A                                    l1561 82FE  
                                  l1481 73F0                                    l2337 7288  
                                  l1618 89CC                                    l1570 5988  
                                  l2348 64E4                                    l1900 123A  
                                  l1485 770A                                    l2615 2D5E  
                                  l2375 6382                                    l1578 6D0C  
                                  l1666 3D82                                    l2627 2BEE  
                                  l1844 6B4A                                    l2660 38D2  
                                  l1782 7830                    _ADCC_StartConversion 8B18  
                                  l1791 6F18                                    l1864 3E66  
                                  l1944 0B1A                                    l2736 5CF2  
                                  l1929 066A                                    l2923 79BA  
                                  l2908 5EBA                                    l7005 249C  
                                  l6301 2658                                    l2862 69CC  
                                  l1982 4FC8                                    l7023 2550  
                                  l7015 250C                                    l6303 2688  
                                  l2767 8084                                    l2759 6210  
                                  l2696 25A2                                    l2936 7936  
                                  l7025 256A                                    l7009 24E2  
                                  l6321 2732                                    l7201 631A  
                                  l6411 2A6E                                    l6315 26F2  
                                  l7051 6528                                    l7203 6330  
                                  l6405 2A52                                    l6333 279A  
                                  l6325 2748                                    l6309 26C0  
                                  l7221 7FEC                                    l7045 6512  
                                  l7117 6AD4                                    l7109 6AA0  
                                  l7133 7286                                    l7125 7210  
                                  l7141 63CE                                    l2798 5686  
                                  l6407 2A64                                    l6415 2AA0  
                                  l6327 2778                                    l7071 65EE  
                                  l7151 64AC                                    l7057 6548  
                                  l7129 7252                                    l6451 2C2E  
                                  l6427 2B78                                    l6363 28D8  
                                  l6291 2602                                    l7091 69F6  
                                  l7147 645E                                    l6603 47FE  
                                  l6461 2C56                                    l6445 2C10  
                                  l6437 2BD2                                    l6429 2B9E  
                                  l6373 294A                                    l6533 8074  
                                  l6613 4904                                    l6605 484E  
                                  l8205 5C1E                                    l6447 2C22  
                                  l6383 2986                                    l7079 6622  
                                  l7095 6A08                                    l7159 64E2  
                                  l7167 801A                                    l6551 61B2  
                                  l6631 7926                                    l8207 5C3C  
                                  l6465 2C5C                                    l6377 296A  
                                  l6297 2642                                    l8057 88C2  
                                  l7193 62EE                                    l7177 626C  
                                  l6609 4896                                    l8137 833C  
                                  l8217 5C70                                    l8209 5C52  
                                  l6491 2CFE                                    l6379 297C  
                                  l6387 29B6                                    l6707 5822  
                                  l7099 6A20                                    l7195 630A  
                                  l6547 61AE                                    l8227 5CD2  
                                  l6901 1EA6                                    l6493 2D0E  
                                  l6477 2CBA                                    l6653 5252  
                                  l6813 370C                                    l6805 36DA  
                                  l6733 33F8                                    l6557 6208  
                                  l6911 1F1C                                    l6487 2CE6  
                                  l6671 536A                                    l6647 51FE  
                                  l6823 374E                                    l6807 36DE  
                                  l6727 33B8                                    l6575 79AA  
                                  l8175 8614                                    l9161 79F8  
                                  l6833 3798                                    l6753 34D6  
                                  l6737 340E                                    l8193 5BAE  
                                  l8185 5B42                                    l9057 7A48  
                                  l9073 6E26                                    l6907 1EE6  
                                  l6499 2D3E                                    l6659 5298  
                                  l6691 56EE                                    l6819 3728  
                                  l6771 3594                                    l6747 3496  
                                  l6739 343E                                    l8195 5BBC  
                                  l6909 1EEC                                    l6853 384E  
                                  l6837 379E                                    l6765 355A  
                                  l6757 34EC                                    l6589 46E0  
                                  l8197 5BD2                                    l9085 6E82  
                                  l9167 7A08                                    l6919 1F3E  
                                  l7751 54F8                                    l7735 5436  
                                  l9503 75F8                                    l6847 3812  
                                  l6759 351C                                    l8199 5BF0  
                                  l9095 6EF2                                    l7761 55DA  
                                  l7753 5510                                    l7745 54CC  
                                  l7737 5458                                    l9513 6B1A  
                                  l6865 38A6                                    l8713 390E  
                                  l8811 6666                                    l6971 2396  
                                  l6891 1E1E                                    l6883 1DD8  
                                  l7771 5676                                    l7755 5534  
                                  l9507 7636                                    l9523 6B90  
                                  l6699 5776                                    l9611 41BE  
                                  l6867 38B6                                    l6859 387E  
                                  l6779 35AE                                    l8723 3A2C  
                                  l8707 38DE                                    l8813 666C  
                                  l8821 66AE                                    l6981 23D8  
                                  l6893 1E4E                                    l7757 5572  
                                  l9517 6B42                                    l9541 787E  
                                  l6797 3674                                    l6789 363E  
                                  l9533 7142                                    l8815 667A  
                                  l8807 6650                                    l6991 2422  
                                  l8671 8314                                    l9527 6BDA  
                                  l9519 6B54                                    l9607 4182  
                                  l6799 3686                                    l9711 0554  
                                  l8735 3B38                                    l8727 3B06  
                                  l8593 8162                                    l8809 6660  
                                  l6977 23B2                                    l6889 1E18  
                                  l9481 68E2                                    l9625 00AC  
                                  l8753 3D50                                    l8761 3D62  
                                  l8907 84FE                                    l8835 674C  
                                  l8827 66DE                                    l8819 6682  
                                  l6995 2428                                    l9539 7852  
                                  l9731 05F6                                    l9723 0594  
                                  l9715 057C                                    l7787 5D84  
                                  l8747 3CB4                                    l8739 3BD4  
                                  l8851 77EA                                    l8597 818C  
                                  l9493 756C                                    l9573 3EA0  
                                  l9565 3E56                                    l9733 0602  
                                  l9717 058E                                    l9637 00F0  
                                  l9645 0146                                    l7789 5DF0  
                                  l9495 758E                                    l9807 0C32  
                                  l9655 01EA                                    l9663 0258  
                                  l8929 852A                                    l8785 5F28  
                                  l8777 5EFC                                    l9577 3EBE  
                                  l9753 06F0                                    l9673 02FC  
                                  l9681 032A                                    l9657 0216  
                                  l8955 824A                                    l9587 40D0  
                                  l9907 119A                                    l9819 0CBA  
                                  l9827 0D24                                    l9835 0D90  
                                  l9843 0EA2                                    l9659 022C  
                                  l8789 5F40                                    l9749 06B8  
                                  l9693 0406                                    l9871 0FF0  
                                  l9855 0F3A                                    l9791 0B12  
                                  l9783 0A48                                    l9759 077A  
                                  l9695 0470                                    l9951 506A  
                                  l9943 4FFE                                    l9927 4F4A  
                                  STR_1 FF81                                    STR_2 FFB2  
                                  l9881 1092                                    l9793 0B34  
                                  l9769 0926                                    l9689 0396  
                                  l9961 5120                                    STR_3 FFE0  
                                  STR_4 FF70                                    l9891 10E2  
                                  l9699 04D2                                    l9947 503A  
                                  STR_5 FF92                                    STR_6 FFB2  
                                  l9869 0FD6                                    l9965 515C  
                                  l9957 50F4                                    STR_7 FFE0  
                                  STR_8 FF5F                                    l9991 42B2  
                                  STR_9 FEDA                                    l9985 4276  
                                  l9979 423C                                    l9999 4312  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  u5010 8412                                    _T2PR 003FAB  
                                  u5020 8414                                    u5200 4678  
                                  u5130 6200                                    u5210 46C4  
                                  u6020 2476                                    u5140 6202  
                                  u5300 81DA                                    u5125 61E2  
                                  u5205 466E                                    u6030 24B0  
                                  u5070 8058                                    u6110 660E  
                                  u5310 81DC                                    u6040 24F6  
                                  u5400 524E                                    u5080 6132  
                                  u5320 78E4                                    u6025 2466  
                                  u5250 47A4                                    u5170 7968  
                                  u5330 78E6                                    _T6PR 003F93  
                                  u5411 5258                                    u5235 46FE  
                                  u5420 5292                                    u5500 56E8  
                                  u6220 7282                                    u6300 6260  
                                  u5236 4704                                    u5180 796A  
                                  _PMD0 0039C0                                    u5085 6128  
                                  u5237 4712                                    _PMD1 0039C1  
                                  u5350 8472                                    u5430 52C4  
                                  u6310 629A                                    u5270 487C  
                                  _PMD2 0039C2                                    u5255 479A  
                                  _PMD3 0039C3                                    u4800 2A96  
                                  u5360 8474                                    u6400 7FE8  
                                  u5520 573E                                    u6160 6A4C  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u8010 7C06                                    u4730 29AE  
                                  u5450 53A2                                    u5530 5770  
                                  u6090 6574                                    u4570 8442  
                                  _PMD6 0039C6                                    u6315 6290  
                                  u5275 4872                                    _PMD7 0039C7  
                                  u4900 2C4E                                    u4740 29CE  
                                  u4708 2920                                    u5380 51F8  
                                  u5540 57A2                                    u6180 6AC0  
                                  u4580 8444                                    u4805 2A86  
                                  u5470 53F4                                    u4735 299E  
                                  u4840 2BC0                                    u4680 28FE  
                                  u7400 54C8                                    u5560 585A  
                                  u5800 37EC                                    u5720 3706  
                                  u6280 8016                                    u6360 6338  
                                  u4690 291E                                    u5810 3826  
                                  u6290 624C                                    u8035 7C3A  
                                  u4691 2918                                    u8036 7C3C  
                                  u8028 7C08                                    u4940 2CAA  
                                  u7420 5620                                    u5580 58AC  
                                  u9100 3DBA                                    u5820 3862  
                                  u6380 6362                                    u7500 5E7C  
                                  u8204 3B20                                    u5805 37DC  
                                  u8205 3B1A                                    u5910 1F2C  
                                  u6390 7FC8                                    u7430 5622  
                                  u6295 6242                                    u4880 2C34  
                                  u9200 413E                                    u9120 3E2A  
                                  u5760 3790                                    u8224 3BEE  
                                  u8144 38F8                                    u8400 77D6  
                                  u4945 2C9A                                    u8225 3BE8  
                                  u8145 38F2                                    u4970 2CCA  
                                  u9210 4142                                    u9050 71BC  
                                  u8250 3C18                                    u8260 5EDA  
                                  u9140 3E3C                                    u9300 0194  
                                  u8244 3C10                                    u8164 3928  
                                  u5925 20C0                                    u8245 3C0A  
                                  u8165 3922                                    u9230 4158  
                                  u9310 0196                                    u8430 781C  
                                  u5935 2188                                    u9160 3E8C  
                                  u8184 394A                                    u5945 2350  
                                  u9057 71AE                                    u8185 3944  
                                  u9170 40E4                                    u9090 3DB8  
                                  u8418 77D8                                    u5980 241A  
                                  u9420 0562                                    u9340 02A6  
                                  u9181 4114                                    u9190 412A  
                                  u9350 02A8                                    u9270 00DA  
                                  u9191 4128                                    u8448 781E  
                                  u9450 05C6                                    u9390 050E  
                                  u9720 10B8                                    u9560 0A18  
                                  u9490 0648                                    u7970 5C66  
                                  _PLLR 01CEE0                                    u9740 116E  
                                  u9660 0EE4                                    u9820 5060  
                                  u7885 8216                                    u8950 68D6  
                                  u9750 1170                                    u9830 50A6  
                                  u9910 430A                                    u9920 435E  
                                  u8970 6952                                    u9930 4360  
                                  u8980 75BC                                    u9860 5182  
                                  u9837 5098                                    u9950 43BE  
                                  u9960 43C0                                    u9880 4222  
                                  u8987 75AE                                    u9980 448A  
                                  u9990 44AA                                    u9985 446C  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 858A                           __CFG_FCMEN$ON 000000  
                                  _dbuf 017C                                    _atoi 541C  
                                  _ctoa 7834                                    _main 2D68  
                                  _dtoa 3D88                                    _nanf 7D26  
                                  _seed 01CC                                    _prec 001D  
                                  _nout 0019                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 4EDE                                    btemp 0032  
                                  _xtoa 4208                  __end_of_check_adc_scan 8BC2  
                         ___fpclassifyf 6084                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0023               __end_of_SPI1_Exchange8bit 8994  
             __size_of_clear_hid_pflags 0024                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 880C                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0052                        __end_of_INT0_ISR 8B66  
                      __end_of_INT1_ISR 82A6          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 73F8           __end_of_OSCILLATOR_Initialize 8B04  
                                 l10015 4408                                   l10023 448E  
                                 l10103 165C                                   l10113 16F2  
                                 l10133 18E8                                   l10125 1830  
                                 l10061 1326                                   l10039 4578  
                                 l10063 1360                                   l10231 4AEE  
                                 l10303 74F8                                   l10137 191C  
                                 l10065 1376                                   l10225 4A84  
                                 l10083 14A8                                   l10251 7422  
                                 l10219 49C6                                   l10181 1CA6  
                                 l10157 1A7C                                   l10085 14E2  
                                 l10253 7462                                   l10191 1D04  
                                 l10167 1B2A                                   l10087 14F8  
                                 l10239 4B9C                                   l10337 6C24  
                                 l10187 1D00                                   l10603 32D2  
                                 l10611 331C                                   l10523 2DB4  
                                 l10197 1D24                                   l10621 3350  
                                 l10605 32FC                                   l10525 2DC6  
                                 l10517 2D8E                                   l10455 5958  
                                 l10519 2D96                                   l10485 5AEA  
                                 l10469 5A86                                   l10581 2FC8  
                                 l10567 2F66                                   l10593 2FFA  
                                 l10569 2F94                                   l10595 30BC  
                                 l10597 31C6                                   l10589 2FEC  
                                 PRLOCK 0039EF                                   l10599 3258  
                       __end_of___aodiv 541C                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 2D68  
                                 _ADCLK 003EFF                         __end_of___aomod 58D0  
                                 _ADPCH 003EF1                         __end_of___fldiv 38DC  
                                 _ADREF 003EFD                         __end_of___awdiv 663C  
                       __end_of___flneg 8044                                   STR_10 FF13  
                                 STR_11 FF00                                   STR_20 FEC7  
                                 STR_12 FF4C                                   STR_21 FFFC  
                                 STR_13 FF26                                   STR_22 FFF9  
                                 STR_30 FFA3                                   STR_14 FF39  
                                 STR_31 FFA3                                   STR_15 FEED  
                                 STR_32 FFA3                                   STR_24 FFC1  
                                 STR_16 FEB4                                   STR_17 FEB4  
                                 STR_25 FFD7                                   STR_33 FE63  
                         __CFG_WDTE$OFF 000000                                   STR_42 FE8D  
                                 STR_18 FEC7                                   STR_26 FE8E  
                                 STR_19 FEC7                                   STR_27 FE8E  
                                 STR_51 FFF6                                   STR_43 FFE6  
                                 STR_35 FEA1                                   STR_44 FFEE  
                                 STR_28 FFCD                                   STR_36 FE7B  
                       __end_of___awmod 6AEE                                   STR_29 FFCD  
                                 STR_53 FFF6                                   STR_47 FFEA  
                                 STR_48 FFF2                                   _ADRPT 003EEC  
                       __end_of___flmul 25AC                         __end_of___flsub 80D0  
                       __end_of___fltol 638C                                   u10001 44DA  
                                 u10010 44F0                                   u10011 44EE  
                                 u10020 4504                                   u10100 13E6  
                                 u10030 4508                                   u10200 1746  
                                 u10130 1540                                   u10140 1542  
                                 u10230 19D6                                   u10150 1568  
                                 u10240 19D8                                   u10080 13BE  
                                 u10090 13C0                                   u10340 4C10  
                                 u10280 1B7E                                   u10370 74D8  
                                 u10460 5AD6                                   u10470 5AD8  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8BDC                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 87E4  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 7EA4  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 8A7A  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
              __size_of_calc_model_data 02C4                                   _fputc 68B2  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 81E6  
                                 _fputs 75E8                         __end_of_isdigit 847E  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 8386                                   _width 001B  
                                 _putch 8A44                         __end_of_islower 841E  
                       __end_of_isspace 7FFC                _INT1_SetInterruptHandler 871A  
                       __end_of_isupper 844E                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 86CA  
           _UART1_SetRxInterruptHandler 86A2                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 6E1A                         __end_of_tolower 79C4  
                       __end_of_strncmp 5EC4                         __end_of_toupper 7940  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8832                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 8116                   __end_of_ringBufS_init 8602  
                       __initialization 6F1C                       _UART2_rx_vect_isr 885C  
                          __end_of_atoi 5690                            __end_of_ctoa 78BC  
                          __end_of_main 3362                            __end_of_dtoa 4208  
                          __end_of_nanf 7D88                            __end_of_stoa 519C  
                          __end_of_xtoa 45C2                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 8AAA  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 86F2  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0057  
             __end_of_UART1_tx_vect_isr 880A                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 8534                         _PWM8_Initialize 8AD8  
                      _UART1_Initialize 7CC2                       _UART2_tx_vect_isr 8834  
                    _UART2_Transmit_ISR 8508                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 7C5E                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 81E6                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0052  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 7E96                    _start_switch_handler 8956  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 8B48                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u807_20 87C2  
                                u398_48 8942                                  u807_26 87C4  
                                u832_20 6676                                  u832_21 6670  
                                u836_24 6742                                  u836_25 673E  
                                u838_20 6768                                  u829_28 6656  
                                u838_26 676A                                  u846_28 8920  
                                u854_48 88FE                                  u872_44 7A28  
                                u872_45 7A22                                  u857_28 88DA  
                  __size_of_hid_display 0102                        __end_of___xxtofl 5CFC  
 __end_of_ADCC_DischargeSampleCapacitor 8BAA  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8BA2                __end_of_send_lcd_cmd_dma 7FAA  
                   ??_UART2_tx_vect_isr 0057               __end_of_UART2_rx_vect_isr 8882  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 8B76  
                      _UART2_Initialize 7DEA                                  _WaitMs 831A  
                       _conv_raw_result 38DC                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 638C  
                                ___fleq 71CE                       _ADCC_ThresholdISR 7B90  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7680  
                                _efgtoa 0000                                  _floorf 45C2  
                    ?_ADCC_ThresholdISR 0052                                  _memset 492E  
                  __size_of_help_button 0038                                  clear_0 6F8A  
                                clear_1 6F9E                                  clear_2 6FB0  
                                clear_3 6FBC                                  clear_4 6FC8  
                                clear_5 6FD4                                  clear_6 6FE0  
                                clear_7 6FEC                                  clear_8 6FF8  
                                _printf 7D88                      _eaDogM_WriteString 74A0  
                                _strcpy 70FA                               ?_ADCC_ISR 0052  
                                _strlen 7546                      __size_of_TimerDone 0024  
                       _ADCC_Initialize 7B26                          _PMD_Initialize 8B04  
             __end_of_UART2_tx_vect_isr 885A                                  lltemp0 0032  
                                lltemp1 003A                                  lltemp2 0042  
                                lltemp3 004A                     ??_ADCC_ThresholdISR 0052  
                __end_of_start_adc_scan 7CC2                            __mediumconst FDD2  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 7EFE                        __end_of_vfprintf 74A0  
                            _StartTimer 82A6           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 815C                       _SYSTEM_Initialize 80D0  
                            __accesstop 0060                 __end_of__initialization 700A  
                             ?_INT0_ISR 0052                               ?_INT1_ISR 0052  
                  __end_of_display_help 8BBA                    __end_of_display_info 8BB2  
             __end_of_CLKREF_Initialize 8B80                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0026                         _TMR5_WriteTimer 8228  
                 _set_temp_display_help 8B2A                        _clear_hid_pflags 8882  
             __end_of_ADCC_ThresholdISR 7BF8                  __end_of_ringBufS_flush 7712  
                        __pcstackCOMRAM 0052                              ___inthi_sp 1000  
                            ___intlo_sp 1800                            __pidataBANK0 847E  
                          __pidataBANK1 8AAA                            __pidataBANK2 7292  
                             ?_TMR5_ISR 0052                               ?_TMR6_ISR 0052  
                        ivt0x8_undefint 00AC                           __end_of_fputc 69D6  
                         __end_of_fputs 7680                           __end_of_srand 83BA  
                 __end_of_TMR5_CallBack 88EE                           __end_of_putch 8A5E  
               __end_of_PWM8_Initialize 8AEE                 __end_of_TMR6_Initialize 855E  
                     _adc_int_t_handler 79C4                  __end_of_PMD_Initialize 8B18  
                            ??_ADCC_ISR 0052                   __end_of_TMR6_CallBack 8912  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0026  
                         _DMA1_DMAA_ISR 8B8C                          _clear_adc_scan 8BCA  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0010               __end_of_SYSTEM_Initialize 8116  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 0100  
                            __pbssBANK2 02BB                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                            _check_help 58D0                 __end_of_conv_raw_result 3D88  
                 _INT0_InterruptHandler 0016                              ??_INT0_ISR 0052  
                            ??_INT1_ISR 00F6                       __end_of_TimerDone 88CA  
                      _DMA1_DMADCNT_ISR 8B80              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 8A28                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 86F2                 __end_of_ADCC_Initialize 7B90  
                            ??_TMR5_ISR 01EB               __end_of_adc_int_t_handler 7A42  
                            ??_TMR6_ISR 0057                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8792  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 876A  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 89D0                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 8BD0  
                        ?_DMA1_DMAA_ISR 0052                        _DMA1_DMASCNT_ISR 8B68  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001C  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0052              __size_of_UART2_tx_vect_isr 0026  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 8602  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 8268  
               __size_of_switch_handler 0148       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 8A7A                                 __Lparam 0000  
              __end_of_UART1_Initialize 7D26                       __end_of_hid_input 7834  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 519C  
                               ___fladd 25AC                                 ___aomod 5690  
                               ___fldiv 3362                                 ___awdiv 64EE  
                               ___flneg 7FFC                                 ___awmod 69D6  
                               ___flmul 1D82                                 ___flsub 808A  
                               ___fltol 621A               __end_of_UART1_Receive_ISR 89EE  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 70FA                                 __pcinit 6F1C  
              __end_of_mode_lamp_bright 8B56                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 8B3A  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 2D68                                 __ptext1 8956  
                               __ptext2 7C5E                                 __ptext3 8B18  
                               __ptext4 8BA2                                 __ptext5 8386  
                               __ptext6 7010                                 __ptext7 858A  
                               __ptext8 85B2                                 __ptext9 8976  
                     _UART2_Receive_ISR 89EE                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8AEE  
                          __size_of_abs 0046                                 us548999 5406  
                          __size_of_pad 0114                                 _isalpha 81A2  
                               us559999 58BE                                 _isdigit 844E  
                               us908999 3DA2                                 _mode_sw 0025  
                               us990999 4288                                 us977999 4EF0  
                     __end_of_lp_filter 6084                                 _islower 83EE  
                               _isspace 7FAA                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 7E48  
                               _isupper 841E              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 6D10                                 _tolower 7940  
                 __size_of_display_help 0008                                 _utctime 00B5  
                 __size_of_display_info 0008                                 _strncmp 5CFC  
                               _toupper 78BC                    end_of_initialization 700A  
             __size_of_convert_adc_data 007A     __end_of_UART1_SetTxInterruptHandler 86A2  
           _UART1_SetTxInterruptHandler 867A     __end_of_UART2_SetRxInterruptHandler 867A  
           _UART2_SetRxInterruptHandler 8652                       __end_of_set_vterm 8A44  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8BDC               __end_of_UART2_Receive_ISR 8A0C  
                        wdtdelay@dcount 00B9                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0058                   _INT1_InterruptHandler 0013  
                             _PORTBbits 003FCB                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 86CA                            _display_help 8BB2  
                 _TMR5_InterruptHandler 00C1                            _display_info 8BAA  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 88A6  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 87BA  
           _ADCC_SetADIInterruptHandler 8792                              _update_lcd 6C02  
                       _calc_model_data 4C1A                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 7ABC  
                       _SPI1_Initialize 8AC2                   __end_of_get_vterm_ptr 84DC  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 8350            __end_of_INTERRUPT_Initialize 7C5E  
                            _vterm_dump 6784                          __end_of___flge 64EE  
                        __end_of___fleq 7292    __end_of_INT0_DefaultInterruptHandler 8BE6  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8BE4  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 7EFE  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005C  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0228  
                        __end_of_floorf 492E             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 00AD                          __end_of_memset 4C1A  
                        __end_of_printf 7DEA                __end_of_DMA1_DMADCNT_ISR 8B8A  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 8956  
                        __end_of_strcpy 71CE                          __end_of_strlen 75E8  
                   start_initialization 6F1C    __end_of_TMR5_DefaultInterruptHandler 87E2  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 87BA  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 808A  
                 __end_of_INT1_CallBack 8934               __size_of_set_display_info 001E  
                           __end_of_pad 6C02                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 85DA                          _switch_handler 663C  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0600                   __end_of___fpclassifyf 621A  
                         _uart2RxBuffer 0700                           _uart1TxBuffer 02BB  
              __end_of_DMA1_DMASCNT_ISR 8B76                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR 8B98                     __end_of_hid_display 6F1C  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 88A6  
                         _ringBufS_init 85DA                             __pdataBANK0 00C7  
                           __pdataBANK1 01D4                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 83EE                 __end_of_calc_model_data 4EDE  
                   __end_of_help_button 831A         __end_of_eaDogM_WriteStringAtPos 8386  
               __end_of_DMA1_Initialize 7B26                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 876A                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01EB                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 6784                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8AD8                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FE63  
                      _convert_adc_data 7A42               __size_of_ringBufS_put_dma 00AA  
                          _init_display 7010                  __end_of_DMA1_DMAOR_ISR 8BA2  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 7F58  
                _PIN_MANAGER_Initialize 7712                    __end_of_wait_lcd_set 8BD6  
                         __pmediumconst FDD2                               __ptext100 86F2  
                             __ptext101 8A92                               __ptext110 871A  
                             __ptext102 8AC2                               __ptext111 8742  
                             __ptext103 8AD8                               __ptext120 8BE2  
                             __ptext112 7EFE                               __ptext104 8B04  
                             __ptext121 663C                               __ptext113 7ABC  
                             __ptext105 7712                               __ptext130 8560  
                             __ptext122 7E48                               __ptext114 8B76  
                             __ptext106 8AEE                               __ptext131 79C4  
                             __ptext123 8228                               __ptext115 7B26  
                             __ptext107 7BF8                               __ptext140 8508  
                             __ptext132 8BE6                               __ptext124 88CA  
                             __ptext116 876A                               __ptext108 8BC2  
                             __ptext141 885C                               __ptext133 8BE8  
                             __ptext125 87BA                               __ptext117 8792  
                             __ptext109 83BA                               __ptext150 0000  
                             __ptext142 89EE                               __ptext134 7B90  
                             __ptext126 8B58                               __ptext118 8268  
                             __ptext143 8A60                               __ptext135 87E4  
                             __ptext127 8934                               __ptext119 8912  
                             __ptext144 88EE                               __ptext136 84DC  
                             __ptext128 8BE4                               __ptext145 815C  
                             __ptext137 880C                               __ptext129 8BDC  
                             __ptext146 8B68                               __ptext138 89D0  
                             __ptext147 8B80                               __ptext139 8834  
                             __ptext148 8B8C                               __ptext149 8B98  
                             _hid_input 77A4                      __end_of_StartTimer 82E2  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 8560                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 5EC4  
                           _hid_display 6E1A                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 7BF8  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0052                                _INT0_ISR 8B58  
                              _INT1_ISR 8268                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0089                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0394  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              i2u429_48 8576                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u881_48 8846                                i2u883_48 886E  
                              i2u875_48 7BC4                                i2u875_49 7BD8  
              __size_of_TMR5_Initialize 0046                                i2u877_48 87F6  
                              i2u879_48 881E                               _set_vterm 8A28  
                   __size_of_update_lcd 010E                             _help_button 82E2  
            __end_of_UART1_Transmit_ISR 8508                                _TMR5_ISR 7E48  
                              _TMR6_ISR 8A60                               _port_data 01DB  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                         _TMR5_CallBack 88CA                              _ADCON0bits 003EF8  
                    __end_of_check_help 5AF8                               _start_lcd 8BD6  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 88EE                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                        _set_display_info 89B2  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 6F30  
                             copy_data1 6F52                               copy_data2 6F74  
              _INT0_SetInterruptHandler 8742                     __size_of_vterm_dump 012E  
                _uart1TxBufferRemaining 002F     __end_of_UART2_SetTxInterruptHandler 8652  
           _UART2_SetTxInterruptHandler 862A                            _uart1RxCount 002C  
                          _uart2RxCount 0026                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 8A0C                            _send_lcd_cmd 85B2  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 8BE8  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 862A  
                 __end_of_DMA1_DMAA_ISR 8B96                      ___fpclassifyf@F463 00B1  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 5AF8                       ?_DMA1_DMADCNT_ISR 0052  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 8B48  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0058  
                              __ptext10 85DA                                __ptext11 6E1A  
                              __ptext20 8882                                __ptext12 77A4  
                              __ptext21 8BCA                                __ptext13 8602  
                              __ptext30 8A0C                                __ptext22 58D0  
                              __ptext14 8B3A                                __ptext31 7EA4  
                              __ptext23 6784                                __ptext15 7A42  
                              __ptext40 4208                                __ptext32 74A0  
                              __ptext24 6D10                                __ptext16 38DC  
                              __ptext41 78BC                                __ptext33 8BD0  
                              __ptext25 84AE                                __ptext17 7D26  
                              __ptext50 45C2                                __ptext42 83EE  
                              __ptext34 8BD6                                __ptext26 831A  
                              __ptext18 8994                                __ptext51 6084  
                              __ptext43 81A2                                __ptext35 7680  
                              __ptext27 6C02                                __ptext19 5AF8  
                              __ptext60 8044                                __ptext52 621A  
                              __ptext44 5CFC                                __ptext36 492E  
                              __ptext28 8350                                __ptext61 5690  
                              __ptext53 7FFC                                __ptext45 4EDE  
                              __ptext37 7D88                                __ptext29 7F58  
                              __ptext70 541C                                __ptext62 519C  
                              __ptext54 638C                                __ptext46 0000  
                              __ptext38 73F8                                __ptext71 7FAA  
                              __ptext63 7834                                __ptext55 71CE  
                              __ptext47 7940                                __ptext39 1244  
                              __ptext80 88A6                                __ptext72 844E  
                              __ptext64 6AEE                                __ptext56 3362  
                              __ptext48 841E                                __ptext81 82A6  
                              __ptext73 8A28                                __ptext65 7546  
                              __ptext57 69D6                                __ptext49 70FA  
                              __ptext90 80D0                                __ptext82 8BAA  
                              __ptext74 8B2A                                __ptext66 75E8  
                              __ptext58 64EE                                __ptext91 7DEA  
                              __ptext83 8BB2                                __ptext75 89B2  
                              __ptext67 68B2                                __ptext59 3D88  
                              __ptext92 862A                                __ptext84 8BBA  
                              __ptext76 8A7A                                __ptext68 8A44  
                              __ptext93 8652                                __ptext85 4C1A  
                              __ptext77 8B48                                __ptext69 734E  
                              __ptext94 7CC2                                __ptext86 5EC4  
                              __ptext78 81E6                                __ptext95 867A  
                              __ptext87 808A                                __ptext79 82E2  
                              __ptext96 86A2                                __ptext88 25AC  
                              __ptext97 8534                                __ptext89 1D82  
                              __ptext98 86CA                                __ptext99 8116  
                      __size_of_isupper 0030                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                        __size_of_strncmp 01C8  
                      __size_of_toupper 0084                        _ringBufS_put_dma 734E  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 05FA                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0052  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0004                               stoa@F1166 01D4  
                    ??_DMA1_DMASCNT_ISR 0058            __end_of_ADCC_StartConversion 8B2A  
                              _spi_link 00A1                                _wdtdelay 7EA4  
            __end_of_UART2_Transmit_ISR 8534                                _vfprintf 73F8  
              __end_of_convert_adc_data 7ABC              __end_of_PWM8_LoadDutyValue 8228  
  __end_of_INT1_DefaultInterruptHandler 8BE4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 8BE2                           ??_Default_ISR 0052  
                           _uart1RxHead 002E                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0031                             _uart2RxHead 0028  
                           _uart1RxTail 002D                          _get_raw_result 8994  
                           _uart2TxHead 002B                             _uart1TxTail 0030  
                           _uart2RxTail 0027                             _uart2TxTail 002A  
                          _wait_lcd_set 8BD0                      _EXT_INT_Initialize 83BA  
  __end_of_TMR6_DefaultInterruptHandler 81A2   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 815C    __end_of_ADCC_DefaultInterruptHandler 8BE8  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 8BE6  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 858A          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 8B3A                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 7546                   __end_of_mode_lamp_dim 8A92  
               __end_of_adc_int_handler 8BEA                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 6D10  
                _uart2TxBufferRemaining 0029                          _FVR_Initialize 8BC2  
                __end_of_get_raw_result 89B2                        _send_lcd_cmd_dma 7F58  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0021  
      __end_of_INT1_SetInterruptHandler 8742               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0058                _UART1_TxInterruptHandler 0007  
             __end_of_send_lcd_cmd_long 85B2                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 8BE2          __end_of_PIN_MANAGER_Initialize 77A4  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 68B2  
               _eaDogM_WriteStringAtPos 8350                           _get_vterm_ptr 84AE  
                        _check_adc_scan 8BBA               __size_of_UART2_Initialize 005E  
