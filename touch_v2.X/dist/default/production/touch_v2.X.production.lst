

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jan  5 18:43:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=4,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=4,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text157,global,reloc=4,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=4,class=CODE,delta=1
   182                           	psect	text161,global,reloc=4,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=4,class=CODE,delta=1
   187                           	psect	text166,global,reloc=4,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=4,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=4,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=4,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=4,class=CODE,delta=1
   197                           	psect	text176,global,reloc=4,class=CODE,delta=1
   198                           	psect	text177,global,reloc=4,class=CODE,delta=1
   199                           	psect	text178,global,reloc=4,class=CODE,delta=1
   200                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   201                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   202                           	psect	text179,global,reloc=4,class=CODE,delta=1
   203                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   204                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   205  0000                     
   206                           ; Version 2.10
   207                           ; Generated 31/07/2019 GMT
   208                           ; 
   209                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   210                           ; All rights reserved.
   211                           ; 
   212                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   213                           ; 
   214                           ; Redistribution and use in source and binary forms, with or without modification, are
   215                           ; permitted provided that the following conditions are met:
   216                           ; 
   217                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   218                           ;        conditions and the following disclaimer.
   219                           ; 
   220                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   221                           ;        of conditions and the following disclaimer in the documentation and/or other
   222                           ;        materials provided with the distribution.
   223                           ; 
   224                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   225                           ;        software without specific prior written permission.
   226                           ; 
   227                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   228                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   229                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   230                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   231                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   232                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   233                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   234                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   235                           ; 
   236                           ; 
   237                           ; Code-generator required, PIC18F57K42 Definitions
   238                           ; 
   239                           ; SFR Addresses
   240  0000                     
   241 ;;_main$3756	offset	0
   242 ;;_main$3752	offset	2
   243 ;;_esr_temp	offset	4
   244 ;;_i_esr	offset	8
   245 ;;_shape	offset	10
   246 ;;_inp_index	offset	11
   247 ;;_k	offset	12
   248 ;;_j	offset	13
   249 ;;_i	offset	14
   250 ;;_mode	offset	15
   251 ;;_i_ror	offset	16
   252 ;;_s	offset=-2 (param)
   253 ;;_c	offset	0
   254 ;;_shape	offset=-1 (param)
   255 ;;_reset	offset=-2 (param)
   256 ;;_data	offset=-1 (param)
   257 ;;_cmd	offset=-1 (param)
   258 ;;_cmd	offset=-1 (param)
   259 ;;_data	offset=-1 (param)
   260 ;;__this	offset=-2 (param)
   261 ;;_soc	offset	0
   262 ;;_slot	offset	4
   263 ;;_cvoltage	offset=-4 (param)
   264 ;;_h	offset=-1 (param)
   265 ;;_h	offset=-1 (param)
   266 ;;_i	offset=-1 (param)
   267 ;;_fsm	offset=-1 (param)
   268 ;;_channel	offset=-1 (param)
   269 ;;_mode	offset=-1 (param)
   270 ;;_mode	offset=-1 (param)
   271 ;;_cmd	offset=-1 (param)
   272 ;;_i	offset	0
   273 ;;_h	offset=-1 (param)
   274 ;;_flipper	offset=-1 (param)
   275 ;;_f	offset	0
   276 ;;_ap	offset	6
   277 ;;_s	offset=-3 (param)
   278 ;;_fmt	offset=-5 (param)
   279 ;;_line	offset=-1 (param)
   280 ;;_vterm	offset=-2 (param)
   281 ;;_numMilliseconds	offset=-2 (param)
   282 ;;_vterm	offset=-1 (param)
   283 ;;_row	offset	0
   284 ;;_r	offset=-1 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_strPtr	offset=-4 (param)
   287 ;;_strPtr	offset=-1 (param)
   288 ;;_delay	offset=-4 (param)
   289 ;;_strPtr	offset=-1 (param)
   290 ;;_strPtr	offset=-2 (param)
   291 ;;__this	offset=-2 (param)
   292 ;;_clearBuffer	offset=-3 (param)
   293 ;;_s	offset	0
   294 ;;_k	offset	2
   295 ;;_dest	offset=-2 (param)
   296 ;;_c	offset=-4 (param)
   297 ;;_n	offset=-6 (param)
   298 ;;_ap	offset	0
   299 ;;_fmt	offset=-3 (param)
   300 ;;_cfmt	offset	0
   301 ;;_fp	offset=-2 (param)
   302 ;;_fmt	offset=-4 (param)
   303 ;;_ap	offset=-6 (param)
   304 ;;_vfpfcnvrt$5571	offset	0
   305 ;;_vfpfcnvrt$5582	offset	2
   306 ;;_vfpfcnvrt$5570	offset	4
   307 ;;_llu	offset	6
   308 ;;_ll	offset	14
   309 ;;_f	offset	22
   310 ;;_ct	offset	26
   311 ;;_cp	offset	29
   312 ;;_c	offset	31
   313 ;;_fp	offset=-2 (param)
   314 ;;_fmt	offset=-4 (param)
   315 ;;_ap	offset=-6 (param)
   316 ;;_xtoa$5556	offset	0
   317 ;;_xtoa$5555	offset	2
   318 ;;_n	offset	4
   319 ;;_c	offset	12
   320 ;;_i	offset	14
   321 ;;_w	offset	16
   322 ;;_p	offset	18
   323 ;;_fp	offset=-2 (param)
   324 ;;_d	offset=-10 (param)
   325 ;;_x	offset=-11 (param)
   326 ;;_toupper$6362	offset	0
   327 ;;_c	offset=-2 (param)
   328 ;;_c	offset=-2 (param)
   329 ;;_c	offset=-2 (param)
   330 ;;_n	offset	0
   331 ;;_i	offset	8
   332 ;;_w	offset	10
   333 ;;_p	offset	12
   334 ;;_fp	offset=-2 (param)
   335 ;;_d	offset=-10 (param)
   336 ;;_counter	offset	0
   337 ;;_dividend	offset=-8 (param)
   338 ;;_divisor	offset=-16 (param)
   339 ;;_quotient	offset	0
   340 ;;_counter	offset	8
   341 ;;_dividend	offset=-8 (param)
   342 ;;_divisor	offset=-16 (param)
   343 ;;_r	offset	0
   344 ;;_l	offset	2
   345 ;;__l	offset=-2 (param)
   346 ;;__r	offset=-4 (param)
   347 ;;_n	offset=-6 (param)
   348 ;;_nuls	offset	0
   349 ;;_l	offset	7
   350 ;;_p	offset	9
   351 ;;_cp	offset	11
   352 ;;_w	offset	13
   353 ;;_i	offset	15
   354 ;;_fp	offset=-2 (param)
   355 ;;_s	offset=-4 (param)
   356 ;;_efgtoa$5528	offset	0
   357 ;;_efgtoa$5527	offset	2
   358 ;;_efgtoa$5526	offset	4
   359 ;;_efgtoa$5522	offset	6
   360 ;;_efgtoa$5518	offset	8
   361 ;;_efgtoa$5517	offset	10
   362 ;;_u	offset	12
   363 ;;_g	offset	16
   364 ;;_l	offset	20
   365 ;;_h	offset	24
   366 ;;_ou	offset	28
   367 ;;_n	offset	32
   368 ;;_e	offset	34
   369 ;;_i	offset	36
   370 ;;_w	offset	38
   371 ;;_p	offset	40
   372 ;;_sign	offset	42
   373 ;;_d	offset	44
   374 ;;_ne	offset	46
   375 ;;_m	offset	48
   376 ;;_pp	offset	50
   377 ;;_t	offset	52
   378 ;;_mode	offset	54
   379 ;;_nmode	offset	55
   380 ;;_fp	offset=-2 (param)
   381 ;;_f	offset=-6 (param)
   382 ;;_c	offset=-7 (param)
   383 ;;_tolower$6347	offset	0
   384 ;;_c	offset=-2 (param)
   385 ;;_c	offset=-2 (param)
   386 ;;_d	offset	0
   387 ;;_s	offset	2
   388 ;;_dest	offset=-2 (param)
   389 ;;_src	offset=-4 (param)
   390 ;;_u	offset	0
   391 ;;_m	offset	4
   392 ;;_e	offset	8
   393 ;;_x	offset=-4 (param)
   394 ;;_u	offset	0
   395 ;;_e	offset	4
   396 ;;_x	offset=-4 (param)
   397 ;;_exp1	offset	0
   398 ;;_sign1	offset	1
   399 ;;_f1	offset=-4 (param)
   400 ;;_f1	offset=-4 (param)
   401 ;;_ff1	offset=-4 (param)
   402 ;;_ff2	offset=-8 (param)
   403 ;;_sign	offset	0
   404 ;;_counter	offset	1
   405 ;;_dividend	offset=-2 (param)
   406 ;;_divisor	offset=-4 (param)
   407 ;;_quotient	offset	0
   408 ;;_sign	offset	2
   409 ;;_counter	offset	3
   410 ;;_dividend	offset=-2 (param)
   411 ;;_divisor	offset=-4 (param)
   412 ;;_dtoa$5494	offset	0
   413 ;;_n	offset	2
   414 ;;_i	offset	10
   415 ;;_s	offset	12
   416 ;;_w	offset	14
   417 ;;_p	offset	16
   418 ;;_fp	offset=-2 (param)
   419 ;;_d	offset=-10 (param)
   420 ;;_a	offset=-2 (param)
   421 ;;_sign	offset	0
   422 ;;_counter	offset	1
   423 ;;_dividend	offset=-8 (param)
   424 ;;_divisor	offset=-16 (param)
   425 ;;_quotient	offset	0
   426 ;;_sign	offset	8
   427 ;;_counter	offset	9
   428 ;;_dividend	offset=-8 (param)
   429 ;;_divisor	offset=-16 (param)
   430 ;;_w	offset	0
   431 ;;_fp	offset=-2 (param)
   432 ;;_c	offset=-3 (param)
   433 ;;_w	offset	0
   434 ;;_i	offset	2
   435 ;;_fp	offset=-2 (param)
   436 ;;_buf	offset=-4 (param)
   437 ;;_p	offset=-6 (param)
   438 ;;_a	offset	0
   439 ;;_s	offset=-2 (param)
   440 ;;_i	offset	0
   441 ;;_c	offset	2
   442 ;;_s	offset=-2 (param)
   443 ;;_fp	offset=-4 (param)
   444 ;;_c	offset=-2 (param)
   445 ;;_fp	offset=-4 (param)
   446 ;;_c	offset=-1 (param)
   447 ;;__this	offset=-2 (param)
   448 ;;_c	offset=-3 (param)
   449 ;;_atoi$6078	offset	0
   450 ;;_atoi$6076	offset	2
   451 ;;_atoi$6077	offset	4
   452 ;;_n	offset	5
   453 ;;_neg	offset	7
   454 ;;_s	offset=-2 (param)
   455 ;;_isspace$6127	offset	0
   456 ;;_c	offset=-2 (param)
   457 ;;_c	offset=-2 (param)
   458 ;;_vterm	offset=-1 (param)
   459 ;;_new_response_info	offset=-1 (param)
   460 ;;_new_response_info	offset=-1 (param)
   461 ;;_level	offset=-2 (param)
   462 ;;_dutyValue	offset=-2 (param)
   463 ;;_timer	offset=-1 (param)
   464 ;;_timer	offset=-1 (param)
   465 ;;_count	offset=-3 (param)
   466 ;;_h	offset=-1 (param)
   467 ;;_u	offset	0
   468 ;;_x	offset=-4 (param)
   469 ;;_chan	offset=-1 (param)
   470 ;;_to_what	offset=-2 (param)
   471 ;;_u	offset	0
   472 ;;_s	offset=-2 (param)
   473 ;;_index	offset=-1 (param)
   474 ;;_arg	offset	0
   475 ;;_exp	offset	4
   476 ;;_sign	offset=-1 (param)
   477 ;;_val	offset=-5 (param)
   478 ;;_grs	offset	0
   479 ;;_rem	offset	4
   480 ;;_new_exp	offset	8
   481 ;;_aexp	offset	10
   482 ;;_bexp	offset	11
   483 ;;_sign	offset	12
   484 ;;_b	offset=-4 (param)
   485 ;;_a	offset=-8 (param)
   486 ;;_ff1	offset=-4 (param)
   487 ;;_ff2	offset=-8 (param)
   488 ;;_lp_speed	offset	0
   489 ;;_new	offset=-4 (param)
   490 ;;_bn	offset=-5 (param)
   491 ;;_slow	offset=-6 (param)
   492 ;;_b	offset=-4 (param)
   493 ;;_a	offset=-8 (param)
   494 ;;_grs	offset	0
   495 ;;_bexp	offset	1
   496 ;;_aexp	offset	2
   497 ;;_signs	offset	3
   498 ;;_b	offset=-4 (param)
   499 ;;_a	offset=-8 (param)
   500 ;;_prod	offset	0
   501 ;;_grs	offset	4
   502 ;;_temp	offset	8
   503 ;;_bexp	offset	10
   504 ;;_aexp	offset	11
   505 ;;_sign	offset	12
   506 ;;_b	offset=-4 (param)
   507 ;;_a	offset=-8 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_state	offset	0
   515 ;;_InterruptHandler	offset=-3 (param)
   516 ;;_InterruptHandler	offset=-3 (param)
   517 ;;_InterruptHandler	offset=-3 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_i	offset	0
   520 ;;_sw_value	offset	1
   521 ;;_timerVal	offset=-2 (param)
   522 ;;_light	offset	0
   523 ;;_mode	offset=-1 (param)
   524 ;;_chan	offset=-1 (param)
   525 ;;_to_what	offset=-2 (param)
   526 ;;_u	offset	0
   527 ;;_s	offset=-2 (param)
   528 ;;_index	offset=-1 (param)
   529 ;;_arg	offset	0
   530 ;;_exp	offset	4
   531 ;;_sign	offset=-1 (param)
   532 ;;_val	offset=-5 (param)
   533 ;;_b	offset=-4 (param)
   534 ;;_a	offset=-8 (param)
   535 ;;_grs	offset	0
   536 ;;_bexp	offset	1
   537 ;;_aexp	offset	2
   538 ;;_signs	offset	3
   539 ;;_b	offset=-4 (param)
   540 ;;_a	offset=-8 (param)
   541 ;;_prod	offset	0
   542 ;;_grs	offset	4
   543 ;;_temp	offset	8
   544 ;;_bexp	offset	10
   545 ;;_aexp	offset	11
   546 ;;_sign	offset	12
   547 ;;_b	offset=-4 (param)
   548 ;;_a	offset=-8 (param)
   549 ;;_grs	offset	0
   550 ;;_rem	offset	4
   551 ;;_new_exp	offset	8
   552 ;;_aexp	offset	10
   553 ;;_bexp	offset	11
   554 ;;_sign	offset	12
   555 ;;_b	offset=-4 (param)
   556 ;;_a	offset=-8 (param)
   557 ;;_ff1	offset=-4 (param)
   558 ;;_ff2	offset=-8 (param)
   559 ;;_timerVal	offset=-2 (param)
   560 ;;_adj	offset	0
   561 ;;_log_ptr	offset	4
   562 ;;_f	offset	0
   563 ;;_ap	offset	6
   564 ;;_s	offset=-3 (param)
   565 ;;_fmt	offset=-5 (param)
   566 ;;_cfmt	offset	0
   567 ;;_fp	offset=-2 (param)
   568 ;;_fmt	offset=-4 (param)
   569 ;;_ap	offset=-6 (param)
   570 ;;_vfpfcnvrt$5571	offset	0
   571 ;;_vfpfcnvrt$5582	offset	2
   572 ;;_vfpfcnvrt$5570	offset	4
   573 ;;_llu	offset	6
   574 ;;_ll	offset	14
   575 ;;_f	offset	22
   576 ;;_ct	offset	26
   577 ;;_cp	offset	29
   578 ;;_c	offset	31
   579 ;;_fp	offset=-2 (param)
   580 ;;_fmt	offset=-4 (param)
   581 ;;_ap	offset=-6 (param)
   582 ;;_xtoa$5556	offset	0
   583 ;;_xtoa$5555	offset	2
   584 ;;_n	offset	4
   585 ;;_c	offset	12
   586 ;;_i	offset	14
   587 ;;_w	offset	16
   588 ;;_p	offset	18
   589 ;;_fp	offset=-2 (param)
   590 ;;_d	offset=-10 (param)
   591 ;;_x	offset=-11 (param)
   592 ;;_toupper$6362	offset	0
   593 ;;_c	offset=-2 (param)
   594 ;;_c	offset=-2 (param)
   595 ;;_c	offset=-2 (param)
   596 ;;_n	offset	0
   597 ;;_i	offset	8
   598 ;;_w	offset	10
   599 ;;_p	offset	12
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_counter	offset	0
   603 ;;_dividend	offset=-8 (param)
   604 ;;_divisor	offset=-16 (param)
   605 ;;_quotient	offset	0
   606 ;;_counter	offset	8
   607 ;;_dividend	offset=-8 (param)
   608 ;;_divisor	offset=-16 (param)
   609 ;;_r	offset	0
   610 ;;_l	offset	2
   611 ;;__l	offset=-2 (param)
   612 ;;__r	offset=-4 (param)
   613 ;;_n	offset=-6 (param)
   614 ;;_nuls	offset	0
   615 ;;_l	offset	7
   616 ;;_p	offset	9
   617 ;;_cp	offset	11
   618 ;;_w	offset	13
   619 ;;_i	offset	15
   620 ;;_fp	offset=-2 (param)
   621 ;;_s	offset=-4 (param)
   622 ;;_efgtoa$5528	offset	0
   623 ;;_efgtoa$5527	offset	2
   624 ;;_efgtoa$5526	offset	4
   625 ;;_efgtoa$5522	offset	6
   626 ;;_efgtoa$5518	offset	8
   627 ;;_efgtoa$5517	offset	10
   628 ;;_u	offset	12
   629 ;;_g	offset	16
   630 ;;_l	offset	20
   631 ;;_h	offset	24
   632 ;;_ou	offset	28
   633 ;;_n	offset	32
   634 ;;_e	offset	34
   635 ;;_i	offset	36
   636 ;;_w	offset	38
   637 ;;_p	offset	40
   638 ;;_sign	offset	42
   639 ;;_d	offset	44
   640 ;;_ne	offset	46
   641 ;;_m	offset	48
   642 ;;_pp	offset	50
   643 ;;_t	offset	52
   644 ;;_mode	offset	54
   645 ;;_nmode	offset	55
   646 ;;_fp	offset=-2 (param)
   647 ;;_f	offset=-6 (param)
   648 ;;_c	offset=-7 (param)
   649 ;;_tolower$6347	offset	0
   650 ;;_c	offset=-2 (param)
   651 ;;_c	offset=-2 (param)
   652 ;;_d	offset	0
   653 ;;_s	offset	2
   654 ;;_dest	offset=-2 (param)
   655 ;;_src	offset=-4 (param)
   656 ;;_u	offset	0
   657 ;;_m	offset	4
   658 ;;_e	offset	8
   659 ;;_x	offset=-4 (param)
   660 ;;_u	offset	0
   661 ;;_e	offset	4
   662 ;;_x	offset=-4 (param)
   663 ;;_exp1	offset	0
   664 ;;_sign1	offset	1
   665 ;;_f1	offset=-4 (param)
   666 ;;_f1	offset=-4 (param)
   667 ;;_ff1	offset=-4 (param)
   668 ;;_ff2	offset=-8 (param)
   669 ;;_sign	offset	0
   670 ;;_counter	offset	1
   671 ;;_dividend	offset=-2 (param)
   672 ;;_divisor	offset=-4 (param)
   673 ;;_quotient	offset	0
   674 ;;_sign	offset	2
   675 ;;_counter	offset	3
   676 ;;_dividend	offset=-2 (param)
   677 ;;_divisor	offset=-4 (param)
   678 ;;_dtoa$5494	offset	0
   679 ;;_n	offset	2
   680 ;;_i	offset	10
   681 ;;_s	offset	12
   682 ;;_w	offset	14
   683 ;;_p	offset	16
   684 ;;_fp	offset=-2 (param)
   685 ;;_d	offset=-10 (param)
   686 ;;_a	offset=-2 (param)
   687 ;;_sign	offset	0
   688 ;;_counter	offset	1
   689 ;;_dividend	offset=-8 (param)
   690 ;;_divisor	offset=-16 (param)
   691 ;;_quotient	offset	0
   692 ;;_sign	offset	8
   693 ;;_counter	offset	9
   694 ;;_dividend	offset=-8 (param)
   695 ;;_divisor	offset=-16 (param)
   696 ;;_w	offset	0
   697 ;;_fp	offset=-2 (param)
   698 ;;_c	offset=-3 (param)
   699 ;;_w	offset	0
   700 ;;_i	offset	2
   701 ;;_fp	offset=-2 (param)
   702 ;;_buf	offset=-4 (param)
   703 ;;_p	offset=-6 (param)
   704 ;;_a	offset	0
   705 ;;_s	offset=-2 (param)
   706 ;;_i	offset	0
   707 ;;_c	offset	2
   708 ;;_s	offset=-2 (param)
   709 ;;_fp	offset=-4 (param)
   710 ;;_c	offset=-2 (param)
   711 ;;_fp	offset=-4 (param)
   712 ;;_c	offset=-1 (param)
   713 ;;__this	offset=-2 (param)
   714 ;;_c	offset=-3 (param)
   715 ;;_atoi$6078	offset	0
   716 ;;_atoi$6076	offset	2
   717 ;;_atoi$6077	offset	4
   718 ;;_n	offset	5
   719 ;;_neg	offset	7
   720 ;;_s	offset=-2 (param)
   721 ;;_isspace$6127	offset	0
   722 ;;_c	offset=-2 (param)
   723 ;;_c	offset=-2 (param)
   724 ;;_dsize	offset=-2 (param)
   725 ;;_u	offset	0
   726 ;;_x	offset=-4 (param)
   727 ;;_f1p	offset=-2 (param)
   728 ;;_f2	offset=-6 (param)
   729 ;;_timer	offset=-1 (param)
   730 ;;_count	offset=-3 (param)
   731 ;;_channel	offset=-1 (param)
   732 ;;_i	offset	0
   733                           
   734                           	psect	idataBIGRAM
   735  016B0C                     __pidataBIGRAM:
   736                           	opt callstack 0
   737                           
   738                           ;initializer for _port_data
   739  016B0C  FF                 	db	255
   740  016B0D  00                 	db	0
   741  016B0E  FF                 	db	255
   742  016B0F  00                 	db	0
   743  016B10  FF                 	db	255
   744  016B11  00                 	db	0
   745  016B12  FF                 	db	255
   746  016B13  00                 	db	0
   747  016B14  FF                 	db	255
   748  016B15  00                 	db	0
   749  016B16  FF                 	db	255
   750  016B17  00                 	db	0
   751  016B18  FF                 	db	255
   752  016B19  00                 	db	0
   753  016B1A  FF                 	db	255
   754  016B1B  00                 	db	0
   755  016B1C  00                 	db	0
   756  016B1D  00                 	db	0
   757  016B1E  00                 	db	0
   758  016B1F  00                 	db	0
   759  016B20  00                 	db	0
   760  016B21  00                 	db	0
   761  016B22  00                 	db	0
   762  016B23  00                 	db	0
   763  016B24  00                 	db	0
   764  016B25  00                 	db	0
   765  016B26  00                 	db	0
   766  016B27  00                 	db	0
   767  016B28  00                 	db	0
   768  016B29  00                 	db	0
   769  016B2A  00                 	db	0
   770  016B2B  00                 	db	0
   771  016B2C  00                 	db	0
   772  016B2D  00                 	db	0
   773  016B2E  00                 	db	0
   774  016B2F  00                 	db	0
   775  016B30  00                 	db	0
   776  016B31  00                 	db	0
   777  016B32  00                 	db	0
   778  016B33  00                 	db	0
   779  016B34  00                 	db	0
   780  016B35  00                 	db	0
   781  016B36  00                 	db	0
   782  016B37  00                 	db	0
   783  016B38  00                 	db	0
   784  016B39  00                 	db	0
   785  016B3A  00                 	db	0
   786  016B3B  00                 	db	0
   787  016B3C  00                 	db	0
   788  016B3D  00                 	db	0
   789  016B3E  00                 	db	0
   790  016B3F  00                 	db	0
   791  016B40  00                 	db	0
   792  016B41  00                 	db	0
   793  016B42  00                 	db	0
   794  016B43  00                 	db	0
   795  016B44  00                 	db	0
   796  016B45  00                 	db	0
   797  016B46  00                 	db	0
   798  016B47  00                 	db	0
   799  016B48  00                 	db	0
   800  016B49  00                 	db	0
   801  016B4A  00                 	db	0
   802  016B4B  00                 	db	0
   803  016B4C  00                 	db	0
   804  016B4D  00                 	db	0
   805  016B4E  00                 	db	0
   806  016B4F  00                 	db	0
   807  016B50  00                 	db	0
   808  016B51  00                 	db	0
   809  016B52  00                 	db	0
   810  016B53  00                 	db	0
   811  016B54  00                 	db	0
   812  016B55  00                 	db	0
   813  016B56  00                 	db	0
   814  016B57  00                 	db	0
   815  016B58  00                 	db	0
   816  016B59  00                 	db	0
   817  016B5A  00                 	db	0
   818  016B5B  00                 	db	0
   819  016B5C  00                 	db	0
   820  016B5D  00                 	db	0
   821  016B5E  00                 	db	0
   822  016B5F  00                 	db	0
   823  016B60  00                 	db	0
   824  016B61  00                 	db	0
   825  016B62  00                 	db	0
   826  016B63  00                 	db	0
   827  016B64  00                 	db	0
   828  016B65  00                 	db	0
   829  016B66  00                 	db	0
   830  016B67  00                 	db	0
   831  016B68  00                 	db	0
   832  016B69  00                 	db	0
   833  016B6A  00                 	db	0
   834  016B6B  00                 	db	0
   835  016B6C  00                 	db	0
   836  016B6D  00                 	db	0
   837  016B6E  00                 	db	0
   838  016B6F  00                 	db	0
   839  016B70  00                 	db	0
   840  016B71  00                 	db	0
   841  016B72  00                 	db	0
   842  016B73  00                 	db	0
   843  016B74  00                 	db	0
   844  016B75  00                 	db	0
   845  016B76  00                 	db	0
   846  016B77  00                 	db	0
   847  016B78  00                 	db	0
   848  016B79  00                 	db	0
   849  016B7A  00                 	db	0
   850  016B7B  00                 	db	0
   851  016B7C  00                 	db	0
   852  016B7D  00                 	db	0
   853  016B7E  00                 	db	0
   854  016B7F  00                 	db	0
   855  016B80  00                 	db	0
   856  016B81  00                 	db	0
   857  016B82  00                 	db	0
   858  016B83  00                 	db	0
   859  016B84  00                 	db	0
   860  016B85  00                 	db	0
   861  016B86  00                 	db	0
   862  016B87  00                 	db	0
   863  016B88  00                 	db	0
   864  016B89  00                 	db	0
   865  016B8A  00                 	db	0
   866  016B8B  00                 	db	0
   867  016B8C  00                 	db	0
   868  016B8D  00                 	db	0
   869  016B8E  00                 	db	0
   870  016B8F  00                 	db	0
   871  016B90  00                 	db	0
   872  016B91  00                 	db	0
   873  016B92  00                 	db	0
   874  016B93  00                 	db	0
   875  016B94  00                 	db	0
   876  016B95  00                 	db	0
   877  016B96  00                 	db	0
   878  016B97  00                 	db	0
   879  016B98  00                 	db	0
   880  016B99  00                 	db	0
   881  016B9A  00                 	db	0
   882  016B9B  00                 	db	0
   883  016B9C  00                 	db	0
   884  016B9D  00                 	db	0
   885  016B9E  00                 	db	0
   886  016B9F  00                 	db	0
   887  016BA0  00                 	db	0
   888  016BA1  00                 	db	0
   889  016BA2  00                 	db	0
   890  016BA3  00                 	db	0
   891  016BA4  00                 	db	0
   892  016BA5  00                 	db	0
   893  016BA6  00                 	db	0
   894  016BA7  00                 	db	0
   895  016BA8  00                 	db	0
   896  016BA9  00                 	db	0
   897  016BAA  00                 	db	0
   898  016BAB  00                 	db	0
   899  016BAC  00                 	db	0
   900  016BAD  00                 	db	0
   901  016BAE  00                 	db	0
   902  016BAF  00                 	db	0
   903  016BB0  00                 	db	0
   904  016BB1  00                 	db	0
   905  016BB2  00                 	db	0
   906  016BB3  00                 	db	0
   907  016BB4  00                 	db	0
   908  016BB5  00                 	db	0
   909  016BB6  00                 	db	0
   910  016BB7  00                 	db	0
   911  016BB8  00                 	db	0
   912  016BB9  00                 	db	0
   913  016BBA  00                 	db	0
   914  016BBB  00                 	db	0
   915  016BBC  00                 	db	0
   916  016BBD  00                 	db	0
   917  016BBE  00                 	db	0
   918  016BBF  00                 	db	0
   919  016BC0  00                 	db	0
   920  016BC1  00                 	db	0
   921  016BC2  00                 	db	0
   922  016BC3  00                 	db	0
   923  016BC4  00                 	db	0
   924  016BC5  00                 	db	0
   925  016BC6  00                 	db	0
   926  016BC7  00                 	db	0
   927  016BC8  00                 	db	0
   928  016BC9  00                 	db	0
   929  016BCA  00                 	db	0
   930  016BCB  00                 	db	0
   931  016BCC  00                 	db	0
   932  016BCD  00                 	db	0
   933  016BCE  00                 	db	0
   934  016BCF  00                 	db	0
   935  016BD0  00                 	db	0
   936  016BD1  00                 	db	0
   937  016BD2  00                 	db	0
   938  016BD3  00                 	db	0
   939  016BD4  00                 	db	0
   940  016BD5  00                 	db	0
   941  016BD6  00                 	db	0
   942  016BD7  00                 	db	0
   943  016BD8  00                 	db	0
   944  016BD9  00                 	db	0
   945  016BDA  00                 	db	0
   946  016BDB  00                 	db	0
   947  016BDC  00                 	db	0
   948  016BDD  00                 	db	0
   949  016BDE  00                 	db	0
   950  016BDF  00                 	db	0
   951  016BE0  00                 	db	0
   952  016BE1  00                 	db	0
   953  016BE2  00                 	db	0
   954  016BE3  00                 	db	0
   955  016BE4  00                 	db	0
   956  016BE5  00                 	db	0
   957  016BE6  00                 	db	0
   958  016BE7  00                 	db	0
   959  016BE8  00                 	db	0
   960  016BE9  00                 	db	0
   961  016BEA  00                 	db	0
   962  016BEB  00                 	db	0
   963  016BEC  00                 	db	0
   964  016BED  00                 	db	0
   965  016BEE  00                 	db	0
   966  016BEF  00                 	db	0
   967  016BF0  00                 	db	0
   968  016BF1  00                 	db	0
   969  016BF2  00                 	db	0
   970  016BF3  00                 	db	0
   971  016BF4  00                 	db	0
   972  016BF5  00                 	db	0
   973  016BF6  00                 	db	0
   974  016BF7  00                 	db	0
   975  016BF8  00                 	db	0
   976  016BF9  00                 	db	0
   977  016BFA  00                 	db	0
   978  016BFB  00                 	db	0
   979  016BFC  00                 	db	0
   980  016BFD  00                 	db	0
   981  016BFE  00                 	db	0
   982  016BFF  00                 	db	0
   983  016C00  00                 	db	0
   984  016C01  00                 	db	0
   985  016C02  00                 	db	0
   986  016C03  00                 	db	0
   987  016C04  00                 	db	0
   988  016C05  00                 	db	0
   989  016C06  00                 	db	0
   990  016C07  00                 	db	0
   991  016C08  00                 	db	0
   992  016C09  00                 	db	0
   993  016C0A  00                 	db	0
   994  016C0B  00                 	db	0
   995  016C0C  00                 	db	0
   996  016C0D  00                 	db	0
   997  016C0E  00                 	db	0
   998  016C0F  00                 	db	0
   999  016C10  00                 	db	0
  1000  016C11  00                 	db	0
  1001  016C12  00                 	db	0
  1002  016C13  00                 	db	0
  1003  016C14  00                 	db	0
  1004  016C15  00                 	db	0
  1005  016C16  00                 	db	0
  1006  016C17  00                 	db	0
  1007  016C18  00                 	db	0
  1008  016C19  00                 	db	0
  1009  016C1A  00                 	db	0
  1010  016C1B  00                 	db	0
  1011  016C1C  00                 	db	0
  1012  016C1D  00                 	db	0
  1013  016C1E  00                 	db	0
  1014  016C1F  00                 	db	0
  1015  016C20  00                 	db	0
  1016  016C21  00                 	db	0
  1017  016C22  00                 	db	0
  1018  016C23  00                 	db	0
  1019  016C24  00                 	db	0
  1020  016C25  00                 	db	0
  1021  016C26  00                 	db	0
  1022  016C27  00                 	db	0
  1023  016C28  00                 	db	0
  1024  016C29  00                 	db	0
  1025  016C2A  00                 	db	0
  1026  016C2B  00                 	db	0
  1027  016C2C  00                 	db	0
  1028  016C2D  00                 	db	0
  1029  016C2E  00                 	db	0
  1030  016C2F  00                 	db	0
  1031  016C30  00                 	db	0
  1032  016C31  00                 	db	0
  1033  016C32  00                 	db	0
  1034  016C33  00                 	db	0
  1035  016C34  00                 	db	0
  1036  016C35  00                 	db	0
  1037  016C36  00                 	db	0
  1038  016C37  00                 	db	0
  1039  016C38  00                 	db	0
  1040  016C39  00                 	db	0
  1041  016C3A  00                 	db	0
  1042  016C3B  00                 	db	0
  1043  016C3C  00                 	db	0
  1044  016C3D  00                 	db	0
  1045  016C3E  00                 	db	0
  1046  016C3F  00                 	db	0
  1047  016C40  00                 	db	0
  1048  016C41  00                 	db	0
  1049  016C42  00                 	db	0
  1050  016C43  00                 	db	0
  1051  016C44  00                 	db	0
  1052  016C45  00                 	db	0
  1053  016C46  00                 	db	0
  1054  016C47  00                 	db	0
  1055  016C48  00                 	db	0
  1056  016C49  00                 	db	0
  1057  016C4A  00                 	db	0
  1058  016C4B  00                 	db	0
  1059  016C4C  00                 	db	0
  1060  016C4D  00                 	db	0
  1061  016C4E  00                 	db	0
  1062  016C4F  00                 	db	0
  1063  016C50  00                 	db	0
  1064  016C51  00                 	db	0
  1065  016C52  00                 	db	0
  1066  016C53  00                 	db	0
  1067  016C54  00                 	db	0
  1068  016C55  00                 	db	0
  1069  016C56  00                 	db	0
  1070  016C57  00                 	db	0
  1071  016C58  00                 	db	0
  1072  016C59  00                 	db	0
  1073  016C5A  00                 	db	0
  1074  016C5B  00                 	db	0
  1075  016C5C  00                 	db	0
  1076  016C5D  00                 	db	0
  1077  016C5E  00                 	db	0
  1078  016C5F  00                 	db	0
  1079  016C60  00                 	db	0
  1080  016C61  00                 	db	0
  1081  016C62  00                 	db	0
  1082  016C63  00                 	db	0
  1083  016C64  00                 	db	0
  1084  016C65  00                 	db	0
  1085  016C66  00                 	db	0
  1086  016C67  00                 	db	0
  1087  016C68  00                 	db	0
  1088  016C69  00                 	db	0
  1089  016C6A  00                 	db	0
  1090  016C6B  00                 	db	0
  1091  016C6C  00                 	db	0
  1092  016C6D  00                 	db	0
  1093  016C6E  00                 	db	0
  1094  016C6F  00                 	db	0
  1095  016C70  00                 	db	0
  1096  016C71  00                 	db	0
  1097  016C72  00                 	db	0
  1098  016C73  00                 	db	0
  1099  016C74  00                 	db	0
  1100  016C75  00                 	db	0
  1101  016C76  00                 	db	0
  1102  016C77  00                 	db	0
  1103  016C78  00                 	db	0
  1104  016C79  00                 	db	0
  1105  016C7A  00                 	db	0
  1106  016C7B  00                 	db	0
  1107  016C7C  00                 	db	0
  1108  016C7D  00                 	db	0
  1109  016C7E  00                 	db	0
  1110  016C7F  00                 	db	0
  1111  016C80  00                 	db	0
  1112  016C81  00                 	db	0
  1113  016C82  00                 	db	0
  1114  016C83  00                 	db	0
  1115  016C84  00                 	db	0
  1116  016C85  00                 	db	0
  1117  016C86  00                 	db	0
  1118  016C87  00                 	db	0
  1119  016C88  00                 	db	0
  1120  016C89  00                 	db	0
  1121  016C8A  00                 	db	0
  1122  016C8B  00                 	db	0
  1123  016C8C  00                 	db	0
  1124  016C8D  00                 	db	0
  1125  016C8E  00                 	db	0
  1126  016C8F  00                 	db	0
  1127  016C90  00                 	db	0
  1128  016C91  00                 	db	0
  1129  016C92  00                 	db	0
  1130  016C93  00                 	db	0
  1131  016C94  00                 	db	0
  1132  016C95  00                 	db	0
  1133  016C96  00                 	db	0
  1134  016C97  00                 	db	0
  1135  016C98  00                 	db	0
  1136  016C99  00                 	db	0
  1137  016C9A  00                 	db	0
  1138  016C9B  00                 	db	0
  1139  016C9C  00                 	db	0
  1140  016C9D  00                 	db	0
  1141  016C9E  00                 	db	0
  1142  016C9F  00                 	db	0
  1143  016CA0  00                 	db	0
  1144  016CA1  00                 	db	0
  1145  016CA2  00                 	db	0
  1146  016CA3  00                 	db	0
  1147  016CA4  00                 	db	0
  1148  016CA5  00                 	db	0
  1149  016CA6  00                 	db	0
  1150  016CA7  00                 	db	0
  1151  016CA8  00                 	db	0
  1152  016CA9  00                 	db	0
  1153  016CAA  00                 	db	0
  1154  016CAB  00                 	db	0
  1155  016CAC  00                 	db	0
  1156  016CAD  00                 	db	0
  1157  016CAE  00                 	db	0
  1158  016CAF  00                 	db	0
  1159  016CB0  00                 	db	0
  1160  016CB1  00                 	db	0
  1161  016CB2  00                 	db	0
  1162  016CB3  00                 	db	0
  1163  016CB4  00                 	db	0
  1164  016CB5  00                 	db	0
  1165  016CB6  00                 	db	0
  1166  016CB7  00                 	db	0
  1167  016CB8  00                 	db	0
  1168  016CB9  00                 	db	0
  1169  016CBA  00                 	db	0
  1170  016CBB  00                 	db	0
  1171  016CBC  00                 	db	0
  1172  016CBD  00                 	db	0
  1173  016CBE  00                 	db	0
  1174  016CBF  00                 	db	0
  1175  016CC0  00                 	db	0
  1176  016CC1  00                 	db	0
  1177  016CC2  00                 	db	0
  1178  016CC3  00                 	db	0
  1179  016CC4  00                 	db	0
  1180  016CC5  00                 	db	0
  1181  016CC6  00                 	db	0
  1182  016CC7  00                 	db	0
  1183  016CC8  00                 	db	0
  1184  016CC9  00                 	db	0
  1185  016CCA  00                 	db	0
  1186  016CCB  00                 	db	0
  1187  016CCC  00                 	db	0
  1188  016CCD  00                 	db	0
  1189  016CCE  00                 	db	0
  1190  016CCF  00                 	db	0
  1191  016CD0  00                 	db	0
  1192  016CD1  00                 	db	0
  1193  016CD2  00                 	db	0
  1194  016CD3  00                 	db	0
  1195  016CD4  00                 	db	0
  1196  016CD5  00                 	db	0
  1197  016CD6  00                 	db	0
  1198  016CD7  00                 	db	0
  1199  016CD8  00                 	db	0
  1200  016CD9  00                 	db	0
  1201  016CDA  00                 	db	0
  1202  016CDB  00                 	db	0
  1203  016CDC  00                 	db	0
  1204  016CDD  00                 	db	0
  1205  016CDE  00                 	db	0
  1206  016CDF  00                 	db	0
  1207  016CE0  00                 	db	0
  1208  016CE1  00                 	db	0
  1209  016CE2  00                 	db	0
  1210  016CE3  00                 	db	0
  1211  016CE4  00                 	db	0
  1212  016CE5  00                 	db	0
  1213  016CE6  00                 	db	0
  1214  016CE7  00                 	db	0
  1215  016CE8  00                 	db	0
  1216  016CE9  00                 	db	0
  1217  016CEA  00                 	db	0
  1218  016CEB  00                 	db	0
  1219  016CEC  00                 	db	0
  1220  016CED  00                 	db	0
  1221  016CEE  00                 	db	0
  1222  016CEF  00                 	db	0
  1223  016CF0  00                 	db	0
  1224  016CF1  00                 	db	0
  1225  016CF2  00                 	db	0
  1226  016CF3  00                 	db	0
  1227  016CF4  00                 	db	0
  1228  016CF5  00                 	db	0
  1229  016CF6  00                 	db	0
  1230  016CF7  00                 	db	0
  1231  016CF8  00                 	db	0
  1232  016CF9  00                 	db	0
  1233  016CFA  00                 	db	0
  1234  016CFB  00                 	db	0
  1235  016CFC  00                 	db	0
  1236  016CFD  00                 	db	0
  1237  016CFE  00                 	db	0
  1238  016CFF  00                 	db	0
  1239  016D00  00                 	db	0
  1240  016D01  00                 	db	0
  1241  016D02  00                 	db	0
  1242  016D03  00                 	db	0
  1243  016D04  00                 	db	0
  1244  016D05  00                 	db	0
  1245  016D06  00                 	db	0
  1246  016D07  00                 	db	0
  1247  016D08  00                 	db	0
  1248  016D09  00                 	db	0
  1249  016D0A  00                 	db	0
  1250  016D0B  00                 	db	0
  1251                           
  1252                           ;initializer for _C
  1253  016D0C  0000               	dw	0
  1254  016D0E  0000               	dw	0
  1255  016D10  0000               	dw	0
  1256  016D12  0000               	dw	0
  1257  016D14  0000               	dw	0
  1258  016D16  0000               	dw	0
  1259  016D18  0000               	dw	0
  1260  016D1A  0000               	dw	0
  1261  016D1C  0000               	dw	0
  1262  016D1E  0000               	dw	0
  1263  016D20  0000               	dw	0
  1264  016D22  0000               	dw	0
  1265  016D24  0000               	dw	0
  1266  016D26  0000               	dw	0
  1267  016D28  0000               	dw	0
  1268  016D2A  0000               	dw	0
  1269  016D2C  0000               	dw	0
  1270  016D2E  0000               	dw	0
  1271  016D30  0000               	dw	0
  1272  016D32  0000               	dw	0
  1273  016D34  0000               	dw	0
  1274  016D36  0000               	dw	0
  1275  016D38  0000               	dw	0
  1276  016D3A  0000               	dw	0
  1277  016D3C  0000               	dw	0
  1278  016D3E  0000               	dw	0
  1279  016D40  0000               	dw	0
  1280  016D42  0000               	dw	0
  1281  016D44  0000               	dw	0
  1282  016D46  0000               	dw	0
  1283  016D48  0000               	dw	0
  1284  016D4A  0000               	dw	0
  1285  016D4C  0000               	dw	0
  1286  016D4E  0000               	dw	0
  1287  016D50  0000               	dw	0
  1288  016D52  0000               	dw	0
  1289  016D54  0000               	dw	0
  1290  016D56  0000               	dw	0
  1291  016D58  0000               	dw	0
  1292  016D5A  0000               	dw	0
  1293  016D5C  0000               	dw	0
  1294  016D5E  0000               	dw	0
  1295  016D60  0000               	dw	0
  1296  016D62  0000               	dw	0
  1297  016D64  0000               	dw	0
  1298  016D66  0000               	dw	0
  1299  016D68  0000               	dw	0
  1300  016D6A  0000               	dw	0
  1301  016D6C  0000               	dw	0
  1302  016D6E  0000               	dw	0
  1303  016D70  0000               	dw	0
  1304  016D72  0000               	dw	0
  1305  016D74  0000               	dw	0
  1306  016D76  0000               	dw	0
  1307  016D78  0000               	dw	0
  1308  016D7A  0000               	dw	0
  1309  016D7C  0000               	dw	0
  1310  016D7E  0000               	dw	0
  1311  016D80  0000               	dw	0
  1312  016D82  0000               	dw	0
  1313  016D84  0000               	dw	0
  1314  016D86  0000               	dw	0
  1315  016D88  0000               	dw	0
  1316  016D8A  0000               	dw	0
  1317  016D8C  0000               	dw	0
  1318  016D8E  0000               	dw	0
  1319  016D90  0000               	dw	0
  1320  016D92  0000               	dw	0
  1321  016D94  0000               	dw	0
  1322  016D96  0000               	dw	0
  1323  016D98  0000               	dw	0
  1324  016D9A  42FA               	dw	17146
  1325  016D9C  0000               	dw	0
  1326  016D9E  0000               	dw	0
  1327  016DA0  0000               	dw	0
  1328  016DA2  0000               	dw	0
  1329  016DA4  0000               	dw	0
  1330  016DA6  0000               	dw	0
  1331  016DA8  0000               	dw	0
  1332  016DAA  0000               	dw	0
  1333  016DAC  0000               	dw	0
  1334  016DAE  0000               	dw	0
  1335  016DB0  0000               	dw	0
  1336  016DB2  0000               	dw	0
  1337  016DB4  0000               	dw	0
  1338  016DB6  0000               	dw	0
  1339  016DB8  0000               	dw	0
  1340  016DBA  0000               	dw	0
  1341  016DBC  0000               	dw	0
  1342  016DBE  0000               	dw	0
  1343  016DC0  0000               	dw	0
  1344  016DC2  0000               	dw	0
  1345  016DC4  00                 	db	0
  1346  016DC5  01                 	db	1
  1347  016DC6  0000               	dw	0
  1348  016DC8  3F80               	dw	16256
  1349  016DCA  0000               	dw	0
  1350  016DCC  3F80               	dw	16256
  1351  016DCE  00                 	db	0
  1352  016DCF  00                 	db	0
  1353  016DD0  00                 	db	0
  1354  016DD1  00                 	db	0
  1355  016DD2  00                 	db	0
  1356  016DD3  00                 	db	0
  1357  016DD4  00                 	db	0
  1358  016DD5  00                 	db	0
  1359  016DD6  00                 	db	0
  1360  016DD7  00                 	db	0
  1361  016DD8  00                 	db	0
  1362  016DD9  00                 	db	0
  1363  016DDA  00                 	db	0
  1364  016DDB  00                 	db	0
  1365  016DDC  00                 	db	0
  1366  016DDD  00                 	db	0
  1367  016DDE  00                 	db	0
  1368  016DDF  00                 	db	0
  1369  016DE0  00                 	db	0
  1370  016DE1  00                 	db	0
  1371  016DE2  00                 	db	0
  1372  016DE3  00                 	db	0
  1373  016DE4  00                 	db	0
  1374  016DE5  00                 	db	0
  1375  016DE6  00                 	db	0
  1376  016DE7  00                 	db	0
  1377  016DE8  00                 	db	0
  1378  016DE9  00                 	db	0
  1379  016DEA  00                 	db	0
  1380  016DEB  00                 	db	0
  1381  016DEC  00                 	db	0
  1382  016DED  00                 	db	0
  1383  016DEE  00                 	db	0
  1384  016DEF  00                 	db	0
  1385  016DF0  00                 	db	0
  1386  016DF1  00                 	db	0
  1387  016DF2  00                 	db	0
  1388  016DF3  00                 	db	0
  1389  016DF4  00                 	db	0
  1390  016DF5  00                 	db	0
  1391  016DF6  00                 	db	0
  1392  016DF7  00                 	db	0
  1393  016DF8  00                 	db	0
  1394  016DF9  00                 	db	0
  1395  016DFA  00                 	db	0
  1396  016DFB  00                 	db	0
  1397  016DFC  00                 	db	0
  1398  016DFD  00                 	db	0
  1399  016DFE  00                 	db	0
  1400  016DFF  00                 	db	0
  1401  016E00  00                 	db	0
  1402  016E01  00                 	db	0
  1403  016E02  00                 	db	0
  1404  016E03  00                 	db	0
  1405  016E04  00                 	db	0
  1406  016E05  00                 	db	0
  1407  016E06  00                 	db	0
  1408  016E07  00                 	db	0
  1409  016E08  00                 	db	0
  1410  016E09  00                 	db	0
  1411  016E0A  00                 	db	0
  1412  016E0B  00                 	db	0
  1413  016E0C  00                 	db	0
  1414  016E0D  00                 	db	0
  1415  016E0E  00                 	db	0
  1416  016E0F  00                 	db	0
  1417  016E10  00                 	db	0
  1418  016E11  00                 	db	0
  1419  016E12  00                 	db	0
  1420  016E13  00                 	db	0
  1421  016E14  00                 	db	0
  1422  016E15  00                 	db	0
  1423  016E16  00                 	db	0
  1424  016E17  00                 	db	0
  1425  016E18  00                 	db	0
  1426  016E19  00                 	db	0
  1427  016E1A  0000               	dw	0
  1428  016E1C  0000               	dw	0
  1429  016E1E  0000               	dw	0
  1430  016E20  0000               	dw	0
  1431  016E22  0000               	dw	0
  1432  016E24  0000               	dw	0
  1433  016E26  0000               	dw	0
  1434  016E28  0000               	dw	0
  1435  016E2A  0000               	dw	0
  1436  016E2C  0000               	dw	0
  1437  016E2E  01                 	db	1
  1438  016E2F  00                 	db	0
  1439  016E30  00                 	db	0
  1440  016E31  00                 	db	0
  1441  016E32  00                 	db	0
  1442  016E33  00                 	db	0
  1443  016E34  00                 	db	0
  1444  016E35  00                 	db	0
  1445  016E36  00                 	db	0
  1446                           
  1447                           	psect	idataBANK0
  1448  01C0D6                     __pidataBANK0:
  1449                           	opt callstack 0
  1450                           
  1451                           ;initializer for stoa@F1166
  1452  01C0D6  28                 	db	40
  1453  01C0D7  6E                 	db	110
  1454  01C0D8  75                 	db	117
  1455  01C0D9  6C                 	db	108
  1456  01C0DA  6C                 	db	108
  1457  01C0DB  29                 	db	41
  1458  01C0DC  00                 	db	0
  1459                           
  1460                           ;initializer for _H
  1461  01C0DD  00                 	db	0
  1462  01C0DE  00                 	db	0
  1463  01C0DF  01                 	db	1
  1464  01C0E0  00                 	db	0
  1465  01C0E1  01                 	db	1
  1466  01C0E2  00                 	db	0
  1467  01C0E3  00                 	db	0
  1468                           
  1469                           	psect	idataBANK1
  1470  019F16                     __pidataBANK1:
  1471                           	opt callstack 0
  1472                           
  1473                           ;initializer for _R
  1474  019F16  0000               	dw	0
  1475  019F18  0000               	dw	0
  1476  019F1A  0000               	dw	0
  1477  019F1C  0000               	dw	0
  1478  019F1E  0000               	dw	0
  1479  019F20  0000               	dw	0
  1480  019F22  0000               	dw	0
  1481  019F24  0000               	dw	0
  1482  019F26  0000               	dw	0
  1483  019F28  0000               	dw	0
  1484  019F2A  0000               	dw	0
  1485  019F2C  0000               	dw	0
  1486  019F2E  0000               	dw	0
  1487  019F30  0000               	dw	0
  1488  019F32  0000               	dw	0
  1489  019F34  0000               	dw	0
  1490  019F36  0F67               	dw	3943
  1491  019F38  0F8F               	dw	3983
  1492  019F3A  0000               	dw	0
  1493  019F3C  0000               	dw	0
  1494  019F3E  0000               	dw	0
  1495  019F40  0000               	dw	0
  1496  019F42  00                 	db	0
  1497  019F43  0000               	dw	0
  1498  019F45  00                 	db	0
  1499                           
  1500                           ;initializer for _V
  1501  019F46  00                 	db	0
  1502  019F47  00                 	db	0
  1503  019F48  00                 	db	0
  1504  019F49  00                 	db	0
  1505  019F4A  00                 	db	0
  1506  019F4B  00                 	db	0
  1507  019F4C  00                 	db	0
  1508  019F4D  00                 	db	0
  1509  019F4E  00                 	db	0
  1510  019F4F  00                 	db	0
  1511  019F50  00                 	db	0
  1512  019F51  00                 	db	0
  1513  019F52  00                 	db	0
  1514  019F53  00                 	db	0
  1515  019F54  00                 	db	0
  1516  019F55  00                 	db	0
  1517  019F56  00                 	db	0
  1518  019F57  00                 	db	0
  1519  019F58  00                 	db	0
  1520  019F59  00                 	db	0
  1521  019F5A  00                 	db	0
  1522  019F5B  00                 	db	0
  1523  019F5C  00                 	db	0
  1524  019F5D  00                 	db	0
  1525  019F5E  00                 	db	0
  1526  019F5F  00                 	db	0
  1527  019F60  00                 	db	0
  1528  019F61  00                 	db	0
  1529  019F62  00                 	db	0
  1530  019F63  00                 	db	0
  1531  019F64  00                 	db	0
  1532  019F65  00                 	db	0
  1533  019F66  00                 	db	0
  1534  019F67  00                 	db	0
  1535  019F68  00                 	db	0
  1536  019F69  00                 	db	0
  1537  019F6A  00                 	db	0
  1538  019F6B  00                 	db	0
  1539  019F6C  00                 	db	0
  1540  019F6D  00                 	db	0
  1541  019F6E  00                 	db	0
  1542  019F6F  00                 	db	0
  1543  019F70  00                 	db	0
  1544  019F71  00                 	db	0
  1545  019F72  00                 	db	0
  1546  019F73  00                 	db	0
  1547  019F74  00                 	db	0
  1548  019F75  00                 	db	0
  1549  019F76  00                 	db	0
  1550  019F77  00                 	db	0
  1551  019F78  00                 	db	0
  1552  019F79  00                 	db	0
  1553  019F7A  00                 	db	0
  1554  019F7B  00                 	db	0
  1555  019F7C  00                 	db	0
  1556  019F7D  00                 	db	0
  1557  019F7E  00                 	db	0
  1558  019F7F  00                 	db	0
  1559  019F80  00                 	db	0
  1560  019F81  00                 	db	0
  1561  019F82  00                 	db	0
  1562  019F83  00                 	db	0
  1563  019F84  00                 	db	0
  1564  019F85  00                 	db	0
  1565  019F86  00                 	db	0
  1566  019F87  00                 	db	0
  1567  019F88  00                 	db	0
  1568  019F89  00                 	db	0
  1569  019F8A  00                 	db	0
  1570  019F8B  00                 	db	0
  1571  019F8C  00                 	db	0
  1572  019F8D  00                 	db	0
  1573  019F8E  00                 	db	0
  1574  019F8F  00                 	db	0
  1575  019F90  00                 	db	0
  1576  019F91  00                 	db	0
  1577  019F92  00                 	db	0
  1578  019F93  00                 	db	0
  1579  019F94  00                 	db	0
  1580  019F95  00                 	db	0
  1581  019F96  00                 	db	0
  1582  019F97  00                 	db	0
  1583  019F98  00                 	db	0
  1584  019F99  00                 	db	0
  1585  019F9A  00                 	db	0
  1586  019F9B  00                 	db	0
  1587  019F9C  00                 	db	0
  1588  019F9D  00                 	db	0
  1589  019F9E  00                 	db	0
  1590  019F9F  00                 	db	0
  1591  019FA0  00                 	db	0
  1592  019FA1  00                 	db	0
  1593  019FA2  00                 	db	0
  1594  019FA3  00                 	db	0
  1595  019FA4  00                 	db	0
  1596  019FA5  00                 	db	0
  1597  019FA6  00                 	db	0
  1598  019FA7  00                 	db	0
  1599  019FA8  00                 	db	0
  1600  019FA9  00                 	db	0
  1601  019FAA  00                 	db	0
  1602  019FAB  00                 	db	0
  1603  019FAC  00                 	db	0
  1604  019FAD  00                 	db	0
  1605  019FAE  00                 	db	0
  1606  019FAF  00                 	db	0
  1607  019FB0  00                 	db	0
  1608  019FB1  00                 	db	0
  1609  019FB2  00                 	db	0
  1610  019FB3  00                 	db	0
  1611  019FB4  00                 	db	0
  1612  019FB5  00                 	db	0
  1613  019FB6  00                 	db	0
  1614  019FB7  00                 	db	0
  1615  019FB8  00                 	db	0
  1616  019FB9  00                 	db	0
  1617  019FBA  00                 	db	0
  1618  019FBB  00                 	db	0
  1619  019FBC  00                 	db	0
  1620  019FBD  00                 	db	0
  1621  019FBE  00                 	db	0
  1622  019FBF  00                 	db	0
  1623  019FC0  00                 	db	0
  1624  019FC1  00                 	db	0
  1625  019FC2  00                 	db	0
  1626  019FC3  00                 	db	0
  1627  019FC4  00                 	db	0
  1628  019FC5  00                 	db	0
  1629  019FC6  00                 	db	0
  1630  019FC7  0000               	dw	0
  1631  019FC9  0000               	dw	0
  1632  019FCB  0000               	dw	0
  1633  019FCD  0000               	dw	0
  1634  019FCF  00                 	db	0
  1635  019FD0  00                 	db	0
  1636  019FD1  00                 	db	0
  1637  019FD2  00                 	db	0
  1638  019FD3  00                 	db	0
  1639  019FD4  00                 	db	0
  1640  019FD5  0000               	dw	0
  1641  019FD7  0000               	dw	0
  1642  019FD9  0000               	dw	0
  1643  019FDB  0000               	dw	0
  1644  019FDD  0000               	dw	0
  1645  019FDF  0000               	dw	0
  1646  019FE1  00                 	db	0
  1647  019FE2  00                 	db	0
  1648  019FE3  00                 	db	0
  1649  019FE4  00                 	db	0
  1650  019FE5  00                 	db	0
  1651  019FE6  00                 	db	0
  1652  019FE7  00                 	db	0
  1653  019FE8  00                 	db	0
  1654  019FE9  00                 	db	0
  1655  019FEA  00                 	db	0
  1656  019FEB  00                 	db	0
  1657  019FEC  0000               	dw	0
  1658  019FEE  0000               	dw	0
  1659  019FF0  2D                 	db	45
  1660  019FF1  00                 	db	0
  1661  019FF2  00                 	db	0
  1662  019FF3  00                 	db	0
  1663  019FF4  00                 	db	0
  1664  019FF5  0000               	dw	0
  1665  019FF7  0000               	dw	0
  1666  019FF9  0000               	dw	0
  1667  019FFB  0000               	dw	0
  1668  019FFD  0000               	dw	0
  1669  019FFF  0000               	dw	0
  1670  01A001  0000               	dw	0
  1671  01A003  0000               	dw	0
  1672                           
  1673                           	psect	mediumconst
  1674  00F9EA                     __pmediumconst:
  1675                           	opt callstack 0
  1676  00F9EA  00                 	db	0
  1677  00F9EB                     _BVSOC_TABLE:
  1678                           	opt callstack 0
  1679  00F9EB  59D8               	dw	23000
  1680  00F9ED  0000               	dw	0
  1681  00F9EF  0005               	dw	5
  1682  00F9F1  0000               	dw	0
  1683  00F9F3  5B68               	dw	23400
  1684  00F9F5  0000               	dw	0
  1685  00F9F7  000A               	dw	10
  1686  00F9F9  0000               	dw	0
  1687  00F9FB  5C30               	dw	23600
  1688  00F9FD  0000               	dw	0
  1689  00F9FF  0014               	dw	20
  1690  00FA01  0000               	dw	0
  1691  00FA03  5E38               	dw	24120
  1692  00FA05  0000               	dw	0
  1693  00FA07  0019               	dw	25
  1694  00FA09  0000               	dw	0
  1695  00FA0B  5E88               	dw	24200
  1696  00FA0D  0000               	dw	0
  1697  00FA0F  001E               	dw	30
  1698  00FA11  0000               	dw	0
  1699  00FA13  5F78               	dw	24440
  1700  00FA15  0000               	dw	0
  1701  00FA17  0028               	dw	40
  1702  00FA19  0000               	dw	0
  1703  00FA1B  5FDC               	dw	24540
  1704  00FA1D  0000               	dw	0
  1705  00FA1F  002D               	dw	45
  1706  00FA21  0000               	dw	0
  1707  00FA23  6018               	dw	24600
  1708  00FA25  0000               	dw	0
  1709  00FA27  0032               	dw	50
  1710  00FA29  0000               	dw	0
  1711  00FA2B  6046               	dw	24646
  1712  00FA2D  0000               	dw	0
  1713  00FA2F  0035               	dw	53
  1714  00FA31  0000               	dw	0
  1715  00FA33  607C               	dw	24700
  1716  00FA35  0000               	dw	0
  1717  00FA37  0037               	dw	55
  1718  00FA39  0000               	dw	0
  1719  00FA3B  60AE               	dw	24750
  1720  00FA3D  0000               	dw	0
  1721  00FA3F  0039               	dw	57
  1722  00FA41  0000               	dw	0
  1723  00FA43  60E0               	dw	24800
  1724  00FA45  0000               	dw	0
  1725  00FA47  003C               	dw	60
  1726  00FA49  0000               	dw	0
  1727  00FA4B  6112               	dw	24850
  1728  00FA4D  0000               	dw	0
  1729  00FA4F  003F               	dw	63
  1730  00FA51  0000               	dw	0
  1731  00FA53  615D               	dw	24925
  1732  00FA55  0000               	dw	0
  1733  00FA57  0043               	dw	67
  1734  00FA59  0000               	dw	0
  1735  00FA5B  61A8               	dw	25000
  1736  00FA5D  0000               	dw	0
  1737  00FA5F  0046               	dw	70
  1738  00FA61  0000               	dw	0
  1739  00FA63  61BC               	dw	25020
  1740  00FA65  0000               	dw	0
  1741  00FA67  0048               	dw	72
  1742  00FA69  0000               	dw	0
  1743  00FA6B  61D0               	dw	25040
  1744  00FA6D  0000               	dw	0
  1745  00FA6F  004B               	dw	75
  1746  00FA71  0000               	dw	0
  1747  00FA73  61DA               	dw	25050
  1748  00FA75  0000               	dw	0
  1749  00FA77  0050               	dw	80
  1750  00FA79  0000               	dw	0
  1751  00FA7B  61E4               	dw	25060
  1752  00FA7D  0000               	dw	0
  1753  00FA7F  0055               	dw	85
  1754  00FA81  0000               	dw	0
  1755  00FA83  61F8               	dw	25080
  1756  00FA85  0000               	dw	0
  1757  00FA87  005A               	dw	90
  1758  00FA89  0000               	dw	0
  1759  00FA8B  6208               	dw	25096
  1760  00FA8D  0000               	dw	0
  1761  00FA8F  005C               	dw	92
  1762  00FA91  0000               	dw	0
  1763  00FA93  6222               	dw	25122
  1764  00FA95  0000               	dw	0
  1765  00FA97  005D               	dw	93
  1766  00FA99  0000               	dw	0
  1767  00FA9B  6234               	dw	25140
  1768  00FA9D  0000               	dw	0
  1769  00FA9F  005F               	dw	95
  1770  00FAA1  0000               	dw	0
  1771  00FAA3  6248               	dw	25160
  1772  00FAA5  0000               	dw	0
  1773  00FAA7  0061               	dw	97
  1774  00FAA9  0000               	dw	0
  1775  00FAAB  625C               	dw	25180
  1776  00FAAD  0000               	dw	0
  1777  00FAAF  0064               	dw	100
  1778  00FAB1  0000               	dw	0
  1779  00FAB3  6784               	dw	26500
  1780  00FAB5  0000               	dw	0
  1781  00FAB7  0062               	dw	98
  1782  00FAB9  0000               	dw	0
  1783  00FABB                     __end_of_BVSOC_TABLE:
  1784                           	opt callstack 0
  1785  00FABB                     _T:
  1786                           	opt callstack 0
  1787  00FABB  63                 	db	99
  1788  00FABC  6F                 	db	111
  1789  00FABD  6D                 	db	109
  1790  00FABE  6D                 	db	109
  1791  00FABF  61                 	db	97
  1792  00FAC0  6E                 	db	110
  1793  00FAC1  64                 	db	100
  1794  00FAC2  73                 	db	115
  1795  00FAC3  20                 	db	32
  1796  00FAC4  31                 	db	49
  1797  00FAC5  00                 	db	0
  1798  00FAC6  00                 	db	0
  1799  00FAC7  00                 	db	0
  1800  00FAC8  00                 	db	0
  1801  00FAC9  00                 	db	0
  1802  00FACA  00                 	db	0
  1803  00FACB  00                 	db	0
  1804  00FACC  00                 	db	0
  1805  00FACD  64                 	db	100
  1806  00FACE  69                 	db	105
  1807  00FACF  73                 	db	115
  1808  00FAD0  70                 	db	112
  1809  00FAD1  6C                 	db	108
  1810  00FAD2  61                 	db	97
  1811  00FAD3  79                 	db	121
  1812  00FAD4  73                 	db	115
  1813  00FAD5  20                 	db	32
  1814  00FAD6  31                 	db	49
  1815  00FAD7  00                 	db	0
  1816  00FAD8  00                 	db	0
  1817  00FAD9  00                 	db	0
  1818  00FADA  00                 	db	0
  1819  00FADB  00                 	db	0
  1820  00FADC  00                 	db	0
  1821  00FADD  00                 	db	0
  1822  00FADE  00                 	db	0
  1823  00FADF  63                 	db	99
  1824  00FAE0  6F                 	db	111
  1825  00FAE1  6D                 	db	109
  1826  00FAE2  6D                 	db	109
  1827  00FAE3  61                 	db	97
  1828  00FAE4  6E                 	db	110
  1829  00FAE5  64                 	db	100
  1830  00FAE6  73                 	db	115
  1831  00FAE7  20                 	db	32
  1832  00FAE8  32                 	db	50
  1833  00FAE9  00                 	db	0
  1834  00FAEA  00                 	db	0
  1835  00FAEB  00                 	db	0
  1836  00FAEC  00                 	db	0
  1837  00FAED  00                 	db	0
  1838  00FAEE  00                 	db	0
  1839  00FAEF  00                 	db	0
  1840  00FAF0  00                 	db	0
  1841  00FAF1  64                 	db	100
  1842  00FAF2  69                 	db	105
  1843  00FAF3  73                 	db	115
  1844  00FAF4  70                 	db	112
  1845  00FAF5  6C                 	db	108
  1846  00FAF6  61                 	db	97
  1847  00FAF7  79                 	db	121
  1848  00FAF8  73                 	db	115
  1849  00FAF9  20                 	db	32
  1850  00FAFA  32                 	db	50
  1851  00FAFB  00                 	db	0
  1852  00FAFC  00                 	db	0
  1853  00FAFD  00                 	db	0
  1854  00FAFE  00                 	db	0
  1855  00FAFF  00                 	db	0
  1856  00FB00  00                 	db	0
  1857  00FB01  00                 	db	0
  1858  00FB02  00                 	db	0
  1859  00FB03  63                 	db	99
  1860  00FB04  6F                 	db	111
  1861  00FB05  6D                 	db	109
  1862  00FB06  6D                 	db	109
  1863  00FB07  61                 	db	97
  1864  00FB08  6E                 	db	110
  1865  00FB09  64                 	db	100
  1866  00FB0A  73                 	db	115
  1867  00FB0B  20                 	db	32
  1868  00FB0C  33                 	db	51
  1869  00FB0D  00                 	db	0
  1870  00FB0E  00                 	db	0
  1871  00FB0F  00                 	db	0
  1872  00FB10  00                 	db	0
  1873  00FB11  00                 	db	0
  1874  00FB12  00                 	db	0
  1875  00FB13  00                 	db	0
  1876  00FB14  00                 	db	0
  1877  00FB15  64                 	db	100
  1878  00FB16  69                 	db	105
  1879  00FB17  73                 	db	115
  1880  00FB18  70                 	db	112
  1881  00FB19  6C                 	db	108
  1882  00FB1A  61                 	db	97
  1883  00FB1B  79                 	db	121
  1884  00FB1C  73                 	db	115
  1885  00FB1D  20                 	db	32
  1886  00FB1E  33                 	db	51
  1887  00FB1F  00                 	db	0
  1888  00FB20  00                 	db	0
  1889  00FB21  00                 	db	0
  1890  00FB22  00                 	db	0
  1891  00FB23  00                 	db	0
  1892  00FB24  00                 	db	0
  1893  00FB25  00                 	db	0
  1894  00FB26  00                 	db	0
  1895  00FB27  63                 	db	99
  1896  00FB28  6F                 	db	111
  1897  00FB29  6D                 	db	109
  1898  00FB2A  6D                 	db	109
  1899  00FB2B  61                 	db	97
  1900  00FB2C  6E                 	db	110
  1901  00FB2D  64                 	db	100
  1902  00FB2E  73                 	db	115
  1903  00FB2F  20                 	db	32
  1904  00FB30  34                 	db	52
  1905  00FB31  00                 	db	0
  1906  00FB32  00                 	db	0
  1907  00FB33  00                 	db	0
  1908  00FB34  00                 	db	0
  1909  00FB35  00                 	db	0
  1910  00FB36  00                 	db	0
  1911  00FB37  00                 	db	0
  1912  00FB38  00                 	db	0
  1913  00FB39  64                 	db	100
  1914  00FB3A  69                 	db	105
  1915  00FB3B  73                 	db	115
  1916  00FB3C  70                 	db	112
  1917  00FB3D  6C                 	db	108
  1918  00FB3E  61                 	db	97
  1919  00FB3F  79                 	db	121
  1920  00FB40  73                 	db	115
  1921  00FB41  20                 	db	32
  1922  00FB42  34                 	db	52
  1923  00FB43  00                 	db	0
  1924  00FB44  00                 	db	0
  1925  00FB45  00                 	db	0
  1926  00FB46  00                 	db	0
  1927  00FB47  00                 	db	0
  1928  00FB48  00                 	db	0
  1929  00FB49  00                 	db	0
  1930  00FB4A  00                 	db	0
  1931  00FB4B                     __end_of_T:
  1932                           	opt callstack 0
  1933  00FB4B                     _spin:
  1934                           	opt callstack 0
  1935  00FB4B  7C                 	db	124
  1936  00FB4C  7C                 	db	124
  1937  00FB4D  2F                 	db	47
  1938  00FB4E  2F                 	db	47
  1939  00FB4F  2D                 	db	45
  1940  00FB50  2D                 	db	45
  1941  00FB51  00                 	db	0
  1942  00FB52  00                 	db	0
  1943  00FB53  00                 	db	0
  1944  00FB54  00                 	db	0
  1945  00FB55  00                 	db	0
  1946  00FB56  00                 	db	0
  1947  00FB57  00                 	db	0
  1948  00FB58  00                 	db	0
  1949  00FB59  00                 	db	0
  1950  00FB5A  00                 	db	0
  1951  00FB5B  00                 	db	0
  1952  00FB5C  00                 	db	0
  1953  00FB5D  00                 	db	0
  1954  00FB5E  00                 	db	0
  1955  00FB5F  7C                 	db	124
  1956  00FB60  7C                 	db	124
  1957  00FB61  2F                 	db	47
  1958  00FB62  2F                 	db	47
  1959  00FB63  2D                 	db	45
  1960  00FB64  2D                 	db	45
  1961  00FB65  5C                 	db	92
  1962  00FB66  5C                 	db	92
  1963  00FB67  00                 	db	0
  1964  00FB68  00                 	db	0
  1965  00FB69  00                 	db	0
  1966  00FB6A  00                 	db	0
  1967  00FB6B  00                 	db	0
  1968  00FB6C  00                 	db	0
  1969  00FB6D  00                 	db	0
  1970  00FB6E  00                 	db	0
  1971  00FB6F  00                 	db	0
  1972  00FB70  00                 	db	0
  1973  00FB71  00                 	db	0
  1974  00FB72  00                 	db	0
  1975  00FB73  4F                 	db	79
  1976  00FB74  4F                 	db	79
  1977  00FB75  4F                 	db	79
  1978  00FB76  4F                 	db	79
  1979  00FB77  4F                 	db	79
  1980  00FB78  4F                 	db	79
  1981  00FB79  2D                 	db	45
  1982  00FB7A  2D                 	db	45
  1983  00FB7B  5F                 	db	95
  1984  00FB7C  5F                 	db	95
  1985  00FB7D  2D                 	db	45
  1986  00FB7E  00                 	db	0
  1987  00FB7F  00                 	db	0
  1988  00FB80  00                 	db	0
  1989  00FB81  00                 	db	0
  1990  00FB82  00                 	db	0
  1991  00FB83  00                 	db	0
  1992  00FB84  00                 	db	0
  1993  00FB85  00                 	db	0
  1994  00FB86  00                 	db	0
  1995  00FB87  76                 	db	118
  1996  00FB88  76                 	db	118
  1997  00FB89  3C                 	db	60
  1998  00FB8A  3C                 	db	60
  1999  00FB8B  5E                 	db	94
  2000  00FB8C  5E                 	db	94
  2001  00FB8D  3E                 	db	62
  2002  00FB8E  3E                 	db	62
  2003  00FB8F  00                 	db	0
  2004  00FB90  00                 	db	0
  2005  00FB91  00                 	db	0
  2006  00FB92  00                 	db	0
  2007  00FB93  00                 	db	0
  2008  00FB94  00                 	db	0
  2009  00FB95  00                 	db	0
  2010  00FB96  00                 	db	0
  2011  00FB97  00                 	db	0
  2012  00FB98  00                 	db	0
  2013  00FB99  00                 	db	0
  2014  00FB9A  00                 	db	0
  2015  00FB9B  2E                 	db	46
  2016  00FB9C  2E                 	db	46
  2017  00FB9D  2A                 	db	42
  2018  00FB9E  2A                 	db	42
  2019  00FB9F  78                 	db	120
  2020  00FBA0  23                 	db	35
  2021  00FBA1  78                 	db	120
  2022  00FBA2  23                 	db	35
  2023  00FBA3  58                 	db	88
  2024  00FBA4  58                 	db	88
  2025  00FBA5  7C                 	db	124
  2026  00FBA6  7C                 	db	124
  2027  00FBA7  2D                 	db	45
  2028  00FBA8  2D                 	db	45
  2029  00FBA9  00                 	db	0
  2030  00FBAA  00                 	db	0
  2031  00FBAB  00                 	db	0
  2032  00FBAC  00                 	db	0
  2033  00FBAD  00                 	db	0
  2034  00FBAE  00                 	db	0
  2035  00FBAF  2E                 	db	46
  2036  00FBB0  2E                 	db	46
  2037  00FBB1  6F                 	db	111
  2038  00FBB2  6F                 	db	111
  2039  00FBB3  4F                 	db	79
  2040  00FBB4  4F                 	db	79
  2041  00FBB5  6F                 	db	111
  2042  00FBB6  6F                 	db	111
  2043  00FBB7  00                 	db	0
  2044  00FBB8  00                 	db	0
  2045  00FBB9  00                 	db	0
  2046  00FBBA  00                 	db	0
  2047  00FBBB  00                 	db	0
  2048  00FBBC  00                 	db	0
  2049  00FBBD  00                 	db	0
  2050  00FBBE  00                 	db	0
  2051  00FBBF  00                 	db	0
  2052  00FBC0  00                 	db	0
  2053  00FBC1  00                 	db	0
  2054  00FBC2  00                 	db	0
  2055  00FBC3                     __end_of_spin:
  2056                           	opt callstack 0
  2057  00FBC3  0000               	dw	0
  2058  00FBC5  3F80               	dw	16256
  2059  00FBC7  0000               	dw	0
  2060  00FBC9  3FC0               	dw	16320
  2061  00FBCB                     __end_of_bp:
  2062                           	opt callstack 0
  2063  00FBCB  AA00               	dw	43520
  2064  00FBCD  3FB8               	dw	16312
  2065  00FBCF                     __end_of_ivln2_h:
  2066                           	opt callstack 0
  2067  00FBCF  23C6               	dw	9158
  2068  00FBD1  B8F6               	dw	47350
  2069  00FBD3                     __end_of_cp_l:
  2070                           	opt callstack 0
  2071  00FBD3  4000               	dw	16384
  2072  00FBD5  3F76               	dw	16246
  2073  00FBD7                     __end_of_cp_h:
  2074                           	opt callstack 0
  2075  0000                     _IVTADL	set	14493
  2076  0000                     _IVTADH	set	14494
  2077  0000                     _IVTADU	set	14495
  2078  0000                     _PIR6bits	set	14758
  2079  0000                     _PIR4bits	set	14756
  2080  0000                     _PIE8bits	set	14744
  2081  0000                     _PIR8bits	set	14760
  2082  0000                     _SCANPR	set	14839
  2083  0000                     _DMA2PR	set	14836
  2084  0000                     _DMA1PR	set	14835
  2085  0000                     _MAINPR	set	14834
  2086  0000                     _ISRPR	set	14833
  2087  0000                     _PIE2bits	set	14738
  2088  0000                     _PIR2bits	set	14754
  2089  0000                     _PIE9bits	set	14745
  2090  0000                     _PIR9bits	set	14761
  2091  0000                     _PIE6bits	set	14742
  2092  0000                     _PIE3bits	set	14739
  2093  0000                     _PMD7	set	14791
  2094  0000                     _PMD6	set	14790
  2095  0000                     _PMD5	set	14789
  2096  0000                     _PMD4	set	14788
  2097  0000                     _PMD3	set	14787
  2098  0000                     _PMD2	set	14786
  2099  0000                     _PMD1	set	14785
  2100  0000                     _PMD0	set	14784
  2101  0000                     _OSCTUNE	set	14814
  2102  0000                     _OSCFRQ	set	14815
  2103  0000                     _OSCEN	set	14813
  2104  0000                     _OSCCON3	set	14811
  2105  0000                     _OSCCON1	set	14809
  2106  0000                     _IPR8bits	set	14728
  2107  0000                     _IPR9bits	set	14729
  2108  0000                     _IPR5bits	set	14725
  2109  0000                     _IPR1bits	set	14721
  2110  0000                     _IPR3bits	set	14723
  2111  0000                     _IPR6bits	set	14726
  2112  0000                     _IPR2bits	set	14722
  2113  0000                     _PIE5bits	set	14741
  2114  0000                     _PIE1bits	set	14737
  2115  0000                     _PIR5bits	set	14757
  2116  0000                     _PIR1bits	set	14753
  2117  0000                     _PLLR	set	118496
  2118  0000                     _SPI1SDIPPS	set	15071
  2119  0000                     _U1RXPPS	set	15077
  2120  0000                     _RC6PPS	set	14870
  2121  0000                     _RC5PPS	set	14869
  2122  0000                     _INT1PPS	set	15041
  2123  0000                     _RD1PPS	set	14873
  2124  0000                     _INT0PPS	set	15040
  2125  0000                     _RC3PPS	set	14867
  2126  0000                     _RB6PPS	set	14862
  2127  0000                     _SPI1SCKPPS	set	15070
  2128  0000                     _U2RXPPS	set	15080
  2129  0000                     _SLRCONF	set	14995
  2130  0000                     _SLRCONE	set	14979
  2131  0000                     _SLRCOND	set	14963
  2132  0000                     _SLRCONC	set	14947
  2133  0000                     _SLRCONB	set	14931
  2134  0000                     _SLRCONA	set	14915
  2135  0000                     _ODCOND	set	14962
  2136  0000                     _ODCONC	set	14946
  2137  0000                     _ODCONB	set	14930
  2138  0000                     _ODCONA	set	14914
  2139  0000                     _ODCONF	set	14994
  2140  0000                     _ODCONE	set	14978
  2141  0000                     _WPUC	set	14945
  2142  0000                     _WPUA	set	14913
  2143  0000                     _WPUB	set	14929
  2144  0000                     _WPUE	set	14977
  2145  0000                     _WPUF	set	14993
  2146  0000                     _WPUD	set	14961
  2147  0000                     _ANSELA	set	14912
  2148  0000                     _ANSELF	set	14992
  2149  0000                     _ANSELE	set	14976
  2150  0000                     _ANSELB	set	14928
  2151  0000                     _ANSELC	set	14944
  2152  0000                     _ANSELD	set	14960
  2153  0000                     _DMA2SSA	set	15321
  2154  0000                     _DMA1SSA	set	15353
  2155  0000                     _DMA2DSZ	set	15310
  2156  0000                     _DMA2SSZ	set	15319
  2157  0000                     _DMA2DSA	set	15312
  2158  0000                     _DMA1DSZ	set	15342
  2159  0000                     _DMA1SSZ	set	15351
  2160  0000                     _DMA1DSA	set	15344
  2161  0000                     _DMA2CON0bits	set	15324
  2162  0000                     _DMA2CON1bits	set	15325
  2163  0000                     _DMA1CON0bits	set	15356
  2164  0000                     _DMA1CON1bits	set	15357
  2165  0000                     _DMA2CON0	set	15324
  2166  0000                     _DMA2AIRQ	set	15326
  2167  0000                     _DMA2SIRQ	set	15327
  2168  0000                     _DMA2CON1	set	15325
  2169  0000                     _DMA1CON0	set	15356
  2170  0000                     _DMA1AIRQ	set	15358
  2171  0000                     _DMA1SIRQ	set	15359
  2172  0000                     _DMA1CON1	set	15357
  2173  0000                     _CLKRCON	set	15589
  2174  0000                     _CLKRCLK	set	15590
  2175  0000                     _SPI1INTFbits	set	15642
  2176  0000                     _SPI1CON0bits	set	15636
  2177  0000                     _SPI1RXB	set	15632
  2178  0000                     _SPI1TXB	set	15633
  2179  0000                     _SPI1TCNTL	set	15634
  2180  0000                     _SPI1CON0	set	15636
  2181  0000                     _SPI1CLK	set	15644
  2182  0000                     _SPI1BAUD	set	15641
  2183  0000                     _SPI1CON2	set	15638
  2184  0000                     _SPI1CON1	set	15637
  2185  0000                     _U2RXB	set	15824
  2186  0000                     _U2TXB	set	15826
  2187  0000                     _U2ERRIE	set	15842
  2188  0000                     _U2ERRIR	set	15841
  2189  0000                     _U2UIR	set	15840
  2190  0000                     _U2FIFO	set	15839
  2191  0000                     _U2BRGH	set	15838
  2192  0000                     _U2BRGL	set	15837
  2193  0000                     _U2CON2	set	15836
  2194  0000                     _U2CON1	set	15835
  2195  0000                     _U2CON0	set	15834
  2196  0000                     _U2P3L	set	15832
  2197  0000                     _U2P2L	set	15830
  2198  0000                     _U2P1L	set	15828
  2199  0000                     _U1RXB	set	15848
  2200  0000                     _U1ERRIE	set	15866
  2201  0000                     _U1ERRIR	set	15865
  2202  0000                     _U1UIR	set	15864
  2203  0000                     _U1FIFO	set	15863
  2204  0000                     _U1BRGH	set	15862
  2205  0000                     _U1BRGL	set	15861
  2206  0000                     _U1CON2	set	15860
  2207  0000                     _U1CON1	set	15859
  2208  0000                     _U1CON0	set	15858
  2209  0000                     _U1P3H	set	15857
  2210  0000                     _U1P3L	set	15856
  2211  0000                     _U1P2H	set	15855
  2212  0000                     _U1P2L	set	15854
  2213  0000                     _U1P1H	set	15853
  2214  0000                     _U1P1L	set	15852
  2215  0000                     _FVRCON	set	16065
  2216  0000                     _ADFLTRL	set	16102
  2217  0000                     _ADFLTRH	set	16103
  2218  0000                     _ADCON0bits	set	16120
  2219  0000                     _ADCON0	set	16120
  2220  0000                     _ADCLK	set	16127
  2221  0000                     _ADACT	set	16126
  2222  0000                     _ADREF	set	16125
  2223  0000                     _ADSTAT	set	16124
  2224  0000                     _ADCON3	set	16123
  2225  0000                     _ADCON2	set	16122
  2226  0000                     _ADCON1	set	16121
  2227  0000                     _ADPREH	set	16119
  2228  0000                     _ADPREL	set	16118
  2229  0000                     _ADCAP	set	16117
  2230  0000                     _ADACQH	set	16116
  2231  0000                     _ADACQL	set	16115
  2232  0000                     _ADPCH	set	16113
  2233  0000                     _ADRPT	set	16108
  2234  0000                     _ADACCU	set	16106
  2235  0000                     _ADSTPTH	set	16101
  2236  0000                     _ADSTPTL	set	16100
  2237  0000                     _ADUTHH	set	16097
  2238  0000                     _ADUTHL	set	16096
  2239  0000                     _ADLTHH	set	16095
  2240  0000                     _ADLTHL	set	16094
  2241  0000                     _CCPTMRS1bits	set	16223
  2242  0000                     _PORTFbits	set	16335
  2243  0000                     _LATFbits	set	16319
  2244  0000                     _LATCbits	set	16316
  2245  0000                     _LATDbits	set	16317
  2246  0000                     _PORTBbits	set	16331
  2247  0000                     _T3CONbits	set	16294
  2248  0000                     _T3CON	set	16294
  2249  0000                     _TMR3L	set	16292
  2250  0000                     _TMR3H	set	16293
  2251  0000                     _T3CLK	set	16297
  2252  0000                     _T3GATE	set	16296
  2253  0000                     _T3GCON	set	16295
  2254  0000                     _T2CON	set	16300
  2255  0000                     _T2TMR	set	16298
  2256  0000                     _T2PR	set	16299
  2257  0000                     _T2RST	set	16303
  2258  0000                     _T2HLT	set	16301
  2259  0000                     _T2CLKCON	set	16302
  2260  0000                     _PWM8DCL	set	16224
  2261  0000                     _PWM8DCH	set	16225
  2262  0000                     _PWM8CON	set	16226
  2263  0000                     _LATEbits	set	16318
  2264  0000                     _T5CONbits	set	16282
  2265  0000                     _T5CON	set	16282
  2266  0000                     _TMR5L	set	16280
  2267  0000                     _TMR5H	set	16281
  2268  0000                     _T5CLK	set	16285
  2269  0000                     _T5GATE	set	16284
  2270  0000                     _T5GCON	set	16283
  2271  0000                     _T6CON	set	16276
  2272  0000                     _T6TMR	set	16274
  2273  0000                     _T6PR	set	16275
  2274  0000                     _T6RST	set	16279
  2275  0000                     _T6HLT	set	16277
  2276  0000                     _T6CLKCON	set	16278
  2277  0000                     _TRISD	set	16325
  2278  0000                     _TRISC	set	16324
  2279  0000                     _TRISB	set	16323
  2280  0000                     _TRISA	set	16322
  2281  0000                     _TRISF	set	16327
  2282  0000                     _TRISE	set	16326
  2283  0000                     _LATC	set	16316
  2284  0000                     _LATB	set	16315
  2285  0000                     _LATF	set	16319
  2286  0000                     _LATA	set	16314
  2287  0000                     _LATD	set	16317
  2288  0000                     _LATE	set	16318
  2289  0000                     _IVTLOCKbits	set	16340
  2290  0000                     _IVTLOCK	set	16340
  2291  0000                     _INTCON0bits	set	16338
  2292  0000                     _GIE	set	130711
  2293  00FBD7                     STR_64:
  2294                           
  2295                           ; BSR set to: 57
  2296  00FBD7  20                 	db	32
  2297  00FBD8  25                 	db	37
  2298  00FBD9  63                 	db	99	;'c'
  2299  00FBDA  20                 	db	32
  2300  00FBDB  2C                 	db	44
  2301  00FBDC  25                 	db	37
  2302  00FBDD  6C                 	db	108	;'l'
  2303  00FBDE  75                 	db	117	;'u'
  2304  00FBDF  2C                 	db	44
  2305  00FBE0  25                 	db	37
  2306  00FBE1  34                 	db	52	;'4'
  2307  00FBE2  2E                 	db	46
  2308  00FBE3  34                 	db	52	;'4'
  2309  00FBE4  66                 	db	102	;'f'
  2310  00FBE5  2C                 	db	44
  2311  00FBE6  25                 	db	37
  2312  00FBE7  34                 	db	52	;'4'
  2313  00FBE8  2E                 	db	46
  2314  00FBE9  34                 	db	52	;'4'
  2315  00FBEA  66                 	db	102	;'f'
  2316  00FBEB  2C                 	db	44
  2317  00FBEC  25                 	db	37
  2318  00FBED  34                 	db	52	;'4'
  2319  00FBEE  2E                 	db	46
  2320  00FBEF  34                 	db	52	;'4'
  2321  00FBF0  66                 	db	102	;'f'
  2322  00FBF1  2C                 	db	44
  2323  00FBF2  25                 	db	37
  2324  00FBF3  34                 	db	52	;'4'
  2325  00FBF4  2E                 	db	46
  2326  00FBF5  34                 	db	52	;'4'
  2327  00FBF6  66                 	db	102	;'f'
  2328  00FBF7  2C                 	db	44
  2329  00FBF8  25                 	db	37
  2330  00FBF9  34                 	db	52	;'4'
  2331  00FBFA  2E                 	db	46
  2332  00FBFB  33                 	db	51	;'3'
  2333  00FBFC  66                 	db	102	;'f'
  2334  00FBFD  2C                 	db	44
  2335  00FBFE  25                 	db	37
  2336  00FBFF  34                 	db	52	;'4'
  2337  00FC00  2E                 	db	46
  2338  00FC01  33                 	db	51	;'3'
  2339  00FC02  66                 	db	102	;'f'
  2340  00FC03  2C                 	db	44
  2341  00FC04  25                 	db	37
  2342  00FC05  34                 	db	52	;'4'
  2343  00FC06  2E                 	db	46
  2344  00FC07  33                 	db	51	;'3'
  2345  00FC08  66                 	db	102	;'f'
  2346  00FC09  2C                 	db	44
  2347  00FC0A  25                 	db	37
  2348  00FC0B  34                 	db	52	;'4'
  2349  00FC0C  2E                 	db	46
  2350  00FC0D  33                 	db	51	;'3'
  2351  00FC0E  66                 	db	102	;'f'
  2352  00FC0F  2C                 	db	44
  2353  00FC10  25                 	db	37
  2354  00FC11  34                 	db	52	;'4'
  2355  00FC12  2E                 	db	46
  2356  00FC13  33                 	db	51	;'3'
  2357  00FC14  66                 	db	102	;'f'
  2358  00FC15  2C                 	db	44
  2359  00FC16  25                 	db	37
  2360  00FC17  34                 	db	52	;'4'
  2361  00FC18  2E                 	db	46
  2362  00FC19  33                 	db	51	;'3'
  2363  00FC1A  66                 	db	102	;'f'
  2364  00FC1B  2C                 	db	44
  2365  00FC1C  25                 	db	37
  2366  00FC1D  64                 	db	100	;'d'
  2367  00FC1E  2C                 	db	44
  2368  00FC1F  25                 	db	37
  2369  00FC20  64                 	db	100	;'d'
  2370  00FC21  2C                 	db	44
  2371  00FC22  25                 	db	37
  2372  00FC23  32                 	db	50	;'2'
  2373  00FC24  2E                 	db	46
  2374  00FC25  36                 	db	54	;'6'
  2375  00FC26  66                 	db	102	;'f'
  2376  00FC27  2C                 	db	44
  2377  00FC28  25                 	db	37
  2378  00FC29  34                 	db	52	;'4'
  2379  00FC2A  2E                 	db	46
  2380  00FC2B  33                 	db	51	;'3'
  2381  00FC2C  66                 	db	102	;'f'
  2382  00FC2D  2C                 	db	44
  2383  00FC2E  25                 	db	37
  2384  00FC2F  64                 	db	100	;'d'
  2385  00FC30  2C                 	db	44
  2386  00FC31  25                 	db	37
  2387  00FC32  64                 	db	100	;'d'
  2388  00FC33  2C                 	db	44
  2389  00FC34  25                 	db	37
  2390  00FC35  6C                 	db	108	;'l'
  2391  00FC36  75                 	db	117	;'u'
  2392  00FC37  2C                 	db	44
  2393  00FC38  25                 	db	37
  2394  00FC39  6C                 	db	108	;'l'
  2395  00FC3A  75                 	db	117	;'u'
  2396  00FC3B  2C                 	db	44
  2397  00FC3C  25                 	db	37
  2398  00FC3D  34                 	db	52	;'4'
  2399  00FC3E  2E                 	db	46
  2400  00FC3F  33                 	db	51	;'3'
  2401  00FC40  66                 	db	102	;'f'
  2402  00FC41  2C                 	db	44
  2403  00FC42  25                 	db	37
  2404  00FC43  34                 	db	52	;'4'
  2405  00FC44  2E                 	db	46
  2406  00FC45  33                 	db	51	;'3'
  2407  00FC46  66                 	db	102	;'f'
  2408  00FC47  2C                 	db	44
  2409  00FC48  25                 	db	37
  2410  00FC49  34                 	db	52	;'4'
  2411  00FC4A  2E                 	db	46
  2412  00FC4B  33                 	db	51	;'3'
  2413  00FC4C  66                 	db	102	;'f'
  2414  00FC4D  0D                 	db	13
  2415  00FC4E  0A                 	db	10
  2416  00FC4F  00                 	db	0
  2417  00FC50                     STR_17:
  2418                           
  2419                           ; BSR set to: 57
  2420  00FC50  52                 	db	82	;'R'
  2421  00FC51  31                 	db	49	;'1'
  2422  00FC52  20                 	db	32
  2423  00FC53  25                 	db	37
  2424  00FC54  32                 	db	50	;'2'
  2425  00FC55  2E                 	db	46
  2426  00FC56  33                 	db	51	;'3'
  2427  00FC57  66                 	db	102	;'f'
  2428  00FC58  20                 	db	32
  2429  00FC59  25                 	db	37
  2430  00FC5A  33                 	db	51	;'3'
  2431  00FC5B  2E                 	db	46
  2432  00FC5C  34                 	db	52	;'4'
  2433  00FC5D  66                 	db	102	;'f'
  2434  00FC5E  20                 	db	32
  2435  00FC5F  20                 	db	32
  2436  00FC60  20                 	db	32
  2437  00FC61  20                 	db	32
  2438  00FC62  20                 	db	32
  2439  00FC63  20                 	db	32
  2440  00FC64  20                 	db	32
  2441  00FC65  20                 	db	32
  2442  00FC66  20                 	db	32
  2443  00FC67  20                 	db	32
  2444  00FC68  20                 	db	32
  2445  00FC69  00                 	db	0
  2446  00FC6A                     STR_18:
  2447                           
  2448                           ; BSR set to: 57
  2449  00FC6A  52                 	db	82	;'R'
  2450  00FC6B  32                 	db	50	;'2'
  2451  00FC6C  20                 	db	32
  2452  00FC6D  25                 	db	37
  2453  00FC6E  32                 	db	50	;'2'
  2454  00FC6F  2E                 	db	46
  2455  00FC70  33                 	db	51	;'3'
  2456  00FC71  66                 	db	102	;'f'
  2457  00FC72  20                 	db	32
  2458  00FC73  25                 	db	37
  2459  00FC74  33                 	db	51	;'3'
  2460  00FC75  2E                 	db	46
  2461  00FC76  34                 	db	52	;'4'
  2462  00FC77  66                 	db	102	;'f'
  2463  00FC78  20                 	db	32
  2464  00FC79  20                 	db	32
  2465  00FC7A  20                 	db	32
  2466  00FC7B  20                 	db	32
  2467  00FC7C  20                 	db	32
  2468  00FC7D  20                 	db	32
  2469  00FC7E  20                 	db	32
  2470  00FC7F  20                 	db	32
  2471  00FC80  20                 	db	32
  2472  00FC81  20                 	db	32
  2473  00FC82  20                 	db	32
  2474  00FC83  00                 	db	0
  2475  00FC84                     STR_9:
  2476                           
  2477                           ; BSR set to: 57
  2478  00FC84  53                 	db	83	;'S'
  2479  00FC85  20                 	db	32
  2480  00FC86  53                 	db	83	;'S'
  2481  00FC87  25                 	db	37
  2482  00FC88  63                 	db	99	;'c'
  2483  00FC89  43                 	db	67	;'C'
  2484  00FC8A  20                 	db	32
  2485  00FC8B  25                 	db	37
  2486  00FC8C  64                 	db	100	;'d'
  2487  00FC8D  20                 	db	32
  2488  00FC8E  25                 	db	37
  2489  00FC8F  32                 	db	50	;'2'
  2490  00FC90  2E                 	db	46
  2491  00FC91  34                 	db	52	;'4'
  2492  00FC92  66                 	db	102	;'f'
  2493  00FC93  20                 	db	32
  2494  00FC94  20                 	db	32
  2495  00FC95  20                 	db	32
  2496  00FC96  20                 	db	32
  2497  00FC97  20                 	db	32
  2498  00FC98  20                 	db	32
  2499  00FC99  20                 	db	32
  2500  00FC9A  20                 	db	32
  2501  00FC9B  20                 	db	32
  2502  00FC9C  20                 	db	32
  2503  00FC9D  00                 	db	0
  2504  00FC9E                     
  2505                           ; BSR set to: 57
  2506  00FC9E  20                 	db	32
  2507  00FC9F  4D                 	db	77	;'M'
  2508  00FCA0  65                 	db	101	;'e'
  2509  00FCA1  73                 	db	115	;'s'
  2510  00FCA2  67                 	db	103	;'g'
  2511  00FCA3  20                 	db	32
  2512  00FCA4  25                 	db	37
  2513  00FCA5  64                 	db	100	;'d'
  2514  00FCA6  20                 	db	32
  2515  00FCA7  53                 	db	83	;'S'
  2516  00FCA8  74                 	db	116	;'t'
  2517  00FCA9  61                 	db	97	;'a'
  2518  00FCAA  63                 	db	99	;'c'
  2519  00FCAB  6B                 	db	107	;'k'
  2520  00FCAC  20                 	db	32
  2521  00FCAD  25                 	db	37
  2522  00FCAE  64                 	db	100	;'d'
  2523  00FCAF  20                 	db	32
  2524  00FCB0  20                 	db	32
  2525  00FCB1  20                 	db	32
  2526  00FCB2  20                 	db	32
  2527  00FCB3  20                 	db	32
  2528  00FCB4  20                 	db	32
  2529  00FCB5  00                 	db	0
  2530  00FCB6                     STR_37:
  2531                           
  2532                           ; BSR set to: 57
  2533  00FCB6  45                 	db	69	;'E'
  2534  00FCB7  53                 	db	83	;'S'
  2535  00FCB8  52                 	db	82	;'R'
  2536  00FCB9  20                 	db	32
  2537  00FCBA  20                 	db	32
  2538  00FCBB  25                 	db	37
  2539  00FCBC  32                 	db	50	;'2'
  2540  00FCBD  2E                 	db	46
  2541  00FCBE  36                 	db	54	;'6'
  2542  00FCBF  66                 	db	102	;'f'
  2543  00FCC0  20                 	db	32
  2544  00FCC1  20                 	db	32
  2545  00FCC2  20                 	db	32
  2546  00FCC3  20                 	db	32
  2547  00FCC4  20                 	db	32
  2548  00FCC5  20                 	db	32
  2549  00FCC6  20                 	db	32
  2550  00FCC7  20                 	db	32
  2551  00FCC8  20                 	db	32
  2552  00FCC9  20                 	db	32
  2553  00FCCA  20                 	db	32
  2554  00FCCB  20                 	db	32
  2555  00FCCC  00                 	db	0
  2556  00FCCD                     STR_36:
  2557                           
  2558                           ; BSR set to: 57
  2559  00FCCD  53                 	db	83	;'S'
  2560  00FCCE  25                 	db	37
  2561  00FCCF  63                 	db	99	;'c'
  2562  00FCD0  43                 	db	67	;'C'
  2563  00FCD1  20                 	db	32
  2564  00FCD2  25                 	db	37
  2565  00FCD3  64                 	db	100	;'d'
  2566  00FCD4  20                 	db	32
  2567  00FCD5  52                 	db	82	;'R'
  2568  00FCD6  55                 	db	85	;'U'
  2569  00FCD7  4E                 	db	78	;'N'
  2570  00FCD8  20                 	db	32
  2571  00FCD9  25                 	db	37
  2572  00FCDA  64                 	db	100	;'d'
  2573  00FCDB  20                 	db	32
  2574  00FCDC  20                 	db	32
  2575  00FCDD  20                 	db	32
  2576  00FCDE  20                 	db	32
  2577  00FCDF  20                 	db	32
  2578  00FCE0  20                 	db	32
  2579  00FCE1  20                 	db	32
  2580  00FCE2  20                 	db	32
  2581  00FCE3  00                 	db	0
  2582  00FCE4                     STR_34:
  2583                           
  2584                           ; BSR set to: 57
  2585  00FCE4  42                 	db	66	;'B'
  2586  00FCE5  41                 	db	65	;'A'
  2587  00FCE6  54                 	db	84	;'T'
  2588  00FCE7  54                 	db	84	;'T'
  2589  00FCE8  20                 	db	32
  2590  00FCE9  50                 	db	80	;'P'
  2591  00FCEA  57                 	db	87	;'W'
  2592  00FCEB  52                 	db	82	;'R'
  2593  00FCEC  20                 	db	32
  2594  00FCED  25                 	db	37
  2595  00FCEE  33                 	db	51	;'3'
  2596  00FCEF  2E                 	db	46
  2597  00FCF0  32                 	db	50	;'2'
  2598  00FCF1  66                 	db	102	;'f'
  2599  00FCF2  20                 	db	32
  2600  00FCF3  20                 	db	32
  2601  00FCF4  20                 	db	32
  2602  00FCF5  20                 	db	32
  2603  00FCF6  20                 	db	32
  2604  00FCF7  20                 	db	32
  2605  00FCF8  20                 	db	32
  2606  00FCF9  20                 	db	32
  2607  00FCFA  00                 	db	0
  2608  00FCFB                     STR_38:
  2609                           
  2610                           ; BSR set to: 57
  2611  00FCFB  52                 	db	82	;'R'
  2612  00FCFC  31                 	db	49	;'1'
  2613  00FCFD  20                 	db	32
  2614  00FCFE  25                 	db	37
  2615  00FCFF  32                 	db	50	;'2'
  2616  00FD00  2E                 	db	46
  2617  00FD01  33                 	db	51	;'3'
  2618  00FD02  66                 	db	102	;'f'
  2619  00FD03  20                 	db	32
  2620  00FD04  25                 	db	37
  2621  00FD05  33                 	db	51	;'3'
  2622  00FD06  2E                 	db	46
  2623  00FD07  34                 	db	52	;'4'
  2624  00FD08  66                 	db	102	;'f'
  2625  00FD09  20                 	db	32
  2626  00FD0A  20                 	db	32
  2627  00FD0B  20                 	db	32
  2628  00FD0C  20                 	db	32
  2629  00FD0D  20                 	db	32
  2630  00FD0E  20                 	db	32
  2631  00FD0F  20                 	db	32
  2632  00FD10  20                 	db	32
  2633  00FD11  00                 	db	0
  2634  00FD12                     STR_39:
  2635                           
  2636                           ; BSR set to: 57
  2637  00FD12  52                 	db	82	;'R'
  2638  00FD13  32                 	db	50	;'2'
  2639  00FD14  20                 	db	32
  2640  00FD15  25                 	db	37
  2641  00FD16  32                 	db	50	;'2'
  2642  00FD17  2E                 	db	46
  2643  00FD18  33                 	db	51	;'3'
  2644  00FD19  66                 	db	102	;'f'
  2645  00FD1A  20                 	db	32
  2646  00FD1B  25                 	db	37
  2647  00FD1C  33                 	db	51	;'3'
  2648  00FD1D  2E                 	db	46
  2649  00FD1E  34                 	db	52	;'4'
  2650  00FD1F  66                 	db	102	;'f'
  2651  00FD20  20                 	db	32
  2652  00FD21  20                 	db	32
  2653  00FD22  20                 	db	32
  2654  00FD23  20                 	db	32
  2655  00FD24  20                 	db	32
  2656  00FD25  20                 	db	32
  2657  00FD26  20                 	db	32
  2658  00FD27  20                 	db	32
  2659  00FD28  00                 	db	0
  2660  00FD29                     STR_35:
  2661                           
  2662                           ; BSR set to: 57
  2663  00FD29  42                 	db	66	;'B'
  2664  00FD2A  41                 	db	65	;'A'
  2665  00FD2B  48                 	db	72	;'H'
  2666  00FD2C  20                 	db	32
  2667  00FD2D  25                 	db	37
  2668  00FD2E  33                 	db	51	;'3'
  2669  00FD2F  2E                 	db	46
  2670  00FD30  32                 	db	50	;'2'
  2671  00FD31  66                 	db	102	;'f'
  2672  00FD32  20                 	db	32
  2673  00FD33  50                 	db	80	;'P'
  2674  00FD34  25                 	db	37
  2675  00FD35  33                 	db	51	;'3'
  2676  00FD36  2E                 	db	46
  2677  00FD37  32                 	db	50	;'2'
  2678  00FD38  66                 	db	102	;'f'
  2679  00FD39  20                 	db	32
  2680  00FD3A  20                 	db	32
  2681  00FD3B  20                 	db	32
  2682  00FD3C  20                 	db	32
  2683  00FD3D  20                 	db	32
  2684  00FD3E  20                 	db	32
  2685  00FD3F  00                 	db	0
  2686  00FD40                     STR_16:
  2687                           
  2688                           ; BSR set to: 57
  2689  00FD40  45                 	db	69	;'E'
  2690  00FD41  53                 	db	83	;'S'
  2691  00FD42  52                 	db	82	;'R'
  2692  00FD43  20                 	db	32
  2693  00FD44  20                 	db	32
  2694  00FD45  25                 	db	37
  2695  00FD46  32                 	db	50	;'2'
  2696  00FD47  2E                 	db	46
  2697  00FD48  36                 	db	54	;'6'
  2698  00FD49  66                 	db	102	;'f'
  2699  00FD4A  20                 	db	32
  2700  00FD4B  20                 	db	32
  2701  00FD4C  20                 	db	32
  2702  00FD4D  20                 	db	32
  2703  00FD4E  20                 	db	32
  2704  00FD4F  20                 	db	32
  2705  00FD50  20                 	db	32
  2706  00FD51  20                 	db	32
  2707  00FD52  20                 	db	32
  2708  00FD53  20                 	db	32
  2709  00FD54  20                 	db	32
  2710  00FD55  00                 	db	0
  2711  00FD56                     STR_10:
  2712                           
  2713                           ; BSR set to: 57
  2714  00FD56  53                 	db	83	;'S'
  2715  00FD57  74                 	db	116	;'t'
  2716  00FD58  61                 	db	97	;'a'
  2717  00FD59  74                 	db	116	;'t'
  2718  00FD5A  69                 	db	105	;'i'
  2719  00FD5B  63                 	db	99	;'c'
  2720  00FD5C  20                 	db	32
  2721  00FD5D  53                 	db	83	;'S'
  2722  00FD5E  4F                 	db	79	;'O'
  2723  00FD5F  43                 	db	67	;'C'
  2724  00FD60  20                 	db	32
  2725  00FD61  25                 	db	37
  2726  00FD62  64                 	db	100	;'d'
  2727  00FD63  20                 	db	32
  2728  00FD64  20                 	db	32
  2729  00FD65  20                 	db	32
  2730  00FD66  20                 	db	32
  2731  00FD67  20                 	db	32
  2732  00FD68  20                 	db	32
  2733  00FD69  20                 	db	32
  2734  00FD6A  20                 	db	32
  2735  00FD6B  00                 	db	0
  2736  00FD6C                     STR_31:
  2737                           
  2738                           ; BSR set to: 57
  2739  00FD6C  42                 	db	66	;'B'
  2740  00FD6D  41                 	db	65	;'A'
  2741  00FD6E  54                 	db	84	;'T'
  2742  00FD6F  20                 	db	32
  2743  00FD70  49                 	db	73	;'I'
  2744  00FD71  57                 	db	87	;'W'
  2745  00FD72  48                 	db	72	;'H'
  2746  00FD73  20                 	db	32
  2747  00FD74  25                 	db	37
  2748  00FD75  34                 	db	52	;'4'
  2749  00FD76  2E                 	db	46
  2750  00FD77  31                 	db	49	;'1'
  2751  00FD78  66                 	db	102	;'f'
  2752  00FD79  20                 	db	32
  2753  00FD7A  20                 	db	32
  2754  00FD7B  20                 	db	32
  2755  00FD7C  20                 	db	32
  2756  00FD7D  20                 	db	32
  2757  00FD7E  20                 	db	32
  2758  00FD7F  20                 	db	32
  2759  00FD80  20                 	db	32
  2760  00FD81  00                 	db	0
  2761  00FD82                     STR_32:
  2762                           
  2763                           ; BSR set to: 57
  2764  00FD82  42                 	db	66	;'B'
  2765  00FD83  41                 	db	65	;'A'
  2766  00FD84  54                 	db	84	;'T'
  2767  00FD85  20                 	db	32
  2768  00FD86  4F                 	db	79	;'O'
  2769  00FD87  57                 	db	87	;'W'
  2770  00FD88  48                 	db	72	;'H'
  2771  00FD89  20                 	db	32
  2772  00FD8A  25                 	db	37
  2773  00FD8B  34                 	db	52	;'4'
  2774  00FD8C  2E                 	db	46
  2775  00FD8D  31                 	db	49	;'1'
  2776  00FD8E  66                 	db	102	;'f'
  2777  00FD8F  20                 	db	32
  2778  00FD90  20                 	db	32
  2779  00FD91  20                 	db	32
  2780  00FD92  20                 	db	32
  2781  00FD93  20                 	db	32
  2782  00FD94  20                 	db	32
  2783  00FD95  20                 	db	32
  2784  00FD96  20                 	db	32
  2785  00FD97  00                 	db	0
  2786  00FD98                     STR_33:
  2787                           
  2788                           ; BSR set to: 57
  2789  00FD98  42                 	db	66	;'B'
  2790  00FD99  41                 	db	65	;'A'
  2791  00FD9A  54                 	db	84	;'T'
  2792  00FD9B  20                 	db	32
  2793  00FD9C  54                 	db	84	;'T'
  2794  00FD9D  57                 	db	87	;'W'
  2795  00FD9E  48                 	db	72	;'H'
  2796  00FD9F  20                 	db	32
  2797  00FDA0  25                 	db	37
  2798  00FDA1  34                 	db	52	;'4'
  2799  00FDA2  2E                 	db	46
  2800  00FDA3  31                 	db	49	;'1'
  2801  00FDA4  66                 	db	102	;'f'
  2802  00FDA5  20                 	db	32
  2803  00FDA6  20                 	db	32
  2804  00FDA7  20                 	db	32
  2805  00FDA8  20                 	db	32
  2806  00FDA9  20                 	db	32
  2807  00FDAA  20                 	db	32
  2808  00FDAB  20                 	db	32
  2809  00FDAC  20                 	db	32
  2810  00FDAD  00                 	db	0
  2811  00FDAE                     STR_27:
  2812                           
  2813                           ; BSR set to: 57
  2814  00FDAE  49                 	db	73	;'I'
  2815  00FDAF  4E                 	db	78	;'N'
  2816  00FDB0  56                 	db	86	;'V'
  2817  00FDB1  20                 	db	32
  2818  00FDB2  20                 	db	32
  2819  00FDB3  57                 	db	87	;'W'
  2820  00FDB4  48                 	db	72	;'H'
  2821  00FDB5  20                 	db	32
  2822  00FDB6  25                 	db	37
  2823  00FDB7  33                 	db	51	;'3'
  2824  00FDB8  2E                 	db	46
  2825  00FDB9  32                 	db	50	;'2'
  2826  00FDBA  66                 	db	102	;'f'
  2827  00FDBB  20                 	db	32
  2828  00FDBC  20                 	db	32
  2829  00FDBD  20                 	db	32
  2830  00FDBE  20                 	db	32
  2831  00FDBF  20                 	db	32
  2832  00FDC0  20                 	db	32
  2833  00FDC1  20                 	db	32
  2834  00FDC2  20                 	db	32
  2835  00FDC3  00                 	db	0
  2836  00FDC4                     STR_26:
  2837                           
  2838                           ; BSR set to: 57
  2839  00FDC4  4C                 	db	76	;'L'
  2840  00FDC5  4F                 	db	79	;'O'
  2841  00FDC6  41                 	db	65	;'A'
  2842  00FDC7  44                 	db	68	;'D'
  2843  00FDC8  20                 	db	32
  2844  00FDC9  57                 	db	87	;'W'
  2845  00FDCA  48                 	db	72	;'H'
  2846  00FDCB  20                 	db	32
  2847  00FDCC  25                 	db	37
  2848  00FDCD  33                 	db	51	;'3'
  2849  00FDCE  2E                 	db	46
  2850  00FDCF  32                 	db	50	;'2'
  2851  00FDD0  66                 	db	102	;'f'
  2852  00FDD1  20                 	db	32
  2853  00FDD2  20                 	db	32
  2854  00FDD3  20                 	db	32
  2855  00FDD4  20                 	db	32
  2856  00FDD5  20                 	db	32
  2857  00FDD6  20                 	db	32
  2858  00FDD7  20                 	db	32
  2859  00FDD8  20                 	db	32
  2860  00FDD9  00                 	db	0
  2861  00FDDA                     STR_25:
  2862                           
  2863                           ; BSR set to: 57
  2864  00FDDA  50                 	db	80	;'P'
  2865  00FDDB  56                 	db	86	;'V'
  2866  00FDDC  20                 	db	32
  2867  00FDDD  25                 	db	37
  2868  00FDDE  63                 	db	99	;'c'
  2869  00FDDF  20                 	db	32
  2870  00FDE0  57                 	db	87	;'W'
  2871  00FDE1  48                 	db	72	;'H'
  2872  00FDE2  20                 	db	32
  2873  00FDE3  25                 	db	37
  2874  00FDE4  33                 	db	51	;'3'
  2875  00FDE5  2E                 	db	46
  2876  00FDE6  32                 	db	50	;'2'
  2877  00FDE7  66                 	db	102	;'f'
  2878  00FDE8  20                 	db	32
  2879  00FDE9  20                 	db	32
  2880  00FDEA  20                 	db	32
  2881  00FDEB  20                 	db	32
  2882  00FDEC  20                 	db	32
  2883  00FDED  20                 	db	32
  2884  00FDEE  20                 	db	32
  2885  00FDEF  00                 	db	0
  2886  00FDF0                     STR_24:
  2887                           
  2888                           ; BSR set to: 57
  2889  00FDF0  49                 	db	73	;'I'
  2890  00FDF1  4E                 	db	78	;'N'
  2891  00FDF2  56                 	db	86	;'V'
  2892  00FDF3  20                 	db	32
  2893  00FDF4  20                 	db	32
  2894  00FDF5  50                 	db	80	;'P'
  2895  00FDF6  57                 	db	87	;'W'
  2896  00FDF7  52                 	db	82	;'R'
  2897  00FDF8  20                 	db	32
  2898  00FDF9  25                 	db	37
  2899  00FDFA  33                 	db	51	;'3'
  2900  00FDFB  2E                 	db	46
  2901  00FDFC  32                 	db	50	;'2'
  2902  00FDFD  66                 	db	102	;'f'
  2903  00FDFE  20                 	db	32
  2904  00FDFF  20                 	db	32
  2905  00FE00  20                 	db	32
  2906  00FE01  20                 	db	32
  2907  00FE02  20                 	db	32
  2908  00FE03  20                 	db	32
  2909  00FE04  20                 	db	32
  2910  00FE05  00                 	db	0
  2911  00FE06                     STR_23:
  2912                           
  2913                           ; BSR set to: 57
  2914  00FE06  4C                 	db	76	;'L'
  2915  00FE07  4F                 	db	79	;'O'
  2916  00FE08  41                 	db	65	;'A'
  2917  00FE09  44                 	db	68	;'D'
  2918  00FE0A  20                 	db	32
  2919  00FE0B  50                 	db	80	;'P'
  2920  00FE0C  57                 	db	87	;'W'
  2921  00FE0D  52                 	db	82	;'R'
  2922  00FE0E  20                 	db	32
  2923  00FE0F  25                 	db	37
  2924  00FE10  33                 	db	51	;'3'
  2925  00FE11  2E                 	db	46
  2926  00FE12  32                 	db	50	;'2'
  2927  00FE13  66                 	db	102	;'f'
  2928  00FE14  20                 	db	32
  2929  00FE15  20                 	db	32
  2930  00FE16  20                 	db	32
  2931  00FE17  20                 	db	32
  2932  00FE18  20                 	db	32
  2933  00FE19  20                 	db	32
  2934  00FE1A  20                 	db	32
  2935  00FE1B  00                 	db	0
  2936  00FE1C                     STR_22:
  2937                           
  2938                           ; BSR set to: 57
  2939  00FE1C  50                 	db	80	;'P'
  2940  00FE1D  56                 	db	86	;'V'
  2941  00FE1E  20                 	db	32
  2942  00FE1F  25                 	db	37
  2943  00FE20  63                 	db	99	;'c'
  2944  00FE21  20                 	db	32
  2945  00FE22  50                 	db	80	;'P'
  2946  00FE23  57                 	db	87	;'W'
  2947  00FE24  52                 	db	82	;'R'
  2948  00FE25  20                 	db	32
  2949  00FE26  25                 	db	37
  2950  00FE27  33                 	db	51	;'3'
  2951  00FE28  2E                 	db	46
  2952  00FE29  32                 	db	50	;'2'
  2953  00FE2A  66                 	db	102	;'f'
  2954  00FE2B  20                 	db	32
  2955  00FE2C  20                 	db	32
  2956  00FE2D  20                 	db	32
  2957  00FE2E  20                 	db	32
  2958  00FE2F  20                 	db	32
  2959  00FE30  20                 	db	32
  2960  00FE31  00                 	db	0
  2961  00FE32                     STR_11:
  2962                           
  2963                           ; BSR set to: 57
  2964  00FE32  42                 	db	66	;'B'
  2965  00FE33  61                 	db	97	;'a'
  2966  00FE34  74                 	db	116	;'t'
  2967  00FE35  74                 	db	116	;'t'
  2968  00FE36  65                 	db	101	;'e'
  2969  00FE37  72                 	db	114	;'r'
  2970  00FE38  79                 	db	121	;'y'
  2971  00FE39  20                 	db	32
  2972  00FE3A  41                 	db	65	;'A'
  2973  00FE3B  68                 	db	104	;'h'
  2974  00FE3C  20                 	db	32
  2975  00FE3D  25                 	db	37
  2976  00FE3E  33                 	db	51	;'3'
  2977  00FE3F  2E                 	db	46
  2978  00FE40  32                 	db	50	;'2'
  2979  00FE41  66                 	db	102	;'f'
  2980  00FE42  20                 	db	32
  2981  00FE43  20                 	db	32
  2982  00FE44  20                 	db	32
  2983  00FE45  20                 	db	32
  2984  00FE46  20                 	db	32
  2985  00FE47  00                 	db	0
  2986  00FE48                     STR_29:
  2987                           
  2988                           ; BSR set to: 57
  2989  00FE48  42                 	db	66	;'B'
  2990  00FE49  56                 	db	86	;'V'
  2991  00FE4A  20                 	db	32
  2992  00FE4B  25                 	db	37
  2993  00FE4C  32                 	db	50	;'2'
  2994  00FE4D  2E                 	db	46
  2995  00FE4E  32                 	db	50	;'2'
  2996  00FE4F  66                 	db	102	;'f'
  2997  00FE50  20                 	db	32
  2998  00FE51  42                 	db	66	;'B'
  2999  00FE52  41                 	db	65	;'A'
  3000  00FE53  20                 	db	32
  3001  00FE54  25                 	db	37
  3002  00FE55  32                 	db	50	;'2'
  3003  00FE56  2E                 	db	46
  3004  00FE57  32                 	db	50	;'2'
  3005  00FE58  66                 	db	102	;'f'
  3006  00FE59  20                 	db	32
  3007  00FE5A  20                 	db	32
  3008  00FE5B  20                 	db	32
  3009  00FE5C  20                 	db	32
  3010  00FE5D  00                 	db	0
  3011  00FE5E                     STR_30:
  3012                           
  3013                           ; BSR set to: 57
  3014  00FE5E  43                 	db	67	;'C'
  3015  00FE5F  56                 	db	86	;'V'
  3016  00FE60  20                 	db	32
  3017  00FE61  25                 	db	37
  3018  00FE62  32                 	db	50	;'2'
  3019  00FE63  2E                 	db	46
  3020  00FE64  32                 	db	50	;'2'
  3021  00FE65  66                 	db	102	;'f'
  3022  00FE66  20                 	db	32
  3023  00FE67  4C                 	db	76	;'L'
  3024  00FE68  41                 	db	65	;'A'
  3025  00FE69  20                 	db	32
  3026  00FE6A  25                 	db	37
  3027  00FE6B  32                 	db	50	;'2'
  3028  00FE6C  2E                 	db	46
  3029  00FE6D  32                 	db	50	;'2'
  3030  00FE6E  66                 	db	102	;'f'
  3031  00FE6F  20                 	db	32
  3032  00FE70  20                 	db	32
  3033  00FE71  20                 	db	32
  3034  00FE72  20                 	db	32
  3035  00FE73  00                 	db	0
  3036  00FE74                     STR_28:
  3037                           
  3038                           ; BSR set to: 57
  3039  00FE74  50                 	db	80	;'P'
  3040  00FE75  56                 	db	86	;'V'
  3041  00FE76  20                 	db	32
  3042  00FE77  25                 	db	37
  3043  00FE78  32                 	db	50	;'2'
  3044  00FE79  2E                 	db	46
  3045  00FE7A  32                 	db	50	;'2'
  3046  00FE7B  66                 	db	102	;'f'
  3047  00FE7C  20                 	db	32
  3048  00FE7D  50                 	db	80	;'P'
  3049  00FE7E  41                 	db	65	;'A'
  3050  00FE7F  20                 	db	32
  3051  00FE80  25                 	db	37
  3052  00FE81  32                 	db	50	;'2'
  3053  00FE82  2E                 	db	46
  3054  00FE83  32                 	db	50	;'2'
  3055  00FE84  66                 	db	102	;'f'
  3056  00FE85  20                 	db	32
  3057  00FE86  20                 	db	32
  3058  00FE87  20                 	db	32
  3059  00FE88  20                 	db	32
  3060  00FE89  00                 	db	0
  3061  00FE8A                     STR_40:
  3062                           
  3063                           ; BSR set to: 57
  3064  00FE8A  25                 	db	37
  3065  00FE8B  64                 	db	100	;'d'
  3066  00FE8C  20                 	db	32
  3067  00FE8D  25                 	db	37
  3068  00FE8E  32                 	db	50	;'2'
  3069  00FE8F  2E                 	db	46
  3070  00FE90  34                 	db	52	;'4'
  3071  00FE91  66                 	db	102	;'f'
  3072  00FE92  2C                 	db	44
  3073  00FE93  20                 	db	32
  3074  00FE94  25                 	db	37
  3075  00FE95  64                 	db	100	;'d'
  3076  00FE96  20                 	db	32
  3077  00FE97  20                 	db	32
  3078  00FE98  54                 	db	84	;'T'
  3079  00FE99  52                 	db	82	;'R'
  3080  00FE9A  49                 	db	73	;'I'
  3081  00FE9B  4D                 	db	77	;'M'
  3082  00FE9C  20                 	db	32
  3083  00FE9D  20                 	db	32
  3084  00FE9E  20                 	db	32
  3085  00FE9F  00                 	db	0
  3086  00FEA0                     STR_5:
  3087                           
  3088                           ; BSR set to: 57
  3089  00FEA0  20                 	db	32
  3090  00FEA1  20                 	db	32
  3091  00FEA2  20                 	db	32
  3092  00FEA3  20                 	db	32
  3093  00FEA4  20                 	db	32
  3094  00FEA5  20                 	db	32
  3095  00FEA6  20                 	db	32
  3096  00FEA7  20                 	db	32
  3097  00FEA8  20                 	db	32
  3098  00FEA9  20                 	db	32
  3099  00FEAA  20                 	db	32
  3100  00FEAB  20                 	db	32
  3101  00FEAC  20                 	db	32
  3102  00FEAD  20                 	db	32
  3103  00FEAE  20                 	db	32
  3104  00FEAF  20                 	db	32
  3105  00FEB0  20                 	db	32
  3106  00FEB1  20                 	db	32
  3107  00FEB2  20                 	db	32
  3108  00FEB3  20                 	db	32
  3109  00FEB4  00                 	db	0
  3110  00FEB5                     STR_8:
  3111                           
  3112                           ; BSR set to: 57
  3113  00FEB5  42                 	db	66	;'B'
  3114  00FEB6  56                 	db	86	;'V'
  3115  00FEB7  20                 	db	32
  3116  00FEB8  25                 	db	37
  3117  00FEB9  32                 	db	50	;'2'
  3118  00FEBA  2E                 	db	46
  3119  00FEBB  34                 	db	52	;'4'
  3120  00FEBC  66                 	db	102	;'f'
  3121  00FEBD  20                 	db	32
  3122  00FEBE  20                 	db	32
  3123  00FEBF  20                 	db	32
  3124  00FEC0  20                 	db	32
  3125  00FEC1  20                 	db	32
  3126  00FEC2  20                 	db	32
  3127  00FEC3  20                 	db	32
  3128  00FEC4  20                 	db	32
  3129  00FEC5  20                 	db	32
  3130  00FEC6  20                 	db	32
  3131  00FEC7  20                 	db	32
  3132  00FEC8  20                 	db	32
  3133  00FEC9  00                 	db	0
  3134  00FECA                     STR_4:
  3135                           
  3136                           ; BSR set to: 57
  3137  00FECA  20                 	db	32
  3138  00FECB  4E                 	db	78	;'N'
  3139  00FECC  53                 	db	83	;'S'
  3140  00FECD  41                 	db	65	;'A'
  3141  00FECE  53                 	db	83	;'S'
  3142  00FECF  50                 	db	80	;'P'
  3143  00FED0  4F                 	db	79	;'O'
  3144  00FED1  4F                 	db	79	;'O'
  3145  00FED2  4B                 	db	75	;'K'
  3146  00FED3  20                 	db	32
  3147  00FED4  20                 	db	32
  3148  00FED5  20                 	db	32
  3149  00FED6  20                 	db	32
  3150  00FED7  20                 	db	32
  3151  00FED8  20                 	db	32
  3152  00FED9  20                 	db	32
  3153  00FEDA  20                 	db	32
  3154  00FEDB  20                 	db	32
  3155  00FEDC  20                 	db	32
  3156  00FEDD  20                 	db	32
  3157  00FEDE  00                 	db	0
  3158  00FEDF                     STR_12:
  3159                           
  3160                           ; BSR set to: 57
  3161  00FEDF  42                 	db	66	;'B'
  3162  00FEE0  61                 	db	97	;'a'
  3163  00FEE1  74                 	db	116	;'t'
  3164  00FEE2  74                 	db	116	;'t'
  3165  00FEE3  65                 	db	101	;'e'
  3166  00FEE4  72                 	db	114	;'r'
  3167  00FEE5  79                 	db	121	;'y'
  3168  00FEE6  20                 	db	32
  3169  00FEE7  45                 	db	69	;'E'
  3170  00FEE8  53                 	db	83	;'S'
  3171  00FEE9  52                 	db	82	;'R'
  3172  00FEEA  20                 	db	32
  3173  00FEEB  20                 	db	32
  3174  00FEEC  20                 	db	32
  3175  00FEED  20                 	db	32
  3176  00FEEE  20                 	db	32
  3177  00FEEF  20                 	db	32
  3178  00FEF0  20                 	db	32
  3179  00FEF1  20                 	db	32
  3180  00FEF2  20                 	db	32
  3181  00FEF3  00                 	db	0
  3182  00FEF4                     STR_13:
  3183                           
  3184                           ; BSR set to: 57
  3185  00FEF4  43                 	db	67	;'C'
  3186  00FEF5  61                 	db	97	;'a'
  3187  00FEF6  6C                 	db	108	;'l'
  3188  00FEF7  63                 	db	99	;'c'
  3189  00FEF8  75                 	db	117	;'u'
  3190  00FEF9  6C                 	db	108	;'l'
  3191  00FEFA  61                 	db	97	;'a'
  3192  00FEFB  74                 	db	116	;'t'
  3193  00FEFC  69                 	db	105	;'i'
  3194  00FEFD  6F                 	db	111	;'o'
  3195  00FEFE  6E                 	db	110	;'n'
  3196  00FEFF  20                 	db	32
  3197  00FF00  20                 	db	32
  3198  00FF01  20                 	db	32
  3199  00FF02  20                 	db	32
  3200  00FF03  20                 	db	32
  3201  00FF04  20                 	db	32
  3202  00FF05  20                 	db	32
  3203  00FF06  20                 	db	32
  3204  00FF07  20                 	db	32
  3205  00FF08  00                 	db	0
  3206  00FF09                     STR_2:
  3207                           
  3208                           ; BSR set to: 57
  3209  00FF09  20                 	db	32
  3210  00FF0A  56                 	db	86	;'V'
  3211  00FF0B  65                 	db	101	;'e'
  3212  00FF0C  72                 	db	114	;'r'
  3213  00FF0D  73                 	db	115	;'s'
  3214  00FF0E  69                 	db	105	;'i'
  3215  00FF0F  6F                 	db	111	;'o'
  3216  00FF10  6E                 	db	110	;'n'
  3217  00FF11  20                 	db	32
  3218  00FF12  25                 	db	37
  3219  00FF13  73                 	db	115	;'s'
  3220  00FF14  20                 	db	32
  3221  00FF15  20                 	db	32
  3222  00FF16  20                 	db	32
  3223  00FF17  20                 	db	32
  3224  00FF18  20                 	db	32
  3225  00FF19  20                 	db	32
  3226  00FF1A  20                 	db	32
  3227  00FF1B  20                 	db	32
  3228  00FF1C  20                 	db	32
  3229  00FF1D  00                 	db	0
  3230  00FF1E                     STR_1:
  3231                           
  3232                           ; BSR set to: 57
  3233  00FF1E  20                 	db	32
  3234  00FF1F  4D                 	db	77	;'M'
  3235  00FF20  42                 	db	66	;'B'
  3236  00FF21  4D                 	db	77	;'M'
  3237  00FF22  43                 	db	67	;'C'
  3238  00FF23  20                 	db	32
  3239  00FF24  53                 	db	83	;'S'
  3240  00FF25  4F                 	db	79	;'O'
  3241  00FF26  4C                 	db	76	;'L'
  3242  00FF27  41                 	db	65	;'A'
  3243  00FF28  52                 	db	82	;'R'
  3244  00FF29  4D                 	db	77	;'M'
  3245  00FF2A  4F                 	db	79	;'O'
  3246  00FF2B  4E                 	db	78	;'N'
  3247  00FF2C  20                 	db	32
  3248  00FF2D  20                 	db	32
  3249  00FF2E  20                 	db	32
  3250  00FF2F  20                 	db	32
  3251  00FF30  20                 	db	32
  3252  00FF31  20                 	db	32
  3253  00FF32  00                 	db	0
  3254  00FF33                     STR_15:
  3255                           
  3256                           ; BSR set to: 57
  3257  00FF33  43                 	db	67	;'C'
  3258  00FF34  68                 	db	104	;'h'
  3259  00FF35  65                 	db	101	;'e'
  3260  00FF36  63                 	db	99	;'c'
  3261  00FF37  6B                 	db	107	;'k'
  3262  00FF38  69                 	db	105	;'i'
  3263  00FF39  6E                 	db	110	;'n'
  3264  00FF3A  67                 	db	103	;'g'
  3265  00FF3B  20                 	db	32
  3266  00FF3C  25                 	db	37
  3267  00FF3D  63                 	db	99	;'c'
  3268  00FF3E  20                 	db	32
  3269  00FF3F  25                 	db	37
  3270  00FF40  63                 	db	99	;'c'
  3271  00FF41  20                 	db	32
  3272  00FF42  20                 	db	32
  3273  00FF43  20                 	db	32
  3274  00FF44  20                 	db	32
  3275  00FF45  20                 	db	32
  3276  00FF46  20                 	db	32
  3277  00FF47  00                 	db	0
  3278  00FF48                     STR_14:
  3279                           
  3280                           ; BSR set to: 57
  3281  00FF48  43                 	db	67	;'C'
  3282  00FF49  68                 	db	104	;'h'
  3283  00FF4A  65                 	db	101	;'e'
  3284  00FF4B  63                 	db	99	;'c'
  3285  00FF4C  6B                 	db	107	;'k'
  3286  00FF4D  20                 	db	32
  3287  00FF4E  33                 	db	51	;'3'
  3288  00FF4F  30                 	db	48	;'0'
  3289  00FF50  20                 	db	32
  3290  00FF51  73                 	db	115	;'s'
  3291  00FF52  65                 	db	101	;'e'
  3292  00FF53  63                 	db	99	;'c'
  3293  00FF54  6F                 	db	111	;'o'
  3294  00FF55  6E                 	db	110	;'n'
  3295  00FF56  64                 	db	100	;'d'
  3296  00FF57  73                 	db	115	;'s'
  3297  00FF58  20                 	db	32
  3298  00FF59  20                 	db	32
  3299  00FF5A  20                 	db	32
  3300  00FF5B  20                 	db	32
  3301  00FF5C  00                 	db	0
  3302  00FF5D                     STR_47:
  3303                           
  3304                           ; BSR set to: 57
  3305  00FF5D  48                 	db	72	;'H'
  3306  00FF5E  45                 	db	69	;'E'
  3307  00FF5F  4C                 	db	76	;'L'
  3308  00FF60  50                 	db	80	;'P'
  3309  00FF61  20                 	db	32
  3310  00FF62  25                 	db	37
  3311  00FF63  73                 	db	115	;'s'
  3312  00FF64  20                 	db	32
  3313  00FF65  20                 	db	32
  3314  00FF66  20                 	db	32
  3315  00FF67  20                 	db	32
  3316  00FF68  20                 	db	32
  3317  00FF69  20                 	db	32
  3318  00FF6A  20                 	db	32
  3319  00FF6B  20                 	db	32
  3320  00FF6C  20                 	db	32
  3321  00FF6D  20                 	db	32
  3322  00FF6E  20                 	db	32
  3323  00FF6F  00                 	db	0
  3324  00FF70                     
  3325                           ; BSR set to: 57
  3326  00FF70  44                 	db	68	;'D'
  3327  00FF71  49                 	db	73	;'I'
  3328  00FF72  53                 	db	83	;'S'
  3329  00FF73  50                 	db	80	;'P'
  3330  00FF74  4C                 	db	76	;'L'
  3331  00FF75  41                 	db	65	;'A'
  3332  00FF76  59                 	db	89	;'Y'
  3333  00FF77  20                 	db	32
  3334  00FF78  25                 	db	37
  3335  00FF79  73                 	db	115	;'s'
  3336  00FF7A  20                 	db	32
  3337  00FF7B  20                 	db	32
  3338  00FF7C  20                 	db	32
  3339  00FF7D  20                 	db	32
  3340  00FF7E  20                 	db	32
  3341  00FF7F  20                 	db	32
  3342  00FF80  20                 	db	32
  3343  00FF81  20                 	db	32
  3344  00FF82  00                 	db	0
  3345  00FF83                     
  3346                           ; BSR set to: 57
  3347  00FF83  25                 	db	37
  3348  00FF84  64                 	db	100	;'d'
  3349  00FF85  20                 	db	32
  3350  00FF86  25                 	db	37
  3351  00FF87  32                 	db	50	;'2'
  3352  00FF88  2E                 	db	46
  3353  00FF89  34                 	db	52	;'4'
  3354  00FF8A  66                 	db	102	;'f'
  3355  00FF8B  2C                 	db	44
  3356  00FF8C  20                 	db	32
  3357  00FF8D  25                 	db	37
  3358  00FF8E  64                 	db	100	;'d'
  3359  00FF8F  20                 	db	32
  3360  00FF90  20                 	db	32
  3361  00FF91  20                 	db	32
  3362  00FF92  23                 	db	35
  3363  00FF93  00                 	db	0
  3364  00FF94                     STR_19:
  3365                           
  3366                           ; BSR set to: 57
  3367  00FF94  25                 	db	37
  3368  00FF95  64                 	db	100	;'d'
  3369  00FF96  20                 	db	32
  3370  00FF97  25                 	db	37
  3371  00FF98  32                 	db	50	;'2'
  3372  00FF99  2E                 	db	46
  3373  00FF9A  34                 	db	52	;'4'
  3374  00FF9B  66                 	db	102	;'f'
  3375  00FF9C  20                 	db	32
  3376  00FF9D  20                 	db	32
  3377  00FF9E  20                 	db	32
  3378  00FF9F  25                 	db	37
  3379  00FFA0  64                 	db	100	;'d'
  3380  00FFA1  20                 	db	32
  3381  00FFA2  20                 	db	32
  3382  00FFA3  00                 	db	0
  3383  00FFA4                     STR_51:
  3384                           
  3385                           ; BSR set to: 57
  3386  00FFA4  76                 	db	118	;'v'
  3387  00FFA5  74                 	db	116	;'t'
  3388  00FFA6  65                 	db	101	;'e'
  3389  00FFA7  72                 	db	114	;'r'
  3390  00FFA8  6D                 	db	109	;'m'
  3391  00FFA9  20                 	db	32
  3392  00FFAA  25                 	db	37
  3393  00FFAB  78                 	db	120	;'x'
  3394  00FFAC  3A                 	db	58	;':'
  3395  00FFAD  25                 	db	37
  3396  00FFAE  78                 	db	120	;'x'
  3397  00FFAF  20                 	db	32
  3398  00FFB0  20                 	db	32
  3399  00FFB1  20                 	db	32
  3400  00FFB2  00                 	db	0
  3401  00FFB3                     STR_45:
  3402                           
  3403                           ; BSR set to: 57
  3404  00FFB3  4A                 	db	74	;'J'
  3405  00FFB4  61                 	db	97	;'a'
  3406  00FFB5  6E                 	db	110	;'n'
  3407  00FFB6  20                 	db	32
  3408  00FFB7  20                 	db	32
  3409  00FFB8  35                 	db	53	;'5'
  3410  00FFB9  20                 	db	32
  3411  00FFBA  32                 	db	50	;'2'
  3412  00FFBB  30                 	db	48	;'0'
  3413  00FFBC  32                 	db	50	;'2'
  3414  00FFBD  30                 	db	48	;'0'
  3415  00FFBE  00                 	db	0
  3416  00FFBF                     STR_49:
  3417                           
  3418                           ; BSR set to: 57
  3419  00FFBF  25                 	db	37
  3420  00FFC0  73                 	db	115	;'s'
  3421  00FFC1  20                 	db	32
  3422  00FFC2  20                 	db	32
  3423  00FFC3  20                 	db	32
  3424  00FFC4  20                 	db	32
  3425  00FFC5  20                 	db	32
  3426  00FFC6  20                 	db	32
  3427  00FFC7  20                 	db	32
  3428  00FFC8  00                 	db	0
  3429  00FFC9                     STR_46:
  3430                           
  3431                           ; BSR set to: 57
  3432  00FFC9  31                 	db	49	;'1'
  3433  00FFCA  30                 	db	48	;'0'
  3434  00FFCB  3A                 	db	58	;':'
  3435  00FFCC  34                 	db	52	;'4'
  3436  00FFCD  33                 	db	51	;'3'
  3437  00FFCE  3A                 	db	58	;':'
  3438  00FFCF  30                 	db	48	;'0'
  3439  00FFD0  38                 	db	56	;'8'
  3440  00FFD1  00                 	db	0
  3441  00FFD2                     STR_3:
  3442                           
  3443                           ; BSR set to: 57
  3444  00FFD2  31                 	db	49	;'1'
  3445  00FFD3  2E                 	db	46
  3446  00FFD4  30                 	db	48	;'0'
  3447  00FFD5  39                 	db	57	;'9'
  3448  00FFD6  00                 	db	0
  3449  00FFD7                     STR_65:
  3450                           
  3451                           ; BSR set to: 57
  3452  00FFD7  49                 	db	73	;'I'
  3453  00FFD8  4E                 	db	78	;'N'
  3454  00FFD9  46                 	db	70	;'F'
  3455  00FFDA  00                 	db	0
  3456  00FFDB                     STR_69:
  3457                           
  3458                           ; BSR set to: 57
  3459  00FFDB  4E                 	db	78	;'N'
  3460  00FFDC  41                 	db	65	;'A'
  3461  00FFDD  4E                 	db	78	;'N'
  3462  00FFDE  00                 	db	0
  3463  00FFDF                     STR_66:
  3464                           
  3465                           ; BSR set to: 57
  3466  00FFDF  69                 	db	105	;'i'
  3467  00FFE0  6E                 	db	110	;'n'
  3468  00FFE1  66                 	db	102	;'f'
  3469  00FFE2  00                 	db	0
  3470  00FFE3                     STR_70:
  3471                           
  3472                           ; BSR set to: 57
  3473  00FFE3  6E                 	db	110	;'n'
  3474  00FFE4  61                 	db	97	;'a'
  3475  00FFE5  6E                 	db	110	;'n'
  3476  00FFE6  00                 	db	0
  3477  00FFE7                     STR_96:
  3478                           
  3479                           ; BSR set to: 57
  3480  00FFE7  6C                 	db	108	;'l'
  3481  00FFE8  58                 	db	88	;'X'
  3482  00FFE9  00                 	db	0
  3483  00FFEA                     STR_73:
  3484                           
  3485                           ; BSR set to: 57
  3486  00FFEA  6C                 	db	108	;'l'
  3487  00FFEB  64                 	db	100	;'d'
  3488  00FFEC  00                 	db	0
  3489  00FFED                     STR_82:
  3490                           
  3491                           ; BSR set to: 57
  3492  00FFED  6C                 	db	108	;'l'
  3493  00FFEE  66                 	db	102	;'f'
  3494  00FFEF  00                 	db	0
  3495  00FFF0                     STR_77:
  3496                           
  3497                           ; BSR set to: 57
  3498  00FFF0  6C                 	db	108	;'l'
  3499  00FFF1  69                 	db	105	;'i'
  3500  00FFF2  00                 	db	0
  3501  00FFF3                     STR_87:
  3502                           
  3503                           ; BSR set to: 57
  3504  00FFF3  6C                 	db	108	;'l'
  3505  00FFF4  75                 	db	117	;'u'
  3506  00FFF5  00                 	db	0
  3507  00FFF6                     STR_92:
  3508                           
  3509                           ; BSR set to: 57
  3510  00FFF6  6C                 	db	108	;'l'
  3511  00FFF7  78                 	db	120	;'x'
  3512  00FFF8  00                 	db	0
  3513  00FFF9                     STR_44:
  3514                           
  3515                           ; BSR set to: 57
  3516  00FFF9  25                 	db	37
  3517  00FFFA  63                 	db	99	;'c'
  3518  00FFFB  00                 	db	0
  3519  00FFFC                     STR_43:
  3520                           
  3521                           ; BSR set to: 57
  3522  00FFFC  25                 	db	37
  3523  00FFFD  73                 	db	115	;'s'
  3524  00FFFE  00                 	db	0
  3525  0000                     
  3526                           ; #config settings
  3527  00FFFF  00                 	db	0	; dummy byte at the end
  3528  0000                     
  3529                           	psect	cinit
  3530  01A2BA                     __pcinit:
  3531                           	opt callstack 0
  3532  01A2BA                     start_initialization:
  3533                           	opt callstack 0
  3534  01A2BA                     __initialization:
  3535                           	opt callstack 0
  3536                           
  3537                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3538                           ; load TBLPTR registers with __pidataBIGRAM
  3539  01A2BA  0E0C               	movlw	low __pidataBIGRAM
  3540  01A2BC  6EF6               	movwf	tblptrl,c
  3541  01A2BE  0E6B               	movlw	high __pidataBIGRAM
  3542  01A2C0  6EF7               	movwf	tblptrh,c
  3543  01A2C2  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3544  01A2C4  6EF8               	movwf	tblptru,c
  3545  01A2C6  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3546  01A2CA  EE20 F32B          	lfsr	2,811
  3547  01A2CE                     copy_data0:
  3548  01A2CE  0009               	tblrd		*+
  3549  01A2D0  006F FFD7 FFEE     	movff	tablat,postinc0
  3550  01A2D6  50DD               	movf	postdec2,w,c
  3551  01A2D8  50D9               	movf	fsr2l,w,c
  3552  01A2DA  E1F9               	bnz	copy_data0
  3553  01A2DC  50DA               	movf	fsr2h,w,c
  3554  01A2DE  E1F7               	bnz	copy_data0
  3555                           
  3556                           ; Initialize objects allocated to BANK1 (239 bytes)
  3557                           ; load TBLPTR registers with __pidataBANK1
  3558  01A2E0  0E16               	movlw	low __pidataBANK1
  3559  01A2E2  6EF6               	movwf	tblptrl,c
  3560  01A2E4  0E9F               	movlw	high __pidataBANK1
  3561  01A2E6  6EF7               	movwf	tblptrh,c
  3562  01A2E8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3563  01A2EA  6EF8               	movwf	tblptru,c
  3564  01A2EC  EE00  F100         	lfsr	0,__pdataBANK1
  3565  01A2F0  EE20 F0EF          	lfsr	2,239
  3566  01A2F4                     copy_data1:
  3567  01A2F4  0009               	tblrd		*+
  3568  01A2F6  006F FFD7 FFEE     	movff	tablat,postinc0
  3569  01A2FC  50DD               	movf	postdec2,w,c
  3570  01A2FE  50D9               	movf	fsr2l,w,c
  3571  01A300  E1F9               	bnz	copy_data1
  3572                           
  3573                           ; Initialize objects allocated to BANK0 (14 bytes)
  3574                           ; load TBLPTR registers with __pidataBANK0
  3575  01A302  0ED6               	movlw	low __pidataBANK0
  3576  01A304  6EF6               	movwf	tblptrl,c
  3577  01A306  0EC0               	movlw	high __pidataBANK0
  3578  01A308  6EF7               	movwf	tblptrh,c
  3579  01A30A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3580  01A30C  6EF8               	movwf	tblptru,c
  3581  01A30E  EE00  F0F0         	lfsr	0,__pdataBANK0
  3582  01A312  EE20 F00E          	lfsr	2,14
  3583  01A316                     copy_data2:
  3584  01A316  0009               	tblrd		*+
  3585  01A318  006F FFD7 FFEE     	movff	tablat,postinc0
  3586  01A31E  50DD               	movf	postdec2,w,c
  3587  01A320  50D9               	movf	fsr2l,w,c
  3588  01A322  E1F9               	bnz	copy_data2
  3589                           
  3590                           ; Clear objects allocated to BIGRAM (482 bytes)
  3591  01A324  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3592  01A328  EE20 F1E2          	lfsr	2,482
  3593  01A32C                     clear_0:
  3594  01A32C  6AEE               	clrf	postinc0,c
  3595  01A32E  50DD               	movf	postdec2,w,c
  3596  01A330  50D9               	movf	fsr2l,w,c
  3597  01A332  E1FC               	bnz	clear_0
  3598  01A334  50DA               	movf	fsr2h,w,c
  3599  01A336  E1FA               	bnz	clear_0
  3600                           
  3601                           ; Clear objects allocated to BANK4 (255 bytes)
  3602  01A338  EE01  F000         	lfsr	0,__pbssBANK4
  3603  01A33C  EE20 F0FF          	lfsr	2,255
  3604  01A340                     clear_1:
  3605  01A340  6AEE               	clrf	postinc0,c
  3606  01A342  50DD               	movf	postdec2,w,c
  3607  01A344  50D9               	movf	fsr2l,w,c
  3608  01A346  E1FC               	bnz	clear_1
  3609  01A348  50DA               	movf	fsr2h,w,c
  3610  01A34A  E1FA               	bnz	clear_1
  3611                           
  3612                           ; Clear objects allocated to BANK3 (198 bytes)
  3613  01A34C  EE00  F300         	lfsr	0,__pbssBANK3
  3614  01A350  0EC6               	movlw	198
  3615  01A352                     clear_2:
  3616  01A352  6AEE               	clrf	postinc0,c
  3617  01A354  06E8               	decf	wreg,f,c
  3618  01A356  E1FD               	bnz	clear_2
  3619                           
  3620                           ; Clear objects allocated to BANK2 (231 bytes)
  3621  01A358  EE00  F200         	lfsr	0,__pbssBANK2
  3622  01A35C  0EE7               	movlw	231
  3623  01A35E                     clear_3:
  3624  01A35E  6AEE               	clrf	postinc0,c
  3625  01A360  06E8               	decf	wreg,f,c
  3626  01A362  E1FD               	bnz	clear_3
  3627                           
  3628                           ; Clear objects allocated to BANK0 (119 bytes)
  3629  01A364  EE00  F060         	lfsr	0,__pbssBANK0
  3630  01A368  0E77               	movlw	119
  3631  01A36A                     clear_4:
  3632  01A36A  6AEE               	clrf	postinc0,c
  3633  01A36C  06E8               	decf	wreg,f,c
  3634  01A36E  E1FD               	bnz	clear_4
  3635                           
  3636                           ; Clear objects allocated to COMRAM (14 bytes)
  3637  01A370  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3638  01A374  0E0E               	movlw	14
  3639  01A376                     clear_5:
  3640  01A376  6AEE               	clrf	postinc0,c
  3641  01A378  06E8               	decf	wreg,f,c
  3642  01A37A  E1FD               	bnz	clear_5
  3643                           
  3644                           ;
  3645                           ; Setup IVTBASE
  3646                           ;
  3647  01A37C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3648  01A37E  6ED5               	movwf	213,c
  3649  01A380  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3650  01A382  6ED6               	movwf	214,c
  3651  01A384  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3652  01A386  6ED7               	movwf	215,c
  3653  01A388                     end_of_initialization:
  3654                           	opt callstack 0
  3655  01A388                     __end_of__initialization:
  3656                           	opt callstack 0
  3657  01A388  0100               	movlb	0
  3658  01A38A  EF22  F089         	goto	_main	;jump to C main() function
  3659                           
  3660                           	psect	bssCOMRAM
  3661  00003A                     __pbssCOMRAM:
  3662                           	opt callstack 0
  3663  00003A                     _width:
  3664                           	opt callstack 0
  3665  00003A                     	ds	2
  3666  00003C                     _prec:
  3667                           	opt callstack 0
  3668  00003C                     	ds	2
  3669  00003E                     _flags:
  3670                           	opt callstack 0
  3671  00003E                     	ds	2
  3672  000040                     esr_check@esr_state:
  3673                           	opt callstack 0
  3674  000040                     	ds	1
  3675  000041                     calc_bsoc@log_update_wait:
  3676                           	opt callstack 0
  3677  000041                     	ds	1
  3678  000042                     check_day_time@day_delay:
  3679                           	opt callstack 0
  3680  000042                     	ds	1
  3681  000043                     _uart2RxHead:
  3682                           	opt callstack 0
  3683  000043                     	ds	1
  3684  000044                     _uart2TxBufferRemaining:
  3685                           	opt callstack 0
  3686  000044                     	ds	1
  3687  000045                     _uart2TxTail:
  3688                           	opt callstack 0
  3689  000045                     	ds	1
  3690  000046                     _uart1RxTail:
  3691                           	opt callstack 0
  3692  000046                     	ds	1
  3693  000047                     _uart1RxHead:
  3694                           	opt callstack 0
  3695  000047                     	ds	1
  3696                           
  3697                           	psect	bssBANK0
  3698  000060                     __pbssBANK0:
  3699                           	opt callstack 0
  3700  000060                     _spi_link:
  3701                           	opt callstack 0
  3702  000060                     	ds	12
  3703  00006C                     _uart1RxBuffer:
  3704                           	opt callstack 0
  3705  00006C                     	ds	8
  3706  000074                     spinners@s:
  3707                           	opt callstack 0
  3708  000074                     	ds	6
  3709  00007A                     floorf@F524:
  3710                           	opt callstack 0
  3711  00007A                     	ds	4
  3712  00007E                     fabsf@F463:
  3713                           	opt callstack 0
  3714  00007E                     	ds	4
  3715  000082                     ___fpclassifyf@F463:
  3716                           	opt callstack 0
  3717  000082                     	ds	4
  3718  000086                     calc_ror_data@bcror:
  3719                           	opt callstack 0
  3720  000086                     	ds	4
  3721  00008A                     calc_ror_data@bvror:
  3722                           	opt callstack 0
  3723  00008A                     	ds	4
  3724  00008E                     calc_model_data@bcror:
  3725                           	opt callstack 0
  3726  00008E                     	ds	4
  3727  000092                     calc_model_data@bvror:
  3728                           	opt callstack 0
  3729  000092                     	ds	4
  3730  000096                     _utctime:
  3731                           	opt callstack 0
  3732  000096                     	ds	4
  3733  00009A                     wdtdelay@dcount:
  3734                           	opt callstack 0
  3735  00009A                     	ds	4
  3736  00009E                     _P:
  3737                           	opt callstack 0
  3738  00009E                     	ds	4
  3739  0000A2                     _TMR3_InterruptHandler:
  3740                           	opt callstack 0
  3741  0000A2                     	ds	3
  3742  0000A5                     _TMR5_InterruptHandler:
  3743                           	opt callstack 0
  3744  0000A5                     	ds	3
  3745  0000A8                     _TMR6_InterruptHandler:
  3746                           	opt callstack 0
  3747  0000A8                     	ds	3
  3748  0000AB                     _ADCC_ADTI_InterruptHandler:
  3749                           	opt callstack 0
  3750  0000AB                     	ds	3
  3751  0000AE                     _ADCC_ADI_InterruptHandler:
  3752                           	opt callstack 0
  3753  0000AE                     	ds	3
  3754  0000B1                     _UART1_RxInterruptHandler:
  3755                           	opt callstack 0
  3756  0000B1                     	ds	3
  3757  0000B4                     _UART2_TxInterruptHandler:
  3758                           	opt callstack 0
  3759  0000B4                     	ds	3
  3760  0000B7                     _UART2_RxInterruptHandler:
  3761                           	opt callstack 0
  3762  0000B7                     	ds	3
  3763  0000BA                     _INT1_InterruptHandler:
  3764                           	opt callstack 0
  3765  0000BA                     	ds	3
  3766  0000BD                     _INT0_InterruptHandler:
  3767                           	opt callstack 0
  3768  0000BD                     	ds	3
  3769  0000C0                     _nout:
  3770                           	opt callstack 0
  3771  0000C0                     	ds	2
  3772  0000C2                     TMR3_ISR@CountCallBack:
  3773                           	opt callstack 0
  3774  0000C2                     	ds	2
  3775  0000C4                     _timer3ReloadVal:
  3776                           	opt callstack 0
  3777  0000C4                     	ds	2
  3778  0000C6                     TMR5_ISR@CountCallBack:
  3779                           	opt callstack 0
  3780  0000C6                     	ds	2
  3781  0000C8                     _timer5ReloadVal:
  3782                           	opt callstack 0
  3783  0000C8                     	ds	2
  3784  0000CA                     _mode_sw:
  3785                           	opt callstack 0
  3786  0000CA                     	ds	1
  3787  0000CB                     _uart2RxCount:
  3788                           	opt callstack 0
  3789  0000CB                     	ds	1
  3790  0000CC                     _uart2RxTail:
  3791                           	opt callstack 0
  3792  0000CC                     	ds	1
  3793  0000CD                     _uart2TxHead:
  3794                           	opt callstack 0
  3795  0000CD                     	ds	1
  3796  0000CE                     _uart1RxCount:
  3797                           	opt callstack 0
  3798  0000CE                     	ds	1
  3799  0000CF                     _seed:
  3800                           	opt callstack 0
  3801  0000CF                     	ds	8
  3802                           
  3803                           	psect	dataBANK0
  3804  0000F0                     __pdataBANK0:
  3805                           	opt callstack 0
  3806  0000F0                     stoa@F1166:
  3807                           	opt callstack 0
  3808  0000F0                     	ds	7
  3809  0000F7                     _H:
  3810                           	opt callstack 0
  3811  0000F7                     	ds	7
  3812                           
  3813                           	psect	dataBANK1
  3814  000100                     __pdataBANK1:
  3815                           	opt callstack 0
  3816  000100                     _R:
  3817                           	opt callstack 0
  3818  000100                     	ds	48
  3819  000130                     _V:
  3820                           	opt callstack 0
  3821  000130                     	ds	191
  3822                           
  3823                           	psect	bssBANK2
  3824  000200                     __pbssBANK2:
  3825                           	opt callstack 0
  3826  000200                     lp_filter@smooth:
  3827                           	opt callstack 0
  3828  000200                     	ds	84
  3829  000254                     _S:
  3830                           	opt callstack 0
  3831  000254                     	ds	41
  3832  00027D                     _tickCount:
  3833                           	opt callstack 0
  3834  00027D                     	ds	26
  3835  000297                     _dbuf:
  3836                           	opt callstack 0
  3837  000297                     	ds	80
  3838                           
  3839                           	psect	bssBANK3
  3840  000300                     __pbssBANK3:
  3841                           	opt callstack 0
  3842  000300                     _uart2TxBuffer:
  3843                           	opt callstack 0
  3844  000300                     	ds	64
  3845  000340                     _ring_buf2:
  3846                           	opt callstack 0
  3847  000340                     	ds	67
  3848  000383                     _ring_buf1:
  3849                           	opt callstack 0
  3850  000383                     	ds	67
  3851                           
  3852                           	psect	bssBANK4
  3853  000400                     __pbssBANK4:
  3854                           	opt callstack 0
  3855  000400                     _uart2RxBuffer:
  3856                           	opt callstack 0
  3857  000400                     	ds	255
  3858                           
  3859                           	psect	bssBIGRAM
  3860  00082A                     __pbssBIGRAM:
  3861                           	opt callstack 0
  3862  00082A                     _D:
  3863                           	opt callstack 0
  3864  00082A                     	ds	482
  3865                           
  3866                           	psect	dataBIGRAM
  3867  0004FF                     __pdataBIGRAM:
  3868                           	opt callstack 0
  3869  0004FF                     _port_data:
  3870                           	opt callstack 0
  3871  0004FF                     	ds	512
  3872  0006FF                     _C:
  3873                           	opt callstack 0
  3874  0006FF                     	ds	299
  3875                           
  3876                           	psect	cstackBANK0
  3877  0000D7                     __pcstackBANK0:
  3878                           	opt callstack 0
  3879  0000D7                     ??_TMR3_ISR:
  3880                           
  3881                           ; 1 bytes @ 0x0
  3882  0000D7                     	ds	25
  3883                           
  3884                           	psect	cstackCOMRAM
  3885  000021                     __pcstackCOMRAM:
  3886                           	opt callstack 0
  3887  000021                     ??_ADCC_ThresholdISR:
  3888  000021                     
  3889                           ; 1 bytes @ 0x0
  3890  000021                     	ds	5
  3891  000026                     ??_TMR6_ISR:
  3892                           
  3893                           ; 1 bytes @ 0x5
  3894  000026                     	ds	1
  3895  000027                     ??_INT1_ISR:
  3896  000027                     
  3897                           ; 1 bytes @ 0x6
  3898  000027                     	ds	4
  3899  00002B                     ??_TMR5_ISR:
  3900                           
  3901                           ; 1 bytes @ 0xA
  3902  00002B                     	ds	15
  3903                           
  3904 ;;
  3905 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3906 ;;
  3907 ;; *************** function _main *****************
  3908 ;; Defined at:
  3909 ;;		line 187 in file "main.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  esr_temp        4  [STACK] float 
  3914 ;;  i_esr           2  [STACK] unsigned short 
  3915 ;;  shape           1  [STACK] unsigned char 
  3916 ;;  inp_index       1  [STACK] unsigned char 
  3917 ;;  k               1  [STACK] unsigned char 
  3918 ;;  j               1  [STACK] unsigned char 
  3919 ;;  i               1  [STACK] unsigned char 
  3920 ;;  mode            1  [STACK] enum E17013
  3921 ;;  i_ror           1  [STACK] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1  [STACK] void 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels required when called:   29
  3937 ;; This function calls:
  3938 ;;		_SYSTEM_Initialize
  3939 ;;		_StartTimer
  3940 ;;		_TimerDone
  3941 ;;		_WaitMs
  3942 ;;		___fladd
  3943 ;;		___flge
  3944 ;;		___fltol
  3945 ;;		_calc_model_data
  3946 ;;		_calc_ror_data
  3947 ;;		_check_adc_scan
  3948 ;;		_check_enter_button
  3949 ;;		_check_help
  3950 ;;		_clear_adc_scan
  3951 ;;		_clear_hid_pflags
  3952 ;;		_conv_raw_result
  3953 ;;		_convert_adc_data
  3954 ;;		_eaDogM_WriteCommand
  3955 ;;		_esr_check
  3956 ;;		_fabsf
  3957 ;;		_get_raw_result
  3958 ;;		_get_switch
  3959 ;;		_get_vterm_ptr
  3960 ;;		_hid_display
  3961 ;;		_init_bsoc
  3962 ;;		_init_display
  3963 ;;		_init_port_dma
  3964 ;;		_lp_filter
  3965 ;;		_mode_lamp_dim
  3966 ;;		_set_display_info
  3967 ;;		_set_load_relay_one
  3968 ;;		_set_load_relay_two
  3969 ;;		_set_vterm
  3970 ;;		_spinners
  3971 ;;		_sprintf
  3972 ;;		_srand
  3973 ;;		_start_adc_scan
  3974 ;;		_start_switch_handler
  3975 ;;		_static_soc
  3976 ;;		_update_lcd
  3977 ;; This function is called by:
  3978 ;;		Startup code after reset
  3979 ;; This function uses a reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text0
  3983  011244                     __ptext0:
  3984                           	opt callstack 0
  3985  011244                     _main:
  3986                           	opt callstack 0
  3987                           
  3988                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3989  011244  0E11               	movlw	17
  3990  011246  26E1               	addwf	fsr1l,f,c
  3991  011248  0E00               	movlw	0
  3992  01124A  22E2               	addwfc	fsr1h,f,c
  3993                           
  3994                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3995                           ;stkvar	_inp_index @ sp[(-17)+11]
  3996                           
  3997                           ;incstack = 0
  3998  01124C  0EFA               	movlw	-6
  3999  01124E  6AE3               	clrf	plusw1,c
  4000                           
  4001                           ;stkvar	_i @ sp[(-17)+14]
  4002  011250  0EFD               	movlw	-3
  4003  011252  6AE3               	clrf	plusw1,c
  4004                           
  4005                           ;stkvar	_j @ sp[(-17)+13]
  4006  011254  0EFC               	movlw	-4
  4007  011256  6AE3               	clrf	plusw1,c
  4008  011258  2AE3               	incf	plusw1,f,c
  4009                           
  4010                           ;stkvar	_k @ sp[(-17)+12]
  4011  01125A  0EFB               	movlw	-5
  4012  01125C  6AE3               	clrf	plusw1,c
  4013  01125E  82E3               	bsf	plusw1,1,c
  4014                           
  4015                           ;main.c: 193:  SYSTEM_Initialize();
  4016  011260  EC0F  F0DA         	call	_SYSTEM_Initialize	;wreg free
  4017                           
  4018                           ; BSR set to: 60
  4019                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  4020  011264  8ED2               	bsf	210,7,c	;volatile
  4021                           
  4022                           ; BSR set to: 60
  4023                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  4024  011266  8CD2               	bsf	210,6,c	;volatile
  4025                           
  4026                           ; BSR set to: 60
  4027                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  4028  011268  0101               	movlb	1	; () banked
  4029  01126A  6B30               	clrf	_V& (0+255),b	;volatile
  4030                           
  4031                           ; BSR set to: 1
  4032                           ;main.c: 206:  WaitMs(300);
  4033  01126C  0E2C               	movlw	44
  4034  01126E  6EE6               	movwf	postinc1,c
  4035  011270  0E01               	movlw	1
  4036  011272  6EE6               	movwf	postinc1,c
  4037  011274  EC82  F0DC         	call	_WaitMs	;wreg free
  4038                           
  4039                           ;main.c: 207:  if (PORTBbits.RB0) {
  4040  011278  A0CB               	btfss	203,0,c	;volatile
  4041  01127A  D004               	goto	l13036
  4042                           
  4043                           ;main.c: 208:   mode = UI_STATE_HOST;
  4044                           ;stkvar	_mode @ sp[(-17)+15]
  4045  01127C  0EFE               	movlw	-2
  4046  01127E  6AE3               	clrf	plusw1,c
  4047  011280  2AE3               	incf	plusw1,f,c
  4048                           
  4049                           ;main.c: 209:  } else {
  4050  011282  D004               	goto	l13038
  4051  011284                     l13036:
  4052                           
  4053                           ;main.c: 210:   mode = UI_STATE_LOG;
  4054                           ;stkvar	_mode @ sp[(-17)+15]
  4055  011284  0EFE               	movlw	-2
  4056  011286  6AE3               	clrf	plusw1,c
  4057  011288  80E3               	bsf	plusw1,0,c
  4058  01128A  82E3               	bsf	plusw1,1,c	;indir
  4059  01128C                     l13038:
  4060                           
  4061                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  4062                           ;stkvar	_mode @ sp[(-17)+15]
  4063  01128C  0EFE               	movlw	-2
  4064  01128E  04E3               	decf	plusw1,w,c
  4065  011290  A4D8               	btfss	status,2,c
  4066  011292  D007               	goto	l1324
  4067                           
  4068                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  4069  011294  80BD               	bsf	189,0,c	;volatile
  4070                           
  4071                           ;main.c: 215:   V.mode_pwm = 70;
  4072  011296  0E00               	movlw	0
  4073  011298  0101               	movlb	1	; () banked
  4074  01129A  6FC6               	movwf	(_V+150)& (0+255),b	;volatile
  4075  01129C  0E46               	movlw	70
  4076  01129E  6FC5               	movwf	(_V+149)& (0+255),b	;volatile
  4077                           
  4078                           ;main.c: 216:  } else {
  4079  0112A0  D004               	goto	l13042
  4080  0112A2                     l1324:
  4081  0112A2  90BD               	bcf	189,0,c	;volatile
  4082                           
  4083                           ;main.c: 218:   V.mode_pwm = 0;
  4084  0112A4  0101               	movlb	1	; () banked
  4085  0112A6  6BC5               	clrf	(_V+149)& (0+255),b	;volatile
  4086  0112A8  6BC6               	clrf	(_V+150)& (0+255),b	;volatile
  4087  0112AA                     l13042:
  4088                           
  4089                           ; BSR set to: 1
  4090                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4091  0112AA  0060  F717  FFE6   	movff	_V+149,postinc1
  4092  0112B0  0060  F71B  FFE6   	movff	_V+150,postinc1
  4093  0112B6  ECFF  F0DF         	call	_mode_lamp_dim	;wreg free
  4094  0112BA  D326               	goto	l13162
  4095  0112BC                     l13044:
  4096                           
  4097                           ; BSR set to: 1
  4098                           ;main.c: 228:    init_port_dma();
  4099  0112BC  ECD1  F0DC         	call	_init_port_dma	;wreg free
  4100                           
  4101                           ; BSR set to: 59
  4102                           ;main.c: 230:    init_display();
  4103  0112C0  EC03  F0D0         	call	_init_display	;wreg free
  4104                           
  4105                           ; BSR set to: 61
  4106                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4107  0112C4  0E0C               	movlw	12
  4108  0112C6  6EE6               	movwf	postinc1,c
  4109  0112C8  EC72  F0E0         	call	_eaDogM_WriteCommand	;wreg free
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;main.c: 235:    set_load_relay_one(1);
  4113  0112CC  0E01               	movlw	1
  4114  0112CE  6EE6               	movwf	postinc1,c
  4115  0112D0  EC53  F0E0         	call	_set_load_relay_one	;wreg free
  4116                           
  4117                           ;main.c: 236:    set_load_relay_two(1);
  4118  0112D4  0E01               	movlw	1
  4119  0112D6  6EE6               	movwf	postinc1,c
  4120  0112D8  EC4B  F0E0         	call	_set_load_relay_two	;wreg free
  4121                           
  4122                           ;main.c: 238:    V.ui_state = mode;
  4123                           ;stkvar	_mode @ sp[(-17)+15]
  4124  0112DC  0EFE               	movlw	-2
  4125  0112DE  006F FF8C  F130    	movff	plusw1,_V	;volatile
  4126                           
  4127                           ;main.c: 239:    srand(1957);
  4128  0112E4  0EA5               	movlw	165
  4129  0112E6  6EE6               	movwf	postinc1,c
  4130  0112E8  0E07               	movlw	7
  4131  0112EA  6EE6               	movwf	postinc1,c
  4132  0112EC  EC9D  F0DC         	call	_srand	;wreg free
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;main.c: 240:    set_vterm(0);
  4136  0112F0  0E00               	movlw	0
  4137  0112F2  6EE6               	movwf	postinc1,c
  4138  0112F4  ECAA  F0DF         	call	_set_vterm	;wreg free
  4139                           
  4140                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4141  0112F8  0E1E               	movlw	low STR_1
  4142  0112FA  6EE6               	movwf	postinc1,c
  4143  0112FC  0EFF               	movlw	high STR_1
  4144  0112FE  6EE6               	movwf	postinc1,c
  4145  011300  0E00               	movlw	0
  4146  011302  6EE6               	movwf	postinc1,c
  4147  011304  0E00               	movlw	0
  4148  011306  6EE6               	movwf	postinc1,c
  4149  011308  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4150  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4151  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4152  011318  0E04               	movlw	4
  4153  01131A  6EE6               	movwf	postinc1,c
  4154  01131C  EC85  F0CE         	call	_sprintf	;wreg free
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.09");
  4158  011320  0ED2               	movlw	low STR_3
  4159  011322  6EE6               	movwf	postinc1,c
  4160  011324  0EFF               	movlw	high STR_3
  4161  011326  6EE6               	movwf	postinc1,c
  4162  011328  0E09               	movlw	low STR_2
  4163  01132A  6EE6               	movwf	postinc1,c
  4164  01132C  0EFF               	movlw	high STR_2
  4165  01132E  6EE6               	movwf	postinc1,c
  4166  011330  0E00               	movlw	0
  4167  011332  6EE6               	movwf	postinc1,c
  4168  011334  0E01               	movlw	1
  4169  011336  6EE6               	movwf	postinc1,c
  4170  011338  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4171  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4172  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4173  011348  0E06               	movlw	6
  4174  01134A  6EE6               	movwf	postinc1,c
  4175  01134C  EC85  F0CE         	call	_sprintf	;wreg free
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4179  011350  0ECA               	movlw	low STR_4
  4180  011352  6EE6               	movwf	postinc1,c
  4181  011354  0EFE               	movlw	high STR_4
  4182  011356  6EE6               	movwf	postinc1,c
  4183  011358  0E00               	movlw	0
  4184  01135A  6EE6               	movwf	postinc1,c
  4185  01135C  0E02               	movlw	2
  4186  01135E  6EE6               	movwf	postinc1,c
  4187  011360  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4188  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4189  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4190  011370  0E04               	movlw	4
  4191  011372  6EE6               	movwf	postinc1,c
  4192  011374  EC85  F0CE         	call	_sprintf	;wreg free
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4196  011378  0EA0               	movlw	low STR_5
  4197  01137A  6EE6               	movwf	postinc1,c
  4198  01137C  0EFE               	movlw	high STR_5
  4199  01137E  6EE6               	movwf	postinc1,c
  4200  011380  0E02               	movlw	2
  4201  011382  6EE6               	movwf	postinc1,c
  4202  011384  0E00               	movlw	0
  4203  011386  6EE6               	movwf	postinc1,c
  4204  011388  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4205  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4206  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4207  011398  0E04               	movlw	4
  4208  01139A  6EE6               	movwf	postinc1,c
  4209  01139C  EC85  F0CE         	call	_sprintf	;wreg free
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4213  0113A0  0EA0               	movlw	low STR_5
  4214  0113A2  6EE6               	movwf	postinc1,c
  4215  0113A4  0EFE               	movlw	high STR_5
  4216  0113A6  6EE6               	movwf	postinc1,c
  4217  0113A8  0E02               	movlw	2
  4218  0113AA  6EE6               	movwf	postinc1,c
  4219  0113AC  0E01               	movlw	1
  4220  0113AE  6EE6               	movwf	postinc1,c
  4221  0113B0  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4222  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4223  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4224  0113C0  0E04               	movlw	4
  4225  0113C2  6EE6               	movwf	postinc1,c
  4226  0113C4  EC85  F0CE         	call	_sprintf	;wreg free
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4230  0113C8  0EA0               	movlw	low STR_5
  4231  0113CA  6EE6               	movwf	postinc1,c
  4232  0113CC  0EFE               	movlw	high STR_5
  4233  0113CE  6EE6               	movwf	postinc1,c
  4234  0113D0  0E02               	movlw	2
  4235  0113D2  6EE6               	movwf	postinc1,c
  4236  0113D4  0E02               	movlw	2
  4237  0113D6  6EE6               	movwf	postinc1,c
  4238  0113D8  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4239  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4240  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4241  0113E8  0E04               	movlw	4
  4242  0113EA  6EE6               	movwf	postinc1,c
  4243  0113EC  EC85  F0CE         	call	_sprintf	;wreg free
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;main.c: 247:    update_lcd(0);
  4247  0113F0  0E00               	movlw	0
  4248  0113F2  6EE6               	movwf	postinc1,c
  4249  0113F4  ECFD  F0CD         	call	_update_lcd	;wreg free
  4250                           
  4251                           ;main.c: 248:    WaitMs(1000);
  4252  0113F8  0EE8               	movlw	232
  4253  0113FA  6EE6               	movwf	postinc1,c
  4254  0113FC  0E03               	movlw	3
  4255  0113FE  6EE6               	movwf	postinc1,c
  4256  011400  EC82  F0DC         	call	_WaitMs	;wreg free
  4257                           
  4258                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4259  011404  0EFA               	movlw	250
  4260  011406  6EE6               	movwf	postinc1,c
  4261  011408  0E00               	movlw	0
  4262  01140A  6EE6               	movwf	postinc1,c
  4263  01140C  0E0A               	movlw	10
  4264  01140E  6EE6               	movwf	postinc1,c
  4265  011410  EC8D  F0DB         	call	_StartTimer	;wreg free
  4266                           
  4267                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4268  011414  0EC8               	movlw	200
  4269  011416  6EE6               	movwf	postinc1,c
  4270  011418  0E00               	movlw	0
  4271  01141A  6EE6               	movwf	postinc1,c
  4272  01141C  0E01               	movlw	1
  4273  01141E  6EE6               	movwf	postinc1,c
  4274  011420  EC8D  F0DB         	call	_StartTimer	;wreg free
  4275                           
  4276                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4277  011424  0EB8               	movlw	184
  4278  011426  6EE6               	movwf	postinc1,c
  4279  011428  0E0B               	movlw	11
  4280  01142A  6EE6               	movwf	postinc1,c
  4281  01142C  0E07               	movlw	7
  4282  01142E  6EE6               	movwf	postinc1,c
  4283  011430  EC8D  F0DB         	call	_StartTimer	;wreg free
  4284                           
  4285                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4286  011434  0EDC               	movlw	220
  4287  011436  6EE6               	movwf	postinc1,c
  4288  011438  0E05               	movlw	5
  4289  01143A  6EE6               	movwf	postinc1,c
  4290  01143C  0E0B               	movlw	11
  4291  01143E  6EE6               	movwf	postinc1,c
  4292  011440  EC8D  F0DB         	call	_StartTimer	;wreg free
  4293                           
  4294                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4295  011444  0EB8               	movlw	184
  4296  011446  6EE6               	movwf	postinc1,c
  4297  011448  0E0B               	movlw	11
  4298  01144A  6EE6               	movwf	postinc1,c
  4299  01144C  0E09               	movlw	9
  4300  01144E  6EE6               	movwf	postinc1,c
  4301  011450  EC8D  F0DB         	call	_StartTimer	;wreg free
  4302                           
  4303                           ;main.c: 255:    start_adc_scan();
  4304  011454  EC26  F0D8         	call	_start_adc_scan	;wreg free
  4305                           
  4306                           ;main.c: 256:    start_switch_handler();
  4307  011458  EC6C  F0DF         	call	_start_switch_handler	;wreg free
  4308                           
  4309                           ; BSR set to: 57
  4310                           ;main.c: 257:    WaitMs(1000);
  4311  01145C  0EE8               	movlw	232
  4312  01145E  6EE6               	movwf	postinc1,c
  4313  011460  0E03               	movlw	3
  4314  011462  6EE6               	movwf	postinc1,c
  4315  011464  EC82  F0DC         	call	_WaitMs	;wreg free
  4316                           
  4317                           ;main.c: 262:    i_ror = 1;
  4318                           ;stkvar	_i_ror @ sp[(-17)+16]
  4319  011468  0EFF               	movlw	-1
  4320  01146A  6AE3               	clrf	plusw1,c
  4321  01146C  2AE3               	incf	plusw1,f,c
  4322  01146E                     l13094:
  4323                           
  4324                           ;main.c: 264:     calc_ror_data();
  4325  01146E  ECAA  F0C5         	call	_calc_ror_data	;wreg free
  4326                           
  4327                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4328  011472  0E00               	movlw	0
  4329  011474  6EE6               	movwf	postinc1,c
  4330  011476  0E04               	movlw	4
  4331  011478  6EE6               	movwf	postinc1,c
  4332  01147A  EC63  F0A9         	call	_conv_raw_result	;wreg free
  4333  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4334  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4335  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4336  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4337  011496  0EB5               	movlw	low STR_8
  4338  011498  6EE6               	movwf	postinc1,c
  4339  01149A  0EFE               	movlw	high STR_8
  4340  01149C  6EE6               	movwf	postinc1,c
  4341  01149E  0E00               	movlw	0
  4342  0114A0  6EE6               	movwf	postinc1,c
  4343  0114A2  0E01               	movlw	1
  4344  0114A4  6EE6               	movwf	postinc1,c
  4345  0114A6  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4346  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4347  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4348  0114B6  0E08               	movlw	8
  4349  0114B8  6EE6               	movwf	postinc1,c
  4350  0114BA  EC85  F0CE         	call	_sprintf	;wreg free
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4354  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4355  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4356  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4357  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4358  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4359                           
  4360                           ;stkvar	_i_ror @ sp[(-21)+16]
  4361  0114DA  0EFB               	movlw	-5
  4362  0114DC  50E3               	movf	plusw1,w,c
  4363  0114DE  6EE6               	movwf	postinc1,c
  4364  0114E0  0E00               	movlw	0
  4365  0114E2  6EE6               	movwf	postinc1,c
  4366  0114E4  0E00               	movlw	0
  4367  0114E6  6EE6               	movwf	postinc1,c
  4368  0114E8  0E05               	movlw	5
  4369  0114EA  6EE6               	movwf	postinc1,c
  4370  0114EC  EC78  F0D0         	call	_spinners	;wreg free
  4371  0114F0  5001               	movf	btemp^0,w,c
  4372  0114F2  6EE6               	movwf	postinc1,c
  4373  0114F4  0E00               	movlw	0
  4374  0114F6  6EE6               	movwf	postinc1,c
  4375  0114F8  0E84               	movlw	low STR_9
  4376  0114FA  6EE6               	movwf	postinc1,c
  4377  0114FC  0EFC               	movlw	high STR_9
  4378  0114FE  6EE6               	movwf	postinc1,c
  4379  011500  0E00               	movlw	0
  4380  011502  6EE6               	movwf	postinc1,c
  4381  011504  0E02               	movlw	2
  4382  011506  6EE6               	movwf	postinc1,c
  4383  011508  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4384  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4385  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4386  011518  0E0C               	movlw	12
  4387  01151A  6EE6               	movwf	postinc1,c
  4388  01151C  EC85  F0CE         	call	_sprintf	;wreg free
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;main.c: 267:     update_lcd(0);
  4392  011520  0E00               	movlw	0
  4393  011522  6EE6               	movwf	postinc1,c
  4394  011524  ECFD  F0CD         	call	_update_lcd	;wreg free
  4395                           
  4396                           ;main.c: 268:     clear_adc_scan();
  4397  011528  ECC7  F0E0         	call	_clear_adc_scan	;wreg free
  4398                           
  4399                           ; BSR set to: 1
  4400                           ;main.c: 269:     start_adc_scan();
  4401  01152C  EC26  F0D8         	call	_start_adc_scan	;wreg free
  4402                           
  4403                           ;main.c: 270:     WaitMs(2000);
  4404  011530  0ED0               	movlw	208
  4405  011532  6EE6               	movwf	postinc1,c
  4406  011534  0E07               	movlw	7
  4407  011536  6EE6               	movwf	postinc1,c
  4408  011538  EC82  F0DC         	call	_WaitMs	;wreg free
  4409                           
  4410                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4411                           ;stkvar	_i_ror @ sp[(-17)+16]
  4412  01153C  0EFF               	movlw	-1
  4413  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4414  011544  2A0C               	incf	(btemp+11)^0,f,c
  4415  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4416  01154C  060C               	decf	(btemp+11)^0,f,c
  4417  01154E  0E1E               	movlw	30
  4418  011550  600C               	cpfslt	(btemp+11)^0,c
  4419  011552  D01A               	goto	u12600
  4420  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4421  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4422  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4423  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4424  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4425  011570  0E42               	movlw	66
  4426  011572  6EE6               	movwf	postinc1,c
  4427  011574  0E60               	movlw	96
  4428  011576  6EE6               	movwf	postinc1,c
  4429  011578  0E65               	movlw	101
  4430  01157A  6EE6               	movwf	postinc1,c
  4431  01157C  0E3C               	movlw	60
  4432  01157E  6EE6               	movwf	postinc1,c
  4433  011580  ECE6  F0C7         	call	___flge	;wreg free
  4434  011584  A001               	btfss	btemp& (0+255),0,c
  4435  011586  D773               	goto	l13094
  4436  011588                     u12600:
  4437                           
  4438                           ;main.c: 275:    static_soc();
  4439  011588  ECEA  F0D8         	call	_static_soc	;wreg free
  4440                           
  4441                           ;main.c: 276:    init_bsoc();
  4442  01158C  ECD3  F0BD         	call	_init_bsoc	;wreg free
  4443                           
  4444                           ;main.c: 277:    set_load_relay_one(0);
  4445  011590  0E00               	movlw	0
  4446  011592  6EE6               	movwf	postinc1,c
  4447  011594  EC53  F0E0         	call	_set_load_relay_one	;wreg free
  4448                           
  4449                           ;main.c: 278:    set_load_relay_two(0);
  4450  011598  0E00               	movlw	0
  4451  01159A  6EE6               	movwf	postinc1,c
  4452  01159C  EC4B  F0E0         	call	_set_load_relay_two	;wreg free
  4453                           
  4454                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4455  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4456  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4457  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4458  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4459  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4460  0115BC  0E56               	movlw	low STR_10
  4461  0115BE  6EE6               	movwf	postinc1,c
  4462  0115C0  0EFD               	movlw	high STR_10
  4463  0115C2  6EE6               	movwf	postinc1,c
  4464  0115C4  0E00               	movlw	0
  4465  0115C6  6EE6               	movwf	postinc1,c
  4466  0115C8  0E00               	movlw	0
  4467  0115CA  6EE6               	movwf	postinc1,c
  4468  0115CC  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4469  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4470  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4471  0115DC  0E06               	movlw	6
  4472  0115DE  6EE6               	movwf	postinc1,c
  4473  0115E0  EC85  F0CE         	call	_sprintf	;wreg free
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4477  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4478  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4479  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4480  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4481  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4482  011600  0E32               	movlw	low STR_11
  4483  011602  6EE6               	movwf	postinc1,c
  4484  011604  0EFE               	movlw	high STR_11
  4485  011606  6EE6               	movwf	postinc1,c
  4486  011608  0E00               	movlw	0
  4487  01160A  6EE6               	movwf	postinc1,c
  4488  01160C  0E01               	movlw	1
  4489  01160E  6EE6               	movwf	postinc1,c
  4490  011610  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4491  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4492  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4493  011620  0E08               	movlw	8
  4494  011622  6EE6               	movwf	postinc1,c
  4495  011624  EC85  F0CE         	call	_sprintf	;wreg free
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;main.c: 281:    update_lcd(0);
  4499  011628  0E00               	movlw	0
  4500  01162A  6EE6               	movwf	postinc1,c
  4501  01162C  ECFD  F0CD         	call	_update_lcd	;wreg free
  4502                           
  4503                           ;main.c: 282:    WaitMs(2000);
  4504  011630  0ED0               	movlw	208
  4505  011632  6EE6               	movwf	postinc1,c
  4506  011634  0E07               	movlw	7
  4507  011636  6EE6               	movwf	postinc1,c
  4508  011638  EC82  F0DC         	call	_WaitMs	;wreg free
  4509                           
  4510                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4511  01163C  0EDF               	movlw	low STR_12
  4512  01163E  6EE6               	movwf	postinc1,c
  4513  011640  0EFE               	movlw	high STR_12
  4514  011642  6EE6               	movwf	postinc1,c
  4515  011644  0E00               	movlw	0
  4516  011646  6EE6               	movwf	postinc1,c
  4517  011648  0E00               	movlw	0
  4518  01164A  6EE6               	movwf	postinc1,c
  4519  01164C  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4520  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4521  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4522  01165C  0E04               	movlw	4
  4523  01165E  6EE6               	movwf	postinc1,c
  4524  011660  EC85  F0CE         	call	_sprintf	;wreg free
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4528  011664  0EF4               	movlw	low STR_13
  4529  011666  6EE6               	movwf	postinc1,c
  4530  011668  0EFE               	movlw	high STR_13
  4531  01166A  6EE6               	movwf	postinc1,c
  4532  01166C  0E00               	movlw	0
  4533  01166E  6EE6               	movwf	postinc1,c
  4534  011670  0E01               	movlw	1
  4535  011672  6EE6               	movwf	postinc1,c
  4536  011674  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4537  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4538  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4539  011684  0E04               	movlw	4
  4540  011686  6EE6               	movwf	postinc1,c
  4541  011688  EC85  F0CE         	call	_sprintf	;wreg free
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4545  01168C  0E48               	movlw	low STR_14
  4546  01168E  6EE6               	movwf	postinc1,c
  4547  011690  0EFF               	movlw	high STR_14
  4548  011692  6EE6               	movwf	postinc1,c
  4549  011694  0E00               	movlw	0
  4550  011696  6EE6               	movwf	postinc1,c
  4551  011698  0E02               	movlw	2
  4552  01169A  6EE6               	movwf	postinc1,c
  4553  01169C  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4554  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4555  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4556  0116AC  0E04               	movlw	4
  4557  0116AE  6EE6               	movwf	postinc1,c
  4558  0116B0  EC85  F0CE         	call	_sprintf	;wreg free
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;main.c: 286:    update_lcd(0);
  4562  0116B4  0E00               	movlw	0
  4563  0116B6  6EE6               	movwf	postinc1,c
  4564  0116B8  ECFD  F0CD         	call	_update_lcd	;wreg free
  4565                           
  4566                           ;main.c: 287:    uint16_t i_esr = 1;
  4567  0116BC  0E01               	movlw	1
  4568  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4569  0116C0  0E00               	movlw	0
  4570  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4571                           
  4572                           ;stkvar	_i_esr @ sp[(-17)+8]
  4573  0116C4  0EF7               	movlw	-9
  4574  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4575  0116CC  0EF8               	movlw	-8
  4576  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4577                           
  4578                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4579  0116D4  D06D               	goto	l13152
  4580  0116D6                     l13140:
  4581                           
  4582                           ;main.c: 291:     WaitMs(110);
  4583  0116D6  0E6E               	movlw	110
  4584  0116D8  6EE6               	movwf	postinc1,c
  4585  0116DA  0E00               	movlw	0
  4586  0116DC  6EE6               	movwf	postinc1,c
  4587  0116DE  EC82  F0DC         	call	_WaitMs	;wreg free
  4588                           
  4589                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4590                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4591  0116E2  0EF3               	movlw	-13
  4592  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4593  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4594  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4595  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4596  0116FC  ECEF  F0D2         	call	_fabsf	;wreg free
  4597  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4598  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4599  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4600  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4601  011718  EC2D  F0C7         	call	___fltol	;wreg free
  4602  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4603                           
  4604                           ;stkvar	_shape @ sp[(-17)+10]
  4605  011722  0EF9               	movlw	-7
  4606  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4607                           
  4608                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4609  01172A  0E00               	movlw	0
  4610  01172C  6EE6               	movwf	postinc1,c
  4611                           
  4612                           ;stkvar	_shape @ sp[(-18)+10]
  4613  01172E  0EF8               	movlw	-8
  4614  011730  50E3               	movf	plusw1,w,c
  4615  011732  6EE6               	movwf	postinc1,c
  4616  011734  EC78  F0D0         	call	_spinners	;wreg free
  4617  011738  5001               	movf	btemp^0,w,c
  4618  01173A  6EE6               	movwf	postinc1,c
  4619  01173C  0E00               	movlw	0
  4620  01173E  6EE6               	movwf	postinc1,c
  4621  011740  0E00               	movlw	0
  4622  011742  6EE6               	movwf	postinc1,c
  4623  011744  0E00               	movlw	0
  4624  011746  6EE6               	movwf	postinc1,c
  4625  011748  EC78  F0D0         	call	_spinners	;wreg free
  4626  01174C  5001               	movf	btemp^0,w,c
  4627  01174E  6EE6               	movwf	postinc1,c
  4628  011750  0E00               	movlw	0
  4629  011752  6EE6               	movwf	postinc1,c
  4630  011754  0E33               	movlw	low STR_15
  4631  011756  6EE6               	movwf	postinc1,c
  4632  011758  0EFF               	movlw	high STR_15
  4633  01175A  6EE6               	movwf	postinc1,c
  4634  01175C  0E00               	movlw	0
  4635  01175E  6EE6               	movwf	postinc1,c
  4636  011760  0E02               	movlw	2
  4637  011762  6EE6               	movwf	postinc1,c
  4638  011764  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4639  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4640  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4641  011774  0E08               	movlw	8
  4642  011776  6EE6               	movwf	postinc1,c
  4643  011778  EC85  F0CE         	call	_sprintf	;wreg free
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;main.c: 294:     update_lcd(0);
  4647  01177C  0E00               	movlw	0
  4648  01177E  6EE6               	movwf	postinc1,c
  4649  011780  ECFD  F0CD         	call	_update_lcd	;wreg free
  4650                           
  4651                           ;main.c: 296:     if (i_esr++ > 512)
  4652                           ;stkvar	_i_esr @ sp[(-17)+8]
  4653  011784  50E1               	movf	fsr1l,w,c
  4654  011786  0FF7               	addlw	-9
  4655  011788  6ED9               	movwf	fsr2l,c
  4656  01178A  50E2               	movf	fsr1h,w,c
  4657  01178C  6EDA               	movwf	fsr2h,c
  4658  01178E  0EFF               	movlw	255
  4659  011790  22DA               	addwfc	fsr2h,f,c
  4660  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4661  011798  0E01               	movlw	1
  4662  01179A  26DE               	addwf	postinc2,f,c
  4663  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4664  0117A2  0E00               	movlw	0
  4665  0117A4  22DD               	addwfc	postdec2,f,c
  4666  0117A6  040B               	decf	(btemp+10)^0,w,c
  4667  0117A8  0E02               	movlw	2
  4668  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4669  0117AC  B0D8               	btfsc	status,0,c
  4670  0117AE  D017               	goto	u12620
  4671  0117B0                     l13152:
  4672                           
  4673                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4674  0117B0  0E00               	movlw	0
  4675  0117B2  6EE6               	movwf	postinc1,c
  4676  0117B4  EC92  F0B8         	call	_esr_check	;wreg free
  4677                           
  4678                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4679  0117B8  0EF3               	movlw	-13
  4680  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4681  0117C0  0EF4               	movlw	-12
  4682  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4683  0117C8  0EF5               	movlw	-11
  4684  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4685  0117D0  0EF6               	movlw	-10
  4686  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4687  0117D8  0EF6               	movlw	-10
  4688  0117DA  BEE3               	btfsc	plusw1,7,c
  4689  0117DC  D77C               	goto	l13140
  4690  0117DE                     u12620:
  4691                           
  4692                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4693  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4694  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4695  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4696  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4697  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4698  0117FA  0E40               	movlw	low STR_16
  4699  0117FC  6EE6               	movwf	postinc1,c
  4700  0117FE  0EFD               	movlw	high STR_16
  4701  011800  6EE6               	movwf	postinc1,c
  4702  011802  0E00               	movlw	0
  4703  011804  6EE6               	movwf	postinc1,c
  4704  011806  0E00               	movlw	0
  4705  011808  6EE6               	movwf	postinc1,c
  4706  01180A  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4707  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4708  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4709  01181A  0E08               	movlw	8
  4710  01181C  6EE6               	movwf	postinc1,c
  4711  01181E  EC85  F0CE         	call	_sprintf	;wreg free
  4712                           
  4713                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4714  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4715  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4716  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4717  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4718  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4719  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4720  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4721  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4722  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4723  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4724  01185A  0E50               	movlw	low STR_17
  4725  01185C  6EE6               	movwf	postinc1,c
  4726  01185E  0EFC               	movlw	high STR_17
  4727  011860  6EE6               	movwf	postinc1,c
  4728  011862  0E00               	movlw	0
  4729  011864  6EE6               	movwf	postinc1,c
  4730  011866  0E01               	movlw	1
  4731  011868  6EE6               	movwf	postinc1,c
  4732  01186A  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4733  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4734  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4735  01187A  0E0C               	movlw	12
  4736  01187C  6EE6               	movwf	postinc1,c
  4737  01187E  EC85  F0CE         	call	_sprintf	;wreg free
  4738                           
  4739                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4740  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4741  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4742  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4743  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4744  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4745  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4746  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4747  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4748  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4749  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4750  0118BA  0E6A               	movlw	low STR_18
  4751  0118BC  6EE6               	movwf	postinc1,c
  4752  0118BE  0EFC               	movlw	high STR_18
  4753  0118C0  6EE6               	movwf	postinc1,c
  4754  0118C2  0E00               	movlw	0
  4755  0118C4  6EE6               	movwf	postinc1,c
  4756  0118C6  0E02               	movlw	2
  4757  0118C8  6EE6               	movwf	postinc1,c
  4758  0118CA  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4759  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4760  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4761  0118DA  0E0C               	movlw	12
  4762  0118DC  6EE6               	movwf	postinc1,c
  4763  0118DE  EC85  F0CE         	call	_sprintf	;wreg free
  4764                           
  4765                           ;main.c: 302:    update_lcd(0);
  4766  0118E2  0E00               	movlw	0
  4767  0118E4  6EE6               	movwf	postinc1,c
  4768  0118E6  ECFD  F0CD         	call	_update_lcd	;wreg free
  4769                           
  4770                           ;main.c: 303:    WaitMs(5000);
  4771  0118EA  0E88               	movlw	136
  4772  0118EC  6EE6               	movwf	postinc1,c
  4773  0118EE  0E13               	movlw	19
  4774  0118F0  6EE6               	movwf	postinc1,c
  4775  0118F2  EC82  F0DC         	call	_WaitMs	;wreg free
  4776                           
  4777                           ;main.c: 304:    V.system_stable = 1;
  4778  0118F6  0E01               	movlw	1
  4779  0118F8  0101               	movlb	1	; () banked
  4780  0118FA  6FDE               	movwf	(_V+174)& (0+255),b	;volatile
  4781                           
  4782                           ;main.c: 305:    break;
  4783  0118FC  D01C               	goto	l13164
  4784  0118FE                     l1340:
  4785                           
  4786                           ; BSR set to: 1
  4787                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4788  0118FE  0100               	movlb	0	; () banked
  4789  011900  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4790                           
  4791                           ;main.c: 312:    break;
  4792  011902  D019               	goto	l13164
  4793  011904                     l1342:
  4794                           
  4795                           ; BSR set to: 1
  4796                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4797  011904  6B30               	clrf	_V& (0+255),b	;volatile
  4798                           
  4799                           ;main.c: 316:    break;
  4800  011906  D017               	goto	l13164
  4801  011908                     l13162:
  4802  011908  0101               	movlb	1	; () banked
  4803  01190A  5130               	movf	_V& (0+255),w,b	;volatile
  4804  01190C  6E0B               	movwf	(btemp+10)^0,c
  4805  01190E  6A0C               	clrf	(btemp+11)^0,c
  4806                           
  4807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4808                           ; Switch size 1, requested type "simple"
  4809                           ; Number of cases is 1, Range of values is 0 to 0
  4810                           ; switch strategies available:
  4811                           ; Name         Instructions Cycles
  4812                           ; simple_byte            4     3 (average)
  4813                           ;	Chosen strategy is simple_byte
  4814  011910  500C               	movf	(btemp+11)^0,w,c
  4815  011912  0A00               	xorlw	0	; case 0
  4816  011914  A4D8               	btfss	status,2,c
  4817  011916  D7F6               	goto	l1342
  4818                           
  4819                           ; BSR set to: 1
  4820                           ; Switch size 1, requested type "simple"
  4821                           ; Number of cases is 5, Range of values is 0 to 5
  4822                           ; switch strategies available:
  4823                           ; Name         Instructions Cycles
  4824                           ; simple_byte           16     9 (average)
  4825                           ;	Chosen strategy is simple_byte
  4826  011918  500B               	movf	(btemp+10)^0,w,c
  4827  01191A  0A00               	xorlw	0	; case 0
  4828  01191C  B4D8               	btfsc	status,2,c
  4829  01191E  D4CE               	goto	l13044
  4830  011920  0A01               	xorlw	1	; case 1
  4831  011922  B4D8               	btfsc	status,2,c
  4832  011924  D008               	goto	l13164
  4833  011926  0A02               	xorlw	2	; case 3
  4834  011928  B4D8               	btfsc	status,2,c
  4835  01192A  D005               	goto	l13164
  4836  01192C  0A07               	xorlw	7	; case 4
  4837  01192E  B4D8               	btfsc	status,2,c
  4838  011930  D7E6               	goto	l1340
  4839  011932  0A01               	xorlw	1	; case 5
  4840  011934  D7E7               	goto	l1342
  4841  011936                     l13164:
  4842                           
  4843                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4844  011936  0E01               	movlw	1
  4845  011938  6EE6               	movwf	postinc1,c
  4846  01193A  ECB3  F0DD         	call	_TimerDone	;wreg free
  4847  01193E  5001               	movf	btemp^0,w,c
  4848  011940  B4D8               	btfsc	status,2,c
  4849  011942  D013               	goto	l13176
  4850  011944  ECB7  F0E0         	call	_check_adc_scan	;wreg free
  4851  011948  5001               	movf	btemp^0,w,c
  4852  01194A  B4D8               	btfsc	status,2,c
  4853  01194C  D00E               	goto	l13176
  4854                           
  4855                           ;main.c: 323:    convert_adc_data();
  4856  01194E  EC93  F0D2         	call	_convert_adc_data	;wreg free
  4857                           
  4858                           ;main.c: 327:    clear_adc_scan();
  4859  011952  ECC7  F0E0         	call	_clear_adc_scan	;wreg free
  4860                           
  4861                           ; BSR set to: 1
  4862                           ;main.c: 328:    start_adc_scan();
  4863  011956  EC26  F0D8         	call	_start_adc_scan	;wreg free
  4864                           
  4865                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4866  01195A  0EC8               	movlw	200
  4867  01195C  6EE6               	movwf	postinc1,c
  4868  01195E  0E00               	movlw	0
  4869  011960  6EE6               	movwf	postinc1,c
  4870  011962  0E01               	movlw	1
  4871  011964  6EE6               	movwf	postinc1,c
  4872  011966  EC8D  F0DB         	call	_StartTimer	;wreg free
  4873  01196A                     l13176:
  4874                           
  4875                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4876                           
  4877                           ;main.c: 332:   if (V.ticks) {
  4878  01196A  0E0A               	movlw	10
  4879  01196C  6EE6               	movwf	postinc1,c
  4880  01196E  ECB3  F0DD         	call	_TimerDone	;wreg free
  4881  011972  5001               	movf	btemp^0,w,c
  4882  011974  B4D8               	btfsc	status,2,c
  4883  011976  EF45  F091         	goto	l13252
  4884                           
  4885                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4886  01197A  0E09               	movlw	9
  4887  01197C  6EE6               	movwf	postinc1,c
  4888  01197E  ECB3  F0DD         	call	_TimerDone	;wreg free
  4889  011982  5001               	movf	btemp^0,w,c
  4890  011984  B4D8               	btfsc	status,2,c
  4891  011986  D004               	goto	l13184
  4892                           
  4893                           ;main.c: 338:     set_display_info(DIS_STR);
  4894  011988  0E00               	movlw	0
  4895  01198A  6EE6               	movwf	postinc1,c
  4896  01198C  ECB9  F0DF         	call	_set_display_info	;wreg free
  4897  011990                     l13184:
  4898                           
  4899                           ;main.c: 340:    calc_model_data();
  4900  011990  EC2D  F0AE         	call	_calc_model_data	;wreg free
  4901                           
  4902                           ; BSR set to: 57
  4903                           ;main.c: 347:     hid_display(&H);
  4904                           
  4905                           ;main.c: 342:    if (0) {
  4906  011994  0EF7               	movlw	_H& (0+255)
  4907  011996  6EE6               	movwf	postinc1,c
  4908  011998  EC0A  F0CF         	call	_hid_display	;wreg free
  4909                           
  4910                           ;main.c: 348:     switch (H.hid_display) {
  4911  01199C  EFF4  F090         	goto	l13232
  4912  0119A0                     l1350:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;main.c: 350:      V.calib = 0;
  4916  0119A0  0101               	movlb	1	; () banked
  4917  0119A2  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  4918                           
  4919                           ; BSR set to: 1
  4920                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4921  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4922  0119A8  50DF               	movf	indf2,w,c
  4923  0119AA  A4D8               	btfss	status,2,c
  4924  0119AC  D002               	goto	l13194
  4925                           
  4926                           ; BSR set to: 1
  4927  0119AE  0E20               	movlw	32
  4928  0119B0  D001               	goto	L1
  4929  0119B2                     l13194:
  4930                           
  4931                           ; BSR set to: 1
  4932  0119B2  0E44               	movlw	68
  4933  0119B4                     L1:
  4934  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4935  0119B6  0E00               	movlw	0
  4936  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4937                           
  4938                           ;stkvar	_main$3752 @ sp[(-17)+2]
  4939  0119BA  0EF1               	movlw	-15
  4940  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4941  0119C2  0EF2               	movlw	-14
  4942  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4943                           
  4944                           ; BSR set to: 1
  4945  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  4946  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4947  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4948  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4949  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4950                           
  4951                           ;stkvar	_main$3752 @ sp[(-21)+2]
  4952  0119E6  0EED               	movlw	-19
  4953  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4954  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4955  0119F4  0E1C               	movlw	low STR_22
  4956  0119F6  6EE6               	movwf	postinc1,c
  4957  0119F8  0EFE               	movlw	high STR_22
  4958  0119FA  6EE6               	movwf	postinc1,c
  4959  0119FC  0E00               	movlw	0
  4960  0119FE  6EE6               	movwf	postinc1,c
  4961  011A00  0E00               	movlw	0
  4962  011A02  6EE6               	movwf	postinc1,c
  4963  011A04  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4964  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  4965  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4966  011A14  0E0A               	movlw	10
  4967  011A16  6EE6               	movwf	postinc1,c
  4968  011A18  EC85  F0CE         	call	_sprintf	;wreg free
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  4972  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  4973  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  4974  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  4975  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4976  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  4977  011A38  0E06               	movlw	low STR_23
  4978  011A3A  6EE6               	movwf	postinc1,c
  4979  011A3C  0EFE               	movlw	high STR_23
  4980  011A3E  6EE6               	movwf	postinc1,c
  4981  011A40  0E00               	movlw	0
  4982  011A42  6EE6               	movwf	postinc1,c
  4983  011A44  0E01               	movlw	1
  4984  011A46  6EE6               	movwf	postinc1,c
  4985  011A48  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  4986  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  4987  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4988  011A58  0E08               	movlw	8
  4989  011A5A  6EE6               	movwf	postinc1,c
  4990  011A5C  EC85  F0CE         	call	_sprintf	;wreg free
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  4994  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  4995  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  4996  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  4997  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  4998  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  4999  011A7C  0EF0               	movlw	low STR_24
  5000  011A7E  6EE6               	movwf	postinc1,c
  5001  011A80  0EFD               	movlw	high STR_24
  5002  011A82  6EE6               	movwf	postinc1,c
  5003  011A84  0E00               	movlw	0
  5004  011A86  6EE6               	movwf	postinc1,c
  5005  011A88  0E02               	movlw	2
  5006  011A8A  6EE6               	movwf	postinc1,c
  5007  011A8C  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5008  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  5009  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5010  011A9C  0E08               	movlw	8
  5011  011A9E  6EE6               	movwf	postinc1,c
  5012  011AA0  EC85  F0CE         	call	_sprintf	;wreg free
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5016  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  5017  011AA8  50DF               	movf	indf2,w,c
  5018  011AAA  A4D8               	btfss	status,2,c
  5019  011AAC  D002               	goto	l13206
  5020                           
  5021                           ; BSR set to: 0
  5022  011AAE  0E20               	movlw	32
  5023  011AB0  D001               	goto	L2
  5024  011AB2                     l13206:
  5025                           
  5026                           ; BSR set to: 0
  5027  011AB2  0E44               	movlw	68
  5028  011AB4                     L2:
  5029  011AB4  6E0B               	movwf	(btemp+10)^0,c
  5030  011AB6  0E00               	movlw	0
  5031  011AB8  6E0C               	movwf	(btemp+11)^0,c
  5032                           
  5033                           ;stkvar	_main$3756 @ sp[(-17)+0]
  5034  011ABA  0EEF               	movlw	-17
  5035  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5036  011AC2  0EF0               	movlw	-16
  5037  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5038                           
  5039                           ; BSR set to: 0
  5040  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5041  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5042  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5043  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  5044  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5045                           
  5046                           ;stkvar	_main$3756 @ sp[(-21)+0]
  5047  011AE6  0EEB               	movlw	-21
  5048  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5049  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5050  011AF4  0EDA               	movlw	low STR_25
  5051  011AF6  6EE6               	movwf	postinc1,c
  5052  011AF8  0EFD               	movlw	high STR_25
  5053  011AFA  6EE6               	movwf	postinc1,c
  5054  011AFC  0E01               	movlw	1
  5055  011AFE  6EE6               	movwf	postinc1,c
  5056  011B00  0E00               	movlw	0
  5057  011B02  6EE6               	movwf	postinc1,c
  5058  011B04  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5059  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  5060  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5061  011B14  0E0A               	movlw	10
  5062  011B16  6EE6               	movwf	postinc1,c
  5063  011B18  EC85  F0CE         	call	_sprintf	;wreg free
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5067  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5068  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5069  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5070  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5071  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5072  011B38  0EC4               	movlw	low STR_26
  5073  011B3A  6EE6               	movwf	postinc1,c
  5074  011B3C  0EFD               	movlw	high STR_26
  5075  011B3E  6EE6               	movwf	postinc1,c
  5076  011B40  0E01               	movlw	1
  5077  011B42  6EE6               	movwf	postinc1,c
  5078  011B44  0E01               	movlw	1
  5079  011B46  6EE6               	movwf	postinc1,c
  5080  011B48  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5081  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5082  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5083  011B58  0E08               	movlw	8
  5084  011B5A  6EE6               	movwf	postinc1,c
  5085  011B5C  EC85  F0CE         	call	_sprintf	;wreg free
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5089  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5090  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5091  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5092  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5093  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5094  011B7C  0EAE               	movlw	low STR_27
  5095  011B7E  6EE6               	movwf	postinc1,c
  5096  011B80  0EFD               	movlw	high STR_27
  5097  011B82  6EE6               	movwf	postinc1,c
  5098  011B84  0E01               	movlw	1
  5099  011B86  6EE6               	movwf	postinc1,c
  5100  011B88  0E02               	movlw	2
  5101  011B8A  6EE6               	movwf	postinc1,c
  5102  011B8C  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5103  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5104  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5105  011B9C  0E08               	movlw	8
  5106  011B9E  6EE6               	movwf	postinc1,c
  5107  011BA0  EC85  F0CE         	call	_sprintf	;wreg free
  5108                           
  5109                           ;main.c: 358:      break;
  5110  011BA4  D337               	goto	l13234
  5111  011BA6                     l1360:
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;main.c: 360:      V.calib = 0;
  5115  011BA6  0101               	movlb	1	; () banked
  5116  011BA8  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5117                           
  5118                           ; BSR set to: 1
  5119                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5120  011BAA  EE21  F303         	lfsr	2,_C+4	;volatile
  5121  011BAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5122  011BB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5123  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5124  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5125  011BC6  EE21  F313         	lfsr	2,_C+20	;volatile
  5126  011BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5127  011BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5128  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5129  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5130  011BE2  0E74               	movlw	low STR_28
  5131  011BE4  6EE6               	movwf	postinc1,c
  5132  011BE6  0EFE               	movlw	high STR_28
  5133  011BE8  6EE6               	movwf	postinc1,c
  5134  011BEA  0E00               	movlw	0
  5135  011BEC  6EE6               	movwf	postinc1,c
  5136  011BEE  0E00               	movlw	0
  5137  011BF0  6EE6               	movwf	postinc1,c
  5138  011BF2  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5139  011BF6  0060  F007  FFE6   	movff	btemp,postinc1
  5140  011BFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5141  011C02  0E0C               	movlw	12
  5142  011C04  6EE6               	movwf	postinc1,c
  5143  011C06  EC85  F0CE         	call	_sprintf	;wreg free
  5144                           
  5145                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5146  011C0A  EE21  F2FF         	lfsr	2,_C
  5147  011C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5148  011C14  006F FF7B FFE6     	movff	postinc2,postinc1
  5149  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5150  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5151  011C26  EE21  F30F         	lfsr	2,_C+16	;volatile
  5152  011C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5153  011C30  006F FF7B FFE6     	movff	postinc2,postinc1
  5154  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5155  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5156  011C42  0E48               	movlw	low STR_29
  5157  011C44  6EE6               	movwf	postinc1,c
  5158  011C46  0EFE               	movlw	high STR_29
  5159  011C48  6EE6               	movwf	postinc1,c
  5160  011C4A  0E00               	movlw	0
  5161  011C4C  6EE6               	movwf	postinc1,c
  5162  011C4E  0E01               	movlw	1
  5163  011C50  6EE6               	movwf	postinc1,c
  5164  011C52  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5165  011C56  0060  F007  FFE6   	movff	btemp,postinc1
  5166  011C5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5167  011C62  0E0C               	movlw	12
  5168  011C64  6EE6               	movwf	postinc1,c
  5169  011C66  EC85  F0CE         	call	_sprintf	;wreg free
  5170                           
  5171                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5172  011C6A  EE21  F33F         	lfsr	2,_C+64	;volatile
  5173  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5174  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  5175  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5176  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5177  011C86  EE21  F307         	lfsr	2,_C+8	;volatile
  5178  011C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  011C90  006F FF7B FFE6     	movff	postinc2,postinc1
  5180  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5181  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5182  011CA2  0E5E               	movlw	low STR_30
  5183  011CA4  6EE6               	movwf	postinc1,c
  5184  011CA6  0EFE               	movlw	high STR_30
  5185  011CA8  6EE6               	movwf	postinc1,c
  5186  011CAA  0E00               	movlw	0
  5187  011CAC  6EE6               	movwf	postinc1,c
  5188  011CAE  0E02               	movlw	2
  5189  011CB0  6EE6               	movwf	postinc1,c
  5190  011CB2  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5191  011CB6  0060  F007  FFE6   	movff	btemp,postinc1
  5192  011CBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5193  011CC2  0E0C               	movlw	12
  5194  011CC4  6EE6               	movwf	postinc1,c
  5195  011CC6  EC85  F0CE         	call	_sprintf	;wreg free
  5196                           
  5197                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5198  011CCA  EE21  F39F         	lfsr	2,_C+160	;volatile
  5199  011CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5200  011CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5201  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5202  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  011CE6  0E6C               	movlw	low STR_31
  5204  011CE8  6EE6               	movwf	postinc1,c
  5205  011CEA  0EFD               	movlw	high STR_31
  5206  011CEC  6EE6               	movwf	postinc1,c
  5207  011CEE  0E01               	movlw	1
  5208  011CF0  6EE6               	movwf	postinc1,c
  5209  011CF2  0E00               	movlw	0
  5210  011CF4  6EE6               	movwf	postinc1,c
  5211  011CF6  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5212  011CFA  0060  F007  FFE6   	movff	btemp,postinc1
  5213  011D00  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5214  011D06  0E08               	movlw	8
  5215  011D08  6EE6               	movwf	postinc1,c
  5216  011D0A  EC85  F0CE         	call	_sprintf	;wreg free
  5217                           
  5218                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5219  011D0E  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5220  011D12  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  011D18  006F FF7B FFE6     	movff	postinc2,postinc1
  5222  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5223  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5224  011D2A  0E82               	movlw	low STR_32
  5225  011D2C  6EE6               	movwf	postinc1,c
  5226  011D2E  0EFD               	movlw	high STR_32
  5227  011D30  6EE6               	movwf	postinc1,c
  5228  011D32  0E01               	movlw	1
  5229  011D34  6EE6               	movwf	postinc1,c
  5230  011D36  0E01               	movlw	1
  5231  011D38  6EE6               	movwf	postinc1,c
  5232  011D3A  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5233  011D3E  0060  F007  FFE6   	movff	btemp,postinc1
  5234  011D44  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5235  011D4A  0E08               	movlw	8
  5236  011D4C  6EE6               	movwf	postinc1,c
  5237  011D4E  EC85  F0CE         	call	_sprintf	;wreg free
  5238                           
  5239                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5240  011D52  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5241  011D56  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  011D5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5244  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5245  011D6E  EE21  F39F         	lfsr	2,_C+160	;volatile
  5246  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  5247  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  5248  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5249  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5250  011D8A  ECC8  F0A2         	call	___fladd	;wreg free
  5251  011D8E  0060  F007  FFE6   	movff	btemp,postinc1
  5252  011D94  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5253  011D9A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5254  011DA0  0060  F013  FFE6   	movff	btemp+3,postinc1
  5255  011DA6  0E98               	movlw	low STR_33
  5256  011DA8  6EE6               	movwf	postinc1,c
  5257  011DAA  0EFD               	movlw	high STR_33
  5258  011DAC  6EE6               	movwf	postinc1,c
  5259  011DAE  0E01               	movlw	1
  5260  011DB0  6EE6               	movwf	postinc1,c
  5261  011DB2  0E02               	movlw	2
  5262  011DB4  6EE6               	movwf	postinc1,c
  5263  011DB6  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5264  011DBA  0060  F007  FFE6   	movff	btemp,postinc1
  5265  011DC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5266  011DC6  0E08               	movlw	8
  5267  011DC8  6EE6               	movwf	postinc1,c
  5268  011DCA  EC85  F0CE         	call	_sprintf	;wreg free
  5269                           
  5270                           ;main.c: 368:      break;
  5271  011DCE  D222               	goto	l13234
  5272  011DD0                     l1361:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;main.c: 370:      V.calib = 0;
  5276  011DD0  0101               	movlb	1	; () banked
  5277  011DD2  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5278                           
  5279                           ; BSR set to: 1
  5280                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5281  011DD4  EE21  F37F         	lfsr	2,_C+128	;volatile
  5282  011DD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5283  011DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5284  011DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5285  011DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5286  011DF0  0EE4               	movlw	low STR_34
  5287  011DF2  6EE6               	movwf	postinc1,c
  5288  011DF4  0EFC               	movlw	high STR_34
  5289  011DF6  6EE6               	movwf	postinc1,c
  5290  011DF8  0E00               	movlw	0
  5291  011DFA  6EE6               	movwf	postinc1,c
  5292  011DFC  0E00               	movlw	0
  5293  011DFE  6EE6               	movwf	postinc1,c
  5294  011E00  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5295  011E04  0060  F007  FFE6   	movff	btemp,postinc1
  5296  011E0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5297  011E10  0E08               	movlw	8
  5298  011E12  6EE6               	movwf	postinc1,c
  5299  011E14  EC85  F0CE         	call	_sprintf	;wreg free
  5300                           
  5301                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5302  011E18  EE21  F393         	lfsr	2,_C+148	;volatile
  5303  011E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5304  011E22  006F FF7B FFE6     	movff	postinc2,postinc1
  5305  011E28  006F FF7B FFE6     	movff	postinc2,postinc1
  5306  011E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5307  011E34  EE21  F38F         	lfsr	2,_C+144	;volatile
  5308  011E38  006F FF7B FFE6     	movff	postinc2,postinc1
  5309  011E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5310  011E44  006F FF7B FFE6     	movff	postinc2,postinc1
  5311  011E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5312  011E50  0E29               	movlw	low STR_35
  5313  011E52  6EE6               	movwf	postinc1,c
  5314  011E54  0EFD               	movlw	high STR_35
  5315  011E56  6EE6               	movwf	postinc1,c
  5316  011E58  0E00               	movlw	0
  5317  011E5A  6EE6               	movwf	postinc1,c
  5318  011E5C  0E01               	movlw	1
  5319  011E5E  6EE6               	movwf	postinc1,c
  5320  011E60  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5321  011E64  0060  F007  FFE6   	movff	btemp,postinc1
  5322  011E6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5323  011E70  0E0C               	movlw	12
  5324  011E72  6EE6               	movwf	postinc1,c
  5325  011E74  EC85  F0CE         	call	_sprintf	;wreg free
  5326                           
  5327                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d        ", spinners(5, 0)
      +                          , C.soc, C.runtime);
  5328  011E78  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5329  011E7C  006F FF78  F00B    	movff	postinc2,btemp+10
  5330  011E82  006F FF74  F00C    	movff	postdec2,btemp+11
  5331  011E88  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5332  011E8E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5333  011E94  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5334  011E98  006F FF78  F00B    	movff	postinc2,btemp+10
  5335  011E9E  006F FF74  F00C    	movff	postdec2,btemp+11
  5336  011EA4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5337  011EAA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5338  011EB0  0E00               	movlw	0
  5339  011EB2  6EE6               	movwf	postinc1,c
  5340  011EB4  0E05               	movlw	5
  5341  011EB6  6EE6               	movwf	postinc1,c
  5342  011EB8  EC78  F0D0         	call	_spinners	;wreg free
  5343  011EBC  5001               	movf	btemp^0,w,c
  5344  011EBE  6EE6               	movwf	postinc1,c
  5345  011EC0  0E00               	movlw	0
  5346  011EC2  6EE6               	movwf	postinc1,c
  5347  011EC4  0ECD               	movlw	low STR_36
  5348  011EC6  6EE6               	movwf	postinc1,c
  5349  011EC8  0EFC               	movlw	high STR_36
  5350  011ECA  6EE6               	movwf	postinc1,c
  5351  011ECC  0E00               	movlw	0
  5352  011ECE  6EE6               	movwf	postinc1,c
  5353  011ED0  0E02               	movlw	2
  5354  011ED2  6EE6               	movwf	postinc1,c
  5355  011ED4  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5356  011ED8  0060  F007  FFE6   	movff	btemp,postinc1
  5357  011EDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5358  011EE4  0E0A               	movlw	10
  5359  011EE6  6EE6               	movwf	postinc1,c
  5360  011EE8  EC85  F0CE         	call	_sprintf	;wreg free
  5361                           
  5362                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5363  011EEC  EE21  F387         	lfsr	2,_C+136	;volatile
  5364  011EF0  006F FF7B FFE6     	movff	postinc2,postinc1
  5365  011EF6  006F FF7B FFE6     	movff	postinc2,postinc1
  5366  011EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5367  011F02  006F FF7B FFE6     	movff	postinc2,postinc1
  5368  011F08  0EB6               	movlw	low STR_37
  5369  011F0A  6EE6               	movwf	postinc1,c
  5370  011F0C  0EFC               	movlw	high STR_37
  5371  011F0E  6EE6               	movwf	postinc1,c
  5372  011F10  0E01               	movlw	1
  5373  011F12  6EE6               	movwf	postinc1,c
  5374  011F14  0E00               	movlw	0
  5375  011F16  6EE6               	movwf	postinc1,c
  5376  011F18  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5377  011F1C  0060  F007  FFE6   	movff	btemp,postinc1
  5378  011F22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5379  011F28  0E08               	movlw	8
  5380  011F2A  6EE6               	movwf	postinc1,c
  5381  011F2C  EC85  F0CE         	call	_sprintf	;wreg free
  5382                           
  5383                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5384  011F30  EE22  F00D         	lfsr	2,_C+270	;volatile
  5385  011F34  006F FF7B FFE6     	movff	postinc2,postinc1
  5386  011F3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5387  011F40  006F FF7B FFE6     	movff	postinc2,postinc1
  5388  011F46  006F FF7B FFE6     	movff	postinc2,postinc1
  5389  011F4C  EE22  F019         	lfsr	2,_C+282	;volatile
  5390  011F50  006F FF7B FFE6     	movff	postinc2,postinc1
  5391  011F56  006F FF7B FFE6     	movff	postinc2,postinc1
  5392  011F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5393  011F62  006F FF7B FFE6     	movff	postinc2,postinc1
  5394  011F68  0EFB               	movlw	low STR_38
  5395  011F6A  6EE6               	movwf	postinc1,c
  5396  011F6C  0EFC               	movlw	high STR_38
  5397  011F6E  6EE6               	movwf	postinc1,c
  5398  011F70  0E01               	movlw	1
  5399  011F72  6EE6               	movwf	postinc1,c
  5400  011F74  0E01               	movlw	1
  5401  011F76  6EE6               	movwf	postinc1,c
  5402  011F78  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5403  011F7C  0060  F007  FFE6   	movff	btemp,postinc1
  5404  011F82  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5405  011F88  0E0C               	movlw	12
  5406  011F8A  6EE6               	movwf	postinc1,c
  5407  011F8C  EC85  F0CE         	call	_sprintf	;wreg free
  5408                           
  5409                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5410  011F90  EE22  F011         	lfsr	2,_C+274	;volatile
  5411  011F94  006F FF7B FFE6     	movff	postinc2,postinc1
  5412  011F9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5413  011FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  5414  011FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  5415  011FAC  EE22  F01D         	lfsr	2,_C+286	;volatile
  5416  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5417  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5418  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5419  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5420  011FC8  0E12               	movlw	low STR_39
  5421  011FCA  6EE6               	movwf	postinc1,c
  5422  011FCC  0EFD               	movlw	high STR_39
  5423  011FCE  6EE6               	movwf	postinc1,c
  5424  011FD0  0E01               	movlw	1
  5425  011FD2  6EE6               	movwf	postinc1,c
  5426  011FD4  0E02               	movlw	2
  5427  011FD6  6EE6               	movwf	postinc1,c
  5428  011FD8  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5429  011FDC  0060  F007  FFE6   	movff	btemp,postinc1
  5430  011FE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5431  011FE8  0E0C               	movlw	12
  5432  011FEA  6EE6               	movwf	postinc1,c
  5433  011FEC  EC85  F0CE         	call	_sprintf	;wreg free
  5434                           
  5435                           ;main.c: 378:      break;
  5436  011FF0  D111               	goto	l13234
  5437  011FF2                     l13218:
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;main.c: 380:      if (!V.calib) {
  5441  011FF2  0101               	movlb	1	; () banked
  5442  011FF4  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  5443  011FF6  A4D8               	btfss	status,2,c
  5444  011FF8  D02D               	goto	l13222
  5445                           
  5446                           ; BSR set to: 1
  5447                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5448  011FFA  0EFF               	movlw	255
  5449  011FFC  6EE6               	movwf	postinc1,c
  5450                           
  5451                           ;stkvar	_i @ sp[(-18)+14]
  5452  011FFE  0EFC               	movlw	-4
  5453  012000  50E3               	movf	plusw1,w,c
  5454  012002  6EE6               	movwf	postinc1,c
  5455  012004  0E00               	movlw	0
  5456  012006  6EE6               	movwf	postinc1,c
  5457  012008  0E00               	movlw	0
  5458  01200A  6EE6               	movwf	postinc1,c
  5459  01200C  0E00               	movlw	0
  5460  01200E  6EE6               	movwf	postinc1,c
  5461  012010  0E00               	movlw	0
  5462  012012  6EE6               	movwf	postinc1,c
  5463  012014  EC31  F0C3         	call	_lp_filter	;wreg free
  5464                           
  5465                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5466  012018  0EFF               	movlw	255
  5467  01201A  6EE6               	movwf	postinc1,c
  5468                           
  5469                           ;stkvar	_j @ sp[(-18)+13]
  5470  01201C  0EFB               	movlw	-5
  5471  01201E  50E3               	movf	plusw1,w,c
  5472  012020  6EE6               	movwf	postinc1,c
  5473  012022  0E00               	movlw	0
  5474  012024  6EE6               	movwf	postinc1,c
  5475  012026  0E00               	movlw	0
  5476  012028  6EE6               	movwf	postinc1,c
  5477  01202A  0E00               	movlw	0
  5478  01202C  6EE6               	movwf	postinc1,c
  5479  01202E  0E00               	movlw	0
  5480  012030  6EE6               	movwf	postinc1,c
  5481  012032  EC31  F0C3         	call	_lp_filter	;wreg free
  5482                           
  5483                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5484  012036  0EFF               	movlw	255
  5485  012038  6EE6               	movwf	postinc1,c
  5486                           
  5487                           ;stkvar	_k @ sp[(-18)+12]
  5488  01203A  0EFA               	movlw	-6
  5489  01203C  50E3               	movf	plusw1,w,c
  5490  01203E  6EE6               	movwf	postinc1,c
  5491  012040  0E00               	movlw	0
  5492  012042  6EE6               	movwf	postinc1,c
  5493  012044  0E00               	movlw	0
  5494  012046  6EE6               	movwf	postinc1,c
  5495  012048  0E00               	movlw	0
  5496  01204A  6EE6               	movwf	postinc1,c
  5497  01204C  0E00               	movlw	0
  5498  01204E  6EE6               	movwf	postinc1,c
  5499  012050  EC31  F0C3         	call	_lp_filter	;wreg free
  5500  012054                     l13222:
  5501                           
  5502                           ;main.c: 385:      V.calib = 1;
  5503  012054  0E01               	movlw	1
  5504  012056  0101               	movlb	1	; () banked
  5505  012058  6FDC               	movwf	(_V+172)& (0+255),b	;volatile
  5506                           
  5507                           ; BSR set to: 1
  5508                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5509                           ;stkvar	_inp_index @ sp[(-17)+11]
  5510  01205A  0EFA               	movlw	-6
  5511  01205C  50E3               	movf	plusw1,w,c
  5512  01205E  6E0B               	movwf	(btemp+10)^0,c
  5513  012060  6A0C               	clrf	(btemp+11)^0,c
  5514  012062  0E01               	movlw	1
  5515  012064  260B               	addwf	(btemp+10)^0,f,c
  5516  012066  0E00               	movlw	0
  5517  012068  220C               	addwfc	(btemp+11)^0,f,c
  5518  01206A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5519  012070  0060  F033  FFE6   	movff	btemp+11,postinc1
  5520                           
  5521                           ;stkvar	_i @ sp[(-19)+14]
  5522  012076  0EFB               	movlw	-5
  5523  012078  50E3               	movf	plusw1,w,c
  5524  01207A  0D04               	mullw	4
  5525  01207C  0EFF               	movlw	low _C
  5526  01207E  24F3               	addwf	243,w,c
  5527  012080  6ED9               	movwf	fsr2l,c
  5528  012082  0E06               	movlw	high _C
  5529  012084  20F4               	addwfc	prodh,w,c
  5530  012086  6EDA               	movwf	fsr2h,c
  5531  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5532  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5533  012094  006F FF7B FFE6     	movff	postinc2,postinc1
  5534  01209A  006F FF7B FFE6     	movff	postinc2,postinc1
  5535                           
  5536                           ;stkvar	_i @ sp[(-23)+14]
  5537  0120A0  0EF7               	movlw	-9
  5538  0120A2  50E3               	movf	plusw1,w,c
  5539  0120A4  6EE6               	movwf	postinc1,c
  5540  0120A6  EC4A  F0DF         	call	_get_raw_result	;wreg free
  5541  0120AA  0060  F007  FFE6   	movff	btemp,postinc1
  5542  0120B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5543  0120B6  0E8A               	movlw	low STR_40
  5544  0120B8  6EE6               	movwf	postinc1,c
  5545  0120BA  0EFE               	movlw	high STR_40
  5546  0120BC  6EE6               	movwf	postinc1,c
  5547  0120BE  0E00               	movlw	0
  5548  0120C0  6EE6               	movwf	postinc1,c
  5549  0120C2  0E00               	movlw	0
  5550  0120C4  6EE6               	movwf	postinc1,c
  5551  0120C6  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5552  0120CA  0060  F007  FFE6   	movff	btemp,postinc1
  5553  0120D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5554  0120D6  0E0C               	movlw	12
  5555  0120D8  6EE6               	movwf	postinc1,c
  5556  0120DA  EC85  F0CE         	call	_sprintf	;wreg free
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5560                           ;stkvar	_inp_index @ sp[(-17)+11]
  5561  0120DE  0EFA               	movlw	-6
  5562  0120E0  50E3               	movf	plusw1,w,c
  5563  0120E2  6E0B               	movwf	(btemp+10)^0,c
  5564  0120E4  6A0C               	clrf	(btemp+11)^0,c
  5565  0120E6  0E02               	movlw	2
  5566  0120E8  260B               	addwf	(btemp+10)^0,f,c
  5567  0120EA  0E00               	movlw	0
  5568  0120EC  220C               	addwfc	(btemp+11)^0,f,c
  5569  0120EE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5570  0120F4  0060  F033  FFE6   	movff	btemp+11,postinc1
  5571                           
  5572                           ;stkvar	_j @ sp[(-19)+13]
  5573  0120FA  0EFA               	movlw	-6
  5574  0120FC  50E3               	movf	plusw1,w,c
  5575  0120FE  0D04               	mullw	4
  5576  012100  0EFF               	movlw	low _C
  5577  012102  24F3               	addwf	243,w,c
  5578  012104  6ED9               	movwf	fsr2l,c
  5579  012106  0E06               	movlw	high _C
  5580  012108  20F4               	addwfc	prodh,w,c
  5581  01210A  6EDA               	movwf	fsr2h,c
  5582  01210C  006F FF7B FFE6     	movff	postinc2,postinc1
  5583  012112  006F FF7B FFE6     	movff	postinc2,postinc1
  5584  012118  006F FF7B FFE6     	movff	postinc2,postinc1
  5585  01211E  006F FF7B FFE6     	movff	postinc2,postinc1
  5586                           
  5587                           ;stkvar	_j @ sp[(-23)+13]
  5588  012124  0EF6               	movlw	-10
  5589  012126  50E3               	movf	plusw1,w,c
  5590  012128  6EE6               	movwf	postinc1,c
  5591  01212A  EC4A  F0DF         	call	_get_raw_result	;wreg free
  5592  01212E  0060  F007  FFE6   	movff	btemp,postinc1
  5593  012134  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5594  01213A  0E8A               	movlw	low STR_40
  5595  01213C  6EE6               	movwf	postinc1,c
  5596  01213E  0EFE               	movlw	high STR_40
  5597  012140  6EE6               	movwf	postinc1,c
  5598  012142  0E00               	movlw	0
  5599  012144  6EE6               	movwf	postinc1,c
  5600  012146  0E01               	movlw	1
  5601  012148  6EE6               	movwf	postinc1,c
  5602  01214A  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5603  01214E  0060  F007  FFE6   	movff	btemp,postinc1
  5604  012154  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5605  01215A  0E0C               	movlw	12
  5606  01215C  6EE6               	movwf	postinc1,c
  5607  01215E  EC85  F0CE         	call	_sprintf	;wreg free
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5611                           ;stkvar	_inp_index @ sp[(-17)+11]
  5612  012162  0EFA               	movlw	-6
  5613  012164  50E3               	movf	plusw1,w,c
  5614  012166  6E0B               	movwf	(btemp+10)^0,c
  5615  012168  6A0C               	clrf	(btemp+11)^0,c
  5616  01216A  0E03               	movlw	3
  5617  01216C  260B               	addwf	(btemp+10)^0,f,c
  5618  01216E  0E00               	movlw	0
  5619  012170  220C               	addwfc	(btemp+11)^0,f,c
  5620  012172  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5621  012178  0060  F033  FFE6   	movff	btemp+11,postinc1
  5622                           
  5623                           ;stkvar	_k @ sp[(-19)+12]
  5624  01217E  0EF9               	movlw	-7
  5625  012180  50E3               	movf	plusw1,w,c
  5626  012182  0D04               	mullw	4
  5627  012184  0EFF               	movlw	low _C
  5628  012186  24F3               	addwf	243,w,c
  5629  012188  6ED9               	movwf	fsr2l,c
  5630  01218A  0E06               	movlw	high _C
  5631  01218C  20F4               	addwfc	prodh,w,c
  5632  01218E  6EDA               	movwf	fsr2h,c
  5633  012190  006F FF7B FFE6     	movff	postinc2,postinc1
  5634  012196  006F FF7B FFE6     	movff	postinc2,postinc1
  5635  01219C  006F FF7B FFE6     	movff	postinc2,postinc1
  5636  0121A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5637                           
  5638                           ;stkvar	_k @ sp[(-23)+12]
  5639  0121A8  0EF5               	movlw	-11
  5640  0121AA  50E3               	movf	plusw1,w,c
  5641  0121AC  6EE6               	movwf	postinc1,c
  5642  0121AE  EC4A  F0DF         	call	_get_raw_result	;wreg free
  5643  0121B2  0060  F007  FFE6   	movff	btemp,postinc1
  5644  0121B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5645  0121BE  0E8A               	movlw	low STR_40
  5646  0121C0  6EE6               	movwf	postinc1,c
  5647  0121C2  0EFE               	movlw	high STR_40
  5648  0121C4  6EE6               	movwf	postinc1,c
  5649  0121C6  0E00               	movlw	0
  5650  0121C8  6EE6               	movwf	postinc1,c
  5651  0121CA  0E02               	movlw	2
  5652  0121CC  6EE6               	movwf	postinc1,c
  5653  0121CE  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  5654  0121D2  0060  F007  FFE6   	movff	btemp,postinc1
  5655  0121D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5656  0121DE  0E0C               	movlw	12
  5657  0121E0  6EE6               	movwf	postinc1,c
  5658  0121E2  EC85  F0CE         	call	_sprintf	;wreg free
  5659                           
  5660                           ;main.c: 389:      break;
  5661  0121E6  D016               	goto	l13234
  5662  0121E8                     l13232:
  5663  0121E8  0100               	movlb	0	; () banked
  5664  0121EA  51F7               	movf	_H& (0+255),w,b
  5665  0121EC  6E0B               	movwf	(btemp+10)^0,c
  5666  0121EE  6A0C               	clrf	(btemp+11)^0,c
  5667                           
  5668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5669                           ; Switch size 1, requested type "simple"
  5670                           ; Number of cases is 1, Range of values is 0 to 0
  5671                           ; switch strategies available:
  5672                           ; Name         Instructions Cycles
  5673                           ; simple_byte            4     3 (average)
  5674                           ;	Chosen strategy is simple_byte
  5675  0121F0  500C               	movf	(btemp+11)^0,w,c
  5676  0121F2  0A00               	xorlw	0	; case 0
  5677  0121F4  A4D8               	btfss	status,2,c
  5678  0121F6  D00E               	goto	l13234
  5679                           
  5680                           ; BSR set to: 0
  5681                           ; Switch size 1, requested type "simple"
  5682                           ; Number of cases is 4, Range of values is 0 to 3
  5683                           ; switch strategies available:
  5684                           ; Name         Instructions Cycles
  5685                           ; simple_byte           13     7 (average)
  5686                           ;	Chosen strategy is simple_byte
  5687  0121F8  500B               	movf	(btemp+10)^0,w,c
  5688  0121FA  0A00               	xorlw	0	; case 0
  5689  0121FC  B4D8               	btfsc	status,2,c
  5690  0121FE  D4D3               	goto	l1360
  5691  012200  0A01               	xorlw	1	; case 1
  5692  012202  B4D8               	btfsc	status,2,c
  5693  012204  EFD0  F08C         	goto	l1350
  5694  012208  0A03               	xorlw	3	; case 2
  5695  01220A  B4D8               	btfsc	status,2,c
  5696  01220C  D5E1               	goto	l1361
  5697  01220E  0A01               	xorlw	1	; case 3
  5698  012210  B4D8               	btfsc	status,2,c
  5699  012212  D6EF               	goto	l13218
  5700  012214                     l13234:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;main.c: 393:     clear_hid_pflags(&H);
  5704  012214  0EF7               	movlw	_H& (0+255)
  5705  012216  6EE6               	movwf	postinc1,c
  5706  012218  ECDE  F0DE         	call	_clear_hid_pflags	;wreg free
  5707                           
  5708                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5709  01221C  0EFA               	movlw	250
  5710  01221E  6EE6               	movwf	postinc1,c
  5711  012220  0E00               	movlw	0
  5712  012222  6EE6               	movwf	postinc1,c
  5713  012224  0E0A               	movlw	10
  5714  012226  6EE6               	movwf	postinc1,c
  5715  012228  EC8D  F0DB         	call	_StartTimer	;wreg free
  5716                           
  5717                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5718  01222C  0EF7               	movlw	_H& (0+255)
  5719  01222E  6EE6               	movwf	postinc1,c
  5720  012230  ECAD  F0DB         	call	_check_enter_button	;wreg free
  5721  012234  5001               	movf	btemp^0,w,c
  5722  012236  0101               	movlb	1	; () banked
  5723  012238  6FDD               	movwf	(_V+173)& (0+255),b	;volatile
  5724                           
  5725                           ; BSR set to: 1
  5726                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5727  01223A  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5728  01223C  B4D8               	btfsc	status,2,c
  5729  01223E  D013               	goto	l13248
  5730                           
  5731                           ; BSR set to: 1
  5732  012240  0E03               	movlw	3
  5733  012242  0100               	movlb	0	; () banked
  5734  012244  19F7               	xorwf	_H& (0+255),w,b
  5735  012246  B4D8               	btfsc	status,2,c
  5736  012248  D00E               	goto	l13248
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;main.c: 398:     V.enter = 0;
  5740  01224A  0101               	movlb	1	; () banked
  5741  01224C  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5742                           
  5743                           ; BSR set to: 1
  5744                           ;main.c: 399:     V.screen = ~V.screen;
  5745  01224E  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5746  012250  D002               	goto	u12720
  5747  012252  0E01               	movlw	1
  5748  012254  D001               	goto	u12726
  5749  012256                     u12720:
  5750  012256  0E00               	movlw	0
  5751  012258                     u12726:
  5752  012258  0AFF               	xorlw	255
  5753  01225A  6E0C               	movwf	(btemp+11)^0,c
  5754  01225C  51CC               	movf	(_V+156)& (0+255),w,b	;volatile
  5755  01225E  180C               	xorwf	(btemp+11)^0,w,c
  5756  012260  0BFE               	andlw	-2
  5757  012262  180C               	xorwf	(btemp+11)^0,w,c
  5758  012264  6FCC               	movwf	(_V+156)& (0+255),b	;volatile
  5759  012266                     l13248:
  5760                           
  5761                           ;main.c: 401:    set_vterm(V.screen);
  5762  012266  0101               	movlb	1	; () banked
  5763  012268  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5764  01226A  D002               	goto	u12730
  5765  01226C  0E01               	movlw	1
  5766  01226E  D001               	goto	u12736
  5767  012270                     u12730:
  5768  012270  0E00               	movlw	0
  5769  012272                     u12736:
  5770  012272  6EE6               	movwf	postinc1,c
  5771  012274  ECAA  F0DF         	call	_set_vterm	;wreg free
  5772                           
  5773                           ;main.c: 402:    update_lcd(V.screen);
  5774  012278  0101               	movlb	1	; () banked
  5775  01227A  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5776  01227C  D002               	goto	u12740
  5777  01227E  0E01               	movlw	1
  5778  012280  D001               	goto	u12746
  5779  012282                     u12740:
  5780  012282  0E00               	movlw	0
  5781  012284                     u12746:
  5782  012284  6EE6               	movwf	postinc1,c
  5783  012286  ECFD  F0CD         	call	_update_lcd	;wreg free
  5784  01228A                     l13252:
  5785                           
  5786                           ;main.c: 408:   check_help(V.flipper);
  5787  01228A  0101               	movlb	1	; () banked
  5788  01228C  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  5789  01228E  6EE6               	movwf	postinc1,c
  5790  012290  EC26  F0C1         	call	_check_help	;wreg free
  5791                           
  5792                           ;main.c: 410:   if (V.enter) {
  5793  012294  0101               	movlb	1	; () banked
  5794  012296  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5795  012298  B4D8               	btfsc	status,2,c
  5796  01229A  D062               	goto	l1366
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;main.c: 411:    V.enter = 0;
  5800  01229C  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5801                           
  5802                           ;main.c: 412:    V.calib = 0;
  5803  01229E  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;main.c: 413:    inp_index += 3;
  5807                           ;stkvar	_inp_index @ sp[(-17)+11]
  5808  0122A0  0EFA               	movlw	-6
  5809  0122A2  006F FF8C  F001    	movff	plusw1,btemp
  5810  0122A8  0E03               	movlw	3
  5811  0122AA  2601               	addwf	btemp^0,f,c
  5812  0122AC  0EFA               	movlw	-6
  5813  0122AE  0060  F007  FFE3   	movff	btemp,plusw1
  5814                           
  5815                           ;main.c: 414:    if (inp_index > 9)
  5816                           ;stkvar	_inp_index @ sp[(-17)+11]
  5817  0122B4  0EFA               	movlw	-6
  5818  0122B6  006F FF8C  F001    	movff	plusw1,btemp
  5819  0122BC  0E09               	movlw	9
  5820  0122BE  6401               	cpfsgt	btemp^0,c
  5821  0122C0  D03A               	goto	l13280
  5822                           
  5823                           ; BSR set to: 1
  5824                           ;main.c: 415:     inp_index = 0;
  5825                           ;stkvar	_inp_index @ sp[(-17)+11]
  5826  0122C2  0EFA               	movlw	-6
  5827  0122C4  6AE3               	clrf	plusw1,c
  5828  0122C6  D037               	goto	l13280
  5829  0122C8                     l13262:
  5830                           
  5831                           ; BSR set to: 1
  5832                           ;main.c: 418:     i = C_BATT;
  5833                           ;stkvar	_i @ sp[(-17)+14]
  5834  0122C8  0EFD               	movlw	-3
  5835  0122CA  6AE3               	clrf	plusw1,c
  5836                           
  5837                           ; BSR set to: 1
  5838                           ;main.c: 419:     j = C_PV;
  5839                           ;stkvar	_j @ sp[(-17)+13]
  5840  0122CC  0EFC               	movlw	-4
  5841  0122CE  6AE3               	clrf	plusw1,c
  5842  0122D0  2AE3               	incf	plusw1,f,c
  5843                           
  5844                           ; BSR set to: 1
  5845                           ;main.c: 420:     k = V_CC;
  5846                           ;stkvar	_k @ sp[(-17)+12]
  5847  0122D2  0EFB               	movlw	-5
  5848  0122D4  6AE3               	clrf	plusw1,c
  5849  0122D6  82E3               	bsf	plusw1,1,c
  5850                           
  5851                           ;main.c: 421:     break;
  5852  0122D8  D043               	goto	l1366
  5853  0122DA                     l13268:
  5854                           
  5855                           ; BSR set to: 1
  5856                           ;main.c: 423:     i = V_BAT;
  5857                           ;stkvar	_i @ sp[(-17)+14]
  5858  0122DA  0EFD               	movlw	-3
  5859  0122DC  6AE3               	clrf	plusw1,c
  5860  0122DE  84E3               	bsf	plusw1,2,c
  5861                           
  5862                           ;main.c: 424:     j = V_PV;
  5863                           ;stkvar	_j @ sp[(-17)+13]
  5864  0122E0  0EFC               	movlw	-4
  5865  0122E2  6AE3               	clrf	plusw1,c
  5866  0122E4  80E3               	bsf	plusw1,0,c
  5867  0122E6  84E3               	bsf	plusw1,2,c	;indir
  5868                           
  5869                           ;main.c: 425:     k = V_CBUS;
  5870                           ;stkvar	_k @ sp[(-17)+12]
  5871  0122E8  0EFB               	movlw	-5
  5872  0122EA  6AE3               	clrf	plusw1,c
  5873  0122EC  82E3               	bsf	plusw1,1,c
  5874  0122EE  84E3               	bsf	plusw1,2,c	;indir
  5875                           
  5876                           ;main.c: 426:     break;
  5877  0122F0  D037               	goto	l1366
  5878  0122F2                     l13270:
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;main.c: 428:     i = V_BBAT;
  5882                           ;stkvar	_i @ sp[(-17)+14]
  5883  0122F2  0EFD               	movlw	-3
  5884  0122F4  6AE3               	clrf	plusw1,c
  5885  0122F6  82E3               	bsf	plusw1,1,c
  5886  0122F8  86E3               	bsf	plusw1,3,c	;indir
  5887                           
  5888                           ; BSR set to: 1
  5889                           ;main.c: 429:     j = V_TEMP;
  5890  0122FA  0E0B               	movlw	11
  5891  0122FC  6E0C               	movwf	(btemp+11)^0,c
  5892                           
  5893                           ;stkvar	_j @ sp[(-17)+13]
  5894  0122FE  0EFC               	movlw	-4
  5895  012300  0060  F033  FFE3   	movff	btemp+11,plusw1
  5896                           
  5897                           ; BSR set to: 1
  5898                           ;main.c: 430:     k = V_INVERTER;
  5899                           ;stkvar	_k @ sp[(-17)+12]
  5900  012306  0EFB               	movlw	-5
  5901  012308  6AE3               	clrf	plusw1,c
  5902  01230A  84E3               	bsf	plusw1,2,c
  5903  01230C  86E3               	bsf	plusw1,3,c	;indir
  5904                           
  5905                           ;main.c: 431:     break;
  5906  01230E  D028               	goto	l1366
  5907  012310                     l13276:
  5908                           
  5909                           ; BSR set to: 1
  5910                           ;main.c: 433:     i = V_LIGHT_SENSOR;
  5911  012310  0E0D               	movlw	13
  5912  012312  6E0C               	movwf	(btemp+11)^0,c
  5913                           
  5914                           ;stkvar	_i @ sp[(-17)+14]
  5915  012314  0EFD               	movlw	-3
  5916  012316  0060  F033  FFE3   	movff	btemp+11,plusw1
  5917                           
  5918                           ;main.c: 434:     j = V_LIGHT_SENSOR;
  5919  01231C  0E0D               	movlw	13
  5920  01231E  6E0C               	movwf	(btemp+11)^0,c
  5921                           
  5922                           ;stkvar	_j @ sp[(-17)+13]
  5923  012320  0EFC               	movlw	-4
  5924  012322  0060  F033  FFE3   	movff	btemp+11,plusw1
  5925                           
  5926                           ;main.c: 435:     k = V_LIGHT_SENSOR;
  5927  012328  0E0D               	movlw	13
  5928  01232A  6E0C               	movwf	(btemp+11)^0,c
  5929                           
  5930                           ;stkvar	_k @ sp[(-17)+12]
  5931  01232C  0EFB               	movlw	-5
  5932  01232E  0060  F033  FFE3   	movff	btemp+11,plusw1
  5933                           
  5934                           ;main.c: 436:     break;
  5935  012334  D015               	goto	l1366
  5936  012336                     l13280:
  5937                           
  5938                           ; BSR set to: 1
  5939                           ;stkvar	_inp_index @ sp[(-17)+11]
  5940  012336  0EFA               	movlw	-6
  5941  012338  50E3               	movf	plusw1,w,c
  5942  01233A  6E0B               	movwf	(btemp+10)^0,c
  5943  01233C  6A0C               	clrf	(btemp+11)^0,c
  5944                           
  5945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5946                           ; Switch size 1, requested type "simple"
  5947                           ; Number of cases is 1, Range of values is 0 to 0
  5948                           ; switch strategies available:
  5949                           ; Name         Instructions Cycles
  5950                           ; simple_byte            4     3 (average)
  5951                           ;	Chosen strategy is simple_byte
  5952  01233E  500C               	movf	(btemp+11)^0,w,c
  5953  012340  0A00               	xorlw	0	; case 0
  5954  012342  A4D8               	btfss	status,2,c
  5955  012344  D00D               	goto	l1366
  5956                           
  5957                           ; BSR set to: 1
  5958                           ; Switch size 1, requested type "simple"
  5959                           ; Number of cases is 4, Range of values is 0 to 9
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte           13     7 (average)
  5963                           ;	Chosen strategy is simple_byte
  5964  012346  500B               	movf	(btemp+10)^0,w,c
  5965  012348  0A00               	xorlw	0	; case 0
  5966  01234A  B4D8               	btfsc	status,2,c
  5967  01234C  D7BD               	goto	l13262
  5968  01234E  0A03               	xorlw	3	; case 3
  5969  012350  B4D8               	btfsc	status,2,c
  5970  012352  D7C3               	goto	l13268
  5971  012354  0A05               	xorlw	5	; case 6
  5972  012356  B4D8               	btfsc	status,2,c
  5973  012358  D7CC               	goto	l13270
  5974  01235A  0A0F               	xorlw	15	; case 9
  5975  01235C  B4D8               	btfsc	status,2,c
  5976  01235E  D7D8               	goto	l13276
  5977  012360                     l1366:
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;main.c: 445:   if (V.set_sequ) {
  5981  012360  A1CB               	btfss	(_V+155)& (0+255),0,b	;volatile
  5982  012362  EF84  F08C         	goto	l13162
  5983                           
  5984                           ; BSR set to: 1
  5985                           ;main.c: 446:    if (TimerDone(TMR_INFO)) {
  5986  012366  0E07               	movlw	7
  5987  012368  6EE6               	movwf	postinc1,c
  5988  01236A  ECB3  F0DD         	call	_TimerDone	;wreg free
  5989  01236E  5001               	movf	btemp^0,w,c
  5990  012370  B4D8               	btfsc	status,2,c
  5991  012372  D00C               	goto	l13290
  5992                           
  5993                           ;main.c: 447:     V.set_sequ = 0;
  5994  012374  0101               	movlb	1	; () banked
  5995  012376  91CB               	bcf	(_V+155)& (0+255),0,b	;volatile
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;main.c: 448:     set_vterm(0);
  5999  012378  0E00               	movlw	0
  6000  01237A  6EE6               	movwf	postinc1,c
  6001  01237C  ECAA  F0DF         	call	_set_vterm	;wreg free
  6002                           
  6003                           ;main.c: 449:     update_lcd(0);
  6004  012380  0E00               	movlw	0
  6005  012382  6EE6               	movwf	postinc1,c
  6006  012384  ECFD  F0CD         	call	_update_lcd	;wreg free
  6007                           
  6008                           ;main.c: 450:    } else {
  6009  012388  EF84  F08C         	goto	l13162
  6010  01238C                     l13290:
  6011                           
  6012                           ;main.c: 451:     set_vterm(2);
  6013  01238C  0E02               	movlw	2
  6014  01238E  6EE6               	movwf	postinc1,c
  6015  012390  ECAA  F0DF         	call	_set_vterm	;wreg free
  6016                           
  6017                           ;main.c: 452:     update_lcd(2);
  6018  012394  0E02               	movlw	2
  6019  012396  6EE6               	movwf	postinc1,c
  6020  012398  ECFD  F0CD         	call	_update_lcd	;wreg free
  6021  01239C  EF84  F08C         	goto	l13162
  6022  0123A0                     __end_of_main:
  6023                           	opt callstack 0
  6024                           
  6025 ;; *************** function _static_soc *****************
  6026 ;; Defined at:
  6027 ;;		line 117 in file "mbmc.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;		None
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1  [STACK] void 
  6034 ;; Registers used:
  6035 ;;		wreg, fsr2l, fsr2h
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/1
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6045 ;;Total ram usage:        0 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:   15
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_main
  6052 ;; This function uses a reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text1
  6056  01B1D4                     __ptext1:
  6057                           	opt callstack 0
  6058  01B1D4                     _static_soc:
  6059                           	opt callstack 15
  6060                           
  6061                           ;mbmc.c: 119:  C.runtime = 120;
  6062                           
  6063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6064                           ;incstack = 0
  6065  01B1D4  0E78               	movlw	120
  6066  01B1D6  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6067  01B1DC  0E00               	movlw	0
  6068  01B1DE  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6069                           
  6070                           ;mbmc.c: 120:  C.soc = 100;
  6071  01B1E4  0E64               	movlw	100
  6072  01B1E6  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6073  01B1EC  0E00               	movlw	0
  6074  01B1EE  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6075                           
  6076                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6077  01B1F4  EE21  F38B         	lfsr	2,_C+140	;volatile
  6078  01B1F8  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6079  01B1FE  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6080  01B204  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6081  01B20A  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6082                           
  6083                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6084  01B210  EE21  F38F         	lfsr	2,_C+144	;volatile
  6085  01B214  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6086  01B21A  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6087  01B220  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6088  01B226  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6089                           
  6090                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6091  01B22C  0012               	return		;funcret
  6092  01B22E                     __end_of_static_soc:
  6093                           	opt callstack 0
  6094                           
  6095 ;; *************** function _start_switch_handler *****************
  6096 ;; Defined at:
  6097 ;;		line 124 in file "dio.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1  [STACK] void 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 3F/39
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:   16
  6118 ;; This function calls:
  6119 ;;		_INT1_SetInterruptHandler
  6120 ;; This function is called by:
  6121 ;;		_main
  6122 ;; This function uses a reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text2
  6126  01BED8                     __ptext2:
  6127                           	opt callstack 0
  6128  01BED8                     _start_switch_handler:
  6129                           	opt callstack 14
  6130                           
  6131                           ;dio.c: 126:  (PIE5bits.INT1IE = 0);
  6132                           
  6133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6134                           ;incstack = 0
  6135  01BED8  0139               	movlb	57	; () banked
  6136  01BEDA  9195               	bcf	149,0,b	;volatile
  6137                           
  6138                           ; BSR set to: 57
  6139                           ;dio.c: 127:  INT1_SetInterruptHandler(switch_handler);
  6140  01BEDC  0EE0               	movlw	low _switch_handler
  6141  01BEDE  6EE6               	movwf	postinc1,c
  6142  01BEE0  0E93               	movlw	high _switch_handler
  6143  01BEE2  6EE6               	movwf	postinc1,c
  6144  01BEE4  0E01               	movlw	low (_switch_handler shr (0+16))
  6145  01BEE6  6EE6               	movwf	postinc1,c
  6146  01BEE8  EC3F  F0DE         	call	_INT1_SetInterruptHandler	;wreg free
  6147                           
  6148                           ;dio.c: 128:  S.button[SNULL].sw = SW_INVALID;
  6149  01BEEC  0E02               	movlw	2
  6150  01BEEE  0102               	movlb	2	; () banked
  6151  01BEF0  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6152                           
  6153                           ; BSR set to: 2
  6154                           ;dio.c: 129:  (PIE5bits.INT1IE = 1);
  6155  01BEF2  0139               	movlb	57	; () banked
  6156  01BEF4  8195               	bsf	149,0,b	;volatile
  6157                           
  6158                           ; BSR set to: 57
  6159                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6160  01BEF6  0012               	return		;funcret
  6161  01BEF8                     __end_of_start_switch_handler:
  6162                           	opt callstack 0
  6163                           
  6164 ;; *************** function _srand *****************
  6165 ;; Defined at:
  6166 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  s               2  [STACK] unsigned int 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1  [STACK] void 
  6173 ;; Registers used:
  6174 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 3F/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6184 ;;Total ram usage:        0 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:   15
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_main
  6191 ;; This function uses a reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text3
  6195  01B93A                     __ptext3:
  6196                           	opt callstack 0
  6197  01B93A                     _srand:
  6198                           	opt callstack 15
  6199                           
  6200                           ;stkvar	_s @ sp[(0)+-2]
  6201                           
  6202                           ; BSR set to: 57
  6203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6204                           ;incstack = 0
  6205  01B93A  0EFE               	movlw	-2
  6206  01B93C  50E3               	movf	plusw1,w,c
  6207  01B93E  0FFF               	addlw	255
  6208  01B940  6E0B               	movwf	(btemp+10)^0,c
  6209  01B942  0EFF               	movlw	-1
  6210  01B944  006F FF8C  F00C    	movff	plusw1,btemp+11
  6211  01B94A  0EFF               	movlw	255
  6212  01B94C  220C               	addwfc	(btemp+11)^0,f,c
  6213  01B94E  0060  F02C  F0CF   	movff	btemp+10,_seed
  6214  01B954  0060  F030  F0D0   	movff	btemp+11,_seed+1
  6215  01B95A  0100               	movlb	0	; () banked
  6216  01B95C  6BD1               	clrf	(_seed+2)& (0+255),b
  6217  01B95E  6BD2               	clrf	(_seed+3)& (0+255),b
  6218  01B960  6BD3               	clrf	(_seed+4)& (0+255),b
  6219  01B962  6BD4               	clrf	(_seed+5)& (0+255),b
  6220  01B964  6BD5               	clrf	(_seed+6)& (0+255),b
  6221  01B966  6BD6               	clrf	(_seed+7)& (0+255),b
  6222                           
  6223                           ; BSR set to: 0
  6224                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6225  01B968  52E5               	movf	postdec1,f,c
  6226  01B96A  52E5               	movf	postdec1,f,c
  6227  01B96C  0012               	return		;funcret
  6228  01B96E                     __end_of_srand:
  6229                           	opt callstack 0
  6230                           
  6231 ;; *************** function _spinners *****************
  6232 ;; Defined at:
  6233 ;;		line 146 in file "mbmc.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  shape           1  [STACK] unsigned char 
  6236 ;;  reset           1  [STACK] unsigned char 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  c               1  [STACK] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1  [STACK] unsigned char 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6252 ;;Total ram usage:        0 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:   16
  6255 ;; This function calls:
  6256 ;;		_strlen
  6257 ;; This function is called by:
  6258 ;;		_main
  6259 ;; This function uses a reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text4
  6263  01A0F0                     __ptext4:
  6264                           	opt callstack 0
  6265  01A0F0                     _spinners:
  6266                           	opt callstack 0
  6267                           
  6268                           ; BSR set to: 0
  6269                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6270  01A0F0  52E6               	movf	postinc1,f,c
  6271                           
  6272                           ;mbmc.c: 146: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 147: {;mbmc.c: 148:  s
      +                          tatic uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6273                           ;stkvar	_shape @ sp[(-1)+-1]
  6274                           
  6275                           ;incstack = 0
  6276  01A0F2  0EFE               	movlw	-2
  6277  01A0F4  006F FF8C  F001    	movff	plusw1,btemp
  6278  01A0FA  0E05               	movlw	5
  6279  01A0FC  6401               	cpfsgt	btemp^0,c
  6280  01A0FE  D002               	goto	l1879
  6281                           
  6282                           ;mbmc.c: 152:   shape = 0;
  6283                           ;stkvar	_shape @ sp[(-1)+-1]
  6284  01A100  0EFE               	movlw	-2
  6285  01A102  6AE3               	clrf	plusw1,c
  6286  01A104                     l1879:
  6287                           
  6288                           ;mbmc.c: 153:  if (reset)
  6289                           ;stkvar	_reset @ sp[(-1)+-2]
  6290  01A104  0EFD               	movlw	-3
  6291  01A106  50E3               	movf	plusw1,w,c
  6292  01A108  B4D8               	btfsc	status,2,c
  6293  01A10A  D00A               	goto	l10886
  6294                           
  6295                           ;mbmc.c: 154:   s[shape] = 0;
  6296                           ;stkvar	_shape @ sp[(-1)+-1]
  6297  01A10C  0EFE               	movlw	-2
  6298  01A10E  006F FF8C  F00C    	movff	plusw1,btemp+11
  6299  01A114  500C               	movf	(btemp+11)^0,w,c
  6300  01A116  0F74               	addlw	low spinners@s
  6301  01A118  6ED9               	movwf	fsr2l,c
  6302  01A11A  6ADA               	clrf	fsr2h,c
  6303  01A11C  0E00               	movlw	0
  6304  01A11E  6EDF               	movwf	indf2,c
  6305  01A120                     l10886:
  6306                           
  6307                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6308                           ;stkvar	_shape @ sp[(-1)+-1]
  6309  01A120  0EFE               	movlw	-2
  6310  01A122  50E3               	movf	plusw1,w,c
  6311  01A124  0D14               	mullw	20
  6312  01A126  0E4B               	movlw	low _spin
  6313  01A128  6E0B               	movwf	(btemp+10)^0,c
  6314  01A12A  0EFB               	movlw	high _spin
  6315  01A12C  6E0C               	movwf	(btemp+11)^0,c
  6316  01A12E  50F3               	movf	243,w,c
  6317  01A130  260B               	addwf	(btemp+10)^0,f,c
  6318  01A132  50F4               	movf	244,w,c
  6319  01A134  220C               	addwfc	(btemp+11)^0,f,c
  6320                           
  6321                           ;stkvar	_shape @ sp[(-1)+-1]
  6322  01A136  0EFE               	movlw	-2
  6323  01A138  006F FF8C  F00A    	movff	plusw1,btemp+9
  6324  01A13E  500A               	movf	(btemp+9)^0,w,c
  6325  01A140  0F74               	addlw	low spinners@s
  6326  01A142  6ED9               	movwf	fsr2l,c
  6327  01A144  6ADA               	clrf	fsr2h,c
  6328  01A146  50DF               	movf	indf2,w,c
  6329  01A148  260B               	addwf	(btemp+10)^0,f,c
  6330  01A14A  0E00               	movlw	0
  6331  01A14C  220C               	addwfc	(btemp+11)^0,f,c
  6332  01A14E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6333  01A154  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6334  01A15A                     	if	0	;tblptru may be non-zero
  6335  01A15A                     	endif
  6336  01A15A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6337  01A15A  0E00               	movlw	low (__mediumconst shr (0+16))
  6338  01A15C  6EF8               	movwf	tblptru,c
  6339  01A15E                     	endif
  6340                           
  6341                           ;stkvar	_c @ sp[(-1)+0]
  6342  01A15E  0008               	tblrd		*
  6343  01A160  0EFF               	movlw	-1
  6344  01A162  006F FFD7 FFE3     	movff	tablat,plusw1
  6345                           
  6346                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6347                           ;stkvar	_shape @ sp[(-1)+-1]
  6348  01A168  0EFE               	movlw	-2
  6349  01A16A  50E3               	movf	plusw1,w,c
  6350  01A16C  0D14               	mullw	20
  6351  01A16E  0E4B               	movlw	low _spin
  6352  01A170  6E0B               	movwf	(btemp+10)^0,c
  6353  01A172  0EFB               	movlw	high _spin
  6354  01A174  6E0C               	movwf	(btemp+11)^0,c
  6355  01A176  50F3               	movf	243,w,c
  6356  01A178  260B               	addwf	(btemp+10)^0,f,c
  6357  01A17A  50F4               	movf	244,w,c
  6358  01A17C  220C               	addwfc	(btemp+11)^0,f,c
  6359  01A17E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6360  01A184  0060  F033  FFE6   	movff	btemp+11,postinc1
  6361  01A18A  EC98  F0D4         	call	_strlen	;wreg free
  6362                           
  6363                           ;stkvar	_shape @ sp[(-1)+-1]
  6364  01A18E  0EFE               	movlw	-2
  6365  01A190  006F FF8C  F00C    	movff	plusw1,btemp+11
  6366  01A196  500C               	movf	(btemp+11)^0,w,c
  6367  01A198  0F74               	addlw	low spinners@s
  6368  01A19A  6ED9               	movwf	fsr2l,c
  6369  01A19C  6ADA               	clrf	fsr2h,c
  6370  01A19E  2ADF               	incf	indf2,f,c
  6371  01A1A0  50DF               	movf	indf2,w,c
  6372  01A1A2  6E0B               	movwf	(btemp+10)^0,c
  6373  01A1A4  6A0C               	clrf	(btemp+11)^0,c
  6374  01A1A6  5001               	movf	btemp^0,w,c
  6375  01A1A8  5C0B               	subwf	(btemp+10)^0,w,c
  6376  01A1AA  5002               	movf	(btemp+1)^0,w,c
  6377  01A1AC  580C               	subwfb	(btemp+11)^0,w,c
  6378  01A1AE  A0D8               	btfss	status,0,c
  6379  01A1B0  D00A               	goto	l10892
  6380                           
  6381                           ;mbmc.c: 157:   s[shape] = 0;
  6382                           ;stkvar	_shape @ sp[(-1)+-1]
  6383  01A1B2  0EFE               	movlw	-2
  6384  01A1B4  006F FF8C  F00C    	movff	plusw1,btemp+11
  6385  01A1BA  500C               	movf	(btemp+11)^0,w,c
  6386  01A1BC  0F74               	addlw	low spinners@s
  6387  01A1BE  6ED9               	movwf	fsr2l,c
  6388  01A1C0  6ADA               	clrf	fsr2h,c
  6389  01A1C2  0E00               	movlw	0
  6390  01A1C4  6EDF               	movwf	indf2,c
  6391  01A1C6                     l10892:
  6392                           
  6393                           ;mbmc.c: 158:  return c;
  6394                           ;stkvar	_c @ sp[(-1)+0]
  6395  01A1C6  0EFF               	movlw	-1
  6396  01A1C8  006F FF8C  F001    	movff	plusw1,btemp
  6397                           
  6398                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6399  01A1CE  52E5               	movf	postdec1,f,c
  6400  01A1D0  52E5               	movf	postdec1,f,c
  6401  01A1D2  52E5               	movf	postdec1,f,c
  6402  01A1D4  0012               	return		;funcret
  6403  01A1D6                     __end_of_spinners:
  6404                           	opt callstack 0
  6405                           
  6406 ;; *************** function _init_port_dma *****************
  6407 ;; Defined at:
  6408 ;;		line 104 in file "eadog.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1  [STACK] void 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/1
  6419 ;;		On exit  : 3F/3B
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:   15
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;; This function uses a reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text5
  6437  01B9A2                     __ptext5:
  6438                           	opt callstack 0
  6439  01B9A2                     _init_port_dma:
  6440                           	opt callstack 15
  6441                           
  6442                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  6443                           
  6444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6445                           ;incstack = 0
  6446  01B9A2  0E3F               	movlw	-193
  6447  01B9A4  013B               	movlb	59	; () banked
  6448  01B9A6  17DD               	andwf	221,f,b	;volatile
  6449                           
  6450                           ; BSR set to: 59
  6451                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  6452  01B9A8  9BDD               	bcf	221,5,b	;volatile
  6453                           
  6454                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  6455  01B9AA  51DD               	movf	221,w,b	;volatile
  6456  01B9AC  0BF9               	andlw	-7
  6457  01B9AE  0902               	iorlw	2
  6458  01B9B0  6FDD               	movwf	221,b	;volatile
  6459                           
  6460                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  6461  01B9B2  0EE7               	movlw	-25
  6462  01B9B4  17DD               	andwf	221,f,b	;volatile
  6463                           
  6464                           ; BSR set to: 59
  6465                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  6466  01B9B6  81DD               	bsf	221,0,b	;volatile
  6467                           
  6468                           ; BSR set to: 59
  6469                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  6470  01B9B8  9DDC               	bcf	220,6,b	;volatile
  6471                           
  6472                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  6473  01B9BA  0E3D               	movlw	61
  6474  01B9BC  6FD1               	movwf	209,b	;volatile
  6475  01B9BE  0EEA               	movlw	234
  6476  01B9C0  6FD0               	movwf	208,b	;volatile
  6477                           
  6478                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  6479  01B9C2  0EFF               	movlw	low _port_data
  6480  01B9C4  6FD9               	movwf	217,b	;volatile
  6481  01B9C6  0E04               	movlw	high _port_data
  6482  01B9C8  6FDA               	movwf	218,b	;volatile
  6483  01B9CA  0E00               	movlw	low (_port_data shr (0+16))
  6484  01B9CC  6FDB               	movwf	219,b	;volatile
  6485                           
  6486                           ; BSR set to: 59
  6487                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  6488  01B9CE  9BDC               	bcf	220,5,b	;volatile
  6489                           
  6490                           ; BSR set to: 59
  6491                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6492  01B9D0  0012               	return		;funcret
  6493  01B9D2                     __end_of_init_port_dma:
  6494                           	opt callstack 0
  6495                           
  6496 ;; *************** function _init_display *****************
  6497 ;; Defined at:
  6498 ;;		line 38 in file "eadog.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;		None
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1  [STACK] void 
  6505 ;; Registers used:
  6506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6507 ;; Tracked objects:
  6508 ;;		On entry : 3F/3B
  6509 ;;		On exit  : 3F/3D
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6516 ;;Total ram usage:        0 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:   17
  6519 ;; This function calls:
  6520 ;;		_ringBufS_init
  6521 ;;		_send_lcd_cmd
  6522 ;;		_send_lcd_cmd_long
  6523 ;;		_send_lcd_data
  6524 ;;		_wdtdelay
  6525 ;; This function is called by:
  6526 ;;		_main
  6527 ;; This function uses a reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text6
  6531  01A006                     __ptext6:
  6532                           	opt callstack 0
  6533  01A006                     _init_display:
  6534                           	opt callstack 13
  6535                           
  6536                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6537                           
  6538                           ; BSR set to: 59
  6539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6540                           ;incstack = 0
  6541  01A006  0E83               	movlw	low _ring_buf1
  6542  01A008  0100               	movlb	0	; () banked
  6543  01A00A  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6544  01A00C  0E03               	movlw	high _ring_buf1
  6545  01A00E  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6546                           
  6547                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6548  01A010  0E40               	movlw	low _ring_buf2
  6549  01A012  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6550  01A014  0E03               	movlw	high _ring_buf2
  6551  01A016  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6555  01A018  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6556  01A01E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6557  01A024  EC9F  F0DD         	call	_ringBufS_init	;wreg free
  6558                           
  6559                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6560  01A028  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6561  01A02E  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6562  01A034  EC9F  F0DD         	call	_ringBufS_init	;wreg free
  6563                           
  6564                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6565  01A038  84BE               	bsf	190,2,c	;volatile
  6566                           
  6567                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  6568  01A03A  013D               	movlb	61	; () banked
  6569  01A03C  9F14               	bcf	20,7,b	;volatile
  6570                           
  6571                           ; BSR set to: 61
  6572                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  6573  01A03E  0E20               	movlw	32
  6574  01A040  6F15               	movwf	21,b	;volatile
  6575                           
  6576                           ; BSR set to: 61
  6577                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  6578  01A042  0E03               	movlw	3
  6579  01A044  6F16               	movwf	22,b	;volatile
  6580                           
  6581                           ; BSR set to: 61
  6582                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  6583  01A046  0E04               	movlw	4
  6584  01A048  6F19               	movwf	25,b	;volatile
  6585                           
  6586                           ; BSR set to: 61
  6587                           ;eadog.c: 55:  SPI1CLK = 0x02;
  6588  01A04A  0E02               	movlw	2
  6589  01A04C  6F1C               	movwf	28,b	;volatile
  6590                           
  6591                           ; BSR set to: 61
  6592                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  6593  01A04E  0E83               	movlw	131
  6594  01A050  6F14               	movwf	20,b	;volatile
  6595                           
  6596                           ; BSR set to: 61
  6597                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  6598  01A052  8F14               	bsf	20,7,b	;volatile
  6599                           
  6600                           ; BSR set to: 61
  6601                           ;eadog.c: 60:  wdtdelay(350000);
  6602  01A054  0E30               	movlw	48
  6603  01A056  6EE6               	movwf	postinc1,c
  6604  01A058  0E57               	movlw	87
  6605  01A05A  6EE6               	movwf	postinc1,c
  6606  01A05C  0E05               	movlw	5
  6607  01A05E  6EE6               	movwf	postinc1,c
  6608  01A060  0E00               	movlw	0
  6609  01A062  6EE6               	movwf	postinc1,c
  6610  01A064  EC17  F0D9         	call	_wdtdelay	;wreg free
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  6614  01A068  0E46               	movlw	70
  6615  01A06A  6EE6               	movwf	postinc1,c
  6616  01A06C  EC4D  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  6620  01A070  0E41               	movlw	65
  6621  01A072  6EE6               	movwf	postinc1,c
  6622  01A074  EC6D  F0DB         	call	_send_lcd_cmd	;wreg free
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;eadog.c: 63:  wdtdelay(80);
  6626  01A078  0E50               	movlw	80
  6627  01A07A  6EE6               	movwf	postinc1,c
  6628  01A07C  0E00               	movlw	0
  6629  01A07E  6EE6               	movwf	postinc1,c
  6630  01A080  0E00               	movlw	0
  6631  01A082  6EE6               	movwf	postinc1,c
  6632  01A084  0E00               	movlw	0
  6633  01A086  6EE6               	movwf	postinc1,c
  6634  01A088  EC17  F0D9         	call	_wdtdelay	;wreg free
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  6638  01A08C  0E53               	movlw	83
  6639  01A08E  6EE6               	movwf	postinc1,c
  6640  01A090  EC6D  F0DB         	call	_send_lcd_cmd	;wreg free
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;eadog.c: 65:  send_lcd_data(2);
  6644  01A094  0E02               	movlw	2
  6645  01A096  6EE6               	movwf	postinc1,c
  6646  01A098  ECCC  F0DE         	call	_send_lcd_data	;wreg free
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;eadog.c: 66:  wdtdelay(80);
  6650  01A09C  0E50               	movlw	80
  6651  01A09E  6EE6               	movwf	postinc1,c
  6652  01A0A0  0E00               	movlw	0
  6653  01A0A2  6EE6               	movwf	postinc1,c
  6654  01A0A4  0E00               	movlw	0
  6655  01A0A6  6EE6               	movwf	postinc1,c
  6656  01A0A8  0E00               	movlw	0
  6657  01A0AA  6EE6               	movwf	postinc1,c
  6658  01A0AC  EC17  F0D9         	call	_wdtdelay	;wreg free
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  6662  01A0B0  0E51               	movlw	81
  6663  01A0B2  6EE6               	movwf	postinc1,c
  6664  01A0B4  EC4D  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  6668  01A0B8  013D               	movlb	61	; () banked
  6669  01A0BA  9F14               	bcf	20,7,b	;volatile
  6670                           
  6671                           ; BSR set to: 61
  6672                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  6673  01A0BC  0E02               	movlw	2
  6674  01A0BE  6F16               	movwf	22,b	;volatile
  6675                           
  6676                           ; BSR set to: 61
  6677                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  6678  01A0C0  8F14               	bsf	20,7,b	;volatile
  6679                           
  6680                           ; BSR set to: 61
  6681                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  6682  01A0C2  931A               	bcf	26,1,b	;volatile
  6683                           
  6684                           ; BSR set to: 61
  6685                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  6686  01A0C4  0E3F               	movlw	-193
  6687  01A0C6  013B               	movlb	59	; () banked
  6688  01A0C8  17FD               	andwf	253,f,b	;volatile
  6689                           
  6690                           ; BSR set to: 59
  6691                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  6692  01A0CA  9BFD               	bcf	253,5,b	;volatile
  6693                           
  6694                           ; BSR set to: 59
  6695                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  6696  01A0CC  51FD               	movf	253,w,b	;volatile
  6697  01A0CE  0BF9               	andlw	-7
  6698  01A0D0  0902               	iorlw	2
  6699  01A0D2  6FFD               	movwf	253,b	;volatile
  6700                           
  6701                           ; BSR set to: 59
  6702                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  6703  01A0D4  0EE7               	movlw	-25
  6704  01A0D6  17FD               	andwf	253,f,b	;volatile
  6705                           
  6706                           ; BSR set to: 59
  6707                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  6708  01A0D8  81FD               	bsf	253,0,b	;volatile
  6709                           
  6710                           ; BSR set to: 59
  6711                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  6712  01A0DA  0E83               	movlw	low _ring_buf1
  6713  01A0DC  6FF9               	movwf	249,b	;volatile
  6714  01A0DE  0E03               	movlw	high _ring_buf1
  6715  01A0E0  6FFA               	movwf	250,b	;volatile
  6716  01A0E2  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6717  01A0E4  6FFB               	movwf	251,b	;volatile
  6718                           
  6719                           ; BSR set to: 59
  6720                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  6721  01A0E6  9BFC               	bcf	252,5,b	;volatile
  6722                           
  6723                           ; BSR set to: 59
  6724                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  6725  01A0E8  013D               	movlb	61	; () banked
  6726  01A0EA  831A               	bsf	26,1,b	;volatile
  6727                           
  6728                           ; BSR set to: 61
  6729                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  6730  01A0EC  94BE               	bcf	190,2,c	;volatile
  6731                           
  6732                           ; BSR set to: 61
  6733                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6734  01A0EE  0012               	return		;funcret
  6735  01A0F0                     __end_of_init_display:
  6736                           	opt callstack 0
  6737                           
  6738 ;; *************** function _send_lcd_data *****************
  6739 ;; Defined at:
  6740 ;;		line 123 in file "eadog.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  data            1  [STACK] const unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1  [STACK] void 
  6747 ;; Registers used:
  6748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6749 ;; Tracked objects:
  6750 ;;		On entry : 3F/0
  6751 ;;		On exit  : 3F/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6758 ;;Total ram usage:        0 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:   16
  6761 ;; This function calls:
  6762 ;;		_SPI1_Exchange8bit
  6763 ;;		_wdtdelay
  6764 ;; This function is called by:
  6765 ;;		_init_display
  6766 ;; This function uses a reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text7
  6770  01BD98                     __ptext7:
  6771                           	opt callstack 0
  6772  01BD98                     _send_lcd_data:
  6773                           	opt callstack 13
  6774                           
  6775                           ; BSR set to: 61
  6776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6777                           ;incstack = 0
  6778                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  6779  01BD98  94BC               	bcf	188,2,c	;volatile
  6780                           
  6781                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  6782                           ;stkvar	_data @ sp[(0)+-1]
  6783  01BD9A  0EFF               	movlw	-1
  6784  01BD9C  50E3               	movf	plusw1,w,c
  6785  01BD9E  6EE6               	movwf	postinc1,c
  6786  01BDA0  EC8C  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6787                           
  6788                           ; BSR set to: 57
  6789                           ;eadog.c: 127:  wdtdelay(8);
  6790  01BDA4  0E08               	movlw	8
  6791  01BDA6  6EE6               	movwf	postinc1,c
  6792  01BDA8  0E00               	movlw	0
  6793  01BDAA  6EE6               	movwf	postinc1,c
  6794  01BDAC  0E00               	movlw	0
  6795  01BDAE  6EE6               	movwf	postinc1,c
  6796  01BDB0  0E00               	movlw	0
  6797  01BDB2  6EE6               	movwf	postinc1,c
  6798  01BDB4  EC17  F0D9         	call	_wdtdelay	;wreg free
  6799                           
  6800                           ; BSR set to: 0
  6801                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  6802  01BDB8  52E5               	movf	postdec1,f,c
  6803  01BDBA  0012               	return		;funcret
  6804  01BDBC                     __end_of_send_lcd_data:
  6805                           	opt callstack 0
  6806                           
  6807 ;; *************** function _send_lcd_cmd_long *****************
  6808 ;; Defined at:
  6809 ;;		line 139 in file "eadog.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  cmd             1  [STACK] const unsigned char 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;		None
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1  [STACK] void 
  6816 ;; Registers used:
  6817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6818 ;; Tracked objects:
  6819 ;;		On entry : 3F/0
  6820 ;;		On exit  : 3F/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6827 ;;Total ram usage:        0 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:   16
  6830 ;; This function calls:
  6831 ;;		_SPI1_Exchange8bit
  6832 ;;		_wdtdelay
  6833 ;; This function is called by:
  6834 ;;		_init_display
  6835 ;; This function uses a reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text8
  6839  01B69A                     __ptext8:
  6840                           	opt callstack 0
  6841  01B69A                     _send_lcd_cmd_long:
  6842                           	opt callstack 13
  6843                           
  6844                           ; BSR set to: 0
  6845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6846                           ;incstack = 0
  6847                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  6848  01B69A  94BC               	bcf	188,2,c	;volatile
  6849                           
  6850                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  6851  01B69C  0EFE               	movlw	254
  6852  01B69E  6EE6               	movwf	postinc1,c
  6853  01B6A0  EC8C  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6854                           
  6855                           ; BSR set to: 57
  6856                           ;eadog.c: 143:  wdtdelay(8);
  6857  01B6A4  0E08               	movlw	8
  6858  01B6A6  6EE6               	movwf	postinc1,c
  6859  01B6A8  0E00               	movlw	0
  6860  01B6AA  6EE6               	movwf	postinc1,c
  6861  01B6AC  0E00               	movlw	0
  6862  01B6AE  6EE6               	movwf	postinc1,c
  6863  01B6B0  0E00               	movlw	0
  6864  01B6B2  6EE6               	movwf	postinc1,c
  6865  01B6B4  EC17  F0D9         	call	_wdtdelay	;wreg free
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  6869                           ;stkvar	_cmd @ sp[(0)+-1]
  6870  01B6B8  0EFF               	movlw	-1
  6871  01B6BA  50E3               	movf	plusw1,w,c
  6872  01B6BC  6EE6               	movwf	postinc1,c
  6873  01B6BE  EC8C  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6874                           
  6875                           ;eadog.c: 145:  wdtdelay(800);
  6876  01B6C2  0E20               	movlw	32
  6877  01B6C4  6EE6               	movwf	postinc1,c
  6878  01B6C6  0E03               	movlw	3
  6879  01B6C8  6EE6               	movwf	postinc1,c
  6880  01B6CA  0E00               	movlw	0
  6881  01B6CC  6EE6               	movwf	postinc1,c
  6882  01B6CE  0E00               	movlw	0
  6883  01B6D0  6EE6               	movwf	postinc1,c
  6884  01B6D2  EC17  F0D9         	call	_wdtdelay	;wreg free
  6885                           
  6886                           ; BSR set to: 0
  6887                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6888  01B6D6  52E5               	movf	postdec1,f,c
  6889  01B6D8  0012               	return		;funcret
  6890  01B6DA                     __end_of_send_lcd_cmd_long:
  6891                           	opt callstack 0
  6892                           
  6893 ;; *************** function _send_lcd_cmd *****************
  6894 ;; Defined at:
  6895 ;;		line 130 in file "eadog.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;  cmd             1  [STACK] const unsigned char 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1  [STACK] void 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6904 ;; Tracked objects:
  6905 ;;		On entry : 3F/0
  6906 ;;		On exit  : 3F/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6913 ;;Total ram usage:        0 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:   16
  6916 ;; This function calls:
  6917 ;;		_SPI1_Exchange8bit
  6918 ;;		_wdtdelay
  6919 ;; This function is called by:
  6920 ;;		_init_display
  6921 ;; This function uses a reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text9
  6925  01B6DA                     __ptext9:
  6926                           	opt callstack 0
  6927  01B6DA                     _send_lcd_cmd:
  6928                           	opt callstack 13
  6929                           
  6930                           ; BSR set to: 0
  6931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6932                           ;incstack = 0
  6933                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  6934  01B6DA  94BC               	bcf	188,2,c	;volatile
  6935                           
  6936                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  6937  01B6DC  0EFE               	movlw	254
  6938  01B6DE  6EE6               	movwf	postinc1,c
  6939  01B6E0  EC8C  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6940                           
  6941                           ; BSR set to: 57
  6942                           ;eadog.c: 134:  wdtdelay(8);
  6943  01B6E4  0E08               	movlw	8
  6944  01B6E6  6EE6               	movwf	postinc1,c
  6945  01B6E8  0E00               	movlw	0
  6946  01B6EA  6EE6               	movwf	postinc1,c
  6947  01B6EC  0E00               	movlw	0
  6948  01B6EE  6EE6               	movwf	postinc1,c
  6949  01B6F0  0E00               	movlw	0
  6950  01B6F2  6EE6               	movwf	postinc1,c
  6951  01B6F4  EC17  F0D9         	call	_wdtdelay	;wreg free
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  6955                           ;stkvar	_cmd @ sp[(0)+-1]
  6956  01B6F8  0EFF               	movlw	-1
  6957  01B6FA  50E3               	movf	plusw1,w,c
  6958  01B6FC  6EE6               	movwf	postinc1,c
  6959  01B6FE  EC8C  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6960                           
  6961                           ;eadog.c: 136:  wdtdelay(8);
  6962  01B702  0E08               	movlw	8
  6963  01B704  6EE6               	movwf	postinc1,c
  6964  01B706  0E00               	movlw	0
  6965  01B708  6EE6               	movwf	postinc1,c
  6966  01B70A  0E00               	movlw	0
  6967  01B70C  6EE6               	movwf	postinc1,c
  6968  01B70E  0E00               	movlw	0
  6969  01B710  6EE6               	movwf	postinc1,c
  6970  01B712  EC17  F0D9         	call	_wdtdelay	;wreg free
  6971                           
  6972                           ; BSR set to: 0
  6973                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6974  01B716  52E5               	movf	postdec1,f,c
  6975  01B718  0012               	return		;funcret
  6976  01B71A                     __end_of_send_lcd_cmd:
  6977                           	opt callstack 0
  6978                           
  6979 ;; *************** function _SPI1_Exchange8bit *****************
  6980 ;; Defined at:
  6981 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  data            1  [STACK] unsigned char 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1  [STACK] unsigned char 
  6988 ;; Registers used:
  6989 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 3F/39
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6999 ;;Total ram usage:        0 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:   15
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_send_lcd_data
  7006 ;;		_send_lcd_cmd
  7007 ;;		_send_lcd_cmd_long
  7008 ;; This function uses a reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text10
  7012  01BF18                     __ptext10:
  7013                           	opt callstack 0
  7014  01BF18                     _SPI1_Exchange8bit:
  7015                           	opt callstack 13
  7016                           
  7017                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7018                           
  7019                           ; BSR set to: 0
  7020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7021                           ;incstack = 0
  7022  01BF18  0E01               	movlw	1
  7023  01BF1A  013D               	movlb	61	; () banked
  7024  01BF1C  6F12               	movwf	18,b	;volatile
  7025                           
  7026                           ; BSR set to: 61
  7027                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7028                           ;stkvar	_data @ sp[(0)+-1]
  7029  01BF1E  0EFF               	movlw	-1
  7030  01BF20  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7031  01BF26                     l807:
  7032                           
  7033                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7034  01BF26  0139               	movlb	57	; () banked
  7035  01BF28  A9A2               	btfss	162,4,b	;volatile
  7036  01BF2A  D7FD               	goto	l807
  7037                           
  7038                           ; BSR set to: 57
  7039                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7040  01BF2C  006F F440  F001    	movff	15632,btemp	;volatile
  7041                           
  7042                           ; BSR set to: 57
  7043                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7044  01BF32  52E5               	movf	postdec1,f,c
  7045  01BF34  0012               	return		;funcret
  7046  01BF36                     __end_of_SPI1_Exchange8bit:
  7047                           	opt callstack 0
  7048                           
  7049 ;; *************** function _ringBufS_init *****************
  7050 ;; Defined at:
  7051 ;;		line 22 in file "ringbufs.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;  _this           2  [STACK] PTR volatile struct ring
  7054 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1  [STACK] void 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7070 ;;Total ram usage:        0 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:   16
  7073 ;; This function calls:
  7074 ;;		_memset
  7075 ;; This function is called by:
  7076 ;;		_init_display
  7077 ;; This function uses a reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text11
  7081  01BB3E                     __ptext11:
  7082                           	opt callstack 0
  7083  01BB3E                     _ringBufS_init:
  7084                           	opt callstack 13
  7085                           
  7086                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7087                           
  7088                           ; BSR set to: 57
  7089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7090                           ;incstack = 0
  7091  01BB3E  0E43               	movlw	67
  7092  01BB40  6EE6               	movwf	postinc1,c
  7093  01BB42  0E00               	movlw	0
  7094  01BB44  6EE6               	movwf	postinc1,c
  7095  01BB46  0E00               	movlw	0
  7096  01BB48  6EE6               	movwf	postinc1,c
  7097  01BB4A  0E00               	movlw	0
  7098  01BB4C  6EE6               	movwf	postinc1,c
  7099                           
  7100                           ;stkvar	__this @ sp[(-4)+-2]
  7101  01BB4E  0EFA               	movlw	-6
  7102  01BB50  006F FF8F FFE6     	movff	plusw1,postinc1
  7103  01BB56  006F FF8F FFE6     	movff	plusw1,postinc1
  7104  01BB5C  EC1C  F0B7         	call	_memset	;wreg free
  7105                           
  7106                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7107  01BB60  52E5               	movf	postdec1,f,c
  7108  01BB62  52E5               	movf	postdec1,f,c
  7109  01BB64  0012               	return		;funcret
  7110  01BB66                     __end_of_ringBufS_init:
  7111                           	opt callstack 0
  7112                           
  7113 ;; *************** function _init_bsoc *****************
  7114 ;; Defined at:
  7115 ;;		line 107 in file "bsoc.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;		None
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1  [STACK] void 
  7122 ;; Registers used:
  7123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/1
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7133 ;;Total ram usage:        0 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:   18
  7136 ;; This function calls:
  7137 ;;		_TMR3_SetInterruptHandler
  7138 ;;		_Volts_to_SOC
  7139 ;;		___fldiv
  7140 ;;		___flmul
  7141 ;;		___fltol
  7142 ;;		___xxtofl
  7143 ;;		_conv_raw_result
  7144 ;; This function is called by:
  7145 ;;		_main
  7146 ;; This function uses a reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text12
  7150  017BA6                     __ptext12:
  7151                           	opt callstack 0
  7152  017BA6                     _init_bsoc:
  7153                           	opt callstack 12
  7154                           
  7155                           ;bsoc.c: 112:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7156                           
  7157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7158                           ;incstack = 0
  7159  017BA6  0E00               	movlw	0
  7160  017BA8  6EE6               	movwf	postinc1,c
  7161  017BAA  0E00               	movlw	0
  7162  017BAC  6EE6               	movwf	postinc1,c
  7163  017BAE  0E7A               	movlw	122
  7164  017BB0  6EE6               	movwf	postinc1,c
  7165  017BB2  0E44               	movlw	68
  7166  017BB4  6EE6               	movwf	postinc1,c
  7167  017BB6  0E00               	movlw	0
  7168  017BB8  6EE6               	movwf	postinc1,c
  7169  017BBA  0E04               	movlw	4
  7170  017BBC  6EE6               	movwf	postinc1,c
  7171  017BBE  EC63  F0A9         	call	_conv_raw_result	;wreg free
  7172  017BC2  0060  F007  FFE6   	movff	btemp,postinc1
  7173  017BC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7174  017BCE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7175  017BD4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7176  017BDA  EC2D  F0C7         	call	___fltol	;wreg free
  7177  017BDE  0060  F007  FFE6   	movff	btemp,postinc1
  7178  017BE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7179  017BEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7180  017BF0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7181  017BF6  0E00               	movlw	0
  7182  017BF8  6EE6               	movwf	postinc1,c
  7183  017BFA  EC2F  F0C2         	call	___xxtofl	;wreg free
  7184  017BFE  0060  F007  FFE6   	movff	btemp,postinc1
  7185  017C04  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7186  017C0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7187  017C10  0060  F013  FFE6   	movff	btemp+3,postinc1
  7188  017C16  ECB3  F09E         	call	___flmul	;wreg free
  7189  017C1A  0060  F007  FFE6   	movff	btemp,postinc1
  7190  017C20  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7191  017C26  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7192  017C2C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7193  017C32  EC2D  F0C7         	call	___fltol	;wreg free
  7194  017C36  0060  F007  FFE6   	movff	btemp,postinc1
  7195  017C3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7196  017C42  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7197  017C48  0060  F013  FFE6   	movff	btemp+3,postinc1
  7198  017C4E  EC5A  F0CC         	call	_Volts_to_SOC	;wreg free
  7199  017C52  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7200  017C58  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7201                           
  7202                           ;bsoc.c: 113:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7203  017C5E  EE21  F38B         	lfsr	2,_C+140	;volatile
  7204  017C62  006F FF7B FFE6     	movff	postinc2,postinc1
  7205  017C68  006F FF7B FFE6     	movff	postinc2,postinc1
  7206  017C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  7207  017C74  006F FF7B FFE6     	movff	postinc2,postinc1
  7208  017C7A  0E00               	movlw	0
  7209  017C7C  6EE6               	movwf	postinc1,c
  7210  017C7E  0E00               	movlw	0
  7211  017C80  6EE6               	movwf	postinc1,c
  7212  017C82  0EC8               	movlw	200
  7213  017C84  6EE6               	movwf	postinc1,c
  7214  017C86  0E42               	movlw	66
  7215  017C88  6EE6               	movwf	postinc1,c
  7216  017C8A  0E00               	movlw	0
  7217  017C8C  6EE6               	movwf	postinc1,c
  7218  017C8E  0E00               	movlw	0
  7219  017C90  6EE6               	movwf	postinc1,c
  7220  017C92  0E7A               	movlw	122
  7221  017C94  6EE6               	movwf	postinc1,c
  7222  017C96  0E44               	movlw	68
  7223  017C98  6EE6               	movwf	postinc1,c
  7224  017C9A  0E00               	movlw	0
  7225  017C9C  6EE6               	movwf	postinc1,c
  7226  017C9E  0E04               	movlw	4
  7227  017CA0  6EE6               	movwf	postinc1,c
  7228  017CA2  EC63  F0A9         	call	_conv_raw_result	;wreg free
  7229  017CA6  0060  F007  FFE6   	movff	btemp,postinc1
  7230  017CAC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7231  017CB2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7232  017CB8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7233  017CBE  EC2D  F0C7         	call	___fltol	;wreg free
  7234  017CC2  0060  F007  FFE6   	movff	btemp,postinc1
  7235  017CC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7236  017CCE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7237  017CD4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7238  017CDA  0E00               	movlw	0
  7239  017CDC  6EE6               	movwf	postinc1,c
  7240  017CDE  EC2F  F0C2         	call	___xxtofl	;wreg free
  7241  017CE2  0060  F007  FFE6   	movff	btemp,postinc1
  7242  017CE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7243  017CEE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7244  017CF4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7245  017CFA  ECB3  F09E         	call	___flmul	;wreg free
  7246  017CFE  0060  F007  FFE6   	movff	btemp,postinc1
  7247  017D04  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7248  017D0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7249  017D10  0060  F013  FFE6   	movff	btemp+3,postinc1
  7250  017D16  EC2D  F0C7         	call	___fltol	;wreg free
  7251  017D1A  0060  F007  FFE6   	movff	btemp,postinc1
  7252  017D20  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7253  017D26  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7254  017D2C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7255  017D32  EC5A  F0CC         	call	_Volts_to_SOC	;wreg free
  7256  017D36  0060  F004  F00B   	movff	btemp,btemp+10
  7257  017D3C  0060  F008  F00C   	movff	btemp+1,btemp+11
  7258  017D42  500B               	movf	(btemp+10)^0,w,c
  7259  017D44  6E05               	movwf	(btemp+4)^0,c
  7260  017D46  500C               	movf	(btemp+11)^0,w,c
  7261  017D48  6E06               	movwf	(btemp+5)^0,c
  7262  017D4A  6A07               	clrf	(btemp+6)^0,c
  7263  017D4C  6A08               	clrf	(btemp+7)^0,c
  7264  017D4E  0060  F017  FFE6   	movff	btemp+4,postinc1
  7265  017D54  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7266  017D5A  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7267  017D60  0060  F023  FFE6   	movff	btemp+7,postinc1
  7268  017D66  0E00               	movlw	0
  7269  017D68  6EE6               	movwf	postinc1,c
  7270  017D6A  EC2F  F0C2         	call	___xxtofl	;wreg free
  7271  017D6E  0060  F007  FFE6   	movff	btemp,postinc1
  7272  017D74  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7273  017D7A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7274  017D80  0060  F013  FFE6   	movff	btemp+3,postinc1
  7275  017D86  ECA6  F0A6         	call	___fldiv	;wreg free
  7276  017D8A  0060  F007  FFE6   	movff	btemp,postinc1
  7277  017D90  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7278  017D96  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7279  017D9C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7280  017DA2  ECB3  F09E         	call	___flmul	;wreg free
  7281  017DA6  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7282  017DAC  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7283  017DB2  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7284  017DB8  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7285                           
  7286                           ;bsoc.c: 114:  C.dynamic_ah_adj = C.dynamic_ah;
  7287  017DBE  EE21  F38F         	lfsr	2,_C+144	;volatile
  7288  017DC2  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7289  017DC8  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7290  017DCE  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7291  017DD4  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7292                           
  7293                           ;bsoc.c: 115:  TMR3_SetInterruptHandler(calc_bsoc);
  7294  017DDA  0E4C               	movlw	low _calc_bsoc
  7295  017DDC  6EE6               	movwf	postinc1,c
  7296  017DDE  0E33               	movlw	high _calc_bsoc
  7297  017DE0  6EE6               	movwf	postinc1,c
  7298  017DE2  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7299  017DE4  6EE6               	movwf	postinc1,c
  7300  017DE6  EC2B  F0DE         	call	_TMR3_SetInterruptHandler	;wreg free
  7301                           
  7302                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7303  017DEA  0012               	return		;funcret
  7304  017DEC                     __end_of_init_bsoc:
  7305                           	opt callstack 0
  7306                           
  7307 ;; *************** function _Volts_to_SOC *****************
  7308 ;; Defined at:
  7309 ;;		line 172 in file "bsoc.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  cvoltage        4  [STACK] unsigned long 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  soc             4  [STACK] float 
  7314 ;;  slot            1  [STACK] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  2  [STACK] unsigned short 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/1
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7328 ;;Total ram usage:        0 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:   16
  7331 ;; This function calls:
  7332 ;;		___fltol
  7333 ;;		___xxtofl
  7334 ;; This function is called by:
  7335 ;;		_init_bsoc
  7336 ;; This function uses a reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text13
  7340  0198B4                     __ptext13:
  7341                           	opt callstack 0
  7342  0198B4                     _Volts_to_SOC:
  7343                           	opt callstack 0
  7344                           
  7345                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7346  0198B4  0E05               	movlw	5
  7347  0198B6  26E1               	addwf	fsr1l,f,c
  7348  0198B8  0E00               	movlw	0
  7349  0198BA  22E2               	addwfc	fsr1h,f,c
  7350                           
  7351                           ;bsoc.c: 172: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 173: {;bsoc.c: 174:  uint
      +                          8_t slot;;bsoc.c: 175:  float soc = 0;
  7352                           
  7353                           ;incstack = 0
  7354  0198BC  0E00               	movlw	0
  7355  0198BE  6E09               	movwf	(btemp+8)^0,c
  7356  0198C0  0E00               	movlw	0
  7357  0198C2  6E0A               	movwf	(btemp+9)^0,c
  7358  0198C4  0E00               	movlw	0
  7359  0198C6  6E0B               	movwf	(btemp+10)^0,c
  7360  0198C8  0E00               	movlw	0
  7361  0198CA  6E0C               	movwf	(btemp+11)^0,c
  7362                           
  7363                           ;stkvar	_soc @ sp[(-5)+0]
  7364  0198CC  0EFB               	movlw	-5
  7365  0198CE  0060  F027  FFE3   	movff	btemp+8,plusw1
  7366  0198D4  0EFC               	movlw	-4
  7367  0198D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7368  0198DC  0EFD               	movlw	-3
  7369  0198DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7370  0198E4  0EFE               	movlw	-2
  7371  0198E6  0060  F033  FFE3   	movff	btemp+11,plusw1
  7372                           
  7373                           ;bsoc.c: 177:  for (slot = 0; slot < 26; slot++) {
  7374                           ;stkvar	_slot @ sp[(-5)+4]
  7375  0198EC  0EFF               	movlw	-1
  7376  0198EE  6AE3               	clrf	plusw1,c
  7377  0198F0                     l10658:
  7378                           
  7379                           ;bsoc.c: 178:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7380                           ;stkvar	_cvoltage @ sp[(-5)+-4]
  7381                           ;stkvar	_slot @ sp[(-5)+4]
  7382  0198F0  0EFF               	movlw	-1
  7383  0198F2  50E3               	movf	plusw1,w,c
  7384  0198F4  0D08               	mullw	8
  7385  0198F6  0EEB               	movlw	low _BVSOC_TABLE
  7386  0198F8  24F3               	addwf	243,w,c
  7387  0198FA  6EF6               	movwf	tblptrl,c
  7388  0198FC  0EF9               	movlw	high _BVSOC_TABLE
  7389  0198FE  20F4               	addwfc	244,w,c
  7390  019900  6EF7               	movwf	tblptrh,c
  7391  019902                     	if	1	;There are 3 active tblptr bytes
  7392  019902  6AF8               	clrf	tblptru,c
  7393  019904  0E00               	movlw	low (__mediumconst shr (0+16))
  7394  019906  22F8               	addwfc	tblptru,f,c
  7395  019908                     	endif
  7396  019908  0EF7               	movlw	-9
  7397  01990A  50E3               	movf	plusw1,w,c
  7398  01990C  0009               	tblrd		*+
  7399  01990E  5CF5               	subwf	tablat,w,c
  7400  019910  0EF8               	movlw	-8
  7401  019912  50E3               	movf	plusw1,w,c
  7402  019914  0009               	tblrd		*+
  7403  019916  58F5               	subwfb	tablat,w,c
  7404  019918  0EF9               	movlw	-7
  7405  01991A  50E3               	movf	plusw1,w,c
  7406  01991C  0009               	tblrd		*+
  7407  01991E  58F5               	subwfb	tablat,w,c
  7408  019920  0EFA               	movlw	-6
  7409  019922  50E3               	movf	plusw1,w,c
  7410  019924  0009               	tblrd		*+
  7411  019926  58F5               	subwfb	tablat,w,c
  7412  019928  B0D8               	btfsc	status,0,c
  7413  01992A  D034               	goto	l10662
  7414                           
  7415                           ;bsoc.c: 179:    soc = BVSOC_TABLE[slot][1];
  7416                           ;stkvar	_slot @ sp[(-5)+4]
  7417  01992C  0EFF               	movlw	-1
  7418  01992E  50E3               	movf	plusw1,w,c
  7419  019930  0D08               	mullw	8
  7420  019932  0E04               	movlw	4
  7421  019934  26F3               	addwf	243,f,c
  7422  019936  0E00               	movlw	0
  7423  019938  22F4               	addwfc	244,f,c
  7424  01993A  0EEB               	movlw	low _BVSOC_TABLE
  7425  01993C  24F3               	addwf	243,w,c
  7426  01993E  6EF6               	movwf	tblptrl,c
  7427  019940  0EF9               	movlw	high _BVSOC_TABLE
  7428  019942  20F4               	addwfc	244,w,c
  7429  019944  6EF7               	movwf	tblptrh,c
  7430  019946                     	if	1	;There are 3 active tblptr bytes
  7431  019946  6AF8               	clrf	tblptru,c
  7432  019948  0E00               	movlw	low (__mediumconst shr (0+16))
  7433  01994A  22F8               	addwfc	tblptru,f,c
  7434  01994C                     	endif
  7435  01994C  0009               	tblrd		*+
  7436  01994E  006F FFD7 FFE6     	movff	tablat,postinc1
  7437  019954  0009               	tblrd		*+
  7438  019956  006F FFD7 FFE6     	movff	tablat,postinc1
  7439  01995C  0009               	tblrd		*+
  7440  01995E  006F FFD7 FFE6     	movff	tablat,postinc1
  7441  019964  0009               	tblrd		*+
  7442  019966  006F FFD7 FFE6     	movff	tablat,postinc1
  7443  01996C  0E00               	movlw	0
  7444  01996E  6EE6               	movwf	postinc1,c
  7445  019970  EC2F  F0C2         	call	___xxtofl	;wreg free
  7446                           
  7447                           ;stkvar	_soc @ sp[(-5)+0]
  7448  019974  0EFB               	movlw	-5
  7449  019976  0060  F007  FFE3   	movff	btemp,plusw1
  7450  01997C  0EFC               	movlw	-4
  7451  01997E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  7452  019984  0EFD               	movlw	-3
  7453  019986  0060  F00F  FFE3   	movff	btemp+2,plusw1
  7454  01998C  0EFE               	movlw	-2
  7455  01998E  0060  F013  FFE3   	movff	btemp+3,plusw1
  7456  019994                     l10662:
  7457                           
  7458                           ;bsoc.c: 181:  }
  7459                           ;stkvar	_slot @ sp[(-5)+4]
  7460  019994  0EFF               	movlw	-1
  7461  019996  2AE3               	incf	plusw1,f,c
  7462                           
  7463                           ;stkvar	_slot @ sp[(-5)+4]
  7464  019998  0EFF               	movlw	-1
  7465  01999A  006F FF8C  F001    	movff	plusw1,btemp
  7466  0199A0  0E19               	movlw	25
  7467  0199A2  6401               	cpfsgt	btemp^0,c
  7468  0199A4  D7A5               	goto	l10658
  7469                           
  7470                           ;bsoc.c: 182:  return soc;
  7471                           ;stkvar	_soc @ sp[(-5)+0]
  7472  0199A6  0EFB               	movlw	-5
  7473  0199A8  006F FF8F FFE6     	movff	plusw1,postinc1
  7474  0199AE  006F FF8F FFE6     	movff	plusw1,postinc1
  7475  0199B4  006F FF8F FFE6     	movff	plusw1,postinc1
  7476  0199BA  006F FF8F FFE6     	movff	plusw1,postinc1
  7477  0199C0  EC2D  F0C7         	call	___fltol	;wreg free
  7478                           
  7479                           ; _Volts_to_SOC: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7480  0199C4  0EF7               	movlw	247
  7481  0199C6  26E1               	addwf	fsr1l,f,c
  7482  0199C8  0EFF               	movlw	255
  7483  0199CA  22E2               	addwfc	fsr1h,f,c
  7484  0199CC  0012               	return		;funcret
  7485  0199CE                     __end_of_Volts_to_SOC:
  7486                           	opt callstack 0
  7487                           
  7488 ;; *************** function _hid_display *****************
  7489 ;; Defined at:
  7490 ;;		line 17 in file "hid.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  h               1  [STACK] PTR struct H_data
  7493 ;;		 -> H(7), 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;		None
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1  [STACK] PTR struct H_data
  7498 ;; Registers used:
  7499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7500 ;; Tracked objects:
  7501 ;;		On entry : 3F/39
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7509 ;;Total ram usage:        0 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:   17
  7512 ;; This function calls:
  7513 ;;		_hid_input
  7514 ;; This function is called by:
  7515 ;;		_main
  7516 ;; This function uses a reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text14
  7520  019E14                     __ptext14:
  7521                           	opt callstack 0
  7522  019E14                     _hid_display:
  7523                           	opt callstack 13
  7524                           
  7525                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7526                           ;stkvar	_h @ sp[(0)+-1]
  7527                           
  7528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7529                           ;incstack = 0
  7530  019E14  0EFF               	movlw	-1
  7531  019E16  50E3               	movf	plusw1,w,c
  7532  019E18  6EE6               	movwf	postinc1,c
  7533  019E1A  ECC7  F0D5         	call	_hid_input	;wreg free
  7534                           
  7535                           ;hid.c: 21:  switch (h->h_state) {
  7536  019E1E  D066               	goto	l11070
  7537  019E20                     l11048:
  7538                           
  7539                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7540                           ;stkvar	_h @ sp[(0)+-1]
  7541  019E20  0EFF               	movlw	-1
  7542  019E22  50E3               	movf	plusw1,w,c
  7543  019E24  6ED9               	movwf	fsr2l,c
  7544  019E26  6ADA               	clrf	fsr2h,c
  7545  019E28  0E01               	movlw	1
  7546  019E2A  26D9               	addwf	fsr2l,f,c
  7547  019E2C  0E01               	movlw	1
  7548  019E2E  6EDF               	movwf	indf2,c
  7549                           
  7550                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7551                           ;stkvar	_h @ sp[(0)+-1]
  7552  019E30  0EFF               	movlw	-1
  7553  019E32  50E3               	movf	plusw1,w,c
  7554  019E34  6ED9               	movwf	fsr2l,c
  7555  019E36  6ADA               	clrf	fsr2h,c
  7556  019E38  0E00               	movlw	0
  7557  019E3A  6EDF               	movwf	indf2,c
  7558                           
  7559                           ;hid.c: 25:   h->wait_enter = 1;
  7560                           ;stkvar	_h @ sp[(0)+-1]
  7561  019E3C  0EFF               	movlw	-1
  7562  019E3E  50E3               	movf	plusw1,w,c
  7563  019E40  6ED9               	movwf	fsr2l,c
  7564  019E42  6ADA               	clrf	fsr2h,c
  7565  019E44  0E04               	movlw	4
  7566  019E46  26D9               	addwf	fsr2l,f,c
  7567  019E48  0E01               	movlw	1
  7568  019E4A  6EDF               	movwf	indf2,c
  7569                           
  7570                           ;hid.c: 26:   h->wait_select = 1;
  7571                           ;stkvar	_h @ sp[(0)+-1]
  7572  019E4C  0EFF               	movlw	-1
  7573  019E4E  50E3               	movf	plusw1,w,c
  7574  019E50  6ED9               	movwf	fsr2l,c
  7575  019E52  6ADA               	clrf	fsr2h,c
  7576  019E54  0E02               	movlw	2
  7577  019E56  26D9               	addwf	fsr2l,f,c
  7578  019E58  0E01               	movlw	1
  7579  019E5A  6EDF               	movwf	indf2,c
  7580                           
  7581                           ;hid.c: 27:   h->select_p = SW_OFF;
  7582                           ;stkvar	_h @ sp[(0)+-1]
  7583  019E5C  0EFF               	movlw	-1
  7584  019E5E  50E3               	movf	plusw1,w,c
  7585  019E60  6ED9               	movwf	fsr2l,c
  7586  019E62  6ADA               	clrf	fsr2h,c
  7587  019E64  0E03               	movlw	3
  7588  019E66  26D9               	addwf	fsr2l,f,c
  7589  019E68  0E00               	movlw	0
  7590  019E6A  6EDF               	movwf	indf2,c
  7591                           
  7592                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7593                           ;stkvar	_h @ sp[(0)+-1]
  7594  019E6C  0EFF               	movlw	-1
  7595  019E6E  50E3               	movf	plusw1,w,c
  7596  019E70  6ED9               	movwf	fsr2l,c
  7597  019E72  6ADA               	clrf	fsr2h,c
  7598  019E74  0E05               	movlw	5
  7599  019E76  26D9               	addwf	fsr2l,f,c
  7600  019E78  0E00               	movlw	0
  7601  019E7A  D036               	goto	L3
  7602  019E7C                     l11060:
  7603                           
  7604                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7605                           ;stkvar	_h @ sp[(0)+-1]
  7606  019E7C  0EFF               	movlw	-1
  7607  019E7E  50E3               	movf	plusw1,w,c
  7608  019E80  6ED9               	movwf	fsr2l,c
  7609  019E82  6ADA               	clrf	fsr2h,c
  7610  019E84  0E02               	movlw	2
  7611  019E86  26D9               	addwf	fsr2l,f,c
  7612  019E88  50DF               	movf	indf2,w,c
  7613  019E8A  A4D8               	btfss	status,2,c
  7614  019E8C  D042               	goto	l1967
  7615                           
  7616                           ;stkvar	_h @ sp[(0)+-1]
  7617  019E8E  0EFF               	movlw	-1
  7618  019E90  50E3               	movf	plusw1,w,c
  7619  019E92  6ED9               	movwf	fsr2l,c
  7620  019E94  6ADA               	clrf	fsr2h,c
  7621  019E96  0E03               	movlw	3
  7622  019E98  26D9               	addwf	fsr2l,f,c
  7623  019E9A  50DF               	movf	indf2,w,c
  7624  019E9C  A4D8               	btfss	status,2,c
  7625  019E9E  D039               	goto	l1967
  7626                           
  7627                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7628                           ;stkvar	_h @ sp[(0)+-1]
  7629  019EA0  0EFF               	movlw	-1
  7630  019EA2  50E3               	movf	plusw1,w,c
  7631  019EA4  6ED9               	movwf	fsr2l,c
  7632  019EA6  6ADA               	clrf	fsr2h,c
  7633  019EA8  0E06               	movlw	6
  7634  019EAA  26D9               	addwf	fsr2l,f,c
  7635                           
  7636                           ;stkvar	_h @ sp[(0)+-1]
  7637  019EAC  0EFF               	movlw	-1
  7638  019EAE  50E3               	movf	plusw1,w,c
  7639  019EB0  6EE9               	movwf	fsr0l,c
  7640  019EB2  6AEA               	clrf	fsr0h,c
  7641  019EB4  0E06               	movlw	6
  7642  019EB6  26E9               	addwf	fsr0l,f,c
  7643  019EB8  2AEF               	incf	indf0,f,c
  7644  019EBA  50EF               	movf	indf0,w,c
  7645  019EBC  0B03               	andlw	3
  7646  019EBE  6EDF               	movwf	indf2,c
  7647                           
  7648                           ;hid.c: 34:    h->hid_display = h->sequence;
  7649                           ;stkvar	_h @ sp[(0)+-1]
  7650  019EC0  0EFF               	movlw	-1
  7651  019EC2  50E3               	movf	plusw1,w,c
  7652  019EC4  6ED9               	movwf	fsr2l,c
  7653  019EC6  6ADA               	clrf	fsr2h,c
  7654  019EC8  0E06               	movlw	6
  7655  019ECA  26D9               	addwf	fsr2l,f,c
  7656                           
  7657                           ;stkvar	_h @ sp[(0)+-1]
  7658  019ECC  0EFF               	movlw	-1
  7659  019ECE  50E3               	movf	plusw1,w,c
  7660  019ED0  6EE9               	movwf	fsr0l,c
  7661  019ED2  6AEA               	clrf	fsr0h,c
  7662  019ED4  006F FF7F FFEF     	movff	indf2,indf0
  7663                           
  7664                           ;hid.c: 35:    h->wait_select = 1;
  7665                           ;stkvar	_h @ sp[(0)+-1]
  7666  019EDA  0EFF               	movlw	-1
  7667  019EDC  50E3               	movf	plusw1,w,c
  7668  019EDE  6ED9               	movwf	fsr2l,c
  7669  019EE0  6ADA               	clrf	fsr2h,c
  7670  019EE2  0E02               	movlw	2
  7671  019EE4  26D9               	addwf	fsr2l,f,c
  7672  019EE6  0E01               	movlw	1
  7673  019EE8                     L3:
  7674  019EE8  6EDF               	movwf	indf2,c
  7675  019EEA  D013               	goto	l1967
  7676  019EEC                     l11070:
  7677                           
  7678                           ;stkvar	_h @ sp[(0)+-1]
  7679  019EEC  0EFF               	movlw	-1
  7680  019EEE  50E3               	movf	plusw1,w,c
  7681  019EF0  6ED9               	movwf	fsr2l,c
  7682  019EF2  6ADA               	clrf	fsr2h,c
  7683  019EF4  0E01               	movlw	1
  7684  019EF6  26D9               	addwf	fsr2l,f,c
  7685  019EF8  50DF               	movf	indf2,w,c
  7686  019EFA  6E0B               	movwf	(btemp+10)^0,c
  7687  019EFC  6A0C               	clrf	(btemp+11)^0,c
  7688                           
  7689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7690                           ; Switch size 1, requested type "simple"
  7691                           ; Number of cases is 1, Range of values is 0 to 0
  7692                           ; switch strategies available:
  7693                           ; Name         Instructions Cycles
  7694                           ; simple_byte            4     3 (average)
  7695                           ;	Chosen strategy is simple_byte
  7696  019EFE  500C               	movf	(btemp+11)^0,w,c
  7697  019F00  0A00               	xorlw	0	; case 0
  7698  019F02  A4D8               	btfss	status,2,c
  7699  019F04  D7BB               	goto	l11060
  7700                           
  7701                           ; Switch size 1, requested type "simple"
  7702                           ; Number of cases is 2, Range of values is 0 to 1
  7703                           ; switch strategies available:
  7704                           ; Name         Instructions Cycles
  7705                           ; simple_byte            7     4 (average)
  7706                           ;	Chosen strategy is simple_byte
  7707  019F06  500B               	movf	(btemp+10)^0,w,c
  7708  019F08  0A00               	xorlw	0	; case 0
  7709  019F0A  B4D8               	btfsc	status,2,c
  7710  019F0C  D789               	goto	l11048
  7711  019F0E  0A01               	xorlw	1	; case 1
  7712  019F10  D7B5               	goto	l11060
  7713  019F12                     l1967:
  7714                           
  7715                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7716  019F12  52E5               	movf	postdec1,f,c
  7717  019F14  0012               	return		;funcret
  7718  019F16                     __end_of_hid_display:
  7719                           	opt callstack 0
  7720                           
  7721 ;; *************** function _hid_input *****************
  7722 ;; Defined at:
  7723 ;;		line 3 in file "hid.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  h               1  [STACK] PTR struct H_data
  7726 ;;		 -> H(7), 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;		None
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  1  [STACK] PTR struct H_data
  7731 ;; Registers used:
  7732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/39
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7742 ;;Total ram usage:        0 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:   16
  7745 ;; This function calls:
  7746 ;;		_get_switch
  7747 ;; This function is called by:
  7748 ;;		_hid_display
  7749 ;; This function uses a reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text15
  7753  01AB8E                     __ptext15:
  7754                           	opt callstack 0
  7755  01AB8E                     _hid_input:
  7756                           	opt callstack 13
  7757                           
  7758                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7759                           
  7760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7761                           ;incstack = 0
  7762  01AB8E  0E02               	movlw	2
  7763  01AB90  6EE6               	movwf	postinc1,c
  7764  01AB92  EC48  F0DD         	call	_get_switch	;wreg free
  7765  01AB96  5001               	movf	btemp^0,w,c
  7766  01AB98  B4D8               	btfsc	status,2,c
  7767  01AB9A  D01C               	goto	l10570
  7768                           
  7769                           ;hid.c: 6:   h->wait_select = 0;
  7770                           ;stkvar	_h @ sp[(0)+-1]
  7771  01AB9C  0EFF               	movlw	-1
  7772  01AB9E  50E3               	movf	plusw1,w,c
  7773  01ABA0  6ED9               	movwf	fsr2l,c
  7774  01ABA2  6ADA               	clrf	fsr2h,c
  7775  01ABA4  0E02               	movlw	2
  7776  01ABA6  26D9               	addwf	fsr2l,f,c
  7777  01ABA8  0E00               	movlw	0
  7778  01ABAA  6EDF               	movwf	indf2,c
  7779                           
  7780                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7781  01ABAC  0E02               	movlw	2
  7782  01ABAE  6EE6               	movwf	postinc1,c
  7783  01ABB0  EC48  F0DD         	call	_get_switch	;wreg free
  7784  01ABB4  5001               	movf	btemp^0,w,c
  7785  01ABB6  B4D8               	btfsc	status,2,c
  7786  01ABB8  D003               	goto	u9750
  7787  01ABBA  6A0C               	clrf	(btemp+11)^0,c
  7788  01ABBC  2A0C               	incf	(btemp+11)^0,f,c
  7789  01ABBE  D001               	goto	u9768
  7790  01ABC0                     u9750:
  7791  01ABC0  6A0C               	clrf	(btemp+11)^0,c
  7792  01ABC2                     u9768:
  7793                           
  7794                           ;stkvar	_h @ sp[(0)+-1]
  7795  01ABC2  0EFF               	movlw	-1
  7796  01ABC4  50E3               	movf	plusw1,w,c
  7797  01ABC6  6ED9               	movwf	fsr2l,c
  7798  01ABC8  6ADA               	clrf	fsr2h,c
  7799  01ABCA  0E03               	movlw	3
  7800  01ABCC  26D9               	addwf	fsr2l,f,c
  7801  01ABCE  0060  F033  FFDF   	movff	btemp+11,indf2
  7802  01ABD4                     l10570:
  7803                           
  7804                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7805  01ABD4  0E03               	movlw	3
  7806  01ABD6  6EE6               	movwf	postinc1,c
  7807  01ABD8  EC48  F0DD         	call	_get_switch	;wreg free
  7808  01ABDC  5001               	movf	btemp^0,w,c
  7809  01ABDE  B4D8               	btfsc	status,2,c
  7810  01ABE0  D01C               	goto	l1958
  7811                           
  7812                           ;hid.c: 11:   h->wait_enter = 0;
  7813                           ;stkvar	_h @ sp[(0)+-1]
  7814  01ABE2  0EFF               	movlw	-1
  7815  01ABE4  50E3               	movf	plusw1,w,c
  7816  01ABE6  6ED9               	movwf	fsr2l,c
  7817  01ABE8  6ADA               	clrf	fsr2h,c
  7818  01ABEA  0E04               	movlw	4
  7819  01ABEC  26D9               	addwf	fsr2l,f,c
  7820  01ABEE  0E00               	movlw	0
  7821  01ABF0  6EDF               	movwf	indf2,c
  7822                           
  7823                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7824  01ABF2  0E03               	movlw	3
  7825  01ABF4  6EE6               	movwf	postinc1,c
  7826  01ABF6  EC48  F0DD         	call	_get_switch	;wreg free
  7827  01ABFA  5001               	movf	btemp^0,w,c
  7828  01ABFC  B4D8               	btfsc	status,2,c
  7829  01ABFE  D003               	goto	u9780
  7830  01AC00  6A0C               	clrf	(btemp+11)^0,c
  7831  01AC02  2A0C               	incf	(btemp+11)^0,f,c
  7832  01AC04  D001               	goto	u9798
  7833  01AC06                     u9780:
  7834  01AC06  6A0C               	clrf	(btemp+11)^0,c
  7835  01AC08                     u9798:
  7836                           
  7837                           ;stkvar	_h @ sp[(0)+-1]
  7838  01AC08  0EFF               	movlw	-1
  7839  01AC0A  50E3               	movf	plusw1,w,c
  7840  01AC0C  6ED9               	movwf	fsr2l,c
  7841  01AC0E  6ADA               	clrf	fsr2h,c
  7842  01AC10  0E05               	movlw	5
  7843  01AC12  26D9               	addwf	fsr2l,f,c
  7844  01AC14  0060  F033  FFDF   	movff	btemp+11,indf2
  7845  01AC1A                     l1958:
  7846                           
  7847                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7848  01AC1A  52E5               	movf	postdec1,f,c
  7849  01AC1C  0012               	return		;funcret
  7850  01AC1E                     __end_of_hid_input:
  7851                           	opt callstack 0
  7852                           
  7853 ;; *************** function _get_switch *****************
  7854 ;; Defined at:
  7855 ;;		line 18 in file "dio.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  i               1  [STACK] unsigned char 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;		None
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1  [STACK] enum E17021
  7862 ;; Registers used:
  7863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/39
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7873 ;;Total ram usage:        0 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; Hardware stack levels required when called:   15
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_main
  7880 ;;		_hid_input
  7881 ;; This function uses a reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text16
  7885  01BA90                     __ptext16:
  7886                           	opt callstack 0
  7887  01BA90                     _get_switch:
  7888                           	opt callstack 13
  7889                           
  7890                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7891                           ;stkvar	_i @ sp[(0)+-1]
  7892                           
  7893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7894                           ;incstack = 0
  7895  01BA90  0EFF               	movlw	-1
  7896  01BA92  006F FF8C  F001    	movff	plusw1,btemp
  7897  01BA98  0E03               	movlw	3
  7898  01BA9A  6401               	cpfsgt	btemp^0,c
  7899  01BA9C  D002               	goto	l9922
  7900                           
  7901                           ;dio.c: 21:   return SW_OFF;
  7902  01BA9E  0E00               	movlw	0
  7903  01BAA0  D00A               	goto	L4
  7904  01BAA2                     l9922:
  7905                           
  7906                           ;dio.c: 23:  return S.button[i].sw;
  7907                           ;stkvar	_i @ sp[(0)+-1]
  7908  01BAA2  0EFF               	movlw	-1
  7909  01BAA4  50E3               	movf	plusw1,w,c
  7910  01BAA6  0D05               	mullw	5
  7911  01BAA8  0E54               	movlw	low _S
  7912  01BAAA  24F3               	addwf	243,w,c
  7913  01BAAC  6ED9               	movwf	fsr2l,c
  7914  01BAAE  0E02               	movlw	high _S
  7915  01BAB0  20F4               	addwfc	prodh,w,c
  7916  01BAB2  6EDA               	movwf	fsr2h,c
  7917  01BAB4  50DF               	movf	indf2,w,c
  7918  01BAB6                     L4:
  7919  01BAB6  6E01               	movwf	btemp^0,c
  7920                           
  7921                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7922  01BAB8  52E5               	movf	postdec1,f,c
  7923  01BABA  0012               	return		;funcret
  7924  01BABC                     __end_of_get_switch:
  7925                           	opt callstack 0
  7926                           
  7927 ;; *************** function _esr_check *****************
  7928 ;; Defined at:
  7929 ;;		line 191 in file "bsoc.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  fsm             1  [STACK] unsigned char 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;		None
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  4  [STACK] float 
  7936 ;; Registers used:
  7937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7947 ;;Total ram usage:        0 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:   18
  7950 ;; This function calls:
  7951 ;;		_StartTimer
  7952 ;;		_TimerDone
  7953 ;;		___fldiv
  7954 ;;		___flsub
  7955 ;;		_conv_raw_result
  7956 ;;		_fabsf
  7957 ;;		_set_load_relay_one
  7958 ;;		_set_load_relay_two
  7959 ;;		_update_adc_result
  7960 ;; This function is called by:
  7961 ;;		_main
  7962 ;; This function uses a reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text17
  7966  017124                     __ptext17:
  7967                           	opt callstack 0
  7968  017124                     _esr_check:
  7969                           	opt callstack 12
  7970                           
  7971                           ;bsoc.c: 191: float esr_check(uint8_t fsm);bsoc.c: 192: {;bsoc.c: 193:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 195:  if (fsm) {
  7972                           ;stkvar	_fsm @ sp[(0)+-1]
  7973                           
  7974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7975                           ;incstack = 0
  7976  017124  0EFF               	movlw	-1
  7977  017126  50E3               	movf	plusw1,w,c
  7978  017128  B4D8               	btfsc	status,2,c
  7979  01712A  D146               	goto	l10982
  7980                           
  7981                           ;bsoc.c: 196:   esr_state = 0;
  7982  01712C  6A40               	clrf	esr_check@esr_state^0,c
  7983                           
  7984                           ;bsoc.c: 197:   return -10.0;
  7985  01712E  0E00               	movlw	0
  7986  017130  6E01               	movwf	btemp^0,c
  7987  017132  0E00               	movlw	0
  7988  017134  6E02               	movwf	(btemp+1)^0,c
  7989  017136  0E20               	movlw	32
  7990  017138  6E03               	movwf	(btemp+2)^0,c
  7991  01713A  0EC1               	movlw	193
  7992  01713C  D158               	goto	L5
  7993  01713E                     l10914:
  7994                           
  7995                           ;bsoc.c: 202:   StartTimer(TMR_ESR, 10000);
  7996  01713E  0E10               	movlw	16
  7997  017140  6EE6               	movwf	postinc1,c
  7998  017142  0E27               	movlw	39
  7999  017144  6EE6               	movwf	postinc1,c
  8000  017146  0E0C               	movlw	12
  8001  017148  6EE6               	movwf	postinc1,c
  8002  01714A  EC8D  F0DB         	call	_StartTimer	;wreg free
  8003  01714E                     l10916:
  8004                           
  8005                           ;bsoc.c: 203:   esr_state++;
  8006  01714E  2A40               	incf	esr_check@esr_state^0,f,c
  8007                           
  8008                           ;bsoc.c: 204:   break;
  8009  017150  D147               	goto	l10984
  8010  017152                     l10918:
  8011                           
  8012                           ;bsoc.c: 209:   set_load_relay_one(0);
  8013  017152  0E00               	movlw	0
  8014  017154  6EE6               	movwf	postinc1,c
  8015  017156  EC53  F0E0         	call	_set_load_relay_one	;wreg free
  8016                           
  8017                           ;bsoc.c: 210:   set_load_relay_two(0);
  8018  01715A  0E00               	movlw	0
  8019  01715C  6EE6               	movwf	postinc1,c
  8020  01715E  EC4B  F0E0         	call	_set_load_relay_two	;wreg free
  8021                           
  8022                           ;bsoc.c: 211:   if (TimerDone(TMR_ESR)) {
  8023  017162  0E0C               	movlw	12
  8024  017164  6EE6               	movwf	postinc1,c
  8025  017166  ECB3  F0DD         	call	_TimerDone	;wreg free
  8026  01716A  5001               	movf	btemp^0,w,c
  8027  01716C  B4D8               	btfsc	status,2,c
  8028  01716E  D009               	goto	l10924
  8029                           
  8030                           ;bsoc.c: 212:    StartTimer(TMR_ESR, 10000);
  8031  017170  0E10               	movlw	16
  8032  017172  6EE6               	movwf	postinc1,c
  8033  017174  0E27               	movlw	39
  8034  017176  6EE6               	movwf	postinc1,c
  8035  017178  0E0C               	movlw	12
  8036  01717A  6EE6               	movwf	postinc1,c
  8037  01717C  EC8D  F0DB         	call	_StartTimer	;wreg free
  8038                           
  8039                           ;bsoc.c: 213:   } else {
  8040  017180  D006               	goto	l10928
  8041  017182                     l10924:
  8042                           
  8043                           ;bsoc.c: 214:    return -2.0;
  8044  017182  0E00               	movlw	0
  8045  017184  6E01               	movwf	btemp^0,c
  8046  017186  0E00               	movlw	0
  8047  017188  6E02               	movwf	(btemp+1)^0,c
  8048  01718A  0E00               	movlw	0
  8049  01718C  D066               	goto	L7
  8050  01718E                     l10928:
  8051                           
  8052                           ;bsoc.c: 219:   update_adc_result();
  8053  01718E  EC2D  F0DC         	call	_update_adc_result	;wreg free
  8054                           
  8055                           ;bsoc.c: 220:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8056  017192  0E00               	movlw	0
  8057  017194  6EE6               	movwf	postinc1,c
  8058  017196  0E04               	movlw	4
  8059  017198  6EE6               	movwf	postinc1,c
  8060  01719A  EC63  F0A9         	call	_conv_raw_result	;wreg free
  8061  01719E  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8062  0171A4  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8063  0171AA  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8064  0171B0  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8065  0171B6  D7CB               	goto	l10916
  8066  0171B8                     l10934:
  8067                           
  8068                           ;bsoc.c: 224:   set_load_relay_one(1);
  8069  0171B8  0E01               	movlw	1
  8070  0171BA  6EE6               	movwf	postinc1,c
  8071  0171BC  EC53  F0E0         	call	_set_load_relay_one	;wreg free
  8072                           
  8073                           ;bsoc.c: 225:   if (TimerDone(TMR_ESR)) {
  8074  0171C0  0E0C               	movlw	12
  8075  0171C2  6EE6               	movwf	postinc1,c
  8076  0171C4  ECB3  F0DD         	call	_TimerDone	;wreg free
  8077  0171C8  5001               	movf	btemp^0,w,c
  8078  0171CA  B4D8               	btfsc	status,2,c
  8079  0171CC  D009               	goto	l10940
  8080                           
  8081                           ;bsoc.c: 226:    StartTimer(TMR_ESR, 10000);
  8082  0171CE  0E10               	movlw	16
  8083  0171D0  6EE6               	movwf	postinc1,c
  8084  0171D2  0E27               	movlw	39
  8085  0171D4  6EE6               	movwf	postinc1,c
  8086  0171D6  0E0C               	movlw	12
  8087  0171D8  6EE6               	movwf	postinc1,c
  8088  0171DA  EC8D  F0DB         	call	_StartTimer	;wreg free
  8089                           
  8090                           ;bsoc.c: 227:   } else {
  8091  0171DE  D006               	goto	l10944
  8092  0171E0                     l10940:
  8093                           
  8094                           ;bsoc.c: 228:    return -3.0;
  8095  0171E0  0E00               	movlw	0
  8096  0171E2  6E01               	movwf	btemp^0,c
  8097  0171E4  0E00               	movlw	0
  8098  0171E6  6E02               	movwf	(btemp+1)^0,c
  8099  0171E8  0E40               	movlw	64
  8100  0171EA  D037               	goto	L7
  8101  0171EC                     l10944:
  8102                           
  8103                           ;bsoc.c: 231:   update_adc_result();
  8104  0171EC  EC2D  F0DC         	call	_update_adc_result	;wreg free
  8105                           
  8106                           ;bsoc.c: 232:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8107  0171F0  0E00               	movlw	0
  8108  0171F2  6EE6               	movwf	postinc1,c
  8109  0171F4  0E04               	movlw	4
  8110  0171F6  6EE6               	movwf	postinc1,c
  8111  0171F8  EC63  F0A9         	call	_conv_raw_result	;wreg free
  8112  0171FC  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8113  017202  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8114  017208  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8115  01720E  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8116                           
  8117                           ;bsoc.c: 233:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8118  017214  0E00               	movlw	0
  8119  017216  6EE6               	movwf	postinc1,c
  8120  017218  0E00               	movlw	0
  8121  01721A  6EE6               	movwf	postinc1,c
  8122  01721C  EC63  F0A9         	call	_conv_raw_result	;wreg free
  8123  017220  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8124  017226  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8125  01722C  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8126  017232  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8127  017238  D78A               	goto	l10916
  8128  01723A                     l10952:
  8129                           
  8130                           ;bsoc.c: 237:   set_load_relay_two(1);
  8131  01723A  0E01               	movlw	1
  8132  01723C  6EE6               	movwf	postinc1,c
  8133  01723E  EC4B  F0E0         	call	_set_load_relay_two	;wreg free
  8134                           
  8135                           ;bsoc.c: 238:   if (!TimerDone(TMR_ESR))
  8136  017242  0E0C               	movlw	12
  8137  017244  6EE6               	movwf	postinc1,c
  8138  017246  ECB3  F0DD         	call	_TimerDone	;wreg free
  8139  01724A  5001               	movf	btemp^0,w,c
  8140  01724C  A4D8               	btfss	status,2,c
  8141  01724E  D008               	goto	l10960
  8142                           
  8143                           ;bsoc.c: 239:    return -4.0;
  8144  017250  0E00               	movlw	0
  8145  017252  6E01               	movwf	btemp^0,c
  8146  017254  0E00               	movlw	0
  8147  017256  6E02               	movwf	(btemp+1)^0,c
  8148  017258  0E80               	movlw	128
  8149  01725A                     L7:
  8150  01725A  6E03               	movwf	(btemp+2)^0,c
  8151  01725C  0EC0               	movlw	192
  8152  01725E  D0C7               	goto	L5
  8153  017260                     l10960:
  8154                           
  8155                           ;bsoc.c: 241:   update_adc_result();
  8156  017260  EC2D  F0DC         	call	_update_adc_result	;wreg free
  8157                           
  8158                           ;bsoc.c: 242:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8159  017264  0E00               	movlw	0
  8160  017266  6EE6               	movwf	postinc1,c
  8161  017268  0E04               	movlw	4
  8162  01726A  6EE6               	movwf	postinc1,c
  8163  01726C  EC63  F0A9         	call	_conv_raw_result	;wreg free
  8164  017270  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8165  017276  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8166  01727C  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8167  017282  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8168                           
  8169                           ;bsoc.c: 243:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8170  017288  0E00               	movlw	0
  8171  01728A  6EE6               	movwf	postinc1,c
  8172  01728C  0E00               	movlw	0
  8173  01728E  6EE6               	movwf	postinc1,c
  8174  017290  EC63  F0A9         	call	_conv_raw_result	;wreg free
  8175  017294  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8176  01729A  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8177  0172A0  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8178  0172A6  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8179                           
  8180                           ;bsoc.c: 245:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8181  0172AC  EE22  F011         	lfsr	2,_C+274	;volatile
  8182  0172B0  006F FF7B FFE6     	movff	postinc2,postinc1
  8183  0172B6  006F FF7B FFE6     	movff	postinc2,postinc1
  8184  0172BC  006F FF7B FFE6     	movff	postinc2,postinc1
  8185  0172C2  006F FF7B FFE6     	movff	postinc2,postinc1
  8186  0172C8  EE22  F00D         	lfsr	2,_C+270	;volatile
  8187  0172CC  006F FF7B FFE6     	movff	postinc2,postinc1
  8188  0172D2  006F FF7B FFE6     	movff	postinc2,postinc1
  8189  0172D8  006F FF7B FFE6     	movff	postinc2,postinc1
  8190  0172DE  006F FF7B FFE6     	movff	postinc2,postinc1
  8191  0172E4  ECE7  F0DA         	call	___flsub	;wreg free
  8192  0172E8  0060  F007  FFE6   	movff	btemp,postinc1
  8193  0172EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8194  0172F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8195  0172FA  0060  F013  FFE6   	movff	btemp+3,postinc1
  8196  017300  EE22  F01D         	lfsr	2,_C+286	;volatile
  8197  017304  006F FF7B FFE6     	movff	postinc2,postinc1
  8198  01730A  006F FF7B FFE6     	movff	postinc2,postinc1
  8199  017310  006F FF7B FFE6     	movff	postinc2,postinc1
  8200  017316  006F FF7B FFE6     	movff	postinc2,postinc1
  8201  01731C  EE22  F019         	lfsr	2,_C+282	;volatile
  8202  017320  006F FF7B FFE6     	movff	postinc2,postinc1
  8203  017326  006F FF7B FFE6     	movff	postinc2,postinc1
  8204  01732C  006F FF7B FFE6     	movff	postinc2,postinc1
  8205  017332  006F FF7B FFE6     	movff	postinc2,postinc1
  8206  017338  ECE7  F0DA         	call	___flsub	;wreg free
  8207  01733C  0060  F007  FFE6   	movff	btemp,postinc1
  8208  017342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8209  017348  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8210  01734E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8211  017354  ECA6  F0A6         	call	___fldiv	;wreg free
  8212  017358  0060  F007  FFE6   	movff	btemp,postinc1
  8213  01735E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8214  017364  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8215  01736A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8216  017370  ECEF  F0D2         	call	_fabsf	;wreg free
  8217  017374  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8218  01737A  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8219  017380  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8220  017386  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8221                           
  8222                           ;bsoc.c: 246:   set_load_relay_one(0);
  8223  01738C  0E00               	movlw	0
  8224  01738E  6EE6               	movwf	postinc1,c
  8225  017390  EC53  F0E0         	call	_set_load_relay_one	;wreg free
  8226                           
  8227                           ;bsoc.c: 247:   set_load_relay_two(0);
  8228  017394  0E00               	movlw	0
  8229  017396  6EE6               	movwf	postinc1,c
  8230  017398  EC4B  F0E0         	call	_set_load_relay_two	;wreg free
  8231                           
  8232                           ;bsoc.c: 248:   esr_state = 0;
  8233  01739C  6A40               	clrf	esr_check@esr_state^0,c
  8234                           
  8235                           ;bsoc.c: 249:   return C.esr;
  8236  01739E  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8237  0173A4  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8238  0173AA  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8239  0173B0  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8240  0173B6  D01C               	goto	l2079
  8241  0173B8                     l10982:
  8242  0173B8  5040               	movf	esr_check@esr_state^0,w,c
  8243  0173BA  6E0B               	movwf	(btemp+10)^0,c
  8244  0173BC  6A0C               	clrf	(btemp+11)^0,c
  8245                           
  8246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8247                           ; Switch size 1, requested type "simple"
  8248                           ; Number of cases is 1, Range of values is 0 to 0
  8249                           ; switch strategies available:
  8250                           ; Name         Instructions Cycles
  8251                           ; simple_byte            4     3 (average)
  8252                           ;	Chosen strategy is simple_byte
  8253  0173BE  500C               	movf	(btemp+11)^0,w,c
  8254  0173C0  0A00               	xorlw	0	; case 0
  8255  0173C2  A4D8               	btfss	status,2,c
  8256  0173C4  D00D               	goto	l10984
  8257                           
  8258                           ; Switch size 1, requested type "simple"
  8259                           ; Number of cases is 4, Range of values is 0 to 3
  8260                           ; switch strategies available:
  8261                           ; Name         Instructions Cycles
  8262                           ; simple_byte           13     7 (average)
  8263                           ;	Chosen strategy is simple_byte
  8264  0173C6  500B               	movf	(btemp+10)^0,w,c
  8265  0173C8  0A00               	xorlw	0	; case 0
  8266  0173CA  B4D8               	btfsc	status,2,c
  8267  0173CC  D6B8               	goto	l10914
  8268  0173CE  0A01               	xorlw	1	; case 1
  8269  0173D0  B4D8               	btfsc	status,2,c
  8270  0173D2  D6BF               	goto	l10918
  8271  0173D4  0A03               	xorlw	3	; case 2
  8272  0173D6  B4D8               	btfsc	status,2,c
  8273  0173D8  D6EF               	goto	l10934
  8274  0173DA  0A01               	xorlw	1	; case 3
  8275  0173DC  B4D8               	btfsc	status,2,c
  8276  0173DE  D72D               	goto	l10952
  8277  0173E0                     l10984:
  8278                           
  8279                           ;bsoc.c: 254:  return -1.0;
  8280  0173E0  0E00               	movlw	0
  8281  0173E2  6E01               	movwf	btemp^0,c
  8282  0173E4  0E00               	movlw	0
  8283  0173E6  6E02               	movwf	(btemp+1)^0,c
  8284  0173E8  0E80               	movlw	128
  8285  0173EA  6E03               	movwf	(btemp+2)^0,c
  8286  0173EC  0EBF               	movlw	191
  8287  0173EE                     L5:
  8288  0173EE  6E04               	movwf	(btemp+3)^0,c
  8289  0173F0                     l2079:
  8290                           
  8291                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8292  0173F0  52E5               	movf	postdec1,f,c
  8293  0173F2  0012               	return		;funcret
  8294  0173F4                     __end_of_esr_check:
  8295                           	opt callstack 0
  8296                           
  8297 ;; *************** function _update_adc_result *****************
  8298 ;; Defined at:
  8299 ;;		line 74 in file "daq.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;		None
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;		None
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1  [STACK] _Bool 
  8306 ;; Registers used:
  8307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8317 ;;Total ram usage:        0 bytes
  8318 ;; Hardware stack levels used:    1
  8319 ;; Hardware stack levels required when called:   17
  8320 ;; This function calls:
  8321 ;;		_StartTimer
  8322 ;;		_TimerDone
  8323 ;;		_check_adc_scan
  8324 ;;		_clear_adc_scan
  8325 ;;		_start_adc_scan
  8326 ;; This function is called by:
  8327 ;;		_esr_check
  8328 ;; This function uses a reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text18
  8332  01B85A                     __ptext18:
  8333                           	opt callstack 0
  8334  01B85A                     _update_adc_result:
  8335                           	opt callstack 12
  8336                           
  8337                           ;daq.c: 76:  if (R.done) {
  8338                           
  8339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8340                           ;incstack = 0
  8341  01B85A  0101               	movlb	1	; () banked
  8342  01B85C  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8343  01B85E  B4D8               	btfsc	status,2,c
  8344  01B860  0012               	return	
  8345                           
  8346                           ; BSR set to: 1
  8347                           ;daq.c: 77:   clear_adc_scan();
  8348  01B862  ECC7  F0E0         	call	_clear_adc_scan	;wreg free
  8349                           
  8350                           ; BSR set to: 1
  8351                           ;daq.c: 78:   start_adc_scan();
  8352  01B866  EC26  F0D8         	call	_start_adc_scan	;wreg free
  8353                           
  8354                           ;daq.c: 79:   StartTimer(TMR_ADC, 200);
  8355  01B86A  0EC8               	movlw	200
  8356  01B86C  6EE6               	movwf	postinc1,c
  8357  01B86E  0E00               	movlw	0
  8358  01B870  6EE6               	movwf	postinc1,c
  8359  01B872  0E01               	movlw	1
  8360  01B874  6EE6               	movwf	postinc1,c
  8361  01B876  EC8D  F0DB         	call	_StartTimer	;wreg free
  8362  01B87A                     l10502:
  8363  01B87A  0E01               	movlw	1
  8364  01B87C  6EE6               	movwf	postinc1,c
  8365  01B87E  ECB3  F0DD         	call	_TimerDone	;wreg free
  8366  01B882  5001               	movf	btemp^0,w,c
  8367  01B884  A4D8               	btfss	status,2,c
  8368  01B886  0012               	return	
  8369  01B888  ECB7  F0E0         	call	_check_adc_scan	;wreg free
  8370  01B88C  5001               	movf	btemp^0,w,c
  8371  01B88E  A4D8               	btfss	status,2,c
  8372  01B890  0012               	return	
  8373  01B892  D7F3               	goto	l10502
  8374  01B894                     __end_of_update_adc_result:
  8375                           	opt callstack 0
  8376                           
  8377 ;; *************** function _start_adc_scan *****************
  8378 ;; Defined at:
  8379 ;;		line 35 in file "daq.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;		None
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1  [STACK] _Bool 
  8386 ;; Registers used:
  8387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8397 ;;Total ram usage:        0 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:   16
  8400 ;; This function calls:
  8401 ;;		_ADCC_DischargeSampleCapacitor
  8402 ;;		_ADCC_SetADIInterruptHandler
  8403 ;;		_ADCC_SetADTIInterruptHandler
  8404 ;;		_ADCC_StartConversion
  8405 ;; This function is called by:
  8406 ;;		_main
  8407 ;;		_update_adc_result
  8408 ;; This function uses a reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text19
  8412  01B04C                     __ptext19:
  8413                           	opt callstack 0
  8414  01B04C                     _start_adc_scan:
  8415                           	opt callstack 14
  8416                           
  8417                           ;daq.c: 37:  if (R.done)
  8418                           
  8419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8420                           ;incstack = 0
  8421  01B04C  0101               	movlb	1	; () banked
  8422  01B04E  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8423  01B050  A4D8               	btfss	status,2,c
  8424  01B052  0012               	return	
  8425                           
  8426                           ; BSR set to: 1
  8427                           ;daq.c: 40:  R.scan_index = 0;
  8428  01B054  6B2C               	clrf	(_R+44)& (0+255),b	;volatile
  8429                           
  8430                           ; BSR set to: 1
  8431                           ;daq.c: 41:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8432  01B056  013A               	movlb	58	; () banked
  8433  01B058  5140               	movf	64,w,b	;volatile
  8434  01B05A  006E F940  F001    	movff	14928,btemp	;volatile
  8435  01B060  6A02               	clrf	(btemp+1)^0,c
  8436  01B062  0060  F004  F002   	movff	btemp,btemp+1
  8437  01B068  6A01               	clrf	btemp^0,c
  8438  01B06A  2601               	addwf	btemp^0,f,c
  8439  01B06C  0E00               	movlw	0
  8440  01B06E  2202               	addwfc	(btemp+1)^0,f,c
  8441  01B070  0E77               	movlw	119
  8442  01B072  1401               	andwf	btemp^0,w,c
  8443  01B074  0101               	movlb	1	; () banked
  8444  01B076  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  8445  01B078  0E3C               	movlw	60
  8446  01B07A  1402               	andwf	(btemp+1)^0,w,c
  8447  01B07C  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  8448                           
  8449                           ; BSR set to: 1
  8450                           ;daq.c: 42:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8451  01B07E  0EB6               	movlw	low _adc_int_handler
  8452  01B080  6EE6               	movwf	postinc1,c
  8453  01B082  0EC1               	movlw	high _adc_int_handler
  8454  01B084  6EE6               	movwf	postinc1,c
  8455  01B086  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8456  01B088  6EE6               	movwf	postinc1,c
  8457  01B08A  EC7B  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8458                           
  8459                           ;daq.c: 43:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8460  01B08E  0EAE               	movlw	low _adc_int_t_handler
  8461  01B090  6EE6               	movwf	postinc1,c
  8462  01B092  0EAD               	movlw	high _adc_int_t_handler
  8463  01B094  6EE6               	movwf	postinc1,c
  8464  01B096  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8465  01B098  6EE6               	movwf	postinc1,c
  8466  01B09A  EC67  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8467                           
  8468                           ;daq.c: 44:  ADCC_DischargeSampleCapacitor();
  8469  01B09E  ECB3  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8470                           
  8471                           ; BSR set to: 62
  8472                           ;daq.c: 45:  ADCC_StartConversion(R.scan_index & 0xf);
  8473  01B0A2  0101               	movlb	1	; () banked
  8474  01B0A4  512C               	movf	(_R+44)& (0+255),w,b	;volatile
  8475  01B0A6  0B0F               	andlw	15
  8476  01B0A8  6EE6               	movwf	postinc1,c
  8477  01B0AA  EC42  F0E0         	call	_ADCC_StartConversion	;wreg free
  8478                           
  8479                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8480  01B0AE  0012               	return		;funcret
  8481  01B0B0                     __end_of_start_adc_scan:
  8482                           	opt callstack 0
  8483                           
  8484 ;; *************** function _ADCC_StartConversion *****************
  8485 ;; Defined at:
  8486 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;  channel         1  [STACK] enum E16136
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;		None
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1  [STACK] void 
  8493 ;; Registers used:
  8494 ;;		fsr1l, fsr1h
  8495 ;; Tracked objects:
  8496 ;;		On entry : 3F/1
  8497 ;;		On exit  : 3F/3E
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8504 ;;Total ram usage:        0 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:   15
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		_start_adc_scan
  8511 ;;		_adc_int_t_handler
  8512 ;; This function uses a reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text20
  8516  01C084                     __ptext20:
  8517                           	opt callstack 0
  8518  01C084                     _ADCC_StartConversion:
  8519                           	opt callstack 0
  8520                           
  8521                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8522                           ;stkvar	_channel @ sp[(0)+-1]
  8523                           
  8524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8525                           ;incstack = 0
  8526 ;; hardware stack exceeded
  8527  01C084  0EFF               	movlw	-1
  8528  01C086  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8529                           
  8530                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8531  01C08C  013E               	movlb	62	; () banked
  8532  01C08E  8FF8               	bsf	248,7,b	;volatile
  8533                           
  8534                           ; BSR set to: 62
  8535                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8536  01C090  81F8               	bsf	248,0,b	;volatile
  8537                           
  8538                           ; BSR set to: 62
  8539                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8540  01C092  52E5               	movf	postdec1,f,c
  8541  01C094  0012               	return		;funcret
  8542  01C096                     __end_of_ADCC_StartConversion:
  8543                           	opt callstack 0
  8544                           
  8545 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8546 ;; Defined at:
  8547 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;		None
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1  [STACK] void 
  8554 ;; Registers used:
  8555 ;;		wreg, status,2
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/1
  8558 ;;		On exit  : 3F/3E
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8565 ;;Total ram usage:        0 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:   15
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_start_adc_scan
  8572 ;;		_adc_int_t_handler
  8573 ;; This function uses a reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text21
  8577  01C166                     __ptext21:
  8578                           	opt callstack 0
  8579  01C166                     _ADCC_DischargeSampleCapacitor:
  8580                           	opt callstack 0
  8581                           
  8582                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8583                           
  8584                           ; BSR set to: 62
  8585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8586                           ;incstack = 0
  8587 ;; hardware stack exceeded
  8588  01C166  0E3B               	movlw	59
  8589  01C168  013E               	movlb	62	; () banked
  8590  01C16A  6FF1               	movwf	241,b	;volatile
  8591                           
  8592                           ; BSR set to: 62
  8593                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8594  01C16C  0012               	return		;funcret
  8595  01C16E                     __end_of_ADCC_DischargeSampleCapacitor:
  8596                           	opt callstack 0
  8597                           
  8598 ;; *************** function _clear_adc_scan *****************
  8599 ;; Defined at:
  8600 ;;		line 66 in file "daq.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;		None
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;		None
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1  [STACK] void 
  8607 ;; Registers used:
  8608 ;;		None
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 3F/1
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8618 ;;Total ram usage:        0 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:   15
  8621 ;; This function calls:
  8622 ;;		Nothing
  8623 ;; This function is called by:
  8624 ;;		_main
  8625 ;;		_update_adc_result
  8626 ;; This function uses a reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text22
  8630  01C18E                     __ptext22:
  8631                           	opt callstack 0
  8632  01C18E                     _clear_adc_scan:
  8633                           	opt callstack 13
  8634                           
  8635                           ;daq.c: 68:  R.done = 0;
  8636                           
  8637                           ; BSR set to: 62
  8638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8639                           ;incstack = 0
  8640  01C18E  0101               	movlb	1	; () banked
  8641  01C190  6B2F               	clrf	(_R+47)& (0+255),b	;volatile
  8642                           
  8643                           ; BSR set to: 1
  8644                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8645  01C192  0012               	return		;funcret
  8646  01C194                     __end_of_clear_adc_scan:
  8647                           	opt callstack 0
  8648                           
  8649 ;; *************** function _check_adc_scan *****************
  8650 ;; Defined at:
  8651 ;;		line 58 in file "daq.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;		None
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;		None
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  1  [STACK] _Bool 
  8658 ;; Registers used:
  8659 ;;		btemp
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/1
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8669 ;;Total ram usage:        0 bytes
  8670 ;; Hardware stack levels used:    1
  8671 ;; Hardware stack levels required when called:   15
  8672 ;; This function calls:
  8673 ;;		Nothing
  8674 ;; This function is called by:
  8675 ;;		_main
  8676 ;;		_update_adc_result
  8677 ;; This function uses a reentrant model
  8678 ;;
  8679                           
  8680                           	psect	text23
  8681  01C16E                     __ptext23:
  8682                           	opt callstack 0
  8683  01C16E                     _check_adc_scan:
  8684                           	opt callstack 13
  8685                           
  8686                           ;daq.c: 60:  return R.done;
  8687                           
  8688                           ; BSR set to: 1
  8689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8690                           ;incstack = 0
  8691  01C16E  0060  F4BC  F001   	movff	_R+47,btemp	;volatile
  8692                           
  8693                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8694  01C174  0012               	return		;funcret
  8695  01C176                     __end_of_check_adc_scan:
  8696                           	opt callstack 0
  8697                           
  8698 ;; *************** function _set_load_relay_two *****************
  8699 ;; Defined at:
  8700 ;;		line 130 in file "mbmc.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;  mode            1  [STACK] _Bool 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;		None
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1  [STACK] void 
  8707 ;; Registers used:
  8708 ;;		wreg, fsr1l, fsr1h
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8718 ;;Total ram usage:        0 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; Hardware stack levels required when called:   15
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		_main
  8725 ;;		_esr_check
  8726 ;; This function uses a reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text24
  8730  01C096                     __ptext24:
  8731                           	opt callstack 0
  8732  01C096                     _set_load_relay_two:
  8733                           	opt callstack 15
  8734                           
  8735                           ;mbmc.c: 130: void set_load_relay_two(_Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LATDbits.
      +                          LATD5 = mode;
  8736                           ;stkvar	_mode @ sp[(0)+-1]
  8737                           
  8738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8739                           ;incstack = 0
  8740  01C096  0EFF               	movlw	-1
  8741  01C098  B0E3               	btfsc	plusw1,0,c
  8742  01C09A  D002               	bra	u9515
  8743  01C09C  9ABD               	bcf	189,5,c	;volatile
  8744  01C09E  D001               	bra	u9516
  8745  01C0A0                     u9515:
  8746  01C0A0  8ABD               	bsf	189,5,c	;volatile
  8747  01C0A2                     u9516:
  8748                           
  8749                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8750  01C0A2  52E5               	movf	postdec1,f,c
  8751  01C0A4  0012               	return		;funcret
  8752  01C0A6                     __end_of_set_load_relay_two:
  8753                           	opt callstack 0
  8754                           
  8755 ;; *************** function _set_load_relay_one *****************
  8756 ;; Defined at:
  8757 ;;		line 125 in file "mbmc.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  mode            1  [STACK] _Bool 
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;		None
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1  [STACK] void 
  8764 ;; Registers used:
  8765 ;;		wreg, fsr1l, fsr1h
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8775 ;;Total ram usage:        0 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:   15
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_main
  8782 ;;		_esr_check
  8783 ;; This function uses a reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text25
  8787  01C0A6                     __ptext25:
  8788                           	opt callstack 0
  8789  01C0A6                     _set_load_relay_one:
  8790                           	opt callstack 15
  8791                           
  8792                           ;mbmc.c: 125: void set_load_relay_one(_Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LATDbits.
      +                          LATD4 = mode;
  8793                           ;stkvar	_mode @ sp[(0)+-1]
  8794                           
  8795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8796                           ;incstack = 0
  8797  01C0A6  0EFF               	movlw	-1
  8798  01C0A8  B0E3               	btfsc	plusw1,0,c
  8799  01C0AA  D002               	bra	u9505
  8800  01C0AC  98BD               	bcf	189,4,c	;volatile
  8801  01C0AE  D001               	bra	u9506
  8802  01C0B0                     u9505:
  8803  01C0B0  88BD               	bsf	189,4,c	;volatile
  8804  01C0B2                     u9506:
  8805                           
  8806                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8807  01C0B2  52E5               	movf	postdec1,f,c
  8808  01C0B4  0012               	return		;funcret
  8809  01C0B6                     __end_of_set_load_relay_one:
  8810                           	opt callstack 0
  8811                           
  8812 ;; *************** function _eaDogM_WriteCommand *****************
  8813 ;; Defined at:
  8814 ;;		line 385 in file "eadog.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;  cmd             1  [STACK] const unsigned char 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  1  [STACK] void 
  8821 ;; Registers used:
  8822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8823 ;; Tracked objects:
  8824 ;;		On entry : 3F/3D
  8825 ;;		On exit  : 3F/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8832 ;;Total ram usage:        0 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:   26
  8835 ;; This function calls:
  8836 ;;		_send_lcd_cmd_dma
  8837 ;; This function is called by:
  8838 ;;		_main
  8839 ;; This function uses a reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text26
  8843  01C0E4                     __ptext26:
  8844                           	opt callstack 0
  8845  01C0E4                     _eaDogM_WriteCommand:
  8846                           	opt callstack 4
  8847                           
  8848                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  8849                           ;stkvar	_cmd @ sp[(0)+-1]
  8850                           
  8851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8852                           ;incstack = 0
  8853  01C0E4  0EFF               	movlw	-1
  8854  01C0E6  50E3               	movf	plusw1,w,c
  8855  01C0E8  6EE6               	movwf	postinc1,c
  8856  01C0EA  EC9B  F0DF         	call	_send_lcd_cmd_dma	;wreg free
  8857                           
  8858                           ; BSR set to: 0
  8859                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8860  01C0EE  52E5               	movf	postdec1,f,c
  8861  01C0F0  0012               	return		;funcret
  8862  01C0F2                     __end_of_eaDogM_WriteCommand:
  8863                           	opt callstack 0
  8864                           
  8865 ;; *************** function _convert_adc_data *****************
  8866 ;; Defined at:
  8867 ;;		line 51 in file "mbmc.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;		None
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  i               1  [STACK] unsigned char 
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1  [STACK] void 
  8874 ;; Registers used:
  8875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/1
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8885 ;;Total ram usage:        0 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:   18
  8888 ;; This function calls:
  8889 ;;		_conv_raw_result
  8890 ;;		_lp_filter
  8891 ;; This function is called by:
  8892 ;;		_main
  8893 ;; This function uses a reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text27
  8897  01A526                     __ptext27:
  8898                           	opt callstack 0
  8899  01A526                     _convert_adc_data:
  8900                           	opt callstack 0
  8901                           
  8902                           ; BSR set to: 0
  8903                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8904  01A526  52E6               	movf	postinc1,f,c
  8905                           
  8906                           ;mbmc.c: 53:  uint8_t i = 0;
  8907                           ;stkvar	_i @ sp[(-1)+0]
  8908                           
  8909                           ;incstack = 0
  8910  01A528  0EFF               	movlw	-1
  8911  01A52A  6AE3               	clrf	plusw1,c
  8912  01A52C                     l10994:
  8913                           
  8914                           ;mbmc.c: 56:   if (V.calib) {
  8915  01A52C  0101               	movlb	1	; () banked
  8916  01A52E  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  8917  01A530  B4D8               	btfsc	status,2,c
  8918  01A532  D01B               	goto	l10998
  8919                           
  8920                           ; BSR set to: 1
  8921                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8922  01A534  0E01               	movlw	1
  8923  01A536  6EE6               	movwf	postinc1,c
  8924                           
  8925                           ;stkvar	_i @ sp[(-2)+0]
  8926  01A538  0EFE               	movlw	-2
  8927  01A53A  50E3               	movf	plusw1,w,c
  8928  01A53C  6EE6               	movwf	postinc1,c
  8929  01A53E  0E01               	movlw	1
  8930  01A540  6EE6               	movwf	postinc1,c
  8931                           
  8932                           ;stkvar	_i @ sp[(-4)+0]
  8933  01A542  0EFC               	movlw	-4
  8934  01A544  50E3               	movf	plusw1,w,c
  8935  01A546  6EE6               	movwf	postinc1,c
  8936  01A548  EC63  F0A9         	call	_conv_raw_result	;wreg free
  8937  01A54C  0060  F007  FFE6   	movff	btemp,postinc1
  8938  01A552  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8939  01A558  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8940  01A55E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8941  01A564  EC31  F0C3         	call	_lp_filter	;wreg free
  8942  01A568  D01A               	goto	L8
  8943  01A56A                     l10998:
  8944                           
  8945                           ; BSR set to: 1
  8946                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8947  01A56A  0E00               	movlw	0
  8948  01A56C  6EE6               	movwf	postinc1,c
  8949                           
  8950                           ;stkvar	_i @ sp[(-2)+0]
  8951  01A56E  0EFE               	movlw	-2
  8952  01A570  50E3               	movf	plusw1,w,c
  8953  01A572  6EE6               	movwf	postinc1,c
  8954  01A574  0E00               	movlw	0
  8955  01A576  6EE6               	movwf	postinc1,c
  8956                           
  8957                           ;stkvar	_i @ sp[(-4)+0]
  8958  01A578  0EFC               	movlw	-4
  8959  01A57A  50E3               	movf	plusw1,w,c
  8960  01A57C  6EE6               	movwf	postinc1,c
  8961  01A57E  EC63  F0A9         	call	_conv_raw_result	;wreg free
  8962  01A582  0060  F007  FFE6   	movff	btemp,postinc1
  8963  01A588  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8964  01A58E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8965  01A594  0060  F013  FFE6   	movff	btemp+3,postinc1
  8966  01A59A  EC31  F0C3         	call	_lp_filter	;wreg free
  8967  01A59E                     L8:
  8968                           
  8969                           ;stkvar	_i @ sp[(-1)+0]
  8970  01A59E  0EFF               	movlw	-1
  8971  01A5A0  50E3               	movf	plusw1,w,c
  8972  01A5A2  0D04               	mullw	4
  8973  01A5A4  0EFF               	movlw	low _C
  8974  01A5A6  24F3               	addwf	243,w,c
  8975  01A5A8  6ED9               	movwf	fsr2l,c
  8976  01A5AA  0E06               	movlw	high _C
  8977  01A5AC  20F4               	addwfc	prodh,w,c
  8978  01A5AE  6EDA               	movwf	fsr2h,c
  8979  01A5B0  0060  F007  FFDE   	movff	btemp,postinc2
  8980  01A5B6  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8981  01A5BC  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8982  01A5C2  0060  F013  FFDE   	movff	btemp+3,postinc2
  8983                           
  8984                           ;mbmc.c: 61:  } while (++i < 16);
  8985                           ;stkvar	_i @ sp[(-1)+0]
  8986  01A5C8  0EFF               	movlw	-1
  8987  01A5CA  2AE3               	incf	plusw1,f,c
  8988  01A5CC  0EFF               	movlw	-1
  8989  01A5CE  006F FF8C  F001    	movff	plusw1,btemp
  8990  01A5D4  0E0F               	movlw	15
  8991  01A5D6  6401               	cpfsgt	btemp^0,c
  8992  01A5D8  D7A9               	goto	l10994
  8993                           
  8994                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8995  01A5DA  52E5               	movf	postdec1,f,c
  8996  01A5DC  0012               	return		;funcret
  8997  01A5DE                     __end_of_convert_adc_data:
  8998                           	opt callstack 0
  8999                           
  9000 ;; *************** function _clear_hid_pflags *****************
  9001 ;; Defined at:
  9002 ;;		line 51 in file "hid.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  h               1  [STACK] PTR struct H_data
  9005 ;;		 -> H(7), 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1  [STACK] void 
  9010 ;; Registers used:
  9011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9012 ;; Tracked objects:
  9013 ;;		On entry : 3F/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:   15
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		_main
  9028 ;; This function uses a reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text28
  9032  01BDBC                     __ptext28:
  9033                           	opt callstack 0
  9034  01BDBC                     _clear_hid_pflags:
  9035                           	opt callstack 15
  9036                           
  9037                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9038                           ;stkvar	_h @ sp[(0)+-1]
  9039                           
  9040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9041                           ;incstack = 0
  9042  01BDBC  0EFF               	movlw	-1
  9043  01BDBE  50E3               	movf	plusw1,w,c
  9044  01BDC0  6ED9               	movwf	fsr2l,c
  9045  01BDC2  6ADA               	clrf	fsr2h,c
  9046  01BDC4  0E03               	movlw	3
  9047  01BDC6  26D9               	addwf	fsr2l,f,c
  9048  01BDC8  0E00               	movlw	0
  9049  01BDCA  6EDF               	movwf	indf2,c
  9050                           
  9051                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9052                           ;stkvar	_h @ sp[(0)+-1]
  9053  01BDCC  0EFF               	movlw	-1
  9054  01BDCE  50E3               	movf	plusw1,w,c
  9055  01BDD0  6ED9               	movwf	fsr2l,c
  9056  01BDD2  6ADA               	clrf	fsr2h,c
  9057  01BDD4  0E05               	movlw	5
  9058  01BDD6  26D9               	addwf	fsr2l,f,c
  9059  01BDD8  0E00               	movlw	0
  9060  01BDDA  6EDF               	movwf	indf2,c
  9061                           
  9062                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9063  01BDDC  52E5               	movf	postdec1,f,c
  9064  01BDDE  0012               	return		;funcret
  9065  01BDE0                     __end_of_clear_hid_pflags:
  9066                           	opt callstack 0
  9067                           
  9068 ;; *************** function _check_help *****************
  9069 ;; Defined at:
  9070 ;;		line 40 in file "mconfig.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  flipper         1  [STACK] const _Bool 
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;  estatus         1    0        _Bool 
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  1  [STACK] _Bool 
  9077 ;; Registers used:
  9078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9079 ;; Tracked objects:
  9080 ;;		On entry : 3F/1
  9081 ;;		On exit  : 0/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9088 ;;Total ram usage:        0 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; Hardware stack levels required when called:   28
  9091 ;; This function calls:
  9092 ;;		_StartTimer
  9093 ;;		_TimerDone
  9094 ;;		_display_help
  9095 ;;		_display_info
  9096 ;;		_get_vterm_ptr
  9097 ;;		_help_button
  9098 ;;		_mode_lamp_bright
  9099 ;;		_mode_lamp_dim
  9100 ;;		_set_display_info
  9101 ;;		_set_temp_display_help
  9102 ;;		_set_vterm
  9103 ;;		_sprintf
  9104 ;;		_update_lcd
  9105 ;;		_vterm_dump
  9106 ;; This function is called by:
  9107 ;;		_main
  9108 ;; This function uses a reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text29
  9112  01824C                     __ptext29:
  9113                           	opt callstack 0
  9114  01824C                     _check_help:
  9115                           	opt callstack 2
  9116                           
  9117                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9118                           
  9119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9120                           ;incstack = 0
  9121  01824C  EC4A  F0DC         	call	_help_button	;wreg free
  9122  018250  5001               	movf	btemp^0,w,c
  9123  018252  B4D8               	btfsc	status,2,c
  9124  018254  D0D0               	goto	l12988
  9125  018256  ECBB  F0E0         	call	_display_info	;wreg free
  9126  01825A  0401               	decf	btemp^0,w,c
  9127  01825C  B4D8               	btfsc	status,2,c
  9128  01825E  D0CB               	goto	l12988
  9129                           
  9130                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9131  018260  0EDC               	movlw	220
  9132  018262  6EE6               	movwf	postinc1,c
  9133  018264  0E05               	movlw	5
  9134  018266  6EE6               	movwf	postinc1,c
  9135  018268  0E0B               	movlw	11
  9136  01826A  6EE6               	movwf	postinc1,c
  9137  01826C  EC8D  F0DB         	call	_StartTimer	;wreg free
  9138                           
  9139                           ;mconfig.c: 48:   if (V.debug)
  9140  018270  0101               	movlb	1	; () banked
  9141  018272  B3CB               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9142                           
  9143                           ; BSR set to: 1
  9144                           ;mconfig.c: 49:    vterm_dump();
  9145  018274  EC31  F0CB         	call	_vterm_dump	;wreg free
  9146                           
  9147                           ;mconfig.c: 51:   set_vterm(1);
  9148  018278  0E01               	movlw	1
  9149  01827A  6EE6               	movwf	postinc1,c
  9150  01827C  ECAA  F0DF         	call	_set_vterm	;wreg free
  9151                           
  9152                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9153  018280  ECBB  F0E0         	call	_display_info	;wreg free
  9154  018284  5001               	movf	btemp^0,w,c
  9155  018286  6EE6               	movwf	postinc1,c
  9156  018288  EC5B  F0E0         	call	_set_temp_display_help	;wreg free
  9157                           
  9158                           ; BSR set to: 1
  9159                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9160  01828C  0E01               	movlw	1
  9161  01828E  6EE6               	movwf	postinc1,c
  9162  018290  ECB9  F0DF         	call	_set_display_info	;wreg free
  9163                           
  9164                           ;mconfig.c: 54:   if (flipper) {
  9165                           ;stkvar	_flipper @ sp[(0)+-1]
  9166  018294  0EFF               	movlw	-1
  9167  018296  50E3               	movf	plusw1,w,c
  9168  018298  B4D8               	btfsc	status,2,c
  9169  01829A  D019               	goto	l12974
  9170                           
  9171                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9172  01829C  0EB3               	movlw	low STR_45
  9173  01829E  6EE6               	movwf	postinc1,c
  9174  0182A0  0EFF               	movlw	high STR_45
  9175  0182A2  6EE6               	movwf	postinc1,c
  9176  0182A4  0E5D               	movlw	low STR_47
  9177  0182A6  6EE6               	movwf	postinc1,c
  9178  0182A8  0EFF               	movlw	high STR_47
  9179  0182AA  6EE6               	movwf	postinc1,c
  9180  0182AC  0E01               	movlw	1
  9181  0182AE  6EE6               	movwf	postinc1,c
  9182  0182B0  0E00               	movlw	0
  9183  0182B2  6EE6               	movwf	postinc1,c
  9184  0182B4  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  9185  0182B8  0060  F007  FFE6   	movff	btemp,postinc1
  9186  0182BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9187  0182C4  0E06               	movlw	6
  9188  0182C6  6EE6               	movwf	postinc1,c
  9189  0182C8  EC85  F0CE         	call	_sprintf	;wreg free
  9190                           
  9191                           ;mconfig.c: 56:   } else {
  9192  0182CC  D018               	goto	l1671
  9193  0182CE                     l12974:
  9194                           
  9195                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9196  0182CE  0EC9               	movlw	low STR_46
  9197  0182D0  6EE6               	movwf	postinc1,c
  9198  0182D2  0EFF               	movlw	high STR_46
  9199  0182D4  6EE6               	movwf	postinc1,c
  9200  0182D6  0E5D               	movlw	low STR_47
  9201  0182D8  6EE6               	movwf	postinc1,c
  9202  0182DA  0EFF               	movlw	high STR_47
  9203  0182DC  6EE6               	movwf	postinc1,c
  9204  0182DE  0E01               	movlw	1
  9205  0182E0  6EE6               	movwf	postinc1,c
  9206  0182E2  0E00               	movlw	0
  9207  0182E4  6EE6               	movwf	postinc1,c
  9208  0182E6  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  9209  0182EA  0060  F007  FFE6   	movff	btemp,postinc1
  9210  0182F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9211  0182F6  0E06               	movlw	6
  9212  0182F8  6EE6               	movwf	postinc1,c
  9213  0182FA  EC85  F0CE         	call	_sprintf	;wreg free
  9214  0182FE                     l1671:
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9218  0182FE  0101               	movlb	1	; () banked
  9219  018300  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9220  018302  32E8               	rrcf	wreg,f,c
  9221  018304  32E8               	rrcf	wreg,f,c
  9222  018306  0B03               	andlw	3
  9223  018308  0D24               	mullw	36
  9224  01830A  0E12               	movlw	18
  9225  01830C  26F3               	addwf	243,f,c
  9226  01830E  0E00               	movlw	0
  9227  018310  22F4               	addwfc	244,f,c
  9228  018312  0EBB               	movlw	low _T
  9229  018314  6E0B               	movwf	(btemp+10)^0,c
  9230  018316  0EFA               	movlw	high _T
  9231  018318  6E0C               	movwf	(btemp+11)^0,c
  9232  01831A  50F3               	movf	243,w,c
  9233  01831C  260B               	addwf	(btemp+10)^0,f,c
  9234  01831E  50F4               	movf	244,w,c
  9235  018320  220C               	addwfc	(btemp+11)^0,f,c
  9236  018322  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9237  018328  0060  F033  FFE6   	movff	btemp+11,postinc1
  9238  01832E  0EBF               	movlw	low STR_49
  9239  018330  6EE6               	movwf	postinc1,c
  9240  018332  0EFF               	movlw	high STR_49
  9241  018334  6EE6               	movwf	postinc1,c
  9242  018336  0E01               	movlw	1
  9243  018338  6EE6               	movwf	postinc1,c
  9244  01833A  0E01               	movlw	1
  9245  01833C  6EE6               	movwf	postinc1,c
  9246  01833E  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  9247  018342  0060  F007  FFE6   	movff	btemp,postinc1
  9248  018348  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9249  01834E  0E06               	movlw	6
  9250  018350  6EE6               	movwf	postinc1,c
  9251  018352  EC85  F0CE         	call	_sprintf	;wreg free
  9252                           
  9253                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9254  018356  0101               	movlb	1	; () banked
  9255  018358  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9256  01835A  32E8               	rrcf	wreg,f,c
  9257  01835C  32E8               	rrcf	wreg,f,c
  9258  01835E  0B03               	andlw	3
  9259  018360  0D24               	mullw	36
  9260  018362  0EBB               	movlw	low _T
  9261  018364  6E0B               	movwf	(btemp+10)^0,c
  9262  018366  0EFA               	movlw	high _T
  9263  018368  6E0C               	movwf	(btemp+11)^0,c
  9264  01836A  50F3               	movf	243,w,c
  9265  01836C  260B               	addwf	(btemp+10)^0,f,c
  9266  01836E  50F4               	movf	244,w,c
  9267  018370  220C               	addwfc	(btemp+11)^0,f,c
  9268  018372  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9269  018378  0060  F033  FFE6   	movff	btemp+11,postinc1
  9270  01837E  0EBF               	movlw	low STR_49
  9271  018380  6EE6               	movwf	postinc1,c
  9272  018382  0EFF               	movlw	high STR_49
  9273  018384  6EE6               	movwf	postinc1,c
  9274  018386  0E01               	movlw	1
  9275  018388  6EE6               	movwf	postinc1,c
  9276  01838A  0E02               	movlw	2
  9277  01838C  6EE6               	movwf	postinc1,c
  9278  01838E  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  9279  018392  0060  F007  FFE6   	movff	btemp,postinc1
  9280  018398  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9281  01839E  0E06               	movlw	6
  9282  0183A0  6EE6               	movwf	postinc1,c
  9283  0183A2  EC85  F0CE         	call	_sprintf	;wreg free
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;mconfig.c: 61:   V.help_id++;
  9287  0183A6  EE20  F1CB         	lfsr	2,_V+155	;volatile
  9288  0183AA  38DF               	swapf	223,w,c
  9289  0183AC  6E0C               	movwf	(btemp+11)^0,c
  9290  0183AE  320C               	rrcf	(btemp+11)^0,f,c
  9291  0183B0  300C               	rrcf	(btemp+11)^0,w,c
  9292  0183B2  0B03               	andlw	3
  9293  0183B4  6E0C               	movwf	(btemp+11)^0,c
  9294  0183B6  2A0C               	incf	(btemp+11)^0,f,c
  9295  0183B8  3A0C               	swapf	(btemp+11)^0,f,c
  9296  0183BA  360C               	rlcf	(btemp+11)^0,f,c
  9297  0183BC  360C               	rlcf	(btemp+11)^0,f,c
  9298  0183BE  50DF               	movf	223,w,c
  9299  0183C0  180C               	xorwf	(btemp+11)^0,w,c
  9300  0183C2  0B3F               	andlw	-193
  9301  0183C4  180C               	xorwf	(btemp+11)^0,w,c
  9302  0183C6  6EDF               	movwf	223,c
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9306  0183C8  0EB8               	movlw	184
  9307  0183CA  6EE6               	movwf	postinc1,c
  9308  0183CC  0E0B               	movlw	11
  9309  0183CE  6EE6               	movwf	postinc1,c
  9310  0183D0  0E09               	movlw	9
  9311  0183D2  6EE6               	movwf	postinc1,c
  9312  0183D4  EC8D  F0DB         	call	_StartTimer	;wreg free
  9313                           
  9314                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9315  0183D8  0EB8               	movlw	184
  9316  0183DA  6EE6               	movwf	postinc1,c
  9317  0183DC  0E0B               	movlw	11
  9318  0183DE  6EE6               	movwf	postinc1,c
  9319  0183E0  0E07               	movlw	7
  9320  0183E2  6EE6               	movwf	postinc1,c
  9321  0183E4  EC8D  F0DB         	call	_StartTimer	;wreg free
  9322                           
  9323                           ;mconfig.c: 64:   mode_lamp_bright();
  9324  0183E8  EC79  F0E0         	call	_mode_lamp_bright	;wreg free
  9325                           
  9326                           ;mconfig.c: 65:   update_lcd(1);
  9327  0183EC  0E01               	movlw	1
  9328  0183EE  6EE6               	movwf	postinc1,c
  9329  0183F0  ECFD  F0CD         	call	_update_lcd	;wreg free
  9330                           
  9331                           ;mconfig.c: 67:  } else {
  9332  0183F4  D032               	goto	l1672
  9333  0183F6                     l12988:
  9334                           
  9335                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9336  0183F6  0E09               	movlw	9
  9337  0183F8  6EE6               	movwf	postinc1,c
  9338  0183FA  ECB3  F0DD         	call	_TimerDone	;wreg free
  9339  0183FE  5001               	movf	btemp^0,w,c
  9340  018400  B4D8               	btfsc	status,2,c
  9341  018402  D02B               	goto	l1672
  9342                           
  9343                           ;mconfig.c: 69:    set_vterm(0);
  9344  018404  0E00               	movlw	0
  9345  018406  6EE6               	movwf	postinc1,c
  9346  018408  ECAA  F0DF         	call	_set_vterm	;wreg free
  9347                           
  9348                           ;mconfig.c: 70:    V.help = 0;
  9349  01840C  0101               	movlb	1	; () banked
  9350  01840E  95CB               	bcf	(_V+155)& (0+255),2,b	;volatile
  9351                           
  9352                           ; BSR set to: 1
  9353                           ;mconfig.c: 71:    set_display_info(display_help());
  9354  018410  ECBF  F0E0         	call	_display_help	;wreg free
  9355  018414  5001               	movf	btemp^0,w,c
  9356  018416  6EE6               	movwf	postinc1,c
  9357  018418  ECB9  F0DF         	call	_set_display_info	;wreg free
  9358                           
  9359                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9360  01841C  0060  F717  FFE6   	movff	_V+149,postinc1
  9361  018422  0060  F71B  FFE6   	movff	_V+150,postinc1
  9362  018428  ECFF  F0DF         	call	_mode_lamp_dim	;wreg free
  9363                           
  9364                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9365  01842C  0E0B               	movlw	11
  9366  01842E  6EE6               	movwf	postinc1,c
  9367  018430  ECB3  F0DD         	call	_TimerDone	;wreg free
  9368  018434  5001               	movf	btemp^0,w,c
  9369  018436  B4D8               	btfsc	status,2,c
  9370  018438  D010               	goto	l1672
  9371                           
  9372                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9373  01843A  0101               	movlb	1	; () banked
  9374  01843C  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  9375  01843E  A4D8               	btfss	status,2,c
  9376  018440  D002               	goto	u12540
  9377  018442  0E01               	movlw	1
  9378  018444  D001               	goto	u12550
  9379  018446                     u12540:
  9380  018446  0E00               	movlw	0
  9381  018448                     u12550:
  9382  018448  6FDB               	movwf	(_V+171)& (0+255),b	;volatile
  9383                           
  9384                           ; BSR set to: 1
  9385                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9386  01844A  0EDC               	movlw	220
  9387  01844C  6EE6               	movwf	postinc1,c
  9388  01844E  0E05               	movlw	5
  9389  018450  6EE6               	movwf	postinc1,c
  9390  018452  0E0B               	movlw	11
  9391  018454  6EE6               	movwf	postinc1,c
  9392  018456  EC8D  F0DB         	call	_StartTimer	;wreg free
  9393  01845A                     l1672:
  9394                           
  9395                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9396  01845A  52E5               	movf	postdec1,f,c
  9397  01845C  0012               	return		;funcret
  9398  01845E                     __end_of_check_help:
  9399                           	opt callstack 0
  9400                           
  9401 ;; *************** function _vterm_dump *****************
  9402 ;; Defined at:
  9403 ;;		line 121 in file "mconfig.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;		None
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;		None
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  1  [STACK] void 
  9410 ;; Registers used:
  9411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9412 ;; Tracked objects:
  9413 ;;		On entry : 3F/1
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9421 ;;Total ram usage:        0 bytes
  9422 ;; Hardware stack levels used:    1
  9423 ;; Hardware stack levels required when called:   27
  9424 ;; This function calls:
  9425 ;;		_WaitMs
  9426 ;;		_eaDogM_WriteStringAtPos
  9427 ;;		_get_vterm_ptr
  9428 ;;		_sprintf
  9429 ;;		_wait_lcd_done
  9430 ;; This function is called by:
  9431 ;;		_check_help
  9432 ;; This function uses a reentrant model
  9433 ;;
  9434                           
  9435                           	psect	text30
  9436  019662                     __ptext30:
  9437                           	opt callstack 0
  9438  019662                     _vterm_dump:
  9439                           	opt callstack 2
  9440                           
  9441                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9442                           
  9443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9444                           ;incstack = 0
  9445  019662  0E01               	movlw	1
  9446  019664  6EE6               	movwf	postinc1,c
  9447  019666  0E00               	movlw	0
  9448  019668  6EE6               	movwf	postinc1,c
  9449  01966A  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  9450  01966E  0060  F007  FFE6   	movff	btemp,postinc1
  9451  019674  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9452  01967A  0E00               	movlw	0
  9453  01967C  6EE6               	movwf	postinc1,c
  9454  01967E  0E00               	movlw	0
  9455  019680  6EE6               	movwf	postinc1,c
  9456  019682  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  9457  019686  0060  F007  FFE6   	movff	btemp,postinc1
  9458  01968C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9459  019692  0EA4               	movlw	low STR_51
  9460  019694  6EE6               	movwf	postinc1,c
  9461  019696  0EFF               	movlw	high STR_51
  9462  019698  6EE6               	movwf	postinc1,c
  9463  01969A  0E31               	movlw	low (_V+1)
  9464  01969C  6EE6               	movwf	postinc1,c
  9465  01969E  0E01               	movlw	high (_V+1)
  9466  0196A0  6EE6               	movwf	postinc1,c
  9467  0196A2  0E08               	movlw	8
  9468  0196A4  6EE6               	movwf	postinc1,c
  9469  0196A6  EC85  F0CE         	call	_sprintf	;wreg free
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;mconfig.c: 124:  wait_lcd_done();
  9473  0196AA  ECD7  F0DF         	call	_wait_lcd_done	;wreg free
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9477  0196AE  0E31               	movlw	low (_V+1)
  9478  0196B0  6EE6               	movwf	postinc1,c
  9479  0196B2  0E01               	movlw	high (_V+1)
  9480  0196B4  6EE6               	movwf	postinc1,c
  9481  0196B6  0E00               	movlw	0
  9482  0196B8  6EE6               	movwf	postinc1,c
  9483  0196BA  0E00               	movlw	0
  9484  0196BC  6EE6               	movwf	postinc1,c
  9485  0196BE  ECF1  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9486                           
  9487                           ; BSR set to: 59
  9488                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9489  0196C2  0E01               	movlw	1
  9490  0196C4  6EE6               	movwf	postinc1,c
  9491  0196C6  0E01               	movlw	1
  9492  0196C8  6EE6               	movwf	postinc1,c
  9493  0196CA  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  9494  0196CE  0060  F007  FFE6   	movff	btemp,postinc1
  9495  0196D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9496  0196DA  0E00               	movlw	0
  9497  0196DC  6EE6               	movwf	postinc1,c
  9498  0196DE  0E01               	movlw	1
  9499  0196E0  6EE6               	movwf	postinc1,c
  9500  0196E2  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  9501  0196E6  0060  F007  FFE6   	movff	btemp,postinc1
  9502  0196EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9503  0196F2  0EA4               	movlw	low STR_51
  9504  0196F4  6EE6               	movwf	postinc1,c
  9505  0196F6  0EFF               	movlw	high STR_51
  9506  0196F8  6EE6               	movwf	postinc1,c
  9507  0196FA  0E31               	movlw	low (_V+1)
  9508  0196FC  6EE6               	movwf	postinc1,c
  9509  0196FE  0E01               	movlw	high (_V+1)
  9510  019700  6EE6               	movwf	postinc1,c
  9511  019702  0E08               	movlw	8
  9512  019704  6EE6               	movwf	postinc1,c
  9513  019706  EC85  F0CE         	call	_sprintf	;wreg free
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;mconfig.c: 127:  wait_lcd_done();
  9517  01970A  ECD7  F0DF         	call	_wait_lcd_done	;wreg free
  9518                           
  9519                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9520  01970E  0E31               	movlw	low (_V+1)
  9521  019710  6EE6               	movwf	postinc1,c
  9522  019712  0E01               	movlw	high (_V+1)
  9523  019714  6EE6               	movwf	postinc1,c
  9524  019716  0E00               	movlw	0
  9525  019718  6EE6               	movwf	postinc1,c
  9526  01971A  0E01               	movlw	1
  9527  01971C  6EE6               	movwf	postinc1,c
  9528  01971E  ECF1  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9529                           
  9530                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9531  019722  0E01               	movlw	1
  9532  019724  6EE6               	movwf	postinc1,c
  9533  019726  0E02               	movlw	2
  9534  019728  6EE6               	movwf	postinc1,c
  9535  01972A  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  9536  01972E  0060  F007  FFE6   	movff	btemp,postinc1
  9537  019734  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9538  01973A  0E00               	movlw	0
  9539  01973C  6EE6               	movwf	postinc1,c
  9540  01973E  0E02               	movlw	2
  9541  019740  6EE6               	movwf	postinc1,c
  9542  019742  EC31  F0DD         	call	_get_vterm_ptr	;wreg free
  9543  019746  0060  F007  FFE6   	movff	btemp,postinc1
  9544  01974C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9545  019752  0EA4               	movlw	low STR_51
  9546  019754  6EE6               	movwf	postinc1,c
  9547  019756  0EFF               	movlw	high STR_51
  9548  019758  6EE6               	movwf	postinc1,c
  9549  01975A  0E31               	movlw	low (_V+1)
  9550  01975C  6EE6               	movwf	postinc1,c
  9551  01975E  0E01               	movlw	high (_V+1)
  9552  019760  6EE6               	movwf	postinc1,c
  9553  019762  0E08               	movlw	8
  9554  019764  6EE6               	movwf	postinc1,c
  9555  019766  EC85  F0CE         	call	_sprintf	;wreg free
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;mconfig.c: 130:  wait_lcd_done();
  9559  01976A  ECD7  F0DF         	call	_wait_lcd_done	;wreg free
  9560                           
  9561                           ; BSR set to: 0
  9562                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9563  01976E  0E31               	movlw	low (_V+1)
  9564  019770  6EE6               	movwf	postinc1,c
  9565  019772  0E01               	movlw	high (_V+1)
  9566  019774  6EE6               	movwf	postinc1,c
  9567  019776  0E00               	movlw	0
  9568  019778  6EE6               	movwf	postinc1,c
  9569  01977A  0E02               	movlw	2
  9570  01977C  6EE6               	movwf	postinc1,c
  9571  01977E  ECF1  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9572                           
  9573                           ; BSR set to: 59
  9574                           ;mconfig.c: 132:  WaitMs(3000);
  9575  019782  0EB8               	movlw	184
  9576  019784  6EE6               	movwf	postinc1,c
  9577  019786  0E0B               	movlw	11
  9578  019788  6EE6               	movwf	postinc1,c
  9579  01978A  EC82  F0DC         	call	_WaitMs	;wreg free
  9580                           
  9581                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9582  01978E  0012               	return		;funcret
  9583  019790                     __end_of_vterm_dump:
  9584                           	opt callstack 0
  9585                           
  9586 ;; *************** function _sprintf *****************
  9587 ;; Defined at:
  9588 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  s               2  [STACK] PTR unsigned char 
  9591 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9592 ;;  fmt             2  [STACK] PTR const unsigned char 
  9593 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
  9594 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
  9595 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
  9596 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
  9597 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
  9598 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
  9599 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
  9600 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
  9601 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
  9602 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
  9603 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9604 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
  9605 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
  9606 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
  9607 ;;		 -> STR_2(21), STR_1(21), 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  f               6  [STACK] struct _IO_FILE
  9610 ;;  ap              2  [STACK] PTR void [1]
  9611 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9612 ;;  ret             2    0        int 
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  2  [STACK] int 
  9615 ;; Registers used:
  9616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 3F/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9626 ;;Total ram usage:        0 bytes
  9627 ;; Hardware stack levels used:    1
  9628 ;; Hardware stack levels required when called:   23
  9629 ;; This function calls:
  9630 ;;		_vfprintf
  9631 ;; This function is called by:
  9632 ;;		_main
  9633 ;;		_check_help
  9634 ;;		_vterm_dump
  9635 ;;		_calc_bsoc
  9636 ;; This function uses a reentrant model
  9637 ;;
  9638                           
  9639                           	psect	text31
  9640  019D0A                     __ptext31:
  9641                           	opt callstack 0
  9642  019D0A                     _sprintf:
  9643                           	opt callstack 0
  9644                           
  9645                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9646  019D0A  0E08               	movlw	8
  9647  019D0C  26E1               	addwf	fsr1l,f,c
  9648  019D0E  0E00               	movlw	0
  9649  019D10  22E2               	addwfc	fsr1h,f,c
  9650                           
  9651                           ;incstack = 0
  9652 ;; hardware stack exceeded
  9653  019D12  0EFE               	movlw	254
  9654  019D14  6E0B               	movwf	(btemp+10)^0,c
  9655  019D16  0EFF               	movlw	255
  9656  019D18  6E0C               	movwf	(btemp+11)^0,c
  9657                           
  9658                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9659  019D1A  0EF5               	movlw	245
  9660  019D1C  24E1               	addwf	fsr1l,w,c
  9661  019D1E  6E09               	movwf	(btemp+8)^0,c
  9662  019D20  0EFF               	movlw	255
  9663  019D22  20E2               	addwfc	fsr1h,w,c
  9664  019D24  6E0A               	movwf	(btemp+9)^0,c
  9665  019D26  500B               	movf	(btemp+10)^0,w,c
  9666  019D28  2609               	addwf	(btemp+8)^0,f,c
  9667  019D2A  500C               	movf	(btemp+11)^0,w,c
  9668  019D2C  220A               	addwfc	(btemp+9)^0,f,c
  9669                           
  9670                           ;stkvar	_ap @ sp[(-8)+6]
  9671  019D2E  0EFF               	movlw	-1
  9672  019D30  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9673  019D36  0EFE               	movlw	-2
  9674  019D38  0060  F027  FFE3   	movff	btemp+8,plusw1
  9675                           
  9676                           ;stkvar	_s @ sp[(-8)+-3]
  9677  019D3E  0EF5               	movlw	-11
  9678  019D40  006F FF8C  F00B    	movff	plusw1,btemp+10
  9679  019D46  0EF6               	movlw	-10
  9680  019D48  006F FF8C  F00C    	movff	plusw1,btemp+11
  9681                           
  9682                           ;stkvar	_f @ sp[(-8)+0]
  9683  019D4E  0EF9               	movlw	-7
  9684  019D50  0060  F033  FFE3   	movff	btemp+11,plusw1
  9685  019D56  0EF8               	movlw	-8
  9686  019D58  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9687                           
  9688                           ;stkvar	_f @ sp[(-8)+0]
  9689  019D5E  0EFA               	movlw	250
  9690  019D60  24E1               	addwf	fsr1l,w,c
  9691  019D62  6ED9               	movwf	fsr2l,c
  9692  019D64  0EFF               	movlw	255
  9693  019D66  20E2               	addwfc	fsr1h,w,c
  9694  019D68  6EDA               	movwf	fsr2h,c
  9695  019D6A  0E00               	movlw	0
  9696  019D6C  6EDE               	movwf	postinc2,c
  9697  019D6E  0E00               	movlw	0
  9698  019D70  6EDD               	movwf	postdec2,c
  9699                           
  9700                           ;stkvar	_f @ sp[(-8)+0]
  9701  019D72  0EFC               	movlw	252
  9702  019D74  24E1               	addwf	fsr1l,w,c
  9703  019D76  6ED9               	movwf	fsr2l,c
  9704  019D78  0EFF               	movlw	255
  9705  019D7A  20E2               	addwfc	fsr1h,w,c
  9706  019D7C  6EDA               	movwf	fsr2h,c
  9707  019D7E  0E00               	movlw	0
  9708  019D80  6EDE               	movwf	postinc2,c
  9709  019D82  0E00               	movlw	0
  9710  019D84  6EDD               	movwf	postdec2,c
  9711                           
  9712                           ;stkvar	_ap @ sp[(-8)+6]
  9713  019D86  0EFE               	movlw	254
  9714  019D88  24E1               	addwf	fsr1l,w,c
  9715  019D8A  6E01               	movwf	btemp^0,c
  9716  019D8C  0EFF               	movlw	255
  9717  019D8E  20E2               	addwfc	fsr1h,w,c
  9718  019D90  6E02               	movwf	(btemp+1)^0,c
  9719  019D92  0060  F007  FFE6   	movff	btemp,postinc1
  9720  019D98  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9721                           
  9722                           ;stkvar	_fmt @ sp[(-10)+-5]
  9723  019D9E  0EF1               	movlw	-15
  9724  019DA0  006F FF8F FFE6     	movff	plusw1,postinc1
  9725  019DA6  006F FF8F FFE6     	movff	plusw1,postinc1
  9726                           
  9727                           ;stkvar	_f @ sp[(-12)+0]
  9728  019DAC  0EF4               	movlw	244
  9729  019DAE  24E1               	addwf	fsr1l,w,c
  9730  019DB0  6E01               	movwf	btemp^0,c
  9731  019DB2  0EFF               	movlw	255
  9732  019DB4  20E2               	addwfc	fsr1h,w,c
  9733  019DB6  6E02               	movwf	(btemp+1)^0,c
  9734  019DB8  0060  F007  FFE6   	movff	btemp,postinc1
  9735  019DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9736  019DC4  EC46  F0D3         	call	_vfprintf	;wreg free
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;stkvar	_f @ sp[(-8)+0]
  9740  019DC8  0EFA               	movlw	250
  9741  019DCA  24E1               	addwf	fsr1l,w,c
  9742  019DCC  6ED9               	movwf	fsr2l,c
  9743  019DCE  0EFF               	movlw	255
  9744  019DD0  20E2               	addwfc	fsr1h,w,c
  9745  019DD2  6EDA               	movwf	fsr2h,c
  9746  019DD4  006F FF78  F00B    	movff	postinc2,btemp+10
  9747  019DDA  006F FF74  F00C    	movff	postdec2,btemp+11
  9748                           
  9749                           ;stkvar	_s @ sp[(-8)+-3]
  9750  019DE0  0EF5               	movlw	-11
  9751  019DE2  006F FF8C  F009    	movff	plusw1,btemp+8
  9752  019DE8  0EF6               	movlw	-10
  9753  019DEA  006F FF8C  F00A    	movff	plusw1,btemp+9
  9754  019DF0  500B               	movf	(btemp+10)^0,w,c
  9755  019DF2  2409               	addwf	(btemp+8)^0,w,c
  9756  019DF4  6ED9               	movwf	fsr2l,c
  9757  019DF6  500C               	movf	(btemp+11)^0,w,c
  9758  019DF8  200A               	addwfc	(btemp+9)^0,w,c
  9759  019DFA  6EDA               	movwf	fsr2h,c
  9760  019DFC  0E00               	movlw	0
  9761  019DFE  6EDF               	movwf	indf2,c
  9762                           
  9763                           ; BSR set to: 0
  9764                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
  9765  019E00  0EF8               	movlw	248
  9766  019E02  26E1               	addwf	fsr1l,f,c
  9767  019E04  0EFF               	movlw	255
  9768  019E06  22E2               	addwfc	fsr1h,f,c
  9769  019E08  52E5               	movf	postdec1,f,c
  9770  019E0A  50E7               	movf	indf1,w,c
  9771  019E0C  5EE1               	subwf	fsr1l,f,c
  9772  019E0E  0E00               	movlw	0
  9773  019E10  5AE2               	subwfb	fsr1h,f,c
  9774  019E12  0012               	return		;funcret
  9775  019E14                     __end_of_sprintf:
  9776                           	opt callstack 0
  9777                           
  9778 ;; *************** function _get_vterm_ptr *****************
  9779 ;; Defined at:
  9780 ;;		line 116 in file "mconfig.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  line            1  [STACK] const unsigned char 
  9783 ;;  vterm           1  [STACK] const unsigned char 
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;		None
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  2  [STACK] PTR unsigned char 
  9788 ;; Registers used:
  9789 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9799 ;;Total ram usage:        0 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:   15
  9802 ;; This function calls:
  9803 ;;		Nothing
  9804 ;; This function is called by:
  9805 ;;		_main
  9806 ;;		_check_help
  9807 ;;		_vterm_dump
  9808 ;; This function uses a reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text32
  9812  01BA62                     __ptext32:
  9813                           	opt callstack 0
  9814  01BA62                     _get_vterm_ptr:
  9815                           	opt callstack 15
  9816                           
  9817                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9818                           ;stkvar	_vterm @ sp[(0)+-2]
  9819                           
  9820                           ; BSR set to: 0
  9821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9822                           ;incstack = 0
  9823  01BA62  0EFE               	movlw	-2
  9824  01BA64  50E3               	movf	plusw1,w,c
  9825  01BA66  0B03               	andlw	3
  9826  01BA68  0D78               	mullw	120
  9827  01BA6A  0E2A               	movlw	low _D
  9828  01BA6C  6E01               	movwf	btemp^0,c
  9829  01BA6E  0E08               	movlw	high _D
  9830  01BA70  6E02               	movwf	(btemp+1)^0,c
  9831  01BA72  50F3               	movf	243,w,c
  9832  01BA74  2601               	addwf	btemp^0,f,c
  9833  01BA76  50F4               	movf	244,w,c
  9834  01BA78  2202               	addwfc	(btemp+1)^0,f,c
  9835                           
  9836                           ;stkvar	_line @ sp[(0)+-1]
  9837  01BA7A  0EFF               	movlw	-1
  9838  01BA7C  50E3               	movf	plusw1,w,c
  9839  01BA7E  0B03               	andlw	3
  9840  01BA80  0D28               	mullw	40
  9841  01BA82  50F3               	movf	243,w,c
  9842  01BA84  2601               	addwf	btemp^0,f,c
  9843  01BA86  50F4               	movf	244,w,c
  9844  01BA88  2202               	addwfc	(btemp+1)^0,f,c
  9845                           
  9846                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9847  01BA8A  52E5               	movf	postdec1,f,c
  9848  01BA8C  52E5               	movf	postdec1,f,c
  9849  01BA8E  0012               	return		;funcret
  9850  01BA90                     __end_of_get_vterm_ptr:
  9851                           	opt callstack 0
  9852                           
  9853 ;; *************** function _WaitMs *****************
  9854 ;; Defined at:
  9855 ;;		line 32 in file "timers.c"
  9856 ;; Parameters:    Size  Location     Type
  9857 ;;  numMilliseco    2  [STACK] const unsigned short 
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;		None
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  1  [STACK] void 
  9862 ;; Registers used:
  9863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/1
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9873 ;;Total ram usage:        0 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:   16
  9876 ;; This function calls:
  9877 ;;		_StartTimer
  9878 ;;		_TimerDone
  9879 ;; This function is called by:
  9880 ;;		_main
  9881 ;;		_vterm_dump
  9882 ;; This function uses a reentrant model
  9883 ;;
  9884                           
  9885                           	psect	text33
  9886  01B904                     __ptext33:
  9887                           	opt callstack 0
  9888  01B904                     _WaitMs:
  9889                           	opt callstack 12
  9890                           
  9891                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9892                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9893                           
  9894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9895                           ;incstack = 0
  9896  01B904  0EFE               	movlw	-2
  9897  01B906  006F FF8F FFE6     	movff	plusw1,postinc1
  9898  01B90C  006F FF8F FFE6     	movff	plusw1,postinc1
  9899  01B912  0E00               	movlw	0
  9900  01B914  6EE6               	movwf	postinc1,c
  9901  01B916  EC8D  F0DB         	call	_StartTimer	;wreg free
  9902                           
  9903                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9904  01B91A  D005               	goto	l9864
  9905  01B91C                     l1603:
  9906                           
  9907                           ;timers.c: 36:   __nop();
  9908  01B91C  F000               	nop	
  9909                           
  9910                           ;timers.c: 37:   __nop();
  9911  01B91E  F000               	nop	
  9912                           
  9913                           ;timers.c: 38:   __nop();
  9914  01B920  F000               	nop	
  9915                           
  9916                           ;timers.c: 39:   __nop();
  9917  01B922  F000               	nop	
  9918  01B924  0004               	clrwdt		;# 
  9919  01B926                     l9864:
  9920                           
  9921                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9922  01B926  0E00               	movlw	0
  9923  01B928  6EE6               	movwf	postinc1,c
  9924  01B92A  ECB3  F0DD         	call	_TimerDone	;wreg free
  9925  01B92E  5001               	movf	btemp^0,w,c
  9926  01B930  B4D8               	btfsc	status,2,c
  9927  01B932  D7F4               	goto	l1603
  9928                           
  9929                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9930  01B934  52E5               	movf	postdec1,f,c
  9931  01B936  52E5               	movf	postdec1,f,c
  9932  01B938  0012               	return		;funcret
  9933  01B93A                     __end_of_WaitMs:
  9934                           	opt callstack 0
  9935                           
  9936 ;; *************** function _update_lcd *****************
  9937 ;; Defined at:
  9938 ;;		line 85 in file "mconfig.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  vterm           1  [STACK] unsigned char 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;		None
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1  [STACK] unsigned char 
  9945 ;; Registers used:
  9946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9956 ;;Total ram usage:        0 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:   27
  9959 ;; This function calls:
  9960 ;;		_eaDogM_WriteStringAtPos
  9961 ;;		_wait_lcd_done
  9962 ;; This function is called by:
  9963 ;;		_main
  9964 ;;		_check_help
  9965 ;; This function uses a reentrant model
  9966 ;;
  9967                           
  9968                           	psect	text34
  9969  019BFA                     __ptext34:
  9970                           	opt callstack 0
  9971  019BFA                     _update_lcd:
  9972                           	opt callstack 3
  9973                           
  9974                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9975                           ;stkvar	_vterm @ sp[(0)+-1]
  9976                           
  9977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9978                           ;incstack = 0
  9979  019BFA  0EFF               	movlw	-1
  9980  019BFC  006F FF8C  F001    	movff	plusw1,btemp
  9981  019C02  0E03               	movlw	3
  9982  019C04  1601               	andwf	btemp^0,f,c
  9983  019C06  0EFF               	movlw	-1
  9984  019C08  0060  F007  FFE3   	movff	btemp,plusw1
  9985                           
  9986                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9987  019C0E  EE22  F20A         	lfsr	2,_D+480
  9988  019C12  A0DF               	btfss	indf2,0,c
  9989  019C14  D004               	goto	l12770
  9990                           
  9991                           ;stkvar	_vterm @ sp[(0)+-1]
  9992  019C16  0EFF               	movlw	-1
  9993  019C18  50E3               	movf	plusw1,w,c
  9994  019C1A  B4D8               	btfsc	status,2,c
  9995  019C1C  D074               	goto	l1679
  9996  019C1E                     l12770:
  9997                           
  9998                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
  9999                           ;stkvar	_vterm @ sp[(0)+-1]
 10000  019C1E  0EFF               	movlw	-1
 10001  019C20  50E3               	movf	plusw1,w,c
 10002  019C22  0D78               	mullw	120
 10003  019C24  0E3E               	movlw	low (_D+20)
 10004  019C26  24F3               	addwf	243,w,c
 10005  019C28  6ED9               	movwf	fsr2l,c
 10006  019C2A  0E08               	movlw	high (_D+20)
 10007  019C2C  20F4               	addwfc	prodh,w,c
 10008  019C2E  6EDA               	movwf	fsr2h,c
 10009  019C30  0E00               	movlw	0
 10010  019C32  6EDF               	movwf	indf2,c
 10011                           
 10012                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 10013                           ;stkvar	_vterm @ sp[(0)+-1]
 10014  019C34  0EFF               	movlw	-1
 10015  019C36  50E3               	movf	plusw1,w,c
 10016  019C38  0D78               	mullw	120
 10017  019C3A  0E66               	movlw	low (_D+60)
 10018  019C3C  24F3               	addwf	243,w,c
 10019  019C3E  6ED9               	movwf	fsr2l,c
 10020  019C40  0E08               	movlw	high (_D+60)
 10021  019C42  20F4               	addwfc	prodh,w,c
 10022  019C44  6EDA               	movwf	fsr2h,c
 10023  019C46  0E00               	movlw	0
 10024  019C48  6EDF               	movwf	indf2,c
 10025                           
 10026                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 10027                           ;stkvar	_vterm @ sp[(0)+-1]
 10028  019C4A  0EFF               	movlw	-1
 10029  019C4C  50E3               	movf	plusw1,w,c
 10030  019C4E  0D78               	mullw	120
 10031  019C50  0E8E               	movlw	low (_D+100)
 10032  019C52  24F3               	addwf	243,w,c
 10033  019C54  6ED9               	movwf	fsr2l,c
 10034  019C56  0E08               	movlw	high (_D+100)
 10035  019C58  20F4               	addwfc	prodh,w,c
 10036  019C5A  6EDA               	movwf	fsr2h,c
 10037  019C5C  0E00               	movlw	0
 10038  019C5E  6EDF               	movwf	indf2,c
 10039                           
 10040                           ;mconfig.c: 95:  wait_lcd_done();
 10041  019C60  ECD7  F0DF         	call	_wait_lcd_done	;wreg free
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10045                           ;stkvar	_vterm @ sp[(0)+-1]
 10046  019C64  0EFF               	movlw	-1
 10047  019C66  50E3               	movf	plusw1,w,c
 10048  019C68  0D78               	mullw	120
 10049  019C6A  0E2A               	movlw	low _D
 10050  019C6C  6E0B               	movwf	(btemp+10)^0,c
 10051  019C6E  0E08               	movlw	high _D
 10052  019C70  6E0C               	movwf	(btemp+11)^0,c
 10053  019C72  50F3               	movf	243,w,c
 10054  019C74  260B               	addwf	(btemp+10)^0,f,c
 10055  019C76  50F4               	movf	244,w,c
 10056  019C78  220C               	addwfc	(btemp+11)^0,f,c
 10057  019C7A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10058  019C80  0060  F033  FFE6   	movff	btemp+11,postinc1
 10059  019C86  0E00               	movlw	0
 10060  019C88  6EE6               	movwf	postinc1,c
 10061  019C8A  0E00               	movlw	0
 10062  019C8C  6EE6               	movwf	postinc1,c
 10063  019C8E  ECF1  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10064                           
 10065                           ; BSR set to: 59
 10066                           ;mconfig.c: 97:  wait_lcd_done();
 10067  019C92  ECD7  F0DF         	call	_wait_lcd_done	;wreg free
 10068                           
 10069                           ; BSR set to: 0
 10070                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10071                           ;stkvar	_vterm @ sp[(0)+-1]
 10072  019C96  0EFF               	movlw	-1
 10073  019C98  50E3               	movf	plusw1,w,c
 10074  019C9A  0D78               	mullw	120
 10075  019C9C  0E2A               	movlw	low _D
 10076  019C9E  6E0B               	movwf	(btemp+10)^0,c
 10077  019CA0  0E08               	movlw	high _D
 10078  019CA2  6E0C               	movwf	(btemp+11)^0,c
 10079  019CA4  0E28               	movlw	40
 10080  019CA6  260B               	addwf	(btemp+10)^0,f,c
 10081  019CA8  0E00               	movlw	0
 10082  019CAA  220C               	addwfc	(btemp+11)^0,f,c
 10083  019CAC  50F3               	movf	243,w,c
 10084  019CAE  260B               	addwf	(btemp+10)^0,f,c
 10085  019CB0  50F4               	movf	244,w,c
 10086  019CB2  220C               	addwfc	(btemp+11)^0,f,c
 10087  019CB4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10088  019CBA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10089  019CC0  0E00               	movlw	0
 10090  019CC2  6EE6               	movwf	postinc1,c
 10091  019CC4  0E01               	movlw	1
 10092  019CC6  6EE6               	movwf	postinc1,c
 10093  019CC8  ECF1  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10094                           
 10095                           ; BSR set to: 59
 10096                           ;mconfig.c: 99:  wait_lcd_done();
 10097  019CCC  ECD7  F0DF         	call	_wait_lcd_done	;wreg free
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10101                           ;stkvar	_vterm @ sp[(0)+-1]
 10102  019CD0  0EFF               	movlw	-1
 10103  019CD2  50E3               	movf	plusw1,w,c
 10104  019CD4  0D78               	mullw	120
 10105  019CD6  0E2A               	movlw	low _D
 10106  019CD8  6E0B               	movwf	(btemp+10)^0,c
 10107  019CDA  0E08               	movlw	high _D
 10108  019CDC  6E0C               	movwf	(btemp+11)^0,c
 10109  019CDE  0E50               	movlw	80
 10110  019CE0  260B               	addwf	(btemp+10)^0,f,c
 10111  019CE2  0E00               	movlw	0
 10112  019CE4  220C               	addwfc	(btemp+11)^0,f,c
 10113  019CE6  50F3               	movf	243,w,c
 10114  019CE8  260B               	addwf	(btemp+10)^0,f,c
 10115  019CEA  50F4               	movf	244,w,c
 10116  019CEC  220C               	addwfc	(btemp+11)^0,f,c
 10117  019CEE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10118  019CF4  0060  F033  FFE6   	movff	btemp+11,postinc1
 10119  019CFA  0E00               	movlw	0
 10120  019CFC  6EE6               	movwf	postinc1,c
 10121  019CFE  0E02               	movlw	2
 10122  019D00  6EE6               	movwf	postinc1,c
 10123  019D02  ECF1  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10124  019D06                     l1679:
 10125                           
 10126                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10127  019D06  52E5               	movf	postdec1,f,c
 10128  019D08  0012               	return		;funcret
 10129  019D0A                     __end_of_update_lcd:
 10130                           	opt callstack 0
 10131                           
 10132 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10133 ;; Defined at:
 10134 ;;		line 195 in file "eadog.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;  r               1  [STACK] const unsigned char 
 10137 ;;  c               1  [STACK] const unsigned char 
 10138 ;;  strPtr          2  [STACK] PTR unsigned char 
 10139 ;;		 -> D.lcd(480), D(482), V(191), 
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  row             1  [STACK] unsigned char 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1  [STACK] void 
 10144 ;; Registers used:
 10145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10146 ;; Tracked objects:
 10147 ;;		On entry : 3F/0
 10148 ;;		On exit  : 3F/3B
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10155 ;;Total ram usage:        0 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:   26
 10158 ;; This function calls:
 10159 ;;		_eaDogM_WriteString
 10160 ;;		_send_lcd_cmd_dma
 10161 ;;		_send_lcd_data_dma
 10162 ;;		_wait_lcd_done
 10163 ;;		_wdtdelay
 10164 ;; This function is called by:
 10165 ;;		_update_lcd
 10166 ;;		_vterm_dump
 10167 ;; This function uses a reentrant model
 10168 ;;
 10169                           
 10170                           	psect	text35
 10171  01A7E2                     __ptext35:
 10172                           	opt callstack 0
 10173  01A7E2                     _eaDogM_WriteStringAtPos:
 10174                           	opt callstack 0
 10175                           
 10176                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10177  01A7E2  52E6               	movf	postinc1,f,c
 10178                           
 10179                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10180                           
 10181                           ;incstack = 0
 10182  01A7E4  D014               	goto	l12746
 10183  01A7E6                     l12734:
 10184                           
 10185                           ;eadog.c: 201:   row = 0x40;
 10186                           ;stkvar	_row @ sp[(-1)+0]
 10187  01A7E6  0EFF               	movlw	-1
 10188  01A7E8  6AE3               	clrf	plusw1,c
 10189  01A7EA  8CE3               	bsf	plusw1,6,c
 10190                           
 10191                           ;eadog.c: 202:   break;
 10192  01A7EC  D026               	goto	l12748
 10193  01A7EE                     l12736:
 10194                           
 10195                           ;eadog.c: 204:   row = 0x14;
 10196                           ;stkvar	_row @ sp[(-1)+0]
 10197  01A7EE  0EFF               	movlw	-1
 10198  01A7F0  6AE3               	clrf	plusw1,c
 10199  01A7F2  84E3               	bsf	plusw1,2,c
 10200  01A7F4  88E3               	bsf	plusw1,4,c	;indir
 10201                           
 10202                           ;eadog.c: 205:   break;
 10203  01A7F6  D021               	goto	l12748
 10204  01A7F8                     l12738:
 10205                           
 10206                           ;eadog.c: 207:   row = 0x54;
 10207  01A7F8  0E54               	movlw	84
 10208  01A7FA  6E0C               	movwf	(btemp+11)^0,c
 10209                           
 10210                           ;stkvar	_row @ sp[(-1)+0]
 10211  01A7FC  0EFF               	movlw	-1
 10212  01A7FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10213                           
 10214                           ;eadog.c: 208:   break;
 10215  01A804  D01A               	goto	l12748
 10216  01A806                     l12740:
 10217                           
 10218                           ;eadog.c: 210:   row = 0x1;
 10219                           ;stkvar	_row @ sp[(-1)+0]
 10220  01A806  0EFF               	movlw	-1
 10221  01A808  6AE3               	clrf	plusw1,c
 10222  01A80A  2AE3               	incf	plusw1,f,c
 10223                           
 10224                           ;eadog.c: 211:   break;
 10225  01A80C  D016               	goto	l12748
 10226  01A80E                     l12746:
 10227                           
 10228                           ;stkvar	_r @ sp[(-1)+-1]
 10229  01A80E  0EFE               	movlw	-2
 10230  01A810  50E3               	movf	plusw1,w,c
 10231  01A812  6E0B               	movwf	(btemp+10)^0,c
 10232  01A814  6A0C               	clrf	(btemp+11)^0,c
 10233                           
 10234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10235                           ; Switch size 1, requested type "simple"
 10236                           ; Number of cases is 1, Range of values is 0 to 0
 10237                           ; switch strategies available:
 10238                           ; Name         Instructions Cycles
 10239                           ; simple_byte            4     3 (average)
 10240                           ;	Chosen strategy is simple_byte
 10241  01A816  500C               	movf	(btemp+11)^0,w,c
 10242  01A818  0A00               	xorlw	0	; case 0
 10243  01A81A  A4D8               	btfss	status,2,c
 10244  01A81C  D7E4               	goto	l12734
 10245                           
 10246                           ; Switch size 1, requested type "simple"
 10247                           ; Number of cases is 4, Range of values is 0 to 3
 10248                           ; switch strategies available:
 10249                           ; Name         Instructions Cycles
 10250                           ; simple_byte           13     7 (average)
 10251                           ;	Chosen strategy is simple_byte
 10252  01A81E  500B               	movf	(btemp+10)^0,w,c
 10253  01A820  0A00               	xorlw	0	; case 0
 10254  01A822  B4D8               	btfsc	status,2,c
 10255  01A824  D7E0               	goto	l12734
 10256  01A826  0A01               	xorlw	1	; case 1
 10257  01A828  B4D8               	btfsc	status,2,c
 10258  01A82A  D7E1               	goto	l12736
 10259  01A82C  0A03               	xorlw	3	; case 2
 10260  01A82E  B4D8               	btfsc	status,2,c
 10261  01A830  D7E3               	goto	l12738
 10262  01A832  0A01               	xorlw	1	; case 3
 10263  01A834  B4D8               	btfsc	status,2,c
 10264  01A836  D7E7               	goto	l12740
 10265  01A838  D7D6               	goto	l12734
 10266  01A83A                     l12748:
 10267                           
 10268                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 10269  01A83A  0E45               	movlw	69
 10270  01A83C  6EE6               	movwf	postinc1,c
 10271  01A83E  EC9B  F0DF         	call	_send_lcd_cmd_dma	;wreg free
 10272                           
 10273                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 10274                           ;stkvar	_c @ sp[(-1)+-2]
 10275  01A842  0EFD               	movlw	-3
 10276  01A844  006F FF8C  F00C    	movff	plusw1,btemp+11
 10277                           
 10278                           ;stkvar	_row @ sp[(-1)+0]
 10279  01A84A  0EFF               	movlw	-1
 10280  01A84C  50E3               	movf	plusw1,w,c
 10281  01A84E  240C               	addwf	(btemp+11)^0,w,c
 10282  01A850  6EE6               	movwf	postinc1,c
 10283  01A852  ECEA  F0D9         	call	_send_lcd_data_dma	;wreg free
 10284                           
 10285                           ; BSR set to: 59
 10286                           ;eadog.c: 218:  wait_lcd_done();
 10287  01A856  ECD7  F0DF         	call	_wait_lcd_done	;wreg free
 10288                           
 10289                           ; BSR set to: 0
 10290                           ;eadog.c: 219:  wdtdelay(8);
 10291  01A85A  0E08               	movlw	8
 10292  01A85C  6EE6               	movwf	postinc1,c
 10293  01A85E  0E00               	movlw	0
 10294  01A860  6EE6               	movwf	postinc1,c
 10295  01A862  0E00               	movlw	0
 10296  01A864  6EE6               	movwf	postinc1,c
 10297  01A866  0E00               	movlw	0
 10298  01A868  6EE6               	movwf	postinc1,c
 10299  01A86A  EC17  F0D9         	call	_wdtdelay	;wreg free
 10300                           
 10301                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 10302                           ;stkvar	_strPtr @ sp[(-1)+-4]
 10303  01A86E  0EFB               	movlw	-5
 10304  01A870  006F FF8F FFE6     	movff	plusw1,postinc1
 10305  01A876  006F FF8F FFE6     	movff	plusw1,postinc1
 10306  01A87C  EC45  F0D4         	call	_eaDogM_WriteString	;wreg free
 10307                           
 10308                           ; BSR set to: 59
 10309                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 10310  01A880  0EFB               	movlw	251
 10311  01A882  26E1               	addwf	fsr1l,f,c
 10312  01A884  0EFF               	movlw	255
 10313  01A886  22E2               	addwfc	fsr1h,f,c
 10314  01A888  0012               	return		;funcret
 10315  01A88A                     __end_of_eaDogM_WriteStringAtPos:
 10316                           	opt callstack 0
 10317                           
 10318 ;; *************** function _send_lcd_cmd_dma *****************
 10319 ;; Defined at:
 10320 ;;		line 171 in file "eadog.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;  strPtr          1  [STACK] unsigned char 
 10323 ;; Auto vars:     Size  Location     Type
 10324 ;;		None
 10325 ;; Return value:  Size  Location     Type
 10326 ;;                  1  [STACK] void 
 10327 ;; Registers used:
 10328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/3D
 10331 ;;		On exit  : 3F/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10338 ;;Total ram usage:        0 bytes
 10339 ;; Hardware stack levels used:    1
 10340 ;; Hardware stack levels required when called:   25
 10341 ;; This function calls:
 10342 ;;		_send_lcd_data_dma
 10343 ;;		_wait_lcd_done
 10344 ;; This function is called by:
 10345 ;;		_eaDogM_WriteStringAtPos
 10346 ;;		_eaDogM_WriteCommand
 10347 ;; This function uses a reentrant model
 10348 ;;
 10349                           
 10350                           	psect	text36
 10351  01BF36                     __ptext36:
 10352                           	opt callstack 0
 10353  01BF36                     _send_lcd_cmd_dma:
 10354                           	opt callstack 3
 10355                           
 10356                           ;eadog.c: 171: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:  send
      +                          _lcd_data_dma(0xFE);
 10357                           
 10358                           ; BSR set to: 59
 10359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10360                           ;incstack = 0
 10361  01BF36  0EFE               	movlw	254
 10362  01BF38  6EE6               	movwf	postinc1,c
 10363  01BF3A  ECEA  F0D9         	call	_send_lcd_data_dma	;wreg free
 10364                           
 10365                           ; BSR set to: 59
 10366                           ;eadog.c: 174:  wait_lcd_done();
 10367  01BF3E  ECD7  F0DF         	call	_wait_lcd_done	;wreg free
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 10371                           ;stkvar	_strPtr @ sp[(0)+-1]
 10372  01BF42  0EFF               	movlw	-1
 10373  01BF44  50E3               	movf	plusw1,w,c
 10374  01BF46  6EE6               	movwf	postinc1,c
 10375  01BF48  ECEA  F0D9         	call	_send_lcd_data_dma	;wreg free
 10376                           
 10377                           ;eadog.c: 176:  wait_lcd_done();
 10378  01BF4C  ECD7  F0DF         	call	_wait_lcd_done	;wreg free
 10379                           
 10380                           ; BSR set to: 0
 10381                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10382  01BF50  52E5               	movf	postdec1,f,c
 10383  01BF52  0012               	return		;funcret
 10384  01BF54                     __end_of_send_lcd_cmd_dma:
 10385                           	opt callstack 0
 10386                           
 10387 ;; *************** function _wait_lcd_done *****************
 10388 ;; Defined at:
 10389 ;;		line 444 in file "eadog.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;		None
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;		None
 10394 ;; Return value:  Size  Location     Type
 10395 ;;                  1  [STACK] void 
 10396 ;; Registers used:
 10397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10398 ;; Tracked objects:
 10399 ;;		On entry : 0/0
 10400 ;;		On exit  : 3F/0
 10401 ;;		Unchanged: 0/0
 10402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10407 ;;Total ram usage:        0 bytes
 10408 ;; Hardware stack levels used:    1
 10409 ;; Hardware stack levels required when called:   16
 10410 ;; This function calls:
 10411 ;;		_wdtdelay
 10412 ;; This function is called by:
 10413 ;;		_send_lcd_cmd_dma
 10414 ;;		_eaDogM_WriteStringAtPos
 10415 ;;		_update_lcd
 10416 ;;		_vterm_dump
 10417 ;; This function uses a reentrant model
 10418 ;;
 10419                           
 10420                           	psect	text37
 10421  01BFAE                     __ptext37:
 10422                           	opt callstack 0
 10423  01BFAE                     _wait_lcd_done:
 10424                           	opt callstack 13
 10425                           
 10426                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 10427                           
 10428                           ; BSR set to: 0
 10429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10430                           ;incstack = 0
 10431  01BFAE  0100               	movlb	0	; () banked
 10432  01BFB0  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10433  01BFB2  D7FD               	goto	_wait_lcd_done
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;eadog.c: 447:  wdtdelay(50);
 10437  01BFB4  0E32               	movlw	50
 10438  01BFB6  6EE6               	movwf	postinc1,c
 10439  01BFB8  0E00               	movlw	0
 10440  01BFBA  6EE6               	movwf	postinc1,c
 10441  01BFBC  0E00               	movlw	0
 10442  01BFBE  6EE6               	movwf	postinc1,c
 10443  01BFC0  0E00               	movlw	0
 10444  01BFC2  6EE6               	movwf	postinc1,c
 10445  01BFC4  EC17  F0D9         	call	_wdtdelay	;wreg free
 10446                           
 10447                           ; BSR set to: 0
 10448                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10449  01BFC8  0012               	return		;funcret
 10450  01BFCA                     __end_of_wait_lcd_done:
 10451                           	opt callstack 0
 10452                           
 10453 ;; *************** function _wdtdelay *****************
 10454 ;; Defined at:
 10455 ;;		line 23 in file "eadog.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  delay           4  [STACK] const unsigned long 
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;		None
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1  [STACK] void 
 10462 ;; Registers used:
 10463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10464 ;; Tracked objects:
 10465 ;;		On entry : 2/3D
 10466 ;;		On exit  : 3F/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10473 ;;Total ram usage:        0 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; Hardware stack levels required when called:   15
 10476 ;; This function calls:
 10477 ;;		Nothing
 10478 ;; This function is called by:
 10479 ;;		_init_display
 10480 ;;		_send_lcd_data
 10481 ;;		_send_lcd_cmd
 10482 ;;		_send_lcd_cmd_long
 10483 ;;		_eaDogM_WriteStringAtPos
 10484 ;;		_wait_lcd_done
 10485 ;; This function uses a reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text38
 10489  01B22E                     __ptext38:
 10490                           	opt callstack 0
 10491  01B22E                     _wdtdelay:
 10492                           	opt callstack 13
 10493                           
 10494                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10495                           
 10496                           ; BSR set to: 0
 10497                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10498                           ;incstack = 0
 10499  01B22E  0100               	movlb	0	; () banked
 10500  01B230  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 10501  01B232  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10502  01B234  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10503  01B236  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10504  01B238                     l1459:
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;eadog.c: 28:   __nop();
 10508  01B238  F000               	nop	
 10509  01B23A  0004               	clrwdt		;# 
 10510                           
 10511                           ;eadog.c: 30:  };
 10512  01B23C  0E01               	movlw	1
 10513  01B23E  0100               	movlb	0	; () banked
 10514  01B240  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 10515  01B242  0E00               	movlw	0
 10516  01B244  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10517  01B246  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10518  01B248  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;stkvar	_delay @ sp[(0)+-4]
 10522  01B24A  0EFC               	movlw	-4
 10523  01B24C  006F FF8C  F001    	movff	plusw1,btemp
 10524  01B252  519A               	movf	wdtdelay@dcount& (0+255),w,b
 10525  01B254  5C01               	subwf	btemp^0,w,c
 10526  01B256  0EFD               	movlw	-3
 10527  01B258  006F FF8C  F001    	movff	plusw1,btemp
 10528  01B25E  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10529  01B260  5801               	subwfb	btemp^0,w,c
 10530  01B262  0EFE               	movlw	-2
 10531  01B264  006F FF8C  F001    	movff	plusw1,btemp
 10532  01B26A  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10533  01B26C  5801               	subwfb	btemp^0,w,c
 10534  01B26E  0EFF               	movlw	-1
 10535  01B270  006F FF8C  F001    	movff	plusw1,btemp
 10536  01B276  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10537  01B278  5801               	subwfb	btemp^0,w,c
 10538  01B27A  B0D8               	btfsc	status,0,c
 10539  01B27C  D7DD               	goto	l1459
 10540                           
 10541                           ; BSR set to: 0
 10542                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10543  01B27E  52E5               	movf	postdec1,f,c
 10544  01B280  52E5               	movf	postdec1,f,c
 10545  01B282  52E5               	movf	postdec1,f,c
 10546  01B284  52E5               	movf	postdec1,f,c
 10547  01B286  0012               	return		;funcret
 10548  01B288                     __end_of_wdtdelay:
 10549                           	opt callstack 0
 10550                           
 10551 ;; *************** function _send_lcd_data_dma *****************
 10552 ;; Defined at:
 10553 ;;		line 182 in file "eadog.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;  strPtr          1  [STACK] unsigned char 
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;		None
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  1  [STACK] void 
 10560 ;; Registers used:
 10561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 3F/3B
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10571 ;;Total ram usage:        0 bytes
 10572 ;; Hardware stack levels used:    1
 10573 ;; Hardware stack levels required when called:   24
 10574 ;; This function calls:
 10575 ;;		_printf
 10576 ;;		_ringBufS_flush
 10577 ;;		_start_lcd
 10578 ;;		_wait_lcd_set
 10579 ;; This function is called by:
 10580 ;;		_send_lcd_cmd_dma
 10581 ;;		_eaDogM_WriteStringAtPos
 10582 ;; This function uses a reentrant model
 10583 ;;
 10584                           
 10585                           	psect	text39
 10586  01B3D4                     __ptext39:
 10587                           	opt callstack 0
 10588  01B3D4                     _send_lcd_data_dma:
 10589                           	opt callstack 4
 10590                           
 10591                           ;eadog.c: 182: void send_lcd_data_dma(uint8_t strPtr);eadog.c: 183: {;eadog.c: 184:  wai
      +                          t_lcd_set();
 10592                           
 10593                           ; BSR set to: 0
 10594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10595                           ;incstack = 0
 10596  01B3D4  ECCA  F0E0         	call	_wait_lcd_set	;wreg free
 10597                           
 10598                           ; BSR set to: 0
 10599                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 10600  01B3D8  0E00               	movlw	0
 10601  01B3DA  6EE6               	movwf	postinc1,c
 10602  01B3DC  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10603  01B3E2  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10604  01B3E8  EC35  F0D5         	call	_ringBufS_flush	;wreg free
 10605  01B3EC  94BC               	bcf	188,2,c	;volatile
 10606                           
 10607                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 10608  01B3EE  013B               	movlb	59	; () banked
 10609  01B3F0  9FFC               	bcf	252,7,b	;volatile
 10610                           
 10611                           ; BSR set to: 59
 10612                           ;eadog.c: 189:  DMA1SSZ = 1;
 10613  01B3F2  0E00               	movlw	0
 10614  01B3F4  6FF8               	movwf	248,b	;volatile
 10615  01B3F6  0E01               	movlw	1
 10616  01B3F8  6FF7               	movwf	247,b	;volatile
 10617                           
 10618                           ; BSR set to: 59
 10619                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 10620  01B3FA  8FFC               	bsf	252,7,b	;volatile
 10621                           
 10622                           ; BSR set to: 59
 10623                           ;eadog.c: 191:  printf("%c", strPtr);
 10624                           ;stkvar	_strPtr @ sp[(0)+-1]
 10625  01B3FC  0EFF               	movlw	-1
 10626  01B3FE  50E3               	movf	plusw1,w,c
 10627  01B400  6EE6               	movwf	postinc1,c
 10628  01B402  0E00               	movlw	0
 10629  01B404  6EE6               	movwf	postinc1,c
 10630  01B406  0EF9               	movlw	low STR_44
 10631  01B408  6EE6               	movwf	postinc1,c
 10632  01B40A  0EFF               	movlw	high STR_44
 10633  01B40C  6EE6               	movwf	postinc1,c
 10634  01B40E  0E04               	movlw	4
 10635  01B410  6EE6               	movwf	postinc1,c
 10636  01B412  EC58  F0D8         	call	_printf	;wreg free
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;eadog.c: 192:  start_lcd();
 10640  01B416  ECCD  F0E0         	call	_start_lcd	;wreg free
 10641                           
 10642                           ; BSR set to: 59
 10643                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10644  01B41A  52E5               	movf	postdec1,f,c
 10645  01B41C  0012               	return		;funcret
 10646  01B41E                     __end_of_send_lcd_data_dma:
 10647                           	opt callstack 0
 10648                           
 10649 ;; *************** function _eaDogM_WriteString *****************
 10650 ;; Defined at:
 10651 ;;		line 151 in file "eadog.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;  strPtr          2  [STACK] PTR unsigned char 
 10654 ;;		 -> D.lcd(480), D(482), V(191), 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;		None
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1  [STACK] void 
 10659 ;; Registers used:
 10660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10661 ;; Tracked objects:
 10662 ;;		On entry : 3F/0
 10663 ;;		On exit  : 3F/3B
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10670 ;;Total ram usage:        0 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; Hardware stack levels required when called:   24
 10673 ;; This function calls:
 10674 ;;		_printf
 10675 ;;		_ringBufS_flush
 10676 ;;		_start_lcd
 10677 ;;		_strlen
 10678 ;;		_wait_lcd_set
 10679 ;; This function is called by:
 10680 ;;		_eaDogM_WriteStringAtPos
 10681 ;; This function uses a reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text40
 10685  01A88A                     __ptext40:
 10686                           	opt callstack 0
 10687  01A88A                     _eaDogM_WriteString:
 10688                           	opt callstack 4
 10689                           
 10690                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 10691                           
 10692                           ; BSR set to: 59
 10693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10694                           ;incstack = 0
 10695  01A88A  ECCA  F0E0         	call	_wait_lcd_set	;wreg free
 10696                           
 10697                           ; BSR set to: 0
 10698                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 10699  01A88E  0E00               	movlw	0
 10700  01A890  6EE6               	movwf	postinc1,c
 10701  01A892  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10702  01A898  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10703  01A89E  EC35  F0D5         	call	_ringBufS_flush	;wreg free
 10704  01A8A2  94BC               	bcf	188,2,c	;volatile
 10705                           
 10706                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10707                           ;stkvar	_strPtr @ sp[(0)+-2]
 10708  01A8A4  0EFE               	movlw	-2
 10709  01A8A6  006F FF8F FFE6     	movff	plusw1,postinc1
 10710  01A8AC  006F FF8F FFE6     	movff	plusw1,postinc1
 10711  01A8B2  EC98  F0D4         	call	_strlen	;wreg free
 10712  01A8B6  5002               	movf	(btemp+1)^0,w,c
 10713  01A8B8  E104               	bnz	u12280
 10714  01A8BA  0E41               	movlw	65
 10715  01A8BC  5C01               	subwf	btemp^0,w,c
 10716  01A8BE  A0D8               	btfss	status,0,c
 10717  01A8C0  D010               	goto	l12690
 10718  01A8C2                     u12280:
 10719                           
 10720                           ;stkvar	_strPtr @ sp[(0)+-2]
 10721  01A8C2  0EFE               	movlw	-2
 10722  01A8C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 10723  01A8CA  0EFF               	movlw	-1
 10724  01A8CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 10725  01A8D2  0E40               	movlw	64
 10726  01A8D4  240B               	addwf	(btemp+10)^0,w,c
 10727  01A8D6  6ED9               	movwf	fsr2l,c
 10728  01A8D8  0E00               	movlw	0
 10729  01A8DA  200C               	addwfc	(btemp+11)^0,w,c
 10730  01A8DC  6EDA               	movwf	fsr2h,c
 10731  01A8DE  0E00               	movlw	0
 10732  01A8E0  6EDF               	movwf	indf2,c
 10733  01A8E2                     l12690:
 10734                           
 10735                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 10736  01A8E2  013B               	movlb	59	; () banked
 10737  01A8E4  9FFC               	bcf	252,7,b	;volatile
 10738                           
 10739                           ; BSR set to: 59
 10740                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 10741                           ;stkvar	_strPtr @ sp[(0)+-2]
 10742  01A8E6  0EFE               	movlw	-2
 10743  01A8E8  006F FF8F FFE6     	movff	plusw1,postinc1
 10744  01A8EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10745  01A8F4  EC98  F0D4         	call	_strlen	;wreg free
 10746  01A8F8  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10747  01A8FE  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10748                           
 10749                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 10750  01A904  013B               	movlb	59	; () banked
 10751  01A906  8FFC               	bsf	252,7,b	;volatile
 10752                           
 10753                           ; BSR set to: 59
 10754                           ;eadog.c: 161:  printf("%s", strPtr);
 10755                           ;stkvar	_strPtr @ sp[(0)+-2]
 10756  01A908  0EFE               	movlw	-2
 10757  01A90A  006F FF8F FFE6     	movff	plusw1,postinc1
 10758  01A910  006F FF8F FFE6     	movff	plusw1,postinc1
 10759  01A916  0EFC               	movlw	low STR_43
 10760  01A918  6EE6               	movwf	postinc1,c
 10761  01A91A  0EFF               	movlw	high STR_43
 10762  01A91C  6EE6               	movwf	postinc1,c
 10763  01A91E  0E04               	movlw	4
 10764  01A920  6EE6               	movwf	postinc1,c
 10765  01A922  EC58  F0D8         	call	_printf	;wreg free
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;eadog.c: 162:  start_lcd();
 10769  01A926  ECCD  F0E0         	call	_start_lcd	;wreg free
 10770                           
 10771                           ; BSR set to: 59
 10772                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10773  01A92A  52E5               	movf	postdec1,f,c
 10774  01A92C  52E5               	movf	postdec1,f,c
 10775  01A92E  0012               	return		;funcret
 10776  01A930                     __end_of_eaDogM_WriteString:
 10777                           	opt callstack 0
 10778                           
 10779 ;; *************** function _wait_lcd_set *****************
 10780 ;; Defined at:
 10781 ;;		line 434 in file "eadog.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;		None
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;		None
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1  [STACK] void 
 10788 ;; Registers used:
 10789 ;;		None
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 3F/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10799 ;;Total ram usage:        0 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:   15
 10802 ;; This function calls:
 10803 ;;		Nothing
 10804 ;; This function is called by:
 10805 ;;		_eaDogM_WriteString
 10806 ;;		_send_lcd_data_dma
 10807 ;; This function uses a reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text41
 10811  01C194                     __ptext41:
 10812                           	opt callstack 0
 10813  01C194                     _wait_lcd_set:
 10814                           	opt callstack 12
 10815                           
 10816                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 10817                           
 10818                           ; BSR set to: 59
 10819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10820                           ;incstack = 0
 10821  01C194  0100               	movlb	0	; () banked
 10822  01C196  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10823                           
 10824                           ; BSR set to: 0
 10825                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10826  01C198  0012               	return		;funcret
 10827  01C19A                     __end_of_wait_lcd_set:
 10828                           	opt callstack 0
 10829                           
 10830 ;; *************** function _start_lcd *****************
 10831 ;; Defined at:
 10832 ;;		line 429 in file "eadog.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;		None
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;		None
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  1  [STACK] void 
 10839 ;; Registers used:
 10840 ;;		None
 10841 ;; Tracked objects:
 10842 ;;		On entry : 3F/0
 10843 ;;		On exit  : 3F/3B
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10850 ;;Total ram usage:        0 bytes
 10851 ;; Hardware stack levels used:    1
 10852 ;; Hardware stack levels required when called:   15
 10853 ;; This function calls:
 10854 ;;		Nothing
 10855 ;; This function is called by:
 10856 ;;		_eaDogM_WriteString
 10857 ;;		_send_lcd_data_dma
 10858 ;; This function uses a reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text42
 10862  01C19A                     __ptext42:
 10863                           	opt callstack 0
 10864  01C19A                     _start_lcd:
 10865                           	opt callstack 12
 10866                           
 10867                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 10868                           
 10869                           ; BSR set to: 0
 10870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10871                           ;incstack = 0
 10872  01C19A  013B               	movlb	59	; () banked
 10873  01C19C  8DFC               	bsf	252,6,b	;volatile
 10874                           
 10875                           ; BSR set to: 59
 10876                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10877  01C19E  0012               	return		;funcret
 10878  01C1A0                     __end_of_start_lcd:
 10879                           	opt callstack 0
 10880                           
 10881 ;; *************** function _ringBufS_flush *****************
 10882 ;; Defined at:
 10883 ;;		line 76 in file "ringbufs.c"
 10884 ;; Parameters:    Size  Location     Type
 10885 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10886 ;;		 -> ring_buf1(67), 
 10887 ;;  clearBuffer     1  [STACK] const char 
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;		None
 10890 ;; Return value:  Size  Location     Type
 10891 ;;                  1  [STACK] void 
 10892 ;; Registers used:
 10893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10894 ;; Tracked objects:
 10895 ;;		On entry : 3F/0
 10896 ;;		On exit  : 0/0
 10897 ;;		Unchanged: 0/0
 10898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10903 ;;Total ram usage:        0 bytes
 10904 ;; Hardware stack levels used:    1
 10905 ;; Hardware stack levels required when called:   16
 10906 ;; This function calls:
 10907 ;;		_memset
 10908 ;; This function is called by:
 10909 ;;		_eaDogM_WriteString
 10910 ;;		_send_lcd_data_dma
 10911 ;; This function uses a reentrant model
 10912 ;;
 10913                           
 10914                           	psect	text43
 10915  01AA6A                     __ptext43:
 10916                           	opt callstack 0
 10917  01AA6A                     _ringBufS_flush:
 10918                           	opt callstack 11
 10919                           
 10920                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10921                           ;stkvar	__this @ sp[(0)+-2]
 10922                           
 10923                           ; BSR set to: 59
 10924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10925                           ;incstack = 0
 10926  01AA6A  0EFE               	movlw	-2
 10927  01AA6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10928  01AA72  0EFF               	movlw	-1
 10929  01AA74  006F FF8C  F00C    	movff	plusw1,btemp+11
 10930  01AA7A  0E42               	movlw	66
 10931  01AA7C  240B               	addwf	(btemp+10)^0,w,c
 10932  01AA7E  6ED9               	movwf	fsr2l,c
 10933  01AA80  0E00               	movlw	0
 10934  01AA82  200C               	addwfc	(btemp+11)^0,w,c
 10935  01AA84  6EDA               	movwf	fsr2h,c
 10936  01AA86  0E00               	movlw	0
 10937  01AA88  6EDF               	movwf	indf2,c
 10938                           
 10939                           ;ringbufs.c: 79:  _this->head = 0;
 10940                           ;stkvar	__this @ sp[(0)+-2]
 10941  01AA8A  0EFE               	movlw	-2
 10942  01AA8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10943  01AA92  0EFF               	movlw	-1
 10944  01AA94  006F FF8C  F00C    	movff	plusw1,btemp+11
 10945  01AA9A  0E40               	movlw	64
 10946  01AA9C  240B               	addwf	(btemp+10)^0,w,c
 10947  01AA9E  6ED9               	movwf	fsr2l,c
 10948  01AAA0  0E00               	movlw	0
 10949  01AAA2  200C               	addwfc	(btemp+11)^0,w,c
 10950  01AAA4  6EDA               	movwf	fsr2h,c
 10951  01AAA6  0E00               	movlw	0
 10952  01AAA8  6EDF               	movwf	indf2,c
 10953                           
 10954                           ;ringbufs.c: 80:  _this->tail = 0;
 10955                           ;stkvar	__this @ sp[(0)+-2]
 10956  01AAAA  0EFE               	movlw	-2
 10957  01AAAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 10958  01AAB2  0EFF               	movlw	-1
 10959  01AAB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10960  01AABA  0E41               	movlw	65
 10961  01AABC  240B               	addwf	(btemp+10)^0,w,c
 10962  01AABE  6ED9               	movwf	fsr2l,c
 10963  01AAC0  0E00               	movlw	0
 10964  01AAC2  200C               	addwfc	(btemp+11)^0,w,c
 10965  01AAC4  6EDA               	movwf	fsr2h,c
 10966  01AAC6  0E00               	movlw	0
 10967  01AAC8  6EDF               	movwf	indf2,c
 10968                           
 10969                           ;ringbufs.c: 81:  if (clearBuffer) {
 10970                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10971  01AACA  0EFD               	movlw	-3
 10972  01AACC  50E3               	movf	plusw1,w,c
 10973  01AACE  B4D8               	btfsc	status,2,c
 10974  01AAD0  D011               	goto	l1588
 10975                           
 10976                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10977  01AAD2  0E40               	movlw	64
 10978  01AAD4  6EE6               	movwf	postinc1,c
 10979  01AAD6  0E00               	movlw	0
 10980  01AAD8  6EE6               	movwf	postinc1,c
 10981  01AADA  0E00               	movlw	0
 10982  01AADC  6EE6               	movwf	postinc1,c
 10983  01AADE  0E00               	movlw	0
 10984  01AAE0  6EE6               	movwf	postinc1,c
 10985                           
 10986                           ;stkvar	__this @ sp[(-4)+-2]
 10987  01AAE2  0EFA               	movlw	-6
 10988  01AAE4  006F FF8F FFE6     	movff	plusw1,postinc1
 10989  01AAEA  006F FF8F FFE6     	movff	plusw1,postinc1
 10990  01AAF0  EC1C  F0B7         	call	_memset	;wreg free
 10991  01AAF4                     l1588:
 10992                           
 10993                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10994  01AAF4  52E5               	movf	postdec1,f,c
 10995  01AAF6  52E5               	movf	postdec1,f,c
 10996  01AAF8  52E5               	movf	postdec1,f,c
 10997  01AAFA  0012               	return		;funcret
 10998  01AAFC                     __end_of_ringBufS_flush:
 10999                           	opt callstack 0
 11000                           
 11001 ;; *************** function _memset *****************
 11002 ;; Defined at:
 11003 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;  dest            2  [STACK] PTR void 
 11006 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11007 ;;  c               2  [STACK] int 
 11008 ;;  n               2  [STACK] unsigned int 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  s               2  [STACK] PTR unsigned char 
 11011 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11012 ;;  k               2  [STACK] unsigned int 
 11013 ;; Return value:  Size  Location     Type
 11014 ;;                  2  [STACK] PTR void 
 11015 ;; Registers used:
 11016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11017 ;; Tracked objects:
 11018 ;;		On entry : 0/0
 11019 ;;		On exit  : 0/0
 11020 ;;		Unchanged: 0/0
 11021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11026 ;;Total ram usage:        0 bytes
 11027 ;; Hardware stack levels used:    1
 11028 ;; Hardware stack levels required when called:   15
 11029 ;; This function calls:
 11030 ;;		Nothing
 11031 ;; This function is called by:
 11032 ;;		_ringBufS_init
 11033 ;;		_ringBufS_flush
 11034 ;; This function uses a reentrant model
 11035 ;;
 11036                           
 11037                           	psect	text44
 11038  016E38                     __ptext44:
 11039                           	opt callstack 0
 11040  016E38                     _memset:
 11041                           	opt callstack 0
 11042                           
 11043                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11044  016E38  52E6               	movf	postinc1,f,c
 11045  016E3A  52E6               	movf	postinc1,f,c
 11046  016E3C  52E6               	movf	postinc1,f,c
 11047  016E3E  52E6               	movf	postinc1,f,c
 11048                           
 11049                           ;stkvar	_dest @ sp[(-4)+-2]
 11050                           
 11051                           ;incstack = 0
 11052  016E40  0EFA               	movlw	-6
 11053  016E42  006F FF8C  F00B    	movff	plusw1,btemp+10
 11054  016E48  0EFB               	movlw	-5
 11055  016E4A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11056                           
 11057                           ;stkvar	_s @ sp[(-4)+0]
 11058  016E50  0EFD               	movlw	-3
 11059  016E52  0060  F033  FFE3   	movff	btemp+11,plusw1
 11060  016E58  0EFC               	movlw	-4
 11061  016E5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11062                           
 11063                           ;stkvar	_n @ sp[(-4)+-6]
 11064  016E60  0EF6               	movlw	-10
 11065  016E62  006F FF8C  F001    	movff	plusw1,btemp
 11066  016E68  0EF7               	movlw	-9
 11067  016E6A  50E3               	movf	plusw1,w,c
 11068  016E6C  1001               	iorwf	btemp^0,w,c
 11069  016E6E  B4D8               	btfsc	status,2,c
 11070  016E70  D154               	goto	u10830
 11071                           
 11072                           ;stkvar	_c @ sp[(-4)+-4]
 11073                           ;stkvar	_s @ sp[(-4)+0]
 11074  016E72  0EFC               	movlw	-4
 11075  016E74  006F FF8F FFD9     	movff	plusw1,fsr2l
 11076  016E7A  0EFD               	movlw	-3
 11077  016E7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11078  016E82  0EF8               	movlw	-8
 11079  016E84  006F FF8F FFDF     	movff	plusw1,indf2
 11080                           
 11081                           ;stkvar	_c @ sp[(-4)+-4]
 11082                           ;stkvar	_n @ sp[(-4)+-6]
 11083                           ;stkvar	_s @ sp[(-4)+0]
 11084  016E8A  0EFC               	movlw	-4
 11085  016E8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 11086  016E92  0EFD               	movlw	-3
 11087  016E94  006F FF8C  F00C    	movff	plusw1,btemp+11
 11088  016E9A  0EF6               	movlw	-10
 11089  016E9C  50E3               	movf	plusw1,w,c
 11090  016E9E  260B               	addwf	(btemp+10)^0,f,c
 11091  016EA0  0EF7               	movlw	-9
 11092  016EA2  50E3               	movf	plusw1,w,c
 11093  016EA4  220C               	addwfc	(btemp+11)^0,f,c
 11094  016EA6  0EFF               	movlw	255
 11095  016EA8  240B               	addwf	(btemp+10)^0,w,c
 11096  016EAA  6ED9               	movwf	fsr2l,c
 11097  016EAC  0EFF               	movlw	255
 11098  016EAE  200C               	addwfc	(btemp+11)^0,w,c
 11099  016EB0  6EDA               	movwf	fsr2h,c
 11100  016EB2  0EF8               	movlw	-8
 11101  016EB4  006F FF8F FFDF     	movff	plusw1,indf2
 11102                           
 11103                           ;stkvar	_n @ sp[(-4)+-6]
 11104  016EBA  0EF7               	movlw	-9
 11105  016EBC  50E3               	movf	plusw1,w,c
 11106  016EBE  E108               	bnz	l11842
 11107  016EC0  0EF6               	movlw	-10
 11108  016EC2  006F FF8C  F001    	movff	plusw1,btemp
 11109  016EC8  0E03               	movlw	3
 11110  016ECA  5E01               	subwf	btemp^0,f,c
 11111  016ECC  A0D8               	btfss	status,0,c
 11112  016ECE  D125               	goto	u10830
 11113  016ED0                     l11842:
 11114                           
 11115                           ;stkvar	_c @ sp[(-4)+-4]
 11116                           ;stkvar	_s @ sp[(-4)+0]
 11117  016ED0  0EFC               	movlw	-4
 11118  016ED2  006F FF8C  F00B    	movff	plusw1,btemp+10
 11119  016ED8  0EFD               	movlw	-3
 11120  016EDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 11121  016EE0  0E01               	movlw	1
 11122  016EE2  240B               	addwf	(btemp+10)^0,w,c
 11123  016EE4  6ED9               	movwf	fsr2l,c
 11124  016EE6  0E00               	movlw	0
 11125  016EE8  200C               	addwfc	(btemp+11)^0,w,c
 11126  016EEA  6EDA               	movwf	fsr2h,c
 11127  016EEC  0EF8               	movlw	-8
 11128  016EEE  006F FF8F FFDF     	movff	plusw1,indf2
 11129                           
 11130                           ;stkvar	_c @ sp[(-4)+-4]
 11131                           ;stkvar	_s @ sp[(-4)+0]
 11132  016EF4  0EFC               	movlw	-4
 11133  016EF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11134  016EFC  0EFD               	movlw	-3
 11135  016EFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11136  016F04  0E02               	movlw	2
 11137  016F06  240B               	addwf	(btemp+10)^0,w,c
 11138  016F08  6ED9               	movwf	fsr2l,c
 11139  016F0A  0E00               	movlw	0
 11140  016F0C  200C               	addwfc	(btemp+11)^0,w,c
 11141  016F0E  6EDA               	movwf	fsr2h,c
 11142  016F10  0EF8               	movlw	-8
 11143  016F12  006F FF8F FFDF     	movff	plusw1,indf2
 11144                           
 11145                           ;stkvar	_c @ sp[(-4)+-4]
 11146                           ;stkvar	_n @ sp[(-4)+-6]
 11147                           ;stkvar	_s @ sp[(-4)+0]
 11148  016F18  0EFC               	movlw	-4
 11149  016F1A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11150  016F20  0EFD               	movlw	-3
 11151  016F22  006F FF8C  F00C    	movff	plusw1,btemp+11
 11152  016F28  0EF6               	movlw	-10
 11153  016F2A  50E3               	movf	plusw1,w,c
 11154  016F2C  260B               	addwf	(btemp+10)^0,f,c
 11155  016F2E  0EF7               	movlw	-9
 11156  016F30  50E3               	movf	plusw1,w,c
 11157  016F32  220C               	addwfc	(btemp+11)^0,f,c
 11158  016F34  0EFE               	movlw	254
 11159  016F36  240B               	addwf	(btemp+10)^0,w,c
 11160  016F38  6ED9               	movwf	fsr2l,c
 11161  016F3A  0EFF               	movlw	255
 11162  016F3C  200C               	addwfc	(btemp+11)^0,w,c
 11163  016F3E  6EDA               	movwf	fsr2h,c
 11164  016F40  0EF8               	movlw	-8
 11165  016F42  006F FF8F FFDF     	movff	plusw1,indf2
 11166                           
 11167                           ;stkvar	_c @ sp[(-4)+-4]
 11168                           ;stkvar	_n @ sp[(-4)+-6]
 11169                           ;stkvar	_s @ sp[(-4)+0]
 11170  016F48  0EFC               	movlw	-4
 11171  016F4A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11172  016F50  0EFD               	movlw	-3
 11173  016F52  006F FF8C  F00C    	movff	plusw1,btemp+11
 11174  016F58  0EF6               	movlw	-10
 11175  016F5A  50E3               	movf	plusw1,w,c
 11176  016F5C  260B               	addwf	(btemp+10)^0,f,c
 11177  016F5E  0EF7               	movlw	-9
 11178  016F60  50E3               	movf	plusw1,w,c
 11179  016F62  220C               	addwfc	(btemp+11)^0,f,c
 11180  016F64  0EFD               	movlw	253
 11181  016F66  240B               	addwf	(btemp+10)^0,w,c
 11182  016F68  6ED9               	movwf	fsr2l,c
 11183  016F6A  0EFF               	movlw	255
 11184  016F6C  200C               	addwfc	(btemp+11)^0,w,c
 11185  016F6E  6EDA               	movwf	fsr2h,c
 11186  016F70  0EF8               	movlw	-8
 11187  016F72  006F FF8F FFDF     	movff	plusw1,indf2
 11188                           
 11189                           ;stkvar	_n @ sp[(-4)+-6]
 11190  016F78  0EF7               	movlw	-9
 11191  016F7A  50E3               	movf	plusw1,w,c
 11192  016F7C  E108               	bnz	l11848
 11193  016F7E  0EF6               	movlw	-10
 11194  016F80  006F FF8C  F001    	movff	plusw1,btemp
 11195  016F86  0E07               	movlw	7
 11196  016F88  5E01               	subwf	btemp^0,f,c
 11197  016F8A  A0D8               	btfss	status,0,c
 11198  016F8C  D0C6               	goto	u10830
 11199  016F8E                     l11848:
 11200                           
 11201                           ;stkvar	_c @ sp[(-4)+-4]
 11202                           ;stkvar	_s @ sp[(-4)+0]
 11203  016F8E  0EFC               	movlw	-4
 11204  016F90  006F FF8C  F00B    	movff	plusw1,btemp+10
 11205  016F96  0EFD               	movlw	-3
 11206  016F98  006F FF8C  F00C    	movff	plusw1,btemp+11
 11207  016F9E  0E03               	movlw	3
 11208  016FA0  240B               	addwf	(btemp+10)^0,w,c
 11209  016FA2  6ED9               	movwf	fsr2l,c
 11210  016FA4  0E00               	movlw	0
 11211  016FA6  200C               	addwfc	(btemp+11)^0,w,c
 11212  016FA8  6EDA               	movwf	fsr2h,c
 11213  016FAA  0EF8               	movlw	-8
 11214  016FAC  006F FF8F FFDF     	movff	plusw1,indf2
 11215                           
 11216                           ;stkvar	_c @ sp[(-4)+-4]
 11217                           ;stkvar	_n @ sp[(-4)+-6]
 11218                           ;stkvar	_s @ sp[(-4)+0]
 11219  016FB2  0EFC               	movlw	-4
 11220  016FB4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11221  016FBA  0EFD               	movlw	-3
 11222  016FBC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11223  016FC2  0EF6               	movlw	-10
 11224  016FC4  50E3               	movf	plusw1,w,c
 11225  016FC6  260B               	addwf	(btemp+10)^0,f,c
 11226  016FC8  0EF7               	movlw	-9
 11227  016FCA  50E3               	movf	plusw1,w,c
 11228  016FCC  220C               	addwfc	(btemp+11)^0,f,c
 11229  016FCE  0EFC               	movlw	252
 11230  016FD0  240B               	addwf	(btemp+10)^0,w,c
 11231  016FD2  6ED9               	movwf	fsr2l,c
 11232  016FD4  0EFF               	movlw	255
 11233  016FD6  200C               	addwfc	(btemp+11)^0,w,c
 11234  016FD8  6EDA               	movwf	fsr2h,c
 11235  016FDA  0EF8               	movlw	-8
 11236  016FDC  006F FF8F FFDF     	movff	plusw1,indf2
 11237                           
 11238                           ;stkvar	_n @ sp[(-4)+-6]
 11239  016FE2  0EF7               	movlw	-9
 11240  016FE4  50E3               	movf	plusw1,w,c
 11241  016FE6  E108               	bnz	l11854
 11242  016FE8  0EF6               	movlw	-10
 11243  016FEA  006F FF8C  F001    	movff	plusw1,btemp
 11244  016FF0  0E09               	movlw	9
 11245  016FF2  5E01               	subwf	btemp^0,f,c
 11246  016FF4  A0D8               	btfss	status,0,c
 11247  016FF6  D091               	goto	u10830
 11248  016FF8                     l11854:
 11249                           
 11250                           ;stkvar	_s @ sp[(-4)+0]
 11251  016FF8  0EFC               	movlw	-4
 11252  016FFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11253  017000  1E0B               	comf	(btemp+10)^0,f,c
 11254  017002  0EFD               	movlw	-3
 11255  017004  006F FF8C  F00C    	movff	plusw1,btemp+11
 11256  01700A  1E0C               	comf	(btemp+11)^0,f,c
 11257  01700C  2A0B               	incf	(btemp+10)^0,f,c
 11258  01700E  B4D8               	btfsc	status,2,c
 11259  017010  2A0C               	incf	(btemp+11)^0,f,c
 11260  017012  0E03               	movlw	3
 11261  017014  160B               	andwf	(btemp+10)^0,f,c
 11262  017016  0E00               	movlw	0
 11263  017018  160C               	andwf	(btemp+11)^0,f,c
 11264                           
 11265                           ;stkvar	_k @ sp[(-4)+2]
 11266  01701A  0EFE               	movlw	-2
 11267  01701C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11268  017022  0EFF               	movlw	-1
 11269  017024  0060  F033  FFE3   	movff	btemp+11,plusw1
 11270                           
 11271                           ;stkvar	_k @ sp[(-4)+2]
 11272                           ;stkvar	_s @ sp[(-4)+0]
 11273  01702A  0EFC               	movlw	-4
 11274  01702C  50E3               	movf	plusw1,w,c
 11275  01702E  6E01               	movwf	btemp^0,c
 11276  017030  0EFE               	movlw	-2
 11277  017032  50E3               	movf	plusw1,w,c
 11278  017034  2601               	addwf	btemp^0,f,c
 11279  017036  0EFC               	movlw	-4
 11280  017038  0060  F007  FFE3   	movff	btemp,plusw1
 11281  01703E  0EFD               	movlw	-3
 11282  017040  50E3               	movf	plusw1,w,c
 11283  017042  6E01               	movwf	btemp^0,c
 11284  017044  0EFF               	movlw	-1
 11285  017046  50E3               	movf	plusw1,w,c
 11286  017048  2201               	addwfc	btemp^0,f,c
 11287  01704A  0EFD               	movlw	-3
 11288  01704C  0060  F007  FFE3   	movff	btemp,plusw1
 11289                           
 11290                           ;stkvar	_k @ sp[(-4)+2]
 11291                           ;stkvar	_n @ sp[(-4)+-6]
 11292  017052  0EF6               	movlw	-10
 11293  017054  50E3               	movf	plusw1,w,c
 11294  017056  6E01               	movwf	btemp^0,c
 11295  017058  0EFE               	movlw	-2
 11296  01705A  50E3               	movf	plusw1,w,c
 11297  01705C  5E01               	subwf	btemp^0,f,c
 11298  01705E  0EF6               	movlw	-10
 11299  017060  0060  F007  FFE3   	movff	btemp,plusw1
 11300  017066  0EF7               	movlw	-9
 11301  017068  50E3               	movf	plusw1,w,c
 11302  01706A  6E01               	movwf	btemp^0,c
 11303  01706C  0EFF               	movlw	-1
 11304  01706E  50E3               	movf	plusw1,w,c
 11305  017070  5A01               	subwfb	btemp^0,f,c
 11306  017072  0EF7               	movlw	-9
 11307  017074  0060  F007  FFE3   	movff	btemp,plusw1
 11308  01707A  0EFC               	movlw	252
 11309  01707C  6E0B               	movwf	(btemp+10)^0,c
 11310  01707E  0EFF               	movlw	255
 11311  017080  6E0C               	movwf	(btemp+11)^0,c
 11312                           
 11313                           ;stkvar	_n @ sp[(-4)+-6]
 11314  017082  0EF6               	movlw	-10
 11315  017084  006F FF8C  F001    	movff	plusw1,btemp
 11316  01708A  500B               	movf	(btemp+10)^0,w,c
 11317  01708C  1601               	andwf	btemp^0,f,c
 11318  01708E  0EF6               	movlw	-10
 11319  017090  0060  F007  FFE3   	movff	btemp,plusw1
 11320  017096  0EF7               	movlw	-9
 11321  017098  006F FF8C  F001    	movff	plusw1,btemp
 11322  01709E  500C               	movf	(btemp+11)^0,w,c
 11323  0170A0  1601               	andwf	btemp^0,f,c
 11324  0170A2  0EF7               	movlw	-9
 11325  0170A4  D02E               	goto	L9
 11326  0170A6                     l11862:
 11327                           
 11328                           ;stkvar	_c @ sp[(-4)+-4]
 11329                           ;stkvar	_s @ sp[(-4)+0]
 11330  0170A6  0EFC               	movlw	-4
 11331  0170A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11332  0170AE  0EFD               	movlw	-3
 11333  0170B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11334  0170B6  0EF8               	movlw	-8
 11335  0170B8  006F FF8F FFDF     	movff	plusw1,indf2
 11336                           
 11337                           ;stkvar	_n @ sp[(-4)+-6]
 11338  0170BE  0EF6               	movlw	-10
 11339  0170C0  006F FF8C  F001    	movff	plusw1,btemp
 11340  0170C6  0E01               	movlw	1
 11341  0170C8  5E01               	subwf	btemp^0,f,c
 11342  0170CA  0EF6               	movlw	-10
 11343  0170CC  0060  F007  FFE3   	movff	btemp,plusw1
 11344  0170D2  0EF7               	movlw	-9
 11345  0170D4  006F FF8C  F001    	movff	plusw1,btemp
 11346  0170DA  0E00               	movlw	0
 11347  0170DC  5A01               	subwfb	btemp^0,f,c
 11348  0170DE  0EF7               	movlw	-9
 11349  0170E0  0060  F007  FFE3   	movff	btemp,plusw1
 11350                           
 11351                           ;stkvar	_s @ sp[(-4)+0]
 11352  0170E6  0EFC               	movlw	-4
 11353  0170E8  50E3               	movf	plusw1,w,c
 11354  0170EA  0F01               	addlw	1
 11355  0170EC  6E01               	movwf	btemp^0,c
 11356  0170EE  0EFC               	movlw	-4
 11357  0170F0  0060  F007  FFE3   	movff	btemp,plusw1
 11358  0170F6  6A01               	clrf	btemp^0,c
 11359  0170F8  0EFD               	movlw	-3
 11360  0170FA  50E3               	movf	plusw1,w,c
 11361  0170FC  2001               	addwfc	btemp^0,w,c
 11362  0170FE  6E01               	movwf	btemp^0,c
 11363  017100  0EFD               	movlw	-3
 11364  017102                     L9:
 11365  017102  0060  F007  FFE3   	movff	btemp,plusw1
 11366                           
 11367                           ;stkvar	_n @ sp[(-4)+-6]
 11368  017108  0EF6               	movlw	-10
 11369  01710A  006F FF8C  F001    	movff	plusw1,btemp
 11370  017110  0EF7               	movlw	-9
 11371  017112  50E3               	movf	plusw1,w,c
 11372  017114  1001               	iorwf	btemp^0,w,c
 11373  017116  A4D8               	btfss	status,2,c
 11374  017118  D7C6               	goto	l11862
 11375  01711A                     u10830:
 11376                           
 11377                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 11378  01711A  0EF6               	movlw	246
 11379  01711C  26E1               	addwf	fsr1l,f,c
 11380  01711E  0EFF               	movlw	255
 11381  017120  22E2               	addwfc	fsr1h,f,c
 11382  017122  0012               	return		;funcret
 11383  017124                     __end_of_memset:
 11384                           	opt callstack 0
 11385                           
 11386 ;; *************** function _printf *****************
 11387 ;; Defined at:
 11388 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  fmt             2  [STACK] PTR const unsigned char 
 11391 ;;		 -> STR_44(3), STR_43(3), 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;  ap              2  [STACK] PTR void [1]
 11394 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11395 ;;  ret             2    0        int 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  2  [STACK] int 
 11398 ;; Registers used:
 11399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11400 ;; Tracked objects:
 11401 ;;		On entry : 3F/3B
 11402 ;;		On exit  : 3F/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11409 ;;Total ram usage:        0 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:   23
 11412 ;; This function calls:
 11413 ;;		_vfprintf
 11414 ;; This function is called by:
 11415 ;;		_eaDogM_WriteString
 11416 ;;		_send_lcd_data_dma
 11417 ;; This function uses a reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text45
 11421  01B0B0                     __ptext45:
 11422                           	opt callstack 0
 11423  01B0B0                     _printf:
 11424                           	opt callstack 0
 11425                           
 11426                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11427  01B0B0  52E6               	movf	postinc1,f,c
 11428  01B0B2  52E6               	movf	postinc1,f,c
 11429                           
 11430                           ;stkvar	?_printf @ sp[(-2)+-3]
 11431                           
 11432                           ;incstack = 0
 11433  01B0B4  0EFB               	movlw	251
 11434  01B0B6  24E1               	addwf	fsr1l,w,c
 11435  01B0B8  6E0B               	movwf	(btemp+10)^0,c
 11436  01B0BA  0EFF               	movlw	255
 11437  01B0BC  20E2               	addwfc	fsr1h,w,c
 11438  01B0BE  6E0C               	movwf	(btemp+11)^0,c
 11439                           
 11440                           ;stkvar	_ap @ sp[(-2)+0]
 11441  01B0C0  0EFF               	movlw	-1
 11442  01B0C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11443  01B0C8  0EFE               	movlw	-2
 11444  01B0CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11445                           
 11446                           ;stkvar	_ap @ sp[(-2)+0]
 11447  01B0D0  0EFE               	movlw	254
 11448  01B0D2  24E1               	addwf	fsr1l,w,c
 11449  01B0D4  6E01               	movwf	btemp^0,c
 11450  01B0D6  0EFF               	movlw	255
 11451  01B0D8  20E2               	addwfc	fsr1h,w,c
 11452  01B0DA  6E02               	movwf	(btemp+1)^0,c
 11453  01B0DC  0060  F007  FFE6   	movff	btemp,postinc1
 11454  01B0E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11455                           
 11456                           ;stkvar	_fmt @ sp[(-4)+-3]
 11457  01B0E8  0EF9               	movlw	-7
 11458  01B0EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11459  01B0F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11460  01B0F6  0E00               	movlw	0
 11461  01B0F8  6EE6               	movwf	postinc1,c
 11462  01B0FA  0E00               	movlw	0
 11463  01B0FC  6EE6               	movwf	postinc1,c
 11464  01B0FE  EC46  F0D3         	call	_vfprintf	;wreg free
 11465                           
 11466                           ; BSR set to: 0
 11467                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11468  01B102  52E5               	movf	postdec1,f,c
 11469  01B104  52E5               	movf	postdec1,f,c
 11470  01B106  52E5               	movf	postdec1,f,c
 11471  01B108  50E7               	movf	indf1,w,c
 11472  01B10A  5EE1               	subwf	fsr1l,f,c
 11473  01B10C  0E00               	movlw	0
 11474  01B10E  5AE2               	subwfb	fsr1h,f,c
 11475  01B110  0012               	return		;funcret
 11476  01B112                     __end_of_printf:
 11477                           	opt callstack 0
 11478                           
 11479 ;; *************** function _vfprintf *****************
 11480 ;; Defined at:
 11481 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11484 ;;		 -> f(6), NULL(0), 
 11485 ;;  fmt             2  [STACK] PTR const unsigned char 
 11486 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11487 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11488 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11489 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11490 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 11491 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 11492 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 11493 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 11494 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 11495 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 11496 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11497 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11498 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11499 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11500 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11501 ;;  ap              2  [STACK] PTR PTR void 
 11502 ;;		 -> ap(2), ap(2), 
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;  cfmt            2  [STACK] PTR unsigned char 
 11505 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11506 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11507 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11508 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11509 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 11510 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 11511 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 11512 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 11513 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 11514 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 11515 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11516 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11517 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11518 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11519 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  2  [STACK] int 
 11522 ;; Registers used:
 11523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 3F/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11533 ;;Total ram usage:        0 bytes
 11534 ;; Hardware stack levels used:    1
 11535 ;; Hardware stack levels required when called:   22
 11536 ;; This function calls:
 11537 ;;		_vfpfcnvrt
 11538 ;; This function is called by:
 11539 ;;		_sprintf
 11540 ;;		_printf
 11541 ;; This function uses a reentrant model
 11542 ;;
 11543                           
 11544                           	psect	text46
 11545  01A68C                     __ptext46:
 11546                           	opt callstack 0
 11547  01A68C                     _vfprintf:
 11548                           	opt callstack 0
 11549                           
 11550                           ; BSR set to: 0
 11551                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11552  01A68C  52E6               	movf	postinc1,f,c
 11553  01A68E  52E6               	movf	postinc1,f,c
 11554                           
 11555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11556                           ;stkvar	_fmt @ sp[(-2)+-4]
 11557                           
 11558                           ;incstack = 0
 11559 ;; hardware stack exceeded
 11560  01A690  0EFA               	movlw	-6
 11561  01A692  006F FF8C  F00B    	movff	plusw1,btemp+10
 11562  01A698  0EFB               	movlw	-5
 11563  01A69A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11564                           
 11565                           ;stkvar	_cfmt @ sp[(-2)+0]
 11566  01A6A0  0EFF               	movlw	-1
 11567  01A6A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11568  01A6A8  0EFE               	movlw	-2
 11569  01A6AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11570                           
 11571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11572  01A6B0  0100               	movlb	0	; () banked
 11573  01A6B2  6BC0               	clrf	_nout& (0+255),b
 11574  01A6B4  6BC1               	clrf	(_nout+1)& (0+255),b
 11575                           
 11576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11577  01A6B6  D021               	goto	l12712
 11578  01A6B8                     l12710:
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11582                           ;stkvar	_ap @ sp[(-2)+-6]
 11583  01A6B8  0EF8               	movlw	-8
 11584  01A6BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11585  01A6C0  006F FF8F FFE6     	movff	plusw1,postinc1
 11586                           
 11587                           ;stkvar	_cfmt @ sp[(-4)+0]
 11588  01A6C6  0EFC               	movlw	252
 11589  01A6C8  24E1               	addwf	fsr1l,w,c
 11590  01A6CA  6E01               	movwf	btemp^0,c
 11591  01A6CC  0EFF               	movlw	255
 11592  01A6CE  20E2               	addwfc	fsr1h,w,c
 11593  01A6D0  6E02               	movwf	(btemp+1)^0,c
 11594  01A6D2  0060  F007  FFE6   	movff	btemp,postinc1
 11595  01A6D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11596                           
 11597                           ;stkvar	_fp @ sp[(-6)+-2]
 11598  01A6DE  0EF8               	movlw	-8
 11599  01A6E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11600  01A6E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11601  01A6EC  ECD0  F091         	call	_vfpfcnvrt	;wreg free
 11602  01A6F0  5001               	movf	btemp^0,w,c
 11603  01A6F2  0100               	movlb	0	; () banked
 11604  01A6F4  27C0               	addwf	_nout& (0+255),f,b
 11605  01A6F6  5002               	movf	(btemp+1)^0,w,c
 11606  01A6F8  23C1               	addwfc	(_nout+1)& (0+255),f,b
 11607  01A6FA                     l12712:
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11611                           ;stkvar	_cfmt @ sp[(-2)+0]
 11612  01A6FA  50E1               	movf	fsr1l,w,c
 11613  01A6FC  0FFE               	addlw	-2
 11614  01A6FE  6ED9               	movwf	fsr2l,c
 11615  01A700  50E2               	movf	fsr1h,w,c
 11616  01A702  6EDA               	movwf	fsr2h,c
 11617  01A704  0EFF               	movlw	255
 11618  01A706  22DA               	addwfc	fsr2h,f,c
 11619  01A708  006F FF7B FFF6     	movff	postinc2,tblptrl
 11620  01A70E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11621  01A714                     	if	0	;tblptru may be non-zero
 11622  01A714                     	endif
 11623  01A714                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11624  01A714  0E00               	movlw	low (__mediumconst shr (0+16))
 11625  01A716  6EF8               	movwf	tblptru,c
 11626  01A718                     	endif
 11627  01A718  0008               	tblrd		*
 11628  01A71A  50F5               	movf	tablat,w,c
 11629  01A71C  0900               	iorlw	0
 11630  01A71E  A4D8               	btfss	status,2,c
 11631  01A720  D7CB               	goto	l12710
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11635  01A722  0060  F300  F001   	movff	_nout,btemp
 11636  01A728  0060  F304  F002   	movff	_nout+1,btemp+1
 11637                           
 11638                           ; BSR set to: 0
 11639                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11640  01A72E  0EF8               	movlw	248
 11641  01A730  26E1               	addwf	fsr1l,f,c
 11642  01A732  0EFF               	movlw	255
 11643  01A734  22E2               	addwfc	fsr1h,f,c
 11644  01A736  0012               	return		;funcret
 11645  01A738                     __end_of_vfprintf:
 11646                           	opt callstack 0
 11647                           
 11648 ;; *************** function _vfpfcnvrt *****************
 11649 ;; Defined at:
 11650 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11653 ;;		 -> f(6), NULL(0), 
 11654 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11655 ;;		 -> cfmt(2), 
 11656 ;;  ap              2  [STACK] PTR PTR void 
 11657 ;;		 -> ap(2), ap(2), 
 11658 ;; Auto vars:     Size  Location     Type
 11659 ;;  llu             8  [STACK] unsigned long long 
 11660 ;;  ll              8  [STACK] long long 
 11661 ;;  f               4  [STACK] long long 
 11662 ;;  ct              3  [STACK] unsigned char [3]
 11663 ;;  vp              3    0        PTR void 
 11664 ;;  cp              2  [STACK] PTR unsigned char 
 11665 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 11666 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 11667 ;;		 -> V(191), 
 11668 ;;  i               2    0        int 
 11669 ;;  done            2    0        int 
 11670 ;;  c               1  [STACK] unsigned char 
 11671 ;; Return value:  Size  Location     Type
 11672 ;;                  2  [STACK] int 
 11673 ;; Registers used:
 11674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11675 ;; Tracked objects:
 11676 ;;		On entry : 0/0
 11677 ;;		On exit  : 0/0
 11678 ;;		Unchanged: 0/0
 11679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11684 ;;Total ram usage:        0 bytes
 11685 ;; Hardware stack levels used:    1
 11686 ;; Hardware stack levels required when called:   21
 11687 ;; This function calls:
 11688 ;;		_atoi
 11689 ;;		_ctoa
 11690 ;;		_dtoa
 11691 ;;		_efgtoa
 11692 ;;		_fputc
 11693 ;;		_isdigit
 11694 ;;		_isupper
 11695 ;;		_stoa
 11696 ;;		_strncmp
 11697 ;;		_tolower
 11698 ;;		_utoa
 11699 ;;		_xtoa
 11700 ;; This function is called by:
 11701 ;;		_vfprintf
 11702 ;; This function uses a reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text47
 11706  0123A0                     __ptext47:
 11707                           	opt callstack 0
 11708  0123A0                     _vfpfcnvrt:
 11709                           	opt callstack 0
 11710                           
 11711                           ; BSR set to: 0
 11712                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11713  0123A0  0E20               	movlw	32
 11714  0123A2  26E1               	addwf	fsr1l,f,c
 11715  0123A4  0E00               	movlw	0
 11716  0123A6  22E2               	addwfc	fsr1h,f,c
 11717                           
 11718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11719                           ;stkvar	_fmt @ sp[(-32)+-4]
 11720                           
 11721                           ;incstack = 0
 11722 ;; hardware stack exceeded
 11723  0123A8  0EDC               	movlw	-36
 11724  0123AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11725  0123B0  0EDD               	movlw	-35
 11726  0123B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11727  0123B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11728  0123BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11729  0123C4                     	if	0	;tblptru may be non-zero
 11730  0123C4                     	endif
 11731  0123C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11732  0123C4  0E00               	movlw	low (__mediumconst shr (0+16))
 11733  0123C6  6EF8               	movwf	tblptru,c
 11734  0123C8                     	endif
 11735  0123C8  0008               	tblrd		*
 11736  0123CA  50F5               	movf	tablat,w,c
 11737  0123CC  0A25               	xorlw	37
 11738  0123CE  A4D8               	btfss	status,2,c
 11739  0123D0  EF77  F099         	goto	l12672
 11740                           
 11741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11742                           ;stkvar	_fmt @ sp[(-32)+-4]
 11743  0123D4  0EDC               	movlw	-36
 11744  0123D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11745  0123DC  0EDD               	movlw	-35
 11746  0123DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11747  0123E4  2ADE               	incf	postinc2,f,c
 11748  0123E6  0E00               	movlw	0
 11749  0123E8  22DD               	addwfc	postdec2,f,c
 11750                           
 11751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11752  0123EA  6A3A               	clrf	_width^0,c
 11753  0123EC  6A3B               	clrf	(_width+1)^0,c
 11754  0123EE  6A3E               	clrf	_flags^0,c
 11755  0123F0  6A3F               	clrf	(_flags+1)^0,c
 11756                           
 11757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11758  0123F2  683C               	setf	_prec^0,c
 11759  0123F4  683D               	setf	(_prec+1)^0,c
 11760                           
 11761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11762                           ;stkvar	_fmt @ sp[(-32)+-4]
 11763  0123F6  0EDC               	movlw	-36
 11764  0123F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11765  0123FE  0EDD               	movlw	-35
 11766  012400  006F FF8F FFDA     	movff	plusw1,fsr2h
 11767  012406  006F FF7B FFF6     	movff	postinc2,tblptrl
 11768  01240C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11769  012412                     	if	0	;tblptru may be non-zero
 11770  012412                     	endif
 11771  012412                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11772  012412  0E00               	movlw	low (__mediumconst shr (0+16))
 11773  012414  6EF8               	movwf	tblptru,c
 11774  012416                     	endif
 11775  012416  0008               	tblrd		*
 11776  012418  50F5               	movf	tablat,w,c
 11777  01241A  0A2A               	xorlw	42
 11778  01241C  A4D8               	btfss	status,2,c
 11779  01241E  D031               	goto	l12490
 11780                           
 11781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11782                           ;stkvar	_fmt @ sp[(-32)+-4]
 11783  012420  0EDC               	movlw	-36
 11784  012422  006F FF8F FFD9     	movff	plusw1,fsr2l
 11785  012428  0EDD               	movlw	-35
 11786  01242A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11787  012430  2ADE               	incf	postinc2,f,c
 11788  012432  0E00               	movlw	0
 11789  012434  22DD               	addwfc	postdec2,f,c
 11790                           
 11791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11792                           ;stkvar	_ap @ sp[(-32)+-6]
 11793  012436  0EDA               	movlw	-38
 11794  012438  006F FF8F FFD9     	movff	plusw1,fsr2l
 11795  01243E  0EDB               	movlw	-37
 11796  012440  006F FF8F FFDA     	movff	plusw1,fsr2h
 11797  012446  0E02               	movlw	2
 11798  012448  5EDE               	subwf	postinc2,f,c
 11799  01244A  0E00               	movlw	0
 11800  01244C  5ADD               	subwfb	postdec2,f,c
 11801  01244E  006F FF78  F00B    	movff	postinc2,btemp+10
 11802  012454  006F FF74  F00C    	movff	postdec2,btemp+11
 11803  01245A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11804  012460  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11805  012466  006F FF78  F03A    	movff	postinc2,_width
 11806  01246C  006F FF74  F03B    	movff	postdec2,_width+1
 11807                           
 11808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11809  012472  AE3B               	btfss	(_width+1)^0,7,c
 11810  012474  D066               	goto	u12020
 11811                           
 11812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11813  012476  803E               	bsf	_flags^0,0,c
 11814                           
 11815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11816  012478  6C3A               	negf	_width^0,c
 11817  01247A  1E3B               	comf	(_width+1)^0,f,c
 11818  01247C  B0D8               	btfsc	status,0,c
 11819  01247E  2A3B               	incf	(_width+1)^0,f,c
 11820  012480  D060               	goto	u12020
 11821  012482                     l12490:
 11822                           
 11823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11824                           ;stkvar	_fmt @ sp[(-32)+-4]
 11825  012482  0EDC               	movlw	-36
 11826  012484  006F FF8F FFD9     	movff	plusw1,fsr2l
 11827  01248A  0EDD               	movlw	-35
 11828  01248C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11829  012492  006F FF78  F00B    	movff	postinc2,btemp+10
 11830  012498  006F FF74  F00C    	movff	postdec2,btemp+11
 11831  01249E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11832  0124A4  0060  F033  FFE6   	movff	btemp+11,postinc1
 11833  0124AA  EC99  F0BC         	call	_atoi	;wreg free
 11834  0124AE  0060  F004  F03A   	movff	btemp,_width
 11835  0124B4  0060  F008  F03B   	movff	btemp+1,_width+1
 11836                           
 11837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11838  0124BA  D00B               	goto	l12494
 11839  0124BC                     l12492:
 11840                           
 11841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11842                           ;stkvar	_fmt @ sp[(-32)+-4]
 11843  0124BC  0EDC               	movlw	-36
 11844  0124BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11845  0124C4  0EDD               	movlw	-35
 11846  0124C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11847  0124CC  2ADE               	incf	postinc2,f,c
 11848  0124CE  0E00               	movlw	0
 11849  0124D0  22DD               	addwfc	postdec2,f,c
 11850  0124D2                     l12494:
 11851  0124D2  0ED0               	movlw	208
 11852  0124D4  6E0B               	movwf	(btemp+10)^0,c
 11853  0124D6  0EFF               	movlw	255
 11854  0124D8  6E0C               	movwf	(btemp+11)^0,c
 11855                           
 11856                           ;stkvar	_fmt @ sp[(-32)+-4]
 11857  0124DA  0EDC               	movlw	-36
 11858  0124DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11859  0124E2  0EDD               	movlw	-35
 11860  0124E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11861  0124EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11862  0124F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11863  0124F6                     	if	0	;tblptru may be non-zero
 11864  0124F6                     	endif
 11865  0124F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11866  0124F6  0E00               	movlw	low (__mediumconst shr (0+16))
 11867  0124F8  6EF8               	movwf	tblptru,c
 11868  0124FA                     	endif
 11869  0124FA  0008               	tblrd		*
 11870  0124FC  50F5               	movf	tablat,w,c
 11871  0124FE  6E09               	movwf	(btemp+8)^0,c
 11872  012500  6A0A               	clrf	(btemp+9)^0,c
 11873  012502  500B               	movf	(btemp+10)^0,w,c
 11874  012504  2609               	addwf	(btemp+8)^0,f,c
 11875  012506  500C               	movf	(btemp+11)^0,w,c
 11876  012508  220A               	addwfc	(btemp+9)^0,f,c
 11877  01250A  500A               	movf	(btemp+9)^0,w,c
 11878  01250C  E106               	bnz	u12000
 11879  01250E  0E0A               	movlw	10
 11880  012510  5C09               	subwf	(btemp+8)^0,w,c
 11881  012512  B0D8               	btfsc	status,0,c
 11882  012514  D002               	goto	u12000
 11883  012516  0E01               	movlw	1
 11884  012518  D001               	goto	u12010
 11885  01251A                     u12000:
 11886  01251A  0E00               	movlw	0
 11887  01251C                     u12010:
 11888  01251C  6E0B               	movwf	(btemp+10)^0,c
 11889  01251E  6A0C               	clrf	(btemp+11)^0,c
 11890                           
 11891                           ;stkvar	_vfpfcnvrt$5570 @ sp[(-32)+4]
 11892  012520  0EE4               	movlw	-28
 11893  012522  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11894  012528  0EE5               	movlw	-27
 11895  01252A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11896                           
 11897                           ;stkvar	_vfpfcnvrt$5570 @ sp[(-32)+4]
 11898  012530  0EE4               	movlw	-28
 11899  012532  006F FF8C  F001    	movff	plusw1,btemp
 11900  012538  0EE5               	movlw	-27
 11901  01253A  50E3               	movf	plusw1,w,c
 11902  01253C  1001               	iorwf	btemp^0,w,c
 11903  01253E  A4D8               	btfss	status,2,c
 11904  012540  D7BD               	goto	l12492
 11905  012542                     u12020:
 11906                           
 11907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11908                           ;stkvar	_fmt @ sp[(-32)+-4]
 11909  012542  0EDC               	movlw	-36
 11910  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 11911  01254A  0EDD               	movlw	-35
 11912  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11913  012552  006F FF7B FFF6     	movff	postinc2,tblptrl
 11914  012558  006F FF77 FFF7     	movff	postdec2,tblptrh
 11915  01255E                     	if	0	;tblptru may be non-zero
 11916  01255E                     	endif
 11917  01255E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11918  01255E  0E00               	movlw	low (__mediumconst shr (0+16))
 11919  012560  6EF8               	movwf	tblptru,c
 11920  012562                     	endif
 11921  012562  0008               	tblrd		*
 11922  012564  50F5               	movf	tablat,w,c
 11923  012566  0A2E               	xorlw	46
 11924  012568  A4D8               	btfss	status,2,c
 11925  01256A  D0AC               	goto	u12070
 11926                           
 11927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11928  01256C  6A3C               	clrf	_prec^0,c
 11929  01256E  6A3D               	clrf	(_prec+1)^0,c
 11930                           
 11931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11932                           ;stkvar	_fmt @ sp[(-32)+-4]
 11933  012570  0EDC               	movlw	-36
 11934  012572  006F FF8F FFD9     	movff	plusw1,fsr2l
 11935  012578  0EDD               	movlw	-35
 11936  01257A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11937  012580  2ADE               	incf	postinc2,f,c
 11938  012582  0E00               	movlw	0
 11939  012584  22DD               	addwfc	postdec2,f,c
 11940                           
 11941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11942                           ;stkvar	_fmt @ sp[(-32)+-4]
 11943  012586  0EDC               	movlw	-36
 11944  012588  006F FF8F FFD9     	movff	plusw1,fsr2l
 11945  01258E  0EDD               	movlw	-35
 11946  012590  006F FF8F FFDA     	movff	plusw1,fsr2h
 11947  012596  006F FF7B FFF6     	movff	postinc2,tblptrl
 11948  01259C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11949  0125A2                     	if	0	;tblptru may be non-zero
 11950  0125A2                     	endif
 11951  0125A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11952  0125A2  0E00               	movlw	low (__mediumconst shr (0+16))
 11953  0125A4  6EF8               	movwf	tblptru,c
 11954  0125A6                     	endif
 11955  0125A6  0008               	tblrd		*
 11956  0125A8  50F5               	movf	tablat,w,c
 11957  0125AA  0A2A               	xorlw	42
 11958  0125AC  A4D8               	btfss	status,2,c
 11959  0125AE  D02A               	goto	l12512
 11960                           
 11961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11962                           ;stkvar	_fmt @ sp[(-32)+-4]
 11963  0125B0  0EDC               	movlw	-36
 11964  0125B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11965  0125B8  0EDD               	movlw	-35
 11966  0125BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11967  0125C0  2ADE               	incf	postinc2,f,c
 11968  0125C2  0E00               	movlw	0
 11969  0125C4  22DD               	addwfc	postdec2,f,c
 11970                           
 11971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11972                           ;stkvar	_ap @ sp[(-32)+-6]
 11973  0125C6  0EDA               	movlw	-38
 11974  0125C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11975  0125CE  0EDB               	movlw	-37
 11976  0125D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11977  0125D6  0E02               	movlw	2
 11978  0125D8  5EDE               	subwf	postinc2,f,c
 11979  0125DA  0E00               	movlw	0
 11980  0125DC  5ADD               	subwfb	postdec2,f,c
 11981  0125DE  006F FF78  F00B    	movff	postinc2,btemp+10
 11982  0125E4  006F FF74  F00C    	movff	postdec2,btemp+11
 11983  0125EA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11984  0125F0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11985  0125F6  006F FF78  F03C    	movff	postinc2,_prec
 11986  0125FC  006F FF74  F03D    	movff	postdec2,_prec+1
 11987                           
 11988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11989  012602  D060               	goto	u12070
 11990  012604                     l12512:
 11991                           
 11992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11993                           ;stkvar	_fmt @ sp[(-32)+-4]
 11994  012604  0EDC               	movlw	-36
 11995  012606  006F FF8F FFD9     	movff	plusw1,fsr2l
 11996  01260C  0EDD               	movlw	-35
 11997  01260E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11998  012614  006F FF78  F00B    	movff	postinc2,btemp+10
 11999  01261A  006F FF74  F00C    	movff	postdec2,btemp+11
 12000  012620  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12001  012626  0060  F033  FFE6   	movff	btemp+11,postinc1
 12002  01262C  EC99  F0BC         	call	_atoi	;wreg free
 12003  012630  0060  F004  F03C   	movff	btemp,_prec
 12004  012636  0060  F008  F03D   	movff	btemp+1,_prec+1
 12005                           
 12006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12007  01263C  D00B               	goto	l12516
 12008  01263E                     l12514:
 12009                           
 12010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 12011                           ;stkvar	_fmt @ sp[(-32)+-4]
 12012  01263E  0EDC               	movlw	-36
 12013  012640  006F FF8F FFD9     	movff	plusw1,fsr2l
 12014  012646  0EDD               	movlw	-35
 12015  012648  006F FF8F FFDA     	movff	plusw1,fsr2h
 12016  01264E  2ADE               	incf	postinc2,f,c
 12017  012650  0E00               	movlw	0
 12018  012652  22DD               	addwfc	postdec2,f,c
 12019  012654                     l12516:
 12020  012654  0ED0               	movlw	208
 12021  012656  6E0B               	movwf	(btemp+10)^0,c
 12022  012658  0EFF               	movlw	255
 12023  01265A  6E0C               	movwf	(btemp+11)^0,c
 12024                           
 12025                           ;stkvar	_fmt @ sp[(-32)+-4]
 12026  01265C  0EDC               	movlw	-36
 12027  01265E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12028  012664  0EDD               	movlw	-35
 12029  012666  006F FF8F FFDA     	movff	plusw1,fsr2h
 12030  01266C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12031  012672  006F FF77 FFF7     	movff	postdec2,tblptrh
 12032  012678                     	if	0	;tblptru may be non-zero
 12033  012678                     	endif
 12034  012678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12035  012678  0E00               	movlw	low (__mediumconst shr (0+16))
 12036  01267A  6EF8               	movwf	tblptru,c
 12037  01267C                     	endif
 12038  01267C  0008               	tblrd		*
 12039  01267E  50F5               	movf	tablat,w,c
 12040  012680  6E09               	movwf	(btemp+8)^0,c
 12041  012682  6A0A               	clrf	(btemp+9)^0,c
 12042  012684  500B               	movf	(btemp+10)^0,w,c
 12043  012686  2609               	addwf	(btemp+8)^0,f,c
 12044  012688  500C               	movf	(btemp+11)^0,w,c
 12045  01268A  220A               	addwfc	(btemp+9)^0,f,c
 12046  01268C  500A               	movf	(btemp+9)^0,w,c
 12047  01268E  E106               	bnz	u12050
 12048  012690  0E0A               	movlw	10
 12049  012692  5C09               	subwf	(btemp+8)^0,w,c
 12050  012694  B0D8               	btfsc	status,0,c
 12051  012696  D002               	goto	u12050
 12052  012698  0E01               	movlw	1
 12053  01269A  D001               	goto	u12060
 12054  01269C                     u12050:
 12055  01269C  0E00               	movlw	0
 12056  01269E                     u12060:
 12057  01269E  6E0B               	movwf	(btemp+10)^0,c
 12058  0126A0  6A0C               	clrf	(btemp+11)^0,c
 12059                           
 12060                           ;stkvar	_vfpfcnvrt$5571 @ sp[(-32)+0]
 12061  0126A2  0EE0               	movlw	-32
 12062  0126A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12063  0126AA  0EE1               	movlw	-31
 12064  0126AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12065                           
 12066                           ;stkvar	_vfpfcnvrt$5571 @ sp[(-32)+0]
 12067  0126B2  0EE0               	movlw	-32
 12068  0126B4  006F FF8C  F001    	movff	plusw1,btemp
 12069  0126BA  0EE1               	movlw	-31
 12070  0126BC  50E3               	movf	plusw1,w,c
 12071  0126BE  1001               	iorwf	btemp^0,w,c
 12072  0126C0  A4D8               	btfss	status,2,c
 12073  0126C2  D7BD               	goto	l12514
 12074  0126C4                     u12070:
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12077                           ;stkvar	_fmt @ sp[(-32)+-4]
 12078  0126C4  0EDC               	movlw	-36
 12079  0126C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12080  0126CC  0EDD               	movlw	-35
 12081  0126CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12082  0126D4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12083  0126DA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12084  0126E0                     	if	0	;tblptru may be non-zero
 12085  0126E0                     	endif
 12086  0126E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12087  0126E0  0E00               	movlw	low (__mediumconst shr (0+16))
 12088  0126E2  6EF8               	movwf	tblptru,c
 12089  0126E4                     	endif
 12090  0126E4  0008               	tblrd		*
 12091  0126E6  50F5               	movf	tablat,w,c
 12092  0126E8  6EE6               	movwf	postinc1,c
 12093  0126EA  0E00               	movlw	0
 12094  0126EC  6EE6               	movwf	postinc1,c
 12095  0126EE  EC95  F0D6         	call	_tolower	;wreg free
 12096                           
 12097                           ;stkvar	_ct @ sp[(-32)+26]
 12098  0126F2  0EFA               	movlw	-6
 12099  0126F4  0060  F007  FFE3   	movff	btemp,plusw1
 12100                           
 12101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12102                           ;stkvar	_ct @ sp[(-32)+26]
 12103  0126FA  0EFA               	movlw	-6
 12104  0126FC  50E3               	movf	plusw1,w,c
 12105  0126FE  B4D8               	btfsc	status,2,c
 12106  012700  D05B               	goto	l12532
 12107                           
 12108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12109                           ;stkvar	_ct @ sp[(-32)+26]
 12110  012702  0EFB               	movlw	251
 12111  012704  24E1               	addwf	fsr1l,w,c
 12112  012706  6ED9               	movwf	fsr2l,c
 12113  012708  0EFF               	movlw	255
 12114  01270A  20E2               	addwfc	fsr1h,w,c
 12115  01270C  6EDA               	movwf	fsr2h,c
 12116                           
 12117                           ;stkvar	_fmt @ sp[(-32)+-4]
 12118  01270E  0EDC               	movlw	-36
 12119  012710  006F FF8F FFE9     	movff	plusw1,fsr0l
 12120  012716  0EDD               	movlw	-35
 12121  012718  006F FF8F FFEA     	movff	plusw1,fsr0h
 12122  01271E  006F FFB8  F00B    	movff	postinc0,btemp+10
 12123  012724  006F FFB4  F00C    	movff	postdec0,btemp+11
 12124  01272A  0E01               	movlw	1
 12125  01272C  260B               	addwf	(btemp+10)^0,f,c
 12126  01272E  0E00               	movlw	0
 12127  012730  220C               	addwfc	(btemp+11)^0,f,c
 12128  012732  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12129  012738  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12130  01273E                     	if	0	;tblptru may be non-zero
 12131  01273E                     	endif
 12132  01273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12133  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 12134  012740  6EF8               	movwf	tblptru,c
 12135  012742                     	endif
 12136  012742  0008               	tblrd		*
 12137  012744  50F5               	movf	tablat,w,c
 12138  012746  6EE6               	movwf	postinc1,c
 12139  012748  0E00               	movlw	0
 12140  01274A  6EE6               	movwf	postinc1,c
 12141  01274C  EC95  F0D6         	call	_tolower	;wreg free
 12142  012750  5001               	movf	btemp^0,w,c
 12143  012752  6EDF               	movwf	indf2,c
 12144                           
 12145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12146                           ;stkvar	_ct @ sp[(-32)+26]
 12147  012754  0EFB               	movlw	251
 12148  012756  24E1               	addwf	fsr1l,w,c
 12149  012758  6ED9               	movwf	fsr2l,c
 12150  01275A  0EFF               	movlw	255
 12151  01275C  20E2               	addwfc	fsr1h,w,c
 12152  01275E  6EDA               	movwf	fsr2h,c
 12153  012760  50DF               	movf	indf2,w,c
 12154  012762  B4D8               	btfsc	status,2,c
 12155  012764  D029               	goto	l12532
 12156                           
 12157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12158                           ;stkvar	_ct @ sp[(-32)+26]
 12159  012766  0EFC               	movlw	252
 12160  012768  24E1               	addwf	fsr1l,w,c
 12161  01276A  6ED9               	movwf	fsr2l,c
 12162  01276C  0EFF               	movlw	255
 12163  01276E  20E2               	addwfc	fsr1h,w,c
 12164  012770  6EDA               	movwf	fsr2h,c
 12165                           
 12166                           ;stkvar	_fmt @ sp[(-32)+-4]
 12167  012772  0EDC               	movlw	-36
 12168  012774  006F FF8F FFE9     	movff	plusw1,fsr0l
 12169  01277A  0EDD               	movlw	-35
 12170  01277C  006F FF8F FFEA     	movff	plusw1,fsr0h
 12171  012782  006F FFB8  F00B    	movff	postinc0,btemp+10
 12172  012788  006F FFB4  F00C    	movff	postdec0,btemp+11
 12173  01278E  0E02               	movlw	2
 12174  012790  260B               	addwf	(btemp+10)^0,f,c
 12175  012792  0E00               	movlw	0
 12176  012794  220C               	addwfc	(btemp+11)^0,f,c
 12177  012796  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12178  01279C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12179  0127A2                     	if	0	;tblptru may be non-zero
 12180  0127A2                     	endif
 12181  0127A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12182  0127A2  0E00               	movlw	low (__mediumconst shr (0+16))
 12183  0127A4  6EF8               	movwf	tblptru,c
 12184  0127A6                     	endif
 12185  0127A6  0008               	tblrd		*
 12186  0127A8  50F5               	movf	tablat,w,c
 12187  0127AA  6EE6               	movwf	postinc1,c
 12188  0127AC  0E00               	movlw	0
 12189  0127AE  6EE6               	movwf	postinc1,c
 12190  0127B0  EC95  F0D6         	call	_tolower	;wreg free
 12191  0127B4  5001               	movf	btemp^0,w,c
 12192  0127B6  6EDF               	movwf	indf2,c
 12193  0127B8                     l12532:
 12194                           
 12195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12196                           ;stkvar	_fmt @ sp[(-32)+-4]
 12197  0127B8  0EDC               	movlw	-36
 12198  0127BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12199  0127C0  0EDD               	movlw	-35
 12200  0127C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12201  0127C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12202  0127CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12203  0127D4                     	if	0	;tblptru may be non-zero
 12204  0127D4                     	endif
 12205  0127D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12206  0127D4  0E00               	movlw	low (__mediumconst shr (0+16))
 12207  0127D6  6EF8               	movwf	tblptru,c
 12208  0127D8                     	endif
 12209  0127D8  0008               	tblrd		*
 12210  0127DA  50F5               	movf	tablat,w,c
 12211  0127DC  0A63               	xorlw	99
 12212  0127DE  A4D8               	btfss	status,2,c
 12213  0127E0  D037               	goto	l12542
 12214                           
 12215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12216                           ;stkvar	_fmt @ sp[(-32)+-4]
 12217  0127E2  0EDC               	movlw	-36
 12218  0127E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12219  0127EA  0EDD               	movlw	-35
 12220  0127EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12221  0127F2  2ADE               	incf	postinc2,f,c
 12222  0127F4  0E00               	movlw	0
 12223  0127F6  22DD               	addwfc	postdec2,f,c
 12224                           
 12225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12226                           ;stkvar	_ap @ sp[(-32)+-6]
 12227  0127F8  0EDA               	movlw	-38
 12228  0127FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12229  012800  0EDB               	movlw	-37
 12230  012802  006F FF8F FFDA     	movff	plusw1,fsr2h
 12231  012808  0E02               	movlw	2
 12232  01280A  5EDE               	subwf	postinc2,f,c
 12233  01280C  0E00               	movlw	0
 12234  01280E  5ADD               	subwfb	postdec2,f,c
 12235  012810  006F FF78  F00B    	movff	postinc2,btemp+10
 12236  012816  006F FF74  F00C    	movff	postdec2,btemp+11
 12237  01281C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12238  012822  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12239  012828  50DF               	movf	indf2,w,c
 12240  01282A  6E0C               	movwf	(btemp+11)^0,c
 12241                           
 12242                           ;stkvar	_c @ sp[(-32)+31]
 12243  01282C  0EFF               	movlw	-1
 12244  01282E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12245                           
 12246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 12247                           ;stkvar	_c @ sp[(-32)+31]
 12248  012834  0EFF               	movlw	-1
 12249  012836  50E3               	movf	plusw1,w,c
 12250  012838  6EE6               	movwf	postinc1,c
 12251                           
 12252                           ;stkvar	_fp @ sp[(-33)+-2]
 12253  01283A  0EDD               	movlw	-35
 12254  01283C  006F FF8F FFE6     	movff	plusw1,postinc1
 12255  012842  006F FF8F FFE6     	movff	plusw1,postinc1
 12256  012848  EC0F  F0D6         	call	_ctoa	;wreg free
 12257  01284C  EFA1  F099         	goto	l2362
 12258  012850                     l12542:
 12259                           
 12260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 12261                           ;stkvar	_fmt @ sp[(-32)+-4]
 12262  012850  0EDC               	movlw	-36
 12263  012852  006F FF8F FFD9     	movff	plusw1,fsr2l
 12264  012858  0EDD               	movlw	-35
 12265  01285A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12266  012860  006F FF7B FFF6     	movff	postinc2,tblptrl
 12267  012866  006F FF77 FFF7     	movff	postdec2,tblptrh
 12268  01286C                     	if	0	;tblptru may be non-zero
 12269  01286C                     	endif
 12270  01286C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12271  01286C  0E00               	movlw	low (__mediumconst shr (0+16))
 12272  01286E  6EF8               	movwf	tblptru,c
 12273  012870                     	endif
 12274  012870  0008               	tblrd		*
 12275  012872  50F5               	movf	tablat,w,c
 12276  012874  0A64               	xorlw	100
 12277  012876  B4D8               	btfsc	status,2,c
 12278  012878  D015               	goto	u12120
 12279                           
 12280                           ;stkvar	_fmt @ sp[(-32)+-4]
 12281  01287A  0EDC               	movlw	-36
 12282  01287C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12283  012882  0EDD               	movlw	-35
 12284  012884  006F FF8F FFDA     	movff	plusw1,fsr2h
 12285  01288A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12286  012890  006F FF77 FFF7     	movff	postdec2,tblptrh
 12287  012896                     	if	0	;tblptru may be non-zero
 12288  012896                     	endif
 12289  012896                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12290  012896  0E00               	movlw	low (__mediumconst shr (0+16))
 12291  012898  6EF8               	movwf	tblptru,c
 12292  01289A                     	endif
 12293  01289A  0008               	tblrd		*
 12294  01289C  50F5               	movf	tablat,w,c
 12295  01289E  0A69               	xorlw	105
 12296  0128A0  A4D8               	btfss	status,2,c
 12297  0128A2  D076               	goto	l12554
 12298  0128A4                     u12120:
 12299                           
 12300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 12301                           ;stkvar	_fmt @ sp[(-32)+-4]
 12302  0128A4  0EDC               	movlw	-36
 12303  0128A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12304  0128AC  0EDD               	movlw	-35
 12305  0128AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12306  0128B4  2ADE               	incf	postinc2,f,c
 12307  0128B6  0E00               	movlw	0
 12308  0128B8  22DD               	addwfc	postdec2,f,c
 12309                           
 12310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 12311                           ;stkvar	_ap @ sp[(-32)+-6]
 12312  0128BA  0EDA               	movlw	-38
 12313  0128BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12314  0128C2  0EDB               	movlw	-37
 12315  0128C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12316  0128CA  0E02               	movlw	2
 12317  0128CC  5EDE               	subwf	postinc2,f,c
 12318  0128CE  0E00               	movlw	0
 12319  0128D0  5ADD               	subwfb	postdec2,f,c
 12320  0128D2  006F FF78  F00B    	movff	postinc2,btemp+10
 12321  0128D8  006F FF74  F00C    	movff	postdec2,btemp+11
 12322  0128DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12323  0128E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12324  0128EA  006F FF78  F00B    	movff	postinc2,btemp+10
 12325  0128F0  006F FF74  F00C    	movff	postdec2,btemp+11
 12326                           
 12327                           ;stkvar	_ll @ sp[(-32)+14]
 12328  0128F6  0EEE               	movlw	-18
 12329  0128F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12330  0128FE  0EEF               	movlw	-17
 12331  012900  0060  F033  FFE3   	movff	btemp+11,plusw1
 12332  012906  6A01               	clrf	btemp^0,c
 12333  012908  BEE3               	btfsc	plusw1,7,c
 12334  01290A  6801               	setf	btemp^0,c
 12335  01290C  0EF0               	movlw	-16
 12336  01290E  0060  F007  FFE3   	movff	btemp,plusw1
 12337  012914  0EF1               	movlw	-15
 12338  012916  0060  F007  FFE3   	movff	btemp,plusw1
 12339  01291C  0EF2               	movlw	-14
 12340  01291E  0060  F007  FFE3   	movff	btemp,plusw1
 12341  012924  0EF3               	movlw	-13
 12342  012926  0060  F007  FFE3   	movff	btemp,plusw1
 12343  01292C  0EF4               	movlw	-12
 12344  01292E  0060  F007  FFE3   	movff	btemp,plusw1
 12345  012934  0EF5               	movlw	-11
 12346  012936  0060  F007  FFE3   	movff	btemp,plusw1
 12347  01293C                     l12550:
 12348                           
 12349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 12350                           ;stkvar	_ll @ sp[(-32)+14]
 12351  01293C  50E1               	movf	fsr1l,w,c
 12352  01293E  0FEE               	addlw	-18
 12353  012940  6ED9               	movwf	fsr2l,c
 12354  012942  50E2               	movf	fsr1h,w,c
 12355  012944  6EDA               	movwf	fsr2h,c
 12356  012946  0EFF               	movlw	255
 12357  012948  22DA               	addwfc	fsr2h,f,c
 12358  01294A  006F FF7B FFE6     	movff	postinc2,postinc1
 12359  012950  006F FF7B FFE6     	movff	postinc2,postinc1
 12360  012956  006F FF7B FFE6     	movff	postinc2,postinc1
 12361  01295C  006F FF7B FFE6     	movff	postinc2,postinc1
 12362  012962  006F FF7B FFE6     	movff	postinc2,postinc1
 12363  012968  006F FF7B FFE6     	movff	postinc2,postinc1
 12364  01296E  006F FF7B FFE6     	movff	postinc2,postinc1
 12365  012974  006F FF7B FFE6     	movff	postinc2,postinc1
 12366                           
 12367                           ;stkvar	_fp @ sp[(-40)+-2]
 12368  01297A  0ED6               	movlw	-42
 12369  01297C  006F FF8F FFE6     	movff	plusw1,postinc1
 12370  012982  006F FF8F FFE6     	movff	plusw1,postinc1
 12371  012988  ECED  F0AB         	call	_dtoa	;wreg free
 12372  01298C  EFA1  F099         	goto	l2362
 12373  012990                     l12554:
 12374                           
 12375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 12376  012990  0E02               	movlw	2
 12377  012992  6EE6               	movwf	postinc1,c
 12378  012994  0E00               	movlw	0
 12379  012996  6EE6               	movwf	postinc1,c
 12380  012998  0EEA               	movlw	low STR_73
 12381  01299A  6EE6               	movwf	postinc1,c
 12382  01299C  0EFF               	movlw	high STR_73
 12383  01299E  6EE6               	movwf	postinc1,c
 12384                           
 12385                           ;stkvar	_fmt @ sp[(-36)+-4]
 12386  0129A0  0ED8               	movlw	-40
 12387  0129A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12388  0129A8  0ED9               	movlw	-39
 12389  0129AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12390  0129B0  006F FF78  F00B    	movff	postinc2,btemp+10
 12391  0129B6  006F FF74  F00C    	movff	postdec2,btemp+11
 12392  0129BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12393  0129C2  0060  F033  FFE6   	movff	btemp+11,postinc1
 12394  0129C8  EC16  F0C0         	call	_strncmp	;wreg free
 12395  0129CC  5001               	movf	btemp^0,w,c
 12396  0129CE  1002               	iorwf	(btemp+1)^0,w,c
 12397  0129D0  B4D8               	btfsc	status,2,c
 12398  0129D2  D022               	goto	u12140
 12399  0129D4  0E02               	movlw	2
 12400  0129D6  6EE6               	movwf	postinc1,c
 12401  0129D8  0E00               	movlw	0
 12402  0129DA  6EE6               	movwf	postinc1,c
 12403  0129DC  0EF0               	movlw	low STR_77
 12404  0129DE  6EE6               	movwf	postinc1,c
 12405  0129E0  0EFF               	movlw	high STR_77
 12406  0129E2  6EE6               	movwf	postinc1,c
 12407                           
 12408                           ;stkvar	_fmt @ sp[(-36)+-4]
 12409  0129E4  0ED8               	movlw	-40
 12410  0129E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12411  0129EC  0ED9               	movlw	-39
 12412  0129EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12413  0129F4  006F FF78  F00B    	movff	postinc2,btemp+10
 12414  0129FA  006F FF74  F00C    	movff	postdec2,btemp+11
 12415  012A00  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12416  012A06  0060  F033  FFE6   	movff	btemp+11,postinc1
 12417  012A0C  EC16  F0C0         	call	_strncmp	;wreg free
 12418  012A10  5001               	movf	btemp^0,w,c
 12419  012A12  1002               	iorwf	(btemp+1)^0,w,c
 12420  012A14  A4D8               	btfss	status,2,c
 12421  012A16  D069               	goto	l12566
 12422  012A18                     u12140:
 12423                           
 12424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12425                           ;stkvar	_fmt @ sp[(-32)+-4]
 12426  012A18  0EDC               	movlw	-36
 12427  012A1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12428  012A20  0EDD               	movlw	-35
 12429  012A22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12430  012A28  0E02               	movlw	2
 12431  012A2A  26DE               	addwf	postinc2,f,c
 12432  012A2C  0E00               	movlw	0
 12433  012A2E  22DD               	addwfc	postdec2,f,c
 12434                           
 12435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12436                           ;stkvar	_ap @ sp[(-32)+-6]
 12437  012A30  0EDA               	movlw	-38
 12438  012A32  006F FF8F FFD9     	movff	plusw1,fsr2l
 12439  012A38  0EDB               	movlw	-37
 12440  012A3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12441  012A40  0E04               	movlw	4
 12442  012A42  5EDE               	subwf	postinc2,f,c
 12443  012A44  0E00               	movlw	0
 12444  012A46  5ADD               	subwfb	postdec2,f,c
 12445  012A48  006F FF78  F00B    	movff	postinc2,btemp+10
 12446  012A4E  006F FF74  F00C    	movff	postdec2,btemp+11
 12447  012A54  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12448  012A5A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12449  012A60  006F FF78  F009    	movff	postinc2,btemp+8
 12450  012A66  006F FF78  F00A    	movff	postinc2,btemp+9
 12451  012A6C  006F FF78  F00B    	movff	postinc2,btemp+10
 12452  012A72  006F FF78  F00C    	movff	postinc2,btemp+11
 12453  012A78  0060  F024  F011   	movff	btemp+8,btemp+16
 12454  012A7E  0060  F028  F012   	movff	btemp+9,btemp+17
 12455  012A84  0060  F02C  F013   	movff	btemp+10,btemp+18
 12456  012A8A  0060  F030  F014   	movff	btemp+11,btemp+19
 12457  012A90  6A15               	clrf	(btemp+20)^0,c
 12458  012A92  BE14               	btfsc	(btemp+19)^0,7,c
 12459  012A94  6815               	setf	(btemp+20)^0,c
 12460  012A96  0060  F054  F016   	movff	btemp+20,btemp+21
 12461  012A9C  0060  F054  F017   	movff	btemp+20,btemp+22
 12462  012AA2  0060  F054  F018   	movff	btemp+20,btemp+23
 12463                           
 12464                           ;stkvar	_ll @ sp[(-32)+14]
 12465  012AA8  0EEE               	movlw	-18
 12466  012AAA  0060  F047  FFE3   	movff	btemp+16,plusw1
 12467  012AB0  0EEF               	movlw	-17
 12468  012AB2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12469  012AB8  0EF0               	movlw	-16
 12470  012ABA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12471  012AC0  0EF1               	movlw	-15
 12472  012AC2  0060  F053  FFE3   	movff	btemp+19,plusw1
 12473  012AC8  0EF2               	movlw	-14
 12474  012ACA  0060  F057  FFE3   	movff	btemp+20,plusw1
 12475  012AD0  0EF3               	movlw	-13
 12476  012AD2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12477  012AD8  0EF4               	movlw	-12
 12478  012ADA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12479  012AE0  0EF5               	movlw	-11
 12480  012AE2  0060  F063  FFE3   	movff	btemp+23,plusw1
 12481  012AE8  D729               	goto	l12550
 12482  012AEA                     l12566:
 12483                           
 12484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12485                           ;stkvar	_ct @ sp[(-32)+26]
 12486  012AEA  0EFA               	movlw	-6
 12487  012AEC  006F FF8C  F001    	movff	plusw1,btemp
 12488  012AF2  0E66               	movlw	102
 12489  012AF4  1801               	xorwf	btemp^0,w,c
 12490  012AF6  A4D8               	btfss	status,2,c
 12491  012AF8  D06E               	goto	l12578
 12492                           
 12493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12494                           ;stkvar	_fmt @ sp[(-32)+-4]
 12495  012AFA  0EDC               	movlw	-36
 12496  012AFC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12497  012B02  0EDD               	movlw	-35
 12498  012B04  006F FF8F FFDA     	movff	plusw1,fsr2h
 12499  012B0A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12500  012B10  006F FF77 FFF7     	movff	postdec2,tblptrh
 12501  012B16                     	if	0	;tblptru may be non-zero
 12502  012B16                     	endif
 12503  012B16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12504  012B16  0E00               	movlw	low (__mediumconst shr (0+16))
 12505  012B18  6EF8               	movwf	tblptru,c
 12506  012B1A                     	endif
 12507                           
 12508                           ;stkvar	_c @ sp[(-32)+31]
 12509  012B1A  0008               	tblrd		*
 12510  012B1C  0EFF               	movlw	-1
 12511  012B1E  006F FFD7 FFE3     	movff	tablat,plusw1
 12512                           
 12513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12514                           ;stkvar	_fmt @ sp[(-32)+-4]
 12515  012B24  0EDC               	movlw	-36
 12516  012B26  006F FF8F FFD9     	movff	plusw1,fsr2l
 12517  012B2C  0EDD               	movlw	-35
 12518  012B2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12519  012B34  2ADE               	incf	postinc2,f,c
 12520  012B36  0E00               	movlw	0
 12521  012B38  22DD               	addwfc	postdec2,f,c
 12522                           
 12523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12524                           ;stkvar	_ap @ sp[(-32)+-6]
 12525  012B3A  0EDA               	movlw	-38
 12526  012B3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12527  012B42  0EDB               	movlw	-37
 12528  012B44  006F FF8F FFDA     	movff	plusw1,fsr2h
 12529  012B4A  0E04               	movlw	4
 12530  012B4C  5EDE               	subwf	postinc2,f,c
 12531  012B4E  0E00               	movlw	0
 12532  012B50  5ADD               	subwfb	postdec2,f,c
 12533  012B52  006F FF78  F00B    	movff	postinc2,btemp+10
 12534  012B58  006F FF74  F00C    	movff	postdec2,btemp+11
 12535  012B5E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12536  012B64  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12537  012B6A  006F FF78  F009    	movff	postinc2,btemp+8
 12538  012B70  006F FF78  F00A    	movff	postinc2,btemp+9
 12539  012B76  006F FF78  F00B    	movff	postinc2,btemp+10
 12540  012B7C  006F FF78  F00C    	movff	postinc2,btemp+11
 12541                           
 12542                           ;stkvar	_f @ sp[(-32)+22]
 12543  012B82  0EF6               	movlw	-10
 12544  012B84  0060  F027  FFE3   	movff	btemp+8,plusw1
 12545  012B8A  0EF7               	movlw	-9
 12546  012B8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12547  012B92  0EF8               	movlw	-8
 12548  012B94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12549  012B9A  0EF9               	movlw	-7
 12550  012B9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12551  012BA2                     l12574:
 12552                           
 12553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12554                           ;stkvar	_c @ sp[(-32)+31]
 12555  012BA2  0EFF               	movlw	-1
 12556  012BA4  50E3               	movf	plusw1,w,c
 12557  012BA6  6EE6               	movwf	postinc1,c
 12558                           
 12559                           ;stkvar	_f @ sp[(-33)+22]
 12560  012BA8  0EF5               	movlw	-11
 12561  012BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12562  012BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12563  012BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12564  012BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12565                           
 12566                           ;stkvar	_fp @ sp[(-37)+-2]
 12567  012BC2  0ED9               	movlw	-39
 12568  012BC4  006F FF8F FFE6     	movff	plusw1,postinc1
 12569  012BCA  006F FF8F FFE6     	movff	plusw1,postinc1
 12570  012BD0  EC00  F080         	call	_efgtoa	;wreg free
 12571  012BD4  D3B6               	goto	l2362
 12572  012BD6                     l12578:
 12573                           
 12574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12575  012BD6  0E02               	movlw	2
 12576  012BD8  6EE6               	movwf	postinc1,c
 12577  012BDA  0E00               	movlw	0
 12578  012BDC  6EE6               	movwf	postinc1,c
 12579  012BDE  0EED               	movlw	low STR_82
 12580  012BE0  6EE6               	movwf	postinc1,c
 12581  012BE2  0EFF               	movlw	high STR_82
 12582  012BE4  6EE6               	movwf	postinc1,c
 12583                           
 12584                           ;stkvar	_ct @ sp[(-36)+26]
 12585  012BE6  0EF6               	movlw	246
 12586  012BE8  24E1               	addwf	fsr1l,w,c
 12587  012BEA  6E01               	movwf	btemp^0,c
 12588  012BEC  0EFF               	movlw	255
 12589  012BEE  20E2               	addwfc	fsr1h,w,c
 12590  012BF0  6E02               	movwf	(btemp+1)^0,c
 12591  012BF2  0060  F007  FFE6   	movff	btemp,postinc1
 12592  012BF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12593  012BFE  EC16  F0C0         	call	_strncmp	;wreg free
 12594  012C02  5001               	movf	btemp^0,w,c
 12595  012C04  1002               	iorwf	(btemp+1)^0,w,c
 12596  012C06  A4D8               	btfss	status,2,c
 12597  012C08  D096               	goto	l12598
 12598                           
 12599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12600                           ;stkvar	_fmt @ sp[(-32)+-4]
 12601  012C0A  0EDC               	movlw	-36
 12602  012C0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12603  012C12  0EDD               	movlw	-35
 12604  012C14  006F FF8F FFDA     	movff	plusw1,fsr2h
 12605  012C1A  006F FF78  F00B    	movff	postinc2,btemp+10
 12606  012C20  006F FF74  F00C    	movff	postdec2,btemp+11
 12607  012C26  0E01               	movlw	1
 12608  012C28  260B               	addwf	(btemp+10)^0,f,c
 12609  012C2A  0E00               	movlw	0
 12610  012C2C  220C               	addwfc	(btemp+11)^0,f,c
 12611  012C2E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12612  012C34  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12613  012C3A                     	if	0	;tblptru may be non-zero
 12614  012C3A                     	endif
 12615  012C3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12616  012C3A  0E00               	movlw	low (__mediumconst shr (0+16))
 12617  012C3C  6EF8               	movwf	tblptru,c
 12618  012C3E                     	endif
 12619                           
 12620                           ;stkvar	_c @ sp[(-32)+31]
 12621  012C3E  0008               	tblrd		*
 12622  012C40  0EFF               	movlw	-1
 12623  012C42  006F FFD7 FFE3     	movff	tablat,plusw1
 12624  012C48  0EBF               	movlw	191
 12625  012C4A  6E0B               	movwf	(btemp+10)^0,c
 12626  012C4C  0EFF               	movlw	255
 12627  012C4E  6E0C               	movwf	(btemp+11)^0,c
 12628                           
 12629                           ;stkvar	_fmt @ sp[(-32)+-4]
 12630  012C50  0EDC               	movlw	-36
 12631  012C52  006F FF8F FFD9     	movff	plusw1,fsr2l
 12632  012C58  0EDD               	movlw	-35
 12633  012C5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12634  012C60  006F FF7B FFF6     	movff	postinc2,tblptrl
 12635  012C66  006F FF77 FFF7     	movff	postdec2,tblptrh
 12636  012C6C                     	if	0	;tblptru may be non-zero
 12637  012C6C                     	endif
 12638  012C6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12639  012C6C  0E00               	movlw	low (__mediumconst shr (0+16))
 12640  012C6E  6EF8               	movwf	tblptru,c
 12641  012C70                     	endif
 12642  012C70  0008               	tblrd		*
 12643  012C72  50F5               	movf	tablat,w,c
 12644  012C74  6E09               	movwf	(btemp+8)^0,c
 12645  012C76  6A0A               	clrf	(btemp+9)^0,c
 12646  012C78  500B               	movf	(btemp+10)^0,w,c
 12647  012C7A  2609               	addwf	(btemp+8)^0,f,c
 12648  012C7C  500C               	movf	(btemp+11)^0,w,c
 12649  012C7E  220A               	addwfc	(btemp+9)^0,f,c
 12650  012C80  500A               	movf	(btemp+9)^0,w,c
 12651  012C82  E106               	bnz	u12170
 12652  012C84  0E1A               	movlw	26
 12653  012C86  5C09               	subwf	(btemp+8)^0,w,c
 12654  012C88  B0D8               	btfsc	status,0,c
 12655  012C8A  D002               	goto	u12170
 12656  012C8C  0E01               	movlw	1
 12657  012C8E  D001               	goto	u12180
 12658  012C90                     u12170:
 12659  012C90  0E00               	movlw	0
 12660  012C92                     u12180:
 12661  012C92  6E0B               	movwf	(btemp+10)^0,c
 12662  012C94  6A0C               	clrf	(btemp+11)^0,c
 12663                           
 12664                           ;stkvar	_vfpfcnvrt$5582 @ sp[(-32)+2]
 12665  012C96  0EE2               	movlw	-30
 12666  012C98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12667  012C9E  0EE3               	movlw	-29
 12668  012CA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 12669                           
 12670                           ;stkvar	_vfpfcnvrt$5582 @ sp[(-32)+2]
 12671  012CA6  0EE2               	movlw	-30
 12672  012CA8  006F FF8C  F001    	movff	plusw1,btemp
 12673  012CAE  0EE3               	movlw	-29
 12674  012CB0  50E3               	movf	plusw1,w,c
 12675  012CB2  1001               	iorwf	btemp^0,w,c
 12676                           
 12677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12678                           ;stkvar	_ap @ sp[(-32)+-6]
 12679                           
 12680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12681                           
 12682                           ;stkvar	_f @ sp[(-32)+22]
 12683                           
 12684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12685                           ;stkvar	_ap @ sp[(-32)+-6]
 12686  012CB4  0EDA               	movlw	-38
 12687  012CB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12688  012CBC  0EDB               	movlw	-37
 12689  012CBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12690  012CC4  0E04               	movlw	4
 12691  012CC6  5EDE               	subwf	postinc2,f,c
 12692  012CC8  0E00               	movlw	0
 12693  012CCA  5ADD               	subwfb	postdec2,f,c
 12694  012CCC  006F FF78  F00B    	movff	postinc2,btemp+10
 12695  012CD2  006F FF74  F00C    	movff	postdec2,btemp+11
 12696  012CD8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12697  012CDE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12698  012CE4  006F FF78  F009    	movff	postinc2,btemp+8
 12699  012CEA  006F FF78  F00A    	movff	postinc2,btemp+9
 12700  012CF0  006F FF78  F00B    	movff	postinc2,btemp+10
 12701  012CF6  006F FF78  F00C    	movff	postinc2,btemp+11
 12702                           
 12703                           ;stkvar	_f @ sp[(-32)+22]
 12704  012CFC  0EF6               	movlw	-10
 12705  012CFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 12706  012D04  0EF7               	movlw	-9
 12707  012D06  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12708  012D0C  0EF8               	movlw	-8
 12709  012D0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12710  012D14  0EF9               	movlw	-7
 12711  012D16  0060  F033  FFE3   	movff	btemp+11,plusw1
 12712                           
 12713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12714                           ;stkvar	_fmt @ sp[(-32)+-4]
 12715  012D1C  0EDC               	movlw	-36
 12716  012D1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12717  012D24  0EDD               	movlw	-35
 12718  012D26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12719  012D2C  0E02               	movlw	2
 12720  012D2E  26DE               	addwf	postinc2,f,c
 12721  012D30  0E00               	movlw	0
 12722  012D32  22DD               	addwfc	postdec2,f,c
 12723  012D34  D736               	goto	l12574
 12724  012D36                     l12598:
 12725                           
 12726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12727                           ;stkvar	_fmt @ sp[(-32)+-4]
 12728  012D36  0EDC               	movlw	-36
 12729  012D38  006F FF8F FFD9     	movff	plusw1,fsr2l
 12730  012D3E  0EDD               	movlw	-35
 12731  012D40  006F FF8F FFDA     	movff	plusw1,fsr2h
 12732  012D46  006F FF7B FFF6     	movff	postinc2,tblptrl
 12733  012D4C  006F FF77 FFF7     	movff	postdec2,tblptrh
 12734  012D52                     	if	0	;tblptru may be non-zero
 12735  012D52                     	endif
 12736  012D52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12737  012D52  0E00               	movlw	low (__mediumconst shr (0+16))
 12738  012D54  6EF8               	movwf	tblptru,c
 12739  012D56                     	endif
 12740  012D56  0008               	tblrd		*
 12741  012D58  50F5               	movf	tablat,w,c
 12742  012D5A  0A73               	xorlw	115
 12743  012D5C  A4D8               	btfss	status,2,c
 12744  012D5E  D042               	goto	l12608
 12745                           
 12746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12747                           ;stkvar	_fmt @ sp[(-32)+-4]
 12748  012D60  0EDC               	movlw	-36
 12749  012D62  006F FF8F FFD9     	movff	plusw1,fsr2l
 12750  012D68  0EDD               	movlw	-35
 12751  012D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12752  012D70  2ADE               	incf	postinc2,f,c
 12753  012D72  0E00               	movlw	0
 12754  012D74  22DD               	addwfc	postdec2,f,c
 12755                           
 12756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12757                           ;stkvar	_ap @ sp[(-32)+-6]
 12758  012D76  0EDA               	movlw	-38
 12759  012D78  006F FF8F FFD9     	movff	plusw1,fsr2l
 12760  012D7E  0EDB               	movlw	-37
 12761  012D80  006F FF8F FFDA     	movff	plusw1,fsr2h
 12762  012D86  0E02               	movlw	2
 12763  012D88  5EDE               	subwf	postinc2,f,c
 12764  012D8A  0E00               	movlw	0
 12765  012D8C  5ADD               	subwfb	postdec2,f,c
 12766  012D8E  006F FF78  F00B    	movff	postinc2,btemp+10
 12767  012D94  006F FF74  F00C    	movff	postdec2,btemp+11
 12768  012D9A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12769  012DA0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12770  012DA6  006F FF78  F00B    	movff	postinc2,btemp+10
 12771  012DAC  006F FF74  F00C    	movff	postdec2,btemp+11
 12772                           
 12773                           ;stkvar	_cp @ sp[(-32)+29]
 12774  012DB2  0EFE               	movlw	-2
 12775  012DB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12776  012DBA  0EFD               	movlw	-3
 12777  012DBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12778                           
 12779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12780                           ;stkvar	_cp @ sp[(-32)+29]
 12781  012DC2  0EFD               	movlw	-3
 12782  012DC4  006F FF8F FFE6     	movff	plusw1,postinc1
 12783  012DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 12784                           
 12785                           ;stkvar	_fp @ sp[(-34)+-2]
 12786  012DD0  0EDC               	movlw	-36
 12787  012DD2  006F FF8F FFE6     	movff	plusw1,postinc1
 12788  012DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 12789  012DDE  ECFA  F0B9         	call	_stoa	;wreg free
 12790  012DE2  D2AF               	goto	l2362
 12791  012DE4                     l12608:
 12792                           
 12793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12794                           ;stkvar	_fmt @ sp[(-32)+-4]
 12795  012DE4  0EDC               	movlw	-36
 12796  012DE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12797  012DEC  0EDD               	movlw	-35
 12798  012DEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12799  012DF4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12800  012DFA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12801  012E00                     	if	0	;tblptru may be non-zero
 12802  012E00                     	endif
 12803  012E00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12804  012E00  0E00               	movlw	low (__mediumconst shr (0+16))
 12805  012E02  6EF8               	movwf	tblptru,c
 12806  012E04                     	endif
 12807  012E04  0008               	tblrd		*
 12808  012E06  50F5               	movf	tablat,w,c
 12809  012E08  0A75               	xorlw	117
 12810  012E0A  A4D8               	btfss	status,2,c
 12811  012E0C  D07C               	goto	l12618
 12812                           
 12813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12814                           ;stkvar	_fmt @ sp[(-32)+-4]
 12815  012E0E  0EDC               	movlw	-36
 12816  012E10  006F FF8F FFD9     	movff	plusw1,fsr2l
 12817  012E16  0EDD               	movlw	-35
 12818  012E18  006F FF8F FFDA     	movff	plusw1,fsr2h
 12819  012E1E  2ADE               	incf	postinc2,f,c
 12820  012E20  0E00               	movlw	0
 12821  012E22  22DD               	addwfc	postdec2,f,c
 12822                           
 12823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12824                           ;stkvar	_ap @ sp[(-32)+-6]
 12825  012E24  0EDA               	movlw	-38
 12826  012E26  006F FF8F FFD9     	movff	plusw1,fsr2l
 12827  012E2C  0EDB               	movlw	-37
 12828  012E2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12829  012E34  0E02               	movlw	2
 12830  012E36  5EDE               	subwf	postinc2,f,c
 12831  012E38  0E00               	movlw	0
 12832  012E3A  5ADD               	subwfb	postdec2,f,c
 12833  012E3C  006F FF78  F00B    	movff	postinc2,btemp+10
 12834  012E42  006F FF74  F00C    	movff	postdec2,btemp+11
 12835  012E48  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12836  012E4E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12837  012E54  006F FF78  F00B    	movff	postinc2,btemp+10
 12838  012E5A  006F FF74  F00C    	movff	postdec2,btemp+11
 12839  012E60  500B               	movf	(btemp+10)^0,w,c
 12840  012E62  6E11               	movwf	(btemp+16)^0,c
 12841  012E64  500C               	movf	(btemp+11)^0,w,c
 12842  012E66  6E12               	movwf	(btemp+17)^0,c
 12843  012E68  6A13               	clrf	(btemp+18)^0,c
 12844  012E6A  6A14               	clrf	(btemp+19)^0,c
 12845  012E6C  6A15               	clrf	(btemp+20)^0,c
 12846  012E6E  6A16               	clrf	(btemp+21)^0,c
 12847  012E70  6A17               	clrf	(btemp+22)^0,c
 12848  012E72  6A18               	clrf	(btemp+23)^0,c
 12849                           
 12850                           ;stkvar	_llu @ sp[(-32)+6]
 12851  012E74  0EE6               	movlw	-26
 12852  012E76  0060  F047  FFE3   	movff	btemp+16,plusw1
 12853  012E7C  0EE7               	movlw	-25
 12854  012E7E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12855  012E84  0EE8               	movlw	-24
 12856  012E86  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12857  012E8C  0EE9               	movlw	-23
 12858  012E8E  0060  F053  FFE3   	movff	btemp+19,plusw1
 12859  012E94  0EEA               	movlw	-22
 12860  012E96  0060  F057  FFE3   	movff	btemp+20,plusw1
 12861  012E9C  0EEB               	movlw	-21
 12862  012E9E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12863  012EA4  0EEC               	movlw	-20
 12864  012EA6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12865  012EAC  0EED               	movlw	-19
 12866  012EAE  0060  F063  FFE3   	movff	btemp+23,plusw1
 12867                           
 12868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12869                           ;stkvar	_llu @ sp[(-32)+6]
 12870  012EB4  50E1               	movf	fsr1l,w,c
 12871  012EB6  0FE6               	addlw	-26
 12872  012EB8  6ED9               	movwf	fsr2l,c
 12873  012EBA  50E2               	movf	fsr1h,w,c
 12874  012EBC  6EDA               	movwf	fsr2h,c
 12875  012EBE  0EFF               	movlw	255
 12876  012EC0  22DA               	addwfc	fsr2h,f,c
 12877  012EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12878  012EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12879  012ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 12880  012ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 12881  012EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 12882  012EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12883  012EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 12884  012EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 12885                           
 12886                           ;stkvar	_fp @ sp[(-40)+-2]
 12887  012EF2  0ED6               	movlw	-42
 12888  012EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12889  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 12890  012F00  ECE6  F0B3         	call	_utoa	;wreg free
 12891  012F04  D21E               	goto	l2362
 12892  012F06                     l12618:
 12893                           
 12894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12895  012F06  0E02               	movlw	2
 12896  012F08  6EE6               	movwf	postinc1,c
 12897  012F0A  0E00               	movlw	0
 12898  012F0C  6EE6               	movwf	postinc1,c
 12899  012F0E  0EF3               	movlw	low STR_87
 12900  012F10  6EE6               	movwf	postinc1,c
 12901  012F12  0EFF               	movlw	high STR_87
 12902  012F14  6EE6               	movwf	postinc1,c
 12903                           
 12904                           ;stkvar	_fmt @ sp[(-36)+-4]
 12905  012F16  0ED8               	movlw	-40
 12906  012F18  006F FF8F FFD9     	movff	plusw1,fsr2l
 12907  012F1E  0ED9               	movlw	-39
 12908  012F20  006F FF8F FFDA     	movff	plusw1,fsr2h
 12909  012F26  006F FF78  F00B    	movff	postinc2,btemp+10
 12910  012F2C  006F FF74  F00C    	movff	postdec2,btemp+11
 12911  012F32  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12912  012F38  0060  F033  FFE6   	movff	btemp+11,postinc1
 12913  012F3E  EC16  F0C0         	call	_strncmp	;wreg free
 12914  012F42  5001               	movf	btemp^0,w,c
 12915  012F44  1002               	iorwf	(btemp+1)^0,w,c
 12916  012F46  A4D8               	btfss	status,2,c
 12917  012F48  D039               	goto	l12628
 12918                           
 12919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12920                           ;stkvar	_fmt @ sp[(-32)+-4]
 12921  012F4A  0EDC               	movlw	-36
 12922  012F4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12923  012F52  0EDD               	movlw	-35
 12924  012F54  006F FF8F FFDA     	movff	plusw1,fsr2h
 12925  012F5A  0E02               	movlw	2
 12926  012F5C  26DE               	addwf	postinc2,f,c
 12927  012F5E  0E00               	movlw	0
 12928  012F60  22DD               	addwfc	postdec2,f,c
 12929                           
 12930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12931                           ;stkvar	_ap @ sp[(-32)+-6]
 12932  012F62  0EDA               	movlw	-38
 12933  012F64  006F FF8F FFD9     	movff	plusw1,fsr2l
 12934  012F6A  0EDB               	movlw	-37
 12935  012F6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12936  012F72  0E04               	movlw	4
 12937  012F74  5EDE               	subwf	postinc2,f,c
 12938  012F76  0E00               	movlw	0
 12939  012F78  5ADD               	subwfb	postdec2,f,c
 12940  012F7A  006F FF78  F00B    	movff	postinc2,btemp+10
 12941  012F80  006F FF74  F00C    	movff	postdec2,btemp+11
 12942  012F86  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12943  012F8C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12944  012F92  006F FF78  F009    	movff	postinc2,btemp+8
 12945  012F98  006F FF78  F00A    	movff	postinc2,btemp+9
 12946  012F9E  006F FF78  F00B    	movff	postinc2,btemp+10
 12947  012FA4  006F FF78  F00C    	movff	postinc2,btemp+11
 12948  012FAA  5009               	movf	(btemp+8)^0,w,c
 12949  012FAC  6E11               	movwf	(btemp+16)^0,c
 12950  012FAE  500A               	movf	(btemp+9)^0,w,c
 12951  012FB0  6E12               	movwf	(btemp+17)^0,c
 12952  012FB2  500B               	movf	(btemp+10)^0,w,c
 12953  012FB4  6E13               	movwf	(btemp+18)^0,c
 12954  012FB6  500C               	movf	(btemp+11)^0,w,c
 12955  012FB8  6E14               	movwf	(btemp+19)^0,c
 12956  012FBA  D758               	goto	L10
 12957  012FBC                     l12628:
 12958                           
 12959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12960                           ;stkvar	_fmt @ sp[(-32)+-4]
 12961  012FBC  0EDC               	movlw	-36
 12962  012FBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12963  012FC4  0EDD               	movlw	-35
 12964  012FC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12965  012FCC  006F FF7B FFF6     	movff	postinc2,tblptrl
 12966  012FD2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12967  012FD8                     	if	0	;tblptru may be non-zero
 12968  012FD8                     	endif
 12969  012FD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12970  012FD8  0E00               	movlw	low (__mediumconst shr (0+16))
 12971  012FDA  6EF8               	movwf	tblptru,c
 12972  012FDC                     	endif
 12973  012FDC  0008               	tblrd		*
 12974  012FDE  50F5               	movf	tablat,w,c
 12975  012FE0  0A78               	xorlw	120
 12976  012FE2  B4D8               	btfsc	status,2,c
 12977  012FE4  D015               	goto	u12240
 12978                           
 12979                           ;stkvar	_fmt @ sp[(-32)+-4]
 12980  012FE6  0EDC               	movlw	-36
 12981  012FE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12982  012FEE  0EDD               	movlw	-35
 12983  012FF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12984  012FF6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12985  012FFC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12986  013002                     	if	0	;tblptru may be non-zero
 12987  013002                     	endif
 12988  013002                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12989  013002  0E00               	movlw	low (__mediumconst shr (0+16))
 12990  013004  6EF8               	movwf	tblptru,c
 12991  013006                     	endif
 12992  013006  0008               	tblrd		*
 12993  013008  50F5               	movf	tablat,w,c
 12994  01300A  0A58               	xorlw	88
 12995  01300C  A4D8               	btfss	status,2,c
 12996  01300E  D094               	goto	l12642
 12997  013010                     u12240:
 12998                           
 12999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 13000                           ;stkvar	_fmt @ sp[(-32)+-4]
 13001  013010  0EDC               	movlw	-36
 13002  013012  006F FF8F FFD9     	movff	plusw1,fsr2l
 13003  013018  0EDD               	movlw	-35
 13004  01301A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13005  013020  006F FF7B FFF6     	movff	postinc2,tblptrl
 13006  013026  006F FF77 FFF7     	movff	postdec2,tblptrh
 13007  01302C                     	if	0	;tblptru may be non-zero
 13008  01302C                     	endif
 13009  01302C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13010  01302C  0E00               	movlw	low (__mediumconst shr (0+16))
 13011  01302E  6EF8               	movwf	tblptru,c
 13012  013030                     	endif
 13013                           
 13014                           ;stkvar	_c @ sp[(-32)+31]
 13015  013030  0008               	tblrd		*
 13016  013032  0EFF               	movlw	-1
 13017  013034  006F FFD7 FFE3     	movff	tablat,plusw1
 13018                           
 13019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 13020                           ;stkvar	_fmt @ sp[(-32)+-4]
 13021  01303A  0EDC               	movlw	-36
 13022  01303C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13023  013042  0EDD               	movlw	-35
 13024  013044  006F FF8F FFDA     	movff	plusw1,fsr2h
 13025  01304A  2ADE               	incf	postinc2,f,c
 13026  01304C  0E00               	movlw	0
 13027  01304E  22DD               	addwfc	postdec2,f,c
 13028                           
 13029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13030                           ;stkvar	_ap @ sp[(-32)+-6]
 13031  013050  0EDA               	movlw	-38
 13032  013052  006F FF8F FFD9     	movff	plusw1,fsr2l
 13033  013058  0EDB               	movlw	-37
 13034  01305A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13035  013060  0E02               	movlw	2
 13036  013062  5EDE               	subwf	postinc2,f,c
 13037  013064  0E00               	movlw	0
 13038  013066  5ADD               	subwfb	postdec2,f,c
 13039  013068  006F FF78  F00B    	movff	postinc2,btemp+10
 13040  01306E  006F FF74  F00C    	movff	postdec2,btemp+11
 13041  013074  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13042  01307A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13043  013080  006F FF78  F00B    	movff	postinc2,btemp+10
 13044  013086  006F FF74  F00C    	movff	postdec2,btemp+11
 13045  01308C  500B               	movf	(btemp+10)^0,w,c
 13046  01308E  6E11               	movwf	(btemp+16)^0,c
 13047  013090  500C               	movf	(btemp+11)^0,w,c
 13048  013092  6E12               	movwf	(btemp+17)^0,c
 13049  013094  6A13               	clrf	(btemp+18)^0,c
 13050  013096  6A14               	clrf	(btemp+19)^0,c
 13051  013098  6A15               	clrf	(btemp+20)^0,c
 13052  01309A  6A16               	clrf	(btemp+21)^0,c
 13053  01309C  6A17               	clrf	(btemp+22)^0,c
 13054  01309E  6A18               	clrf	(btemp+23)^0,c
 13055                           
 13056                           ;stkvar	_llu @ sp[(-32)+6]
 13057  0130A0  0EE6               	movlw	-26
 13058  0130A2  0060  F047  FFE3   	movff	btemp+16,plusw1
 13059  0130A8  0EE7               	movlw	-25
 13060  0130AA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13061  0130B0  0EE8               	movlw	-24
 13062  0130B2  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13063  0130B8  0EE9               	movlw	-23
 13064  0130BA  0060  F053  FFE3   	movff	btemp+19,plusw1
 13065  0130C0  0EEA               	movlw	-22
 13066  0130C2  0060  F057  FFE3   	movff	btemp+20,plusw1
 13067  0130C8  0EEB               	movlw	-21
 13068  0130CA  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13069  0130D0  0EEC               	movlw	-20
 13070  0130D2  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13071  0130D8  0EED               	movlw	-19
 13072  0130DA  0060  F063  FFE3   	movff	btemp+23,plusw1
 13073                           
 13074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13075                           ;stkvar	_c @ sp[(-32)+31]
 13076  0130E0  0EFF               	movlw	-1
 13077  0130E2  50E3               	movf	plusw1,w,c
 13078  0130E4  6EE6               	movwf	postinc1,c
 13079                           
 13080                           ;stkvar	_llu @ sp[(-33)+6]
 13081  0130E6  50E1               	movf	fsr1l,w,c
 13082  0130E8  0FE5               	addlw	-27
 13083  0130EA  6ED9               	movwf	fsr2l,c
 13084  0130EC  50E2               	movf	fsr1h,w,c
 13085  0130EE  6EDA               	movwf	fsr2h,c
 13086  0130F0  0EFF               	movlw	255
 13087  0130F2  22DA               	addwfc	fsr2h,f,c
 13088  0130F4  006F FF7B FFE6     	movff	postinc2,postinc1
 13089  0130FA  006F FF7B FFE6     	movff	postinc2,postinc1
 13090  013100  006F FF7B FFE6     	movff	postinc2,postinc1
 13091  013106  006F FF7B FFE6     	movff	postinc2,postinc1
 13092  01310C  006F FF7B FFE6     	movff	postinc2,postinc1
 13093  013112  006F FF7B FFE6     	movff	postinc2,postinc1
 13094  013118  006F FF7B FFE6     	movff	postinc2,postinc1
 13095  01311E  006F FF7B FFE6     	movff	postinc2,postinc1
 13096                           
 13097                           ;stkvar	_fp @ sp[(-41)+-2]
 13098  013124  0ED5               	movlw	-43
 13099  013126  006F FF8F FFE6     	movff	plusw1,postinc1
 13100  01312C  006F FF8F FFE6     	movff	plusw1,postinc1
 13101  013132  EC53  F0B0         	call	_xtoa	;wreg free
 13102  013136  D105               	goto	l2362
 13103  013138                     l12642:
 13104                           
 13105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13106  013138  0E02               	movlw	2
 13107  01313A  6EE6               	movwf	postinc1,c
 13108  01313C  0E00               	movlw	0
 13109  01313E  6EE6               	movwf	postinc1,c
 13110  013140  0EF6               	movlw	low STR_92
 13111  013142  6EE6               	movwf	postinc1,c
 13112  013144  0EFF               	movlw	high STR_92
 13113  013146  6EE6               	movwf	postinc1,c
 13114                           
 13115                           ;stkvar	_fmt @ sp[(-36)+-4]
 13116  013148  0ED8               	movlw	-40
 13117  01314A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13118  013150  0ED9               	movlw	-39
 13119  013152  006F FF8F FFDA     	movff	plusw1,fsr2h
 13120  013158  006F FF78  F00B    	movff	postinc2,btemp+10
 13121  01315E  006F FF74  F00C    	movff	postdec2,btemp+11
 13122  013164  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13123  01316A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13124  013170  EC16  F0C0         	call	_strncmp	;wreg free
 13125  013174  5001               	movf	btemp^0,w,c
 13126  013176  1002               	iorwf	(btemp+1)^0,w,c
 13127  013178  B4D8               	btfsc	status,2,c
 13128  01317A  D022               	goto	u12260
 13129  01317C  0E02               	movlw	2
 13130  01317E  6EE6               	movwf	postinc1,c
 13131  013180  0E00               	movlw	0
 13132  013182  6EE6               	movwf	postinc1,c
 13133  013184  0EE7               	movlw	low STR_96
 13134  013186  6EE6               	movwf	postinc1,c
 13135  013188  0EFF               	movlw	high STR_96
 13136  01318A  6EE6               	movwf	postinc1,c
 13137                           
 13138                           ;stkvar	_fmt @ sp[(-36)+-4]
 13139  01318C  0ED8               	movlw	-40
 13140  01318E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13141  013194  0ED9               	movlw	-39
 13142  013196  006F FF8F FFDA     	movff	plusw1,fsr2h
 13143  01319C  006F FF78  F00B    	movff	postinc2,btemp+10
 13144  0131A2  006F FF74  F00C    	movff	postdec2,btemp+11
 13145  0131A8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13146  0131AE  0060  F033  FFE6   	movff	btemp+11,postinc1
 13147  0131B4  EC16  F0C0         	call	_strncmp	;wreg free
 13148  0131B8  5001               	movf	btemp^0,w,c
 13149  0131BA  1002               	iorwf	(btemp+1)^0,w,c
 13150  0131BC  A4D8               	btfss	status,2,c
 13151  0131BE  D058               	goto	l12656
 13152  0131C0                     u12260:
 13153                           
 13154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13155                           ;stkvar	_fmt @ sp[(-32)+-4]
 13156  0131C0  0EDC               	movlw	-36
 13157  0131C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13158  0131C8  0EDD               	movlw	-35
 13159  0131CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13160  0131D0  006F FF78  F00B    	movff	postinc2,btemp+10
 13161  0131D6  006F FF74  F00C    	movff	postdec2,btemp+11
 13162  0131DC  0E01               	movlw	1
 13163  0131DE  260B               	addwf	(btemp+10)^0,f,c
 13164  0131E0  0E00               	movlw	0
 13165  0131E2  220C               	addwfc	(btemp+11)^0,f,c
 13166  0131E4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13167  0131EA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13168  0131F0                     	if	0	;tblptru may be non-zero
 13169  0131F0                     	endif
 13170  0131F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13171  0131F0  0E00               	movlw	low (__mediumconst shr (0+16))
 13172  0131F2  6EF8               	movwf	tblptru,c
 13173  0131F4                     	endif
 13174                           
 13175                           ;stkvar	_c @ sp[(-32)+31]
 13176  0131F4  0008               	tblrd		*
 13177  0131F6  0EFF               	movlw	-1
 13178  0131F8  006F FFD7 FFE3     	movff	tablat,plusw1
 13179                           
 13180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13181                           ;stkvar	_fmt @ sp[(-32)+-4]
 13182  0131FE  0EDC               	movlw	-36
 13183  013200  006F FF8F FFD9     	movff	plusw1,fsr2l
 13184  013206  0EDD               	movlw	-35
 13185  013208  006F FF8F FFDA     	movff	plusw1,fsr2h
 13186  01320E  0E02               	movlw	2
 13187  013210  26DE               	addwf	postinc2,f,c
 13188  013212  0E00               	movlw	0
 13189  013214  22DD               	addwfc	postdec2,f,c
 13190                           
 13191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13192                           ;stkvar	_ap @ sp[(-32)+-6]
 13193  013216  0EDA               	movlw	-38
 13194  013218  006F FF8F FFD9     	movff	plusw1,fsr2l
 13195  01321E  0EDB               	movlw	-37
 13196  013220  006F FF8F FFDA     	movff	plusw1,fsr2h
 13197  013226  0E04               	movlw	4
 13198  013228  5EDE               	subwf	postinc2,f,c
 13199  01322A  0E00               	movlw	0
 13200  01322C  5ADD               	subwfb	postdec2,f,c
 13201  01322E  006F FF78  F00B    	movff	postinc2,btemp+10
 13202  013234  006F FF74  F00C    	movff	postdec2,btemp+11
 13203  01323A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13204  013240  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13205  013246  006F FF78  F009    	movff	postinc2,btemp+8
 13206  01324C  006F FF78  F00A    	movff	postinc2,btemp+9
 13207  013252  006F FF78  F00B    	movff	postinc2,btemp+10
 13208  013258  006F FF78  F00C    	movff	postinc2,btemp+11
 13209  01325E  5009               	movf	(btemp+8)^0,w,c
 13210  013260  6E11               	movwf	(btemp+16)^0,c
 13211  013262  500A               	movf	(btemp+9)^0,w,c
 13212  013264  6E12               	movwf	(btemp+17)^0,c
 13213  013266  500B               	movf	(btemp+10)^0,w,c
 13214  013268  6E13               	movwf	(btemp+18)^0,c
 13215  01326A  500C               	movf	(btemp+11)^0,w,c
 13216  01326C  6E14               	movwf	(btemp+19)^0,c
 13217  01326E  D714               	goto	L11
 13218  013270                     l12656:
 13219                           
 13220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13221                           ;stkvar	_fmt @ sp[(-32)+-4]
 13222  013270  0EDC               	movlw	-36
 13223  013272  006F FF8F FFD9     	movff	plusw1,fsr2l
 13224  013278  0EDD               	movlw	-35
 13225  01327A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13226  013280  006F FF7B FFF6     	movff	postinc2,tblptrl
 13227  013286  006F FF77 FFF7     	movff	postdec2,tblptrh
 13228  01328C                     	if	0	;tblptru may be non-zero
 13229  01328C                     	endif
 13230  01328C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13231  01328C  0E00               	movlw	low (__mediumconst shr (0+16))
 13232  01328E  6EF8               	movwf	tblptru,c
 13233  013290                     	endif
 13234  013290  0008               	tblrd		*
 13235  013292  50F5               	movf	tablat,w,c
 13236  013294  0A25               	xorlw	37
 13237  013296  A4D8               	btfss	status,2,c
 13238  013298  D01A               	goto	l12666
 13239                           
 13240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 13241                           ;stkvar	_fmt @ sp[(-32)+-4]
 13242  01329A  0EDC               	movlw	-36
 13243  01329C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13244  0132A2  0EDD               	movlw	-35
 13245  0132A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13246  0132AA  2ADE               	incf	postinc2,f,c
 13247  0132AC  0E00               	movlw	0
 13248  0132AE  22DD               	addwfc	postdec2,f,c
 13249                           
 13250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 13251                           ;stkvar	_fp @ sp[(-32)+-2]
 13252  0132B0  0EDE               	movlw	-34
 13253  0132B2  006F FF8F FFE6     	movff	plusw1,postinc1
 13254  0132B8  006F FF8F FFE6     	movff	plusw1,postinc1
 13255  0132BE  0E25               	movlw	37
 13256  0132C0  6EE6               	movwf	postinc1,c
 13257  0132C2  0E00               	movlw	0
 13258  0132C4  6EE6               	movwf	postinc1,c
 13259  0132C6  ECC8  F0CB         	call	_fputc	;wreg free
 13260  0132CA                     l12662:
 13261                           
 13262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 13263  0132CA  0E01               	movlw	1
 13264  0132CC  D00C               	goto	L12
 13265  0132CE                     l12666:
 13266                           
 13267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 13268                           ;stkvar	_fmt @ sp[(-32)+-4]
 13269  0132CE  0EDC               	movlw	-36
 13270  0132D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13271  0132D6  0EDD               	movlw	-35
 13272  0132D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13273  0132DE  2ADE               	incf	postinc2,f,c
 13274  0132E0  0E00               	movlw	0
 13275  0132E2  22DD               	addwfc	postdec2,f,c
 13276                           
 13277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 13278  0132E4  0E00               	movlw	0
 13279  0132E6                     L12:
 13280  0132E6  6E01               	movwf	btemp^0,c
 13281  0132E8  0E00               	movlw	0
 13282  0132EA  6E02               	movwf	(btemp+1)^0,c
 13283  0132EC  D02A               	goto	l2362
 13284  0132EE                     l12672:
 13285                           
 13286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 13287                           ;stkvar	_fp @ sp[(-32)+-2]
 13288  0132EE  0EDE               	movlw	-34
 13289  0132F0  006F FF8F FFE6     	movff	plusw1,postinc1
 13290  0132F6  006F FF8F FFE6     	movff	plusw1,postinc1
 13291                           
 13292                           ;stkvar	_fmt @ sp[(-34)+-4]
 13293  0132FC  0EDA               	movlw	-38
 13294  0132FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13295  013304  0EDB               	movlw	-37
 13296  013306  006F FF8F FFDA     	movff	plusw1,fsr2h
 13297  01330C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13298  013312  006F FF77 FFF7     	movff	postdec2,tblptrh
 13299  013318                     	if	0	;tblptru may be non-zero
 13300  013318                     	endif
 13301  013318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13302  013318  0E00               	movlw	low (__mediumconst shr (0+16))
 13303  01331A  6EF8               	movwf	tblptru,c
 13304  01331C                     	endif
 13305  01331C  0008               	tblrd		*
 13306  01331E  50F5               	movf	tablat,w,c
 13307  013320  6EE6               	movwf	postinc1,c
 13308  013322  0E00               	movlw	0
 13309  013324  6EE6               	movwf	postinc1,c
 13310  013326  ECC8  F0CB         	call	_fputc	;wreg free
 13311                           
 13312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 13313                           ;stkvar	_fmt @ sp[(-32)+-4]
 13314  01332A  0EDC               	movlw	-36
 13315  01332C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13316  013332  0EDD               	movlw	-35
 13317  013334  006F FF8F FFDA     	movff	plusw1,fsr2h
 13318  01333A  2ADE               	incf	postinc2,f,c
 13319  01333C  0E00               	movlw	0
 13320  01333E  22DD               	addwfc	postdec2,f,c
 13321  013340  D7C4               	goto	l12662
 13322  013342                     l2362:
 13323                           
 13324                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 13325  013342  0EDA               	movlw	218
 13326  013344  26E1               	addwf	fsr1l,f,c
 13327  013346  0EFF               	movlw	255
 13328  013348  22E2               	addwfc	fsr1h,f,c
 13329  01334A  0012               	return		;funcret
 13330  01334C                     __end_of_vfpfcnvrt:
 13331                           	opt callstack 0
 13332                           
 13333 ;; *************** function _xtoa *****************
 13334 ;; Defined at:
 13335 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13336 ;; Parameters:    Size  Location     Type
 13337 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13338 ;;		 -> f(6), NULL(0), 
 13339 ;;  d               8  [STACK] unsigned long long 
 13340 ;;  x               1  [STACK] unsigned char 
 13341 ;; Auto vars:     Size  Location     Type
 13342 ;;  n               8  [STACK] unsigned long long 
 13343 ;;  c               2  [STACK] int 
 13344 ;;  i               2  [STACK] int 
 13345 ;;  w               2  [STACK] int 
 13346 ;;  p               2  [STACK] int 
 13347 ;; Return value:  Size  Location     Type
 13348 ;;                  2  [STACK] int 
 13349 ;; Registers used:
 13350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13351 ;; Tracked objects:
 13352 ;;		On entry : 0/0
 13353 ;;		On exit  : 0/0
 13354 ;;		Unchanged: 0/0
 13355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13360 ;;Total ram usage:        0 bytes
 13361 ;; Hardware stack levels used:    1
 13362 ;; Hardware stack levels required when called:   20
 13363 ;; This function calls:
 13364 ;;		_isalpha
 13365 ;;		_isupper
 13366 ;;		_pad
 13367 ;;		_toupper
 13368 ;; This function is called by:
 13369 ;;		_vfpfcnvrt
 13370 ;; This function uses a reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text48
 13374  0160A6                     __ptext48:
 13375                           	opt callstack 0
 13376  0160A6                     _xtoa:
 13377                           	opt callstack 0
 13378                           
 13379                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13380  0160A6  0E14               	movlw	20
 13381  0160A8  26E1               	addwf	fsr1l,f,c
 13382  0160AA  0E00               	movlw	0
 13383  0160AC  22E2               	addwfc	fsr1h,f,c
 13384                           
 13385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 13386                           
 13387                           ;incstack = 0
 13388 ;; hardware stack exceeded
 13389  0160AE  AE3D               	btfss	(_prec+1)^0,7,c
 13390                           
 13391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 13392  0160B0  923E               	bcf	_flags^0,1,c
 13393                           
 13394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 13395  0160B2  BE3D               	btfsc	(_prec+1)^0,7,c
 13396  0160B4  D005               	goto	u11800
 13397  0160B6  503D               	movf	(_prec+1)^0,w,c
 13398  0160B8  E110               	bnz	l12392
 13399  0160BA  043C               	decf	_prec^0,w,c
 13400  0160BC  B0D8               	btfsc	status,0,c
 13401  0160BE  D00D               	goto	l12392
 13402  0160C0                     u11800:
 13403  0160C0  0E01               	movlw	1
 13404  0160C2  6E0B               	movwf	(btemp+10)^0,c
 13405  0160C4  0E00               	movlw	0
 13406  0160C6  6E0C               	movwf	(btemp+11)^0,c
 13407                           
 13408                           ;stkvar	_p @ sp[(-20)+18]
 13409  0160C8  0EFE               	movlw	-2
 13410  0160CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13411  0160D0  0EFF               	movlw	-1
 13412  0160D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13413  0160D8  D008               	goto	l2312
 13414  0160DA                     l12392:
 13415                           
 13416                           ;stkvar	_p @ sp[(-20)+18]
 13417  0160DA  0EFE               	movlw	-2
 13418  0160DC  0060  F0F3  FFE3   	movff	_prec,plusw1
 13419  0160E2  0EFF               	movlw	-1
 13420  0160E4  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13421  0160EA                     l2312:
 13422                           
 13423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13424                           ;stkvar	_w @ sp[(-20)+16]
 13425  0160EA  0EFC               	movlw	-4
 13426  0160EC  0060  F0EB  FFE3   	movff	_width,plusw1
 13427  0160F2  0EFD               	movlw	-3
 13428  0160F4  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13429                           
 13430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13431  0160FA  A83E               	btfss	_flags^0,4,c
 13432  0160FC  D00B               	goto	l12398
 13433                           
 13434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13435                           ;stkvar	_w @ sp[(-20)+16]
 13436  0160FE  50E1               	movf	fsr1l,w,c
 13437  016100  0FFC               	addlw	-4
 13438  016102  6ED9               	movwf	fsr2l,c
 13439  016104  50E2               	movf	fsr1h,w,c
 13440  016106  6EDA               	movwf	fsr2h,c
 13441  016108  0EFF               	movlw	255
 13442  01610A  22DA               	addwfc	fsr2h,f,c
 13443  01610C  0EFE               	movlw	254
 13444  01610E  26DE               	addwf	postinc2,f,c
 13445  016110  0EFF               	movlw	255
 13446  016112  22DD               	addwfc	postdec2,f,c
 13447  016114                     l12398:
 13448                           
 13449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13450                           ;stkvar	_d @ sp[(-20)+-10]
 13451  016114  0EE2               	movlw	226
 13452  016116  24E1               	addwf	fsr1l,w,c
 13453  016118  6ED9               	movwf	fsr2l,c
 13454  01611A  0EFF               	movlw	255
 13455  01611C  20E2               	addwfc	fsr1h,w,c
 13456  01611E  6EDA               	movwf	fsr2h,c
 13457                           
 13458                           ;stkvar	_n @ sp[(-20)+4]
 13459  016120  0E08               	movlw	8
 13460  016122  6E01               	movwf	btemp^0,c
 13461  016124  0EF0               	movlw	-16
 13462  016126                     us1182999:
 13463  016126  006F FF7B FFE3     	movff	postinc2,plusw1
 13464  01612C  28E8               	incf	wreg,w,c
 13465  01612E  2E01               	decfsz	btemp^0,f,c
 13466  016130  D7FA               	bra	us1182999
 13467                           
 13468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13469  016132  0E4F               	movlw	79
 13470  016134  6E0B               	movwf	(btemp+10)^0,c
 13471  016136  0E00               	movlw	0
 13472  016138  6E0C               	movwf	(btemp+11)^0,c
 13473                           
 13474                           ;stkvar	_i @ sp[(-20)+14]
 13475  01613A  0EFA               	movlw	-6
 13476  01613C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13477  016142  0EFB               	movlw	-5
 13478  016144  0060  F033  FFE3   	movff	btemp+11,plusw1
 13479                           
 13480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13481  01614A  0102               	movlb	2	; () banked
 13482  01614C  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13483                           
 13484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13485  01614E  D0EE               	goto	l12436
 13486  016150                     l12404:
 13487                           
 13488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13489                           ;stkvar	_i @ sp[(-20)+14]
 13490  016150  50E1               	movf	fsr1l,w,c
 13491  016152  0FFA               	addlw	-6
 13492  016154  6ED9               	movwf	fsr2l,c
 13493  016156  50E2               	movf	fsr1h,w,c
 13494  016158  6EDA               	movwf	fsr2h,c
 13495  01615A  0EFF               	movlw	255
 13496  01615C  22DA               	addwfc	fsr2h,f,c
 13497  01615E  06DE               	decf	postinc2,f,c
 13498  016160  0E00               	movlw	0
 13499  016162  5ADD               	subwfb	postdec2,f,c
 13500                           
 13501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13502                           ;stkvar	_n @ sp[(-20)+4]
 13503  016164  0EF0               	movlw	-16
 13504  016166  006F FF8C  F00B    	movff	plusw1,btemp+10
 13505  01616C  0EF1               	movlw	-15
 13506  01616E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13507  016174  0E0F               	movlw	15
 13508  016176  160B               	andwf	(btemp+10)^0,f,c
 13509  016178  0E00               	movlw	0
 13510  01617A  160C               	andwf	(btemp+11)^0,f,c
 13511                           
 13512                           ;stkvar	_c @ sp[(-20)+12]
 13513  01617C  0EF8               	movlw	-8
 13514  01617E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13515  016184  0EF9               	movlw	-7
 13516  016186  0060  F033  FFE3   	movff	btemp+11,plusw1
 13517                           
 13518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13519                           ;stkvar	_c @ sp[(-20)+12]
 13520  01618C  0EF9               	movlw	-7
 13521  01618E  BEE3               	btfsc	plusw1,7,c
 13522  016190  D00F               	goto	l12412
 13523  016192  0EF9               	movlw	-7
 13524  016194  50E3               	movf	plusw1,w,c
 13525  016196  E108               	bnz	u11830
 13526  016198  0EF8               	movlw	-8
 13527  01619A  006F FF8C  F001    	movff	plusw1,btemp
 13528  0161A0  0E0A               	movlw	10
 13529  0161A2  5E01               	subwf	btemp^0,f,c
 13530  0161A4  A0D8               	btfss	status,0,c
 13531  0161A6  D004               	goto	l12412
 13532  0161A8                     u11830:
 13533                           
 13534                           ;stkvar	_c @ sp[(-20)+12]
 13535  0161A8  0EF8               	movlw	-8
 13536  0161AA  50E3               	movf	plusw1,w,c
 13537  0161AC  0F57               	addlw	87
 13538  0161AE  D003               	goto	L13
 13539  0161B0                     l12412:
 13540                           
 13541                           ;stkvar	_c @ sp[(-20)+12]
 13542  0161B0  0EF8               	movlw	-8
 13543  0161B2  50E3               	movf	plusw1,w,c
 13544  0161B4  0F30               	addlw	48
 13545  0161B6                     L13:
 13546  0161B6  6E0B               	movwf	(btemp+10)^0,c
 13547  0161B8  0EF9               	movlw	-7
 13548  0161BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 13549  0161C0  0E00               	movlw	0
 13550  0161C2  220C               	addwfc	(btemp+11)^0,f,c
 13551                           
 13552                           ;stkvar	_c @ sp[(-20)+12]
 13553  0161C4  0EF8               	movlw	-8
 13554  0161C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13555  0161CC  0EF9               	movlw	-7
 13556  0161CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 13557  0161D4  0EBF               	movlw	191
 13558  0161D6  6E0B               	movwf	(btemp+10)^0,c
 13559  0161D8  0EFF               	movlw	255
 13560  0161DA  6E0C               	movwf	(btemp+11)^0,c
 13561                           
 13562                           ;stkvar	_x @ sp[(-20)+-11]
 13563  0161DC  0EE1               	movlw	-31
 13564  0161DE  50E3               	movf	plusw1,w,c
 13565  0161E0  6E09               	movwf	(btemp+8)^0,c
 13566  0161E2  6A0A               	clrf	(btemp+9)^0,c
 13567  0161E4  500B               	movf	(btemp+10)^0,w,c
 13568  0161E6  2609               	addwf	(btemp+8)^0,f,c
 13569  0161E8  500C               	movf	(btemp+11)^0,w,c
 13570  0161EA  220A               	addwfc	(btemp+9)^0,f,c
 13571  0161EC  500A               	movf	(btemp+9)^0,w,c
 13572  0161EE  E106               	bnz	u11840
 13573  0161F0  0E1A               	movlw	26
 13574  0161F2  5C09               	subwf	(btemp+8)^0,w,c
 13575  0161F4  B0D8               	btfsc	status,0,c
 13576  0161F6  D002               	goto	u11840
 13577  0161F8  0E01               	movlw	1
 13578  0161FA  D001               	goto	u11850
 13579  0161FC                     u11840:
 13580  0161FC  0E00               	movlw	0
 13581  0161FE                     u11850:
 13582  0161FE  6E0B               	movwf	(btemp+10)^0,c
 13583  016200  6A0C               	clrf	(btemp+11)^0,c
 13584                           
 13585                           ;stkvar	_xtoa$5555 @ sp[(-20)+2]
 13586  016202  0EEE               	movlw	-18
 13587  016204  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13588  01620A  0EEF               	movlw	-17
 13589  01620C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13590                           
 13591                           ;stkvar	_xtoa$5555 @ sp[(-20)+2]
 13592  016212  0EEE               	movlw	-18
 13593  016214  006F FF8C  F001    	movff	plusw1,btemp
 13594  01621A  0EEF               	movlw	-17
 13595  01621C  50E3               	movf	plusw1,w,c
 13596  01621E  1001               	iorwf	btemp^0,w,c
 13597  016220  B4D8               	btfsc	status,2,c
 13598  016222  D041               	goto	l12428
 13599  016224  0E9F               	movlw	159
 13600  016226  6E0B               	movwf	(btemp+10)^0,c
 13601  016228  0EFF               	movlw	255
 13602  01622A  6E0C               	movwf	(btemp+11)^0,c
 13603                           
 13604                           ;stkvar	_c @ sp[(-20)+12]
 13605  01622C  0EF8               	movlw	-8
 13606  01622E  006F FF8C  F009    	movff	plusw1,btemp+8
 13607  016234  0EF9               	movlw	-7
 13608  016236  006F FF8C  F00A    	movff	plusw1,btemp+9
 13609  01623C  0E20               	movlw	32
 13610  01623E  1209               	iorwf	(btemp+8)^0,f,c
 13611  016240  0E00               	movlw	0
 13612  016242  120A               	iorwf	(btemp+9)^0,f,c
 13613  016244  500B               	movf	(btemp+10)^0,w,c
 13614  016246  2609               	addwf	(btemp+8)^0,f,c
 13615  016248  500C               	movf	(btemp+11)^0,w,c
 13616  01624A  220A               	addwfc	(btemp+9)^0,f,c
 13617  01624C  500A               	movf	(btemp+9)^0,w,c
 13618  01624E  E106               	bnz	u11870
 13619  016250  0E1A               	movlw	26
 13620  016252  5C09               	subwf	(btemp+8)^0,w,c
 13621  016254  B0D8               	btfsc	status,0,c
 13622  016256  D002               	goto	u11870
 13623  016258  0E01               	movlw	1
 13624  01625A  D001               	goto	u11880
 13625  01625C                     u11870:
 13626  01625C  0E00               	movlw	0
 13627  01625E                     u11880:
 13628  01625E  6E0B               	movwf	(btemp+10)^0,c
 13629  016260  6A0C               	clrf	(btemp+11)^0,c
 13630                           
 13631                           ;stkvar	_xtoa$5556 @ sp[(-20)+0]
 13632  016262  0EEC               	movlw	-20
 13633  016264  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13634  01626A  0EED               	movlw	-19
 13635  01626C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13636                           
 13637                           ;stkvar	_xtoa$5556 @ sp[(-20)+0]
 13638  016272  0EEC               	movlw	-20
 13639  016274  006F FF8C  F001    	movff	plusw1,btemp
 13640  01627A  0EED               	movlw	-19
 13641  01627C  50E3               	movf	plusw1,w,c
 13642  01627E  1001               	iorwf	btemp^0,w,c
 13643  016280  B4D8               	btfsc	status,2,c
 13644  016282  D011               	goto	l12428
 13645                           
 13646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13647                           ;stkvar	_c @ sp[(-20)+12]
 13648  016284  0EF8               	movlw	-8
 13649  016286  006F FF8F FFE6     	movff	plusw1,postinc1
 13650  01628C  006F FF8F FFE6     	movff	plusw1,postinc1
 13651  016292  EC53  F0D6         	call	_toupper	;wreg free
 13652                           
 13653                           ;stkvar	_c @ sp[(-20)+12]
 13654  016296  0EF8               	movlw	-8
 13655  016298  0060  F007  FFE3   	movff	btemp,plusw1
 13656  01629E  0EF9               	movlw	-7
 13657  0162A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13658  0162A6                     l12428:
 13659                           
 13660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13661                           ;stkvar	_c @ sp[(-20)+12]
 13662                           ;stkvar	_i @ sp[(-20)+14]
 13663  0162A6  0EFA               	movlw	-6
 13664  0162A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 13665  0162AE  0EFB               	movlw	-5
 13666  0162B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 13667  0162B6  0E97               	movlw	low _dbuf
 13668  0162B8  240B               	addwf	(btemp+10)^0,w,c
 13669  0162BA  6ED9               	movwf	fsr2l,c
 13670  0162BC  0E02               	movlw	high _dbuf
 13671  0162BE  200C               	addwfc	(btemp+11)^0,w,c
 13672  0162C0  6EDA               	movwf	fsr2h,c
 13673  0162C2  0EF8               	movlw	-8
 13674  0162C4  006F FF8F FFDF     	movff	plusw1,indf2
 13675                           
 13676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13677                           ;stkvar	_p @ sp[(-20)+18]
 13678  0162CA  50E1               	movf	fsr1l,w,c
 13679  0162CC  0FFE               	addlw	-2
 13680  0162CE  6ED9               	movwf	fsr2l,c
 13681  0162D0  50E2               	movf	fsr1h,w,c
 13682  0162D2  6EDA               	movwf	fsr2h,c
 13683  0162D4  0EFF               	movlw	255
 13684  0162D6  22DA               	addwfc	fsr2h,f,c
 13685  0162D8  06DE               	decf	postinc2,f,c
 13686  0162DA  0E00               	movlw	0
 13687  0162DC  5ADD               	subwfb	postdec2,f,c
 13688                           
 13689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13690                           ;stkvar	_w @ sp[(-20)+16]
 13691  0162DE  50E1               	movf	fsr1l,w,c
 13692  0162E0  0FFC               	addlw	-4
 13693  0162E2  6ED9               	movwf	fsr2l,c
 13694  0162E4  50E2               	movf	fsr1h,w,c
 13695  0162E6  6EDA               	movwf	fsr2h,c
 13696  0162E8  0EFF               	movlw	255
 13697  0162EA  22DA               	addwfc	fsr2h,f,c
 13698  0162EC  06DE               	decf	postinc2,f,c
 13699  0162EE  0E00               	movlw	0
 13700  0162F0  5ADD               	subwfb	postdec2,f,c
 13701                           
 13702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13703  0162F2  0E04               	movlw	4
 13704  0162F4  6E0C               	movwf	(btemp+11)^0,c
 13705                           
 13706                           ;stkvar	_n @ sp[(-20)+4]
 13707  0162F6  50E1               	movf	fsr1l,w,c
 13708  0162F8  0FF0               	addlw	-16
 13709  0162FA  6ED9               	movwf	fsr2l,c
 13710  0162FC  50E2               	movf	fsr1h,w,c
 13711  0162FE  6EDA               	movwf	fsr2h,c
 13712  016300  0EFF               	movlw	255
 13713  016302  22DA               	addwfc	fsr2h,f,c
 13714  016304  280C               	incf	(btemp+11)^0,w,c
 13715  016306  52DE               	movf	postinc2,f,c
 13716  016308  D00F               	goto	u11900
 13717  01630A                     u11905:
 13718  01630A  52DE               	movf	postinc2,f,c
 13719  01630C  52DE               	movf	postinc2,f,c
 13720  01630E  52DE               	movf	postinc2,f,c
 13721  016310  52DE               	movf	postinc2,f,c
 13722  016312  52DE               	movf	postinc2,f,c
 13723  016314  52DE               	movf	postinc2,f,c
 13724  016316  90D8               	bcf	status,0,c
 13725  016318  32DD               	rrcf	postdec2,f,c
 13726  01631A  32DD               	rrcf	postdec2,f,c
 13727  01631C  32DD               	rrcf	postdec2,f,c
 13728  01631E  32DD               	rrcf	postdec2,f,c
 13729  016320  32DD               	rrcf	postdec2,f,c
 13730  016322  32DD               	rrcf	postdec2,f,c
 13731  016324  32DD               	rrcf	postdec2,f,c
 13732  016326  32DE               	rrcf	postinc2,f,c
 13733  016328                     u11900:
 13734  016328  2EE8               	decfsz	wreg,f,c
 13735  01632A  D7EF               	goto	u11905
 13736  01632C                     l12436:
 13737                           
 13738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13739                           ;stkvar	_i @ sp[(-20)+14]
 13740  01632C  0EFB               	movlw	-5
 13741  01632E  BEE3               	btfsc	plusw1,7,c
 13742  016330  D03A               	goto	u11950
 13743  016332  0EFB               	movlw	-5
 13744  016334  50E3               	movf	plusw1,w,c
 13745  016336  E108               	bnz	u11910
 13746  016338  0EFA               	movlw	-6
 13747  01633A  006F FF8C  F001    	movff	plusw1,btemp
 13748  016340  0E02               	movlw	2
 13749  016342  5E01               	subwf	btemp^0,f,c
 13750  016344  A0D8               	btfss	status,0,c
 13751  016346  D02F               	goto	u11950
 13752  016348                     u11910:
 13753                           
 13754                           ;stkvar	_n @ sp[(-20)+4]
 13755  016348  0EF0               	movlw	-16
 13756  01634A  50E3               	movf	plusw1,w,c
 13757  01634C  E115               	bnz	u11921
 13758  01634E  0EF1               	movlw	-15
 13759  016350  50E3               	movf	plusw1,w,c
 13760  016352  E112               	bnz	u11921
 13761  016354  0EF2               	movlw	-14
 13762  016356  50E3               	movf	plusw1,w,c
 13763  016358  E10F               	bnz	u11921
 13764  01635A  0EF3               	movlw	-13
 13765  01635C  50E3               	movf	plusw1,w,c
 13766  01635E  E10C               	bnz	u11921
 13767  016360  0EF4               	movlw	-12
 13768  016362  50E3               	movf	plusw1,w,c
 13769  016364  E109               	bnz	u11921
 13770  016366  0EF5               	movlw	-11
 13771  016368  50E3               	movf	plusw1,w,c
 13772  01636A  E106               	bnz	u11921
 13773  01636C  0EF6               	movlw	-10
 13774  01636E  50E3               	movf	plusw1,w,c
 13775  016370  E103               	bnz	u11921
 13776  016372  0EF7               	movlw	-9
 13777  016374  50E3               	movf	plusw1,w,c
 13778  016376  A4D8               	btfss	status,2,c
 13779  016378                     u11921:
 13780  016378  D6EB               	goto	l12404
 13781                           
 13782                           ;stkvar	_p @ sp[(-20)+18]
 13783  01637A  0EFF               	movlw	-1
 13784  01637C  BEE3               	btfsc	plusw1,7,c
 13785  01637E  D007               	goto	u11930
 13786  016380  0EFF               	movlw	-1
 13787  016382  50E3               	movf	plusw1,w,c
 13788  016384  E103               	bnz	u11931
 13789  016386  0EFE               	movlw	-2
 13790  016388  04E3               	decf	plusw1,w,c
 13791  01638A  B0D8               	btfsc	status,0,c
 13792  01638C                     u11931:
 13793  01638C  D6E1               	goto	l12404
 13794  01638E                     u11930:
 13795                           
 13796                           ;stkvar	_w @ sp[(-20)+16]
 13797  01638E  0EFD               	movlw	-3
 13798  016390  BEE3               	btfsc	plusw1,7,c
 13799  016392  D009               	goto	u11950
 13800  016394  0EFD               	movlw	-3
 13801  016396  50E3               	movf	plusw1,w,c
 13802  016398  E104               	bnz	u11940
 13803  01639A  0EFC               	movlw	-4
 13804  01639C  04E3               	decf	plusw1,w,c
 13805  01639E  A0D8               	btfss	status,0,c
 13806  0163A0  D002               	goto	u11950
 13807  0163A2                     u11940:
 13808  0163A2  B23E               	btfsc	_flags^0,1,c
 13809  0163A4  D6D5               	goto	l12404
 13810  0163A6                     u11950:
 13811                           
 13812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13813  0163A6  A83E               	btfss	_flags^0,4,c
 13814  0163A8  D036               	goto	l12452
 13815                           
 13816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13817                           ;stkvar	_i @ sp[(-20)+14]
 13818  0163AA  50E1               	movf	fsr1l,w,c
 13819  0163AC  0FFA               	addlw	-6
 13820  0163AE  6ED9               	movwf	fsr2l,c
 13821  0163B0  50E2               	movf	fsr1h,w,c
 13822  0163B2  6EDA               	movwf	fsr2h,c
 13823  0163B4  0EFF               	movlw	255
 13824  0163B6  22DA               	addwfc	fsr2h,f,c
 13825  0163B8  06DE               	decf	postinc2,f,c
 13826  0163BA  0E00               	movlw	0
 13827  0163BC  5ADD               	subwfb	postdec2,f,c
 13828                           
 13829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13830                           ;stkvar	_x @ sp[(-20)+-11]
 13831                           ;stkvar	_i @ sp[(-20)+14]
 13832  0163BE  0EFA               	movlw	-6
 13833  0163C0  006F FF8C  F00B    	movff	plusw1,btemp+10
 13834  0163C6  0EFB               	movlw	-5
 13835  0163C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 13836  0163CE  0E97               	movlw	low _dbuf
 13837  0163D0  240B               	addwf	(btemp+10)^0,w,c
 13838  0163D2  6ED9               	movwf	fsr2l,c
 13839  0163D4  0E02               	movlw	high _dbuf
 13840  0163D6  200C               	addwfc	(btemp+11)^0,w,c
 13841  0163D8  6EDA               	movwf	fsr2h,c
 13842  0163DA  0EE1               	movlw	-31
 13843  0163DC  006F FF8F FFDF     	movff	plusw1,indf2
 13844                           
 13845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13846                           ;stkvar	_i @ sp[(-20)+14]
 13847  0163E2  50E1               	movf	fsr1l,w,c
 13848  0163E4  0FFA               	addlw	-6
 13849  0163E6  6ED9               	movwf	fsr2l,c
 13850  0163E8  50E2               	movf	fsr1h,w,c
 13851  0163EA  6EDA               	movwf	fsr2h,c
 13852  0163EC  0EFF               	movlw	255
 13853  0163EE  22DA               	addwfc	fsr2h,f,c
 13854  0163F0  06DE               	decf	postinc2,f,c
 13855  0163F2  0E00               	movlw	0
 13856  0163F4  5ADD               	subwfb	postdec2,f,c
 13857                           
 13858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13859                           ;stkvar	_i @ sp[(-20)+14]
 13860  0163F6  0EFA               	movlw	-6
 13861  0163F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 13862  0163FE  0EFB               	movlw	-5
 13863  016400  006F FF8C  F00C    	movff	plusw1,btemp+11
 13864  016406  0E97               	movlw	low _dbuf
 13865  016408  240B               	addwf	(btemp+10)^0,w,c
 13866  01640A  6ED9               	movwf	fsr2l,c
 13867  01640C  0E02               	movlw	high _dbuf
 13868  01640E  200C               	addwfc	(btemp+11)^0,w,c
 13869  016410  6EDA               	movwf	fsr2h,c
 13870  016412  0E30               	movlw	48
 13871  016414  6EDF               	movwf	indf2,c
 13872  016416                     l12452:
 13873                           
 13874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13875                           ;stkvar	_w @ sp[(-20)+16]
 13876  016416  0EFC               	movlw	-4
 13877  016418  006F FF8F FFE6     	movff	plusw1,postinc1
 13878  01641E  006F FF8F FFE6     	movff	plusw1,postinc1
 13879                           
 13880                           ;stkvar	_i @ sp[(-22)+14]
 13881  016424  0E97               	movlw	low _dbuf
 13882  016426  6E0B               	movwf	(btemp+10)^0,c
 13883  016428  0E02               	movlw	high _dbuf
 13884  01642A  6E0C               	movwf	(btemp+11)^0,c
 13885  01642C  0EF8               	movlw	-8
 13886  01642E  50E3               	movf	plusw1,w,c
 13887  016430  260B               	addwf	(btemp+10)^0,f,c
 13888  016432  0EF9               	movlw	-7
 13889  016434  50E3               	movf	plusw1,w,c
 13890  016436  220C               	addwfc	(btemp+11)^0,f,c
 13891  016438  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13892  01643E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13893                           
 13894                           ;stkvar	_fp @ sp[(-24)+-2]
 13895  016444  0EE6               	movlw	-26
 13896  016446  006F FF8F FFE6     	movff	plusw1,postinc1
 13897  01644C  006F FF8F FFE6     	movff	plusw1,postinc1
 13898  016452  EC73  F0CD         	call	_pad	;wreg free
 13899                           
 13900                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13901  016456  0EE1               	movlw	225
 13902  016458  26E1               	addwf	fsr1l,f,c
 13903  01645A  0EFF               	movlw	255
 13904  01645C  22E2               	addwfc	fsr1h,f,c
 13905  01645E  0012               	return		;funcret
 13906  016460                     __end_of_xtoa:
 13907                           	opt callstack 0
 13908                           
 13909 ;; *************** function _toupper *****************
 13910 ;; Defined at:
 13911 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13912 ;; Parameters:    Size  Location     Type
 13913 ;;  c               2  [STACK] int 
 13914 ;; Auto vars:     Size  Location     Type
 13915 ;;		None
 13916 ;; Return value:  Size  Location     Type
 13917 ;;                  2  [STACK] int 
 13918 ;; Registers used:
 13919 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13920 ;; Tracked objects:
 13921 ;;		On entry : 0/2
 13922 ;;		On exit  : 0/0
 13923 ;;		Unchanged: 0/0
 13924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13929 ;;Total ram usage:        0 bytes
 13930 ;; Hardware stack levels used:    1
 13931 ;; Hardware stack levels required when called:   16
 13932 ;; This function calls:
 13933 ;;		_islower
 13934 ;; This function is called by:
 13935 ;;		_xtoa
 13936 ;; This function uses a reentrant model
 13937 ;;
 13938                           
 13939                           	psect	text49
 13940  01ACA6                     __ptext49:
 13941                           	opt callstack 0
 13942  01ACA6                     _toupper:
 13943                           	opt callstack 0
 13944                           
 13945                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13946  01ACA6  52E6               	movf	postinc1,f,c
 13947  01ACA8  52E6               	movf	postinc1,f,c
 13948                           
 13949                           ;stkvar	_c @ sp[(-2)+-2]
 13950                           
 13951                           ;incstack = 0
 13952 ;; hardware stack exceeded
 13953  01ACAA  0EFC               	movlw	-4
 13954  01ACAC  50E3               	movf	plusw1,w,c
 13955  01ACAE  0F9F               	addlw	159
 13956  01ACB0  6E0B               	movwf	(btemp+10)^0,c
 13957  01ACB2  0EFD               	movlw	-3
 13958  01ACB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13959  01ACBA  0EFF               	movlw	255
 13960  01ACBC  220C               	addwfc	(btemp+11)^0,f,c
 13961  01ACBE  500C               	movf	(btemp+11)^0,w,c
 13962  01ACC0  E106               	bnz	u6250
 13963  01ACC2  0E1A               	movlw	26
 13964  01ACC4  5C0B               	subwf	(btemp+10)^0,w,c
 13965  01ACC6  B0D8               	btfsc	status,0,c
 13966  01ACC8  D002               	goto	u6250
 13967  01ACCA  0E01               	movlw	1
 13968  01ACCC  D001               	goto	u6260
 13969  01ACCE                     u6250:
 13970  01ACCE  0E00               	movlw	0
 13971  01ACD0                     u6260:
 13972  01ACD0  6E0B               	movwf	(btemp+10)^0,c
 13973  01ACD2  6A0C               	clrf	(btemp+11)^0,c
 13974                           
 13975                           ;stkvar	_toupper$6362 @ sp[(-2)+0]
 13976  01ACD4  0EFE               	movlw	-2
 13977  01ACD6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13978  01ACDC  0EFF               	movlw	-1
 13979  01ACDE  0060  F033  FFE3   	movff	btemp+11,plusw1
 13980                           
 13981                           ;stkvar	_toupper$6362 @ sp[(-2)+0]
 13982  01ACE4  0EFE               	movlw	-2
 13983  01ACE6  006F FF8C  F001    	movff	plusw1,btemp
 13984  01ACEC  0EFF               	movlw	-1
 13985  01ACEE  50E3               	movf	plusw1,w,c
 13986  01ACF0  1001               	iorwf	btemp^0,w,c
 13987  01ACF2  B4D8               	btfsc	status,2,c
 13988  01ACF4  D00D               	goto	l8098
 13989                           
 13990                           ;stkvar	_c @ sp[(-2)+-2]
 13991  01ACF6  0EFC               	movlw	-4
 13992  01ACF8  006F FF8C  F001    	movff	plusw1,btemp
 13993  01ACFE  0EFD               	movlw	-3
 13994  01AD00  006F FF8C  F002    	movff	plusw1,btemp+1
 13995  01AD06  0E5F               	movlw	95
 13996  01AD08  1601               	andwf	btemp^0,f,c
 13997  01AD0A  0E00               	movlw	0
 13998  01AD0C  1602               	andwf	(btemp+1)^0,f,c
 13999  01AD0E  D008               	goto	l3479
 14000  01AD10                     l8098:
 14001                           
 14002                           ;stkvar	_c @ sp[(-2)+-2]
 14003  01AD10  0EFC               	movlw	-4
 14004  01AD12  006F FF8C  F001    	movff	plusw1,btemp
 14005  01AD18  0EFD               	movlw	-3
 14006  01AD1A  006F FF8C  F002    	movff	plusw1,btemp+1
 14007  01AD20                     l3479:
 14008                           
 14009                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14010  01AD20  52E5               	movf	postdec1,f,c
 14011  01AD22  52E5               	movf	postdec1,f,c
 14012  01AD24  52E5               	movf	postdec1,f,c
 14013  01AD26  52E5               	movf	postdec1,f,c
 14014  01AD28  0012               	return		;funcret
 14015  01AD2A                     __end_of_toupper:
 14016                           	opt callstack 0
 14017                           
 14018 ;; *************** function _islower *****************
 14019 ;; Defined at:
 14020 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 14021 ;; Parameters:    Size  Location     Type
 14022 ;;  c               2  [STACK] int 
 14023 ;; Auto vars:     Size  Location     Type
 14024 ;;		None
 14025 ;; Return value:  Size  Location     Type
 14026 ;;                  2  [STACK] int 
 14027 ;; Registers used:
 14028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14029 ;; Tracked objects:
 14030 ;;		On entry : 0/0
 14031 ;;		On exit  : 0/0
 14032 ;;		Unchanged: 0/0
 14033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14038 ;;Total ram usage:        0 bytes
 14039 ;; Hardware stack levels used:    1
 14040 ;; Hardware stack levels required when called:   15
 14041 ;; This function calls:
 14042 ;;		Nothing
 14043 ;; This function is called by:
 14044 ;;		_toupper
 14045 ;; This function uses a reentrant model
 14046 ;;
 14047                           
 14048                           	psect	text50
 14049  01B9D2                     __ptext50:
 14050                           	opt callstack 0
 14051  01B9D2                     _islower:
 14052                           	opt callstack 0
 14053                           
 14054                           ;stkvar	_c @ sp[(0)+-2]
 14055                           
 14056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14057                           ;incstack = 0
 14058 ;; hardware stack exceeded
 14059  01B9D2  0EFE               	movlw	-2
 14060  01B9D4  50E3               	movf	plusw1,w,c
 14061  01B9D6  0F9F               	addlw	159
 14062  01B9D8  6E0B               	movwf	(btemp+10)^0,c
 14063  01B9DA  0EFF               	movlw	-1
 14064  01B9DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 14065  01B9E2  0EFF               	movlw	255
 14066  01B9E4  220C               	addwfc	(btemp+11)^0,f,c
 14067  01B9E6  500C               	movf	(btemp+11)^0,w,c
 14068  01B9E8  E106               	bnz	u5890
 14069  01B9EA  0E1A               	movlw	26
 14070  01B9EC  5C0B               	subwf	(btemp+10)^0,w,c
 14071  01B9EE  B0D8               	btfsc	status,0,c
 14072  01B9F0  D002               	goto	u5890
 14073  01B9F2  0E01               	movlw	1
 14074  01B9F4  D001               	goto	u5900
 14075  01B9F6                     u5890:
 14076  01B9F6  0E00               	movlw	0
 14077  01B9F8                     u5900:
 14078  01B9F8  6E01               	movwf	btemp^0,c
 14079  01B9FA  6A02               	clrf	(btemp+1)^0,c
 14080                           
 14081                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14082  01B9FC  52E5               	movf	postdec1,f,c
 14083  01B9FE  52E5               	movf	postdec1,f,c
 14084  01BA00  0012               	return		;funcret
 14085  01BA02                     __end_of_islower:
 14086                           	opt callstack 0
 14087                           
 14088 ;; *************** function _isalpha *****************
 14089 ;; Defined at:
 14090 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14091 ;; Parameters:    Size  Location     Type
 14092 ;;  c               2  [STACK] int 
 14093 ;; Auto vars:     Size  Location     Type
 14094 ;;		None
 14095 ;; Return value:  Size  Location     Type
 14096 ;;                  2  [STACK] int 
 14097 ;; Registers used:
 14098 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14099 ;; Tracked objects:
 14100 ;;		On entry : 0/0
 14101 ;;		On exit  : 0/0
 14102 ;;		Unchanged: 0/0
 14103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14108 ;;Total ram usage:        0 bytes
 14109 ;; Hardware stack levels used:    1
 14110 ;; Hardware stack levels required when called:   15
 14111 ;; This function calls:
 14112 ;;		Nothing
 14113 ;; This function is called by:
 14114 ;;		_xtoa
 14115 ;; This function uses a reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text51
 14119  01B614                     __ptext51:
 14120                           	opt callstack 0
 14121  01B614                     _isalpha:
 14122                           	opt callstack 0
 14123                           
 14124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14125                           ;incstack = 0
 14126 ;; hardware stack exceeded
 14127  01B614  0E9F               	movlw	159
 14128  01B616  6E0B               	movwf	(btemp+10)^0,c
 14129  01B618  0EFF               	movlw	255
 14130  01B61A  6E0C               	movwf	(btemp+11)^0,c
 14131                           
 14132                           ;stkvar	_c @ sp[(0)+-2]
 14133  01B61C  0EFE               	movlw	-2
 14134  01B61E  006F FF8C  F009    	movff	plusw1,btemp+8
 14135  01B624  0EFF               	movlw	-1
 14136  01B626  006F FF8C  F00A    	movff	plusw1,btemp+9
 14137  01B62C  0E20               	movlw	32
 14138  01B62E  1209               	iorwf	(btemp+8)^0,f,c
 14139  01B630  0E00               	movlw	0
 14140  01B632  120A               	iorwf	(btemp+9)^0,f,c
 14141  01B634  500B               	movf	(btemp+10)^0,w,c
 14142  01B636  2609               	addwf	(btemp+8)^0,f,c
 14143  01B638  500C               	movf	(btemp+11)^0,w,c
 14144  01B63A  220A               	addwfc	(btemp+9)^0,f,c
 14145  01B63C  500A               	movf	(btemp+9)^0,w,c
 14146  01B63E  E106               	bnz	u6230
 14147  01B640  0E1A               	movlw	26
 14148  01B642  5C09               	subwf	(btemp+8)^0,w,c
 14149  01B644  B0D8               	btfsc	status,0,c
 14150  01B646  D002               	goto	u6230
 14151  01B648  0E01               	movlw	1
 14152  01B64A  D001               	goto	u6240
 14153  01B64C                     u6230:
 14154  01B64C  0E00               	movlw	0
 14155  01B64E                     u6240:
 14156  01B64E  6E01               	movwf	btemp^0,c
 14157  01B650  6A02               	clrf	(btemp+1)^0,c
 14158                           
 14159                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14160  01B652  52E5               	movf	postdec1,f,c
 14161  01B654  52E5               	movf	postdec1,f,c
 14162  01B656  0012               	return		;funcret
 14163  01B658                     __end_of_isalpha:
 14164                           	opt callstack 0
 14165                           
 14166 ;; *************** function _utoa *****************
 14167 ;; Defined at:
 14168 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14169 ;; Parameters:    Size  Location     Type
 14170 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14171 ;;		 -> f(6), NULL(0), 
 14172 ;;  d               8  [STACK] unsigned long long 
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;  n               8  [STACK] unsigned long long 
 14175 ;;  i               2  [STACK] int 
 14176 ;;  w               2  [STACK] int 
 14177 ;;  p               2  [STACK] int 
 14178 ;; Return value:  Size  Location     Type
 14179 ;;                  2  [STACK] int 
 14180 ;; Registers used:
 14181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14182 ;; Tracked objects:
 14183 ;;		On entry : 0/0
 14184 ;;		On exit  : 0/0
 14185 ;;		Unchanged: 0/0
 14186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14191 ;;Total ram usage:        0 bytes
 14192 ;; Hardware stack levels used:    1
 14193 ;; Hardware stack levels required when called:   20
 14194 ;; This function calls:
 14195 ;;		___lodiv
 14196 ;;		___lomod
 14197 ;;		_pad
 14198 ;; This function is called by:
 14199 ;;		_vfpfcnvrt
 14200 ;; This function uses a reentrant model
 14201 ;;
 14202                           
 14203                           	psect	text52
 14204  0167CC                     __ptext52:
 14205                           	opt callstack 0
 14206  0167CC                     _utoa:
 14207                           	opt callstack 0
 14208                           
 14209                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14210  0167CC  0E0E               	movlw	14
 14211  0167CE  26E1               	addwf	fsr1l,f,c
 14212  0167D0  0E00               	movlw	0
 14213  0167D2  22E2               	addwfc	fsr1h,f,c
 14214                           
 14215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14216                           
 14217                           ;incstack = 0
 14218 ;; hardware stack exceeded
 14219  0167D4  AE3D               	btfss	(_prec+1)^0,7,c
 14220                           
 14221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14222  0167D6  923E               	bcf	_flags^0,1,c
 14223                           
 14224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14225  0167D8  BE3D               	btfsc	(_prec+1)^0,7,c
 14226  0167DA  D005               	goto	u11720
 14227  0167DC  503D               	movf	(_prec+1)^0,w,c
 14228  0167DE  E110               	bnz	l12352
 14229  0167E0  043C               	decf	_prec^0,w,c
 14230  0167E2  B0D8               	btfsc	status,0,c
 14231  0167E4  D00D               	goto	l12352
 14232  0167E6                     u11720:
 14233  0167E6  0E01               	movlw	1
 14234  0167E8  6E0B               	movwf	(btemp+10)^0,c
 14235  0167EA  0E00               	movlw	0
 14236  0167EC  6E0C               	movwf	(btemp+11)^0,c
 14237                           
 14238                           ;stkvar	_p @ sp[(-14)+12]
 14239  0167EE  0EFE               	movlw	-2
 14240  0167F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14241  0167F6  0EFF               	movlw	-1
 14242  0167F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14243  0167FE  D008               	goto	l2297
 14244  016800                     l12352:
 14245                           
 14246                           ;stkvar	_p @ sp[(-14)+12]
 14247  016800  0EFE               	movlw	-2
 14248  016802  0060  F0F3  FFE3   	movff	_prec,plusw1
 14249  016808  0EFF               	movlw	-1
 14250  01680A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14251  016810                     l2297:
 14252                           
 14253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 14254                           ;stkvar	_w @ sp[(-14)+10]
 14255  016810  0EFC               	movlw	-4
 14256  016812  0060  F0EB  FFE3   	movff	_width,plusw1
 14257  016818  0EFD               	movlw	-3
 14258  01681A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14259                           
 14260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 14261                           ;stkvar	_d @ sp[(-14)+-10]
 14262  016820  0EE8               	movlw	232
 14263  016822  24E1               	addwf	fsr1l,w,c
 14264  016824  6ED9               	movwf	fsr2l,c
 14265  016826  0EFF               	movlw	255
 14266  016828  20E2               	addwfc	fsr1h,w,c
 14267  01682A  6EDA               	movwf	fsr2h,c
 14268                           
 14269                           ;stkvar	_n @ sp[(-14)+0]
 14270  01682C  0E08               	movlw	8
 14271  01682E  6E01               	movwf	btemp^0,c
 14272  016830  0EF2               	movlw	-14
 14273  016832                     us1173999:
 14274  016832  006F FF7B FFE3     	movff	postinc2,plusw1
 14275  016838  28E8               	incf	wreg,w,c
 14276  01683A  2E01               	decfsz	btemp^0,f,c
 14277  01683C  D7FA               	bra	us1173999
 14278                           
 14279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 14280  01683E  0E4F               	movlw	79
 14281  016840  6E0B               	movwf	(btemp+10)^0,c
 14282  016842  0E00               	movlw	0
 14283  016844  6E0C               	movwf	(btemp+11)^0,c
 14284                           
 14285                           ;stkvar	_i @ sp[(-14)+8]
 14286  016846  0EFA               	movlw	-6
 14287  016848  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14288  01684E  0EFB               	movlw	-5
 14289  016850  0060  F033  FFE3   	movff	btemp+11,plusw1
 14290                           
 14291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 14292  016856  0102               	movlb	2	; () banked
 14293  016858  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14294                           
 14295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14296  01685A  D0FB               	goto	l12370
 14297  01685C                     l12360:
 14298                           
 14299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 14300                           ;stkvar	_i @ sp[(-14)+8]
 14301  01685C  50E1               	movf	fsr1l,w,c
 14302  01685E  0FFA               	addlw	-6
 14303  016860  6ED9               	movwf	fsr2l,c
 14304  016862  50E2               	movf	fsr1h,w,c
 14305  016864  6EDA               	movwf	fsr2h,c
 14306  016866  0EFF               	movlw	255
 14307  016868  22DA               	addwfc	fsr2h,f,c
 14308  01686A  06DE               	decf	postinc2,f,c
 14309  01686C  0E00               	movlw	0
 14310  01686E  5ADD               	subwfb	postdec2,f,c
 14311                           
 14312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 14313  016870  0E0A               	movlw	10
 14314  016872  6EE6               	movwf	postinc1,c
 14315  016874  0E00               	movlw	0
 14316  016876  6EE6               	movwf	postinc1,c
 14317  016878  0E00               	movlw	0
 14318  01687A  6EE6               	movwf	postinc1,c
 14319  01687C  0E00               	movlw	0
 14320  01687E  6EE6               	movwf	postinc1,c
 14321  016880  0E00               	movlw	0
 14322  016882  6EE6               	movwf	postinc1,c
 14323  016884  0E00               	movlw	0
 14324  016886  6EE6               	movwf	postinc1,c
 14325  016888  0E00               	movlw	0
 14326  01688A  6EE6               	movwf	postinc1,c
 14327  01688C  0E00               	movlw	0
 14328  01688E  6EE6               	movwf	postinc1,c
 14329                           
 14330                           ;stkvar	_n @ sp[(-22)+0]
 14331  016890  50E1               	movf	fsr1l,w,c
 14332  016892  0FEA               	addlw	-22
 14333  016894  6ED9               	movwf	fsr2l,c
 14334  016896  50E2               	movf	fsr1h,w,c
 14335  016898  6EDA               	movwf	fsr2h,c
 14336  01689A  0EFF               	movlw	255
 14337  01689C  22DA               	addwfc	fsr2h,f,c
 14338  01689E  006F FF7B FFE6     	movff	postinc2,postinc1
 14339  0168A4  006F FF7B FFE6     	movff	postinc2,postinc1
 14340  0168AA  006F FF7B FFE6     	movff	postinc2,postinc1
 14341  0168B0  006F FF7B FFE6     	movff	postinc2,postinc1
 14342  0168B6  006F FF7B FFE6     	movff	postinc2,postinc1
 14343  0168BC  006F FF7B FFE6     	movff	postinc2,postinc1
 14344  0168C2  006F FF7B FFE6     	movff	postinc2,postinc1
 14345  0168C8  006F FF7B FFE6     	movff	postinc2,postinc1
 14346  0168CE  EC91  F0CA         	call	___lomod	;wreg free
 14347  0168D2  52E5               	movf	postdec1,f,c
 14348  0168D4  006F FF9C  F018    	movff	indf1,btemp+23
 14349  0168DA  52E5               	movf	postdec1,f,c
 14350  0168DC  006F FF9C  F017    	movff	indf1,btemp+22
 14351  0168E2  52E5               	movf	postdec1,f,c
 14352  0168E4  006F FF9C  F016    	movff	indf1,btemp+21
 14353  0168EA  52E5               	movf	postdec1,f,c
 14354  0168EC  006F FF9C  F015    	movff	indf1,btemp+20
 14355  0168F2  52E5               	movf	postdec1,f,c
 14356  0168F4  006F FF9C  F014    	movff	indf1,btemp+19
 14357  0168FA  52E5               	movf	postdec1,f,c
 14358  0168FC  006F FF9C  F013    	movff	indf1,btemp+18
 14359  016902  52E5               	movf	postdec1,f,c
 14360  016904  006F FF9C  F012    	movff	indf1,btemp+17
 14361  01690A  52E5               	movf	postdec1,f,c
 14362  01690C  006F FF9C  F011    	movff	indf1,btemp+16
 14363  016912  0EF8               	movlw	248
 14364  016914  26E1               	addwf	fsr1l,f,c
 14365  016916  0EFF               	movlw	255
 14366  016918  22E2               	addwfc	fsr1h,f,c
 14367  01691A  0E30               	movlw	48
 14368  01691C  2611               	addwf	(btemp+16)^0,f,c
 14369                           
 14370                           ;stkvar	_i @ sp[(-14)+8]
 14371  01691E  0EFA               	movlw	-6
 14372  016920  006F FF8C  F00B    	movff	plusw1,btemp+10
 14373  016926  0EFB               	movlw	-5
 14374  016928  006F FF8C  F00C    	movff	plusw1,btemp+11
 14375  01692E  0E97               	movlw	low _dbuf
 14376  016930  240B               	addwf	(btemp+10)^0,w,c
 14377  016932  6ED9               	movwf	fsr2l,c
 14378  016934  0E02               	movlw	high _dbuf
 14379  016936  200C               	addwfc	(btemp+11)^0,w,c
 14380  016938  6EDA               	movwf	fsr2h,c
 14381  01693A  0060  F047  FFDF   	movff	btemp+16,indf2
 14382                           
 14383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 14384                           ;stkvar	_p @ sp[(-14)+12]
 14385  016940  50E1               	movf	fsr1l,w,c
 14386  016942  0FFE               	addlw	-2
 14387  016944  6ED9               	movwf	fsr2l,c
 14388  016946  50E2               	movf	fsr1h,w,c
 14389  016948  6EDA               	movwf	fsr2h,c
 14390  01694A  0EFF               	movlw	255
 14391  01694C  22DA               	addwfc	fsr2h,f,c
 14392  01694E  06DE               	decf	postinc2,f,c
 14393  016950  0E00               	movlw	0
 14394  016952  5ADD               	subwfb	postdec2,f,c
 14395                           
 14396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 14397                           ;stkvar	_w @ sp[(-14)+10]
 14398  016954  50E1               	movf	fsr1l,w,c
 14399  016956  0FFC               	addlw	-4
 14400  016958  6ED9               	movwf	fsr2l,c
 14401  01695A  50E2               	movf	fsr1h,w,c
 14402  01695C  6EDA               	movwf	fsr2h,c
 14403  01695E  0EFF               	movlw	255
 14404  016960  22DA               	addwfc	fsr2h,f,c
 14405  016962  06DE               	decf	postinc2,f,c
 14406  016964  0E00               	movlw	0
 14407  016966  5ADD               	subwfb	postdec2,f,c
 14408                           
 14409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 14410  016968  0E0A               	movlw	10
 14411  01696A  6EE6               	movwf	postinc1,c
 14412  01696C  0E00               	movlw	0
 14413  01696E  6EE6               	movwf	postinc1,c
 14414  016970  0E00               	movlw	0
 14415  016972  6EE6               	movwf	postinc1,c
 14416  016974  0E00               	movlw	0
 14417  016976  6EE6               	movwf	postinc1,c
 14418  016978  0E00               	movlw	0
 14419  01697A  6EE6               	movwf	postinc1,c
 14420  01697C  0E00               	movlw	0
 14421  01697E  6EE6               	movwf	postinc1,c
 14422  016980  0E00               	movlw	0
 14423  016982  6EE6               	movwf	postinc1,c
 14424  016984  0E00               	movlw	0
 14425  016986  6EE6               	movwf	postinc1,c
 14426                           
 14427                           ;stkvar	_n @ sp[(-22)+0]
 14428  016988  50E1               	movf	fsr1l,w,c
 14429  01698A  0FEA               	addlw	-22
 14430  01698C  6ED9               	movwf	fsr2l,c
 14431  01698E  50E2               	movf	fsr1h,w,c
 14432  016990  6EDA               	movwf	fsr2h,c
 14433  016992  0EFF               	movlw	255
 14434  016994  22DA               	addwfc	fsr2h,f,c
 14435  016996  006F FF7B FFE6     	movff	postinc2,postinc1
 14436  01699C  006F FF7B FFE6     	movff	postinc2,postinc1
 14437  0169A2  006F FF7B FFE6     	movff	postinc2,postinc1
 14438  0169A8  006F FF7B FFE6     	movff	postinc2,postinc1
 14439  0169AE  006F FF7B FFE6     	movff	postinc2,postinc1
 14440  0169B4  006F FF7B FFE6     	movff	postinc2,postinc1
 14441  0169BA  006F FF7B FFE6     	movff	postinc2,postinc1
 14442  0169C0  006F FF7B FFE6     	movff	postinc2,postinc1
 14443  0169C6  EC6D  F0C6         	call	___lodiv	;wreg free
 14444  0169CA  52E5               	movf	postdec1,f,c
 14445  0169CC  006F FF9C  F018    	movff	indf1,btemp+23
 14446  0169D2  52E5               	movf	postdec1,f,c
 14447  0169D4  006F FF9C  F017    	movff	indf1,btemp+22
 14448  0169DA  52E5               	movf	postdec1,f,c
 14449  0169DC  006F FF9C  F016    	movff	indf1,btemp+21
 14450  0169E2  52E5               	movf	postdec1,f,c
 14451  0169E4  006F FF9C  F015    	movff	indf1,btemp+20
 14452  0169EA  52E5               	movf	postdec1,f,c
 14453  0169EC  006F FF9C  F014    	movff	indf1,btemp+19
 14454  0169F2  52E5               	movf	postdec1,f,c
 14455  0169F4  006F FF9C  F013    	movff	indf1,btemp+18
 14456  0169FA  52E5               	movf	postdec1,f,c
 14457  0169FC  006F FF9C  F012    	movff	indf1,btemp+17
 14458  016A02  52E5               	movf	postdec1,f,c
 14459  016A04  006F FF9C  F011    	movff	indf1,btemp+16
 14460  016A0A  0EF8               	movlw	248
 14461  016A0C  26E1               	addwf	fsr1l,f,c
 14462  016A0E  0EFF               	movlw	255
 14463  016A10  22E2               	addwfc	fsr1h,f,c
 14464                           
 14465                           ;stkvar	_n @ sp[(-14)+0]
 14466  016A12  0EF2               	movlw	-14
 14467  016A14  0060  F047  FFE3   	movff	btemp+16,plusw1
 14468  016A1A  0EF3               	movlw	-13
 14469  016A1C  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14470  016A22  0EF4               	movlw	-12
 14471  016A24  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14472  016A2A  0EF5               	movlw	-11
 14473  016A2C  0060  F053  FFE3   	movff	btemp+19,plusw1
 14474  016A32  0EF6               	movlw	-10
 14475  016A34  0060  F057  FFE3   	movff	btemp+20,plusw1
 14476  016A3A  0EF7               	movlw	-9
 14477  016A3C  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14478  016A42  0EF8               	movlw	-8
 14479  016A44  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14480  016A4A  0EF9               	movlw	-7
 14481  016A4C  0060  F063  FFE3   	movff	btemp+23,plusw1
 14482  016A52                     l12370:
 14483                           
 14484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14485                           ;stkvar	_i @ sp[(-14)+8]
 14486  016A52  0EFA               	movlw	-6
 14487  016A54  006F FF8C  F001    	movff	plusw1,btemp
 14488  016A5A  0EFB               	movlw	-5
 14489  016A5C  50E3               	movf	plusw1,w,c
 14490  016A5E  1001               	iorwf	btemp^0,w,c
 14491  016A60  B4D8               	btfsc	status,2,c
 14492  016A62  D02F               	goto	u11780
 14493                           
 14494                           ;stkvar	_n @ sp[(-14)+0]
 14495  016A64  0EF2               	movlw	-14
 14496  016A66  50E3               	movf	plusw1,w,c
 14497  016A68  E115               	bnz	u11751
 14498  016A6A  0EF3               	movlw	-13
 14499  016A6C  50E3               	movf	plusw1,w,c
 14500  016A6E  E112               	bnz	u11751
 14501  016A70  0EF4               	movlw	-12
 14502  016A72  50E3               	movf	plusw1,w,c
 14503  016A74  E10F               	bnz	u11751
 14504  016A76  0EF5               	movlw	-11
 14505  016A78  50E3               	movf	plusw1,w,c
 14506  016A7A  E10C               	bnz	u11751
 14507  016A7C  0EF6               	movlw	-10
 14508  016A7E  50E3               	movf	plusw1,w,c
 14509  016A80  E109               	bnz	u11751
 14510  016A82  0EF7               	movlw	-9
 14511  016A84  50E3               	movf	plusw1,w,c
 14512  016A86  E106               	bnz	u11751
 14513  016A88  0EF8               	movlw	-8
 14514  016A8A  50E3               	movf	plusw1,w,c
 14515  016A8C  E103               	bnz	u11751
 14516  016A8E  0EF9               	movlw	-7
 14517  016A90  50E3               	movf	plusw1,w,c
 14518  016A92  A4D8               	btfss	status,2,c
 14519  016A94                     u11751:
 14520  016A94  D6E3               	goto	l12360
 14521                           
 14522                           ;stkvar	_p @ sp[(-14)+12]
 14523  016A96  0EFF               	movlw	-1
 14524  016A98  BEE3               	btfsc	plusw1,7,c
 14525  016A9A  D007               	goto	u11760
 14526  016A9C  0EFF               	movlw	-1
 14527  016A9E  50E3               	movf	plusw1,w,c
 14528  016AA0  E103               	bnz	u11761
 14529  016AA2  0EFE               	movlw	-2
 14530  016AA4  04E3               	decf	plusw1,w,c
 14531  016AA6  B0D8               	btfsc	status,0,c
 14532  016AA8                     u11761:
 14533  016AA8  D6D9               	goto	l12360
 14534  016AAA                     u11760:
 14535                           
 14536                           ;stkvar	_w @ sp[(-14)+10]
 14537  016AAA  0EFD               	movlw	-3
 14538  016AAC  BEE3               	btfsc	plusw1,7,c
 14539  016AAE  D009               	goto	u11780
 14540  016AB0  0EFD               	movlw	-3
 14541  016AB2  50E3               	movf	plusw1,w,c
 14542  016AB4  E104               	bnz	u11770
 14543  016AB6  0EFC               	movlw	-4
 14544  016AB8  04E3               	decf	plusw1,w,c
 14545  016ABA  A0D8               	btfss	status,0,c
 14546  016ABC  D002               	goto	u11780
 14547  016ABE                     u11770:
 14548  016ABE  B23E               	btfsc	_flags^0,1,c
 14549  016AC0  D6CD               	goto	l12360
 14550  016AC2                     u11780:
 14551                           
 14552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14553                           ;stkvar	_w @ sp[(-14)+10]
 14554  016AC2  0EFC               	movlw	-4
 14555  016AC4  006F FF8F FFE6     	movff	plusw1,postinc1
 14556  016ACA  006F FF8F FFE6     	movff	plusw1,postinc1
 14557                           
 14558                           ;stkvar	_i @ sp[(-16)+8]
 14559  016AD0  0E97               	movlw	low _dbuf
 14560  016AD2  6E0B               	movwf	(btemp+10)^0,c
 14561  016AD4  0E02               	movlw	high _dbuf
 14562  016AD6  6E0C               	movwf	(btemp+11)^0,c
 14563  016AD8  0EF8               	movlw	-8
 14564  016ADA  50E3               	movf	plusw1,w,c
 14565  016ADC  260B               	addwf	(btemp+10)^0,f,c
 14566  016ADE  0EF9               	movlw	-7
 14567  016AE0  50E3               	movf	plusw1,w,c
 14568  016AE2  220C               	addwfc	(btemp+11)^0,f,c
 14569  016AE4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14570  016AEA  0060  F033  FFE6   	movff	btemp+11,postinc1
 14571                           
 14572                           ;stkvar	_fp @ sp[(-18)+-2]
 14573  016AF0  0EEC               	movlw	-20
 14574  016AF2  006F FF8F FFE6     	movff	plusw1,postinc1
 14575  016AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 14576  016AFE  EC73  F0CD         	call	_pad	;wreg free
 14577                           
 14578                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14579  016B02  0EE8               	movlw	232
 14580  016B04  26E1               	addwf	fsr1l,f,c
 14581  016B06  0EFF               	movlw	255
 14582  016B08  22E2               	addwfc	fsr1h,f,c
 14583  016B0A  0012               	return		;funcret
 14584  016B0C                     __end_of_utoa:
 14585                           	opt callstack 0
 14586                           
 14587 ;; *************** function ___lomod *****************
 14588 ;; Defined at:
 14589 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14590 ;; Parameters:    Size  Location     Type
 14591 ;;  dividend        8  [STACK] unsigned long long 
 14592 ;;  divisor         8  [STACK] unsigned long long 
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;  counter         1  [STACK] unsigned char 
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  8  [STACK] unsigned long long 
 14597 ;; Registers used:
 14598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/2
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14608 ;;Total ram usage:        0 bytes
 14609 ;; Hardware stack levels used:    1
 14610 ;; Hardware stack levels required when called:   15
 14611 ;; This function calls:
 14612 ;;		Nothing
 14613 ;; This function is called by:
 14614 ;;		_utoa
 14615 ;; This function uses a reentrant model
 14616 ;;
 14617                           
 14618                           	psect	text53
 14619  019522                     __ptext53:
 14620                           	opt callstack 0
 14621  019522                     ___lomod:
 14622                           	opt callstack 0
 14623                           
 14624                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14625  019522  52E6               	movf	postinc1,f,c
 14626                           
 14627                           ;stkvar	_divisor @ sp[(-1)+-16]
 14628                           
 14629                           ;incstack = 0
 14630 ;; hardware stack exceeded
 14631  019524  0EEF               	movlw	-17
 14632  019526  50E3               	movf	plusw1,w,c
 14633  019528  E116               	bnz	u7380
 14634  01952A  0EF0               	movlw	-16
 14635  01952C  50E3               	movf	plusw1,w,c
 14636  01952E  E113               	bnz	u7380
 14637  019530  0EF1               	movlw	-15
 14638  019532  50E3               	movf	plusw1,w,c
 14639  019534  E110               	bnz	u7380
 14640  019536  0EF2               	movlw	-14
 14641  019538  50E3               	movf	plusw1,w,c
 14642  01953A  E10D               	bnz	u7380
 14643  01953C  0EF3               	movlw	-13
 14644  01953E  50E3               	movf	plusw1,w,c
 14645  019540  E10A               	bnz	u7380
 14646  019542  0EF4               	movlw	-12
 14647  019544  50E3               	movf	plusw1,w,c
 14648  019546  E107               	bnz	u7380
 14649  019548  0EF5               	movlw	-11
 14650  01954A  50E3               	movf	plusw1,w,c
 14651  01954C  E104               	bnz	u7380
 14652  01954E  0EF6               	movlw	-10
 14653  019550  50E3               	movf	plusw1,w,c
 14654  019552  B4D8               	btfsc	status,2,c
 14655  019554  D075               	goto	u7410
 14656  019556                     u7380:
 14657                           
 14658                           ;stkvar	_counter @ sp[(-1)+0]
 14659  019556  0EFF               	movlw	-1
 14660  019558  6AE3               	clrf	plusw1,c
 14661  01955A  D012               	goto	L14
 14662  01955C                     l8708:
 14663                           
 14664                           ;stkvar	_divisor @ sp[(-1)+-16]
 14665  01955C  90D8               	bcf	status,0,c
 14666  01955E  0EEF               	movlw	-17
 14667  019560  36E3               	rlcf	plusw1,f,c
 14668  019562  0EF0               	movlw	-16
 14669  019564  36E3               	rlcf	plusw1,f,c
 14670  019566  0EF1               	movlw	-15
 14671  019568  36E3               	rlcf	plusw1,f,c
 14672  01956A  0EF2               	movlw	-14
 14673  01956C  36E3               	rlcf	plusw1,f,c
 14674  01956E  0EF3               	movlw	-13
 14675  019570  36E3               	rlcf	plusw1,f,c
 14676  019572  0EF4               	movlw	-12
 14677  019574  36E3               	rlcf	plusw1,f,c
 14678  019576  0EF5               	movlw	-11
 14679  019578  36E3               	rlcf	plusw1,f,c
 14680  01957A  0EF6               	movlw	-10
 14681  01957C  36E3               	rlcf	plusw1,f,c
 14682                           
 14683                           ;stkvar	_counter @ sp[(-1)+0]
 14684  01957E  0EFF               	movlw	-1
 14685  019580                     L14:
 14686  019580  2AE3               	incf	plusw1,f,c
 14687                           
 14688                           ;stkvar	_divisor @ sp[(-1)+-16]
 14689  019582  0EF6               	movlw	-10
 14690  019584  AEE3               	btfss	plusw1,7,c
 14691  019586  D7EA               	goto	l8708
 14692  019588                     u7390:
 14693                           
 14694                           ;stkvar	_divisor @ sp[(-1)+-16]
 14695                           ;stkvar	_dividend @ sp[(-1)+-8]
 14696  019588  50E1               	movf	fsr1l,w,c
 14697  01958A  0FF7               	addlw	-9
 14698  01958C  6ED9               	movwf	fsr2l,c
 14699  01958E  50E2               	movf	fsr1h,w,c
 14700  019590  6EDA               	movwf	fsr2h,c
 14701  019592  0EFF               	movlw	255
 14702  019594  22DA               	addwfc	fsr2h,f,c
 14703  019596  0EEF               	movlw	-17
 14704  019598  50E3               	movf	plusw1,w,c
 14705  01959A  5CDE               	subwf	postinc2,w,c
 14706  01959C  0EF0               	movlw	-16
 14707  01959E  50E3               	movf	plusw1,w,c
 14708  0195A0  58DE               	subwfb	postinc2,w,c
 14709  0195A2  0EF1               	movlw	-15
 14710  0195A4  50E3               	movf	plusw1,w,c
 14711  0195A6  58DE               	subwfb	postinc2,w,c
 14712  0195A8  0EF2               	movlw	-14
 14713  0195AA  50E3               	movf	plusw1,w,c
 14714  0195AC  58DE               	subwfb	postinc2,w,c
 14715  0195AE  0EF3               	movlw	-13
 14716  0195B0  50E3               	movf	plusw1,w,c
 14717  0195B2  58DE               	subwfb	postinc2,w,c
 14718  0195B4  0EF4               	movlw	-12
 14719  0195B6  50E3               	movf	plusw1,w,c
 14720  0195B8  58DE               	subwfb	postinc2,w,c
 14721  0195BA  0EF5               	movlw	-11
 14722  0195BC  50E3               	movf	plusw1,w,c
 14723  0195BE  58DE               	subwfb	postinc2,w,c
 14724  0195C0  0EF6               	movlw	-10
 14725  0195C2  50E3               	movf	plusw1,w,c
 14726  0195C4  58DE               	subwfb	postinc2,w,c
 14727  0195C6  A0D8               	btfss	status,0,c
 14728  0195C8  D01F               	goto	l8716
 14729                           
 14730                           ;stkvar	_divisor @ sp[(-1)+-16]
 14731                           ;stkvar	_dividend @ sp[(-1)+-8]
 14732  0195CA  50E1               	movf	fsr1l,w,c
 14733  0195CC  0FF7               	addlw	-9
 14734  0195CE  6ED9               	movwf	fsr2l,c
 14735  0195D0  50E2               	movf	fsr1h,w,c
 14736  0195D2  6EDA               	movwf	fsr2h,c
 14737  0195D4  0EFF               	movlw	255
 14738  0195D6  22DA               	addwfc	fsr2h,f,c
 14739  0195D8  0EEF               	movlw	-17
 14740  0195DA  50E3               	movf	plusw1,w,c
 14741  0195DC  5EDE               	subwf	postinc2,f,c
 14742  0195DE  0EF0               	movlw	-16
 14743  0195E0  50E3               	movf	plusw1,w,c
 14744  0195E2  5ADE               	subwfb	postinc2,f,c
 14745  0195E4  0EF1               	movlw	-15
 14746  0195E6  50E3               	movf	plusw1,w,c
 14747  0195E8  5ADE               	subwfb	postinc2,f,c
 14748  0195EA  0EF2               	movlw	-14
 14749  0195EC  50E3               	movf	plusw1,w,c
 14750  0195EE  5ADE               	subwfb	postinc2,f,c
 14751  0195F0  0EF3               	movlw	-13
 14752  0195F2  50E3               	movf	plusw1,w,c
 14753  0195F4  5ADE               	subwfb	postinc2,f,c
 14754  0195F6  0EF4               	movlw	-12
 14755  0195F8  50E3               	movf	plusw1,w,c
 14756  0195FA  5ADE               	subwfb	postinc2,f,c
 14757  0195FC  0EF5               	movlw	-11
 14758  0195FE  50E3               	movf	plusw1,w,c
 14759  019600  5ADE               	subwfb	postinc2,f,c
 14760  019602  0EF6               	movlw	-10
 14761  019604  50E3               	movf	plusw1,w,c
 14762  019606  5ADE               	subwfb	postinc2,f,c
 14763  019608                     l8716:
 14764                           
 14765                           ;stkvar	_divisor @ sp[(-1)+-16]
 14766  019608  90D8               	bcf	status,0,c
 14767  01960A  0EF6               	movlw	-10
 14768  01960C  32E3               	rrcf	plusw1,f,c
 14769  01960E  0EF5               	movlw	-11
 14770  019610  32E3               	rrcf	plusw1,f,c
 14771  019612  0EF4               	movlw	-12
 14772  019614  32E3               	rrcf	plusw1,f,c
 14773  019616  0EF3               	movlw	-13
 14774  019618  32E3               	rrcf	plusw1,f,c
 14775  01961A  0EF2               	movlw	-14
 14776  01961C  32E3               	rrcf	plusw1,f,c
 14777  01961E  0EF1               	movlw	-15
 14778  019620  32E3               	rrcf	plusw1,f,c
 14779  019622  0EF0               	movlw	-16
 14780  019624  32E3               	rrcf	plusw1,f,c
 14781  019626  0EEF               	movlw	-17
 14782  019628  32E3               	rrcf	plusw1,f,c
 14783                           
 14784                           ;stkvar	_counter @ sp[(-1)+0]
 14785  01962A  0EFF               	movlw	-1
 14786  01962C  50E3               	movf	plusw1,w,c
 14787  01962E  6E01               	movwf	btemp^0,c
 14788  019630  0E01               	movlw	1
 14789  019632  5E01               	subwf	btemp^0,f,c
 14790  019634  0EFF               	movlw	-1
 14791  019636  0060  F007  FFE3   	movff	btemp,plusw1
 14792  01963C  A4D8               	btfss	status,2,c
 14793  01963E  D7A4               	goto	u7390
 14794  019640                     u7410:
 14795                           
 14796                           ;stkvar	_dividend @ sp[(-1)+-8]
 14797  019640  0EF7               	movlw	247
 14798  019642  24E1               	addwf	fsr1l,w,c
 14799  019644  6ED9               	movwf	fsr2l,c
 14800  019646  0EFF               	movlw	255
 14801  019648  20E2               	addwfc	fsr1h,w,c
 14802  01964A  6EDA               	movwf	fsr2h,c
 14803                           
 14804                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14805  01964C  0E08               	movlw	8
 14806  01964E  6E01               	movwf	btemp^0,c
 14807  019650  0EF7               	movlw	-9
 14808  019652                     us742999:
 14809  019652  006F FF7B FFE3     	movff	postinc2,plusw1
 14810  019658  28E8               	incf	wreg,w,c
 14811  01965A  2E01               	decfsz	btemp^0,f,c
 14812  01965C  D7FA               	bra	us742999
 14813                           
 14814                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14815  01965E  52E5               	movf	postdec1,f,c
 14816  019660  0012               	return		;funcret
 14817  019662                     __end_of___lomod:
 14818                           	opt callstack 0
 14819                           
 14820 ;; *************** function ___lodiv *****************
 14821 ;; Defined at:
 14822 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14823 ;; Parameters:    Size  Location     Type
 14824 ;;  dividend        8  [STACK] unsigned long long 
 14825 ;;  divisor         8  [STACK] unsigned long long 
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;  quotient        8  [STACK] unsigned long long 
 14828 ;;  counter         1  [STACK] unsigned char 
 14829 ;; Return value:  Size  Location     Type
 14830 ;;                  8  [STACK] unsigned long long 
 14831 ;; Registers used:
 14832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14833 ;; Tracked objects:
 14834 ;;		On entry : 0/2
 14835 ;;		On exit  : 0/0
 14836 ;;		Unchanged: 0/0
 14837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14842 ;;Total ram usage:        0 bytes
 14843 ;; Hardware stack levels used:    1
 14844 ;; Hardware stack levels required when called:   15
 14845 ;; This function calls:
 14846 ;;		Nothing
 14847 ;; This function is called by:
 14848 ;;		_utoa
 14849 ;; This function uses a reentrant model
 14850 ;;
 14851                           
 14852                           	psect	text54
 14853  018CDA                     __ptext54:
 14854                           	opt callstack 0
 14855  018CDA                     ___lodiv:
 14856                           	opt callstack 0
 14857                           
 14858                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14859  018CDA  0E09               	movlw	9
 14860  018CDC  26E1               	addwf	fsr1l,f,c
 14861  018CDE  0E00               	movlw	0
 14862  018CE0  22E2               	addwfc	fsr1h,f,c
 14863                           
 14864                           ;stkvar	_quotient @ sp[(-9)+0]
 14865                           
 14866                           ;incstack = 0
 14867 ;; hardware stack exceeded
 14868  018CE2  0E07               	movlw	7
 14869  018CE4  6E01               	movwf	btemp^0,c
 14870  018CE6  0EF7               	movlw	-9
 14871  018CE8                     u7321:
 14872  018CE8  6AE3               	clrf	plusw1,c
 14873  018CEA  2AE8               	incf	wreg,f,c
 14874  018CEC  0601               	decf	btemp^0,f,c
 14875  018CEE  E2FC               	bc	u7321
 14876                           
 14877                           ;stkvar	_divisor @ sp[(-9)+-16]
 14878  018CF0  0EE7               	movlw	-25
 14879  018CF2  50E3               	movf	plusw1,w,c
 14880  018CF4  E116               	bnz	u7330
 14881  018CF6  0EE8               	movlw	-24
 14882  018CF8  50E3               	movf	plusw1,w,c
 14883  018CFA  E113               	bnz	u7330
 14884  018CFC  0EE9               	movlw	-23
 14885  018CFE  50E3               	movf	plusw1,w,c
 14886  018D00  E110               	bnz	u7330
 14887  018D02  0EEA               	movlw	-22
 14888  018D04  50E3               	movf	plusw1,w,c
 14889  018D06  E10D               	bnz	u7330
 14890  018D08  0EEB               	movlw	-21
 14891  018D0A  50E3               	movf	plusw1,w,c
 14892  018D0C  E10A               	bnz	u7330
 14893  018D0E  0EEC               	movlw	-20
 14894  018D10  50E3               	movf	plusw1,w,c
 14895  018D12  E107               	bnz	u7330
 14896  018D14  0EED               	movlw	-19
 14897  018D16  50E3               	movf	plusw1,w,c
 14898  018D18  E104               	bnz	u7330
 14899  018D1A  0EEE               	movlw	-18
 14900  018D1C  50E3               	movf	plusw1,w,c
 14901  018D1E  B4D8               	btfsc	status,2,c
 14902  018D20  D088               	goto	u7360
 14903  018D22                     u7330:
 14904                           
 14905                           ;stkvar	_counter @ sp[(-9)+8]
 14906  018D22  0EFF               	movlw	-1
 14907  018D24  6AE3               	clrf	plusw1,c
 14908  018D26  D012               	goto	L15
 14909  018D28                     l8684:
 14910                           
 14911                           ;stkvar	_divisor @ sp[(-9)+-16]
 14912  018D28  90D8               	bcf	status,0,c
 14913  018D2A  0EE7               	movlw	-25
 14914  018D2C  36E3               	rlcf	plusw1,f,c
 14915  018D2E  0EE8               	movlw	-24
 14916  018D30  36E3               	rlcf	plusw1,f,c
 14917  018D32  0EE9               	movlw	-23
 14918  018D34  36E3               	rlcf	plusw1,f,c
 14919  018D36  0EEA               	movlw	-22
 14920  018D38  36E3               	rlcf	plusw1,f,c
 14921  018D3A  0EEB               	movlw	-21
 14922  018D3C  36E3               	rlcf	plusw1,f,c
 14923  018D3E  0EEC               	movlw	-20
 14924  018D40  36E3               	rlcf	plusw1,f,c
 14925  018D42  0EED               	movlw	-19
 14926  018D44  36E3               	rlcf	plusw1,f,c
 14927  018D46  0EEE               	movlw	-18
 14928  018D48  36E3               	rlcf	plusw1,f,c
 14929                           
 14930                           ;stkvar	_counter @ sp[(-9)+8]
 14931  018D4A  0EFF               	movlw	-1
 14932  018D4C                     L15:
 14933  018D4C  2AE3               	incf	plusw1,f,c
 14934                           
 14935                           ;stkvar	_divisor @ sp[(-9)+-16]
 14936  018D4E  0EEE               	movlw	-18
 14937  018D50  AEE3               	btfss	plusw1,7,c
 14938  018D52  D7EA               	goto	l8684
 14939  018D54                     u7340:
 14940                           
 14941                           ;stkvar	_quotient @ sp[(-9)+0]
 14942  018D54  90D8               	bcf	status,0,c
 14943  018D56  0EF7               	movlw	-9
 14944  018D58  36E3               	rlcf	plusw1,f,c
 14945  018D5A  0EF8               	movlw	-8
 14946  018D5C  36E3               	rlcf	plusw1,f,c
 14947  018D5E  0EF9               	movlw	-7
 14948  018D60  36E3               	rlcf	plusw1,f,c
 14949  018D62  0EFA               	movlw	-6
 14950  018D64  36E3               	rlcf	plusw1,f,c
 14951  018D66  0EFB               	movlw	-5
 14952  018D68  36E3               	rlcf	plusw1,f,c
 14953  018D6A  0EFC               	movlw	-4
 14954  018D6C  36E3               	rlcf	plusw1,f,c
 14955  018D6E  0EFD               	movlw	-3
 14956  018D70  36E3               	rlcf	plusw1,f,c
 14957  018D72  0EFE               	movlw	-2
 14958  018D74  36E3               	rlcf	plusw1,f,c
 14959                           
 14960                           ;stkvar	_divisor @ sp[(-9)+-16]
 14961                           ;stkvar	_dividend @ sp[(-9)+-8]
 14962  018D76  50E1               	movf	fsr1l,w,c
 14963  018D78  0FEF               	addlw	-17
 14964  018D7A  6ED9               	movwf	fsr2l,c
 14965  018D7C  50E2               	movf	fsr1h,w,c
 14966  018D7E  6EDA               	movwf	fsr2h,c
 14967  018D80  0EFF               	movlw	255
 14968  018D82  22DA               	addwfc	fsr2h,f,c
 14969  018D84  0EE7               	movlw	-25
 14970  018D86  50E3               	movf	plusw1,w,c
 14971  018D88  5CDE               	subwf	postinc2,w,c
 14972  018D8A  0EE8               	movlw	-24
 14973  018D8C  50E3               	movf	plusw1,w,c
 14974  018D8E  58DE               	subwfb	postinc2,w,c
 14975  018D90  0EE9               	movlw	-23
 14976  018D92  50E3               	movf	plusw1,w,c
 14977  018D94  58DE               	subwfb	postinc2,w,c
 14978  018D96  0EEA               	movlw	-22
 14979  018D98  50E3               	movf	plusw1,w,c
 14980  018D9A  58DE               	subwfb	postinc2,w,c
 14981  018D9C  0EEB               	movlw	-21
 14982  018D9E  50E3               	movf	plusw1,w,c
 14983  018DA0  58DE               	subwfb	postinc2,w,c
 14984  018DA2  0EEC               	movlw	-20
 14985  018DA4  50E3               	movf	plusw1,w,c
 14986  018DA6  58DE               	subwfb	postinc2,w,c
 14987  018DA8  0EED               	movlw	-19
 14988  018DAA  50E3               	movf	plusw1,w,c
 14989  018DAC  58DE               	subwfb	postinc2,w,c
 14990  018DAE  0EEE               	movlw	-18
 14991  018DB0  50E3               	movf	plusw1,w,c
 14992  018DB2  58DE               	subwfb	postinc2,w,c
 14993  018DB4  A0D8               	btfss	status,0,c
 14994  018DB6  D021               	goto	l8696
 14995                           
 14996                           ;stkvar	_divisor @ sp[(-9)+-16]
 14997                           ;stkvar	_dividend @ sp[(-9)+-8]
 14998  018DB8  50E1               	movf	fsr1l,w,c
 14999  018DBA  0FEF               	addlw	-17
 15000  018DBC  6ED9               	movwf	fsr2l,c
 15001  018DBE  50E2               	movf	fsr1h,w,c
 15002  018DC0  6EDA               	movwf	fsr2h,c
 15003  018DC2  0EFF               	movlw	255
 15004  018DC4  22DA               	addwfc	fsr2h,f,c
 15005  018DC6  0EE7               	movlw	-25
 15006  018DC8  50E3               	movf	plusw1,w,c
 15007  018DCA  5EDE               	subwf	postinc2,f,c
 15008  018DCC  0EE8               	movlw	-24
 15009  018DCE  50E3               	movf	plusw1,w,c
 15010  018DD0  5ADE               	subwfb	postinc2,f,c
 15011  018DD2  0EE9               	movlw	-23
 15012  018DD4  50E3               	movf	plusw1,w,c
 15013  018DD6  5ADE               	subwfb	postinc2,f,c
 15014  018DD8  0EEA               	movlw	-22
 15015  018DDA  50E3               	movf	plusw1,w,c
 15016  018DDC  5ADE               	subwfb	postinc2,f,c
 15017  018DDE  0EEB               	movlw	-21
 15018  018DE0  50E3               	movf	plusw1,w,c
 15019  018DE2  5ADE               	subwfb	postinc2,f,c
 15020  018DE4  0EEC               	movlw	-20
 15021  018DE6  50E3               	movf	plusw1,w,c
 15022  018DE8  5ADE               	subwfb	postinc2,f,c
 15023  018DEA  0EED               	movlw	-19
 15024  018DEC  50E3               	movf	plusw1,w,c
 15025  018DEE  5ADE               	subwfb	postinc2,f,c
 15026  018DF0  0EEE               	movlw	-18
 15027  018DF2  50E3               	movf	plusw1,w,c
 15028  018DF4  5ADE               	subwfb	postinc2,f,c
 15029                           
 15030                           ;stkvar	_quotient @ sp[(-9)+0]
 15031  018DF6  0EF7               	movlw	-9
 15032  018DF8  80E3               	bsf	plusw1,0,c
 15033  018DFA                     l8696:
 15034                           
 15035                           ;stkvar	_divisor @ sp[(-9)+-16]
 15036  018DFA  90D8               	bcf	status,0,c
 15037  018DFC  0EEE               	movlw	-18
 15038  018DFE  32E3               	rrcf	plusw1,f,c
 15039  018E00  0EED               	movlw	-19
 15040  018E02  32E3               	rrcf	plusw1,f,c
 15041  018E04  0EEC               	movlw	-20
 15042  018E06  32E3               	rrcf	plusw1,f,c
 15043  018E08  0EEB               	movlw	-21
 15044  018E0A  32E3               	rrcf	plusw1,f,c
 15045  018E0C  0EEA               	movlw	-22
 15046  018E0E  32E3               	rrcf	plusw1,f,c
 15047  018E10  0EE9               	movlw	-23
 15048  018E12  32E3               	rrcf	plusw1,f,c
 15049  018E14  0EE8               	movlw	-24
 15050  018E16  32E3               	rrcf	plusw1,f,c
 15051  018E18  0EE7               	movlw	-25
 15052  018E1A  32E3               	rrcf	plusw1,f,c
 15053                           
 15054                           ;stkvar	_counter @ sp[(-9)+8]
 15055  018E1C  0EFF               	movlw	-1
 15056  018E1E  50E3               	movf	plusw1,w,c
 15057  018E20  6E01               	movwf	btemp^0,c
 15058  018E22  0E01               	movlw	1
 15059  018E24  5E01               	subwf	btemp^0,f,c
 15060  018E26  0EFF               	movlw	-1
 15061  018E28  0060  F007  FFE3   	movff	btemp,plusw1
 15062  018E2E  A4D8               	btfss	status,2,c
 15063  018E30  D791               	goto	u7340
 15064  018E32                     u7360:
 15065                           
 15066                           ;stkvar	_quotient @ sp[(-9)+0]
 15067  018E32  0EF7               	movlw	247
 15068  018E34  24E1               	addwf	fsr1l,w,c
 15069  018E36  6ED9               	movwf	fsr2l,c
 15070  018E38  0EFF               	movlw	255
 15071  018E3A  20E2               	addwfc	fsr1h,w,c
 15072  018E3C  6EDA               	movwf	fsr2h,c
 15073                           
 15074                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15075  018E3E  0E08               	movlw	8
 15076  018E40  6E01               	movwf	btemp^0,c
 15077  018E42  0EEF               	movlw	-17
 15078  018E44                     us737999:
 15079  018E44  006F FF7B FFE3     	movff	postinc2,plusw1
 15080  018E4A  28E8               	incf	wreg,w,c
 15081  018E4C  2E01               	decfsz	btemp^0,f,c
 15082  018E4E  D7FA               	bra	us737999
 15083                           
 15084                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15085  018E50  0EF7               	movlw	247
 15086  018E52  26E1               	addwf	fsr1l,f,c
 15087  018E54  0EFF               	movlw	255
 15088  018E56  22E2               	addwfc	fsr1h,f,c
 15089  018E58  0012               	return		;funcret
 15090  018E5A                     __end_of___lodiv:
 15091                           	opt callstack 0
 15092                           
 15093 ;; *************** function _strncmp *****************
 15094 ;; Defined at:
 15095 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;  _l              2  [STACK] PTR const unsigned char 
 15098 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15099 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15100 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15101 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15102 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15103 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15104 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 15105 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15106 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15107 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15108 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15109 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15110 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15111 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15112 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15113 ;;		 -> STR_1(21), 
 15114 ;;  _r              2  [STACK] PTR const unsigned char 
 15115 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15116 ;;		 -> STR_79(3), STR_75(3), 
 15117 ;;  n               2  [STACK] unsigned int 
 15118 ;; Auto vars:     Size  Location     Type
 15119 ;;  r               2  [STACK] PTR const unsigned char 
 15120 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15121 ;;		 -> STR_79(3), STR_75(3), 
 15122 ;;  l               2  [STACK] PTR const unsigned char 
 15123 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15124 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15125 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15126 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15127 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15128 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15129 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 15130 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15131 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15132 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15133 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15134 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15135 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15136 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15137 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15138 ;;		 -> STR_1(21), 
 15139 ;; Return value:  Size  Location     Type
 15140 ;;                  2  [STACK] int 
 15141 ;; Registers used:
 15142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15152 ;;Total ram usage:        0 bytes
 15153 ;; Hardware stack levels used:    1
 15154 ;; Hardware stack levels required when called:   15
 15155 ;; This function calls:
 15156 ;;		Nothing
 15157 ;; This function is called by:
 15158 ;;		_vfpfcnvrt
 15159 ;; This function uses a reentrant model
 15160 ;;
 15161                           
 15162                           	psect	text55
 15163  01802C                     __ptext55:
 15164                           	opt callstack 0
 15165  01802C                     _strncmp:
 15166                           	opt callstack 0
 15167                           
 15168                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15169  01802C  52E6               	movf	postinc1,f,c
 15170  01802E  52E6               	movf	postinc1,f,c
 15171  018030  52E6               	movf	postinc1,f,c
 15172  018032  52E6               	movf	postinc1,f,c
 15173                           
 15174                           ;stkvar	__l @ sp[(-4)+-2]
 15175                           
 15176                           ;incstack = 0
 15177 ;; hardware stack exceeded
 15178  018034  0EFA               	movlw	-6
 15179  018036  006F FF8C  F00B    	movff	plusw1,btemp+10
 15180  01803C  0EFB               	movlw	-5
 15181  01803E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15182                           
 15183                           ;stkvar	_l @ sp[(-4)+2]
 15184  018044  0EFF               	movlw	-1
 15185  018046  0060  F033  FFE3   	movff	btemp+11,plusw1
 15186  01804C  0EFE               	movlw	-2
 15187  01804E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15188                           
 15189                           ;stkvar	__r @ sp[(-4)+-4]
 15190  018054  0EF8               	movlw	-8
 15191  018056  006F FF8C  F00B    	movff	plusw1,btemp+10
 15192  01805C  0EF9               	movlw	-7
 15193  01805E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15194                           
 15195                           ;stkvar	_r @ sp[(-4)+0]
 15196  018064  0EFD               	movlw	-3
 15197  018066  0060  F033  FFE3   	movff	btemp+11,plusw1
 15198  01806C  0EFC               	movlw	-4
 15199  01806E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15200                           
 15201                           ;stkvar	_n @ sp[(-4)+-6]
 15202  018074  0EF6               	movlw	-10
 15203  018076  006F FF8C  F001    	movff	plusw1,btemp
 15204  01807C  0E01               	movlw	1
 15205  01807E  5E01               	subwf	btemp^0,f,c
 15206  018080  0EF6               	movlw	-10
 15207  018082  0060  F007  FFE3   	movff	btemp,plusw1
 15208  018088  0EF7               	movlw	-9
 15209  01808A  006F FF8C  F001    	movff	plusw1,btemp
 15210  018090  0E00               	movlw	0
 15211  018092  5A01               	subwfb	btemp^0,f,c
 15212  018094  0EF7               	movlw	-9
 15213  018096  0060  F007  FFE3   	movff	btemp,plusw1
 15214  01809C  0EF6               	movlw	-10
 15215  01809E  28E3               	incf	plusw1,w,c
 15216  0180A0  E13F               	bnz	l9366
 15217  0180A2  0EF7               	movlw	-9
 15218  0180A4  28E3               	incf	plusw1,w,c
 15219  0180A6  A4D8               	btfss	status,2,c
 15220  0180A8  D03B               	goto	l9366
 15221  0180AA  0E00               	movlw	0
 15222  0180AC  6E01               	movwf	btemp^0,c
 15223  0180AE  0E00               	movlw	0
 15224  0180B0  6E02               	movwf	(btemp+1)^0,c
 15225  0180B2  D0C7               	goto	l3451
 15226  0180B4                     l9364:
 15227                           
 15228                           ;stkvar	_l @ sp[(-4)+2]
 15229  0180B4  0EFE               	movlw	-2
 15230  0180B6  50E3               	movf	plusw1,w,c
 15231  0180B8  0F01               	addlw	1
 15232  0180BA  6E01               	movwf	btemp^0,c
 15233  0180BC  0EFE               	movlw	-2
 15234  0180BE  0060  F007  FFE3   	movff	btemp,plusw1
 15235  0180C4  6A01               	clrf	btemp^0,c
 15236  0180C6  0EFF               	movlw	-1
 15237  0180C8  50E3               	movf	plusw1,w,c
 15238  0180CA  2001               	addwfc	btemp^0,w,c
 15239  0180CC  6E01               	movwf	btemp^0,c
 15240  0180CE  0EFF               	movlw	-1
 15241  0180D0  0060  F007  FFE3   	movff	btemp,plusw1
 15242                           
 15243                           ;stkvar	_r @ sp[(-4)+0]
 15244  0180D6  0EFC               	movlw	-4
 15245  0180D8  50E3               	movf	plusw1,w,c
 15246  0180DA  0F01               	addlw	1
 15247  0180DC  6E01               	movwf	btemp^0,c
 15248  0180DE  0EFC               	movlw	-4
 15249  0180E0  0060  F007  FFE3   	movff	btemp,plusw1
 15250  0180E6  6A01               	clrf	btemp^0,c
 15251  0180E8  0EFD               	movlw	-3
 15252  0180EA  50E3               	movf	plusw1,w,c
 15253  0180EC  2001               	addwfc	btemp^0,w,c
 15254  0180EE  6E01               	movwf	btemp^0,c
 15255  0180F0  0EFD               	movlw	-3
 15256  0180F2  0060  F007  FFE3   	movff	btemp,plusw1
 15257                           
 15258                           ;stkvar	_n @ sp[(-4)+-6]
 15259  0180F8  0EF6               	movlw	-10
 15260  0180FA  006F FF8C  F001    	movff	plusw1,btemp
 15261  018100  0E01               	movlw	1
 15262  018102  5E01               	subwf	btemp^0,f,c
 15263  018104  0EF6               	movlw	-10
 15264  018106  0060  F007  FFE3   	movff	btemp,plusw1
 15265  01810C  0EF7               	movlw	-9
 15266  01810E  006F FF8C  F001    	movff	plusw1,btemp
 15267  018114  0E00               	movlw	0
 15268  018116  5A01               	subwfb	btemp^0,f,c
 15269  018118  0EF7               	movlw	-9
 15270  01811A  0060  F007  FFE3   	movff	btemp,plusw1
 15271  018120                     l9366:
 15272                           
 15273                           ;stkvar	_l @ sp[(-4)+2]
 15274  018120  0EFE               	movlw	-2
 15275  018122  006F FF8F FFF6     	movff	plusw1,tblptrl
 15276  018128  0EFF               	movlw	-1
 15277  01812A  006F FF8F FFF7     	movff	plusw1,tblptrh
 15278  018130  0E00               	movlw	low (__mediumconst shr (0+16))
 15279  018132  6EF8               	movwf	tblptru,c
 15280  018134  0E1F               	movlw	(high __ramtop+-1)
 15281  018136  64F7               	cpfsgt	tblptrh,c
 15282  018138  D003               	bra	u8617
 15283  01813A  0008               	tblrd		*
 15284  01813C  50F5               	movf	tablat,w,c
 15285  01813E  D007               	bra	u8610
 15286  018140                     u8617:
 15287  018140  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15288  018146  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15289  01814C  50EF               	movf	indf0,w,c
 15290  01814E                     u8610:
 15291  01814E  0900               	iorlw	0
 15292  018150  B4D8               	btfsc	status,2,c
 15293  018152  D04A               	goto	u8650
 15294                           
 15295                           ;stkvar	_r @ sp[(-4)+0]
 15296  018154  50E1               	movf	fsr1l,w,c
 15297  018156  0FFC               	addlw	-4
 15298  018158  6ED9               	movwf	fsr2l,c
 15299  01815A  50E2               	movf	fsr1h,w,c
 15300  01815C  6EDA               	movwf	fsr2h,c
 15301  01815E  0EFF               	movlw	255
 15302  018160  22DA               	addwfc	fsr2h,f,c
 15303  018162  006F FF7B FFF6     	movff	postinc2,tblptrl
 15304  018168  006F FF77 FFF7     	movff	postdec2,tblptrh
 15305  01816E                     	if	0	;tblptru may be non-zero
 15306  01816E                     	endif
 15307  01816E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15308  01816E  0E00               	movlw	low (__mediumconst shr (0+16))
 15309  018170  6EF8               	movwf	tblptru,c
 15310  018172                     	endif
 15311  018172  0008               	tblrd		*
 15312  018174  50F5               	movf	tablat,w,c
 15313  018176  0900               	iorlw	0
 15314  018178  B4D8               	btfsc	status,2,c
 15315  01817A  D036               	goto	u8650
 15316                           
 15317                           ;stkvar	_n @ sp[(-4)+-6]
 15318  01817C  0EF6               	movlw	-10
 15319  01817E  006F FF8C  F001    	movff	plusw1,btemp
 15320  018184  0EF7               	movlw	-9
 15321  018186  50E3               	movf	plusw1,w,c
 15322  018188  1001               	iorwf	btemp^0,w,c
 15323  01818A  B4D8               	btfsc	status,2,c
 15324  01818C  D02D               	goto	u8650
 15325                           
 15326                           ;stkvar	_r @ sp[(-4)+0]
 15327  01818E  50E1               	movf	fsr1l,w,c
 15328  018190  0FFC               	addlw	-4
 15329  018192  6ED9               	movwf	fsr2l,c
 15330  018194  50E2               	movf	fsr1h,w,c
 15331  018196  6EDA               	movwf	fsr2h,c
 15332  018198  0EFF               	movlw	255
 15333  01819A  22DA               	addwfc	fsr2h,f,c
 15334  01819C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15335  0181A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15336  0181A8                     	if	0	;tblptru may be non-zero
 15337  0181A8                     	endif
 15338  0181A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15339  0181A8  0E00               	movlw	low (__mediumconst shr (0+16))
 15340  0181AA  6EF8               	movwf	tblptru,c
 15341  0181AC                     	endif
 15342  0181AC  0008               	tblrd		*
 15343  0181AE  006F FFD4  F00C    	movff	tablat,btemp+11
 15344                           
 15345                           ;stkvar	_l @ sp[(-4)+2]
 15346  0181B4  0EFE               	movlw	-2
 15347  0181B6  006F FF8F FFF6     	movff	plusw1,tblptrl
 15348  0181BC  0EFF               	movlw	-1
 15349  0181BE  006F FF8F FFF7     	movff	plusw1,tblptrh
 15350  0181C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15351  0181C6  6EF8               	movwf	tblptru,c
 15352  0181C8  0E1F               	movlw	(high __ramtop+-1)
 15353  0181CA  64F7               	cpfsgt	tblptrh,c
 15354  0181CC  D003               	bra	u8657
 15355  0181CE  0008               	tblrd		*
 15356  0181D0  50F5               	movf	tablat,w,c
 15357  0181D2  D007               	bra	u8655
 15358  0181D4                     u8657:
 15359  0181D4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15360  0181DA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15361  0181E0  50EF               	movf	indf0,w,c
 15362  0181E2                     u8655:
 15363  0181E2  180C               	xorwf	(btemp+11)^0,w,c
 15364  0181E4  B4D8               	btfsc	status,2,c
 15365  0181E6  D766               	goto	l9364
 15366  0181E8                     u8650:
 15367                           
 15368                           ;stkvar	_l @ sp[(-4)+2]
 15369  0181E8  0EFE               	movlw	-2
 15370  0181EA  006F FF8F FFF6     	movff	plusw1,tblptrl
 15371  0181F0  0EFF               	movlw	-1
 15372  0181F2  006F FF8F FFF7     	movff	plusw1,tblptrh
 15373  0181F8  0E00               	movlw	low (__mediumconst shr (0+16))
 15374  0181FA  6EF8               	movwf	tblptru,c
 15375  0181FC  0E1F               	movlw	(high __ramtop+-1)
 15376  0181FE  64F7               	cpfsgt	tblptrh,c
 15377  018200  D003               	bra	u8667
 15378  018202  0008               	tblrd		*
 15379  018204  50F5               	movf	tablat,w,c
 15380  018206  D007               	bra	u8660
 15381  018208                     u8667:
 15382  018208  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15383  01820E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15384  018214  50EF               	movf	indf0,w,c
 15385  018216                     u8660:
 15386  018216  6E01               	movwf	btemp^0,c
 15387  018218  6A02               	clrf	(btemp+1)^0,c
 15388                           
 15389                           ;stkvar	_r @ sp[(-4)+0]
 15390  01821A  50E1               	movf	fsr1l,w,c
 15391  01821C  0FFC               	addlw	-4
 15392  01821E  6ED9               	movwf	fsr2l,c
 15393  018220  50E2               	movf	fsr1h,w,c
 15394  018222  6EDA               	movwf	fsr2h,c
 15395  018224  0EFF               	movlw	255
 15396  018226  22DA               	addwfc	fsr2h,f,c
 15397  018228  006F FF7B FFF6     	movff	postinc2,tblptrl
 15398  01822E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15399  018234                     	if	0	;tblptru may be non-zero
 15400  018234                     	endif
 15401  018234                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15402  018234  0E00               	movlw	low (__mediumconst shr (0+16))
 15403  018236  6EF8               	movwf	tblptru,c
 15404  018238                     	endif
 15405  018238  0008               	tblrd		*
 15406  01823A  50F5               	movf	tablat,w,c
 15407  01823C  5E01               	subwf	btemp^0,f,c
 15408  01823E  0E00               	movlw	0
 15409  018240  5A02               	subwfb	(btemp+1)^0,f,c
 15410  018242                     l3451:
 15411                           
 15412                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 15413  018242  0EF6               	movlw	246
 15414  018244  26E1               	addwf	fsr1l,f,c
 15415  018246  0EFF               	movlw	255
 15416  018248  22E2               	addwfc	fsr1h,f,c
 15417  01824A  0012               	return		;funcret
 15418  01824C                     __end_of_strncmp:
 15419                           	opt callstack 0
 15420                           
 15421 ;; *************** function _stoa *****************
 15422 ;; Defined at:
 15423 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15426 ;;		 -> f(6), NULL(0), 
 15427 ;;  s               2  [STACK] PTR unsigned char 
 15428 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 15429 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15430 ;;		 -> V(191), 
 15431 ;; Auto vars:     Size  Location     Type
 15432 ;;  nuls            7  [STACK] unsigned char [7]
 15433 ;;  l               2  [STACK] int 
 15434 ;;  p               2  [STACK] int 
 15435 ;;  cp              2  [STACK] PTR unsigned char 
 15436 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 15437 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 15438 ;;		 -> STR_3(5), V(191), 
 15439 ;;  w               2  [STACK] int 
 15440 ;;  i               2  [STACK] int 
 15441 ;; Return value:  Size  Location     Type
 15442 ;;                  2  [STACK] int 
 15443 ;; Registers used:
 15444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15445 ;; Tracked objects:
 15446 ;;		On entry : 0/0
 15447 ;;		On exit  : 0/0
 15448 ;;		Unchanged: 0/0
 15449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15454 ;;Total ram usage:        0 bytes
 15455 ;; Hardware stack levels used:    1
 15456 ;; Hardware stack levels required when called:   18
 15457 ;; This function calls:
 15458 ;;		_fputc
 15459 ;;		_strlen
 15460 ;; This function is called by:
 15461 ;;		_vfpfcnvrt
 15462 ;; This function uses a reentrant model
 15463 ;;
 15464                           
 15465                           	psect	text56
 15466  0173F4                     __ptext56:
 15467                           	opt callstack 0
 15468  0173F4                     _stoa:
 15469                           	opt callstack 0
 15470                           
 15471                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15472  0173F4  0E11               	movlw	17
 15473  0173F6  26E1               	addwf	fsr1l,f,c
 15474  0173F8  0E00               	movlw	0
 15475  0173FA  22E2               	addwfc	fsr1h,f,c
 15476                           
 15477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15478                           
 15479                           ;incstack = 0
 15480 ;; hardware stack exceeded
 15481  0173FC  EE20  F0F0         	lfsr	2,stoa@F1166
 15482                           
 15483                           ;stkvar	_nuls @ sp[(-17)+0]
 15484  017400  0E07               	movlw	7
 15485  017402  6E01               	movwf	btemp^0,c
 15486  017404  0EEF               	movlw	-17
 15487  017406                     us1161999:
 15488  017406  006F FF7B FFE3     	movff	postinc2,plusw1
 15489  01740C  28E8               	incf	wreg,w,c
 15490  01740E  2E01               	decfsz	btemp^0,f,c
 15491  017410  D7FA               	bra	us1161999
 15492                           
 15493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15494                           ;stkvar	_s @ sp[(-17)+-4]
 15495  017412  0EEB               	movlw	-21
 15496  017414  006F FF8C  F00B    	movff	plusw1,btemp+10
 15497  01741A  0EEC               	movlw	-20
 15498  01741C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15499                           
 15500                           ;stkvar	_cp @ sp[(-17)+11]
 15501  017422  0EFB               	movlw	-5
 15502  017424  0060  F033  FFE3   	movff	btemp+11,plusw1
 15503  01742A  0EFA               	movlw	-6
 15504  01742C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15505                           
 15506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15507                           ;stkvar	_cp @ sp[(-17)+11]
 15508  017432  0EFA               	movlw	-6
 15509  017434  006F FF8C  F001    	movff	plusw1,btemp
 15510  01743A  0EFB               	movlw	-5
 15511  01743C  50E3               	movf	plusw1,w,c
 15512  01743E  1001               	iorwf	btemp^0,w,c
 15513  017440  A4D8               	btfss	status,2,c
 15514  017442  D00E               	goto	l12300
 15515                           
 15516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15517                           ;stkvar	_nuls @ sp[(-17)+0]
 15518  017444  0EEF               	movlw	239
 15519  017446  24E1               	addwf	fsr1l,w,c
 15520  017448  6E0B               	movwf	(btemp+10)^0,c
 15521  01744A  0EFF               	movlw	255
 15522  01744C  20E2               	addwfc	fsr1h,w,c
 15523  01744E  6E0C               	movwf	(btemp+11)^0,c
 15524                           
 15525                           ;stkvar	_cp @ sp[(-17)+11]
 15526  017450  0EFB               	movlw	-5
 15527  017452  0060  F033  FFE3   	movff	btemp+11,plusw1
 15528  017458  0EFA               	movlw	-6
 15529  01745A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15530  017460                     l12300:
 15531                           
 15532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15533                           ;stkvar	_cp @ sp[(-17)+11]
 15534  017460  0EFA               	movlw	-6
 15535  017462  006F FF8F FFE6     	movff	plusw1,postinc1
 15536  017468  006F FF8F FFE6     	movff	plusw1,postinc1
 15537  01746E  EC98  F0D4         	call	_strlen	;wreg free
 15538                           
 15539                           ;stkvar	_l @ sp[(-17)+7]
 15540  017472  0EF6               	movlw	-10
 15541  017474  0060  F007  FFE3   	movff	btemp,plusw1
 15542  01747A  0EF7               	movlw	-9
 15543  01747C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15544                           
 15545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15546                           ;stkvar	_p @ sp[(-17)+9]
 15547  017482  0EF8               	movlw	-8
 15548  017484  0060  F0F3  FFE3   	movff	_prec,plusw1
 15549  01748A  0EF9               	movlw	-7
 15550  01748C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15551                           
 15552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15553                           ;stkvar	_p @ sp[(-17)+9]
 15554  017492  0EF9               	movlw	-7
 15555  017494  BEE3               	btfsc	plusw1,7,c
 15556  017496  D023               	goto	l2276
 15557                           
 15558                           ;stkvar	_l @ sp[(-17)+7]
 15559                           ;stkvar	_p @ sp[(-17)+9]
 15560  017498  50E1               	movf	fsr1l,w,c
 15561  01749A  0FF8               	addlw	-8
 15562  01749C  6ED9               	movwf	fsr2l,c
 15563  01749E  50E2               	movf	fsr1h,w,c
 15564  0174A0  6EDA               	movwf	fsr2h,c
 15565  0174A2  0EFF               	movlw	255
 15566  0174A4  22DA               	addwfc	fsr2h,f,c
 15567  0174A6  0EF6               	movlw	-10
 15568  0174A8  50E3               	movf	plusw1,w,c
 15569  0174AA  5CDE               	subwf	postinc2,w,c
 15570  0174AC  50DE               	movf	postinc2,w,c
 15571  0174AE  0A80               	xorlw	128
 15572  0174B0  6E01               	movwf	btemp^0,c
 15573  0174B2  0EF7               	movlw	-9
 15574  0174B4  50E3               	movf	plusw1,w,c
 15575  0174B6  0A80               	xorlw	128
 15576  0174B8  5801               	subwfb	btemp^0,w,c
 15577  0174BA  B0D8               	btfsc	status,0,c
 15578  0174BC  D010               	goto	l2276
 15579                           
 15580                           ;stkvar	_p @ sp[(-17)+9]
 15581                           ;stkvar	_l @ sp[(-17)+7]
 15582  0174BE  0EF8               	movlw	-8
 15583  0174C0  006F FF8C  F001    	movff	plusw1,btemp
 15584  0174C6  0EF6               	movlw	-10
 15585  0174C8  0060  F007  FFE3   	movff	btemp,plusw1
 15586  0174CE  0EF9               	movlw	-7
 15587  0174D0  006F FF8C  F001    	movff	plusw1,btemp
 15588  0174D6  0EF7               	movlw	-9
 15589  0174D8  0060  F007  FFE3   	movff	btemp,plusw1
 15590  0174DE                     l2276:
 15591                           
 15592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15593                           ;stkvar	_l @ sp[(-17)+7]
 15594                           ;stkvar	_p @ sp[(-17)+9]
 15595  0174DE  0EF6               	movlw	-10
 15596  0174E0  006F FF8C  F001    	movff	plusw1,btemp
 15597  0174E6  0EF8               	movlw	-8
 15598  0174E8  0060  F007  FFE3   	movff	btemp,plusw1
 15599  0174EE  0EF7               	movlw	-9
 15600  0174F0  006F FF8C  F001    	movff	plusw1,btemp
 15601  0174F6  0EF9               	movlw	-7
 15602  0174F8  0060  F007  FFE3   	movff	btemp,plusw1
 15603                           
 15604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15605                           ;stkvar	_w @ sp[(-17)+13]
 15606  0174FE  0EFC               	movlw	-4
 15607  017500  0060  F0EB  FFE3   	movff	_width,plusw1
 15608  017506  0EFD               	movlw	-3
 15609  017508  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15610                           
 15611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15612  01750E  A03E               	btfss	_flags^0,0,c
 15613  017510  D01F               	goto	l12320
 15614  017512  D031               	goto	u11660
 15615  017514                     l12316:
 15616                           
 15617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15618                           ;stkvar	_fp @ sp[(-17)+-2]
 15619  017514  0EED               	movlw	-19
 15620  017516  006F FF8F FFE6     	movff	plusw1,postinc1
 15621  01751C  006F FF8F FFE6     	movff	plusw1,postinc1
 15622  017522  0E20               	movlw	32
 15623  017524  6EE6               	movwf	postinc1,c
 15624  017526  0E00               	movlw	0
 15625  017528  6EE6               	movwf	postinc1,c
 15626  01752A  ECC8  F0CB         	call	_fputc	;wreg free
 15627                           
 15628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15629                           ;stkvar	_l @ sp[(-17)+7]
 15630  01752E  0EF6               	movlw	-10
 15631  017530  50E3               	movf	plusw1,w,c
 15632  017532  0F01               	addlw	1
 15633  017534  6E01               	movwf	btemp^0,c
 15634  017536  0EF6               	movlw	-10
 15635  017538  0060  F007  FFE3   	movff	btemp,plusw1
 15636  01753E  6A01               	clrf	btemp^0,c
 15637  017540  0EF7               	movlw	-9
 15638  017542  50E3               	movf	plusw1,w,c
 15639  017544  2001               	addwfc	btemp^0,w,c
 15640  017546  6E01               	movwf	btemp^0,c
 15641  017548  0EF7               	movlw	-9
 15642  01754A  0060  F007  FFE3   	movff	btemp,plusw1
 15643  017550                     l12320:
 15644                           
 15645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15646                           ;stkvar	_w @ sp[(-17)+13]
 15647                           ;stkvar	_l @ sp[(-17)+7]
 15648  017550  50E1               	movf	fsr1l,w,c
 15649  017552  0FF6               	addlw	-10
 15650  017554  6ED9               	movwf	fsr2l,c
 15651  017556  50E2               	movf	fsr1h,w,c
 15652  017558  6EDA               	movwf	fsr2h,c
 15653  01755A  0EFF               	movlw	255
 15654  01755C  22DA               	addwfc	fsr2h,f,c
 15655  01755E  0EFC               	movlw	-4
 15656  017560  50E3               	movf	plusw1,w,c
 15657  017562  5CDE               	subwf	postinc2,w,c
 15658  017564  50DE               	movf	postinc2,w,c
 15659  017566  0A80               	xorlw	128
 15660  017568  6E01               	movwf	btemp^0,c
 15661  01756A  0EFD               	movlw	-3
 15662  01756C  50E3               	movf	plusw1,w,c
 15663  01756E  0A80               	xorlw	128
 15664  017570  5801               	subwfb	btemp^0,w,c
 15665  017572  A0D8               	btfss	status,0,c
 15666  017574  D7CF               	goto	l12316
 15667  017576                     u11660:
 15668                           
 15669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15670                           ;stkvar	_i @ sp[(-17)+15]
 15671  017576  0EFE               	movlw	-2
 15672  017578  6AE3               	clrf	plusw1,c
 15673  01757A  0EFF               	movlw	-1
 15674  01757C  6AE3               	clrf	plusw1,c
 15675                           
 15676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15677  01757E  D045               	goto	l12330
 15678  017580                     l12324:
 15679                           
 15680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15681                           ;stkvar	_fp @ sp[(-17)+-2]
 15682  017580  0EED               	movlw	-19
 15683  017582  006F FF8F FFE6     	movff	plusw1,postinc1
 15684  017588  006F FF8F FFE6     	movff	plusw1,postinc1
 15685                           
 15686                           ;stkvar	_cp @ sp[(-19)+11]
 15687  01758E  0EF8               	movlw	-8
 15688  017590  006F FF8F FFF6     	movff	plusw1,tblptrl
 15689  017596  0EF9               	movlw	-7
 15690  017598  006F FF8F FFF7     	movff	plusw1,tblptrh
 15691  01759E  0E00               	movlw	low (__mediumconst shr (0+16))
 15692  0175A0  6EF8               	movwf	tblptru,c
 15693  0175A2  0E1F               	movlw	(high __ramtop+-1)
 15694  0175A4  64F7               	cpfsgt	tblptrh,c
 15695  0175A6  D003               	bra	u11677
 15696  0175A8  0008               	tblrd		*
 15697  0175AA  50F5               	movf	tablat,w,c
 15698  0175AC  D007               	bra	u11670
 15699  0175AE                     u11677:
 15700  0175AE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15701  0175B4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15702  0175BA  50EF               	movf	indf0,w,c
 15703  0175BC                     u11670:
 15704  0175BC  6EE6               	movwf	postinc1,c
 15705  0175BE  0E00               	movlw	0
 15706  0175C0  6EE6               	movwf	postinc1,c
 15707  0175C2  ECC8  F0CB         	call	_fputc	;wreg free
 15708                           
 15709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15710                           ;stkvar	_cp @ sp[(-17)+11]
 15711  0175C6  0EFA               	movlw	-6
 15712  0175C8  50E3               	movf	plusw1,w,c
 15713  0175CA  0F01               	addlw	1
 15714  0175CC  6E01               	movwf	btemp^0,c
 15715  0175CE  0EFA               	movlw	-6
 15716  0175D0  0060  F007  FFE3   	movff	btemp,plusw1
 15717  0175D6  6A01               	clrf	btemp^0,c
 15718  0175D8  0EFB               	movlw	-5
 15719  0175DA  50E3               	movf	plusw1,w,c
 15720  0175DC  2001               	addwfc	btemp^0,w,c
 15721  0175DE  6E01               	movwf	btemp^0,c
 15722  0175E0  0EFB               	movlw	-5
 15723  0175E2  0060  F007  FFE3   	movff	btemp,plusw1
 15724                           
 15725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15726                           ;stkvar	_i @ sp[(-17)+15]
 15727  0175E8  0EFE               	movlw	-2
 15728  0175EA  50E3               	movf	plusw1,w,c
 15729  0175EC  0F01               	addlw	1
 15730  0175EE  6E01               	movwf	btemp^0,c
 15731  0175F0  0EFE               	movlw	-2
 15732  0175F2  0060  F007  FFE3   	movff	btemp,plusw1
 15733  0175F8  6A01               	clrf	btemp^0,c
 15734  0175FA  0EFF               	movlw	-1
 15735  0175FC  50E3               	movf	plusw1,w,c
 15736  0175FE  2001               	addwfc	btemp^0,w,c
 15737  017600  6E01               	movwf	btemp^0,c
 15738  017602  0EFF               	movlw	-1
 15739  017604  0060  F007  FFE3   	movff	btemp,plusw1
 15740  01760A                     l12330:
 15741                           
 15742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15743                           ;stkvar	_p @ sp[(-17)+9]
 15744                           ;stkvar	_i @ sp[(-17)+15]
 15745  01760A  50E1               	movf	fsr1l,w,c
 15746  01760C  0FFE               	addlw	-2
 15747  01760E  6ED9               	movwf	fsr2l,c
 15748  017610  50E2               	movf	fsr1h,w,c
 15749  017612  6EDA               	movwf	fsr2h,c
 15750  017614  0EFF               	movlw	255
 15751  017616  22DA               	addwfc	fsr2h,f,c
 15752  017618  0EF8               	movlw	-8
 15753  01761A  50E3               	movf	plusw1,w,c
 15754  01761C  5CDE               	subwf	postinc2,w,c
 15755  01761E  50DE               	movf	postinc2,w,c
 15756  017620  0A80               	xorlw	128
 15757  017622  6E01               	movwf	btemp^0,c
 15758  017624  0EF9               	movlw	-7
 15759  017626  50E3               	movf	plusw1,w,c
 15760  017628  0A80               	xorlw	128
 15761  01762A  5801               	subwfb	btemp^0,w,c
 15762  01762C  A0D8               	btfss	status,0,c
 15763  01762E  D7A8               	goto	l12324
 15764                           
 15765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15766  017630  B03E               	btfsc	_flags^0,0,c
 15767  017632  D01F               	goto	l12338
 15768  017634  D031               	goto	u11700
 15769  017636                     l12334:
 15770                           
 15771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15772                           ;stkvar	_fp @ sp[(-17)+-2]
 15773  017636  0EED               	movlw	-19
 15774  017638  006F FF8F FFE6     	movff	plusw1,postinc1
 15775  01763E  006F FF8F FFE6     	movff	plusw1,postinc1
 15776  017644  0E20               	movlw	32
 15777  017646  6EE6               	movwf	postinc1,c
 15778  017648  0E00               	movlw	0
 15779  01764A  6EE6               	movwf	postinc1,c
 15780  01764C  ECC8  F0CB         	call	_fputc	;wreg free
 15781                           
 15782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15783                           ;stkvar	_l @ sp[(-17)+7]
 15784  017650  0EF6               	movlw	-10
 15785  017652  50E3               	movf	plusw1,w,c
 15786  017654  0F01               	addlw	1
 15787  017656  6E01               	movwf	btemp^0,c
 15788  017658  0EF6               	movlw	-10
 15789  01765A  0060  F007  FFE3   	movff	btemp,plusw1
 15790  017660  6A01               	clrf	btemp^0,c
 15791  017662  0EF7               	movlw	-9
 15792  017664  50E3               	movf	plusw1,w,c
 15793  017666  2001               	addwfc	btemp^0,w,c
 15794  017668  6E01               	movwf	btemp^0,c
 15795  01766A  0EF7               	movlw	-9
 15796  01766C  0060  F007  FFE3   	movff	btemp,plusw1
 15797  017672                     l12338:
 15798                           
 15799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15800                           ;stkvar	_w @ sp[(-17)+13]
 15801                           ;stkvar	_l @ sp[(-17)+7]
 15802  017672  50E1               	movf	fsr1l,w,c
 15803  017674  0FF6               	addlw	-10
 15804  017676  6ED9               	movwf	fsr2l,c
 15805  017678  50E2               	movf	fsr1h,w,c
 15806  01767A  6EDA               	movwf	fsr2h,c
 15807  01767C  0EFF               	movlw	255
 15808  01767E  22DA               	addwfc	fsr2h,f,c
 15809  017680  0EFC               	movlw	-4
 15810  017682  50E3               	movf	plusw1,w,c
 15811  017684  5CDE               	subwf	postinc2,w,c
 15812  017686  50DE               	movf	postinc2,w,c
 15813  017688  0A80               	xorlw	128
 15814  01768A  6E01               	movwf	btemp^0,c
 15815  01768C  0EFD               	movlw	-3
 15816  01768E  50E3               	movf	plusw1,w,c
 15817  017690  0A80               	xorlw	128
 15818  017692  5801               	subwfb	btemp^0,w,c
 15819  017694  A0D8               	btfss	status,0,c
 15820  017696  D7CF               	goto	l12334
 15821  017698                     u11700:
 15822                           
 15823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15824                           ;stkvar	_l @ sp[(-17)+7]
 15825  017698  0EF6               	movlw	-10
 15826  01769A  006F FF8C  F001    	movff	plusw1,btemp
 15827  0176A0  0EF7               	movlw	-9
 15828  0176A2  006F FF8C  F002    	movff	plusw1,btemp+1
 15829                           
 15830                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15831  0176A8  0EEB               	movlw	235
 15832  0176AA  26E1               	addwf	fsr1l,f,c
 15833  0176AC  0EFF               	movlw	255
 15834  0176AE  22E2               	addwfc	fsr1h,f,c
 15835  0176B0  0012               	return		;funcret
 15836  0176B2                     __end_of_stoa:
 15837                           	opt callstack 0
 15838                           
 15839 ;; *************** function _efgtoa *****************
 15840 ;; Defined at:
 15841 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15844 ;;		 -> f(6), NULL(0), 
 15845 ;;  f               4  [STACK] PTR struct _IO_FILE
 15846 ;;  c               1  [STACK] unsigned char 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  u               4  [STACK] unsigned char 
 15849 ;;  g               4  [STACK] unsigned char 
 15850 ;;  l               4  [STACK] unsigned char 
 15851 ;;  h               4  [STACK] unsigned char 
 15852 ;;  ou              4  [STACK] unsigned char 
 15853 ;;  n               2  [STACK] int 
 15854 ;;  e               2  [STACK] int 
 15855 ;;  i               2  [STACK] int 
 15856 ;;  w               2  [STACK] int 
 15857 ;;  p               2  [STACK] int 
 15858 ;;  sign            2  [STACK] int 
 15859 ;;  d               2  [STACK] int 
 15860 ;;  ne              2  [STACK] int 
 15861 ;;  m               2  [STACK] int 
 15862 ;;  pp              2  [STACK] int 
 15863 ;;  t               2  [STACK] int 
 15864 ;;  mode            1  [STACK] unsigned char 
 15865 ;;  nmode           1  [STACK] unsigned char 
 15866 ;; Return value:  Size  Location     Type
 15867 ;;                  2  [STACK] int 
 15868 ;; Registers used:
 15869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15870 ;; Tracked objects:
 15871 ;;		On entry : 0/0
 15872 ;;		On exit  : 0/0
 15873 ;;		Unchanged: 0/0
 15874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15879 ;;Total ram usage:        0 bytes
 15880 ;; Hardware stack levels used:    1
 15881 ;; Hardware stack levels required when called:   20
 15882 ;; This function calls:
 15883 ;;		___awdiv
 15884 ;;		___awmod
 15885 ;;		___fladd
 15886 ;;		___fldiv
 15887 ;;		___fleq
 15888 ;;		___flge
 15889 ;;		___flmul
 15890 ;;		___flneg
 15891 ;;		___flsub
 15892 ;;		___fltol
 15893 ;;		___fpclassifyf
 15894 ;;		_floorf
 15895 ;;		_isupper
 15896 ;;		_pad
 15897 ;;		_strcpy
 15898 ;;		_tolower
 15899 ;; This function is called by:
 15900 ;;		_vfpfcnvrt
 15901 ;; This function uses a reentrant model
 15902 ;;
 15903                           
 15904                           	psect	text57
 15905  010000                     __ptext57:
 15906                           	opt callstack 0
 15907  010000                     _efgtoa:
 15908                           	opt callstack 0
 15909                           
 15910                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15911  010000  0E38               	movlw	56
 15912  010002  26E1               	addwf	fsr1l,f,c
 15913  010004  0E00               	movlw	0
 15914  010006  22E2               	addwfc	fsr1h,f,c
 15915                           
 15916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15917                           ;stkvar	_sign @ sp[(-56)+42]
 15918                           
 15919                           ;incstack = 0
 15920 ;; hardware stack exceeded
 15921  010008  0EF2               	movlw	-14
 15922  01000A  6AE3               	clrf	plusw1,c
 15923  01000C  0EF3               	movlw	-13
 15924  01000E  6AE3               	clrf	plusw1,c
 15925                           
 15926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15927                           ;stkvar	_f @ sp[(-56)+-6]
 15928  010010  0EC2               	movlw	-62
 15929  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15930  010018  0EC3               	movlw	-61
 15931  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15932  010020  0EC4               	movlw	-60
 15933  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15934  010028  0EC5               	movlw	-59
 15935  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15936                           
 15937                           ;stkvar	_g @ sp[(-56)+16]
 15938  010030  0ED8               	movlw	-40
 15939  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15940  010038  0ED9               	movlw	-39
 15941  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15942  010040  0EDA               	movlw	-38
 15943  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15944  010048  0EDB               	movlw	-37
 15945  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15946                           
 15947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15948                           ;stkvar	_g @ sp[(-56)+16]
 15949  010050  0EDB               	movlw	-37
 15950  010052  AEE3               	btfss	plusw1,7,c
 15951  010054  D02B               	goto	l11998
 15952                           
 15953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15954  010056  0E01               	movlw	1
 15955  010058  6E0B               	movwf	(btemp+10)^0,c
 15956  01005A  0E00               	movlw	0
 15957  01005C  6E0C               	movwf	(btemp+11)^0,c
 15958                           
 15959                           ;stkvar	_sign @ sp[(-56)+42]
 15960  01005E  0EF2               	movlw	-14
 15961  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15962  010066  0EF3               	movlw	-13
 15963  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15964                           
 15965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15966                           ;stkvar	_g @ sp[(-56)+16]
 15967  01006E  0ED8               	movlw	-40
 15968  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15969  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15970  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15971  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15972  010088  EC34  F0DA         	call	___flneg	;wreg free
 15973                           
 15974                           ;stkvar	_g @ sp[(-56)+16]
 15975  01008C  0ED8               	movlw	-40
 15976  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15977  010094  0ED9               	movlw	-39
 15978  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15979  01009C  0EDA               	movlw	-38
 15980  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15981  0100A4  0EDB               	movlw	-37
 15982  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15983  0100AC                     l11998:
 15984                           
 15985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15986                           ;stkvar	_n @ sp[(-56)+32]
 15987  0100AC  0EE8               	movlw	-24
 15988  0100AE  6AE3               	clrf	plusw1,c
 15989  0100B0  0EE9               	movlw	-23
 15990  0100B2  6AE3               	clrf	plusw1,c
 15991                           
 15992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15993                           ;stkvar	_w @ sp[(-56)+38]
 15994  0100B4  0EEE               	movlw	-18
 15995  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 15996  0100BC  0EEF               	movlw	-17
 15997  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15998                           
 15999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 16000                           ;stkvar	_sign @ sp[(-56)+42]
 16001  0100C4  0EF2               	movlw	-14
 16002  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 16003  0100CC  0EF3               	movlw	-13
 16004  0100CE  50E3               	movf	plusw1,w,c
 16005  0100D0  1001               	iorwf	btemp^0,w,c
 16006  0100D2  A4D8               	btfss	status,2,c
 16007  0100D4  D002               	goto	u11110
 16008  0100D6  A43E               	btfss	_flags^0,2,c
 16009  0100D8  D036               	goto	l12018
 16010  0100DA                     u11110:
 16011                           
 16012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 16013                           ;stkvar	_sign @ sp[(-56)+42]
 16014  0100DA  0EF2               	movlw	-14
 16015  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 16016  0100E2  0EF3               	movlw	-13
 16017  0100E4  50E3               	movf	plusw1,w,c
 16018  0100E6  1001               	iorwf	btemp^0,w,c
 16019  0100E8  A4D8               	btfss	status,2,c
 16020  0100EA  D002               	goto	l12010
 16021  0100EC  0E2B               	movlw	43
 16022  0100EE  D001               	goto	L16
 16023  0100F0                     l12010:
 16024  0100F0  0E2D               	movlw	45
 16025  0100F2                     L16:
 16026  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16027  0100F4  0E00               	movlw	0
 16028  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16029                           
 16030                           ;stkvar	_efgtoa$5517 @ sp[(-56)+10]
 16031  0100F8  0ED2               	movlw	-46
 16032  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16033  010100  0ED3               	movlw	-45
 16034  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16035                           
 16036                           ;stkvar	_efgtoa$5517 @ sp[(-56)+10]
 16037  010108  0ED2               	movlw	-46
 16038  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16039                           
 16040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16041                           ;stkvar	_n @ sp[(-56)+32]
 16042  010110  0EE8               	movlw	-24
 16043  010112  50E3               	movf	plusw1,w,c
 16044  010114  0F01               	addlw	1
 16045  010116  6E01               	movwf	btemp^0,c
 16046  010118  0EE8               	movlw	-24
 16047  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16048  010120  6A01               	clrf	btemp^0,c
 16049  010122  0EE9               	movlw	-23
 16050  010124  50E3               	movf	plusw1,w,c
 16051  010126  2001               	addwfc	btemp^0,w,c
 16052  010128  6E01               	movwf	btemp^0,c
 16053  01012A  0EE9               	movlw	-23
 16054  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16055                           
 16056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16057                           ;stkvar	_w @ sp[(-56)+38]
 16058  010132  50E1               	movf	fsr1l,w,c
 16059  010134  0FEE               	addlw	-18
 16060  010136  6ED9               	movwf	fsr2l,c
 16061  010138  50E2               	movf	fsr1h,w,c
 16062  01013A  6EDA               	movwf	fsr2h,c
 16063  01013C  0EFF               	movlw	255
 16064  01013E  22DA               	addwfc	fsr2h,f,c
 16065  010140  06DE               	decf	postinc2,f,c
 16066  010142  0E00               	movlw	0
 16067  010144  5ADD               	subwfb	postdec2,f,c
 16068  010146                     l12018:
 16069                           
 16070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16071                           ;stkvar	_g @ sp[(-56)+16]
 16072  010146  0ED8               	movlw	-40
 16073  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16074  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16075  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16076  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16077  010160  ECDF  F0C4         	call	___fpclassifyf	;wreg free
 16078  010164  0401               	decf	btemp^0,w,c
 16079  010166  1002               	iorwf	(btemp+1)^0,w,c
 16080  010168  A4D8               	btfss	status,2,c
 16081  01016A  D076               	goto	l12036
 16082  01016C  0EBF               	movlw	191
 16083  01016E  6E0B               	movwf	(btemp+10)^0,c
 16084  010170  0EFF               	movlw	255
 16085  010172  6E0C               	movwf	(btemp+11)^0,c
 16086                           
 16087                           ;stkvar	_c @ sp[(-56)+-7]
 16088  010174  0EC1               	movlw	-63
 16089  010176  50E3               	movf	plusw1,w,c
 16090  010178  6E09               	movwf	(btemp+8)^0,c
 16091  01017A  6A0A               	clrf	(btemp+9)^0,c
 16092  01017C  500B               	movf	(btemp+10)^0,w,c
 16093  01017E  2609               	addwf	(btemp+8)^0,f,c
 16094  010180  500C               	movf	(btemp+11)^0,w,c
 16095  010182  220A               	addwfc	(btemp+9)^0,f,c
 16096  010184  500A               	movf	(btemp+9)^0,w,c
 16097  010186  E106               	bnz	u11140
 16098  010188  0E1A               	movlw	26
 16099  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16100  01018C  B0D8               	btfsc	status,0,c
 16101  01018E  D002               	goto	u11140
 16102  010190  0E01               	movlw	1
 16103  010192  D001               	goto	u11150
 16104  010194                     u11140:
 16105  010194  0E00               	movlw	0
 16106  010196                     u11150:
 16107  010196  6E0B               	movwf	(btemp+10)^0,c
 16108  010198  6A0C               	clrf	(btemp+11)^0,c
 16109                           
 16110                           ;stkvar	_efgtoa$5518 @ sp[(-56)+8]
 16111  01019A  0ED0               	movlw	-48
 16112  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16113  0101A2  0ED1               	movlw	-47
 16114  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16115                           
 16116                           ;stkvar	_efgtoa$5518 @ sp[(-56)+8]
 16117  0101AA  0ED0               	movlw	-48
 16118  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16119  0101B2  0ED1               	movlw	-47
 16120  0101B4  50E3               	movf	plusw1,w,c
 16121  0101B6  1001               	iorwf	btemp^0,w,c
 16122  0101B8  B4D8               	btfsc	status,2,c
 16123  0101BA  D017               	goto	l12028
 16124                           
 16125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16126  0101BC  0ED7               	movlw	low STR_65
 16127  0101BE  6EE6               	movwf	postinc1,c
 16128  0101C0  0EFF               	movlw	high STR_65
 16129  0101C2  6EE6               	movwf	postinc1,c
 16130                           
 16131                           ;stkvar	_n @ sp[(-58)+32]
 16132  0101C4  0E97               	movlw	low _dbuf
 16133  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16134  0101C8  0E02               	movlw	high _dbuf
 16135  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16136  0101CC  0EE6               	movlw	-26
 16137  0101CE  50E3               	movf	plusw1,w,c
 16138  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16139  0101D2  0EE7               	movlw	-25
 16140  0101D4  50E3               	movf	plusw1,w,c
 16141  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16142  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16143  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16144  0101E4  ECC7  F0D1         	call	_strcpy	;wreg free
 16145                           
 16146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16147  0101E8  D016               	goto	l12030
 16148  0101EA                     l12028:
 16149                           
 16150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16151  0101EA  0EDF               	movlw	low STR_66
 16152  0101EC  6EE6               	movwf	postinc1,c
 16153  0101EE  0EFF               	movlw	high STR_66
 16154  0101F0  6EE6               	movwf	postinc1,c
 16155                           
 16156                           ;stkvar	_n @ sp[(-58)+32]
 16157  0101F2  0E97               	movlw	low _dbuf
 16158  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16159  0101F6  0E02               	movlw	high _dbuf
 16160  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16161  0101FA  0EE6               	movlw	-26
 16162  0101FC  50E3               	movf	plusw1,w,c
 16163  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16164  010200  0EE7               	movlw	-25
 16165  010202  50E3               	movf	plusw1,w,c
 16166  010204  220C               	addwfc	(btemp+11)^0,f,c
 16167  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16168  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16169  010212  ECC7  F0D1         	call	_strcpy	;wreg free
 16170  010216                     l12030:
 16171                           
 16172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16173                           ;stkvar	_w @ sp[(-56)+38]
 16174  010216  50E1               	movf	fsr1l,w,c
 16175  010218  0FEE               	addlw	-18
 16176  01021A  6ED9               	movwf	fsr2l,c
 16177  01021C  50E2               	movf	fsr1h,w,c
 16178  01021E  6EDA               	movwf	fsr2h,c
 16179  010220  0EFF               	movlw	255
 16180  010222  22DA               	addwfc	fsr2h,f,c
 16181  010224  0EFD               	movlw	253
 16182  010226  26DE               	addwf	postinc2,f,c
 16183  010228  0EFF               	movlw	255
 16184  01022A  22DD               	addwfc	postdec2,f,c
 16185  01022C                     l12032:
 16186                           
 16187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16188                           ;stkvar	_w @ sp[(-56)+38]
 16189  01022C  0EEE               	movlw	-18
 16190  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16191  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16192  01023A  0E97               	movlw	low _dbuf
 16193  01023C  6EE6               	movwf	postinc1,c
 16194  01023E  0E02               	movlw	high _dbuf
 16195  010240  6EE6               	movwf	postinc1,c
 16196                           
 16197                           ;stkvar	_fp @ sp[(-60)+-2]
 16198  010242  0EC2               	movlw	-62
 16199  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16200  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16201  010250  EC73  F0CD         	call	_pad	;wreg free
 16202  010254  EF1D  F089         	goto	l2194
 16203  010258                     l12036:
 16204                           
 16205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16206                           ;stkvar	_g @ sp[(-56)+16]
 16207  010258  0ED8               	movlw	-40
 16208  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16209  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16210  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16211  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16212  010272  ECDF  F0C4         	call	___fpclassifyf	;wreg free
 16213  010276  5001               	movf	btemp^0,w,c
 16214  010278  1002               	iorwf	(btemp+1)^0,w,c
 16215  01027A  A4D8               	btfss	status,2,c
 16216  01027C  D056               	goto	l12054
 16217  01027E  0EBF               	movlw	191
 16218  010280  6E0B               	movwf	(btemp+10)^0,c
 16219  010282  0EFF               	movlw	255
 16220  010284  6E0C               	movwf	(btemp+11)^0,c
 16221                           
 16222                           ;stkvar	_c @ sp[(-56)+-7]
 16223  010286  0EC1               	movlw	-63
 16224  010288  50E3               	movf	plusw1,w,c
 16225  01028A  6E09               	movwf	(btemp+8)^0,c
 16226  01028C  6A0A               	clrf	(btemp+9)^0,c
 16227  01028E  500B               	movf	(btemp+10)^0,w,c
 16228  010290  2609               	addwf	(btemp+8)^0,f,c
 16229  010292  500C               	movf	(btemp+11)^0,w,c
 16230  010294  220A               	addwfc	(btemp+9)^0,f,c
 16231  010296  500A               	movf	(btemp+9)^0,w,c
 16232  010298  E106               	bnz	u11180
 16233  01029A  0E1A               	movlw	26
 16234  01029C  5C09               	subwf	(btemp+8)^0,w,c
 16235  01029E  B0D8               	btfsc	status,0,c
 16236  0102A0  D002               	goto	u11180
 16237  0102A2  0E01               	movlw	1
 16238  0102A4  D001               	goto	u11190
 16239  0102A6                     u11180:
 16240  0102A6  0E00               	movlw	0
 16241  0102A8                     u11190:
 16242  0102A8  6E0B               	movwf	(btemp+10)^0,c
 16243  0102AA  6A0C               	clrf	(btemp+11)^0,c
 16244                           
 16245                           ;stkvar	_efgtoa$5522 @ sp[(-56)+6]
 16246  0102AC  0ECE               	movlw	-50
 16247  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16248  0102B4  0ECF               	movlw	-49
 16249  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16250                           
 16251                           ;stkvar	_efgtoa$5522 @ sp[(-56)+6]
 16252  0102BC  0ECE               	movlw	-50
 16253  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 16254  0102C4  0ECF               	movlw	-49
 16255  0102C6  50E3               	movf	plusw1,w,c
 16256  0102C8  1001               	iorwf	btemp^0,w,c
 16257  0102CA  B4D8               	btfsc	status,2,c
 16258  0102CC  D017               	goto	l12046
 16259                           
 16260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 16261  0102CE  0EDB               	movlw	low STR_69
 16262  0102D0  6EE6               	movwf	postinc1,c
 16263  0102D2  0EFF               	movlw	high STR_69
 16264  0102D4  6EE6               	movwf	postinc1,c
 16265                           
 16266                           ;stkvar	_n @ sp[(-58)+32]
 16267  0102D6  0E97               	movlw	low _dbuf
 16268  0102D8  6E0B               	movwf	(btemp+10)^0,c
 16269  0102DA  0E02               	movlw	high _dbuf
 16270  0102DC  6E0C               	movwf	(btemp+11)^0,c
 16271  0102DE  0EE6               	movlw	-26
 16272  0102E0  50E3               	movf	plusw1,w,c
 16273  0102E2  260B               	addwf	(btemp+10)^0,f,c
 16274  0102E4  0EE7               	movlw	-25
 16275  0102E6  50E3               	movf	plusw1,w,c
 16276  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 16277  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16278  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16279  0102F6  ECC7  F0D1         	call	_strcpy	;wreg free
 16280                           
 16281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 16282  0102FA  D78D               	goto	l12030
 16283  0102FC                     l12046:
 16284                           
 16285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 16286  0102FC  0EE3               	movlw	low STR_70
 16287  0102FE  6EE6               	movwf	postinc1,c
 16288  010300  0EFF               	movlw	high STR_70
 16289  010302  6EE6               	movwf	postinc1,c
 16290                           
 16291                           ;stkvar	_n @ sp[(-58)+32]
 16292  010304  0E97               	movlw	low _dbuf
 16293  010306  6E0B               	movwf	(btemp+10)^0,c
 16294  010308  0E02               	movlw	high _dbuf
 16295  01030A  6E0C               	movwf	(btemp+11)^0,c
 16296  01030C  0EE6               	movlw	-26
 16297  01030E  50E3               	movf	plusw1,w,c
 16298  010310  260B               	addwf	(btemp+10)^0,f,c
 16299  010312  0EE7               	movlw	-25
 16300  010314  50E3               	movf	plusw1,w,c
 16301  010316  220C               	addwfc	(btemp+11)^0,f,c
 16302  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16303  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 16304  010324  ECC7  F0D1         	call	_strcpy	;wreg free
 16305  010328  D776               	goto	l12030
 16306  01032A                     l12054:
 16307                           
 16308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 16309  01032A  0E00               	movlw	0
 16310  01032C  6E09               	movwf	(btemp+8)^0,c
 16311  01032E  0E00               	movlw	0
 16312  010330  6E0A               	movwf	(btemp+9)^0,c
 16313  010332  0E80               	movlw	128
 16314  010334  6E0B               	movwf	(btemp+10)^0,c
 16315  010336  0E3F               	movlw	63
 16316  010338  6E0C               	movwf	(btemp+11)^0,c
 16317                           
 16318                           ;stkvar	_u @ sp[(-56)+12]
 16319  01033A  0ED4               	movlw	-44
 16320  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16321  010342  0ED5               	movlw	-43
 16322  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16323  01034A  0ED6               	movlw	-42
 16324  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16325  010352  0ED7               	movlw	-41
 16326  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 16327                           
 16328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 16329                           ;stkvar	_e @ sp[(-56)+34]
 16330  01035A  0EEA               	movlw	-22
 16331  01035C  6AE3               	clrf	plusw1,c
 16332  01035E  0EEB               	movlw	-21
 16333  010360  6AE3               	clrf	plusw1,c
 16334                           
 16335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 16336  010362  0E00               	movlw	0
 16337  010364  6EE6               	movwf	postinc1,c
 16338  010366  0E00               	movlw	0
 16339  010368  6EE6               	movwf	postinc1,c
 16340  01036A  0E00               	movlw	0
 16341  01036C  6EE6               	movwf	postinc1,c
 16342  01036E  0E00               	movlw	0
 16343  010370  6EE6               	movwf	postinc1,c
 16344                           
 16345                           ;stkvar	_g @ sp[(-60)+16]
 16346  010372  0ED4               	movlw	-44
 16347  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 16348  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 16349  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 16350  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 16351  01038C  EC31  F0D2         	call	___fleq	;wreg free
 16352  010390  A001               	btfss	btemp& (0+255),0,c
 16353  010392  D039               	goto	l12066
 16354  010394  D0BC               	goto	u11230
 16355  010396                     l12062:
 16356                           
 16357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 16358  010396  0E00               	movlw	0
 16359  010398  6EE6               	movwf	postinc1,c
 16360  01039A  0E00               	movlw	0
 16361  01039C  6EE6               	movwf	postinc1,c
 16362  01039E  0E20               	movlw	32
 16363  0103A0  6EE6               	movwf	postinc1,c
 16364  0103A2  0E41               	movlw	65
 16365  0103A4  6EE6               	movwf	postinc1,c
 16366                           
 16367                           ;stkvar	_u @ sp[(-60)+12]
 16368  0103A6  0ED0               	movlw	-48
 16369  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16370  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16371  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 16372  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 16373  0103C0  ECB3  F09E         	call	___flmul	;wreg free
 16374                           
 16375                           ;stkvar	_u @ sp[(-56)+12]
 16376  0103C4  0ED4               	movlw	-44
 16377  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 16378  0103CC  0ED5               	movlw	-43
 16379  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16380  0103D4  0ED6               	movlw	-42
 16381  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16382  0103DC  0ED7               	movlw	-41
 16383  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16384                           
 16385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 16386                           ;stkvar	_e @ sp[(-56)+34]
 16387  0103E4  0EEA               	movlw	-22
 16388  0103E6  50E3               	movf	plusw1,w,c
 16389  0103E8  0F01               	addlw	1
 16390  0103EA  6E01               	movwf	btemp^0,c
 16391  0103EC  0EEA               	movlw	-22
 16392  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 16393  0103F4  6A01               	clrf	btemp^0,c
 16394  0103F6  0EEB               	movlw	-21
 16395  0103F8  50E3               	movf	plusw1,w,c
 16396  0103FA  2001               	addwfc	btemp^0,w,c
 16397  0103FC  6E01               	movwf	btemp^0,c
 16398  0103FE  0EEB               	movlw	-21
 16399  010400  0060  F007  FFE3   	movff	btemp,plusw1
 16400  010406                     l12066:
 16401                           
 16402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 16403  010406  0E00               	movlw	0
 16404  010408  6EE6               	movwf	postinc1,c
 16405  01040A  0E00               	movlw	0
 16406  01040C  6EE6               	movwf	postinc1,c
 16407  01040E  0E20               	movlw	32
 16408  010410  6EE6               	movwf	postinc1,c
 16409  010412  0E41               	movlw	65
 16410  010414  6EE6               	movwf	postinc1,c
 16411                           
 16412                           ;stkvar	_u @ sp[(-60)+12]
 16413  010416  0ED0               	movlw	-48
 16414  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 16415  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 16416  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 16417  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 16418  010430  ECB3  F09E         	call	___flmul	;wreg free
 16419  010434  0060  F007  FFE6   	movff	btemp,postinc1
 16420  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16421  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16422  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 16423                           
 16424                           ;stkvar	_g @ sp[(-60)+16]
 16425  01044C  0ED4               	movlw	-44
 16426  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16427  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16428  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16429  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16430  010466  ECE6  F0C7         	call	___flge	;wreg free
 16431  01046A  A001               	btfss	btemp& (0+255),0,c
 16432  01046C  D032               	goto	l12072
 16433  01046E  D793               	goto	l12062
 16434  010470                     l12068:
 16435                           
 16436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16437  010470  0E00               	movlw	0
 16438  010472  6EE6               	movwf	postinc1,c
 16439  010474  0E00               	movlw	0
 16440  010476  6EE6               	movwf	postinc1,c
 16441  010478  0E20               	movlw	32
 16442  01047A  6EE6               	movwf	postinc1,c
 16443  01047C  0E41               	movlw	65
 16444  01047E  6EE6               	movwf	postinc1,c
 16445                           
 16446                           ;stkvar	_u @ sp[(-60)+12]
 16447  010480  0ED0               	movlw	-48
 16448  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16449  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16450  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16451  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16452  01049A  ECA6  F0A6         	call	___fldiv	;wreg free
 16453                           
 16454                           ;stkvar	_u @ sp[(-56)+12]
 16455  01049E  0ED4               	movlw	-44
 16456  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16457  0104A6  0ED5               	movlw	-43
 16458  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16459  0104AE  0ED6               	movlw	-42
 16460  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16461  0104B6  0ED7               	movlw	-41
 16462  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16463                           
 16464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16465                           ;stkvar	_e @ sp[(-56)+34]
 16466  0104BE  50E1               	movf	fsr1l,w,c
 16467  0104C0  0FEA               	addlw	-22
 16468  0104C2  6ED9               	movwf	fsr2l,c
 16469  0104C4  50E2               	movf	fsr1h,w,c
 16470  0104C6  6EDA               	movwf	fsr2h,c
 16471  0104C8  0EFF               	movlw	255
 16472  0104CA  22DA               	addwfc	fsr2h,f,c
 16473  0104CC  06DE               	decf	postinc2,f,c
 16474  0104CE  0E00               	movlw	0
 16475  0104D0  5ADD               	subwfb	postdec2,f,c
 16476  0104D2                     l12072:
 16477                           
 16478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16479                           ;stkvar	_u @ sp[(-56)+12]
 16480  0104D2  0ED4               	movlw	-44
 16481  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16482  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16483  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16484  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16485                           
 16486                           ;stkvar	_g @ sp[(-60)+16]
 16487  0104EC  0ED4               	movlw	-44
 16488  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16489  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16490  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16491  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16492  010506  ECE6  F0C7         	call	___flge	;wreg free
 16493  01050A  A001               	btfss	btemp& (0+255),0,c
 16494  01050C  D7B1               	goto	l12068
 16495  01050E                     u11230:
 16496                           
 16497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16498                           ;stkvar	_c @ sp[(-56)+-7]
 16499  01050E  0EC1               	movlw	-63
 16500  010510  50E3               	movf	plusw1,w,c
 16501  010512  6EE6               	movwf	postinc1,c
 16502  010514  0E00               	movlw	0
 16503  010516  6EE6               	movwf	postinc1,c
 16504  010518  EC95  F0D6         	call	_tolower	;wreg free
 16505                           
 16506                           ;stkvar	_mode @ sp[(-56)+54]
 16507  01051C  0EFE               	movlw	-2
 16508  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16509                           
 16510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16511                           ;stkvar	_mode @ sp[(-56)+54]
 16512                           ;stkvar	_nmode @ sp[(-56)+55]
 16513  010524  0EFE               	movlw	-2
 16514  010526  006F FF8C  F001    	movff	plusw1,btemp
 16515  01052C  0EFF               	movlw	-1
 16516  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16517                           
 16518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16519                           ;stkvar	_mode @ sp[(-56)+54]
 16520  010534  0EFE               	movlw	-2
 16521  010536  006F FF8C  F001    	movff	plusw1,btemp
 16522  01053C  0E67               	movlw	103
 16523  01053E  1801               	xorwf	btemp^0,w,c
 16524  010540  A4D8               	btfss	status,2,c
 16525  010542  D025               	goto	l12090
 16526                           
 16527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16528  010544  503C               	movf	_prec^0,w,c
 16529  010546  103D               	iorwf	(_prec+1)^0,w,c
 16530  010548  A4D8               	btfss	status,2,c
 16531  01054A  D004               	goto	l12084
 16532                           
 16533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16534  01054C  0E00               	movlw	0
 16535  01054E  6E3D               	movwf	(_prec+1)^0,c
 16536  010550  0E01               	movlw	1
 16537  010552  6E3C               	movwf	_prec^0,c
 16538  010554                     l12084:
 16539                           
 16540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16541  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16542  010556  D005               	goto	u11260
 16543  010558  503D               	movf	(_prec+1)^0,w,c
 16544  01055A  E110               	bnz	l12088
 16545  01055C  043C               	decf	_prec^0,w,c
 16546  01055E  B0D8               	btfsc	status,0,c
 16547  010560  D00D               	goto	l12088
 16548  010562                     u11260:
 16549  010562  0E06               	movlw	6
 16550  010564  6E0B               	movwf	(btemp+10)^0,c
 16551  010566  0E00               	movlw	0
 16552  010568  6E0C               	movwf	(btemp+11)^0,c
 16553                           
 16554                           ;stkvar	_p @ sp[(-56)+40]
 16555  01056A  0EF0               	movlw	-16
 16556  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16557  010572  0EF1               	movlw	-15
 16558  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16559  01057A  D00C               	goto	l12096
 16560  01057C                     l12088:
 16561                           
 16562                           ;stkvar	_p @ sp[(-56)+40]
 16563  01057C  0EF0               	movlw	-16
 16564  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16565  010584  0EF1               	movlw	-15
 16566  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16567  01058C  D003               	goto	l12096
 16568  01058E                     l12090:
 16569                           
 16570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16571  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16572  010590  D7F5               	goto	l12088
 16573  010592  D7E7               	goto	u11260
 16574  010594                     l12096:
 16575                           
 16576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16577                           ;stkvar	_mode @ sp[(-56)+54]
 16578  010594  0EFE               	movlw	-2
 16579  010596  006F FF8C  F001    	movff	plusw1,btemp
 16580  01059C  0E67               	movlw	103
 16581  01059E  1801               	xorwf	btemp^0,w,c
 16582  0105A0  A4D8               	btfss	status,2,c
 16583  0105A2  D02F               	goto	l12106
 16584                           
 16585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16586                           ;stkvar	_e @ sp[(-56)+34]
 16587  0105A4  0EEB               	movlw	-21
 16588  0105A6  AEE3               	btfss	plusw1,7,c
 16589  0105A8  D00E               	goto	u11290
 16590  0105AA  0EEA               	movlw	-22
 16591  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 16592  0105B2  0EFC               	movlw	252
 16593  0105B4  5E01               	subwf	btemp^0,f,c
 16594  0105B6  0EEB               	movlw	-21
 16595  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 16596  0105BE  0EFF               	movlw	255
 16597  0105C0  5A01               	subwfb	btemp^0,f,c
 16598  0105C2  A0D8               	btfss	status,0,c
 16599  0105C4  D018               	goto	l12104
 16600  0105C6                     u11290:
 16601                           
 16602                           ;stkvar	_e @ sp[(-56)+34]
 16603                           ;stkvar	_p @ sp[(-56)+40]
 16604  0105C6  0EF0               	movlw	-16
 16605  0105C8  50E3               	movf	plusw1,w,c
 16606  0105CA  0FFF               	addlw	255
 16607  0105CC  6E0B               	movwf	(btemp+10)^0,c
 16608  0105CE  0EF1               	movlw	-15
 16609  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16610  0105D6  0EFF               	movlw	255
 16611  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 16612  0105DA  0EEA               	movlw	-22
 16613  0105DC  50E3               	movf	plusw1,w,c
 16614  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 16615  0105E0  500C               	movf	(btemp+11)^0,w,c
 16616  0105E2  0A80               	xorlw	128
 16617  0105E4  6E01               	movwf	btemp^0,c
 16618  0105E6  0EEB               	movlw	-21
 16619  0105E8  50E3               	movf	plusw1,w,c
 16620  0105EA  0A80               	xorlw	128
 16621  0105EC  5801               	subwfb	btemp^0,w,c
 16622  0105EE  A0D8               	btfss	status,0,c
 16623  0105F0  D002               	goto	l12104
 16624                           
 16625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16626  0105F2  0E66               	movlw	102
 16627  0105F4  D001               	goto	L17
 16628  0105F6                     l12104:
 16629                           
 16630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16631  0105F6  0E65               	movlw	101
 16632  0105F8                     L17:
 16633  0105F8  6E0C               	movwf	(btemp+11)^0,c
 16634                           
 16635                           ;stkvar	_nmode @ sp[(-56)+55]
 16636  0105FA  0EFF               	movlw	-1
 16637  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16638  010602                     l12106:
 16639                           
 16640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16641                           ;stkvar	_p @ sp[(-56)+40]
 16642                           ;stkvar	_m @ sp[(-56)+48]
 16643  010602  0EF0               	movlw	-16
 16644  010604  006F FF8C  F001    	movff	plusw1,btemp
 16645  01060A  0EF8               	movlw	-8
 16646  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16647  010612  0EF1               	movlw	-15
 16648  010614  006F FF8C  F001    	movff	plusw1,btemp
 16649  01061A  0EF9               	movlw	-7
 16650  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16651                           
 16652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16653                           ;stkvar	_mode @ sp[(-56)+54]
 16654  010622  0EFE               	movlw	-2
 16655  010624  006F FF8C  F001    	movff	plusw1,btemp
 16656  01062A  0E67               	movlw	103
 16657  01062C  1801               	xorwf	btemp^0,w,c
 16658  01062E  A4D8               	btfss	status,2,c
 16659  010630  D00B               	goto	u11330
 16660                           
 16661                           ;stkvar	_nmode @ sp[(-56)+55]
 16662  010632  0EFF               	movlw	-1
 16663  010634  006F FF8C  F001    	movff	plusw1,btemp
 16664  01063A  0E66               	movlw	102
 16665  01063C  1801               	xorwf	btemp^0,w,c
 16666  01063E  A4D8               	btfss	status,2,c
 16667  010640  D014               	goto	l2223
 16668                           
 16669                           ;stkvar	_e @ sp[(-56)+34]
 16670  010642  0EEB               	movlw	-21
 16671  010644  AEE3               	btfss	plusw1,7,c
 16672  010646  D011               	goto	l2223
 16673  010648                     u11330:
 16674                           
 16675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16676                           ;stkvar	_m @ sp[(-56)+48]
 16677  010648  0EF8               	movlw	-8
 16678  01064A  50E3               	movf	plusw1,w,c
 16679  01064C  0F01               	addlw	1
 16680  01064E  6E01               	movwf	btemp^0,c
 16681  010650  0EF8               	movlw	-8
 16682  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16683  010658  6A01               	clrf	btemp^0,c
 16684  01065A  0EF9               	movlw	-7
 16685  01065C  50E3               	movf	plusw1,w,c
 16686  01065E  2001               	addwfc	btemp^0,w,c
 16687  010660  6E01               	movwf	btemp^0,c
 16688  010662  0EF9               	movlw	-7
 16689  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16690  01066A                     l2223:
 16691                           
 16692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16693                           ;stkvar	_nmode @ sp[(-56)+55]
 16694  01066A  0EFF               	movlw	-1
 16695  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16696  010672  0E66               	movlw	102
 16697  010674  1801               	xorwf	btemp^0,w,c
 16698  010676  A4D8               	btfss	status,2,c
 16699  010678  D03B               	goto	l12126
 16700                           
 16701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16702                           ;stkvar	_e @ sp[(-56)+34]
 16703  01067A  0EEB               	movlw	-21
 16704  01067C  AEE3               	btfss	plusw1,7,c
 16705  01067E  D01C               	goto	l12122
 16706                           
 16707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16708  010680  0E00               	movlw	0
 16709  010682  6E09               	movwf	(btemp+8)^0,c
 16710  010684  0E00               	movlw	0
 16711  010686  6E0A               	movwf	(btemp+9)^0,c
 16712  010688  0E80               	movlw	128
 16713  01068A  6E0B               	movwf	(btemp+10)^0,c
 16714  01068C  0E3F               	movlw	63
 16715  01068E  6E0C               	movwf	(btemp+11)^0,c
 16716                           
 16717                           ;stkvar	_u @ sp[(-56)+12]
 16718  010690  0ED4               	movlw	-44
 16719  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16720  010698  0ED5               	movlw	-43
 16721  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16722  0106A0  0ED6               	movlw	-42
 16723  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16724  0106A8  0ED7               	movlw	-41
 16725  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16726                           
 16727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16728                           ;stkvar	_e @ sp[(-56)+34]
 16729  0106B0  0EEA               	movlw	-22
 16730  0106B2  6AE3               	clrf	plusw1,c
 16731  0106B4  0EEB               	movlw	-21
 16732  0106B6  6AE3               	clrf	plusw1,c
 16733  0106B8                     l12122:
 16734                           
 16735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16736                           ;stkvar	_mode @ sp[(-56)+54]
 16737  0106B8  0EFE               	movlw	-2
 16738  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16739  0106C0  0E67               	movlw	103
 16740  0106C2  1801               	xorwf	btemp^0,w,c
 16741  0106C4  B4D8               	btfsc	status,2,c
 16742  0106C6  D014               	goto	l12126
 16743                           
 16744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16745                           ;stkvar	_e @ sp[(-56)+34]
 16746                           ;stkvar	_m @ sp[(-56)+48]
 16747  0106C8  0EF8               	movlw	-8
 16748  0106CA  50E3               	movf	plusw1,w,c
 16749  0106CC  6E01               	movwf	btemp^0,c
 16750  0106CE  0EEA               	movlw	-22
 16751  0106D0  50E3               	movf	plusw1,w,c
 16752  0106D2  2601               	addwf	btemp^0,f,c
 16753  0106D4  0EF8               	movlw	-8
 16754  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16755  0106DC  0EF9               	movlw	-7
 16756  0106DE  50E3               	movf	plusw1,w,c
 16757  0106E0  6E01               	movwf	btemp^0,c
 16758  0106E2  0EEB               	movlw	-21
 16759  0106E4  50E3               	movf	plusw1,w,c
 16760  0106E6  2201               	addwfc	btemp^0,f,c
 16761  0106E8  0EF9               	movlw	-7
 16762  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16763  0106F0                     l12126:
 16764                           
 16765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16766                           ;stkvar	_i @ sp[(-56)+36]
 16767  0106F0  0EEC               	movlw	-20
 16768  0106F2  6AE3               	clrf	plusw1,c
 16769  0106F4  0EED               	movlw	-19
 16770  0106F6  6AE3               	clrf	plusw1,c
 16771                           
 16772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16773                           ;stkvar	_g @ sp[(-56)+16]
 16774  0106F8  0ED8               	movlw	-40
 16775  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16776  010700  0ED9               	movlw	-39
 16777  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16778  010708  0EDA               	movlw	-38
 16779  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16780  010710  0EDB               	movlw	-37
 16781  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16782                           
 16783                           ;stkvar	_h @ sp[(-56)+24]
 16784  010718  0EE0               	movlw	-32
 16785  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16786  010720  0EE1               	movlw	-31
 16787  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16788  010728  0EE2               	movlw	-30
 16789  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16790  010730  0EE3               	movlw	-29
 16791  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16792                           
 16793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16794                           ;stkvar	_u @ sp[(-56)+12]
 16795  010738  0ED4               	movlw	-44
 16796  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16797  010740  0ED5               	movlw	-43
 16798  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16799  010748  0ED6               	movlw	-42
 16800  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16801  010750  0ED7               	movlw	-41
 16802  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16803                           
 16804                           ;stkvar	_ou @ sp[(-56)+28]
 16805  010758  0EE4               	movlw	-28
 16806  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16807  010760  0EE5               	movlw	-27
 16808  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16809  010768  0EE6               	movlw	-26
 16810  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16811  010770  0EE7               	movlw	-25
 16812  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16813                           
 16814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16815  010778  D0D6               	goto	l12142
 16816  01077A                     l12132:
 16817                           
 16818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16819                           ;stkvar	_u @ sp[(-56)+12]
 16820  01077A  0ED4               	movlw	-44
 16821  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16822  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16823  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16824  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16825                           
 16826                           ;stkvar	_h @ sp[(-60)+24]
 16827  010794  0EDC               	movlw	-36
 16828  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16829  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16830  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16831  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16832  0107AE  ECA6  F0A6         	call	___fldiv	;wreg free
 16833  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16834  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16835  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16836  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16837  0107CA  EC30  F0B2         	call	_floorf	;wreg free
 16838                           
 16839                           ;stkvar	_l @ sp[(-56)+20]
 16840  0107CE  0EDC               	movlw	-36
 16841  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16842  0107D6  0EDD               	movlw	-35
 16843  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16844  0107DE  0EDE               	movlw	-34
 16845  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16846  0107E6  0EDF               	movlw	-33
 16847  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16848                           
 16849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16850                           ;stkvar	_l @ sp[(-56)+20]
 16851  0107EE  0EDC               	movlw	-36
 16852  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16853  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16854  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16855  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16856  010808  EC2D  F0C7         	call	___fltol	;wreg free
 16857  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16858  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16859                           
 16860                           ;stkvar	_d @ sp[(-56)+44]
 16861  010818  0EF4               	movlw	-12
 16862  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16863  010820  0EF5               	movlw	-11
 16864  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16865                           
 16866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16867                           ;stkvar	_u @ sp[(-56)+12]
 16868  010828  0ED4               	movlw	-44
 16869  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16870  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16871  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16872  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16873                           
 16874                           ;stkvar	_l @ sp[(-60)+20]
 16875  010842  0ED8               	movlw	-40
 16876  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16877  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16878  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16879  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16880  01085C  ECB3  F09E         	call	___flmul	;wreg free
 16881  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16882  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16883  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16884  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16885                           
 16886                           ;stkvar	_h @ sp[(-60)+24]
 16887  010878  0EDC               	movlw	-36
 16888  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16889  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16890  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16891  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16892  010892  ECE7  F0DA         	call	___flsub	;wreg free
 16893                           
 16894                           ;stkvar	_h @ sp[(-56)+24]
 16895  010896  0EE0               	movlw	-32
 16896  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16897  01089E  0EE1               	movlw	-31
 16898  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16899  0108A6  0EE2               	movlw	-30
 16900  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16901  0108AE  0EE3               	movlw	-29
 16902  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16903                           
 16904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16905  0108B6  0E00               	movlw	0
 16906  0108B8  6EE6               	movwf	postinc1,c
 16907  0108BA  0E00               	movlw	0
 16908  0108BC  6EE6               	movwf	postinc1,c
 16909  0108BE  0E20               	movlw	32
 16910  0108C0  6EE6               	movwf	postinc1,c
 16911  0108C2  0E41               	movlw	65
 16912  0108C4  6EE6               	movwf	postinc1,c
 16913                           
 16914                           ;stkvar	_u @ sp[(-60)+12]
 16915  0108C6  0ED0               	movlw	-48
 16916  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16917  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16918  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16919  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16920  0108E0  ECA6  F0A6         	call	___fldiv	;wreg free
 16921                           
 16922                           ;stkvar	_u @ sp[(-56)+12]
 16923  0108E4  0ED4               	movlw	-44
 16924  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16925  0108EC  0ED5               	movlw	-43
 16926  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16927  0108F4  0ED6               	movlw	-42
 16928  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16929  0108FC  0ED7               	movlw	-41
 16930  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16931                           
 16932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16933                           ;stkvar	_i @ sp[(-56)+36]
 16934  010904  0EEC               	movlw	-20
 16935  010906  50E3               	movf	plusw1,w,c
 16936  010908  0F01               	addlw	1
 16937  01090A  6E01               	movwf	btemp^0,c
 16938  01090C  0EEC               	movlw	-20
 16939  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16940  010914  6A01               	clrf	btemp^0,c
 16941  010916  0EED               	movlw	-19
 16942  010918  50E3               	movf	plusw1,w,c
 16943  01091A  2001               	addwfc	btemp^0,w,c
 16944  01091C  6E01               	movwf	btemp^0,c
 16945  01091E  0EED               	movlw	-19
 16946  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16947  010926                     l12142:
 16948                           
 16949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16950                           ;stkvar	_m @ sp[(-56)+48]
 16951                           ;stkvar	_i @ sp[(-56)+36]
 16952  010926  50E1               	movf	fsr1l,w,c
 16953  010928  0FEC               	addlw	-20
 16954  01092A  6ED9               	movwf	fsr2l,c
 16955  01092C  50E2               	movf	fsr1h,w,c
 16956  01092E  6EDA               	movwf	fsr2h,c
 16957  010930  0EFF               	movlw	255
 16958  010932  22DA               	addwfc	fsr2h,f,c
 16959  010934  0EF8               	movlw	-8
 16960  010936  50E3               	movf	plusw1,w,c
 16961  010938  5CDE               	subwf	postinc2,w,c
 16962  01093A  50DE               	movf	postinc2,w,c
 16963  01093C  0A80               	xorlw	128
 16964  01093E  6E01               	movwf	btemp^0,c
 16965  010940  0EF9               	movlw	-7
 16966  010942  50E3               	movf	plusw1,w,c
 16967  010944  0A80               	xorlw	128
 16968  010946  5801               	subwfb	btemp^0,w,c
 16969  010948  A0D8               	btfss	status,0,c
 16970  01094A  D717               	goto	l12132
 16971                           
 16972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16973  01094C  0E00               	movlw	0
 16974  01094E  6EE6               	movwf	postinc1,c
 16975  010950  0E00               	movlw	0
 16976  010952  6EE6               	movwf	postinc1,c
 16977  010954  0EA0               	movlw	160
 16978  010956  6EE6               	movwf	postinc1,c
 16979  010958  0E40               	movlw	64
 16980  01095A  6EE6               	movwf	postinc1,c
 16981                           
 16982                           ;stkvar	_u @ sp[(-60)+12]
 16983  01095C  0ED0               	movlw	-48
 16984  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16985  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16986  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16987  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16988  010976  ECB3  F09E         	call	___flmul	;wreg free
 16989                           
 16990                           ;stkvar	_l @ sp[(-56)+20]
 16991  01097A  0EDC               	movlw	-36
 16992  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16993  010982  0EDD               	movlw	-35
 16994  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16995  01098A  0EDE               	movlw	-34
 16996  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16997  010992  0EDF               	movlw	-33
 16998  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16999                           
 17000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 17001                           ;stkvar	_l @ sp[(-56)+20]
 17002  01099A  0EDC               	movlw	-36
 17003  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 17004  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17005  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17006  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17007                           
 17008                           ;stkvar	_h @ sp[(-60)+24]
 17009  0109B4  0EDC               	movlw	-36
 17010  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17011  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 17012  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17013  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17014  0109CE  ECE6  F0C7         	call	___flge	;wreg free
 17015  0109D2  A001               	btfss	btemp& (0+255),0,c
 17016  0109D4  D021               	goto	u11400
 17017                           
 17018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 17019                           ;stkvar	_l @ sp[(-56)+20]
 17020                           
 17021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 17022                           
 17023                           ;stkvar	_l @ sp[(-56)+20]
 17024                           
 17025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17026  0109D6  0EDC               	movlw	-36
 17027  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17028  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17029  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17030  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17031                           
 17032                           ;stkvar	_h @ sp[(-60)+24]
 17033  0109F0  0EDC               	movlw	-36
 17034  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17035  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17036  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17037  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17038  010A0A  EC31  F0D2         	call	___fleq	;wreg free
 17039  010A0E  A001               	btfss	btemp& (0+255),0,c
 17040  010A10  D01B               	goto	l12156
 17041                           
 17042                           ;stkvar	_d @ sp[(-56)+44]
 17043  010A12  0EF4               	movlw	-12
 17044  010A14  B0E3               	btfsc	plusw1,0,c
 17045  010A16  D018               	goto	l12156
 17046  010A18                     u11400:
 17047                           
 17048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17049  010A18  0E00               	movlw	0
 17050  010A1A  6E09               	movwf	(btemp+8)^0,c
 17051  010A1C  0E00               	movlw	0
 17052  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17053  010A20  0E00               	movlw	0
 17054  010A22  6E0B               	movwf	(btemp+10)^0,c
 17055  010A24  0E00               	movlw	0
 17056  010A26  6E0C               	movwf	(btemp+11)^0,c
 17057                           
 17058                           ;stkvar	_l @ sp[(-56)+20]
 17059  010A28  0EDC               	movlw	-36
 17060  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17061  010A30  0EDD               	movlw	-35
 17062  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17063  010A38  0EDE               	movlw	-34
 17064  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17065  010A40  0EDF               	movlw	-33
 17066  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17067  010A48                     l12156:
 17068                           
 17069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17070                           ;stkvar	_l @ sp[(-56)+20]
 17071  010A48  0EDC               	movlw	-36
 17072  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17073  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17074  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17075  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17076                           
 17077                           ;stkvar	_g @ sp[(-60)+16]
 17078  010A62  0ED4               	movlw	-44
 17079  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17080  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17081  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17082  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17083  010A7C  ECC8  F0A2         	call	___fladd	;wreg free
 17084                           
 17085                           ;stkvar	_h @ sp[(-56)+24]
 17086  010A80  0EE0               	movlw	-32
 17087  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17088  010A88  0EE1               	movlw	-31
 17089  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17090  010A90  0EE2               	movlw	-30
 17091  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17092  010A98  0EE3               	movlw	-29
 17093  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17094                           
 17095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17096                           ;stkvar	_ou @ sp[(-56)+28]
 17097  010AA0  0EE4               	movlw	-28
 17098  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17099  010AA8  0EE5               	movlw	-27
 17100  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17101  010AB0  0EE6               	movlw	-26
 17102  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17103  010AB8  0EE7               	movlw	-25
 17104  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17105                           
 17106                           ;stkvar	_u @ sp[(-56)+12]
 17107  010AC0  0ED4               	movlw	-44
 17108  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17109  010AC8  0ED5               	movlw	-43
 17110  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17111  010AD0  0ED6               	movlw	-42
 17112  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17113  010AD8  0ED7               	movlw	-41
 17114  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17115                           
 17116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17117                           ;stkvar	_nmode @ sp[(-56)+55]
 17118  010AE0  0EFF               	movlw	-1
 17119  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17120  010AE8  0E65               	movlw	101
 17121  010AEA  1801               	xorwf	btemp^0,w,c
 17122  010AEC  B4D8               	btfsc	status,2,c
 17123  010AEE  D011               	goto	l12164
 17124                           
 17125                           ;stkvar	_e @ sp[(-56)+34]
 17126                           ;stkvar	_ne @ sp[(-56)+46]
 17127  010AF0  0EEA               	movlw	-22
 17128  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17129  010AF8  0EF6               	movlw	-10
 17130  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17131  010B00  0EEB               	movlw	-21
 17132  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17133  010B08  0EF7               	movlw	-9
 17134  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17135  010B10  D004               	goto	l2238
 17136  010B12                     l12164:
 17137                           
 17138                           ;stkvar	_ne @ sp[(-56)+46]
 17139  010B12  0EF6               	movlw	-10
 17140  010B14  6AE3               	clrf	plusw1,c
 17141  010B16  0EF7               	movlw	-9
 17142  010B18  6AE3               	clrf	plusw1,c
 17143  010B1A                     l2238:
 17144                           
 17145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17146                           ;stkvar	_pp @ sp[(-56)+50]
 17147  010B1A  0EFA               	movlw	-6
 17148  010B1C  6AE3               	clrf	plusw1,c
 17149  010B1E  0EFB               	movlw	-5
 17150  010B20  6AE3               	clrf	plusw1,c
 17151                           
 17152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17153                           ;stkvar	_t @ sp[(-56)+52]
 17154  010B22  0EFC               	movlw	-4
 17155  010B24  6AE3               	clrf	plusw1,c
 17156  010B26  0EFD               	movlw	-3
 17157  010B28  6AE3               	clrf	plusw1,c
 17158                           
 17159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17160                           ;stkvar	_i @ sp[(-56)+36]
 17161  010B2A  0EEC               	movlw	-20
 17162  010B2C  6AE3               	clrf	plusw1,c
 17163  010B2E  0EED               	movlw	-19
 17164  010B30  6AE3               	clrf	plusw1,c
 17165                           
 17166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17167  010B32  D1B7               	goto	l12216
 17168  010B34                     l12166:
 17169                           
 17170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17171                           ;stkvar	_u @ sp[(-56)+12]
 17172  010B34  0ED4               	movlw	-44
 17173  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17174  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17175  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17176  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17177                           
 17178                           ;stkvar	_h @ sp[(-60)+24]
 17179  010B4E  0EDC               	movlw	-36
 17180  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17181  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17182  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17183  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17184  010B68  ECA6  F0A6         	call	___fldiv	;wreg free
 17185  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17186  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17187  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17188  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17189  010B84  EC30  F0B2         	call	_floorf	;wreg free
 17190                           
 17191                           ;stkvar	_l @ sp[(-56)+20]
 17192  010B88  0EDC               	movlw	-36
 17193  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17194  010B90  0EDD               	movlw	-35
 17195  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17196  010B98  0EDE               	movlw	-34
 17197  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17198  010BA0  0EDF               	movlw	-33
 17199  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17200                           
 17201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17202                           ;stkvar	_l @ sp[(-56)+20]
 17203  010BA8  0EDC               	movlw	-36
 17204  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17205  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17206  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17207  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17208  010BC2  EC2D  F0C7         	call	___fltol	;wreg free
 17209  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17210  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17211                           
 17212                           ;stkvar	_d @ sp[(-56)+44]
 17213  010BD2  0EF4               	movlw	-12
 17214  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17215  010BDA  0EF5               	movlw	-11
 17216  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17217                           
 17218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17219  010BE2  B83E               	btfsc	_flags^0,4,c
 17220  010BE4  D026               	goto	l12180
 17221                           
 17222                           ;stkvar	_d @ sp[(-56)+44]
 17223  010BE6  0EF4               	movlw	-12
 17224  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17225  010BEE  0EF5               	movlw	-11
 17226  010BF0  50E3               	movf	plusw1,w,c
 17227  010BF2  1001               	iorwf	btemp^0,w,c
 17228  010BF4  A4D8               	btfss	status,2,c
 17229  010BF6  D01D               	goto	l12180
 17230                           
 17231                           ;stkvar	_mode @ sp[(-56)+54]
 17232  010BF8  0EFE               	movlw	-2
 17233  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17234  010C00  0E67               	movlw	103
 17235  010C02  1801               	xorwf	btemp^0,w,c
 17236  010C04  A4D8               	btfss	status,2,c
 17237  010C06  D015               	goto	l12180
 17238                           
 17239                           ;stkvar	_ne @ sp[(-56)+46]
 17240  010C08  0EF7               	movlw	-9
 17241  010C0A  AEE3               	btfss	plusw1,7,c
 17242  010C0C  D012               	goto	l12180
 17243                           
 17244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 17245                           ;stkvar	_t @ sp[(-56)+52]
 17246  010C0E  0EFC               	movlw	-4
 17247  010C10  50E3               	movf	plusw1,w,c
 17248  010C12  0F01               	addlw	1
 17249  010C14  6E01               	movwf	btemp^0,c
 17250  010C16  0EFC               	movlw	-4
 17251  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 17252  010C1E  6A01               	clrf	btemp^0,c
 17253  010C20  0EFD               	movlw	-3
 17254  010C22  50E3               	movf	plusw1,w,c
 17255  010C24  2001               	addwfc	btemp^0,w,c
 17256  010C26  6E01               	movwf	btemp^0,c
 17257  010C28  0EFD               	movlw	-3
 17258  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 17259                           
 17260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 17261  010C30  D0AF               	goto	l12208
 17262  010C32                     l12180:
 17263                           
 17264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 17265                           ;stkvar	_pp @ sp[(-56)+50]
 17266  010C32  0EFA               	movlw	-6
 17267  010C34  006F FF8C  F001    	movff	plusw1,btemp
 17268  010C3A  0EFB               	movlw	-5
 17269  010C3C  50E3               	movf	plusw1,w,c
 17270  010C3E  1001               	iorwf	btemp^0,w,c
 17271  010C40  A4D8               	btfss	status,2,c
 17272  010C42  D070               	goto	l12200
 17273                           
 17274                           ;stkvar	_ne @ sp[(-56)+46]
 17275  010C44  0EF7               	movlw	-9
 17276  010C46  AEE3               	btfss	plusw1,7,c
 17277  010C48  D06D               	goto	l12200
 17278                           
 17279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 17280                           ;stkvar	_n @ sp[(-56)+32]
 17281  010C4A  0EE8               	movlw	-24
 17282  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17283  010C52  0EE9               	movlw	-23
 17284  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 17285  010C5A  0E97               	movlw	low _dbuf
 17286  010C5C  240B               	addwf	(btemp+10)^0,w,c
 17287  010C5E  6ED9               	movwf	fsr2l,c
 17288  010C60  0E02               	movlw	high _dbuf
 17289  010C62  200C               	addwfc	(btemp+11)^0,w,c
 17290  010C64  6EDA               	movwf	fsr2h,c
 17291  010C66  0E2E               	movlw	46
 17292  010C68  6EDF               	movwf	indf2,c
 17293                           
 17294                           ;stkvar	_n @ sp[(-56)+32]
 17295  010C6A  0EE8               	movlw	-24
 17296  010C6C  50E3               	movf	plusw1,w,c
 17297  010C6E  0F01               	addlw	1
 17298  010C70  6E01               	movwf	btemp^0,c
 17299  010C72  0EE8               	movlw	-24
 17300  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 17301  010C7A  6A01               	clrf	btemp^0,c
 17302  010C7C  0EE9               	movlw	-23
 17303  010C7E  50E3               	movf	plusw1,w,c
 17304  010C80  2001               	addwfc	btemp^0,w,c
 17305  010C82  6E01               	movwf	btemp^0,c
 17306  010C84  0EE9               	movlw	-23
 17307  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 17308                           
 17309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 17310                           ;stkvar	_w @ sp[(-56)+38]
 17311  010C8C  50E1               	movf	fsr1l,w,c
 17312  010C8E  0FEE               	addlw	-18
 17313  010C90  6ED9               	movwf	fsr2l,c
 17314  010C92  50E2               	movf	fsr1h,w,c
 17315  010C94  6EDA               	movwf	fsr2h,c
 17316  010C96  0EFF               	movlw	255
 17317  010C98  22DA               	addwfc	fsr2h,f,c
 17318  010C9A  06DE               	decf	postinc2,f,c
 17319  010C9C  0E00               	movlw	0
 17320  010C9E  5ADD               	subwfb	postdec2,f,c
 17321                           
 17322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 17323  010CA0  0E01               	movlw	1
 17324  010CA2  6E0B               	movwf	(btemp+10)^0,c
 17325  010CA4  0E00               	movlw	0
 17326  010CA6  6E0C               	movwf	(btemp+11)^0,c
 17327                           
 17328                           ;stkvar	_pp @ sp[(-56)+50]
 17329  010CA8  0EFA               	movlw	-6
 17330  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17331  010CB0  0EFB               	movlw	-5
 17332  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17333  010CB8  D035               	goto	l12200
 17334  010CBA                     l12192:
 17335                           
 17336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 17337                           ;stkvar	_n @ sp[(-56)+32]
 17338  010CBA  0EE8               	movlw	-24
 17339  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17340  010CC2  0EE9               	movlw	-23
 17341  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17342  010CCA  0E97               	movlw	low _dbuf
 17343  010CCC  240B               	addwf	(btemp+10)^0,w,c
 17344  010CCE  6ED9               	movwf	fsr2l,c
 17345  010CD0  0E02               	movlw	high _dbuf
 17346  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 17347  010CD4  6EDA               	movwf	fsr2h,c
 17348  010CD6  0E30               	movlw	48
 17349  010CD8  6EDF               	movwf	indf2,c
 17350                           
 17351                           ;stkvar	_n @ sp[(-56)+32]
 17352  010CDA  0EE8               	movlw	-24
 17353  010CDC  50E3               	movf	plusw1,w,c
 17354  010CDE  0F01               	addlw	1
 17355  010CE0  6E01               	movwf	btemp^0,c
 17356  010CE2  0EE8               	movlw	-24
 17357  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 17358  010CEA  6A01               	clrf	btemp^0,c
 17359  010CEC  0EE9               	movlw	-23
 17360  010CEE  50E3               	movf	plusw1,w,c
 17361  010CF0  2001               	addwfc	btemp^0,w,c
 17362  010CF2  6E01               	movwf	btemp^0,c
 17363  010CF4  0EE9               	movlw	-23
 17364  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 17365                           
 17366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 17367                           ;stkvar	_w @ sp[(-56)+38]
 17368  010CFC  50E1               	movf	fsr1l,w,c
 17369  010CFE  0FEE               	addlw	-18
 17370  010D00  6ED9               	movwf	fsr2l,c
 17371  010D02  50E2               	movf	fsr1h,w,c
 17372  010D04  6EDA               	movwf	fsr2h,c
 17373  010D06  0EFF               	movlw	255
 17374  010D08  22DA               	addwfc	fsr2h,f,c
 17375  010D0A  06DE               	decf	postinc2,f,c
 17376  010D0C  0E00               	movlw	0
 17377  010D0E  5ADD               	subwfb	postdec2,f,c
 17378                           
 17379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 17380                           ;stkvar	_t @ sp[(-56)+52]
 17381  010D10  50E1               	movf	fsr1l,w,c
 17382  010D12  0FFC               	addlw	-4
 17383  010D14  6ED9               	movwf	fsr2l,c
 17384  010D16  50E2               	movf	fsr1h,w,c
 17385  010D18  6EDA               	movwf	fsr2h,c
 17386  010D1A  0EFF               	movlw	255
 17387  010D1C  22DA               	addwfc	fsr2h,f,c
 17388  010D1E  06DE               	decf	postinc2,f,c
 17389  010D20  0E00               	movlw	0
 17390  010D22  5ADD               	subwfb	postdec2,f,c
 17391  010D24                     l12200:
 17392                           
 17393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 17394                           ;stkvar	_t @ sp[(-56)+52]
 17395  010D24  0EFC               	movlw	-4
 17396  010D26  006F FF8C  F001    	movff	plusw1,btemp
 17397  010D2C  0EFD               	movlw	-3
 17398  010D2E  50E3               	movf	plusw1,w,c
 17399  010D30  1001               	iorwf	btemp^0,w,c
 17400  010D32  A4D8               	btfss	status,2,c
 17401  010D34  D7C2               	goto	l12192
 17402                           
 17403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 17404                           ;stkvar	_n @ sp[(-56)+32]
 17405  010D36  0EE8               	movlw	-24
 17406  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 17407  010D3E  0EE9               	movlw	-23
 17408  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 17409  010D46  0E97               	movlw	low _dbuf
 17410  010D48  240B               	addwf	(btemp+10)^0,w,c
 17411  010D4A  6ED9               	movwf	fsr2l,c
 17412  010D4C  0E02               	movlw	high _dbuf
 17413  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 17414  010D50  6EDA               	movwf	fsr2h,c
 17415                           
 17416                           ;stkvar	_d @ sp[(-56)+44]
 17417  010D52  0EF4               	movlw	-12
 17418  010D54  50E3               	movf	plusw1,w,c
 17419  010D56  0F30               	addlw	48
 17420  010D58  6EDF               	movwf	indf2,c
 17421                           
 17422                           ;stkvar	_n @ sp[(-56)+32]
 17423  010D5A  0EE8               	movlw	-24
 17424  010D5C  50E3               	movf	plusw1,w,c
 17425  010D5E  0F01               	addlw	1
 17426  010D60  6E01               	movwf	btemp^0,c
 17427  010D62  0EE8               	movlw	-24
 17428  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17429  010D6A  6A01               	clrf	btemp^0,c
 17430  010D6C  0EE9               	movlw	-23
 17431  010D6E  50E3               	movf	plusw1,w,c
 17432  010D70  2001               	addwfc	btemp^0,w,c
 17433  010D72  6E01               	movwf	btemp^0,c
 17434  010D74  0EE9               	movlw	-23
 17435  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17436                           
 17437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17438                           ;stkvar	_w @ sp[(-56)+38]
 17439  010D7C  50E1               	movf	fsr1l,w,c
 17440  010D7E  0FEE               	addlw	-18
 17441  010D80  6ED9               	movwf	fsr2l,c
 17442  010D82  50E2               	movf	fsr1h,w,c
 17443  010D84  6EDA               	movwf	fsr2h,c
 17444  010D86  0EFF               	movlw	255
 17445  010D88  22DA               	addwfc	fsr2h,f,c
 17446  010D8A  06DE               	decf	postinc2,f,c
 17447  010D8C  0E00               	movlw	0
 17448  010D8E  5ADD               	subwfb	postdec2,f,c
 17449  010D90                     l12208:
 17450                           
 17451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17452                           ;stkvar	_u @ sp[(-56)+12]
 17453  010D90  0ED4               	movlw	-44
 17454  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17455  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17456  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17457  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17458                           
 17459                           ;stkvar	_l @ sp[(-60)+20]
 17460  010DAA  0ED8               	movlw	-40
 17461  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17462  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17463  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17464  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17465  010DC4  ECB3  F09E         	call	___flmul	;wreg free
 17466  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17467  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17468  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17469  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17470                           
 17471                           ;stkvar	_h @ sp[(-60)+24]
 17472  010DE0  0EDC               	movlw	-36
 17473  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17474  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17475  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17476  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17477  010DFA  ECE7  F0DA         	call	___flsub	;wreg free
 17478                           
 17479                           ;stkvar	_h @ sp[(-56)+24]
 17480  010DFE  0EE0               	movlw	-32
 17481  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17482  010E06  0EE1               	movlw	-31
 17483  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17484  010E0E  0EE2               	movlw	-30
 17485  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17486  010E16  0EE3               	movlw	-29
 17487  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17488                           
 17489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17490  010E1E  0E00               	movlw	0
 17491  010E20  6EE6               	movwf	postinc1,c
 17492  010E22  0E00               	movlw	0
 17493  010E24  6EE6               	movwf	postinc1,c
 17494  010E26  0E20               	movlw	32
 17495  010E28  6EE6               	movwf	postinc1,c
 17496  010E2A  0E41               	movlw	65
 17497  010E2C  6EE6               	movwf	postinc1,c
 17498                           
 17499                           ;stkvar	_u @ sp[(-60)+12]
 17500  010E2E  0ED0               	movlw	-48
 17501  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17502  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17503  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17504  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17505  010E48  ECA6  F0A6         	call	___fldiv	;wreg free
 17506                           
 17507                           ;stkvar	_u @ sp[(-56)+12]
 17508  010E4C  0ED4               	movlw	-44
 17509  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17510  010E54  0ED5               	movlw	-43
 17511  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17512  010E5C  0ED6               	movlw	-42
 17513  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17514  010E64  0ED7               	movlw	-41
 17515  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17516                           
 17517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17518                           ;stkvar	_ne @ sp[(-56)+46]
 17519  010E6C  50E1               	movf	fsr1l,w,c
 17520  010E6E  0FF6               	addlw	-10
 17521  010E70  6ED9               	movwf	fsr2l,c
 17522  010E72  50E2               	movf	fsr1h,w,c
 17523  010E74  6EDA               	movwf	fsr2h,c
 17524  010E76  0EFF               	movlw	255
 17525  010E78  22DA               	addwfc	fsr2h,f,c
 17526  010E7A  06DE               	decf	postinc2,f,c
 17527  010E7C  0E00               	movlw	0
 17528  010E7E  5ADD               	subwfb	postdec2,f,c
 17529                           
 17530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17531                           ;stkvar	_i @ sp[(-56)+36]
 17532  010E80  0EEC               	movlw	-20
 17533  010E82  50E3               	movf	plusw1,w,c
 17534  010E84  0F01               	addlw	1
 17535  010E86  6E01               	movwf	btemp^0,c
 17536  010E88  0EEC               	movlw	-20
 17537  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17538  010E90  6A01               	clrf	btemp^0,c
 17539  010E92  0EED               	movlw	-19
 17540  010E94  50E3               	movf	plusw1,w,c
 17541  010E96  2001               	addwfc	btemp^0,w,c
 17542  010E98  6E01               	movwf	btemp^0,c
 17543  010E9A  0EED               	movlw	-19
 17544  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17545  010EA2                     l12216:
 17546                           
 17547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17548                           ;stkvar	_m @ sp[(-56)+48]
 17549                           ;stkvar	_i @ sp[(-56)+36]
 17550  010EA2  50E1               	movf	fsr1l,w,c
 17551  010EA4  0FEC               	addlw	-20
 17552  010EA6  6ED9               	movwf	fsr2l,c
 17553  010EA8  50E2               	movf	fsr1h,w,c
 17554  010EAA  6EDA               	movwf	fsr2h,c
 17555  010EAC  0EFF               	movlw	255
 17556  010EAE  22DA               	addwfc	fsr2h,f,c
 17557  010EB0  0EF8               	movlw	-8
 17558  010EB2  50E3               	movf	plusw1,w,c
 17559  010EB4  5CDE               	subwf	postinc2,w,c
 17560  010EB6  50DE               	movf	postinc2,w,c
 17561  010EB8  0A80               	xorlw	128
 17562  010EBA  6E01               	movwf	btemp^0,c
 17563  010EBC  0EF9               	movlw	-7
 17564  010EBE  50E3               	movf	plusw1,w,c
 17565  010EC0  0A80               	xorlw	128
 17566  010EC2  5801               	subwfb	btemp^0,w,c
 17567  010EC4  B0D8               	btfsc	status,0,c
 17568  010EC6  D00E               	goto	u11500
 17569                           
 17570                           ;stkvar	_n @ sp[(-56)+32]
 17571  010EC8  0EE9               	movlw	-23
 17572  010ECA  BEE3               	btfsc	plusw1,7,c
 17573  010ECC  D633               	goto	l12166
 17574  010ECE  0EE9               	movlw	-23
 17575  010ED0  50E3               	movf	plusw1,w,c
 17576  010ED2  E108               	bnz	u11500
 17577  010ED4  0EE8               	movlw	-24
 17578  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 17579  010EDC  0E4B               	movlw	75
 17580  010EDE  5E01               	subwf	btemp^0,f,c
 17581  010EE0  A0D8               	btfss	status,0,c
 17582  010EE2  D628               	goto	l12166
 17583  010EE4                     u11500:
 17584                           
 17585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17586                           ;stkvar	_pp @ sp[(-56)+50]
 17587  010EE4  0EFA               	movlw	-6
 17588  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 17589  010EEC  0EFB               	movlw	-5
 17590  010EEE  50E3               	movf	plusw1,w,c
 17591  010EF0  1001               	iorwf	btemp^0,w,c
 17592  010EF2  B4D8               	btfsc	status,2,c
 17593  010EF4  A83E               	btfss	_flags^0,4,c
 17594  010EF6  D021               	goto	l12228
 17595                           
 17596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17597                           ;stkvar	_n @ sp[(-56)+32]
 17598  010EF8  0EE8               	movlw	-24
 17599  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17600  010F00  0EE9               	movlw	-23
 17601  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 17602  010F08  0E97               	movlw	low _dbuf
 17603  010F0A  240B               	addwf	(btemp+10)^0,w,c
 17604  010F0C  6ED9               	movwf	fsr2l,c
 17605  010F0E  0E02               	movlw	high _dbuf
 17606  010F10  200C               	addwfc	(btemp+11)^0,w,c
 17607  010F12  6EDA               	movwf	fsr2h,c
 17608  010F14  0E2E               	movlw	46
 17609  010F16  6EDF               	movwf	indf2,c
 17610                           
 17611                           ;stkvar	_n @ sp[(-56)+32]
 17612  010F18  0EE8               	movlw	-24
 17613  010F1A  50E3               	movf	plusw1,w,c
 17614  010F1C  0F01               	addlw	1
 17615  010F1E  6E01               	movwf	btemp^0,c
 17616  010F20  0EE8               	movlw	-24
 17617  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 17618  010F28  6A01               	clrf	btemp^0,c
 17619  010F2A  0EE9               	movlw	-23
 17620  010F2C  50E3               	movf	plusw1,w,c
 17621  010F2E  2001               	addwfc	btemp^0,w,c
 17622  010F30  6E01               	movwf	btemp^0,c
 17623  010F32  0EE9               	movlw	-23
 17624  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 17625  010F3A                     l12228:
 17626                           
 17627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17628                           ;stkvar	_n @ sp[(-56)+32]
 17629  010F3A  0EE8               	movlw	-24
 17630  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17631  010F42  0EE9               	movlw	-23
 17632  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17633  010F4A  0E97               	movlw	low _dbuf
 17634  010F4C  240B               	addwf	(btemp+10)^0,w,c
 17635  010F4E  6ED9               	movwf	fsr2l,c
 17636  010F50  0E02               	movlw	high _dbuf
 17637  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17638  010F54  6EDA               	movwf	fsr2h,c
 17639  010F56  0E00               	movlw	0
 17640  010F58  6EDF               	movwf	indf2,c
 17641                           
 17642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17643                           ;stkvar	_nmode @ sp[(-56)+55]
 17644  010F5A  0EFF               	movlw	-1
 17645  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17646  010F62  0E65               	movlw	101
 17647  010F64  1801               	xorwf	btemp^0,w,c
 17648  010F66  A4D8               	btfss	status,2,c
 17649  010F68  EF16  F081         	goto	l12032
 17650                           
 17651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17652  010F6C  0E4F               	movlw	79
 17653  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17654  010F70  0E00               	movlw	0
 17655  010F72  6E0C               	movwf	(btemp+11)^0,c
 17656                           
 17657                           ;stkvar	_i @ sp[(-56)+36]
 17658  010F74  0EEC               	movlw	-20
 17659  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17660  010F7C  0EED               	movlw	-19
 17661  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17662                           
 17663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17664                           ;stkvar	_i @ sp[(-56)+36]
 17665  010F84  0EEC               	movlw	-20
 17666  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17667  010F8C  0EED               	movlw	-19
 17668  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17669  010F94  0E97               	movlw	low _dbuf
 17670  010F96  240B               	addwf	(btemp+10)^0,w,c
 17671  010F98  6ED9               	movwf	fsr2l,c
 17672  010F9A  0E02               	movlw	high _dbuf
 17673  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17674  010F9E  6EDA               	movwf	fsr2h,c
 17675  010FA0  0E00               	movlw	0
 17676  010FA2  6EDF               	movwf	indf2,c
 17677                           
 17678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17679                           ;stkvar	_sign @ sp[(-56)+42]
 17680  010FA4  0EF2               	movlw	-14
 17681  010FA6  6AE3               	clrf	plusw1,c
 17682  010FA8  0EF3               	movlw	-13
 17683  010FAA  6AE3               	clrf	plusw1,c
 17684                           
 17685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17686                           ;stkvar	_e @ sp[(-56)+34]
 17687  010FAC  0EEB               	movlw	-21
 17688  010FAE  AEE3               	btfss	plusw1,7,c
 17689  010FB0  D012               	goto	l12242
 17690                           
 17691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17692  010FB2  0E01               	movlw	1
 17693  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17694  010FB6  0E00               	movlw	0
 17695  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17696                           
 17697                           ;stkvar	_sign @ sp[(-56)+42]
 17698  010FBA  0EF2               	movlw	-14
 17699  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17700  010FC2  0EF3               	movlw	-13
 17701  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17702                           
 17703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17704                           ;stkvar	_e @ sp[(-56)+34]
 17705                           ;stkvar	_e @ sp[(-56)+34]
 17706  010FCA  0EEA               	movlw	-22
 17707  010FCC  6CE3               	negf	plusw1,c
 17708  010FCE  0EEB               	movlw	-21
 17709  010FD0  1EE3               	comf	plusw1,f,c
 17710  010FD2  B0D8               	btfsc	status,0,c
 17711  010FD4  2AE3               	incf	plusw1,f,c
 17712  010FD6                     l12242:
 17713                           
 17714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17715  010FD6  0E02               	movlw	2
 17716  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17717  010FDA  0E00               	movlw	0
 17718  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17719                           
 17720                           ;stkvar	_p @ sp[(-56)+40]
 17721  010FDE  0EF0               	movlw	-16
 17722  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17723  010FE6  0EF1               	movlw	-15
 17724  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17725                           
 17726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17727  010FEE  D051               	goto	l12254
 17728  010FF0                     l12244:
 17729                           
 17730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17731                           ;stkvar	_i @ sp[(-56)+36]
 17732  010FF0  50E1               	movf	fsr1l,w,c
 17733  010FF2  0FEC               	addlw	-20
 17734  010FF4  6ED9               	movwf	fsr2l,c
 17735  010FF6  50E2               	movf	fsr1h,w,c
 17736  010FF8  6EDA               	movwf	fsr2h,c
 17737  010FFA  0EFF               	movlw	255
 17738  010FFC  22DA               	addwfc	fsr2h,f,c
 17739  010FFE  06DE               	decf	postinc2,f,c
 17740  011000  0E00               	movlw	0
 17741  011002  5ADD               	subwfb	postdec2,f,c
 17742                           
 17743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17744                           ;stkvar	_i @ sp[(-56)+36]
 17745  011004  0EEC               	movlw	-20
 17746  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17747  01100C  0EED               	movlw	-19
 17748  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17749  011014  0E97               	movlw	low _dbuf
 17750  011016  240B               	addwf	(btemp+10)^0,w,c
 17751  011018  6ED9               	movwf	fsr2l,c
 17752  01101A  0E02               	movlw	high _dbuf
 17753  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17754  01101E  6EDA               	movwf	fsr2h,c
 17755  011020  0E0A               	movlw	10
 17756  011022  6EE6               	movwf	postinc1,c
 17757  011024  0E00               	movlw	0
 17758  011026  6EE6               	movwf	postinc1,c
 17759                           
 17760                           ;stkvar	_e @ sp[(-58)+34]
 17761  011028  0EE8               	movlw	-24
 17762  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17763  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17764  011036  ECE7  F0CC         	call	___awmod	;wreg free
 17765  01103A  5001               	movf	btemp^0,w,c
 17766  01103C  0F30               	addlw	48
 17767  01103E  6EDF               	movwf	indf2,c
 17768                           
 17769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17770  011040  0E0A               	movlw	10
 17771  011042  6EE6               	movwf	postinc1,c
 17772  011044  0E00               	movlw	0
 17773  011046  6EE6               	movwf	postinc1,c
 17774                           
 17775                           ;stkvar	_e @ sp[(-58)+34]
 17776  011048  0EE8               	movlw	-24
 17777  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17778  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17779  011056  EC49  F0C9         	call	___awdiv	;wreg free
 17780                           
 17781                           ;stkvar	_e @ sp[(-56)+34]
 17782  01105A  0EEA               	movlw	-22
 17783  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17784  011062  0EEB               	movlw	-21
 17785  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17786                           
 17787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17788                           ;stkvar	_p @ sp[(-56)+40]
 17789  01106A  50E1               	movf	fsr1l,w,c
 17790  01106C  0FF0               	addlw	-16
 17791  01106E  6ED9               	movwf	fsr2l,c
 17792  011070  50E2               	movf	fsr1h,w,c
 17793  011072  6EDA               	movwf	fsr2h,c
 17794  011074  0EFF               	movlw	255
 17795  011076  22DA               	addwfc	fsr2h,f,c
 17796  011078  06DE               	decf	postinc2,f,c
 17797  01107A  0E00               	movlw	0
 17798  01107C  5ADD               	subwfb	postdec2,f,c
 17799                           
 17800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17801                           ;stkvar	_w @ sp[(-56)+38]
 17802  01107E  50E1               	movf	fsr1l,w,c
 17803  011080  0FEE               	addlw	-18
 17804  011082  6ED9               	movwf	fsr2l,c
 17805  011084  50E2               	movf	fsr1h,w,c
 17806  011086  6EDA               	movwf	fsr2h,c
 17807  011088  0EFF               	movlw	255
 17808  01108A  22DA               	addwfc	fsr2h,f,c
 17809  01108C  06DE               	decf	postinc2,f,c
 17810  01108E  0E00               	movlw	0
 17811  011090  5ADD               	subwfb	postdec2,f,c
 17812  011092                     l12254:
 17813                           
 17814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17815                           ;stkvar	_e @ sp[(-56)+34]
 17816  011092  0EEA               	movlw	-22
 17817  011094  006F FF8C  F001    	movff	plusw1,btemp
 17818  01109A  0EEB               	movlw	-21
 17819  01109C  50E3               	movf	plusw1,w,c
 17820  01109E  1001               	iorwf	btemp^0,w,c
 17821  0110A0  A4D8               	btfss	status,2,c
 17822  0110A2  D7A6               	goto	l12244
 17823                           
 17824                           ;stkvar	_p @ sp[(-56)+40]
 17825  0110A4  0EF1               	movlw	-15
 17826  0110A6  BEE3               	btfsc	plusw1,7,c
 17827  0110A8  D007               	goto	u11560
 17828  0110AA  0EF1               	movlw	-15
 17829  0110AC  50E3               	movf	plusw1,w,c
 17830  0110AE  E1A0               	bnz	l12244
 17831  0110B0  0EF0               	movlw	-16
 17832  0110B2  04E3               	decf	plusw1,w,c
 17833  0110B4  B0D8               	btfsc	status,0,c
 17834  0110B6  D79C               	goto	l12244
 17835  0110B8                     u11560:
 17836                           
 17837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17838                           ;stkvar	_i @ sp[(-56)+36]
 17839  0110B8  50E1               	movf	fsr1l,w,c
 17840  0110BA  0FEC               	addlw	-20
 17841  0110BC  6ED9               	movwf	fsr2l,c
 17842  0110BE  50E2               	movf	fsr1h,w,c
 17843  0110C0  6EDA               	movwf	fsr2h,c
 17844  0110C2  0EFF               	movlw	255
 17845  0110C4  22DA               	addwfc	fsr2h,f,c
 17846  0110C6  06DE               	decf	postinc2,f,c
 17847  0110C8  0E00               	movlw	0
 17848  0110CA  5ADD               	subwfb	postdec2,f,c
 17849                           
 17850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17851                           ;stkvar	_sign @ sp[(-56)+42]
 17852  0110CC  0EF2               	movlw	-14
 17853  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17854  0110D4  0EF3               	movlw	-13
 17855  0110D6  50E3               	movf	plusw1,w,c
 17856  0110D8  1001               	iorwf	btemp^0,w,c
 17857  0110DA  A4D8               	btfss	status,2,c
 17858  0110DC  D002               	goto	l12264
 17859  0110DE  0E2B               	movlw	43
 17860  0110E0  D001               	goto	L18
 17861  0110E2                     l12264:
 17862  0110E2  0E2D               	movlw	45
 17863  0110E4                     L18:
 17864  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17865  0110E6  0E00               	movlw	0
 17866  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17867                           
 17868                           ;stkvar	_efgtoa$5526 @ sp[(-56)+4]
 17869  0110EA  0ECC               	movlw	-52
 17870  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17871  0110F2  0ECD               	movlw	-51
 17872  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17873                           
 17874                           ;stkvar	_efgtoa$5526 @ sp[(-56)+4]
 17875                           ;stkvar	_i @ sp[(-56)+36]
 17876  0110FA  0EEC               	movlw	-20
 17877  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17878  011102  0EED               	movlw	-19
 17879  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17880  01110A  0E97               	movlw	low _dbuf
 17881  01110C  240B               	addwf	(btemp+10)^0,w,c
 17882  01110E  6ED9               	movwf	fsr2l,c
 17883  011110  0E02               	movlw	high _dbuf
 17884  011112  200C               	addwfc	(btemp+11)^0,w,c
 17885  011114  6EDA               	movwf	fsr2h,c
 17886  011116  0ECC               	movlw	-52
 17887  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17888                           
 17889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17890                           ;stkvar	_w @ sp[(-56)+38]
 17891  01111E  50E1               	movf	fsr1l,w,c
 17892  011120  0FEE               	addlw	-18
 17893  011122  6ED9               	movwf	fsr2l,c
 17894  011124  50E2               	movf	fsr1h,w,c
 17895  011126  6EDA               	movwf	fsr2h,c
 17896  011128  0EFF               	movlw	255
 17897  01112A  22DA               	addwfc	fsr2h,f,c
 17898  01112C  06DE               	decf	postinc2,f,c
 17899  01112E  0E00               	movlw	0
 17900  011130  5ADD               	subwfb	postdec2,f,c
 17901                           
 17902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17903                           ;stkvar	_i @ sp[(-56)+36]
 17904  011132  50E1               	movf	fsr1l,w,c
 17905  011134  0FEC               	addlw	-20
 17906  011136  6ED9               	movwf	fsr2l,c
 17907  011138  50E2               	movf	fsr1h,w,c
 17908  01113A  6EDA               	movwf	fsr2h,c
 17909  01113C  0EFF               	movlw	255
 17910  01113E  22DA               	addwfc	fsr2h,f,c
 17911  011140  06DE               	decf	postinc2,f,c
 17912  011142  0E00               	movlw	0
 17913  011144  5ADD               	subwfb	postdec2,f,c
 17914  011146  0EBF               	movlw	191
 17915  011148  6E0B               	movwf	(btemp+10)^0,c
 17916  01114A  0EFF               	movlw	255
 17917  01114C  6E0C               	movwf	(btemp+11)^0,c
 17918                           
 17919                           ;stkvar	_c @ sp[(-56)+-7]
 17920  01114E  0EC1               	movlw	-63
 17921  011150  50E3               	movf	plusw1,w,c
 17922  011152  6E09               	movwf	(btemp+8)^0,c
 17923  011154  6A0A               	clrf	(btemp+9)^0,c
 17924  011156  500B               	movf	(btemp+10)^0,w,c
 17925  011158  2609               	addwf	(btemp+8)^0,f,c
 17926  01115A  500C               	movf	(btemp+11)^0,w,c
 17927  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17928  01115E  500A               	movf	(btemp+9)^0,w,c
 17929  011160  E106               	bnz	u11580
 17930  011162  0E1A               	movlw	26
 17931  011164  5C09               	subwf	(btemp+8)^0,w,c
 17932  011166  B0D8               	btfsc	status,0,c
 17933  011168  D002               	goto	u11580
 17934  01116A  0E01               	movlw	1
 17935  01116C  D001               	goto	u11590
 17936  01116E                     u11580:
 17937  01116E  0E00               	movlw	0
 17938  011170                     u11590:
 17939  011170  6E0B               	movwf	(btemp+10)^0,c
 17940  011172  6A0C               	clrf	(btemp+11)^0,c
 17941                           
 17942                           ;stkvar	_efgtoa$5528 @ sp[(-56)+0]
 17943  011174  0EC8               	movlw	-56
 17944  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17945  01117C  0EC9               	movlw	-55
 17946  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17947                           
 17948                           ;stkvar	_efgtoa$5528 @ sp[(-56)+0]
 17949  011184  0EC8               	movlw	-56
 17950  011186  006F FF8C  F001    	movff	plusw1,btemp
 17951  01118C  0EC9               	movlw	-55
 17952  01118E  50E3               	movf	plusw1,w,c
 17953  011190  1001               	iorwf	btemp^0,w,c
 17954  011192  A4D8               	btfss	status,2,c
 17955  011194  D002               	goto	l12280
 17956  011196  0E65               	movlw	101
 17957  011198  D001               	goto	L19
 17958  01119A                     l12280:
 17959  01119A  0E45               	movlw	69
 17960  01119C                     L19:
 17961  01119C  6E0B               	movwf	(btemp+10)^0,c
 17962  01119E  0E00               	movlw	0
 17963  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17964                           
 17965                           ;stkvar	_efgtoa$5527 @ sp[(-56)+2]
 17966  0111A2  0ECA               	movlw	-54
 17967  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17968  0111AA  0ECB               	movlw	-53
 17969  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17970                           
 17971                           ;stkvar	_efgtoa$5527 @ sp[(-56)+2]
 17972                           ;stkvar	_i @ sp[(-56)+36]
 17973  0111B2  0EEC               	movlw	-20
 17974  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17975  0111BA  0EED               	movlw	-19
 17976  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17977  0111C2  0E97               	movlw	low _dbuf
 17978  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17979  0111C6  6ED9               	movwf	fsr2l,c
 17980  0111C8  0E02               	movlw	high _dbuf
 17981  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17982  0111CC  6EDA               	movwf	fsr2h,c
 17983  0111CE  0ECA               	movlw	-54
 17984  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17985                           
 17986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17987                           ;stkvar	_w @ sp[(-56)+38]
 17988  0111D6  50E1               	movf	fsr1l,w,c
 17989  0111D8  0FEE               	addlw	-18
 17990  0111DA  6ED9               	movwf	fsr2l,c
 17991  0111DC  50E2               	movf	fsr1h,w,c
 17992  0111DE  6EDA               	movwf	fsr2h,c
 17993  0111E0  0EFF               	movlw	255
 17994  0111E2  22DA               	addwfc	fsr2h,f,c
 17995  0111E4  06DE               	decf	postinc2,f,c
 17996  0111E6  0E00               	movlw	0
 17997  0111E8  5ADD               	subwfb	postdec2,f,c
 17998                           
 17999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 18000                           ;stkvar	_i @ sp[(-56)+36]
 18001  0111EA  0EEC               	movlw	-20
 18002  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18003  0111F2  0EED               	movlw	-19
 18004  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18005  0111FA  0E97               	movlw	low _dbuf
 18006  0111FC  240B               	addwf	(btemp+10)^0,w,c
 18007  0111FE  6E09               	movwf	(btemp+8)^0,c
 18008  011200  0E02               	movlw	high _dbuf
 18009  011202  200C               	addwfc	(btemp+11)^0,w,c
 18010  011204  6E0A               	movwf	(btemp+9)^0,c
 18011  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 18012  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 18013                           
 18014                           ;stkvar	_n @ sp[(-58)+32]
 18015  011212  0E97               	movlw	low _dbuf
 18016  011214  6E0B               	movwf	(btemp+10)^0,c
 18017  011216  0E02               	movlw	high _dbuf
 18018  011218  6E0C               	movwf	(btemp+11)^0,c
 18019  01121A  0EE6               	movlw	-26
 18020  01121C  50E3               	movf	plusw1,w,c
 18021  01121E  260B               	addwf	(btemp+10)^0,f,c
 18022  011220  0EE7               	movlw	-25
 18023  011222  50E3               	movf	plusw1,w,c
 18024  011224  220C               	addwfc	(btemp+11)^0,f,c
 18025  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18026  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18027  011232  ECC7  F0D1         	call	_strcpy	;wreg free
 18028  011236  EF16  F081         	goto	l12032
 18029  01123A                     l2194:
 18030                           
 18031                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18032  01123A  0EC1               	movlw	193
 18033  01123C  26E1               	addwf	fsr1l,f,c
 18034  01123E  0EFF               	movlw	255
 18035  011240  22E2               	addwfc	fsr1h,f,c
 18036  011242  0012               	return		;funcret
 18037  011244                     __end_of_efgtoa:
 18038                           	opt callstack 0
 18039                           
 18040 ;; *************** function _tolower *****************
 18041 ;; Defined at:
 18042 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18043 ;; Parameters:    Size  Location     Type
 18044 ;;  c               2  [STACK] int 
 18045 ;; Auto vars:     Size  Location     Type
 18046 ;;		None
 18047 ;; Return value:  Size  Location     Type
 18048 ;;                  2  [STACK] int 
 18049 ;; Registers used:
 18050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18051 ;; Tracked objects:
 18052 ;;		On entry : 0/0
 18053 ;;		On exit  : 0/0
 18054 ;;		Unchanged: 0/0
 18055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18060 ;;Total ram usage:        0 bytes
 18061 ;; Hardware stack levels used:    1
 18062 ;; Hardware stack levels required when called:   16
 18063 ;; This function calls:
 18064 ;;		_isupper
 18065 ;; This function is called by:
 18066 ;;		_efgtoa
 18067 ;;		_vfpfcnvrt
 18068 ;; This function uses a reentrant model
 18069 ;;
 18070                           
 18071                           	psect	text58
 18072  01AD2A                     __ptext58:
 18073                           	opt callstack 0
 18074  01AD2A                     _tolower:
 18075                           	opt callstack 0
 18076                           
 18077                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18078  01AD2A  52E6               	movf	postinc1,f,c
 18079  01AD2C  52E6               	movf	postinc1,f,c
 18080                           
 18081                           ;stkvar	_c @ sp[(-2)+-2]
 18082                           
 18083                           ;incstack = 0
 18084 ;; hardware stack exceeded
 18085  01AD2E  0EFC               	movlw	-4
 18086  01AD30  50E3               	movf	plusw1,w,c
 18087  01AD32  0FBF               	addlw	191
 18088  01AD34  6E0B               	movwf	(btemp+10)^0,c
 18089  01AD36  0EFD               	movlw	-3
 18090  01AD38  006F FF8C  F00C    	movff	plusw1,btemp+11
 18091  01AD3E  0EFF               	movlw	255
 18092  01AD40  220C               	addwfc	(btemp+11)^0,f,c
 18093  01AD42  500C               	movf	(btemp+11)^0,w,c
 18094  01AD44  E106               	bnz	u6100
 18095  01AD46  0E1A               	movlw	26
 18096  01AD48  5C0B               	subwf	(btemp+10)^0,w,c
 18097  01AD4A  B0D8               	btfsc	status,0,c
 18098  01AD4C  D002               	goto	u6100
 18099  01AD4E  0E01               	movlw	1
 18100  01AD50  D001               	goto	u6110
 18101  01AD52                     u6100:
 18102  01AD52  0E00               	movlw	0
 18103  01AD54                     u6110:
 18104  01AD54  6E0B               	movwf	(btemp+10)^0,c
 18105  01AD56  6A0C               	clrf	(btemp+11)^0,c
 18106                           
 18107                           ;stkvar	_tolower$6347 @ sp[(-2)+0]
 18108  01AD58  0EFE               	movlw	-2
 18109  01AD5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18110  01AD60  0EFF               	movlw	-1
 18111  01AD62  0060  F033  FFE3   	movff	btemp+11,plusw1
 18112                           
 18113                           ;stkvar	_tolower$6347 @ sp[(-2)+0]
 18114  01AD68  0EFE               	movlw	-2
 18115  01AD6A  006F FF8C  F001    	movff	plusw1,btemp
 18116  01AD70  0EFF               	movlw	-1
 18117  01AD72  50E3               	movf	plusw1,w,c
 18118  01AD74  1001               	iorwf	btemp^0,w,c
 18119  01AD76  B4D8               	btfsc	status,2,c
 18120  01AD78  D00D               	goto	l8042
 18121                           
 18122                           ;stkvar	_c @ sp[(-2)+-2]
 18123  01AD7A  0EFC               	movlw	-4
 18124  01AD7C  006F FF8C  F001    	movff	plusw1,btemp
 18125  01AD82  0EFD               	movlw	-3
 18126  01AD84  006F FF8C  F002    	movff	plusw1,btemp+1
 18127  01AD8A  0E20               	movlw	32
 18128  01AD8C  1201               	iorwf	btemp^0,f,c
 18129  01AD8E  0E00               	movlw	0
 18130  01AD90  1202               	iorwf	(btemp+1)^0,f,c
 18131  01AD92  D008               	goto	l3466
 18132  01AD94                     l8042:
 18133                           
 18134                           ;stkvar	_c @ sp[(-2)+-2]
 18135  01AD94  0EFC               	movlw	-4
 18136  01AD96  006F FF8C  F001    	movff	plusw1,btemp
 18137  01AD9C  0EFD               	movlw	-3
 18138  01AD9E  006F FF8C  F002    	movff	plusw1,btemp+1
 18139  01ADA4                     l3466:
 18140                           
 18141                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18142  01ADA4  52E5               	movf	postdec1,f,c
 18143  01ADA6  52E5               	movf	postdec1,f,c
 18144  01ADA8  52E5               	movf	postdec1,f,c
 18145  01ADAA  52E5               	movf	postdec1,f,c
 18146  01ADAC  0012               	return		;funcret
 18147  01ADAE                     __end_of_tolower:
 18148                           	opt callstack 0
 18149                           
 18150 ;; *************** function _isupper *****************
 18151 ;; Defined at:
 18152 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18153 ;; Parameters:    Size  Location     Type
 18154 ;;  c               2  [STACK] int 
 18155 ;; Auto vars:     Size  Location     Type
 18156 ;;		None
 18157 ;; Return value:  Size  Location     Type
 18158 ;;                  2  [STACK] int 
 18159 ;; Registers used:
 18160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18161 ;; Tracked objects:
 18162 ;;		On entry : 0/0
 18163 ;;		On exit  : 0/0
 18164 ;;		Unchanged: 0/0
 18165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18170 ;;Total ram usage:        0 bytes
 18171 ;; Hardware stack levels used:    1
 18172 ;; Hardware stack levels required when called:   15
 18173 ;; This function calls:
 18174 ;;		Nothing
 18175 ;; This function is called by:
 18176 ;;		_efgtoa
 18177 ;;		_xtoa
 18178 ;;		_vfpfcnvrt
 18179 ;;		_tolower
 18180 ;; This function uses a reentrant model
 18181 ;;
 18182                           
 18183                           	psect	text59
 18184  01BA02                     __ptext59:
 18185                           	opt callstack 0
 18186  01BA02                     _isupper:
 18187                           	opt callstack 0
 18188                           
 18189                           ;stkvar	_c @ sp[(0)+-2]
 18190                           
 18191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18192                           ;incstack = 0
 18193 ;; hardware stack exceeded
 18194  01BA02  0EFE               	movlw	-2
 18195  01BA04  50E3               	movf	plusw1,w,c
 18196  01BA06  0FBF               	addlw	191
 18197  01BA08  6E0B               	movwf	(btemp+10)^0,c
 18198  01BA0A  0EFF               	movlw	-1
 18199  01BA0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18200  01BA12  0EFF               	movlw	255
 18201  01BA14  220C               	addwfc	(btemp+11)^0,f,c
 18202  01BA16  500C               	movf	(btemp+11)^0,w,c
 18203  01BA18  E106               	bnz	u5450
 18204  01BA1A  0E1A               	movlw	26
 18205  01BA1C  5C0B               	subwf	(btemp+10)^0,w,c
 18206  01BA1E  B0D8               	btfsc	status,0,c
 18207  01BA20  D002               	goto	u5450
 18208  01BA22  0E01               	movlw	1
 18209  01BA24  D001               	goto	u5460
 18210  01BA26                     u5450:
 18211  01BA26  0E00               	movlw	0
 18212  01BA28                     u5460:
 18213  01BA28  6E01               	movwf	btemp^0,c
 18214  01BA2A  6A02               	clrf	(btemp+1)^0,c
 18215                           
 18216                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18217  01BA2C  52E5               	movf	postdec1,f,c
 18218  01BA2E  52E5               	movf	postdec1,f,c
 18219  01BA30  0012               	return		;funcret
 18220  01BA32                     __end_of_isupper:
 18221                           	opt callstack 0
 18222                           
 18223 ;; *************** function _strcpy *****************
 18224 ;; Defined at:
 18225 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18226 ;; Parameters:    Size  Location     Type
 18227 ;;  dest            2  [STACK] PTR unsigned char 
 18228 ;;		 -> dbuf(80), 
 18229 ;;  src             2  [STACK] PTR const unsigned char 
 18230 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18231 ;;		 -> dbuf(80), 
 18232 ;; Auto vars:     Size  Location     Type
 18233 ;;  d               2  [STACK] PTR unsigned char 
 18234 ;;		 -> dbuf(80), 
 18235 ;;  s               2  [STACK] PTR const unsigned char 
 18236 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18237 ;;		 -> dbuf(80), 
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  2  [STACK] PTR unsigned char 
 18240 ;; Registers used:
 18241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18251 ;;Total ram usage:        0 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; Hardware stack levels required when called:   15
 18254 ;; This function calls:
 18255 ;;		Nothing
 18256 ;; This function is called by:
 18257 ;;		_efgtoa
 18258 ;; This function uses a reentrant model
 18259 ;;
 18260                           
 18261                           	psect	text60
 18262  01A38E                     __ptext60:
 18263                           	opt callstack 0
 18264  01A38E                     _strcpy:
 18265                           	opt callstack 0
 18266                           
 18267                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18268  01A38E  52E6               	movf	postinc1,f,c
 18269  01A390  52E6               	movf	postinc1,f,c
 18270  01A392  52E6               	movf	postinc1,f,c
 18271  01A394  52E6               	movf	postinc1,f,c
 18272                           
 18273                           ;stkvar	_src @ sp[(-4)+-4]
 18274                           
 18275                           ;incstack = 0
 18276 ;; hardware stack exceeded
 18277  01A396  0EF8               	movlw	-8
 18278  01A398  006F FF8C  F00B    	movff	plusw1,btemp+10
 18279  01A39E  0EF9               	movlw	-7
 18280  01A3A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18281                           
 18282                           ;stkvar	_s @ sp[(-4)+2]
 18283  01A3A6  0EFF               	movlw	-1
 18284  01A3A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18285  01A3AE  0EFE               	movlw	-2
 18286  01A3B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18287                           
 18288                           ;stkvar	_dest @ sp[(-4)+-2]
 18289  01A3B6  0EFA               	movlw	-6
 18290  01A3B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18291  01A3BE  0EFB               	movlw	-5
 18292  01A3C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18293                           
 18294                           ;stkvar	_d @ sp[(-4)+0]
 18295  01A3C6  0EFD               	movlw	-3
 18296  01A3C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18297  01A3CE  0EFC               	movlw	-4
 18298  01A3D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18299  01A3D6                     l11894:
 18300                           
 18301                           ;stkvar	_s @ sp[(-4)+2]
 18302  01A3D6  50E1               	movf	fsr1l,w,c
 18303  01A3D8  0FFE               	addlw	-2
 18304  01A3DA  6ED9               	movwf	fsr2l,c
 18305  01A3DC  50E2               	movf	fsr1h,w,c
 18306  01A3DE  6EDA               	movwf	fsr2h,c
 18307  01A3E0  0EFF               	movlw	255
 18308  01A3E2  22DA               	addwfc	fsr2h,f,c
 18309  01A3E4  006F FF7C  F00B    	movff	indf2,btemp+10
 18310  01A3EA  0E01               	movlw	1
 18311  01A3EC  26DE               	addwf	postinc2,f,c
 18312  01A3EE  006F FF7C  F00C    	movff	indf2,btemp+11
 18313  01A3F4  0E00               	movlw	0
 18314  01A3F6  22DD               	addwfc	postdec2,f,c
 18315  01A3F8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 18316  01A3FE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 18317  01A404  0E00               	movlw	low (__mediumconst shr (0+16))
 18318  01A406  6EF8               	movwf	tblptru,c
 18319                           
 18320                           ;stkvar	_d @ sp[(-4)+0]
 18321  01A408  50E1               	movf	fsr1l,w,c
 18322  01A40A  0FFC               	addlw	-4
 18323  01A40C  6ED9               	movwf	fsr2l,c
 18324  01A40E  50E2               	movf	fsr1h,w,c
 18325  01A410  6EDA               	movwf	fsr2h,c
 18326  01A412  0EFF               	movlw	255
 18327  01A414  22DA               	addwfc	fsr2h,f,c
 18328  01A416  006F FF7C  F00B    	movff	indf2,btemp+10
 18329  01A41C  0E01               	movlw	1
 18330  01A41E  26DE               	addwf	postinc2,f,c
 18331  01A420  006F FF7C  F00C    	movff	indf2,btemp+11
 18332  01A426  0E00               	movlw	0
 18333  01A428  22DD               	addwfc	postdec2,f,c
 18334  01A42A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 18335  01A430  0060  F033  FFDA   	movff	btemp+11,fsr2h
 18336  01A436  0E1F               	movlw	(high __ramtop+-1)
 18337  01A438  64F7               	cpfsgt	tblptrh,c
 18338  01A43A  D003               	bra	u10887
 18339  01A43C  0008               	tblrd		*
 18340  01A43E  50F5               	movf	tablat,w,c
 18341  01A440  D007               	bra	u10880
 18342  01A442                     u10887:
 18343  01A442  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18344  01A448  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18345  01A44E  50EF               	movf	indf0,w,c
 18346  01A450                     u10880:
 18347  01A450  6EDF               	movwf	indf2,c
 18348  01A452  50DF               	movf	indf2,w,c
 18349  01A454  A4D8               	btfss	status,2,c
 18350  01A456  D7BF               	goto	l11894
 18351                           
 18352                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 18353  01A458  0EF8               	movlw	248
 18354  01A45A  26E1               	addwf	fsr1l,f,c
 18355  01A45C  0EFF               	movlw	255
 18356  01A45E  22E2               	addwfc	fsr1h,f,c
 18357  01A460  0012               	return		;funcret
 18358  01A462                     __end_of_strcpy:
 18359                           	opt callstack 0
 18360                           
 18361 ;; *************** function _floorf *****************
 18362 ;; Defined at:
 18363 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 18364 ;; Parameters:    Size  Location     Type
 18365 ;;  x               4  [STACK] float 
 18366 ;; Auto vars:     Size  Location     Type
 18367 ;;  u               4  [STACK] struct .
 18368 ;;  m               4  [STACK] unsigned long 
 18369 ;;  e               2  [STACK] int 
 18370 ;; Return value:  Size  Location     Type
 18371 ;;                  4  [STACK] float 
 18372 ;; Registers used:
 18373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 18374 ;; Tracked objects:
 18375 ;;		On entry : 0/0
 18376 ;;		On exit  : 0/0
 18377 ;;		Unchanged: 0/0
 18378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18383 ;;Total ram usage:        0 bytes
 18384 ;; Hardware stack levels used:    1
 18385 ;; Hardware stack levels required when called:   15
 18386 ;; This function calls:
 18387 ;;		Nothing
 18388 ;; This function is called by:
 18389 ;;		_efgtoa
 18390 ;; This function uses a reentrant model
 18391 ;;
 18392                           
 18393                           	psect	text61
 18394  016460                     __ptext61:
 18395                           	opt callstack 0
 18396  016460                     _floorf:
 18397                           	opt callstack 0
 18398                           
 18399                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18400  016460  0E0A               	movlw	10
 18401  016462  26E1               	addwf	fsr1l,f,c
 18402  016464  0E00               	movlw	0
 18403  016466  22E2               	addwfc	fsr1h,f,c
 18404                           
 18405                           ;incstack = 0
 18406 ;; hardware stack exceeded
 18407  016468  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 18408  01646E  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 18409  016474  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 18410  01647A  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 18411                           
 18412                           ;stkvar	_u @ sp[(-10)+0]
 18413  016480  0EF6               	movlw	-10
 18414  016482  0060  F027  FFE3   	movff	btemp+8,plusw1
 18415  016488  0EF7               	movlw	-9
 18416  01648A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18417  016490  0EF8               	movlw	-8
 18418  016492  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18419  016498  0EF9               	movlw	-7
 18420  01649A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18421                           
 18422                           ;stkvar	_x @ sp[(-10)+-4]
 18423  0164A0  0EF2               	movlw	-14
 18424  0164A2  006F FF8C  F009    	movff	plusw1,btemp+8
 18425  0164A8  0EF3               	movlw	-13
 18426  0164AA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18427  0164B0  0EF4               	movlw	-12
 18428  0164B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18429  0164B8  0EF5               	movlw	-11
 18430  0164BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18431                           
 18432                           ;stkvar	_u @ sp[(-10)+0]
 18433  0164C0  0EF6               	movlw	-10
 18434  0164C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 18435  0164C8  0EF7               	movlw	-9
 18436  0164CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18437  0164D0  0EF8               	movlw	-8
 18438  0164D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18439  0164D8  0EF9               	movlw	-7
 18440  0164DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18441  0164E0  0E81               	movlw	129
 18442  0164E2  6E0B               	movwf	(btemp+10)^0,c
 18443  0164E4  0EFF               	movlw	255
 18444  0164E6  6E0C               	movwf	(btemp+11)^0,c
 18445                           
 18446                           ;stkvar	_u @ sp[(-10)+0]
 18447  0164E8  0EF6               	movlw	-10
 18448  0164EA  006F FF8C  F005    	movff	plusw1,btemp+4
 18449  0164F0  0EF7               	movlw	-9
 18450  0164F2  006F FF8C  F006    	movff	plusw1,btemp+5
 18451  0164F8  0EF8               	movlw	-8
 18452  0164FA  006F FF8C  F007    	movff	plusw1,btemp+6
 18453  016500  0EF9               	movlw	-7
 18454  016502  006F FF8C  F008    	movff	plusw1,btemp+7
 18455  016508  0E18               	movlw	24
 18456  01650A  D005               	goto	u6130
 18457  01650C                     u6135:
 18458  01650C  90D8               	bcf	status,0,c
 18459  01650E  3208               	rrcf	(btemp+7)^0,f,c
 18460  016510  3207               	rrcf	(btemp+6)^0,f,c
 18461  016512  3206               	rrcf	(btemp+5)^0,f,c
 18462  016514  3205               	rrcf	(btemp+4)^0,f,c
 18463  016516                     u6130:
 18464  016516  2EE8               	decfsz	wreg,f,c
 18465  016518  D7F9               	goto	u6135
 18466  01651A  0060  F014  F009   	movff	btemp+4,btemp+8
 18467  016520  0060  F018  F00A   	movff	btemp+5,btemp+9
 18468  016526  0EFF               	movlw	255
 18469  016528  1609               	andwf	(btemp+8)^0,f,c
 18470  01652A  0E00               	movlw	0
 18471  01652C  160A               	andwf	(btemp+9)^0,f,c
 18472  01652E  500B               	movf	(btemp+10)^0,w,c
 18473  016530  2609               	addwf	(btemp+8)^0,f,c
 18474  016532  500C               	movf	(btemp+11)^0,w,c
 18475  016534  220A               	addwfc	(btemp+9)^0,f,c
 18476                           
 18477                           ;stkvar	_e @ sp[(-10)+8]
 18478  016536  0EFE               	movlw	-2
 18479  016538  0060  F027  FFE3   	movff	btemp+8,plusw1
 18480  01653E  0EFF               	movlw	-1
 18481  016540  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18482                           
 18483                           ;stkvar	_e @ sp[(-10)+8]
 18484  016546  0EFF               	movlw	-1
 18485  016548  BEE3               	btfsc	plusw1,7,c
 18486  01654A  D019               	goto	l8056
 18487  01654C  0EFF               	movlw	-1
 18488  01654E  50E3               	movf	plusw1,w,c
 18489  016550  E108               	bnz	u6140
 18490  016552  0EFE               	movlw	-2
 18491  016554  006F FF8C  F001    	movff	plusw1,btemp
 18492  01655A  0E17               	movlw	23
 18493  01655C  5E01               	subwf	btemp^0,f,c
 18494  01655E  A0D8               	btfss	status,0,c
 18495  016560  D00E               	goto	l8056
 18496  016562                     u6140:
 18497                           
 18498                           ;stkvar	_x @ sp[(-10)+-4]
 18499  016562  0EF2               	movlw	-14
 18500  016564  006F FF8C  F001    	movff	plusw1,btemp
 18501  01656A  0EF3               	movlw	-13
 18502  01656C  006F FF8C  F002    	movff	plusw1,btemp+1
 18503  016572  0EF4               	movlw	-12
 18504  016574  006F FF8C  F003    	movff	plusw1,btemp+2
 18505  01657A  0EF5               	movlw	-11
 18506  01657C  D11F               	goto	L20
 18507  01657E                     l8056:
 18508                           
 18509                           ;stkvar	_e @ sp[(-10)+8]
 18510  01657E  0EFF               	movlw	-1
 18511  016580  BEE3               	btfsc	plusw1,7,c
 18512  016582  D0B4               	goto	l8072
 18513                           
 18514                           ;stkvar	_e @ sp[(-10)+8]
 18515  016584  0EFE               	movlw	-2
 18516  016586  006F FF8C  F00C    	movff	plusw1,btemp+11
 18517  01658C  0EFF               	movlw	255
 18518  01658E  6E05               	movwf	(btemp+4)^0,c
 18519  016590  0EFF               	movlw	255
 18520  016592  6E06               	movwf	(btemp+5)^0,c
 18521  016594  0E7F               	movlw	127
 18522  016596  6E07               	movwf	(btemp+6)^0,c
 18523  016598  0E00               	movlw	0
 18524  01659A  6E08               	movwf	(btemp+7)^0,c
 18525  01659C                     u6165:
 18526  01659C  660C               	tstfsz	(btemp+11)^0,c
 18527  01659E  D001               	goto	u6166
 18528  0165A0  D007               	goto	u6167
 18529  0165A2                     u6166:
 18530  0165A2  3408               	rlcf	(btemp+7)^0,w,c
 18531  0165A4  3208               	rrcf	(btemp+7)^0,f,c
 18532  0165A6  3207               	rrcf	(btemp+6)^0,f,c
 18533  0165A8  3206               	rrcf	(btemp+5)^0,f,c
 18534  0165AA  3205               	rrcf	(btemp+4)^0,f,c
 18535  0165AC  2E0C               	decfsz	(btemp+11)^0,f,c
 18536  0165AE  D7F6               	goto	u6165
 18537  0165B0                     u6167:
 18538                           
 18539                           ;stkvar	_m @ sp[(-10)+4]
 18540  0165B0  0EFA               	movlw	-6
 18541  0165B2  0060  F017  FFE3   	movff	btemp+4,plusw1
 18542  0165B8  0EFB               	movlw	-5
 18543  0165BA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18544  0165C0  0EFC               	movlw	-4
 18545  0165C2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18546  0165C8  0EFD               	movlw	-3
 18547  0165CA  0060  F023  FFE3   	movff	btemp+7,plusw1
 18548                           
 18549                           ;stkvar	_m @ sp[(-10)+4]
 18550                           ;stkvar	_u @ sp[(-10)+0]
 18551  0165D0  0EF6               	movlw	-10
 18552  0165D2  006F FF8C  F009    	movff	plusw1,btemp+8
 18553  0165D8  0EF7               	movlw	-9
 18554  0165DA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18555  0165E0  0EF8               	movlw	-8
 18556  0165E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18557  0165E8  0EF9               	movlw	-7
 18558  0165EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18559  0165F0  0EFA               	movlw	-6
 18560  0165F2  50E3               	movf	plusw1,w,c
 18561  0165F4  1609               	andwf	(btemp+8)^0,f,c
 18562  0165F6  0EFB               	movlw	-5
 18563  0165F8  50E3               	movf	plusw1,w,c
 18564  0165FA  160A               	andwf	(btemp+9)^0,f,c
 18565  0165FC  0EFC               	movlw	-4
 18566  0165FE  50E3               	movf	plusw1,w,c
 18567  016600  160B               	andwf	(btemp+10)^0,f,c
 18568  016602  0EFD               	movlw	-3
 18569  016604  50E3               	movf	plusw1,w,c
 18570  016606  160C               	andwf	(btemp+11)^0,f,c
 18571  016608  5009               	movf	(btemp+8)^0,w,c
 18572  01660A  100A               	iorwf	(btemp+9)^0,w,c
 18573  01660C  100B               	iorwf	(btemp+10)^0,w,c
 18574  01660E  100C               	iorwf	(btemp+11)^0,w,c
 18575  016610  B4D8               	btfsc	status,2,c
 18576  016612  D7A7               	goto	u6140
 18577                           
 18578                           ;stkvar	_u @ sp[(-10)+0]
 18579  016614  0EF6               	movlw	-10
 18580  016616  006F FF8C  F009    	movff	plusw1,btemp+8
 18581  01661C  0EF7               	movlw	-9
 18582  01661E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18583  016624  0EF8               	movlw	-8
 18584  016626  006F FF8C  F00B    	movff	plusw1,btemp+10
 18585  01662C  0EF9               	movlw	-7
 18586  01662E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18587  016634  0E20               	movlw	32
 18588  016636  D005               	goto	u6180
 18589  016638                     u6185:
 18590  016638  90D8               	bcf	status,0,c
 18591  01663A  320C               	rrcf	(btemp+11)^0,f,c
 18592  01663C  320B               	rrcf	(btemp+10)^0,f,c
 18593  01663E  320A               	rrcf	(btemp+9)^0,f,c
 18594  016640  3209               	rrcf	(btemp+8)^0,f,c
 18595  016642                     u6180:
 18596  016642  2EE8               	decfsz	wreg,f,c
 18597  016644  D7F9               	goto	u6185
 18598  016646  5009               	movf	(btemp+8)^0,w,c
 18599  016648  B4D8               	btfsc	status,2,c
 18600  01664A  D028               	goto	l8070
 18601                           
 18602                           ;stkvar	_m @ sp[(-10)+4]
 18603                           ;stkvar	_u @ sp[(-10)+0]
 18604  01664C  0EF6               	movlw	-10
 18605  01664E  50E3               	movf	plusw1,w,c
 18606  016650  6E01               	movwf	btemp^0,c
 18607  016652  0EFA               	movlw	-6
 18608  016654  50E3               	movf	plusw1,w,c
 18609  016656  2601               	addwf	btemp^0,f,c
 18610  016658  0EF6               	movlw	-10
 18611  01665A  0060  F007  FFE3   	movff	btemp,plusw1
 18612  016660  0EF7               	movlw	-9
 18613  016662  50E3               	movf	plusw1,w,c
 18614  016664  6E01               	movwf	btemp^0,c
 18615  016666  0EFB               	movlw	-5
 18616  016668  50E3               	movf	plusw1,w,c
 18617  01666A  2201               	addwfc	btemp^0,f,c
 18618  01666C  0EF7               	movlw	-9
 18619  01666E  0060  F007  FFE3   	movff	btemp,plusw1
 18620  016674  0EF8               	movlw	-8
 18621  016676  50E3               	movf	plusw1,w,c
 18622  016678  6E01               	movwf	btemp^0,c
 18623  01667A  0EFC               	movlw	-4
 18624  01667C  50E3               	movf	plusw1,w,c
 18625  01667E  2201               	addwfc	btemp^0,f,c
 18626  016680  0EF8               	movlw	-8
 18627  016682  0060  F007  FFE3   	movff	btemp,plusw1
 18628  016688  0EF9               	movlw	-7
 18629  01668A  50E3               	movf	plusw1,w,c
 18630  01668C  6E01               	movwf	btemp^0,c
 18631  01668E  0EFD               	movlw	-3
 18632  016690  50E3               	movf	plusw1,w,c
 18633  016692  2201               	addwfc	btemp^0,f,c
 18634  016694  0EF9               	movlw	-7
 18635  016696  0060  F007  FFE3   	movff	btemp,plusw1
 18636  01669C                     l8070:
 18637                           
 18638                           ;stkvar	_m @ sp[(-10)+4]
 18639  01669C  0EFA               	movlw	-6
 18640  01669E  006F FF8C  F009    	movff	plusw1,btemp+8
 18641  0166A4  0EFB               	movlw	-5
 18642  0166A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18643  0166AC  0EFC               	movlw	-4
 18644  0166AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18645  0166B4  0EFD               	movlw	-3
 18646  0166B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18647  0166BC  1C09               	comf	(btemp+8)^0,w,c
 18648  0166BE  6E05               	movwf	(btemp+4)^0,c
 18649  0166C0  1C0A               	comf	(btemp+9)^0,w,c
 18650  0166C2  6E06               	movwf	(btemp+5)^0,c
 18651  0166C4  1C0B               	comf	(btemp+10)^0,w,c
 18652  0166C6  6E07               	movwf	(btemp+6)^0,c
 18653  0166C8  1C0C               	comf	(btemp+11)^0,w,c
 18654  0166CA  6E08               	movwf	(btemp+7)^0,c
 18655                           
 18656                           ;stkvar	_u @ sp[(-10)+0]
 18657  0166CC  50E1               	movf	fsr1l,w,c
 18658  0166CE  0FF6               	addlw	-10
 18659  0166D0  6ED9               	movwf	fsr2l,c
 18660  0166D2  50E2               	movf	fsr1h,w,c
 18661  0166D4  6EDA               	movwf	fsr2h,c
 18662  0166D6  0EFF               	movlw	255
 18663  0166D8  22DA               	addwfc	fsr2h,f,c
 18664  0166DA  5005               	movf	(btemp+4)^0,w,c
 18665  0166DC  16DE               	andwf	postinc2,f,c
 18666  0166DE  5006               	movf	(btemp+5)^0,w,c
 18667  0166E0  16DE               	andwf	postinc2,f,c
 18668  0166E2  5007               	movf	(btemp+6)^0,w,c
 18669  0166E4  16DE               	andwf	postinc2,f,c
 18670  0166E6  5008               	movf	(btemp+7)^0,w,c
 18671  0166E8  16DE               	andwf	postinc2,f,c
 18672  0166EA  D05B               	goto	l8080
 18673  0166EC                     l8072:
 18674                           
 18675                           ;stkvar	_u @ sp[(-10)+0]
 18676  0166EC  0EF6               	movlw	-10
 18677  0166EE  006F FF8C  F009    	movff	plusw1,btemp+8
 18678  0166F4  0EF7               	movlw	-9
 18679  0166F6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18680  0166FC  0EF8               	movlw	-8
 18681  0166FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18682  016704  0EF9               	movlw	-7
 18683  016706  006F FF8C  F00C    	movff	plusw1,btemp+11
 18684  01670C  0E20               	movlw	32
 18685  01670E  D005               	goto	u6200
 18686  016710                     u6205:
 18687  016710  90D8               	bcf	status,0,c
 18688  016712  320C               	rrcf	(btemp+11)^0,f,c
 18689  016714  320B               	rrcf	(btemp+10)^0,f,c
 18690  016716  320A               	rrcf	(btemp+9)^0,f,c
 18691  016718  3209               	rrcf	(btemp+8)^0,f,c
 18692  01671A                     u6200:
 18693  01671A  2EE8               	decfsz	wreg,f,c
 18694  01671C  D7F9               	goto	u6205
 18695  01671E  6609               	tstfsz	(btemp+8)^0,c
 18696  016720  D009               	goto	l8076
 18697                           
 18698                           ;stkvar	_u @ sp[(-10)+0]
 18699  016722  0EF6               	movlw	-10
 18700  016724  6AE3               	clrf	plusw1,c
 18701  016726  0EF7               	movlw	-9
 18702  016728  6AE3               	clrf	plusw1,c
 18703  01672A  0EF8               	movlw	-8
 18704  01672C  6AE3               	clrf	plusw1,c
 18705  01672E  0EF9               	movlw	-7
 18706  016730  6AE3               	clrf	plusw1,c
 18707  016732  D037               	goto	l8080
 18708  016734                     l8076:
 18709                           
 18710                           ;stkvar	_u @ sp[(-10)+0]
 18711  016734  0EF6               	movlw	-10
 18712  016736  006F FF8C  F009    	movff	plusw1,btemp+8
 18713  01673C  0EF7               	movlw	-9
 18714  01673E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18715  016744  0EF8               	movlw	-8
 18716  016746  006F FF8C  F00B    	movff	plusw1,btemp+10
 18717  01674C  0EF9               	movlw	-7
 18718  01674E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18719  016754  90D8               	bcf	status,0,c
 18720  016756  3409               	rlcf	(btemp+8)^0,w,c
 18721  016758  6E05               	movwf	(btemp+4)^0,c
 18722  01675A  340A               	rlcf	(btemp+9)^0,w,c
 18723  01675C  6E06               	movwf	(btemp+5)^0,c
 18724  01675E  340B               	rlcf	(btemp+10)^0,w,c
 18725  016760  6E07               	movwf	(btemp+6)^0,c
 18726  016762  340C               	rlcf	(btemp+11)^0,w,c
 18727  016764  6E08               	movwf	(btemp+7)^0,c
 18728  016766  5005               	movf	(btemp+4)^0,w,c
 18729  016768  1006               	iorwf	(btemp+5)^0,w,c
 18730  01676A  1007               	iorwf	(btemp+6)^0,w,c
 18731  01676C  1008               	iorwf	(btemp+7)^0,w,c
 18732  01676E  B4D8               	btfsc	status,2,c
 18733  016770  D018               	goto	l8080
 18734  016772  0E00               	movlw	0
 18735  016774  6E09               	movwf	(btemp+8)^0,c
 18736  016776  0E00               	movlw	0
 18737  016778  6E0A               	movwf	(btemp+9)^0,c
 18738  01677A  0E80               	movlw	128
 18739  01677C  6E0B               	movwf	(btemp+10)^0,c
 18740  01677E  0EBF               	movlw	191
 18741  016780  6E0C               	movwf	(btemp+11)^0,c
 18742                           
 18743                           ;stkvar	_u @ sp[(-10)+0]
 18744  016782  0EF6               	movlw	-10
 18745  016784  0060  F027  FFE3   	movff	btemp+8,plusw1
 18746  01678A  0EF7               	movlw	-9
 18747  01678C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18748  016792  0EF8               	movlw	-8
 18749  016794  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18750  01679A  0EF9               	movlw	-7
 18751  01679C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18752  0167A2                     l8080:
 18753                           
 18754                           ;stkvar	_u @ sp[(-10)+0]
 18755  0167A2  0EF6               	movlw	-10
 18756  0167A4  006F FF8C  F001    	movff	plusw1,btemp
 18757  0167AA  0EF7               	movlw	-9
 18758  0167AC  006F FF8C  F002    	movff	plusw1,btemp+1
 18759  0167B2  0EF8               	movlw	-8
 18760  0167B4  006F FF8C  F003    	movff	plusw1,btemp+2
 18761  0167BA  0EF9               	movlw	-7
 18762  0167BC                     L20:
 18763  0167BC  006F FF8C  F004    	movff	plusw1,btemp+3
 18764                           
 18765                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18766  0167C2  0EF2               	movlw	242
 18767  0167C4  26E1               	addwf	fsr1l,f,c
 18768  0167C6  0EFF               	movlw	255
 18769  0167C8  22E2               	addwfc	fsr1h,f,c
 18770  0167CA  0012               	return		;funcret
 18771  0167CC                     __end_of_floorf:
 18772                           	opt callstack 0
 18773                           
 18774 ;; *************** function ___fpclassifyf *****************
 18775 ;; Defined at:
 18776 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18777 ;; Parameters:    Size  Location     Type
 18778 ;;  x               4  [STACK] float 
 18779 ;; Auto vars:     Size  Location     Type
 18780 ;;  u               4  [STACK] struct .
 18781 ;;  e               2  [STACK] int 
 18782 ;; Return value:  Size  Location     Type
 18783 ;;                  2  [STACK] int 
 18784 ;; Registers used:
 18785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18786 ;; Tracked objects:
 18787 ;;		On entry : 0/0
 18788 ;;		On exit  : 0/0
 18789 ;;		Unchanged: 0/0
 18790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18795 ;;Total ram usage:        0 bytes
 18796 ;; Hardware stack levels used:    1
 18797 ;; Hardware stack levels required when called:   15
 18798 ;; This function calls:
 18799 ;;		Nothing
 18800 ;; This function is called by:
 18801 ;;		_efgtoa
 18802 ;; This function uses a reentrant model
 18803 ;;
 18804                           
 18805                           	psect	text62
 18806  0189BE                     __ptext62:
 18807                           	opt callstack 0
 18808  0189BE                     ___fpclassifyf:
 18809                           	opt callstack 0
 18810                           
 18811                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18812  0189BE  0E06               	movlw	6
 18813  0189C0  26E1               	addwf	fsr1l,f,c
 18814  0189C2  0E00               	movlw	0
 18815  0189C4  22E2               	addwfc	fsr1h,f,c
 18816                           
 18817                           ;incstack = 0
 18818 ;; hardware stack exceeded
 18819  0189C6  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 18820  0189CC  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18821  0189D2  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18822  0189D8  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18823                           
 18824                           ;stkvar	_u @ sp[(-6)+0]
 18825  0189DE  0EFA               	movlw	-6
 18826  0189E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 18827  0189E6  0EFB               	movlw	-5
 18828  0189E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18829  0189EE  0EFC               	movlw	-4
 18830  0189F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18831  0189F6  0EFD               	movlw	-3
 18832  0189F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18833                           
 18834                           ;stkvar	_x @ sp[(-6)+-4]
 18835  0189FE  0EF6               	movlw	-10
 18836  018A00  006F FF8C  F009    	movff	plusw1,btemp+8
 18837  018A06  0EF7               	movlw	-9
 18838  018A08  006F FF8C  F00A    	movff	plusw1,btemp+9
 18839  018A0E  0EF8               	movlw	-8
 18840  018A10  006F FF8C  F00B    	movff	plusw1,btemp+10
 18841  018A16  0EF9               	movlw	-7
 18842  018A18  006F FF8C  F00C    	movff	plusw1,btemp+11
 18843                           
 18844                           ;stkvar	_u @ sp[(-6)+0]
 18845  018A1E  0EFA               	movlw	-6
 18846  018A20  0060  F027  FFE3   	movff	btemp+8,plusw1
 18847  018A26  0EFB               	movlw	-5
 18848  018A28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18849  018A2E  0EFC               	movlw	-4
 18850  018A30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18851  018A36  0EFD               	movlw	-3
 18852  018A38  0060  F033  FFE3   	movff	btemp+11,plusw1
 18853                           
 18854                           ;stkvar	_u @ sp[(-6)+0]
 18855  018A3E  0EFA               	movlw	-6
 18856  018A40  006F FF8C  F009    	movff	plusw1,btemp+8
 18857  018A46  0EFB               	movlw	-5
 18858  018A48  006F FF8C  F00A    	movff	plusw1,btemp+9
 18859  018A4E  0EFC               	movlw	-4
 18860  018A50  006F FF8C  F00B    	movff	plusw1,btemp+10
 18861  018A56  0EFD               	movlw	-3
 18862  018A58  006F FF8C  F00C    	movff	plusw1,btemp+11
 18863  018A5E  0E18               	movlw	24
 18864  018A60  D005               	goto	u6010
 18865  018A62                     u6015:
 18866  018A62  90D8               	bcf	status,0,c
 18867  018A64  320C               	rrcf	(btemp+11)^0,f,c
 18868  018A66  320B               	rrcf	(btemp+10)^0,f,c
 18869  018A68  320A               	rrcf	(btemp+9)^0,f,c
 18870  018A6A  3209               	rrcf	(btemp+8)^0,f,c
 18871  018A6C                     u6010:
 18872  018A6C  2EE8               	decfsz	wreg,f,c
 18873  018A6E  D7F9               	goto	u6015
 18874  018A70  0060  F024  F007   	movff	btemp+8,btemp+6
 18875  018A76  0060  F028  F008   	movff	btemp+9,btemp+7
 18876  018A7C  0EFF               	movlw	255
 18877  018A7E  1607               	andwf	(btemp+6)^0,f,c
 18878  018A80  0E00               	movlw	0
 18879  018A82  1608               	andwf	(btemp+7)^0,f,c
 18880                           
 18881                           ;stkvar	_e @ sp[(-6)+4]
 18882  018A84  0EFE               	movlw	-2
 18883  018A86  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18884  018A8C  0EFF               	movlw	-1
 18885  018A8E  0060  F023  FFE3   	movff	btemp+7,plusw1
 18886                           
 18887                           ;stkvar	_e @ sp[(-6)+4]
 18888  018A94  0EFE               	movlw	-2
 18889  018A96  006F FF8C  F001    	movff	plusw1,btemp
 18890  018A9C  0EFF               	movlw	-1
 18891  018A9E  50E3               	movf	plusw1,w,c
 18892  018AA0  1001               	iorwf	btemp^0,w,c
 18893  018AA2  A4D8               	btfss	status,2,c
 18894  018AA4  D023               	goto	l8018
 18895                           
 18896                           ;stkvar	_u @ sp[(-6)+0]
 18897  018AA6  0EFA               	movlw	-6
 18898  018AA8  006F FF8C  F009    	movff	plusw1,btemp+8
 18899  018AAE  0EFB               	movlw	-5
 18900  018AB0  006F FF8C  F00A    	movff	plusw1,btemp+9
 18901  018AB6  0EFC               	movlw	-4
 18902  018AB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18903  018ABE  0EFD               	movlw	-3
 18904  018AC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18905  018AC6  90D8               	bcf	status,0,c
 18906  018AC8  3409               	rlcf	(btemp+8)^0,w,c
 18907  018ACA  6E05               	movwf	(btemp+4)^0,c
 18908  018ACC  340A               	rlcf	(btemp+9)^0,w,c
 18909  018ACE  6E06               	movwf	(btemp+5)^0,c
 18910  018AD0  340B               	rlcf	(btemp+10)^0,w,c
 18911  018AD2  6E07               	movwf	(btemp+6)^0,c
 18912  018AD4  340C               	rlcf	(btemp+11)^0,w,c
 18913  018AD6  6E08               	movwf	(btemp+7)^0,c
 18914  018AD8  5005               	movf	(btemp+4)^0,w,c
 18915  018ADA  1006               	iorwf	(btemp+5)^0,w,c
 18916  018ADC  1007               	iorwf	(btemp+6)^0,w,c
 18917  018ADE  1008               	iorwf	(btemp+7)^0,w,c
 18918  018AE0  A4D8               	btfss	status,2,c
 18919  018AE2  D002               	goto	l8014
 18920  018AE4  0E02               	movlw	2
 18921  018AE6  D02E               	goto	L21
 18922  018AE8                     l8014:
 18923  018AE8  0E03               	movlw	3
 18924  018AEA  D02C               	goto	L21
 18925  018AEC                     l8018:
 18926                           
 18927                           ;stkvar	_e @ sp[(-6)+4]
 18928  018AEC  0EFE               	movlw	-2
 18929  018AEE  28E3               	incf	plusw1,w,c
 18930  018AF0  E128               	bnz	l8024
 18931  018AF2  0EFF               	movlw	-1
 18932  018AF4  50E3               	movf	plusw1,w,c
 18933  018AF6  A4D8               	btfss	status,2,c
 18934  018AF8  D024               	goto	l8024
 18935                           
 18936                           ;stkvar	_u @ sp[(-6)+0]
 18937  018AFA  0EFA               	movlw	-6
 18938  018AFC  006F FF8C  F009    	movff	plusw1,btemp+8
 18939  018B02  0EFB               	movlw	-5
 18940  018B04  006F FF8C  F00A    	movff	plusw1,btemp+9
 18941  018B0A  0EFC               	movlw	-4
 18942  018B0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18943  018B12  0EFD               	movlw	-3
 18944  018B14  006F FF8C  F00C    	movff	plusw1,btemp+11
 18945  018B1A  0E09               	movlw	9
 18946  018B1C                     u6055:
 18947  018B1C  90D8               	bcf	status,0,c
 18948  018B1E  3609               	rlcf	(btemp+8)^0,f,c
 18949  018B20  360A               	rlcf	(btemp+9)^0,f,c
 18950  018B22  360B               	rlcf	(btemp+10)^0,f,c
 18951  018B24  360C               	rlcf	(btemp+11)^0,f,c
 18952  018B26  2EE8               	decfsz	wreg,f,c
 18953  018B28  D7F9               	goto	u6055
 18954  018B2A  5009               	movf	(btemp+8)^0,w,c
 18955  018B2C  100A               	iorwf	(btemp+9)^0,w,c
 18956  018B2E  100B               	iorwf	(btemp+10)^0,w,c
 18957  018B30  100C               	iorwf	(btemp+11)^0,w,c
 18958  018B32  A4D8               	btfss	status,2,c
 18959  018B34  D002               	goto	u6060
 18960  018B36  0E01               	movlw	1
 18961  018B38  D001               	goto	u6070
 18962  018B3A                     u6060:
 18963  018B3A  0E00               	movlw	0
 18964  018B3C                     u6070:
 18965  018B3C  6E01               	movwf	btemp^0,c
 18966  018B3E  6A02               	clrf	(btemp+1)^0,c
 18967  018B40  D004               	goto	l3076
 18968  018B42                     l8024:
 18969  018B42  0E04               	movlw	4
 18970  018B44                     L21:
 18971  018B44  6E01               	movwf	btemp^0,c
 18972  018B46  0E00               	movlw	0
 18973  018B48  6E02               	movwf	(btemp+1)^0,c
 18974  018B4A                     l3076:
 18975                           
 18976                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18977  018B4A  0EF6               	movlw	246
 18978  018B4C  26E1               	addwf	fsr1l,f,c
 18979  018B4E  0EFF               	movlw	255
 18980  018B50  22E2               	addwfc	fsr1h,f,c
 18981  018B52  0012               	return		;funcret
 18982  018B54                     __end_of___fpclassifyf:
 18983                           	opt callstack 0
 18984                           
 18985 ;; *************** function ___fltol *****************
 18986 ;; Defined at:
 18987 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18988 ;; Parameters:    Size  Location     Type
 18989 ;;  f1              4  [STACK] int 
 18990 ;; Auto vars:     Size  Location     Type
 18991 ;;  exp1            1  [STACK] unsigned char 
 18992 ;;  sign1           1  [STACK] unsigned char 
 18993 ;; Return value:  Size  Location     Type
 18994 ;;                  4  [STACK] long 
 18995 ;; Registers used:
 18996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18997 ;; Tracked objects:
 18998 ;;		On entry : 0/0
 18999 ;;		On exit  : 0/0
 19000 ;;		Unchanged: 0/0
 19001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19006 ;;Total ram usage:        0 bytes
 19007 ;; Hardware stack levels used:    1
 19008 ;; Hardware stack levels required when called:   15
 19009 ;; This function calls:
 19010 ;;		Nothing
 19011 ;; This function is called by:
 19012 ;;		_main
 19013 ;;		_calc_bsoc
 19014 ;;		_init_bsoc
 19015 ;;		_Volts_to_SOC
 19016 ;;		_efgtoa
 19017 ;; This function uses a reentrant model
 19018 ;;
 19019                           
 19020                           	psect	text63
 19021  018E5A                     __ptext63:
 19022                           	opt callstack 0
 19023  018E5A                     ___fltol:
 19024                           	opt callstack 0
 19025                           
 19026                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19027  018E5A  52E6               	movf	postinc1,f,c
 19028  018E5C  52E6               	movf	postinc1,f,c
 19029                           
 19030                           ;stkvar	_f1 @ sp[(-2)+-4]
 19031                           
 19032                           ;incstack = 0
 19033 ;; hardware stack exceeded
 19034  018E5E  0EFA               	movlw	-6
 19035  018E60  006F FF8C  F009    	movff	plusw1,btemp+8
 19036  018E66  0EFB               	movlw	-5
 19037  018E68  006F FF8C  F00A    	movff	plusw1,btemp+9
 19038  018E6E  0EFC               	movlw	-4
 19039  018E70  006F FF8C  F00B    	movff	plusw1,btemp+10
 19040  018E76  0EFD               	movlw	-3
 19041  018E78  006F FF8C  F00C    	movff	plusw1,btemp+11
 19042  018E7E  0E18               	movlw	24
 19043  018E80  D005               	goto	u7220
 19044  018E82                     u7225:
 19045  018E82  90D8               	bcf	status,0,c
 19046  018E84  320C               	rrcf	(btemp+11)^0,f,c
 19047  018E86  320B               	rrcf	(btemp+10)^0,f,c
 19048  018E88  320A               	rrcf	(btemp+9)^0,f,c
 19049  018E8A  3209               	rrcf	(btemp+8)^0,f,c
 19050  018E8C                     u7220:
 19051  018E8C  2EE8               	decfsz	wreg,f,c
 19052  018E8E  D7F9               	goto	u7225
 19053                           
 19054                           ;stkvar	_exp1 @ sp[(-2)+0]
 19055  018E90  0EFE               	movlw	-2
 19056  018E92  0060  F027  FFE3   	movff	btemp+8,plusw1
 19057  018E98  0EFE               	movlw	-2
 19058  018E9A  50E3               	movf	plusw1,w,c
 19059  018E9C  A4D8               	btfss	status,2,c
 19060  018E9E  D006               	goto	l8644
 19061  018EA0                     u7230:
 19062  018EA0  0E00               	movlw	0
 19063  018EA2  6E01               	movwf	btemp^0,c
 19064  018EA4  6A02               	clrf	(btemp+1)^0,c
 19065  018EA6  6A03               	clrf	(btemp+2)^0,c
 19066  018EA8  6A04               	clrf	(btemp+3)^0,c
 19067  018EAA  D08B               	goto	l2692
 19068  018EAC                     l8644:
 19069                           
 19070                           ;stkvar	_f1 @ sp[(-2)+-4]
 19071  018EAC  0EFA               	movlw	-6
 19072  018EAE  006F FF8C  F009    	movff	plusw1,btemp+8
 19073  018EB4  0EFB               	movlw	-5
 19074  018EB6  006F FF8C  F00A    	movff	plusw1,btemp+9
 19075  018EBC  0EFC               	movlw	-4
 19076  018EBE  006F FF8C  F00B    	movff	plusw1,btemp+10
 19077  018EC4  0EFD               	movlw	-3
 19078  018EC6  006F FF8C  F00C    	movff	plusw1,btemp+11
 19079  018ECC  0E20               	movlw	32
 19080  018ECE  D005               	goto	u7240
 19081  018ED0                     u7245:
 19082  018ED0  90D8               	bcf	status,0,c
 19083  018ED2  320C               	rrcf	(btemp+11)^0,f,c
 19084  018ED4  320B               	rrcf	(btemp+10)^0,f,c
 19085  018ED6  320A               	rrcf	(btemp+9)^0,f,c
 19086  018ED8  3209               	rrcf	(btemp+8)^0,f,c
 19087  018EDA                     u7240:
 19088  018EDA  2EE8               	decfsz	wreg,f,c
 19089  018EDC  D7F9               	goto	u7245
 19090                           
 19091                           ;stkvar	_sign1 @ sp[(-2)+1]
 19092  018EDE  0EFF               	movlw	-1
 19093  018EE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 19094                           
 19095                           ;stkvar	_f1 @ sp[(-2)+-4]
 19096  018EE6  0EFC               	movlw	-4
 19097  018EE8  8EE3               	bsf	plusw1,7,c
 19098                           
 19099                           ;stkvar	_f1 @ sp[(-2)+-4]
 19100  018EEA  50E1               	movf	fsr1l,w,c
 19101  018EEC  0FFA               	addlw	-6
 19102  018EEE  6ED9               	movwf	fsr2l,c
 19103  018EF0  50E2               	movf	fsr1h,w,c
 19104  018EF2  6EDA               	movwf	fsr2h,c
 19105  018EF4  0EFF               	movlw	255
 19106  018EF6  22DA               	addwfc	fsr2h,f,c
 19107  018EF8  0EFF               	movlw	255
 19108  018EFA  16DE               	andwf	postinc2,f,c
 19109  018EFC  0EFF               	movlw	255
 19110  018EFE  16DE               	andwf	postinc2,f,c
 19111  018F00  0EFF               	movlw	255
 19112  018F02  16DE               	andwf	postinc2,f,c
 19113  018F04  0E00               	movlw	0
 19114  018F06  16DE               	andwf	postinc2,f,c
 19115                           
 19116                           ;stkvar	_exp1 @ sp[(-2)+0]
 19117  018F08  0EFE               	movlw	-2
 19118  018F0A  006F FF8C  F001    	movff	plusw1,btemp
 19119  018F10  0E96               	movlw	150
 19120  018F12  5E01               	subwf	btemp^0,f,c
 19121  018F14  0EFE               	movlw	-2
 19122  018F16  0060  F007  FFE3   	movff	btemp,plusw1
 19123                           
 19124                           ;stkvar	_exp1 @ sp[(-2)+0]
 19125  018F1C  0EFE               	movlw	-2
 19126  018F1E  AEE3               	btfss	plusw1,7,c
 19127  018F20  D014               	goto	l8662
 19128                           
 19129                           ;stkvar	_exp1 @ sp[(-2)+0]
 19130  018F22  0EFE               	movlw	-2
 19131  018F24  50E3               	movf	plusw1,w,c
 19132  018F26  0A80               	xorlw	128
 19133  018F28  0F97               	addlw	151
 19134  018F2A  A0D8               	btfss	status,0,c
 19135  018F2C  D7B9               	goto	u7230
 19136  018F2E                     l8660:
 19137                           
 19138                           ;stkvar	_f1 @ sp[(-2)+-4]
 19139  018F2E  90D8               	bcf	status,0,c
 19140  018F30  0EFD               	movlw	-3
 19141  018F32  32E3               	rrcf	plusw1,f,c
 19142  018F34  0EFC               	movlw	-4
 19143  018F36  32E3               	rrcf	plusw1,f,c
 19144  018F38  0EFB               	movlw	-5
 19145  018F3A  32E3               	rrcf	plusw1,f,c
 19146  018F3C  0EFA               	movlw	-6
 19147  018F3E  32E3               	rrcf	plusw1,f,c
 19148                           
 19149                           ;stkvar	_exp1 @ sp[(-2)+0]
 19150  018F40  0EFE               	movlw	-2
 19151  018F42  2AE3               	incf	plusw1,f,c
 19152  018F44  B4D8               	btfsc	status,2,c
 19153  018F46  D018               	goto	u7290
 19154  018F48  D7F2               	goto	l8660
 19155  018F4A                     l8662:
 19156                           
 19157                           ;stkvar	_exp1 @ sp[(-2)+0]
 19158  018F4A  0EFE               	movlw	-2
 19159  018F4C  006F FF8C  F001    	movff	plusw1,btemp
 19160  018F52  0E1F               	movlw	31
 19161  018F54  6401               	cpfsgt	btemp^0,c
 19162  018F56  D00C               	goto	l8670
 19163  018F58  D7A3               	goto	u7230
 19164  018F5A                     l8668:
 19165                           
 19166                           ;stkvar	_f1 @ sp[(-2)+-4]
 19167  018F5A  90D8               	bcf	status,0,c
 19168  018F5C  0EFA               	movlw	-6
 19169  018F5E  36E3               	rlcf	plusw1,f,c
 19170  018F60  0EFB               	movlw	-5
 19171  018F62  36E3               	rlcf	plusw1,f,c
 19172  018F64  0EFC               	movlw	-4
 19173  018F66  36E3               	rlcf	plusw1,f,c
 19174  018F68  0EFD               	movlw	-3
 19175  018F6A  36E3               	rlcf	plusw1,f,c
 19176                           
 19177                           ;stkvar	_exp1 @ sp[(-2)+0]
 19178  018F6C  0EFE               	movlw	-2
 19179  018F6E  06E3               	decf	plusw1,f,c
 19180  018F70                     l8670:
 19181                           
 19182                           ;stkvar	_exp1 @ sp[(-2)+0]
 19183  018F70  0EFE               	movlw	-2
 19184  018F72  50E3               	movf	plusw1,w,c
 19185  018F74  A4D8               	btfss	status,2,c
 19186  018F76  D7F1               	goto	l8668
 19187  018F78                     u7290:
 19188                           
 19189                           ;stkvar	_sign1 @ sp[(-2)+1]
 19190  018F78  0EFF               	movlw	-1
 19191  018F7A  50E3               	movf	plusw1,w,c
 19192  018F7C  B4D8               	btfsc	status,2,c
 19193  018F7E  D011               	goto	u7310
 19194                           
 19195                           ;stkvar	_f1 @ sp[(-2)+-4]
 19196                           ;stkvar	_f1 @ sp[(-2)+-4]
 19197  018F80  0EFA               	movlw	-6
 19198  018F82  6CE3               	negf	plusw1,c
 19199  018F84  0EFB               	movlw	-5
 19200  018F86  1EE3               	comf	plusw1,f,c
 19201  018F88  0EFC               	movlw	-4
 19202  018F8A  1EE3               	comf	plusw1,f,c
 19203  018F8C  0EFD               	movlw	-3
 19204  018F8E  1EE3               	comf	plusw1,f,c
 19205  018F90  E308               	bnc	u7310
 19206  018F92  0EFB               	movlw	-5
 19207  018F94  2AE3               	incf	plusw1,f,c
 19208  018F96  E305               	bnc	u7310
 19209  018F98  0EFC               	movlw	-4
 19210  018F9A  2AE3               	incf	plusw1,f,c
 19211  018F9C  E302               	bnc	u7310
 19212  018F9E  0EFD               	movlw	-3
 19213  018FA0  2AE3               	incf	plusw1,f,c
 19214  018FA2                     u7310:
 19215                           
 19216                           ;stkvar	_f1 @ sp[(-2)+-4]
 19217  018FA2  0EFA               	movlw	-6
 19218  018FA4  006F FF8C  F001    	movff	plusw1,btemp
 19219  018FAA  0EFB               	movlw	-5
 19220  018FAC  006F FF8C  F002    	movff	plusw1,btemp+1
 19221  018FB2  0EFC               	movlw	-4
 19222  018FB4  006F FF8C  F003    	movff	plusw1,btemp+2
 19223  018FBA  0EFD               	movlw	-3
 19224  018FBC  006F FF8C  F004    	movff	plusw1,btemp+3
 19225  018FC2                     l2692:
 19226                           
 19227                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19228  018FC2  0EFA               	movlw	250
 19229  018FC4  26E1               	addwf	fsr1l,f,c
 19230  018FC6  0EFF               	movlw	255
 19231  018FC8  22E2               	addwfc	fsr1h,f,c
 19232  018FCA  0012               	return		;funcret
 19233  018FCC                     __end_of___fltol:
 19234                           	opt callstack 0
 19235                           
 19236 ;; *************** function ___flneg *****************
 19237 ;; Defined at:
 19238 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 19239 ;; Parameters:    Size  Location     Type
 19240 ;;  f1              4  [STACK] long 
 19241 ;; Auto vars:     Size  Location     Type
 19242 ;;		None
 19243 ;; Return value:  Size  Location     Type
 19244 ;;                  4  [STACK] long 
 19245 ;; Registers used:
 19246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19247 ;; Tracked objects:
 19248 ;;		On entry : 0/0
 19249 ;;		On exit  : 0/0
 19250 ;;		Unchanged: 0/0
 19251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19256 ;;Total ram usage:        0 bytes
 19257 ;; Hardware stack levels used:    1
 19258 ;; Hardware stack levels required when called:   15
 19259 ;; This function calls:
 19260 ;;		Nothing
 19261 ;; This function is called by:
 19262 ;;		_calc_bsoc
 19263 ;;		_efgtoa
 19264 ;; This function uses a reentrant model
 19265 ;;
 19266                           
 19267                           	psect	text64
 19268  01B468                     __ptext64:
 19269                           	opt callstack 0
 19270  01B468                     ___flneg:
 19271                           	opt callstack 0
 19272                           
 19273                           ;stkvar	_f1 @ sp[(0)+-4]
 19274                           
 19275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19276                           ;incstack = 0
 19277 ;; hardware stack exceeded
 19278  01B468  0EFC               	movlw	-4
 19279  01B46A  50E3               	movf	plusw1,w,c
 19280  01B46C  E10A               	bnz	u7210
 19281  01B46E  0EFD               	movlw	-3
 19282  01B470  50E3               	movf	plusw1,w,c
 19283  01B472  E107               	bnz	u7210
 19284  01B474  0EFE               	movlw	-2
 19285  01B476  50E3               	movf	plusw1,w,c
 19286  01B478  E104               	bnz	u7210
 19287  01B47A  0EFF               	movlw	-1
 19288  01B47C  50E3               	movf	plusw1,w,c
 19289  01B47E  B4D8               	btfsc	status,2,c
 19290  01B480  D002               	goto	l8634
 19291  01B482                     u7210:
 19292                           
 19293                           ;stkvar	_f1 @ sp[(0)+-4]
 19294  01B482  0EFF               	movlw	-1
 19295  01B484  7EE3               	btg	plusw1,7,c
 19296  01B486                     l8634:
 19297                           
 19298                           ;stkvar	_f1 @ sp[(0)+-4]
 19299  01B486  0EFC               	movlw	-4
 19300  01B488  006F FF8C  F001    	movff	plusw1,btemp
 19301  01B48E  0EFD               	movlw	-3
 19302  01B490  006F FF8C  F002    	movff	plusw1,btemp+1
 19303  01B496  0EFE               	movlw	-2
 19304  01B498  006F FF8C  F003    	movff	plusw1,btemp+2
 19305  01B49E  0EFF               	movlw	-1
 19306  01B4A0  006F FF8C  F004    	movff	plusw1,btemp+3
 19307                           
 19308                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19309  01B4A6  52E5               	movf	postdec1,f,c
 19310  01B4A8  52E5               	movf	postdec1,f,c
 19311  01B4AA  52E5               	movf	postdec1,f,c
 19312  01B4AC  52E5               	movf	postdec1,f,c
 19313  01B4AE  0012               	return		;funcret
 19314  01B4B0                     __end_of___flneg:
 19315                           	opt callstack 0
 19316                           
 19317 ;; *************** function ___fleq *****************
 19318 ;; Defined at:
 19319 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 19320 ;; Parameters:    Size  Location     Type
 19321 ;;  ff1             4  [STACK] long 
 19322 ;;  ff2             4  [STACK] long 
 19323 ;; Auto vars:     Size  Location     Type
 19324 ;;		None
 19325 ;; Return value:  Size  Location     Type
 19326 ;;		None               void
 19327 ;; Registers used:
 19328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19329 ;; Tracked objects:
 19330 ;;		On entry : 0/0
 19331 ;;		On exit  : 0/0
 19332 ;;		Unchanged: 0/0
 19333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19338 ;;Total ram usage:        0 bytes
 19339 ;; Hardware stack levels used:    1
 19340 ;; Hardware stack levels required when called:   15
 19341 ;; This function calls:
 19342 ;;		Nothing
 19343 ;; This function is called by:
 19344 ;;		_efgtoa
 19345 ;; This function uses a reentrant model
 19346 ;;
 19347                           
 19348                           	psect	text65
 19349  01A462                     __ptext65:
 19350                           	opt callstack 0
 19351  01A462                     ___fleq:
 19352                           	opt callstack 0
 19353                           
 19354                           ;stkvar	_ff1 @ sp[(0)+-4]
 19355                           
 19356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19357                           ;incstack = 0
 19358 ;; hardware stack exceeded
 19359  01A462  50E1               	movf	fsr1l,w,c
 19360  01A464  0FFC               	addlw	-4
 19361  01A466  6ED9               	movwf	fsr2l,c
 19362  01A468  50E2               	movf	fsr1h,w,c
 19363  01A46A  6EDA               	movwf	fsr2h,c
 19364  01A46C  0EFF               	movlw	255
 19365  01A46E  22DA               	addwfc	fsr2h,f,c
 19366  01A470  0E00               	movlw	0
 19367  01A472  14DE               	andwf	postinc2,w,c
 19368  01A474  6E09               	movwf	(btemp+8)^0,c
 19369  01A476  0E00               	movlw	0
 19370  01A478  14DE               	andwf	postinc2,w,c
 19371  01A47A  6E0A               	movwf	(btemp+9)^0,c
 19372  01A47C  0E80               	movlw	128
 19373  01A47E  14DE               	andwf	postinc2,w,c
 19374  01A480  6E0B               	movwf	(btemp+10)^0,c
 19375  01A482  0E7F               	movlw	127
 19376  01A484  14DE               	andwf	postinc2,w,c
 19377  01A486  6E0C               	movwf	(btemp+11)^0,c
 19378  01A488  5009               	movf	(btemp+8)^0,w,c
 19379  01A48A  100A               	iorwf	(btemp+9)^0,w,c
 19380  01A48C  100B               	iorwf	(btemp+10)^0,w,c
 19381  01A48E  100C               	iorwf	(btemp+11)^0,w,c
 19382  01A490  A4D8               	btfss	status,2,c
 19383  01A492  D008               	goto	l8592
 19384                           
 19385                           ;stkvar	_ff1 @ sp[(0)+-4]
 19386  01A494  0EFC               	movlw	-4
 19387  01A496  6AE3               	clrf	plusw1,c
 19388  01A498  0EFD               	movlw	-3
 19389  01A49A  6AE3               	clrf	plusw1,c
 19390  01A49C  0EFE               	movlw	-2
 19391  01A49E  6AE3               	clrf	plusw1,c
 19392  01A4A0  0EFF               	movlw	-1
 19393  01A4A2  6AE3               	clrf	plusw1,c
 19394  01A4A4                     l8592:
 19395                           
 19396                           ;stkvar	_ff2 @ sp[(0)+-8]
 19397  01A4A4  50E1               	movf	fsr1l,w,c
 19398  01A4A6  0FF8               	addlw	-8
 19399  01A4A8  6ED9               	movwf	fsr2l,c
 19400  01A4AA  50E2               	movf	fsr1h,w,c
 19401  01A4AC  6EDA               	movwf	fsr2h,c
 19402  01A4AE  0EFF               	movlw	255
 19403  01A4B0  22DA               	addwfc	fsr2h,f,c
 19404  01A4B2  0E00               	movlw	0
 19405  01A4B4  14DE               	andwf	postinc2,w,c
 19406  01A4B6  6E09               	movwf	(btemp+8)^0,c
 19407  01A4B8  0E00               	movlw	0
 19408  01A4BA  14DE               	andwf	postinc2,w,c
 19409  01A4BC  6E0A               	movwf	(btemp+9)^0,c
 19410  01A4BE  0E80               	movlw	128
 19411  01A4C0  14DE               	andwf	postinc2,w,c
 19412  01A4C2  6E0B               	movwf	(btemp+10)^0,c
 19413  01A4C4  0E7F               	movlw	127
 19414  01A4C6  14DE               	andwf	postinc2,w,c
 19415  01A4C8  6E0C               	movwf	(btemp+11)^0,c
 19416  01A4CA  5009               	movf	(btemp+8)^0,w,c
 19417  01A4CC  100A               	iorwf	(btemp+9)^0,w,c
 19418  01A4CE  100B               	iorwf	(btemp+10)^0,w,c
 19419  01A4D0  100C               	iorwf	(btemp+11)^0,w,c
 19420  01A4D2  A4D8               	btfss	status,2,c
 19421  01A4D4  D008               	goto	l8596
 19422                           
 19423                           ;stkvar	_ff2 @ sp[(0)+-8]
 19424  01A4D6  0EF8               	movlw	-8
 19425  01A4D8  6AE3               	clrf	plusw1,c
 19426  01A4DA  0EF9               	movlw	-7
 19427  01A4DC  6AE3               	clrf	plusw1,c
 19428  01A4DE  0EFA               	movlw	-6
 19429  01A4E0  6AE3               	clrf	plusw1,c
 19430  01A4E2  0EFB               	movlw	-5
 19431  01A4E4  6AE3               	clrf	plusw1,c
 19432  01A4E6                     l8596:
 19433                           
 19434                           ;stkvar	_ff2 @ sp[(0)+-8]
 19435                           ;stkvar	_ff1 @ sp[(0)+-4]
 19436  01A4E6  50E1               	movf	fsr1l,w,c
 19437  01A4E8  0FFC               	addlw	-4
 19438  01A4EA  6ED9               	movwf	fsr2l,c
 19439  01A4EC  50E2               	movf	fsr1h,w,c
 19440  01A4EE  6EDA               	movwf	fsr2h,c
 19441  01A4F0  0EFF               	movlw	255
 19442  01A4F2  22DA               	addwfc	fsr2h,f,c
 19443  01A4F4  0EF8               	movlw	-8
 19444  01A4F6  50E3               	movf	plusw1,w,c
 19445  01A4F8  18DE               	xorwf	postinc2,w,c
 19446  01A4FA  E10D               	bnz	u7150
 19447  01A4FC  0EF9               	movlw	-7
 19448  01A4FE  50E3               	movf	plusw1,w,c
 19449  01A500  18DE               	xorwf	postinc2,w,c
 19450  01A502  E109               	bnz	u7150
 19451  01A504  0EFA               	movlw	-6
 19452  01A506  50E3               	movf	plusw1,w,c
 19453  01A508  18DE               	xorwf	postinc2,w,c
 19454  01A50A  E105               	bnz	u7150
 19455  01A50C  0EFB               	movlw	-5
 19456  01A50E  50E3               	movf	plusw1,w,c
 19457  01A510  18DE               	xorwf	postinc2,w,c
 19458  01A512  B4D8               	btfsc	status,2,c
 19459  01A514  D002               	goto	l8600
 19460  01A516                     u7150:
 19461  01A516  9001               	bcf	btemp& (0+255),0,c
 19462  01A518  D001               	goto	l2654
 19463  01A51A                     l8600:
 19464  01A51A  8001               	bsf	btemp& (0+255),0,c
 19465  01A51C                     l2654:
 19466                           
 19467                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19468  01A51C  0EF8               	movlw	248
 19469  01A51E  26E1               	addwf	fsr1l,f,c
 19470  01A520  0EFF               	movlw	255
 19471  01A522  22E2               	addwfc	fsr1h,f,c
 19472  01A524  0012               	return		;funcret
 19473  01A526                     __end_of___fleq:
 19474                           	opt callstack 0
 19475                           
 19476 ;; *************** function ___awmod *****************
 19477 ;; Defined at:
 19478 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19479 ;; Parameters:    Size  Location     Type
 19480 ;;  dividend        2  [STACK] int 
 19481 ;;  divisor         2  [STACK] int 
 19482 ;; Auto vars:     Size  Location     Type
 19483 ;;  sign            1  [STACK] unsigned char 
 19484 ;;  counter         1  [STACK] unsigned char 
 19485 ;; Return value:  Size  Location     Type
 19486 ;;                  2  [STACK] int 
 19487 ;; Registers used:
 19488 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19489 ;; Tracked objects:
 19490 ;;		On entry : 0/0
 19491 ;;		On exit  : 0/0
 19492 ;;		Unchanged: 0/0
 19493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19498 ;;Total ram usage:        0 bytes
 19499 ;; Hardware stack levels used:    1
 19500 ;; Hardware stack levels required when called:   15
 19501 ;; This function calls:
 19502 ;;		Nothing
 19503 ;; This function is called by:
 19504 ;;		_efgtoa
 19505 ;; This function uses a reentrant model
 19506 ;;
 19507                           
 19508                           	psect	text66
 19509  0199CE                     __ptext66:
 19510                           	opt callstack 0
 19511  0199CE                     ___awmod:
 19512                           	opt callstack 0
 19513                           
 19514                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19515  0199CE  52E6               	movf	postinc1,f,c
 19516  0199D0  52E6               	movf	postinc1,f,c
 19517                           
 19518                           ;stkvar	_sign @ sp[(-2)+0]
 19519                           
 19520                           ;incstack = 0
 19521 ;; hardware stack exceeded
 19522  0199D2  0EFE               	movlw	-2
 19523  0199D4  6AE3               	clrf	plusw1,c
 19524                           
 19525                           ;stkvar	_dividend @ sp[(-2)+-2]
 19526  0199D6  0EFD               	movlw	-3
 19527  0199D8  AEE3               	btfss	plusw1,7,c
 19528  0199DA  D009               	goto	l8558
 19529                           
 19530                           ;stkvar	_dividend @ sp[(-2)+-2]
 19531                           ;stkvar	_dividend @ sp[(-2)+-2]
 19532  0199DC  0EFC               	movlw	-4
 19533  0199DE  6CE3               	negf	plusw1,c
 19534  0199E0  0EFD               	movlw	-3
 19535  0199E2  1EE3               	comf	plusw1,f,c
 19536  0199E4  B0D8               	btfsc	status,0,c
 19537  0199E6  2AE3               	incf	plusw1,f,c
 19538                           
 19539                           ;stkvar	_sign @ sp[(-2)+0]
 19540  0199E8  0EFE               	movlw	-2
 19541  0199EA  6AE3               	clrf	plusw1,c
 19542  0199EC  2AE3               	incf	plusw1,f,c
 19543  0199EE                     l8558:
 19544                           
 19545                           ;stkvar	_divisor @ sp[(-2)+-4]
 19546  0199EE  0EFB               	movlw	-5
 19547  0199F0  AEE3               	btfss	plusw1,7,c
 19548  0199F2  D006               	goto	l8562
 19549                           
 19550                           ;stkvar	_divisor @ sp[(-2)+-4]
 19551                           ;stkvar	_divisor @ sp[(-2)+-4]
 19552  0199F4  0EFA               	movlw	-6
 19553  0199F6  6CE3               	negf	plusw1,c
 19554  0199F8  0EFB               	movlw	-5
 19555  0199FA  1EE3               	comf	plusw1,f,c
 19556  0199FC  B0D8               	btfsc	status,0,c
 19557  0199FE  2AE3               	incf	plusw1,f,c
 19558  019A00                     l8562:
 19559                           
 19560                           ;stkvar	_divisor @ sp[(-2)+-4]
 19561  019A00  0EFA               	movlw	-6
 19562  019A02  006F FF8C  F001    	movff	plusw1,btemp
 19563  019A08  0EFB               	movlw	-5
 19564  019A0A  50E3               	movf	plusw1,w,c
 19565  019A0C  1001               	iorwf	btemp^0,w,c
 19566  019A0E  B4D8               	btfsc	status,2,c
 19567  019A10  D053               	goto	u7110
 19568                           
 19569                           ;stkvar	_counter @ sp[(-2)+1]
 19570  019A12  0EFF               	movlw	-1
 19571  019A14  6AE3               	clrf	plusw1,c
 19572  019A16  D012               	goto	L22
 19573  019A18                     l8566:
 19574                           
 19575                           ;stkvar	_divisor @ sp[(-2)+-4]
 19576  019A18  0EFA               	movlw	-6
 19577  019A1A  50E3               	movf	plusw1,w,c
 19578  019A1C  90D8               	bcf	status,0,c
 19579  019A1E  34E8               	rlcf	wreg,w,c
 19580  019A20  6E01               	movwf	btemp^0,c
 19581  019A22  0EFA               	movlw	-6
 19582  019A24  0060  F007  FFE3   	movff	btemp,plusw1
 19583  019A2A  0EFB               	movlw	-5
 19584  019A2C  50E3               	movf	plusw1,w,c
 19585  019A2E  34E8               	rlcf	wreg,w,c
 19586  019A30  6E01               	movwf	btemp^0,c
 19587  019A32  0EFB               	movlw	-5
 19588  019A34  0060  F007  FFE3   	movff	btemp,plusw1
 19589                           
 19590                           ;stkvar	_counter @ sp[(-2)+1]
 19591  019A3A  0EFF               	movlw	-1
 19592  019A3C                     L22:
 19593  019A3C  2AE3               	incf	plusw1,f,c
 19594                           
 19595                           ;stkvar	_divisor @ sp[(-2)+-4]
 19596  019A3E  0EFB               	movlw	-5
 19597  019A40  AEE3               	btfss	plusw1,7,c
 19598  019A42  D7EA               	goto	l8566
 19599  019A44                     u7090:
 19600                           
 19601                           ;stkvar	_divisor @ sp[(-2)+-4]
 19602  019A44  0EFA               	movlw	-6
 19603  019A46  006F FF8C  F00B    	movff	plusw1,btemp+10
 19604  019A4C  0EFB               	movlw	-5
 19605  019A4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19606                           
 19607                           ;stkvar	_dividend @ sp[(-2)+-2]
 19608  019A54  0EFC               	movlw	-4
 19609  019A56  006F FF8C  F009    	movff	plusw1,btemp+8
 19610  019A5C  0EFD               	movlw	-3
 19611  019A5E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19612  019A64  500B               	movf	(btemp+10)^0,w,c
 19613  019A66  5C09               	subwf	(btemp+8)^0,w,c
 19614  019A68  500C               	movf	(btemp+11)^0,w,c
 19615  019A6A  580A               	subwfb	(btemp+9)^0,w,c
 19616  019A6C  A0D8               	btfss	status,0,c
 19617  019A6E  D014               	goto	l8576
 19618                           
 19619                           ;stkvar	_divisor @ sp[(-2)+-4]
 19620                           ;stkvar	_dividend @ sp[(-2)+-2]
 19621  019A70  0EFC               	movlw	-4
 19622  019A72  50E3               	movf	plusw1,w,c
 19623  019A74  6E01               	movwf	btemp^0,c
 19624  019A76  0EFA               	movlw	-6
 19625  019A78  50E3               	movf	plusw1,w,c
 19626  019A7A  5E01               	subwf	btemp^0,f,c
 19627  019A7C  0EFC               	movlw	-4
 19628  019A7E  0060  F007  FFE3   	movff	btemp,plusw1
 19629  019A84  0EFD               	movlw	-3
 19630  019A86  50E3               	movf	plusw1,w,c
 19631  019A88  6E01               	movwf	btemp^0,c
 19632  019A8A  0EFB               	movlw	-5
 19633  019A8C  50E3               	movf	plusw1,w,c
 19634  019A8E  5A01               	subwfb	btemp^0,f,c
 19635  019A90  0EFD               	movlw	-3
 19636  019A92  0060  F007  FFE3   	movff	btemp,plusw1
 19637  019A98                     l8576:
 19638                           
 19639                           ;stkvar	_divisor @ sp[(-2)+-4]
 19640  019A98  90D8               	bcf	status,0,c
 19641  019A9A  0EFB               	movlw	-5
 19642  019A9C  32E3               	rrcf	plusw1,f,c
 19643  019A9E  0EFA               	movlw	-6
 19644  019AA0  32E3               	rrcf	plusw1,f,c
 19645                           
 19646                           ;stkvar	_counter @ sp[(-2)+1]
 19647  019AA2  0EFF               	movlw	-1
 19648  019AA4  50E3               	movf	plusw1,w,c
 19649  019AA6  6E01               	movwf	btemp^0,c
 19650  019AA8  0E01               	movlw	1
 19651  019AAA  5E01               	subwf	btemp^0,f,c
 19652  019AAC  0EFF               	movlw	-1
 19653  019AAE  0060  F007  FFE3   	movff	btemp,plusw1
 19654  019AB4  A4D8               	btfss	status,2,c
 19655  019AB6  D7C6               	goto	u7090
 19656  019AB8                     u7110:
 19657                           
 19658                           ;stkvar	_sign @ sp[(-2)+0]
 19659  019AB8  0EFE               	movlw	-2
 19660  019ABA  50E3               	movf	plusw1,w,c
 19661  019ABC  B4D8               	btfsc	status,2,c
 19662  019ABE  D006               	goto	l8584
 19663                           
 19664                           ;stkvar	_dividend @ sp[(-2)+-2]
 19665                           ;stkvar	_dividend @ sp[(-2)+-2]
 19666  019AC0  0EFC               	movlw	-4
 19667  019AC2  6CE3               	negf	plusw1,c
 19668  019AC4  0EFD               	movlw	-3
 19669  019AC6  1EE3               	comf	plusw1,f,c
 19670  019AC8  B0D8               	btfsc	status,0,c
 19671  019ACA  2AE3               	incf	plusw1,f,c
 19672  019ACC                     l8584:
 19673                           
 19674                           ;stkvar	_dividend @ sp[(-2)+-2]
 19675  019ACC  0EFC               	movlw	-4
 19676  019ACE  006F FF8C  F001    	movff	plusw1,btemp
 19677  019AD4  0EFD               	movlw	-3
 19678  019AD6  006F FF8C  F002    	movff	plusw1,btemp+1
 19679                           
 19680                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19681  019ADC  0EFA               	movlw	250
 19682  019ADE  26E1               	addwf	fsr1l,f,c
 19683  019AE0  0EFF               	movlw	255
 19684  019AE2  22E2               	addwfc	fsr1h,f,c
 19685  019AE4  0012               	return		;funcret
 19686  019AE6                     __end_of___awmod:
 19687                           	opt callstack 0
 19688                           
 19689 ;; *************** function ___awdiv *****************
 19690 ;; Defined at:
 19691 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19692 ;; Parameters:    Size  Location     Type
 19693 ;;  dividend        2  [STACK] int 
 19694 ;;  divisor         2  [STACK] int 
 19695 ;; Auto vars:     Size  Location     Type
 19696 ;;  quotient        2  [STACK] int 
 19697 ;;  sign            1  [STACK] unsigned char 
 19698 ;;  counter         1  [STACK] unsigned char 
 19699 ;; Return value:  Size  Location     Type
 19700 ;;                  2  [STACK] int 
 19701 ;; Registers used:
 19702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19712 ;;Total ram usage:        0 bytes
 19713 ;; Hardware stack levels used:    1
 19714 ;; Hardware stack levels required when called:   15
 19715 ;; This function calls:
 19716 ;;		Nothing
 19717 ;; This function is called by:
 19718 ;;		_efgtoa
 19719 ;; This function uses a reentrant model
 19720 ;;
 19721                           
 19722                           	psect	text67
 19723  019292                     __ptext67:
 19724                           	opt callstack 0
 19725  019292                     ___awdiv:
 19726                           	opt callstack 0
 19727                           
 19728                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19729  019292  52E6               	movf	postinc1,f,c
 19730  019294  52E6               	movf	postinc1,f,c
 19731  019296  52E6               	movf	postinc1,f,c
 19732  019298  52E6               	movf	postinc1,f,c
 19733                           
 19734                           ;stkvar	_sign @ sp[(-4)+2]
 19735                           
 19736                           ;incstack = 0
 19737 ;; hardware stack exceeded
 19738  01929A  0EFE               	movlw	-2
 19739  01929C  6AE3               	clrf	plusw1,c
 19740                           
 19741                           ;stkvar	_divisor @ sp[(-4)+-4]
 19742  01929E  0EF9               	movlw	-7
 19743  0192A0  AEE3               	btfss	plusw1,7,c
 19744  0192A2  D009               	goto	l8512
 19745                           
 19746                           ;stkvar	_divisor @ sp[(-4)+-4]
 19747                           ;stkvar	_divisor @ sp[(-4)+-4]
 19748  0192A4  0EF8               	movlw	-8
 19749  0192A6  6CE3               	negf	plusw1,c
 19750  0192A8  0EF9               	movlw	-7
 19751  0192AA  1EE3               	comf	plusw1,f,c
 19752  0192AC  B0D8               	btfsc	status,0,c
 19753  0192AE  2AE3               	incf	plusw1,f,c
 19754                           
 19755                           ;stkvar	_sign @ sp[(-4)+2]
 19756  0192B0  0EFE               	movlw	-2
 19757  0192B2  6AE3               	clrf	plusw1,c
 19758  0192B4  2AE3               	incf	plusw1,f,c
 19759  0192B6                     l8512:
 19760                           
 19761                           ;stkvar	_dividend @ sp[(-4)+-2]
 19762  0192B6  0EFB               	movlw	-5
 19763  0192B8  AEE3               	btfss	plusw1,7,c
 19764  0192BA  D008               	goto	l8518
 19765                           
 19766                           ;stkvar	_dividend @ sp[(-4)+-2]
 19767                           ;stkvar	_dividend @ sp[(-4)+-2]
 19768  0192BC  0EFA               	movlw	-6
 19769  0192BE  6CE3               	negf	plusw1,c
 19770  0192C0  0EFB               	movlw	-5
 19771  0192C2  1EE3               	comf	plusw1,f,c
 19772  0192C4  B0D8               	btfsc	status,0,c
 19773  0192C6  2AE3               	incf	plusw1,f,c
 19774                           
 19775                           ;stkvar	_sign @ sp[(-4)+2]
 19776  0192C8  0EFE               	movlw	-2
 19777  0192CA  70E3               	btg	plusw1,0,c
 19778  0192CC                     l8518:
 19779                           
 19780                           ;stkvar	_quotient @ sp[(-4)+0]
 19781  0192CC  0EFC               	movlw	-4
 19782  0192CE  6AE3               	clrf	plusw1,c
 19783  0192D0  0EFD               	movlw	-3
 19784  0192D2  6AE3               	clrf	plusw1,c
 19785                           
 19786                           ;stkvar	_divisor @ sp[(-4)+-4]
 19787  0192D4  0EF8               	movlw	-8
 19788  0192D6  006F FF8C  F001    	movff	plusw1,btemp
 19789  0192DC  0EF9               	movlw	-7
 19790  0192DE  50E3               	movf	plusw1,w,c
 19791  0192E0  1001               	iorwf	btemp^0,w,c
 19792  0192E2  B4D8               	btfsc	status,2,c
 19793  0192E4  D066               	goto	u7040
 19794                           
 19795                           ;stkvar	_counter @ sp[(-4)+3]
 19796  0192E6  0EFF               	movlw	-1
 19797  0192E8  6AE3               	clrf	plusw1,c
 19798  0192EA  D012               	goto	L23
 19799  0192EC                     l8524:
 19800                           
 19801                           ;stkvar	_divisor @ sp[(-4)+-4]
 19802  0192EC  0EF8               	movlw	-8
 19803  0192EE  50E3               	movf	plusw1,w,c
 19804  0192F0  90D8               	bcf	status,0,c
 19805  0192F2  34E8               	rlcf	wreg,w,c
 19806  0192F4  6E01               	movwf	btemp^0,c
 19807  0192F6  0EF8               	movlw	-8
 19808  0192F8  0060  F007  FFE3   	movff	btemp,plusw1
 19809  0192FE  0EF9               	movlw	-7
 19810  019300  50E3               	movf	plusw1,w,c
 19811  019302  34E8               	rlcf	wreg,w,c
 19812  019304  6E01               	movwf	btemp^0,c
 19813  019306  0EF9               	movlw	-7
 19814  019308  0060  F007  FFE3   	movff	btemp,plusw1
 19815                           
 19816                           ;stkvar	_counter @ sp[(-4)+3]
 19817  01930E  0EFF               	movlw	-1
 19818  019310                     L23:
 19819  019310  2AE3               	incf	plusw1,f,c
 19820                           
 19821                           ;stkvar	_divisor @ sp[(-4)+-4]
 19822  019312  0EF9               	movlw	-7
 19823  019314  AEE3               	btfss	plusw1,7,c
 19824  019316  D7EA               	goto	l8524
 19825  019318                     u7020:
 19826                           
 19827                           ;stkvar	_quotient @ sp[(-4)+0]
 19828  019318  0EFC               	movlw	-4
 19829  01931A  50E3               	movf	plusw1,w,c
 19830  01931C  90D8               	bcf	status,0,c
 19831  01931E  34E8               	rlcf	wreg,w,c
 19832  019320  6E01               	movwf	btemp^0,c
 19833  019322  0EFC               	movlw	-4
 19834  019324  0060  F007  FFE3   	movff	btemp,plusw1
 19835  01932A  0EFD               	movlw	-3
 19836  01932C  50E3               	movf	plusw1,w,c
 19837  01932E  34E8               	rlcf	wreg,w,c
 19838  019330  6E01               	movwf	btemp^0,c
 19839  019332  0EFD               	movlw	-3
 19840  019334  0060  F007  FFE3   	movff	btemp,plusw1
 19841                           
 19842                           ;stkvar	_divisor @ sp[(-4)+-4]
 19843  01933A  0EF8               	movlw	-8
 19844  01933C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19845  019342  0EF9               	movlw	-7
 19846  019344  006F FF8C  F00C    	movff	plusw1,btemp+11
 19847                           
 19848                           ;stkvar	_dividend @ sp[(-4)+-2]
 19849  01934A  0EFA               	movlw	-6
 19850  01934C  006F FF8C  F009    	movff	plusw1,btemp+8
 19851  019352  0EFB               	movlw	-5
 19852  019354  006F FF8C  F00A    	movff	plusw1,btemp+9
 19853  01935A  500B               	movf	(btemp+10)^0,w,c
 19854  01935C  5C09               	subwf	(btemp+8)^0,w,c
 19855  01935E  500C               	movf	(btemp+11)^0,w,c
 19856  019360  580A               	subwfb	(btemp+9)^0,w,c
 19857  019362  A0D8               	btfss	status,0,c
 19858  019364  D016               	goto	l8538
 19859                           
 19860                           ;stkvar	_divisor @ sp[(-4)+-4]
 19861                           ;stkvar	_dividend @ sp[(-4)+-2]
 19862  019366  0EFA               	movlw	-6
 19863  019368  50E3               	movf	plusw1,w,c
 19864  01936A  6E01               	movwf	btemp^0,c
 19865  01936C  0EF8               	movlw	-8
 19866  01936E  50E3               	movf	plusw1,w,c
 19867  019370  5E01               	subwf	btemp^0,f,c
 19868  019372  0EFA               	movlw	-6
 19869  019374  0060  F007  FFE3   	movff	btemp,plusw1
 19870  01937A  0EFB               	movlw	-5
 19871  01937C  50E3               	movf	plusw1,w,c
 19872  01937E  6E01               	movwf	btemp^0,c
 19873  019380  0EF9               	movlw	-7
 19874  019382  50E3               	movf	plusw1,w,c
 19875  019384  5A01               	subwfb	btemp^0,f,c
 19876  019386  0EFB               	movlw	-5
 19877  019388  0060  F007  FFE3   	movff	btemp,plusw1
 19878                           
 19879                           ;stkvar	_quotient @ sp[(-4)+0]
 19880  01938E  0EFC               	movlw	-4
 19881  019390  80E3               	bsf	plusw1,0,c
 19882  019392                     l8538:
 19883                           
 19884                           ;stkvar	_divisor @ sp[(-4)+-4]
 19885  019392  90D8               	bcf	status,0,c
 19886  019394  0EF9               	movlw	-7
 19887  019396  32E3               	rrcf	plusw1,f,c
 19888  019398  0EF8               	movlw	-8
 19889  01939A  32E3               	rrcf	plusw1,f,c
 19890                           
 19891                           ;stkvar	_counter @ sp[(-4)+3]
 19892  01939C  0EFF               	movlw	-1
 19893  01939E  50E3               	movf	plusw1,w,c
 19894  0193A0  6E01               	movwf	btemp^0,c
 19895  0193A2  0E01               	movlw	1
 19896  0193A4  5E01               	subwf	btemp^0,f,c
 19897  0193A6  0EFF               	movlw	-1
 19898  0193A8  0060  F007  FFE3   	movff	btemp,plusw1
 19899  0193AE  A4D8               	btfss	status,2,c
 19900  0193B0  D7B3               	goto	u7020
 19901  0193B2                     u7040:
 19902                           
 19903                           ;stkvar	_sign @ sp[(-4)+2]
 19904  0193B2  0EFE               	movlw	-2
 19905  0193B4  50E3               	movf	plusw1,w,c
 19906  0193B6  B4D8               	btfsc	status,2,c
 19907  0193B8  D006               	goto	l8546
 19908                           
 19909                           ;stkvar	_quotient @ sp[(-4)+0]
 19910                           ;stkvar	_quotient @ sp[(-4)+0]
 19911  0193BA  0EFC               	movlw	-4
 19912  0193BC  6CE3               	negf	plusw1,c
 19913  0193BE  0EFD               	movlw	-3
 19914  0193C0  1EE3               	comf	plusw1,f,c
 19915  0193C2  B0D8               	btfsc	status,0,c
 19916  0193C4  2AE3               	incf	plusw1,f,c
 19917  0193C6                     l8546:
 19918                           
 19919                           ;stkvar	_quotient @ sp[(-4)+0]
 19920  0193C6  0EFC               	movlw	-4
 19921  0193C8  006F FF8C  F001    	movff	plusw1,btemp
 19922  0193CE  0EFD               	movlw	-3
 19923  0193D0  006F FF8C  F002    	movff	plusw1,btemp+1
 19924                           
 19925                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19926  0193D6  0EF8               	movlw	248
 19927  0193D8  26E1               	addwf	fsr1l,f,c
 19928  0193DA  0EFF               	movlw	255
 19929  0193DC  22E2               	addwfc	fsr1h,f,c
 19930  0193DE  0012               	return		;funcret
 19931  0193E0                     __end_of___awdiv:
 19932                           	opt callstack 0
 19933                           
 19934 ;; *************** function _dtoa *****************
 19935 ;; Defined at:
 19936 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19937 ;; Parameters:    Size  Location     Type
 19938 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19939 ;;		 -> f(6), NULL(0), 
 19940 ;;  d               8  [STACK] long long 
 19941 ;; Auto vars:     Size  Location     Type
 19942 ;;  n               8  [STACK] long long 
 19943 ;;  i               2  [STACK] int 
 19944 ;;  s               2  [STACK] int 
 19945 ;;  w               2  [STACK] int 
 19946 ;;  p               2  [STACK] int 
 19947 ;; Return value:  Size  Location     Type
 19948 ;;                  2  [STACK] int 
 19949 ;; Registers used:
 19950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19951 ;; Tracked objects:
 19952 ;;		On entry : 0/0
 19953 ;;		On exit  : 0/0
 19954 ;;		Unchanged: 0/0
 19955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19960 ;;Total ram usage:        0 bytes
 19961 ;; Hardware stack levels used:    1
 19962 ;; Hardware stack levels required when called:   20
 19963 ;; This function calls:
 19964 ;;		___aodiv
 19965 ;;		___aomod
 19966 ;;		_abs
 19967 ;;		_pad
 19968 ;; This function is called by:
 19969 ;;		_vfpfcnvrt
 19970 ;; This function uses a reentrant model
 19971 ;;
 19972                           
 19973                           	psect	text68
 19974  0157DA                     __ptext68:
 19975                           	opt callstack 0
 19976  0157DA                     _dtoa:
 19977                           	opt callstack 0
 19978                           
 19979                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19980  0157DA  0E12               	movlw	18
 19981  0157DC  26E1               	addwf	fsr1l,f,c
 19982  0157DE  0E00               	movlw	0
 19983  0157E0  22E2               	addwfc	fsr1h,f,c
 19984                           
 19985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19986                           ;stkvar	_d @ sp[(-18)+-10]
 19987                           
 19988                           ;incstack = 0
 19989 ;; hardware stack exceeded
 19990  0157E2  0EE4               	movlw	228
 19991  0157E4  24E1               	addwf	fsr1l,w,c
 19992  0157E6  6ED9               	movwf	fsr2l,c
 19993  0157E8  0EFF               	movlw	255
 19994  0157EA  20E2               	addwfc	fsr1h,w,c
 19995  0157EC  6EDA               	movwf	fsr2h,c
 19996                           
 19997                           ;stkvar	_n @ sp[(-18)+2]
 19998  0157EE  0E08               	movlw	8
 19999  0157F0  6E01               	movwf	btemp^0,c
 20000  0157F2  0EF0               	movlw	-16
 20001  0157F4                     us1092999:
 20002  0157F4  006F FF7B FFE3     	movff	postinc2,plusw1
 20003  0157FA  28E8               	incf	wreg,w,c
 20004  0157FC  2E01               	decfsz	btemp^0,f,c
 20005  0157FE  D7FA               	bra	us1092999
 20006                           
 20007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 20008                           ;stkvar	_n @ sp[(-18)+2]
 20009  015800  0EF7               	movlw	-9
 20010  015802  AEE3               	btfss	plusw1,7,c
 20011  015804  D002               	goto	u10930
 20012  015806  0E01               	movlw	1
 20013  015808  D001               	goto	u10940
 20014  01580A                     u10930:
 20015  01580A  0E00               	movlw	0
 20016  01580C                     u10940:
 20017  01580C  6E0B               	movwf	(btemp+10)^0,c
 20018  01580E  6A0C               	clrf	(btemp+11)^0,c
 20019                           
 20020                           ;stkvar	_s @ sp[(-18)+12]
 20021  015810  0EFA               	movlw	-6
 20022  015812  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20023  015818  0EFB               	movlw	-5
 20024  01581A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20025                           
 20026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20027                           ;stkvar	_s @ sp[(-18)+12]
 20028  015820  0EFA               	movlw	-6
 20029  015822  006F FF8C  F001    	movff	plusw1,btemp
 20030  015828  0EFB               	movlw	-5
 20031  01582A  50E3               	movf	plusw1,w,c
 20032  01582C  1001               	iorwf	btemp^0,w,c
 20033  01582E  B4D8               	btfsc	status,2,c
 20034  015830  D025               	goto	u10960
 20035                           
 20036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20037                           ;stkvar	_n @ sp[(-18)+2]
 20038                           ;stkvar	_n @ sp[(-18)+2]
 20039  015832  0EF0               	movlw	-16
 20040  015834  6CE3               	negf	plusw1,c
 20041  015836  0EF1               	movlw	-15
 20042  015838  1EE3               	comf	plusw1,f,c
 20043  01583A  0EF2               	movlw	-14
 20044  01583C  1EE3               	comf	plusw1,f,c
 20045  01583E  0EF3               	movlw	-13
 20046  015840  1EE3               	comf	plusw1,f,c
 20047  015842  0EF4               	movlw	-12
 20048  015844  1EE3               	comf	plusw1,f,c
 20049  015846  0EF5               	movlw	-11
 20050  015848  1EE3               	comf	plusw1,f,c
 20051  01584A  0EF6               	movlw	-10
 20052  01584C  1EE3               	comf	plusw1,f,c
 20053  01584E  0EF7               	movlw	-9
 20054  015850  1EE3               	comf	plusw1,f,c
 20055  015852  E314               	bnc	u10960
 20056  015854  0EF1               	movlw	-15
 20057  015856  2AE3               	incf	plusw1,f,c
 20058  015858  E311               	bnc	u10960
 20059  01585A  0EF2               	movlw	-14
 20060  01585C  2AE3               	incf	plusw1,f,c
 20061  01585E  E30E               	bnc	u10960
 20062  015860  0EF3               	movlw	-13
 20063  015862  2AE3               	incf	plusw1,f,c
 20064  015864  E30B               	bnc	u10960
 20065  015866  0EF4               	movlw	-12
 20066  015868  2AE3               	incf	plusw1,f,c
 20067  01586A  E308               	bnc	u10960
 20068  01586C  0EF5               	movlw	-11
 20069  01586E  2AE3               	incf	plusw1,f,c
 20070  015870  E305               	bnc	u10960
 20071  015872  0EF6               	movlw	-10
 20072  015874  2AE3               	incf	plusw1,f,c
 20073  015876  E302               	bnc	u10960
 20074  015878  0EF7               	movlw	-9
 20075  01587A  2AE3               	incf	plusw1,f,c
 20076  01587C                     u10960:
 20077                           
 20078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20079  01587C  AE3D               	btfss	(_prec+1)^0,7,c
 20080                           
 20081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20082  01587E  923E               	bcf	_flags^0,1,c
 20083                           
 20084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20085  015880  BE3D               	btfsc	(_prec+1)^0,7,c
 20086  015882  D005               	goto	u10980
 20087  015884  503D               	movf	(_prec+1)^0,w,c
 20088  015886  E110               	bnz	l11938
 20089  015888  043C               	decf	_prec^0,w,c
 20090  01588A  B0D8               	btfsc	status,0,c
 20091  01588C  D00D               	goto	l11938
 20092  01588E                     u10980:
 20093  01588E  0E01               	movlw	1
 20094  015890  6E0B               	movwf	(btemp+10)^0,c
 20095  015892  0E00               	movlw	0
 20096  015894  6E0C               	movwf	(btemp+11)^0,c
 20097                           
 20098                           ;stkvar	_p @ sp[(-18)+16]
 20099  015896  0EFE               	movlw	-2
 20100  015898  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20101  01589E  0EFF               	movlw	-1
 20102  0158A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20103  0158A6  D008               	goto	l2158
 20104  0158A8                     l11938:
 20105                           
 20106                           ;stkvar	_p @ sp[(-18)+16]
 20107  0158A8  0EFE               	movlw	-2
 20108  0158AA  0060  F0F3  FFE3   	movff	_prec,plusw1
 20109  0158B0  0EFF               	movlw	-1
 20110  0158B2  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20111  0158B8                     l2158:
 20112                           
 20113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20114                           ;stkvar	_w @ sp[(-18)+14]
 20115  0158B8  0EFC               	movlw	-4
 20116  0158BA  0060  F0EB  FFE3   	movff	_width,plusw1
 20117  0158C0  0EFD               	movlw	-3
 20118  0158C2  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20119                           
 20120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20121                           ;stkvar	_s @ sp[(-18)+12]
 20122  0158C8  0EFA               	movlw	-6
 20123  0158CA  006F FF8C  F001    	movff	plusw1,btemp
 20124  0158D0  0EFB               	movlw	-5
 20125  0158D2  50E3               	movf	plusw1,w,c
 20126  0158D4  1001               	iorwf	btemp^0,w,c
 20127  0158D6  A4D8               	btfss	status,2,c
 20128  0158D8  D002               	goto	u11000
 20129  0158DA  A43E               	btfss	_flags^0,2,c
 20130  0158DC  D00A               	goto	l11946
 20131  0158DE                     u11000:
 20132                           
 20133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20134                           ;stkvar	_w @ sp[(-18)+14]
 20135  0158DE  50E1               	movf	fsr1l,w,c
 20136  0158E0  0FFC               	addlw	-4
 20137  0158E2  6ED9               	movwf	fsr2l,c
 20138  0158E4  50E2               	movf	fsr1h,w,c
 20139  0158E6  6EDA               	movwf	fsr2h,c
 20140  0158E8  0EFF               	movlw	255
 20141  0158EA  22DA               	addwfc	fsr2h,f,c
 20142  0158EC  06DE               	decf	postinc2,f,c
 20143  0158EE  0E00               	movlw	0
 20144  0158F0  5ADD               	subwfb	postdec2,f,c
 20145  0158F2                     l11946:
 20146                           
 20147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20148  0158F2  0E4F               	movlw	79
 20149  0158F4  6E0B               	movwf	(btemp+10)^0,c
 20150  0158F6  0E00               	movlw	0
 20151  0158F8  6E0C               	movwf	(btemp+11)^0,c
 20152                           
 20153                           ;stkvar	_i @ sp[(-18)+10]
 20154  0158FA  0EF8               	movlw	-8
 20155  0158FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20156  015902  0EF9               	movlw	-7
 20157  015904  0060  F033  FFE3   	movff	btemp+11,plusw1
 20158                           
 20159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20160  01590A  0102               	movlb	2	; () banked
 20161  01590C  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20162                           
 20163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20164  01590E  D109               	goto	l11960
 20165  015910                     l11950:
 20166                           
 20167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20168                           ;stkvar	_i @ sp[(-18)+10]
 20169  015910  50E1               	movf	fsr1l,w,c
 20170  015912  0FF8               	addlw	-8
 20171  015914  6ED9               	movwf	fsr2l,c
 20172  015916  50E2               	movf	fsr1h,w,c
 20173  015918  6EDA               	movwf	fsr2h,c
 20174  01591A  0EFF               	movlw	255
 20175  01591C  22DA               	addwfc	fsr2h,f,c
 20176  01591E  06DE               	decf	postinc2,f,c
 20177  015920  0E00               	movlw	0
 20178  015922  5ADD               	subwfb	postdec2,f,c
 20179                           
 20180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20181  015924  0E0A               	movlw	10
 20182  015926  6EE6               	movwf	postinc1,c
 20183  015928  0E00               	movlw	0
 20184  01592A  6EE6               	movwf	postinc1,c
 20185  01592C  0E00               	movlw	0
 20186  01592E  6EE6               	movwf	postinc1,c
 20187  015930  0E00               	movlw	0
 20188  015932  6EE6               	movwf	postinc1,c
 20189  015934  0E00               	movlw	0
 20190  015936  6EE6               	movwf	postinc1,c
 20191  015938  0E00               	movlw	0
 20192  01593A  6EE6               	movwf	postinc1,c
 20193  01593C  0E00               	movlw	0
 20194  01593E  6EE6               	movwf	postinc1,c
 20195  015940  0E00               	movlw	0
 20196  015942  6EE6               	movwf	postinc1,c
 20197                           
 20198                           ;stkvar	_n @ sp[(-26)+2]
 20199  015944  50E1               	movf	fsr1l,w,c
 20200  015946  0FE8               	addlw	-24
 20201  015948  6ED9               	movwf	fsr2l,c
 20202  01594A  50E2               	movf	fsr1h,w,c
 20203  01594C  6EDA               	movwf	fsr2h,c
 20204  01594E  0EFF               	movlw	255
 20205  015950  22DA               	addwfc	fsr2h,f,c
 20206  015952  006F FF7B FFE6     	movff	postinc2,postinc1
 20207  015958  006F FF7B FFE6     	movff	postinc2,postinc1
 20208  01595E  006F FF7B FFE6     	movff	postinc2,postinc1
 20209  015964  006F FF7B FFE6     	movff	postinc2,postinc1
 20210  01596A  006F FF7B FFE6     	movff	postinc2,postinc1
 20211  015970  006F FF7B FFE6     	movff	postinc2,postinc1
 20212  015976  006F FF7B FFE6     	movff	postinc2,postinc1
 20213  01597C  006F FF7B FFE6     	movff	postinc2,postinc1
 20214  015982  ECF6  F0BE         	call	___aomod	;wreg free
 20215  015986  52E5               	movf	postdec1,f,c
 20216  015988  006F FF9C  F018    	movff	indf1,btemp+23
 20217  01598E  52E5               	movf	postdec1,f,c
 20218  015990  006F FF9C  F017    	movff	indf1,btemp+22
 20219  015996  52E5               	movf	postdec1,f,c
 20220  015998  006F FF9C  F016    	movff	indf1,btemp+21
 20221  01599E  52E5               	movf	postdec1,f,c
 20222  0159A0  006F FF9C  F015    	movff	indf1,btemp+20
 20223  0159A6  52E5               	movf	postdec1,f,c
 20224  0159A8  006F FF9C  F014    	movff	indf1,btemp+19
 20225  0159AE  52E5               	movf	postdec1,f,c
 20226  0159B0  006F FF9C  F013    	movff	indf1,btemp+18
 20227  0159B6  52E5               	movf	postdec1,f,c
 20228  0159B8  006F FF9C  F012    	movff	indf1,btemp+17
 20229  0159BE  52E5               	movf	postdec1,f,c
 20230  0159C0  006F FF9C  F011    	movff	indf1,btemp+16
 20231  0159C6  0EF8               	movlw	248
 20232  0159C8  26E1               	addwf	fsr1l,f,c
 20233  0159CA  0EFF               	movlw	255
 20234  0159CC  22E2               	addwfc	fsr1h,f,c
 20235  0159CE  0060  F044  F00B   	movff	btemp+16,btemp+10
 20236  0159D4  0060  F048  F00C   	movff	btemp+17,btemp+11
 20237  0159DA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20238  0159E0  0060  F033  FFE6   	movff	btemp+11,postinc1
 20239  0159E6  ECC4  F0DA         	call	_abs	;wreg free
 20240  0159EA  0E30               	movlw	48
 20241  0159EC  2601               	addwf	btemp^0,f,c
 20242                           
 20243                           ;stkvar	_i @ sp[(-18)+10]
 20244  0159EE  0EF8               	movlw	-8
 20245  0159F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 20246  0159F6  0EF9               	movlw	-7
 20247  0159F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 20248  0159FE  0E97               	movlw	low _dbuf
 20249  015A00  240B               	addwf	(btemp+10)^0,w,c
 20250  015A02  6ED9               	movwf	fsr2l,c
 20251  015A04  0E02               	movlw	high _dbuf
 20252  015A06  200C               	addwfc	(btemp+11)^0,w,c
 20253  015A08  6EDA               	movwf	fsr2h,c
 20254  015A0A  0060  F007  FFDF   	movff	btemp,indf2
 20255                           
 20256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 20257                           ;stkvar	_p @ sp[(-18)+16]
 20258  015A10  50E1               	movf	fsr1l,w,c
 20259  015A12  0FFE               	addlw	-2
 20260  015A14  6ED9               	movwf	fsr2l,c
 20261  015A16  50E2               	movf	fsr1h,w,c
 20262  015A18  6EDA               	movwf	fsr2h,c
 20263  015A1A  0EFF               	movlw	255
 20264  015A1C  22DA               	addwfc	fsr2h,f,c
 20265  015A1E  06DE               	decf	postinc2,f,c
 20266  015A20  0E00               	movlw	0
 20267  015A22  5ADD               	subwfb	postdec2,f,c
 20268                           
 20269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 20270                           ;stkvar	_w @ sp[(-18)+14]
 20271  015A24  50E1               	movf	fsr1l,w,c
 20272  015A26  0FFC               	addlw	-4
 20273  015A28  6ED9               	movwf	fsr2l,c
 20274  015A2A  50E2               	movf	fsr1h,w,c
 20275  015A2C  6EDA               	movwf	fsr2h,c
 20276  015A2E  0EFF               	movlw	255
 20277  015A30  22DA               	addwfc	fsr2h,f,c
 20278  015A32  06DE               	decf	postinc2,f,c
 20279  015A34  0E00               	movlw	0
 20280  015A36  5ADD               	subwfb	postdec2,f,c
 20281                           
 20282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 20283  015A38  0E0A               	movlw	10
 20284  015A3A  6EE6               	movwf	postinc1,c
 20285  015A3C  0E00               	movlw	0
 20286  015A3E  6EE6               	movwf	postinc1,c
 20287  015A40  0E00               	movlw	0
 20288  015A42  6EE6               	movwf	postinc1,c
 20289  015A44  0E00               	movlw	0
 20290  015A46  6EE6               	movwf	postinc1,c
 20291  015A48  0E00               	movlw	0
 20292  015A4A  6EE6               	movwf	postinc1,c
 20293  015A4C  0E00               	movlw	0
 20294  015A4E  6EE6               	movwf	postinc1,c
 20295  015A50  0E00               	movlw	0
 20296  015A52  6EE6               	movwf	postinc1,c
 20297  015A54  0E00               	movlw	0
 20298  015A56  6EE6               	movwf	postinc1,c
 20299                           
 20300                           ;stkvar	_n @ sp[(-26)+2]
 20301  015A58  50E1               	movf	fsr1l,w,c
 20302  015A5A  0FE8               	addlw	-24
 20303  015A5C  6ED9               	movwf	fsr2l,c
 20304  015A5E  50E2               	movf	fsr1h,w,c
 20305  015A60  6EDA               	movwf	fsr2h,c
 20306  015A62  0EFF               	movlw	255
 20307  015A64  22DA               	addwfc	fsr2h,f,c
 20308  015A66  006F FF7B FFE6     	movff	postinc2,postinc1
 20309  015A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 20310  015A72  006F FF7B FFE6     	movff	postinc2,postinc1
 20311  015A78  006F FF7B FFE6     	movff	postinc2,postinc1
 20312  015A7E  006F FF7B FFE6     	movff	postinc2,postinc1
 20313  015A84  006F FF7B FFE6     	movff	postinc2,postinc1
 20314  015A8A  006F FF7B FFE6     	movff	postinc2,postinc1
 20315  015A90  006F FF7B FFE6     	movff	postinc2,postinc1
 20316  015A96  EC59  F0BB         	call	___aodiv	;wreg free
 20317  015A9A  52E5               	movf	postdec1,f,c
 20318  015A9C  006F FF9C  F018    	movff	indf1,btemp+23
 20319  015AA2  52E5               	movf	postdec1,f,c
 20320  015AA4  006F FF9C  F017    	movff	indf1,btemp+22
 20321  015AAA  52E5               	movf	postdec1,f,c
 20322  015AAC  006F FF9C  F016    	movff	indf1,btemp+21
 20323  015AB2  52E5               	movf	postdec1,f,c
 20324  015AB4  006F FF9C  F015    	movff	indf1,btemp+20
 20325  015ABA  52E5               	movf	postdec1,f,c
 20326  015ABC  006F FF9C  F014    	movff	indf1,btemp+19
 20327  015AC2  52E5               	movf	postdec1,f,c
 20328  015AC4  006F FF9C  F013    	movff	indf1,btemp+18
 20329  015ACA  52E5               	movf	postdec1,f,c
 20330  015ACC  006F FF9C  F012    	movff	indf1,btemp+17
 20331  015AD2  52E5               	movf	postdec1,f,c
 20332  015AD4  006F FF9C  F011    	movff	indf1,btemp+16
 20333  015ADA  0EF8               	movlw	248
 20334  015ADC  26E1               	addwf	fsr1l,f,c
 20335  015ADE  0EFF               	movlw	255
 20336  015AE0  22E2               	addwfc	fsr1h,f,c
 20337                           
 20338                           ;stkvar	_n @ sp[(-18)+2]
 20339  015AE2  0EF0               	movlw	-16
 20340  015AE4  0060  F047  FFE3   	movff	btemp+16,plusw1
 20341  015AEA  0EF1               	movlw	-15
 20342  015AEC  0060  F04B  FFE3   	movff	btemp+17,plusw1
 20343  015AF2  0EF2               	movlw	-14
 20344  015AF4  0060  F04F  FFE3   	movff	btemp+18,plusw1
 20345  015AFA  0EF3               	movlw	-13
 20346  015AFC  0060  F053  FFE3   	movff	btemp+19,plusw1
 20347  015B02  0EF4               	movlw	-12
 20348  015B04  0060  F057  FFE3   	movff	btemp+20,plusw1
 20349  015B0A  0EF5               	movlw	-11
 20350  015B0C  0060  F05B  FFE3   	movff	btemp+21,plusw1
 20351  015B12  0EF6               	movlw	-10
 20352  015B14  0060  F05F  FFE3   	movff	btemp+22,plusw1
 20353  015B1A  0EF7               	movlw	-9
 20354  015B1C  0060  F063  FFE3   	movff	btemp+23,plusw1
 20355  015B22                     l11960:
 20356                           
 20357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20358                           ;stkvar	_i @ sp[(-18)+10]
 20359  015B22  0EF9               	movlw	-7
 20360  015B24  BEE3               	btfsc	plusw1,7,c
 20361  015B26  D036               	goto	u11050
 20362  015B28  0EF9               	movlw	-7
 20363  015B2A  50E3               	movf	plusw1,w,c
 20364  015B2C  E104               	bnz	u11010
 20365  015B2E  0EF8               	movlw	-8
 20366  015B30  04E3               	decf	plusw1,w,c
 20367  015B32  A0D8               	btfss	status,0,c
 20368  015B34  D02F               	goto	u11050
 20369  015B36                     u11010:
 20370                           
 20371                           ;stkvar	_n @ sp[(-18)+2]
 20372  015B36  0EF0               	movlw	-16
 20373  015B38  50E3               	movf	plusw1,w,c
 20374  015B3A  E115               	bnz	u11021
 20375  015B3C  0EF1               	movlw	-15
 20376  015B3E  50E3               	movf	plusw1,w,c
 20377  015B40  E112               	bnz	u11021
 20378  015B42  0EF2               	movlw	-14
 20379  015B44  50E3               	movf	plusw1,w,c
 20380  015B46  E10F               	bnz	u11021
 20381  015B48  0EF3               	movlw	-13
 20382  015B4A  50E3               	movf	plusw1,w,c
 20383  015B4C  E10C               	bnz	u11021
 20384  015B4E  0EF4               	movlw	-12
 20385  015B50  50E3               	movf	plusw1,w,c
 20386  015B52  E109               	bnz	u11021
 20387  015B54  0EF5               	movlw	-11
 20388  015B56  50E3               	movf	plusw1,w,c
 20389  015B58  E106               	bnz	u11021
 20390  015B5A  0EF6               	movlw	-10
 20391  015B5C  50E3               	movf	plusw1,w,c
 20392  015B5E  E103               	bnz	u11021
 20393  015B60  0EF7               	movlw	-9
 20394  015B62  50E3               	movf	plusw1,w,c
 20395  015B64  A4D8               	btfss	status,2,c
 20396  015B66                     u11021:
 20397  015B66  D6D4               	goto	l11950
 20398                           
 20399                           ;stkvar	_p @ sp[(-18)+16]
 20400  015B68  0EFF               	movlw	-1
 20401  015B6A  BEE3               	btfsc	plusw1,7,c
 20402  015B6C  D007               	goto	u11030
 20403  015B6E  0EFF               	movlw	-1
 20404  015B70  50E3               	movf	plusw1,w,c
 20405  015B72  E103               	bnz	u11031
 20406  015B74  0EFE               	movlw	-2
 20407  015B76  04E3               	decf	plusw1,w,c
 20408  015B78  B0D8               	btfsc	status,0,c
 20409  015B7A                     u11031:
 20410  015B7A  D6CA               	goto	l11950
 20411  015B7C                     u11030:
 20412                           
 20413                           ;stkvar	_w @ sp[(-18)+14]
 20414  015B7C  0EFD               	movlw	-3
 20415  015B7E  BEE3               	btfsc	plusw1,7,c
 20416  015B80  D009               	goto	u11050
 20417  015B82  0EFD               	movlw	-3
 20418  015B84  50E3               	movf	plusw1,w,c
 20419  015B86  E104               	bnz	u11040
 20420  015B88  0EFC               	movlw	-4
 20421  015B8A  04E3               	decf	plusw1,w,c
 20422  015B8C  A0D8               	btfss	status,0,c
 20423  015B8E  D002               	goto	u11050
 20424  015B90                     u11040:
 20425  015B90  B23E               	btfsc	_flags^0,1,c
 20426  015B92  D6BE               	goto	l11950
 20427  015B94                     u11050:
 20428                           
 20429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20430                           ;stkvar	_s @ sp[(-18)+12]
 20431  015B94  0EFA               	movlw	-6
 20432  015B96  006F FF8C  F001    	movff	plusw1,btemp
 20433  015B9C  0EFB               	movlw	-5
 20434  015B9E  50E3               	movf	plusw1,w,c
 20435  015BA0  1001               	iorwf	btemp^0,w,c
 20436  015BA2  A4D8               	btfss	status,2,c
 20437  015BA4  D002               	goto	u11070
 20438  015BA6  A43E               	btfss	_flags^0,2,c
 20439  015BA8  D033               	goto	l11984
 20440  015BAA                     u11070:
 20441                           
 20442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20443                           ;stkvar	_i @ sp[(-18)+10]
 20444  015BAA  50E1               	movf	fsr1l,w,c
 20445  015BAC  0FF8               	addlw	-8
 20446  015BAE  6ED9               	movwf	fsr2l,c
 20447  015BB0  50E2               	movf	fsr1h,w,c
 20448  015BB2  6EDA               	movwf	fsr2h,c
 20449  015BB4  0EFF               	movlw	255
 20450  015BB6  22DA               	addwfc	fsr2h,f,c
 20451  015BB8  06DE               	decf	postinc2,f,c
 20452  015BBA  0E00               	movlw	0
 20453  015BBC  5ADD               	subwfb	postdec2,f,c
 20454                           
 20455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20456                           ;stkvar	_s @ sp[(-18)+12]
 20457  015BBE  0EFA               	movlw	-6
 20458  015BC0  006F FF8C  F001    	movff	plusw1,btemp
 20459  015BC6  0EFB               	movlw	-5
 20460  015BC8  50E3               	movf	plusw1,w,c
 20461  015BCA  1001               	iorwf	btemp^0,w,c
 20462  015BCC  A4D8               	btfss	status,2,c
 20463  015BCE  D002               	goto	l11980
 20464  015BD0  0E2B               	movlw	43
 20465  015BD2  D001               	goto	L24
 20466  015BD4                     l11980:
 20467  015BD4  0E2D               	movlw	45
 20468  015BD6                     L24:
 20469  015BD6  6E0B               	movwf	(btemp+10)^0,c
 20470  015BD8  0E00               	movlw	0
 20471  015BDA  6E0C               	movwf	(btemp+11)^0,c
 20472                           
 20473                           ;stkvar	_dtoa$5494 @ sp[(-18)+0]
 20474  015BDC  0EEE               	movlw	-18
 20475  015BDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20476  015BE4  0EEF               	movlw	-17
 20477  015BE6  0060  F033  FFE3   	movff	btemp+11,plusw1
 20478                           
 20479                           ;stkvar	_dtoa$5494 @ sp[(-18)+0]
 20480                           ;stkvar	_i @ sp[(-18)+10]
 20481  015BEC  0EF8               	movlw	-8
 20482  015BEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 20483  015BF4  0EF9               	movlw	-7
 20484  015BF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 20485  015BFC  0E97               	movlw	low _dbuf
 20486  015BFE  240B               	addwf	(btemp+10)^0,w,c
 20487  015C00  6ED9               	movwf	fsr2l,c
 20488  015C02  0E02               	movlw	high _dbuf
 20489  015C04  200C               	addwfc	(btemp+11)^0,w,c
 20490  015C06  6EDA               	movwf	fsr2h,c
 20491  015C08  0EEE               	movlw	-18
 20492  015C0A  006F FF8F FFDF     	movff	plusw1,indf2
 20493  015C10                     l11984:
 20494                           
 20495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20496                           ;stkvar	_w @ sp[(-18)+14]
 20497  015C10  0EFC               	movlw	-4
 20498  015C12  006F FF8F FFE6     	movff	plusw1,postinc1
 20499  015C18  006F FF8F FFE6     	movff	plusw1,postinc1
 20500                           
 20501                           ;stkvar	_i @ sp[(-20)+10]
 20502  015C1E  0E97               	movlw	low _dbuf
 20503  015C20  6E0B               	movwf	(btemp+10)^0,c
 20504  015C22  0E02               	movlw	high _dbuf
 20505  015C24  6E0C               	movwf	(btemp+11)^0,c
 20506  015C26  0EF6               	movlw	-10
 20507  015C28  50E3               	movf	plusw1,w,c
 20508  015C2A  260B               	addwf	(btemp+10)^0,f,c
 20509  015C2C  0EF7               	movlw	-9
 20510  015C2E  50E3               	movf	plusw1,w,c
 20511  015C30  220C               	addwfc	(btemp+11)^0,f,c
 20512  015C32  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20513  015C38  0060  F033  FFE6   	movff	btemp+11,postinc1
 20514                           
 20515                           ;stkvar	_fp @ sp[(-22)+-2]
 20516  015C3E  0EE8               	movlw	-24
 20517  015C40  006F FF8F FFE6     	movff	plusw1,postinc1
 20518  015C46  006F FF8F FFE6     	movff	plusw1,postinc1
 20519  015C4C  EC73  F0CD         	call	_pad	;wreg free
 20520                           
 20521                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20522  015C50  0EE4               	movlw	228
 20523  015C52  26E1               	addwf	fsr1l,f,c
 20524  015C54  0EFF               	movlw	255
 20525  015C56  22E2               	addwfc	fsr1h,f,c
 20526  015C58  0012               	return		;funcret
 20527  015C5A                     __end_of_dtoa:
 20528                           	opt callstack 0
 20529                           
 20530 ;; *************** function _abs *****************
 20531 ;; Defined at:
 20532 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20533 ;; Parameters:    Size  Location     Type
 20534 ;;  a               2  [STACK] int 
 20535 ;; Auto vars:     Size  Location     Type
 20536 ;;		None
 20537 ;; Return value:  Size  Location     Type
 20538 ;;                  2  [STACK] int 
 20539 ;; Registers used:
 20540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20541 ;; Tracked objects:
 20542 ;;		On entry : 0/2
 20543 ;;		On exit  : 0/0
 20544 ;;		Unchanged: 0/0
 20545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20550 ;;Total ram usage:        0 bytes
 20551 ;; Hardware stack levels used:    1
 20552 ;; Hardware stack levels required when called:   15
 20553 ;; This function calls:
 20554 ;;		Nothing
 20555 ;; This function is called by:
 20556 ;;		_dtoa
 20557 ;; This function uses a reentrant model
 20558 ;;
 20559                           
 20560                           	psect	text69
 20561  01B588                     __ptext69:
 20562                           	opt callstack 0
 20563  01B588                     _abs:
 20564                           	opt callstack 0
 20565                           
 20566                           ;stkvar	_a @ sp[(0)+-2]
 20567                           
 20568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20569                           ;incstack = 0
 20570 ;; hardware stack exceeded
 20571  01B588  0EFF               	movlw	-1
 20572  01B58A  BEE3               	btfsc	plusw1,7,c
 20573  01B58C  D007               	goto	u6000
 20574  01B58E  0EFF               	movlw	-1
 20575  01B590  50E3               	movf	plusw1,w,c
 20576  01B592  E112               	bnz	l8000
 20577  01B594  0EFE               	movlw	-2
 20578  01B596  04E3               	decf	plusw1,w,c
 20579  01B598  B0D8               	btfsc	status,0,c
 20580  01B59A  D00E               	goto	l8000
 20581  01B59C                     u6000:
 20582                           
 20583                           ;stkvar	_a @ sp[(0)+-2]
 20584  01B59C  0EFE               	movlw	-2
 20585  01B59E  006F FF8C  F001    	movff	plusw1,btemp
 20586  01B5A4  1E01               	comf	btemp^0,f,c
 20587  01B5A6  0EFF               	movlw	-1
 20588  01B5A8  006F FF8C  F002    	movff	plusw1,btemp+1
 20589  01B5AE  1E02               	comf	(btemp+1)^0,f,c
 20590  01B5B0  2A01               	incf	btemp^0,f,c
 20591  01B5B2  B4D8               	btfsc	status,2,c
 20592  01B5B4  2A02               	incf	(btemp+1)^0,f,c
 20593  01B5B6  D008               	goto	l3084
 20594  01B5B8                     l8000:
 20595                           
 20596                           ;stkvar	_a @ sp[(0)+-2]
 20597  01B5B8  0EFE               	movlw	-2
 20598  01B5BA  006F FF8C  F001    	movff	plusw1,btemp
 20599  01B5C0  0EFF               	movlw	-1
 20600  01B5C2  006F FF8C  F002    	movff	plusw1,btemp+1
 20601  01B5C8                     l3084:
 20602                           
 20603                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20604  01B5C8  52E5               	movf	postdec1,f,c
 20605  01B5CA  52E5               	movf	postdec1,f,c
 20606  01B5CC  0012               	return		;funcret
 20607  01B5CE                     __end_of_abs:
 20608                           	opt callstack 0
 20609                           
 20610 ;; *************** function ___aomod *****************
 20611 ;; Defined at:
 20612 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20613 ;; Parameters:    Size  Location     Type
 20614 ;;  dividend        8  [STACK] long long 
 20615 ;;  divisor         8  [STACK] long long 
 20616 ;; Auto vars:     Size  Location     Type
 20617 ;;  sign            1  [STACK] unsigned char 
 20618 ;;  counter         1  [STACK] unsigned char 
 20619 ;; Return value:  Size  Location     Type
 20620 ;;                  8  [STACK] long long 
 20621 ;; Registers used:
 20622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20623 ;; Tracked objects:
 20624 ;;		On entry : 0/2
 20625 ;;		On exit  : 0/0
 20626 ;;		Unchanged: 0/0
 20627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20632 ;;Total ram usage:        0 bytes
 20633 ;; Hardware stack levels used:    1
 20634 ;; Hardware stack levels required when called:   15
 20635 ;; This function calls:
 20636 ;;		Nothing
 20637 ;; This function is called by:
 20638 ;;		_dtoa
 20639 ;; This function uses a reentrant model
 20640 ;;
 20641                           
 20642                           	psect	text70
 20643  017DEC                     __ptext70:
 20644                           	opt callstack 0
 20645  017DEC                     ___aomod:
 20646                           	opt callstack 0
 20647                           
 20648                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20649  017DEC  52E6               	movf	postinc1,f,c
 20650  017DEE  52E6               	movf	postinc1,f,c
 20651                           
 20652                           ;stkvar	_sign @ sp[(-2)+0]
 20653                           
 20654                           ;incstack = 0
 20655 ;; hardware stack exceeded
 20656  017DF0  0EFE               	movlw	-2
 20657  017DF2  6AE3               	clrf	plusw1,c
 20658                           
 20659                           ;stkvar	_dividend @ sp[(-2)+-8]
 20660  017DF4  0EFD               	movlw	-3
 20661  017DF6  AEE3               	btfss	plusw1,7,c
 20662  017DF8  D028               	goto	l8158
 20663                           
 20664                           ;stkvar	_dividend @ sp[(-2)+-8]
 20665                           ;stkvar	_dividend @ sp[(-2)+-8]
 20666  017DFA  0EF6               	movlw	-10
 20667  017DFC  6CE3               	negf	plusw1,c
 20668  017DFE  0EF7               	movlw	-9
 20669  017E00  1EE3               	comf	plusw1,f,c
 20670  017E02  0EF8               	movlw	-8
 20671  017E04  1EE3               	comf	plusw1,f,c
 20672  017E06  0EF9               	movlw	-7
 20673  017E08  1EE3               	comf	plusw1,f,c
 20674  017E0A  0EFA               	movlw	-6
 20675  017E0C  1EE3               	comf	plusw1,f,c
 20676  017E0E  0EFB               	movlw	-5
 20677  017E10  1EE3               	comf	plusw1,f,c
 20678  017E12  0EFC               	movlw	-4
 20679  017E14  1EE3               	comf	plusw1,f,c
 20680  017E16  0EFD               	movlw	-3
 20681  017E18  1EE3               	comf	plusw1,f,c
 20682  017E1A  E314               	bnc	u6430
 20683  017E1C  0EF7               	movlw	-9
 20684  017E1E  2AE3               	incf	plusw1,f,c
 20685  017E20  E311               	bnc	u6430
 20686  017E22  0EF8               	movlw	-8
 20687  017E24  2AE3               	incf	plusw1,f,c
 20688  017E26  E30E               	bnc	u6430
 20689  017E28  0EF9               	movlw	-7
 20690  017E2A  2AE3               	incf	plusw1,f,c
 20691  017E2C  E30B               	bnc	u6430
 20692  017E2E  0EFA               	movlw	-6
 20693  017E30  2AE3               	incf	plusw1,f,c
 20694  017E32  E308               	bnc	u6430
 20695  017E34  0EFB               	movlw	-5
 20696  017E36  2AE3               	incf	plusw1,f,c
 20697  017E38  E305               	bnc	u6430
 20698  017E3A  0EFC               	movlw	-4
 20699  017E3C  2AE3               	incf	plusw1,f,c
 20700  017E3E  E302               	bnc	u6430
 20701  017E40  0EFD               	movlw	-3
 20702  017E42  2AE3               	incf	plusw1,f,c
 20703  017E44                     u6430:
 20704                           
 20705                           ;stkvar	_sign @ sp[(-2)+0]
 20706  017E44  0EFE               	movlw	-2
 20707  017E46  6AE3               	clrf	plusw1,c
 20708  017E48  2AE3               	incf	plusw1,f,c
 20709  017E4A                     l8158:
 20710                           
 20711                           ;stkvar	_divisor @ sp[(-2)+-16]
 20712  017E4A  0EF5               	movlw	-11
 20713  017E4C  AEE3               	btfss	plusw1,7,c
 20714  017E4E  D025               	goto	u6450
 20715                           
 20716                           ;stkvar	_divisor @ sp[(-2)+-16]
 20717                           ;stkvar	_divisor @ sp[(-2)+-16]
 20718  017E50  0EEE               	movlw	-18
 20719  017E52  6CE3               	negf	plusw1,c
 20720  017E54  0EEF               	movlw	-17
 20721  017E56  1EE3               	comf	plusw1,f,c
 20722  017E58  0EF0               	movlw	-16
 20723  017E5A  1EE3               	comf	plusw1,f,c
 20724  017E5C  0EF1               	movlw	-15
 20725  017E5E  1EE3               	comf	plusw1,f,c
 20726  017E60  0EF2               	movlw	-14
 20727  017E62  1EE3               	comf	plusw1,f,c
 20728  017E64  0EF3               	movlw	-13
 20729  017E66  1EE3               	comf	plusw1,f,c
 20730  017E68  0EF4               	movlw	-12
 20731  017E6A  1EE3               	comf	plusw1,f,c
 20732  017E6C  0EF5               	movlw	-11
 20733  017E6E  1EE3               	comf	plusw1,f,c
 20734  017E70  E314               	bnc	u6450
 20735  017E72  0EEF               	movlw	-17
 20736  017E74  2AE3               	incf	plusw1,f,c
 20737  017E76  E311               	bnc	u6450
 20738  017E78  0EF0               	movlw	-16
 20739  017E7A  2AE3               	incf	plusw1,f,c
 20740  017E7C  E30E               	bnc	u6450
 20741  017E7E  0EF1               	movlw	-15
 20742  017E80  2AE3               	incf	plusw1,f,c
 20743  017E82  E30B               	bnc	u6450
 20744  017E84  0EF2               	movlw	-14
 20745  017E86  2AE3               	incf	plusw1,f,c
 20746  017E88  E308               	bnc	u6450
 20747  017E8A  0EF3               	movlw	-13
 20748  017E8C  2AE3               	incf	plusw1,f,c
 20749  017E8E  E305               	bnc	u6450
 20750  017E90  0EF4               	movlw	-12
 20751  017E92  2AE3               	incf	plusw1,f,c
 20752  017E94  E302               	bnc	u6450
 20753  017E96  0EF5               	movlw	-11
 20754  017E98  2AE3               	incf	plusw1,f,c
 20755  017E9A                     u6450:
 20756                           
 20757                           ;stkvar	_divisor @ sp[(-2)+-16]
 20758  017E9A  0EEE               	movlw	-18
 20759  017E9C  50E3               	movf	plusw1,w,c
 20760  017E9E  E116               	bnz	u6460
 20761  017EA0  0EEF               	movlw	-17
 20762  017EA2  50E3               	movf	plusw1,w,c
 20763  017EA4  E113               	bnz	u6460
 20764  017EA6  0EF0               	movlw	-16
 20765  017EA8  50E3               	movf	plusw1,w,c
 20766  017EAA  E110               	bnz	u6460
 20767  017EAC  0EF1               	movlw	-15
 20768  017EAE  50E3               	movf	plusw1,w,c
 20769  017EB0  E10D               	bnz	u6460
 20770  017EB2  0EF2               	movlw	-14
 20771  017EB4  50E3               	movf	plusw1,w,c
 20772  017EB6  E10A               	bnz	u6460
 20773  017EB8  0EF3               	movlw	-13
 20774  017EBA  50E3               	movf	plusw1,w,c
 20775  017EBC  E107               	bnz	u6460
 20776  017EBE  0EF4               	movlw	-12
 20777  017EC0  50E3               	movf	plusw1,w,c
 20778  017EC2  E104               	bnz	u6460
 20779  017EC4  0EF5               	movlw	-11
 20780  017EC6  50E3               	movf	plusw1,w,c
 20781  017EC8  B4D8               	btfsc	status,2,c
 20782  017ECA  D075               	goto	u6490
 20783  017ECC                     u6460:
 20784                           
 20785                           ;stkvar	_counter @ sp[(-2)+1]
 20786  017ECC  0EFF               	movlw	-1
 20787  017ECE  6AE3               	clrf	plusw1,c
 20788  017ED0  D012               	goto	L25
 20789  017ED2                     l8166:
 20790                           
 20791                           ;stkvar	_divisor @ sp[(-2)+-16]
 20792  017ED2  90D8               	bcf	status,0,c
 20793  017ED4  0EEE               	movlw	-18
 20794  017ED6  36E3               	rlcf	plusw1,f,c
 20795  017ED8  0EEF               	movlw	-17
 20796  017EDA  36E3               	rlcf	plusw1,f,c
 20797  017EDC  0EF0               	movlw	-16
 20798  017EDE  36E3               	rlcf	plusw1,f,c
 20799  017EE0  0EF1               	movlw	-15
 20800  017EE2  36E3               	rlcf	plusw1,f,c
 20801  017EE4  0EF2               	movlw	-14
 20802  017EE6  36E3               	rlcf	plusw1,f,c
 20803  017EE8  0EF3               	movlw	-13
 20804  017EEA  36E3               	rlcf	plusw1,f,c
 20805  017EEC  0EF4               	movlw	-12
 20806  017EEE  36E3               	rlcf	plusw1,f,c
 20807  017EF0  0EF5               	movlw	-11
 20808  017EF2  36E3               	rlcf	plusw1,f,c
 20809                           
 20810                           ;stkvar	_counter @ sp[(-2)+1]
 20811  017EF4  0EFF               	movlw	-1
 20812  017EF6                     L25:
 20813  017EF6  2AE3               	incf	plusw1,f,c
 20814                           
 20815                           ;stkvar	_divisor @ sp[(-2)+-16]
 20816  017EF8  0EF5               	movlw	-11
 20817  017EFA  AEE3               	btfss	plusw1,7,c
 20818  017EFC  D7EA               	goto	l8166
 20819  017EFE                     u6470:
 20820                           
 20821                           ;stkvar	_divisor @ sp[(-2)+-16]
 20822                           ;stkvar	_dividend @ sp[(-2)+-8]
 20823  017EFE  50E1               	movf	fsr1l,w,c
 20824  017F00  0FF6               	addlw	-10
 20825  017F02  6ED9               	movwf	fsr2l,c
 20826  017F04  50E2               	movf	fsr1h,w,c
 20827  017F06  6EDA               	movwf	fsr2h,c
 20828  017F08  0EFF               	movlw	255
 20829  017F0A  22DA               	addwfc	fsr2h,f,c
 20830  017F0C  0EEE               	movlw	-18
 20831  017F0E  50E3               	movf	plusw1,w,c
 20832  017F10  5CDE               	subwf	postinc2,w,c
 20833  017F12  0EEF               	movlw	-17
 20834  017F14  50E3               	movf	plusw1,w,c
 20835  017F16  58DE               	subwfb	postinc2,w,c
 20836  017F18  0EF0               	movlw	-16
 20837  017F1A  50E3               	movf	plusw1,w,c
 20838  017F1C  58DE               	subwfb	postinc2,w,c
 20839  017F1E  0EF1               	movlw	-15
 20840  017F20  50E3               	movf	plusw1,w,c
 20841  017F22  58DE               	subwfb	postinc2,w,c
 20842  017F24  0EF2               	movlw	-14
 20843  017F26  50E3               	movf	plusw1,w,c
 20844  017F28  58DE               	subwfb	postinc2,w,c
 20845  017F2A  0EF3               	movlw	-13
 20846  017F2C  50E3               	movf	plusw1,w,c
 20847  017F2E  58DE               	subwfb	postinc2,w,c
 20848  017F30  0EF4               	movlw	-12
 20849  017F32  50E3               	movf	plusw1,w,c
 20850  017F34  58DE               	subwfb	postinc2,w,c
 20851  017F36  0EF5               	movlw	-11
 20852  017F38  50E3               	movf	plusw1,w,c
 20853  017F3A  58DE               	subwfb	postinc2,w,c
 20854  017F3C  A0D8               	btfss	status,0,c
 20855  017F3E  D01F               	goto	l8174
 20856                           
 20857                           ;stkvar	_divisor @ sp[(-2)+-16]
 20858                           ;stkvar	_dividend @ sp[(-2)+-8]
 20859  017F40  50E1               	movf	fsr1l,w,c
 20860  017F42  0FF6               	addlw	-10
 20861  017F44  6ED9               	movwf	fsr2l,c
 20862  017F46  50E2               	movf	fsr1h,w,c
 20863  017F48  6EDA               	movwf	fsr2h,c
 20864  017F4A  0EFF               	movlw	255
 20865  017F4C  22DA               	addwfc	fsr2h,f,c
 20866  017F4E  0EEE               	movlw	-18
 20867  017F50  50E3               	movf	plusw1,w,c
 20868  017F52  5EDE               	subwf	postinc2,f,c
 20869  017F54  0EEF               	movlw	-17
 20870  017F56  50E3               	movf	plusw1,w,c
 20871  017F58  5ADE               	subwfb	postinc2,f,c
 20872  017F5A  0EF0               	movlw	-16
 20873  017F5C  50E3               	movf	plusw1,w,c
 20874  017F5E  5ADE               	subwfb	postinc2,f,c
 20875  017F60  0EF1               	movlw	-15
 20876  017F62  50E3               	movf	plusw1,w,c
 20877  017F64  5ADE               	subwfb	postinc2,f,c
 20878  017F66  0EF2               	movlw	-14
 20879  017F68  50E3               	movf	plusw1,w,c
 20880  017F6A  5ADE               	subwfb	postinc2,f,c
 20881  017F6C  0EF3               	movlw	-13
 20882  017F6E  50E3               	movf	plusw1,w,c
 20883  017F70  5ADE               	subwfb	postinc2,f,c
 20884  017F72  0EF4               	movlw	-12
 20885  017F74  50E3               	movf	plusw1,w,c
 20886  017F76  5ADE               	subwfb	postinc2,f,c
 20887  017F78  0EF5               	movlw	-11
 20888  017F7A  50E3               	movf	plusw1,w,c
 20889  017F7C  5ADE               	subwfb	postinc2,f,c
 20890  017F7E                     l8174:
 20891                           
 20892                           ;stkvar	_divisor @ sp[(-2)+-16]
 20893  017F7E  90D8               	bcf	status,0,c
 20894  017F80  0EF5               	movlw	-11
 20895  017F82  32E3               	rrcf	plusw1,f,c
 20896  017F84  0EF4               	movlw	-12
 20897  017F86  32E3               	rrcf	plusw1,f,c
 20898  017F88  0EF3               	movlw	-13
 20899  017F8A  32E3               	rrcf	plusw1,f,c
 20900  017F8C  0EF2               	movlw	-14
 20901  017F8E  32E3               	rrcf	plusw1,f,c
 20902  017F90  0EF1               	movlw	-15
 20903  017F92  32E3               	rrcf	plusw1,f,c
 20904  017F94  0EF0               	movlw	-16
 20905  017F96  32E3               	rrcf	plusw1,f,c
 20906  017F98  0EEF               	movlw	-17
 20907  017F9A  32E3               	rrcf	plusw1,f,c
 20908  017F9C  0EEE               	movlw	-18
 20909  017F9E  32E3               	rrcf	plusw1,f,c
 20910                           
 20911                           ;stkvar	_counter @ sp[(-2)+1]
 20912  017FA0  0EFF               	movlw	-1
 20913  017FA2  50E3               	movf	plusw1,w,c
 20914  017FA4  6E01               	movwf	btemp^0,c
 20915  017FA6  0E01               	movlw	1
 20916  017FA8  5E01               	subwf	btemp^0,f,c
 20917  017FAA  0EFF               	movlw	-1
 20918  017FAC  0060  F007  FFE3   	movff	btemp,plusw1
 20919  017FB2  A4D8               	btfss	status,2,c
 20920  017FB4  D7A4               	goto	u6470
 20921  017FB6                     u6490:
 20922                           
 20923                           ;stkvar	_sign @ sp[(-2)+0]
 20924  017FB6  0EFE               	movlw	-2
 20925  017FB8  50E3               	movf	plusw1,w,c
 20926  017FBA  B4D8               	btfsc	status,2,c
 20927  017FBC  D025               	goto	u6510
 20928                           
 20929                           ;stkvar	_dividend @ sp[(-2)+-8]
 20930                           ;stkvar	_dividend @ sp[(-2)+-8]
 20931  017FBE  0EF6               	movlw	-10
 20932  017FC0  6CE3               	negf	plusw1,c
 20933  017FC2  0EF7               	movlw	-9
 20934  017FC4  1EE3               	comf	plusw1,f,c
 20935  017FC6  0EF8               	movlw	-8
 20936  017FC8  1EE3               	comf	plusw1,f,c
 20937  017FCA  0EF9               	movlw	-7
 20938  017FCC  1EE3               	comf	plusw1,f,c
 20939  017FCE  0EFA               	movlw	-6
 20940  017FD0  1EE3               	comf	plusw1,f,c
 20941  017FD2  0EFB               	movlw	-5
 20942  017FD4  1EE3               	comf	plusw1,f,c
 20943  017FD6  0EFC               	movlw	-4
 20944  017FD8  1EE3               	comf	plusw1,f,c
 20945  017FDA  0EFD               	movlw	-3
 20946  017FDC  1EE3               	comf	plusw1,f,c
 20947  017FDE  E314               	bnc	u6510
 20948  017FE0  0EF7               	movlw	-9
 20949  017FE2  2AE3               	incf	plusw1,f,c
 20950  017FE4  E311               	bnc	u6510
 20951  017FE6  0EF8               	movlw	-8
 20952  017FE8  2AE3               	incf	plusw1,f,c
 20953  017FEA  E30E               	bnc	u6510
 20954  017FEC  0EF9               	movlw	-7
 20955  017FEE  2AE3               	incf	plusw1,f,c
 20956  017FF0  E30B               	bnc	u6510
 20957  017FF2  0EFA               	movlw	-6
 20958  017FF4  2AE3               	incf	plusw1,f,c
 20959  017FF6  E308               	bnc	u6510
 20960  017FF8  0EFB               	movlw	-5
 20961  017FFA  2AE3               	incf	plusw1,f,c
 20962  017FFC  E305               	bnc	u6510
 20963  017FFE  0EFC               	movlw	-4
 20964  018000  2AE3               	incf	plusw1,f,c
 20965  018002  E302               	bnc	u6510
 20966  018004  0EFD               	movlw	-3
 20967  018006  2AE3               	incf	plusw1,f,c
 20968  018008                     u6510:
 20969                           
 20970                           ;stkvar	_dividend @ sp[(-2)+-8]
 20971  018008  0EF6               	movlw	246
 20972  01800A  24E1               	addwf	fsr1l,w,c
 20973  01800C  6ED9               	movwf	fsr2l,c
 20974  01800E  0EFF               	movlw	255
 20975  018010  20E2               	addwfc	fsr1h,w,c
 20976  018012  6EDA               	movwf	fsr2h,c
 20977                           
 20978                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20979  018014  0E08               	movlw	8
 20980  018016  6E01               	movwf	btemp^0,c
 20981  018018  0EF6               	movlw	-10
 20982  01801A                     us652999:
 20983  01801A  006F FF7B FFE3     	movff	postinc2,plusw1
 20984  018020  28E8               	incf	wreg,w,c
 20985  018022  2E01               	decfsz	btemp^0,f,c
 20986  018024  D7FA               	bra	us652999
 20987                           
 20988                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20989  018026  52E5               	movf	postdec1,f,c
 20990  018028  52E5               	movf	postdec1,f,c
 20991  01802A  0012               	return		;funcret
 20992  01802C                     __end_of___aomod:
 20993                           	opt callstack 0
 20994                           
 20995 ;; *************** function ___aodiv *****************
 20996 ;; Defined at:
 20997 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20998 ;; Parameters:    Size  Location     Type
 20999 ;;  dividend        8  [STACK] long long 
 21000 ;;  divisor         8  [STACK] long long 
 21001 ;; Auto vars:     Size  Location     Type
 21002 ;;  quotient        8  [STACK] long long 
 21003 ;;  sign            1  [STACK] unsigned char 
 21004 ;;  counter         1  [STACK] unsigned char 
 21005 ;; Return value:  Size  Location     Type
 21006 ;;                  8  [STACK] long long 
 21007 ;; Registers used:
 21008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21009 ;; Tracked objects:
 21010 ;;		On entry : 0/2
 21011 ;;		On exit  : 0/0
 21012 ;;		Unchanged: 0/0
 21013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21018 ;;Total ram usage:        0 bytes
 21019 ;; Hardware stack levels used:    1
 21020 ;; Hardware stack levels required when called:   15
 21021 ;; This function calls:
 21022 ;;		Nothing
 21023 ;; This function is called by:
 21024 ;;		_dtoa
 21025 ;; This function uses a reentrant model
 21026 ;;
 21027                           
 21028                           	psect	text71
 21029  0176B2                     __ptext71:
 21030                           	opt callstack 0
 21031  0176B2                     ___aodiv:
 21032                           	opt callstack 0
 21033                           
 21034                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21035  0176B2  0E0A               	movlw	10
 21036  0176B4  26E1               	addwf	fsr1l,f,c
 21037  0176B6  0E00               	movlw	0
 21038  0176B8  22E2               	addwfc	fsr1h,f,c
 21039                           
 21040                           ;stkvar	_sign @ sp[(-10)+8]
 21041                           
 21042                           ;incstack = 0
 21043 ;; hardware stack exceeded
 21044  0176BA  0EFE               	movlw	-2
 21045  0176BC  6AE3               	clrf	plusw1,c
 21046                           
 21047                           ;stkvar	_divisor @ sp[(-10)+-16]
 21048  0176BE  0EED               	movlw	-19
 21049  0176C0  AEE3               	btfss	plusw1,7,c
 21050  0176C2  D028               	goto	l8114
 21051                           
 21052                           ;stkvar	_divisor @ sp[(-10)+-16]
 21053                           ;stkvar	_divisor @ sp[(-10)+-16]
 21054  0176C4  0EE6               	movlw	-26
 21055  0176C6  6CE3               	negf	plusw1,c
 21056  0176C8  0EE7               	movlw	-25
 21057  0176CA  1EE3               	comf	plusw1,f,c
 21058  0176CC  0EE8               	movlw	-24
 21059  0176CE  1EE3               	comf	plusw1,f,c
 21060  0176D0  0EE9               	movlw	-23
 21061  0176D2  1EE3               	comf	plusw1,f,c
 21062  0176D4  0EEA               	movlw	-22
 21063  0176D6  1EE3               	comf	plusw1,f,c
 21064  0176D8  0EEB               	movlw	-21
 21065  0176DA  1EE3               	comf	plusw1,f,c
 21066  0176DC  0EEC               	movlw	-20
 21067  0176DE  1EE3               	comf	plusw1,f,c
 21068  0176E0  0EED               	movlw	-19
 21069  0176E2  1EE3               	comf	plusw1,f,c
 21070  0176E4  E314               	bnc	u6310
 21071  0176E6  0EE7               	movlw	-25
 21072  0176E8  2AE3               	incf	plusw1,f,c
 21073  0176EA  E311               	bnc	u6310
 21074  0176EC  0EE8               	movlw	-24
 21075  0176EE  2AE3               	incf	plusw1,f,c
 21076  0176F0  E30E               	bnc	u6310
 21077  0176F2  0EE9               	movlw	-23
 21078  0176F4  2AE3               	incf	plusw1,f,c
 21079  0176F6  E30B               	bnc	u6310
 21080  0176F8  0EEA               	movlw	-22
 21081  0176FA  2AE3               	incf	plusw1,f,c
 21082  0176FC  E308               	bnc	u6310
 21083  0176FE  0EEB               	movlw	-21
 21084  017700  2AE3               	incf	plusw1,f,c
 21085  017702  E305               	bnc	u6310
 21086  017704  0EEC               	movlw	-20
 21087  017706  2AE3               	incf	plusw1,f,c
 21088  017708  E302               	bnc	u6310
 21089  01770A  0EED               	movlw	-19
 21090  01770C  2AE3               	incf	plusw1,f,c
 21091  01770E                     u6310:
 21092                           
 21093                           ;stkvar	_sign @ sp[(-10)+8]
 21094  01770E  0EFE               	movlw	-2
 21095  017710  6AE3               	clrf	plusw1,c
 21096  017712  2AE3               	incf	plusw1,f,c
 21097  017714                     l8114:
 21098                           
 21099                           ;stkvar	_dividend @ sp[(-10)+-8]
 21100  017714  0EF5               	movlw	-11
 21101  017716  AEE3               	btfss	plusw1,7,c
 21102  017718  D027               	goto	l8120
 21103                           
 21104                           ;stkvar	_dividend @ sp[(-10)+-8]
 21105                           ;stkvar	_dividend @ sp[(-10)+-8]
 21106  01771A  0EEE               	movlw	-18
 21107  01771C  6CE3               	negf	plusw1,c
 21108  01771E  0EEF               	movlw	-17
 21109  017720  1EE3               	comf	plusw1,f,c
 21110  017722  0EF0               	movlw	-16
 21111  017724  1EE3               	comf	plusw1,f,c
 21112  017726  0EF1               	movlw	-15
 21113  017728  1EE3               	comf	plusw1,f,c
 21114  01772A  0EF2               	movlw	-14
 21115  01772C  1EE3               	comf	plusw1,f,c
 21116  01772E  0EF3               	movlw	-13
 21117  017730  1EE3               	comf	plusw1,f,c
 21118  017732  0EF4               	movlw	-12
 21119  017734  1EE3               	comf	plusw1,f,c
 21120  017736  0EF5               	movlw	-11
 21121  017738  1EE3               	comf	plusw1,f,c
 21122  01773A  E314               	bnc	u6330
 21123  01773C  0EEF               	movlw	-17
 21124  01773E  2AE3               	incf	plusw1,f,c
 21125  017740  E311               	bnc	u6330
 21126  017742  0EF0               	movlw	-16
 21127  017744  2AE3               	incf	plusw1,f,c
 21128  017746  E30E               	bnc	u6330
 21129  017748  0EF1               	movlw	-15
 21130  01774A  2AE3               	incf	plusw1,f,c
 21131  01774C  E30B               	bnc	u6330
 21132  01774E  0EF2               	movlw	-14
 21133  017750  2AE3               	incf	plusw1,f,c
 21134  017752  E308               	bnc	u6330
 21135  017754  0EF3               	movlw	-13
 21136  017756  2AE3               	incf	plusw1,f,c
 21137  017758  E305               	bnc	u6330
 21138  01775A  0EF4               	movlw	-12
 21139  01775C  2AE3               	incf	plusw1,f,c
 21140  01775E  E302               	bnc	u6330
 21141  017760  0EF5               	movlw	-11
 21142  017762  2AE3               	incf	plusw1,f,c
 21143  017764                     u6330:
 21144                           
 21145                           ;stkvar	_sign @ sp[(-10)+8]
 21146  017764  0EFE               	movlw	-2
 21147  017766  70E3               	btg	plusw1,0,c
 21148  017768                     l8120:
 21149                           
 21150                           ;stkvar	_quotient @ sp[(-10)+0]
 21151  017768  0E07               	movlw	7
 21152  01776A  6E01               	movwf	btemp^0,c
 21153  01776C  0EF6               	movlw	-10
 21154  01776E                     u6341:
 21155  01776E  6AE3               	clrf	plusw1,c
 21156  017770  2AE8               	incf	wreg,f,c
 21157  017772  0601               	decf	btemp^0,f,c
 21158  017774  E2FC               	bc	u6341
 21159                           
 21160                           ;stkvar	_divisor @ sp[(-10)+-16]
 21161  017776  0EE6               	movlw	-26
 21162  017778  50E3               	movf	plusw1,w,c
 21163  01777A  E116               	bnz	u6350
 21164  01777C  0EE7               	movlw	-25
 21165  01777E  50E3               	movf	plusw1,w,c
 21166  017780  E113               	bnz	u6350
 21167  017782  0EE8               	movlw	-24
 21168  017784  50E3               	movf	plusw1,w,c
 21169  017786  E110               	bnz	u6350
 21170  017788  0EE9               	movlw	-23
 21171  01778A  50E3               	movf	plusw1,w,c
 21172  01778C  E10D               	bnz	u6350
 21173  01778E  0EEA               	movlw	-22
 21174  017790  50E3               	movf	plusw1,w,c
 21175  017792  E10A               	bnz	u6350
 21176  017794  0EEB               	movlw	-21
 21177  017796  50E3               	movf	plusw1,w,c
 21178  017798  E107               	bnz	u6350
 21179  01779A  0EEC               	movlw	-20
 21180  01779C  50E3               	movf	plusw1,w,c
 21181  01779E  E104               	bnz	u6350
 21182  0177A0  0EED               	movlw	-19
 21183  0177A2  50E3               	movf	plusw1,w,c
 21184  0177A4  B4D8               	btfsc	status,2,c
 21185  0177A6  D088               	goto	u6380
 21186  0177A8                     u6350:
 21187                           
 21188                           ;stkvar	_counter @ sp[(-10)+9]
 21189  0177A8  0EFF               	movlw	-1
 21190  0177AA  6AE3               	clrf	plusw1,c
 21191  0177AC  D012               	goto	L26
 21192  0177AE                     l8126:
 21193                           
 21194                           ;stkvar	_divisor @ sp[(-10)+-16]
 21195  0177AE  90D8               	bcf	status,0,c
 21196  0177B0  0EE6               	movlw	-26
 21197  0177B2  36E3               	rlcf	plusw1,f,c
 21198  0177B4  0EE7               	movlw	-25
 21199  0177B6  36E3               	rlcf	plusw1,f,c
 21200  0177B8  0EE8               	movlw	-24
 21201  0177BA  36E3               	rlcf	plusw1,f,c
 21202  0177BC  0EE9               	movlw	-23
 21203  0177BE  36E3               	rlcf	plusw1,f,c
 21204  0177C0  0EEA               	movlw	-22
 21205  0177C2  36E3               	rlcf	plusw1,f,c
 21206  0177C4  0EEB               	movlw	-21
 21207  0177C6  36E3               	rlcf	plusw1,f,c
 21208  0177C8  0EEC               	movlw	-20
 21209  0177CA  36E3               	rlcf	plusw1,f,c
 21210  0177CC  0EED               	movlw	-19
 21211  0177CE  36E3               	rlcf	plusw1,f,c
 21212                           
 21213                           ;stkvar	_counter @ sp[(-10)+9]
 21214  0177D0  0EFF               	movlw	-1
 21215  0177D2                     L26:
 21216  0177D2  2AE3               	incf	plusw1,f,c
 21217                           
 21218                           ;stkvar	_divisor @ sp[(-10)+-16]
 21219  0177D4  0EED               	movlw	-19
 21220  0177D6  AEE3               	btfss	plusw1,7,c
 21221  0177D8  D7EA               	goto	l8126
 21222  0177DA                     u6360:
 21223                           
 21224                           ;stkvar	_quotient @ sp[(-10)+0]
 21225  0177DA  90D8               	bcf	status,0,c
 21226  0177DC  0EF6               	movlw	-10
 21227  0177DE  36E3               	rlcf	plusw1,f,c
 21228  0177E0  0EF7               	movlw	-9
 21229  0177E2  36E3               	rlcf	plusw1,f,c
 21230  0177E4  0EF8               	movlw	-8
 21231  0177E6  36E3               	rlcf	plusw1,f,c
 21232  0177E8  0EF9               	movlw	-7
 21233  0177EA  36E3               	rlcf	plusw1,f,c
 21234  0177EC  0EFA               	movlw	-6
 21235  0177EE  36E3               	rlcf	plusw1,f,c
 21236  0177F0  0EFB               	movlw	-5
 21237  0177F2  36E3               	rlcf	plusw1,f,c
 21238  0177F4  0EFC               	movlw	-4
 21239  0177F6  36E3               	rlcf	plusw1,f,c
 21240  0177F8  0EFD               	movlw	-3
 21241  0177FA  36E3               	rlcf	plusw1,f,c
 21242                           
 21243                           ;stkvar	_divisor @ sp[(-10)+-16]
 21244                           ;stkvar	_dividend @ sp[(-10)+-8]
 21245  0177FC  50E1               	movf	fsr1l,w,c
 21246  0177FE  0FEE               	addlw	-18
 21247  017800  6ED9               	movwf	fsr2l,c
 21248  017802  50E2               	movf	fsr1h,w,c
 21249  017804  6EDA               	movwf	fsr2h,c
 21250  017806  0EFF               	movlw	255
 21251  017808  22DA               	addwfc	fsr2h,f,c
 21252  01780A  0EE6               	movlw	-26
 21253  01780C  50E3               	movf	plusw1,w,c
 21254  01780E  5CDE               	subwf	postinc2,w,c
 21255  017810  0EE7               	movlw	-25
 21256  017812  50E3               	movf	plusw1,w,c
 21257  017814  58DE               	subwfb	postinc2,w,c
 21258  017816  0EE8               	movlw	-24
 21259  017818  50E3               	movf	plusw1,w,c
 21260  01781A  58DE               	subwfb	postinc2,w,c
 21261  01781C  0EE9               	movlw	-23
 21262  01781E  50E3               	movf	plusw1,w,c
 21263  017820  58DE               	subwfb	postinc2,w,c
 21264  017822  0EEA               	movlw	-22
 21265  017824  50E3               	movf	plusw1,w,c
 21266  017826  58DE               	subwfb	postinc2,w,c
 21267  017828  0EEB               	movlw	-21
 21268  01782A  50E3               	movf	plusw1,w,c
 21269  01782C  58DE               	subwfb	postinc2,w,c
 21270  01782E  0EEC               	movlw	-20
 21271  017830  50E3               	movf	plusw1,w,c
 21272  017832  58DE               	subwfb	postinc2,w,c
 21273  017834  0EED               	movlw	-19
 21274  017836  50E3               	movf	plusw1,w,c
 21275  017838  58DE               	subwfb	postinc2,w,c
 21276  01783A  A0D8               	btfss	status,0,c
 21277  01783C  D021               	goto	l8138
 21278                           
 21279                           ;stkvar	_divisor @ sp[(-10)+-16]
 21280                           ;stkvar	_dividend @ sp[(-10)+-8]
 21281  01783E  50E1               	movf	fsr1l,w,c
 21282  017840  0FEE               	addlw	-18
 21283  017842  6ED9               	movwf	fsr2l,c
 21284  017844  50E2               	movf	fsr1h,w,c
 21285  017846  6EDA               	movwf	fsr2h,c
 21286  017848  0EFF               	movlw	255
 21287  01784A  22DA               	addwfc	fsr2h,f,c
 21288  01784C  0EE6               	movlw	-26
 21289  01784E  50E3               	movf	plusw1,w,c
 21290  017850  5EDE               	subwf	postinc2,f,c
 21291  017852  0EE7               	movlw	-25
 21292  017854  50E3               	movf	plusw1,w,c
 21293  017856  5ADE               	subwfb	postinc2,f,c
 21294  017858  0EE8               	movlw	-24
 21295  01785A  50E3               	movf	plusw1,w,c
 21296  01785C  5ADE               	subwfb	postinc2,f,c
 21297  01785E  0EE9               	movlw	-23
 21298  017860  50E3               	movf	plusw1,w,c
 21299  017862  5ADE               	subwfb	postinc2,f,c
 21300  017864  0EEA               	movlw	-22
 21301  017866  50E3               	movf	plusw1,w,c
 21302  017868  5ADE               	subwfb	postinc2,f,c
 21303  01786A  0EEB               	movlw	-21
 21304  01786C  50E3               	movf	plusw1,w,c
 21305  01786E  5ADE               	subwfb	postinc2,f,c
 21306  017870  0EEC               	movlw	-20
 21307  017872  50E3               	movf	plusw1,w,c
 21308  017874  5ADE               	subwfb	postinc2,f,c
 21309  017876  0EED               	movlw	-19
 21310  017878  50E3               	movf	plusw1,w,c
 21311  01787A  5ADE               	subwfb	postinc2,f,c
 21312                           
 21313                           ;stkvar	_quotient @ sp[(-10)+0]
 21314  01787C  0EF6               	movlw	-10
 21315  01787E  80E3               	bsf	plusw1,0,c
 21316  017880                     l8138:
 21317                           
 21318                           ;stkvar	_divisor @ sp[(-10)+-16]
 21319  017880  90D8               	bcf	status,0,c
 21320  017882  0EED               	movlw	-19
 21321  017884  32E3               	rrcf	plusw1,f,c
 21322  017886  0EEC               	movlw	-20
 21323  017888  32E3               	rrcf	plusw1,f,c
 21324  01788A  0EEB               	movlw	-21
 21325  01788C  32E3               	rrcf	plusw1,f,c
 21326  01788E  0EEA               	movlw	-22
 21327  017890  32E3               	rrcf	plusw1,f,c
 21328  017892  0EE9               	movlw	-23
 21329  017894  32E3               	rrcf	plusw1,f,c
 21330  017896  0EE8               	movlw	-24
 21331  017898  32E3               	rrcf	plusw1,f,c
 21332  01789A  0EE7               	movlw	-25
 21333  01789C  32E3               	rrcf	plusw1,f,c
 21334  01789E  0EE6               	movlw	-26
 21335  0178A0  32E3               	rrcf	plusw1,f,c
 21336                           
 21337                           ;stkvar	_counter @ sp[(-10)+9]
 21338  0178A2  0EFF               	movlw	-1
 21339  0178A4  50E3               	movf	plusw1,w,c
 21340  0178A6  6E01               	movwf	btemp^0,c
 21341  0178A8  0E01               	movlw	1
 21342  0178AA  5E01               	subwf	btemp^0,f,c
 21343  0178AC  0EFF               	movlw	-1
 21344  0178AE  0060  F007  FFE3   	movff	btemp,plusw1
 21345  0178B4  A4D8               	btfss	status,2,c
 21346  0178B6  D791               	goto	u6360
 21347  0178B8                     u6380:
 21348                           
 21349                           ;stkvar	_sign @ sp[(-10)+8]
 21350  0178B8  0EFE               	movlw	-2
 21351  0178BA  50E3               	movf	plusw1,w,c
 21352  0178BC  B4D8               	btfsc	status,2,c
 21353  0178BE  D025               	goto	u6400
 21354                           
 21355                           ;stkvar	_quotient @ sp[(-10)+0]
 21356                           ;stkvar	_quotient @ sp[(-10)+0]
 21357  0178C0  0EF6               	movlw	-10
 21358  0178C2  6CE3               	negf	plusw1,c
 21359  0178C4  0EF7               	movlw	-9
 21360  0178C6  1EE3               	comf	plusw1,f,c
 21361  0178C8  0EF8               	movlw	-8
 21362  0178CA  1EE3               	comf	plusw1,f,c
 21363  0178CC  0EF9               	movlw	-7
 21364  0178CE  1EE3               	comf	plusw1,f,c
 21365  0178D0  0EFA               	movlw	-6
 21366  0178D2  1EE3               	comf	plusw1,f,c
 21367  0178D4  0EFB               	movlw	-5
 21368  0178D6  1EE3               	comf	plusw1,f,c
 21369  0178D8  0EFC               	movlw	-4
 21370  0178DA  1EE3               	comf	plusw1,f,c
 21371  0178DC  0EFD               	movlw	-3
 21372  0178DE  1EE3               	comf	plusw1,f,c
 21373  0178E0  E314               	bnc	u6400
 21374  0178E2  0EF7               	movlw	-9
 21375  0178E4  2AE3               	incf	plusw1,f,c
 21376  0178E6  E311               	bnc	u6400
 21377  0178E8  0EF8               	movlw	-8
 21378  0178EA  2AE3               	incf	plusw1,f,c
 21379  0178EC  E30E               	bnc	u6400
 21380  0178EE  0EF9               	movlw	-7
 21381  0178F0  2AE3               	incf	plusw1,f,c
 21382  0178F2  E30B               	bnc	u6400
 21383  0178F4  0EFA               	movlw	-6
 21384  0178F6  2AE3               	incf	plusw1,f,c
 21385  0178F8  E308               	bnc	u6400
 21386  0178FA  0EFB               	movlw	-5
 21387  0178FC  2AE3               	incf	plusw1,f,c
 21388  0178FE  E305               	bnc	u6400
 21389  017900  0EFC               	movlw	-4
 21390  017902  2AE3               	incf	plusw1,f,c
 21391  017904  E302               	bnc	u6400
 21392  017906  0EFD               	movlw	-3
 21393  017908  2AE3               	incf	plusw1,f,c
 21394  01790A                     u6400:
 21395                           
 21396                           ;stkvar	_quotient @ sp[(-10)+0]
 21397  01790A  0EF6               	movlw	246
 21398  01790C  24E1               	addwf	fsr1l,w,c
 21399  01790E  6ED9               	movwf	fsr2l,c
 21400  017910  0EFF               	movlw	255
 21401  017912  20E2               	addwfc	fsr1h,w,c
 21402  017914  6EDA               	movwf	fsr2h,c
 21403                           
 21404                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 21405  017916  0E08               	movlw	8
 21406  017918  6E01               	movwf	btemp^0,c
 21407  01791A  0EEE               	movlw	-18
 21408  01791C                     us641999:
 21409  01791C  006F FF7B FFE3     	movff	postinc2,plusw1
 21410  017922  28E8               	incf	wreg,w,c
 21411  017924  2E01               	decfsz	btemp^0,f,c
 21412  017926  D7FA               	bra	us641999
 21413                           
 21414                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 21415  017928  0EF6               	movlw	246
 21416  01792A  26E1               	addwf	fsr1l,f,c
 21417  01792C  0EFF               	movlw	255
 21418  01792E  22E2               	addwfc	fsr1h,f,c
 21419  017930  0012               	return		;funcret
 21420  017932                     __end_of___aodiv:
 21421                           	opt callstack 0
 21422                           
 21423 ;; *************** function _ctoa *****************
 21424 ;; Defined at:
 21425 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21426 ;; Parameters:    Size  Location     Type
 21427 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21428 ;;		 -> f(6), NULL(0), 
 21429 ;;  c               1  [STACK] unsigned char 
 21430 ;; Auto vars:     Size  Location     Type
 21431 ;;  w               2  [STACK] int 
 21432 ;;  l               2    0        int 
 21433 ;; Return value:  Size  Location     Type
 21434 ;;                  2  [STACK] int 
 21435 ;; Registers used:
 21436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21437 ;; Tracked objects:
 21438 ;;		On entry : 0/0
 21439 ;;		On exit  : 0/0
 21440 ;;		Unchanged: 0/0
 21441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21446 ;;Total ram usage:        0 bytes
 21447 ;; Hardware stack levels used:    1
 21448 ;; Hardware stack levels required when called:   20
 21449 ;; This function calls:
 21450 ;;		_pad
 21451 ;; This function is called by:
 21452 ;;		_vfpfcnvrt
 21453 ;; This function uses a reentrant model
 21454 ;;
 21455                           
 21456                           	psect	text72
 21457  01AC1E                     __ptext72:
 21458                           	opt callstack 0
 21459  01AC1E                     _ctoa:
 21460                           	opt callstack 0
 21461                           
 21462                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21463  01AC1E  52E6               	movf	postinc1,f,c
 21464  01AC20  52E6               	movf	postinc1,f,c
 21465                           
 21466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21467                           
 21468                           ;incstack = 0
 21469 ;; hardware stack exceeded
 21470  01AC22  503A               	movf	_width^0,w,c
 21471  01AC24  103B               	iorwf	(_width+1)^0,w,c
 21472  01AC26  A4D8               	btfss	status,2,c
 21473  01AC28  D009               	goto	l11912
 21474                           
 21475                           ;stkvar	_w @ sp[(-2)+0]
 21476  01AC2A  0EFE               	movlw	-2
 21477  01AC2C  0060  F0EB  FFE3   	movff	_width,plusw1
 21478  01AC32  0EFF               	movlw	-1
 21479  01AC34  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21480  01AC3A  D016               	goto	l11914
 21481  01AC3C                     l11912:
 21482  01AC3C  0EFF               	movlw	255
 21483  01AC3E  6E0B               	movwf	(btemp+10)^0,c
 21484  01AC40  0EFF               	movlw	255
 21485  01AC42  6E0C               	movwf	(btemp+11)^0,c
 21486  01AC44  0060  F0E8  F009   	movff	_width,btemp+8
 21487  01AC4A  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21488  01AC50  500B               	movf	(btemp+10)^0,w,c
 21489  01AC52  2609               	addwf	(btemp+8)^0,f,c
 21490  01AC54  500C               	movf	(btemp+11)^0,w,c
 21491  01AC56  220A               	addwfc	(btemp+9)^0,f,c
 21492                           
 21493                           ;stkvar	_w @ sp[(-2)+0]
 21494  01AC58  0EFE               	movlw	-2
 21495  01AC5A  0060  F027  FFE3   	movff	btemp+8,plusw1
 21496  01AC60  0EFF               	movlw	-1
 21497  01AC62  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21498  01AC68                     l11914:
 21499                           
 21500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21501                           ;stkvar	_c @ sp[(-2)+-3]
 21502  01AC68  0EFB               	movlw	-5
 21503  01AC6A  006F FF8C  F297    	movff	plusw1,_dbuf
 21504                           
 21505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21506  01AC70  0102               	movlb	2	; () banked
 21507  01AC72  6B98               	clrf	(_dbuf+1)& (0+255),b
 21508                           
 21509                           ; BSR set to: 2
 21510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21511                           ;stkvar	_w @ sp[(-2)+0]
 21512  01AC74  0EFE               	movlw	-2
 21513  01AC76  006F FF8F FFE6     	movff	plusw1,postinc1
 21514  01AC7C  006F FF8F FFE6     	movff	plusw1,postinc1
 21515  01AC82  0E97               	movlw	low _dbuf
 21516  01AC84  6EE6               	movwf	postinc1,c
 21517  01AC86  0E02               	movlw	high _dbuf
 21518  01AC88  6EE6               	movwf	postinc1,c
 21519                           
 21520                           ;stkvar	_fp @ sp[(-6)+-2]
 21521  01AC8A  0EF8               	movlw	-8
 21522  01AC8C  006F FF8F FFE6     	movff	plusw1,postinc1
 21523  01AC92  006F FF8F FFE6     	movff	plusw1,postinc1
 21524  01AC98  EC73  F0CD         	call	_pad	;wreg free
 21525                           
 21526                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21527  01AC9C  0EFB               	movlw	251
 21528  01AC9E  26E1               	addwf	fsr1l,f,c
 21529  01ACA0  0EFF               	movlw	255
 21530  01ACA2  22E2               	addwfc	fsr1h,f,c
 21531  01ACA4  0012               	return		;funcret
 21532  01ACA6                     __end_of_ctoa:
 21533                           	opt callstack 0
 21534                           
 21535 ;; *************** function _pad *****************
 21536 ;; Defined at:
 21537 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21538 ;; Parameters:    Size  Location     Type
 21539 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21540 ;;		 -> f(6), NULL(0), 
 21541 ;;  buf             2  [STACK] PTR unsigned char 
 21542 ;;		 -> dbuf(80), 
 21543 ;;  p               2  [STACK] int 
 21544 ;; Auto vars:     Size  Location     Type
 21545 ;;  w               2  [STACK] int 
 21546 ;;  i               2  [STACK] int 
 21547 ;; Return value:  Size  Location     Type
 21548 ;;                  2  [STACK] int 
 21549 ;; Registers used:
 21550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21551 ;; Tracked objects:
 21552 ;;		On entry : 0/2
 21553 ;;		On exit  : 0/0
 21554 ;;		Unchanged: 0/0
 21555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21560 ;;Total ram usage:        0 bytes
 21561 ;; Hardware stack levels used:    1
 21562 ;; Hardware stack levels required when called:   19
 21563 ;; This function calls:
 21564 ;;		_fputc
 21565 ;;		_fputs
 21566 ;;		_strlen
 21567 ;; This function is called by:
 21568 ;;		_ctoa
 21569 ;;		_dtoa
 21570 ;;		_efgtoa
 21571 ;;		_utoa
 21572 ;;		_xtoa
 21573 ;; This function uses a reentrant model
 21574 ;;
 21575                           
 21576                           	psect	text73
 21577  019AE6                     __ptext73:
 21578                           	opt callstack 0
 21579  019AE6                     _pad:
 21580                           	opt callstack 0
 21581                           
 21582                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21583  019AE6  52E6               	movf	postinc1,f,c
 21584  019AE8  52E6               	movf	postinc1,f,c
 21585  019AEA  52E6               	movf	postinc1,f,c
 21586  019AEC  52E6               	movf	postinc1,f,c
 21587                           
 21588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21589                           
 21590                           ;incstack = 0
 21591 ;; hardware stack exceeded
 21592  019AEE  A03E               	btfss	_flags^0,0,c
 21593  019AF0  D010               	goto	l11874
 21594                           
 21595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21596                           ;stkvar	_fp @ sp[(-4)+-2]
 21597  019AF2  0EFA               	movlw	-6
 21598  019AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 21599  019AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 21600                           
 21601                           ;stkvar	_buf @ sp[(-6)+-4]
 21602  019B00  0EF6               	movlw	-10
 21603  019B02  006F FF8F FFE6     	movff	plusw1,postinc1
 21604  019B08  006F FF8F FFE6     	movff	plusw1,postinc1
 21605  019B0E  ECE9  F0D4         	call	_fputs	;wreg free
 21606  019B12                     l11874:
 21607                           
 21608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21609                           ;stkvar	_p @ sp[(-4)+-6]
 21610  019B12  0EF7               	movlw	-9
 21611  019B14  BEE3               	btfsc	plusw1,7,c
 21612  019B16  D011               	goto	l11878
 21613                           
 21614                           ;stkvar	_p @ sp[(-4)+-6]
 21615                           ;stkvar	_w @ sp[(-4)+0]
 21616  019B18  0EF6               	movlw	-10
 21617  019B1A  006F FF8C  F001    	movff	plusw1,btemp
 21618  019B20  0EFC               	movlw	-4
 21619  019B22  0060  F007  FFE3   	movff	btemp,plusw1
 21620  019B28  0EF7               	movlw	-9
 21621  019B2A  006F FF8C  F001    	movff	plusw1,btemp
 21622  019B30  0EFD               	movlw	-3
 21623  019B32  0060  F007  FFE3   	movff	btemp,plusw1
 21624  019B38  D004               	goto	l2138
 21625  019B3A                     l11878:
 21626                           
 21627                           ;stkvar	_w @ sp[(-4)+0]
 21628  019B3A  0EFC               	movlw	-4
 21629  019B3C  6AE3               	clrf	plusw1,c
 21630  019B3E  0EFD               	movlw	-3
 21631  019B40  6AE3               	clrf	plusw1,c
 21632  019B42                     l2138:
 21633                           
 21634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21635                           ;stkvar	_i @ sp[(-4)+2]
 21636  019B42  0EFE               	movlw	-2
 21637  019B44  6AE3               	clrf	plusw1,c
 21638  019B46  0EFF               	movlw	-1
 21639  019B48  6AE3               	clrf	plusw1,c
 21640                           
 21641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21642  019B4A  D01E               	goto	l11884
 21643  019B4C                     l11880:
 21644                           
 21645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21646                           ;stkvar	_fp @ sp[(-4)+-2]
 21647  019B4C  0EFA               	movlw	-6
 21648  019B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 21649  019B54  006F FF8F FFE6     	movff	plusw1,postinc1
 21650  019B5A  0E20               	movlw	32
 21651  019B5C  6EE6               	movwf	postinc1,c
 21652  019B5E  0E00               	movlw	0
 21653  019B60  6EE6               	movwf	postinc1,c
 21654  019B62  ECC8  F0CB         	call	_fputc	;wreg free
 21655                           
 21656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21657                           ;stkvar	_i @ sp[(-4)+2]
 21658  019B66  0EFE               	movlw	-2
 21659  019B68  50E3               	movf	plusw1,w,c
 21660  019B6A  0F01               	addlw	1
 21661  019B6C  6E01               	movwf	btemp^0,c
 21662  019B6E  0EFE               	movlw	-2
 21663  019B70  0060  F007  FFE3   	movff	btemp,plusw1
 21664  019B76  6A01               	clrf	btemp^0,c
 21665  019B78  0EFF               	movlw	-1
 21666  019B7A  50E3               	movf	plusw1,w,c
 21667  019B7C  2001               	addwfc	btemp^0,w,c
 21668  019B7E  6E01               	movwf	btemp^0,c
 21669  019B80  0EFF               	movlw	-1
 21670  019B82  0060  F007  FFE3   	movff	btemp,plusw1
 21671  019B88                     l11884:
 21672                           
 21673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21674                           ;stkvar	_w @ sp[(-4)+0]
 21675                           ;stkvar	_i @ sp[(-4)+2]
 21676  019B88  50E1               	movf	fsr1l,w,c
 21677  019B8A  0FFE               	addlw	-2
 21678  019B8C  6ED9               	movwf	fsr2l,c
 21679  019B8E  50E2               	movf	fsr1h,w,c
 21680  019B90  6EDA               	movwf	fsr2h,c
 21681  019B92  0EFF               	movlw	255
 21682  019B94  22DA               	addwfc	fsr2h,f,c
 21683  019B96  0EFC               	movlw	-4
 21684  019B98  50E3               	movf	plusw1,w,c
 21685  019B9A  5CDE               	subwf	postinc2,w,c
 21686  019B9C  50DE               	movf	postinc2,w,c
 21687  019B9E  0A80               	xorlw	128
 21688  019BA0  6E01               	movwf	btemp^0,c
 21689  019BA2  0EFD               	movlw	-3
 21690  019BA4  50E3               	movf	plusw1,w,c
 21691  019BA6  0A80               	xorlw	128
 21692  019BA8  5801               	subwfb	btemp^0,w,c
 21693  019BAA  A0D8               	btfss	status,0,c
 21694  019BAC  D7CF               	goto	l11880
 21695                           
 21696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21697  019BAE  B03E               	btfsc	_flags^0,0,c
 21698  019BB0  D010               	goto	l11888
 21699                           
 21700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21701                           ;stkvar	_fp @ sp[(-4)+-2]
 21702  019BB2  0EFA               	movlw	-6
 21703  019BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 21704  019BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 21705                           
 21706                           ;stkvar	_buf @ sp[(-6)+-4]
 21707  019BC0  0EF6               	movlw	-10
 21708  019BC2  006F FF8F FFE6     	movff	plusw1,postinc1
 21709  019BC8  006F FF8F FFE6     	movff	plusw1,postinc1
 21710  019BCE  ECE9  F0D4         	call	_fputs	;wreg free
 21711  019BD2                     l11888:
 21712                           
 21713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21714                           ;stkvar	_w @ sp[(-4)+0]
 21715                           ;stkvar	_buf @ sp[(-4)+-4]
 21716  019BD2  0EF8               	movlw	-8
 21717  019BD4  006F FF8F FFE6     	movff	plusw1,postinc1
 21718  019BDA  006F FF8F FFE6     	movff	plusw1,postinc1
 21719  019BE0  EC98  F0D4         	call	_strlen	;wreg free
 21720  019BE4  0EFC               	movlw	-4
 21721  019BE6  50E3               	movf	plusw1,w,c
 21722  019BE8  2601               	addwf	btemp^0,f,c
 21723  019BEA  0EFD               	movlw	-3
 21724  019BEC  50E3               	movf	plusw1,w,c
 21725  019BEE  2202               	addwfc	(btemp+1)^0,f,c
 21726                           
 21727                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21728  019BF0  0EF6               	movlw	246
 21729  019BF2  26E1               	addwf	fsr1l,f,c
 21730  019BF4  0EFF               	movlw	255
 21731  019BF6  22E2               	addwfc	fsr1h,f,c
 21732  019BF8  0012               	return		;funcret
 21733  019BFA                     __end_of_pad:
 21734                           	opt callstack 0
 21735                           
 21736 ;; *************** function _strlen *****************
 21737 ;; Defined at:
 21738 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21739 ;; Parameters:    Size  Location     Type
 21740 ;;  s               2  [STACK] PTR const unsigned char 
 21741 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21742 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 21743 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 21744 ;;		 -> V(191), 
 21745 ;; Auto vars:     Size  Location     Type
 21746 ;;  a               2  [STACK] PTR const unsigned char 
 21747 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21748 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 21749 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 21750 ;;		 -> V(191), 
 21751 ;; Return value:  Size  Location     Type
 21752 ;;                  2  [STACK] unsigned int 
 21753 ;; Registers used:
 21754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21755 ;; Tracked objects:
 21756 ;;		On entry : 0/0
 21757 ;;		On exit  : 0/0
 21758 ;;		Unchanged: 0/0
 21759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21764 ;;Total ram usage:        0 bytes
 21765 ;; Hardware stack levels used:    1
 21766 ;; Hardware stack levels required when called:   15
 21767 ;; This function calls:
 21768 ;;		Nothing
 21769 ;; This function is called by:
 21770 ;;		_eaDogM_WriteString
 21771 ;;		_spinners
 21772 ;;		_calc_bsoc
 21773 ;;		_pad
 21774 ;;		_stoa
 21775 ;; This function uses a reentrant model
 21776 ;;
 21777                           
 21778                           	psect	text74
 21779  01A930                     __ptext74:
 21780                           	opt callstack 0
 21781  01A930                     _strlen:
 21782                           	opt callstack 0
 21783                           
 21784                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21785  01A930  52E6               	movf	postinc1,f,c
 21786  01A932  52E6               	movf	postinc1,f,c
 21787                           
 21788                           ;stkvar	_s @ sp[(-2)+-2]
 21789                           
 21790                           ;incstack = 0
 21791 ;; hardware stack exceeded
 21792  01A934  0EFC               	movlw	-4
 21793  01A936  006F FF8C  F00B    	movff	plusw1,btemp+10
 21794  01A93C  0EFD               	movlw	-3
 21795  01A93E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21796                           
 21797                           ;stkvar	_a @ sp[(-2)+0]
 21798  01A944  0EFF               	movlw	-1
 21799  01A946  0060  F033  FFE3   	movff	btemp+11,plusw1
 21800  01A94C  0EFE               	movlw	-2
 21801  01A94E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21802  01A954  D011               	goto	l7690
 21803  01A956                     l7688:
 21804                           
 21805                           ;stkvar	_s @ sp[(-2)+-2]
 21806  01A956  0EFC               	movlw	-4
 21807  01A958  50E3               	movf	plusw1,w,c
 21808  01A95A  0F01               	addlw	1
 21809  01A95C  6E01               	movwf	btemp^0,c
 21810  01A95E  0EFC               	movlw	-4
 21811  01A960  0060  F007  FFE3   	movff	btemp,plusw1
 21812  01A966  6A01               	clrf	btemp^0,c
 21813  01A968  0EFD               	movlw	-3
 21814  01A96A  50E3               	movf	plusw1,w,c
 21815  01A96C  2001               	addwfc	btemp^0,w,c
 21816  01A96E  6E01               	movwf	btemp^0,c
 21817  01A970  0EFD               	movlw	-3
 21818  01A972  0060  F007  FFE3   	movff	btemp,plusw1
 21819  01A978                     l7690:
 21820                           
 21821                           ;stkvar	_s @ sp[(-2)+-2]
 21822  01A978  0EFC               	movlw	-4
 21823  01A97A  006F FF8F FFF6     	movff	plusw1,tblptrl
 21824  01A980  0EFD               	movlw	-3
 21825  01A982  006F FF8F FFF7     	movff	plusw1,tblptrh
 21826  01A988  0E00               	movlw	low (__mediumconst shr (0+16))
 21827  01A98A  6EF8               	movwf	tblptru,c
 21828  01A98C  0E1F               	movlw	(high __ramtop+-1)
 21829  01A98E  64F7               	cpfsgt	tblptrh,c
 21830  01A990  D003               	bra	u5427
 21831  01A992  0008               	tblrd		*
 21832  01A994  50F5               	movf	tablat,w,c
 21833  01A996  D007               	bra	u5420
 21834  01A998                     u5427:
 21835  01A998  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21836  01A99E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21837  01A9A4  50EF               	movf	indf0,w,c
 21838  01A9A6                     u5420:
 21839  01A9A6  0900               	iorlw	0
 21840  01A9A8  A4D8               	btfss	status,2,c
 21841  01A9AA  D7D5               	goto	l7688
 21842                           
 21843                           ;stkvar	_a @ sp[(-2)+0]
 21844                           ;stkvar	_s @ sp[(-2)+-2]
 21845  01A9AC  0EFC               	movlw	-4
 21846  01A9AE  006F FF8C  F001    	movff	plusw1,btemp
 21847  01A9B4  0EFD               	movlw	-3
 21848  01A9B6  006F FF8C  F002    	movff	plusw1,btemp+1
 21849  01A9BC  0EFE               	movlw	-2
 21850  01A9BE  50E3               	movf	plusw1,w,c
 21851  01A9C0  5E01               	subwf	btemp^0,f,c
 21852  01A9C2  0EFF               	movlw	-1
 21853  01A9C4  50E3               	movf	plusw1,w,c
 21854  01A9C6  5A02               	subwfb	(btemp+1)^0,f,c
 21855                           
 21856                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21857  01A9C8  52E5               	movf	postdec1,f,c
 21858  01A9CA  52E5               	movf	postdec1,f,c
 21859  01A9CC  52E5               	movf	postdec1,f,c
 21860  01A9CE  52E5               	movf	postdec1,f,c
 21861  01A9D0  0012               	return		;funcret
 21862  01A9D2                     __end_of_strlen:
 21863                           	opt callstack 0
 21864                           
 21865 ;; *************** function _fputs *****************
 21866 ;; Defined at:
 21867 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21868 ;; Parameters:    Size  Location     Type
 21869 ;;  s               2  [STACK] PTR const unsigned char 
 21870 ;;		 -> dbuf(80), 
 21871 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21872 ;;		 -> f(6), NULL(0), 
 21873 ;; Auto vars:     Size  Location     Type
 21874 ;;  i               2  [STACK] int 
 21875 ;;  c               1  [STACK] unsigned char 
 21876 ;; Return value:  Size  Location     Type
 21877 ;;                  2  [STACK] int 
 21878 ;; Registers used:
 21879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21880 ;; Tracked objects:
 21881 ;;		On entry : 0/2
 21882 ;;		On exit  : 0/0
 21883 ;;		Unchanged: 0/0
 21884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21889 ;;Total ram usage:        0 bytes
 21890 ;; Hardware stack levels used:    1
 21891 ;; Hardware stack levels required when called:   18
 21892 ;; This function calls:
 21893 ;;		_fputc
 21894 ;; This function is called by:
 21895 ;;		_pad
 21896 ;; This function uses a reentrant model
 21897 ;;
 21898                           
 21899                           	psect	text75
 21900  01A9D2                     __ptext75:
 21901                           	opt callstack 0
 21902  01A9D2                     _fputs:
 21903                           	opt callstack 0
 21904                           
 21905                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21906  01A9D2  52E6               	movf	postinc1,f,c
 21907  01A9D4  52E6               	movf	postinc1,f,c
 21908  01A9D6  52E6               	movf	postinc1,f,c
 21909                           
 21910                           ;stkvar	_i @ sp[(-3)+0]
 21911                           
 21912                           ;incstack = 0
 21913 ;; hardware stack exceeded
 21914  01A9D8  0EFD               	movlw	-3
 21915  01A9DA  6AE3               	clrf	plusw1,c
 21916  01A9DC  0EFE               	movlw	-2
 21917  01A9DE  6AE3               	clrf	plusw1,c
 21918  01A9E0  D01F               	goto	l11826
 21919  01A9E2                     l11822:
 21920                           
 21921                           ;stkvar	_fp @ sp[(-3)+-4]
 21922  01A9E2  0EF9               	movlw	-7
 21923  01A9E4  006F FF8F FFE6     	movff	plusw1,postinc1
 21924  01A9EA  006F FF8F FFE6     	movff	plusw1,postinc1
 21925                           
 21926                           ;stkvar	_c @ sp[(-5)+2]
 21927  01A9F0  0EFD               	movlw	-3
 21928  01A9F2  50E3               	movf	plusw1,w,c
 21929  01A9F4  6EE6               	movwf	postinc1,c
 21930  01A9F6  0E00               	movlw	0
 21931  01A9F8  6EE6               	movwf	postinc1,c
 21932  01A9FA  ECC8  F0CB         	call	_fputc	;wreg free
 21933                           
 21934                           ;stkvar	_i @ sp[(-3)+0]
 21935  01A9FE  0EFD               	movlw	-3
 21936  01AA00  50E3               	movf	plusw1,w,c
 21937  01AA02  0F01               	addlw	1
 21938  01AA04  6E01               	movwf	btemp^0,c
 21939  01AA06  0EFD               	movlw	-3
 21940  01AA08  0060  F007  FFE3   	movff	btemp,plusw1
 21941  01AA0E  6A01               	clrf	btemp^0,c
 21942  01AA10  0EFE               	movlw	-2
 21943  01AA12  50E3               	movf	plusw1,w,c
 21944  01AA14  2001               	addwfc	btemp^0,w,c
 21945  01AA16  6E01               	movwf	btemp^0,c
 21946  01AA18  0EFE               	movlw	-2
 21947  01AA1A  0060  F007  FFE3   	movff	btemp,plusw1
 21948  01AA20                     l11826:
 21949                           
 21950                           ;stkvar	_i @ sp[(-3)+0]
 21951  01AA20  0EFD               	movlw	-3
 21952  01AA22  006F FF8C  F00B    	movff	plusw1,btemp+10
 21953  01AA28  0EFE               	movlw	-2
 21954  01AA2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21955                           
 21956                           ;stkvar	_s @ sp[(-3)+-2]
 21957  01AA30  0EFB               	movlw	-5
 21958  01AA32  006F FF8C  F009    	movff	plusw1,btemp+8
 21959  01AA38  0EFC               	movlw	-4
 21960  01AA3A  006F FF8C  F00A    	movff	plusw1,btemp+9
 21961  01AA40  500B               	movf	(btemp+10)^0,w,c
 21962  01AA42  2409               	addwf	(btemp+8)^0,w,c
 21963  01AA44  6ED9               	movwf	fsr2l,c
 21964  01AA46  500C               	movf	(btemp+11)^0,w,c
 21965  01AA48  200A               	addwfc	(btemp+9)^0,w,c
 21966  01AA4A  6EDA               	movwf	fsr2h,c
 21967  01AA4C  50DF               	movf	indf2,w,c
 21968  01AA4E  6E0C               	movwf	(btemp+11)^0,c
 21969                           
 21970                           ;stkvar	_c @ sp[(-3)+2]
 21971  01AA50  0EFF               	movlw	-1
 21972  01AA52  0060  F033  FFE3   	movff	btemp+11,plusw1
 21973  01AA58  0EFF               	movlw	-1
 21974  01AA5A  50E3               	movf	plusw1,w,c
 21975  01AA5C  A4D8               	btfss	status,2,c
 21976  01AA5E  D7C1               	goto	l11822
 21977                           
 21978                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21979  01AA60  0EF9               	movlw	249
 21980  01AA62  26E1               	addwf	fsr1l,f,c
 21981  01AA64  0EFF               	movlw	255
 21982  01AA66  22E2               	addwfc	fsr1h,f,c
 21983  01AA68  0012               	return		;funcret
 21984  01AA6A                     __end_of_fputs:
 21985                           	opt callstack 0
 21986                           
 21987 ;; *************** function _fputc *****************
 21988 ;; Defined at:
 21989 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21990 ;; Parameters:    Size  Location     Type
 21991 ;;  c               2  [STACK] int 
 21992 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21993 ;;		 -> f(6), NULL(0), 
 21994 ;; Auto vars:     Size  Location     Type
 21995 ;;		None
 21996 ;; Return value:  Size  Location     Type
 21997 ;;                  2  [STACK] int 
 21998 ;; Registers used:
 21999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22000 ;; Tracked objects:
 22001 ;;		On entry : 0/0
 22002 ;;		On exit  : 0/0
 22003 ;;		Unchanged: 0/0
 22004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22009 ;;Total ram usage:        0 bytes
 22010 ;; Hardware stack levels used:    1
 22011 ;; Hardware stack levels required when called:   17
 22012 ;; This function calls:
 22013 ;;		_putch
 22014 ;; This function is called by:
 22015 ;;		_pad
 22016 ;;		_stoa
 22017 ;;		_vfpfcnvrt
 22018 ;;		_fputs
 22019 ;; This function uses a reentrant model
 22020 ;;
 22021                           
 22022                           	psect	text76
 22023  019790                     __ptext76:
 22024                           	opt callstack 0
 22025  019790                     _fputc:
 22026                           	opt callstack 0
 22027                           
 22028                           ;stkvar	_fp @ sp[(0)+-4]
 22029                           
 22030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22031                           ;incstack = 0
 22032 ;; hardware stack exceeded
 22033  019790  0EFC               	movlw	-4
 22034  019792  006F FF8C  F001    	movff	plusw1,btemp
 22035  019798  0EFD               	movlw	-3
 22036  01979A  50E3               	movf	plusw1,w,c
 22037  01979C  1001               	iorwf	btemp^0,w,c
 22038  01979E  B4D8               	btfsc	status,2,c
 22039  0197A0  D009               	goto	u10750
 22040                           
 22041                           ;stkvar	_fp @ sp[(0)+-4]
 22042  0197A2  0EFC               	movlw	-4
 22043  0197A4  006F FF8C  F001    	movff	plusw1,btemp
 22044  0197AA  0EFD               	movlw	-3
 22045  0197AC  50E3               	movf	plusw1,w,c
 22046  0197AE  1001               	iorwf	btemp^0,w,c
 22047  0197B0  A4D8               	btfss	status,2,c
 22048  0197B2  D006               	goto	l11810
 22049  0197B4                     u10750:
 22050                           
 22051                           ;stkvar	_c @ sp[(0)+-2]
 22052  0197B4  0EFE               	movlw	-2
 22053  0197B6  50E3               	movf	plusw1,w,c
 22054  0197B8  6EE6               	movwf	postinc1,c
 22055  0197BA  ECE5  F0DF         	call	_putch	;wreg free
 22056  0197BE  D075               	goto	l3184
 22057  0197C0                     l11810:
 22058                           
 22059                           ;stkvar	_fp @ sp[(0)+-4]
 22060  0197C0  0EFC               	movlw	-4
 22061  0197C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 22062  0197C8  0EFD               	movlw	-3
 22063  0197CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 22064  0197D0  0E04               	movlw	4
 22065  0197D2  240B               	addwf	(btemp+10)^0,w,c
 22066  0197D4  6ED9               	movwf	fsr2l,c
 22067  0197D6  0E00               	movlw	0
 22068  0197D8  200C               	addwfc	(btemp+11)^0,w,c
 22069  0197DA  6EDA               	movwf	fsr2h,c
 22070  0197DC  50DE               	movf	postinc2,w,c
 22071  0197DE  10DE               	iorwf	postinc2,w,c
 22072  0197E0  B4D8               	btfsc	status,2,c
 22073  0197E2  D026               	goto	u10770
 22074                           
 22075                           ;stkvar	_fp @ sp[(0)+-4]
 22076  0197E4  0EFC               	movlw	-4
 22077  0197E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22078  0197EC  0EFD               	movlw	-3
 22079  0197EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22080  0197F4  0E04               	movlw	4
 22081  0197F6  240B               	addwf	(btemp+10)^0,w,c
 22082  0197F8  6ED9               	movwf	fsr2l,c
 22083  0197FA  0E00               	movlw	0
 22084  0197FC  200C               	addwfc	(btemp+11)^0,w,c
 22085  0197FE  6EDA               	movwf	fsr2h,c
 22086                           
 22087                           ;stkvar	_fp @ sp[(0)+-4]
 22088  019800  0EFC               	movlw	-4
 22089  019802  006F FF8C  F00B    	movff	plusw1,btemp+10
 22090  019808  0EFD               	movlw	-3
 22091  01980A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22092  019810  0E02               	movlw	2
 22093  019812  240B               	addwf	(btemp+10)^0,w,c
 22094  019814  6EE9               	movwf	fsr0l,c
 22095  019816  0E00               	movlw	0
 22096  019818  200C               	addwfc	(btemp+11)^0,w,c
 22097  01981A  6EEA               	movwf	fsr0h,c
 22098  01981C  50DE               	movf	postinc2,w,c
 22099  01981E  5CEE               	subwf	postinc0,w,c
 22100  019820  50EE               	movf	postinc0,w,c
 22101  019822  0A80               	xorlw	128
 22102  019824  6E01               	movwf	btemp^0,c
 22103  019826  50DE               	movf	postinc2,w,c
 22104  019828  0A80               	xorlw	128
 22105  01982A  5801               	subwfb	btemp^0,w,c
 22106  01982C  B0D8               	btfsc	status,0,c
 22107  01982E  D03D               	goto	l3184
 22108  019830                     u10770:
 22109                           
 22110                           ;stkvar	_c @ sp[(0)+-2]
 22111                           ;stkvar	_fp @ sp[(0)+-4]
 22112  019830  0EFC               	movlw	-4
 22113  019832  006F FF8C  F00B    	movff	plusw1,btemp+10
 22114  019838  0EFD               	movlw	-3
 22115  01983A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22116  019840  0E02               	movlw	2
 22117  019842  240B               	addwf	(btemp+10)^0,w,c
 22118  019844  6ED9               	movwf	fsr2l,c
 22119  019846  0E00               	movlw	0
 22120  019848  200C               	addwfc	(btemp+11)^0,w,c
 22121  01984A  6EDA               	movwf	fsr2h,c
 22122  01984C  006F FF78  F00B    	movff	postinc2,btemp+10
 22123  019852  006F FF74  F00C    	movff	postdec2,btemp+11
 22124                           
 22125                           ;stkvar	_fp @ sp[(0)+-4]
 22126  019858  0EFC               	movlw	-4
 22127  01985A  006F FF8F FFD9     	movff	plusw1,fsr2l
 22128  019860  0EFD               	movlw	-3
 22129  019862  006F FF8F FFDA     	movff	plusw1,fsr2h
 22130  019868  006F FF78  F009    	movff	postinc2,btemp+8
 22131  01986E  006F FF74  F00A    	movff	postdec2,btemp+9
 22132  019874  500B               	movf	(btemp+10)^0,w,c
 22133  019876  2409               	addwf	(btemp+8)^0,w,c
 22134  019878  6ED9               	movwf	fsr2l,c
 22135  01987A  500C               	movf	(btemp+11)^0,w,c
 22136  01987C  200A               	addwfc	(btemp+9)^0,w,c
 22137  01987E  6EDA               	movwf	fsr2h,c
 22138  019880  0EFE               	movlw	-2
 22139  019882  006F FF8F FFDF     	movff	plusw1,indf2
 22140                           
 22141                           ;stkvar	_fp @ sp[(0)+-4]
 22142  019888  0EFC               	movlw	-4
 22143  01988A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22144  019890  0EFD               	movlw	-3
 22145  019892  006F FF8C  F00C    	movff	plusw1,btemp+11
 22146  019898  0E02               	movlw	2
 22147  01989A  240B               	addwf	(btemp+10)^0,w,c
 22148  01989C  6ED9               	movwf	fsr2l,c
 22149  01989E  0E00               	movlw	0
 22150  0198A0  200C               	addwfc	(btemp+11)^0,w,c
 22151  0198A2  6EDA               	movwf	fsr2h,c
 22152  0198A4  2ADE               	incf	postinc2,f,c
 22153  0198A6  0E00               	movlw	0
 22154  0198A8  22DD               	addwfc	postdec2,f,c
 22155  0198AA                     l3184:
 22156                           
 22157                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22158  0198AA  52E5               	movf	postdec1,f,c
 22159  0198AC  52E5               	movf	postdec1,f,c
 22160  0198AE  52E5               	movf	postdec1,f,c
 22161  0198B0  52E5               	movf	postdec1,f,c
 22162  0198B2  0012               	return		;funcret
 22163  0198B4                     __end_of_fputc:
 22164                           	opt callstack 0
 22165                           
 22166 ;; *************** function _putch *****************
 22167 ;; Defined at:
 22168 ;;		line 421 in file "eadog.c"
 22169 ;; Parameters:    Size  Location     Type
 22170 ;;  c               1  [STACK] unsigned char 
 22171 ;; Auto vars:     Size  Location     Type
 22172 ;;		None
 22173 ;; Return value:  Size  Location     Type
 22174 ;;                  1  [STACK] void 
 22175 ;; Registers used:
 22176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22177 ;; Tracked objects:
 22178 ;;		On entry : 0/0
 22179 ;;		On exit  : 0/0
 22180 ;;		Unchanged: 0/0
 22181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22186 ;;Total ram usage:        0 bytes
 22187 ;; Hardware stack levels used:    1
 22188 ;; Hardware stack levels required when called:   16
 22189 ;; This function calls:
 22190 ;;		_ringBufS_put_dma
 22191 ;; This function is called by:
 22192 ;;		_fputc
 22193 ;; This function uses a reentrant model
 22194 ;;
 22195                           
 22196                           	psect	text77
 22197  01BFCA                     __ptext77:
 22198                           	opt callstack 0
 22199  01BFCA                     _putch:
 22200                           	opt callstack 0
 22201                           
 22202                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22203                           ;stkvar	_c @ sp[(0)+-1]
 22204                           
 22205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22206                           ;incstack = 0
 22207 ;; hardware stack exceeded
 22208  01BFCA  0EFF               	movlw	-1
 22209  01BFCC  50E3               	movf	plusw1,w,c
 22210  01BFCE  6EE6               	movwf	postinc1,c
 22211  01BFD0  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 22212  01BFD6  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 22213  01BFDC  EC9C  F0D3         	call	_ringBufS_put_dma	;wreg free
 22214                           
 22215                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22216  01BFE0  52E5               	movf	postdec1,f,c
 22217  01BFE2  0012               	return		;funcret
 22218  01BFE4                     __end_of_putch:
 22219                           	opt callstack 0
 22220                           
 22221 ;; *************** function _ringBufS_put_dma *****************
 22222 ;; Defined at:
 22223 ;;		line 67 in file "ringbufs.c"
 22224 ;; Parameters:    Size  Location     Type
 22225 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22226 ;;		 -> ring_buf1(67), 
 22227 ;;  c               1  [STACK] const unsigned char 
 22228 ;; Auto vars:     Size  Location     Type
 22229 ;;		None
 22230 ;; Return value:  Size  Location     Type
 22231 ;;                  1  [STACK] void 
 22232 ;; Registers used:
 22233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22234 ;; Tracked objects:
 22235 ;;		On entry : 0/0
 22236 ;;		On exit  : 0/0
 22237 ;;		Unchanged: 0/0
 22238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22243 ;;Total ram usage:        0 bytes
 22244 ;; Hardware stack levels used:    1
 22245 ;; Hardware stack levels required when called:   15
 22246 ;; This function calls:
 22247 ;;		Nothing
 22248 ;; This function is called by:
 22249 ;;		_putch
 22250 ;; This function uses a reentrant model
 22251 ;;
 22252                           
 22253                           	psect	text78
 22254  01A738                     __ptext78:
 22255                           	opt callstack 0
 22256  01A738                     _ringBufS_put_dma:
 22257                           	opt callstack 0
 22258                           
 22259                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 22260                           ;stkvar	__this @ sp[(0)+-2]
 22261                           
 22262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22263                           ;incstack = 0
 22264 ;; hardware stack exceeded
 22265  01A738  0EFE               	movlw	-2
 22266  01A73A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22267  01A740  0EFF               	movlw	-1
 22268  01A742  006F FF8C  F00C    	movff	plusw1,btemp+11
 22269  01A748  0E42               	movlw	66
 22270  01A74A  240B               	addwf	(btemp+10)^0,w,c
 22271  01A74C  6ED9               	movwf	fsr2l,c
 22272  01A74E  0E00               	movlw	0
 22273  01A750  200C               	addwfc	(btemp+11)^0,w,c
 22274  01A752  6EDA               	movwf	fsr2h,c
 22275  01A754  0E40               	movlw	64
 22276  01A756  60DF               	cpfslt	indf2,c
 22277  01A758  D040               	goto	l1584
 22278                           
 22279                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 22280                           ;stkvar	_c @ sp[(0)+-3]
 22281                           ;stkvar	__this @ sp[(0)+-2]
 22282  01A75A  0EFE               	movlw	-2
 22283  01A75C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22284  01A762  0EFF               	movlw	-1
 22285  01A764  006F FF8C  F00C    	movff	plusw1,btemp+11
 22286  01A76A  0E40               	movlw	64
 22287  01A76C  240B               	addwf	(btemp+10)^0,w,c
 22288  01A76E  6ED9               	movwf	fsr2l,c
 22289  01A770  0E00               	movlw	0
 22290  01A772  200C               	addwfc	(btemp+11)^0,w,c
 22291  01A774  6EDA               	movwf	fsr2h,c
 22292  01A776  50DF               	movf	indf2,w,c
 22293  01A778  6E0C               	movwf	(btemp+11)^0,c
 22294                           
 22295                           ;stkvar	__this @ sp[(0)+-2]
 22296  01A77A  0EFE               	movlw	-2
 22297  01A77C  006F FF8C  F009    	movff	plusw1,btemp+8
 22298  01A782  0EFF               	movlw	-1
 22299  01A784  006F FF8C  F00A    	movff	plusw1,btemp+9
 22300  01A78A  500C               	movf	(btemp+11)^0,w,c
 22301  01A78C  2409               	addwf	(btemp+8)^0,w,c
 22302  01A78E  6ED9               	movwf	fsr2l,c
 22303  01A790  0E00               	movlw	0
 22304  01A792  200A               	addwfc	(btemp+9)^0,w,c
 22305  01A794  6EDA               	movwf	fsr2h,c
 22306  01A796  0EFD               	movlw	-3
 22307  01A798  006F FF8F FFDF     	movff	plusw1,indf2
 22308                           
 22309                           ;ringbufs.c: 71:   ++_this->head;
 22310                           ;stkvar	__this @ sp[(0)+-2]
 22311  01A79E  0EFE               	movlw	-2
 22312  01A7A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 22313  01A7A6  0EFF               	movlw	-1
 22314  01A7A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22315  01A7AE  0E40               	movlw	64
 22316  01A7B0  240B               	addwf	(btemp+10)^0,w,c
 22317  01A7B2  6ED9               	movwf	fsr2l,c
 22318  01A7B4  0E00               	movlw	0
 22319  01A7B6  200C               	addwfc	(btemp+11)^0,w,c
 22320  01A7B8  6EDA               	movwf	fsr2h,c
 22321  01A7BA  2ADF               	incf	indf2,f,c
 22322                           
 22323                           ;ringbufs.c: 72:   ++_this->count;
 22324                           ;stkvar	__this @ sp[(0)+-2]
 22325  01A7BC  0EFE               	movlw	-2
 22326  01A7BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22327  01A7C4  0EFF               	movlw	-1
 22328  01A7C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22329  01A7CC  0E42               	movlw	66
 22330  01A7CE  240B               	addwf	(btemp+10)^0,w,c
 22331  01A7D0  6ED9               	movwf	fsr2l,c
 22332  01A7D2  0E00               	movlw	0
 22333  01A7D4  200C               	addwfc	(btemp+11)^0,w,c
 22334  01A7D6  6EDA               	movwf	fsr2h,c
 22335  01A7D8  2ADF               	incf	indf2,f,c
 22336  01A7DA                     l1584:
 22337                           
 22338                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22339  01A7DA  52E5               	movf	postdec1,f,c
 22340  01A7DC  52E5               	movf	postdec1,f,c
 22341  01A7DE  52E5               	movf	postdec1,f,c
 22342  01A7E0  0012               	return		;funcret
 22343  01A7E2                     __end_of_ringBufS_put_dma:
 22344                           	opt callstack 0
 22345                           
 22346 ;; *************** function _atoi *****************
 22347 ;; Defined at:
 22348 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 22349 ;; Parameters:    Size  Location     Type
 22350 ;;  s               2  [STACK] PTR const unsigned char 
 22351 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 22352 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 22353 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 22354 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 22355 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 22356 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 22357 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 22358 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 22359 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 22360 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 22361 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 22362 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 22363 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 22364 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 22365 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 22366 ;; Auto vars:     Size  Location     Type
 22367 ;;  n               2  [STACK] int 
 22368 ;;  neg             2  [STACK] int 
 22369 ;; Return value:  Size  Location     Type
 22370 ;;                  2  [STACK] int 
 22371 ;; Registers used:
 22372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 22373 ;; Tracked objects:
 22374 ;;		On entry : 0/0
 22375 ;;		On exit  : 0/0
 22376 ;;		Unchanged: 0/0
 22377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22382 ;;Total ram usage:        0 bytes
 22383 ;; Hardware stack levels used:    1
 22384 ;; Hardware stack levels required when called:   16
 22385 ;; This function calls:
 22386 ;;		_isdigit
 22387 ;;		_isspace
 22388 ;; This function is called by:
 22389 ;;		_vfpfcnvrt
 22390 ;; This function uses a reentrant model
 22391 ;;
 22392                           
 22393                           	psect	text79
 22394  017932                     __ptext79:
 22395                           	opt callstack 0
 22396  017932                     _atoi:
 22397                           	opt callstack 0
 22398                           
 22399                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22400  017932  0E09               	movlw	9
 22401  017934  26E1               	addwf	fsr1l,f,c
 22402  017936  0E00               	movlw	0
 22403  017938  22E2               	addwfc	fsr1h,f,c
 22404                           
 22405                           ;stkvar	_n @ sp[(-9)+5]
 22406                           
 22407                           ;incstack = 0
 22408 ;; hardware stack exceeded
 22409  01793A  0EFC               	movlw	-4
 22410  01793C  6AE3               	clrf	plusw1,c
 22411  01793E  0EFD               	movlw	-3
 22412  017940  6AE3               	clrf	plusw1,c
 22413                           
 22414                           ;stkvar	_neg @ sp[(-9)+7]
 22415  017942  0EFE               	movlw	-2
 22416  017944  6AE3               	clrf	plusw1,c
 22417  017946  0EFF               	movlw	-1
 22418  017948  6AE3               	clrf	plusw1,c
 22419  01794A  D011               	goto	l9314
 22420  01794C                     l9312:
 22421                           
 22422                           ;stkvar	_s @ sp[(-9)+-2]
 22423  01794C  0EF5               	movlw	-11
 22424  01794E  50E3               	movf	plusw1,w,c
 22425  017950  0F01               	addlw	1
 22426  017952  6E01               	movwf	btemp^0,c
 22427  017954  0EF5               	movlw	-11
 22428  017956  0060  F007  FFE3   	movff	btemp,plusw1
 22429  01795C  6A01               	clrf	btemp^0,c
 22430  01795E  0EF6               	movlw	-10
 22431  017960  50E3               	movf	plusw1,w,c
 22432  017962  2001               	addwfc	btemp^0,w,c
 22433  017964  6E01               	movwf	btemp^0,c
 22434  017966  0EF6               	movlw	-10
 22435  017968  0060  F007  FFE3   	movff	btemp,plusw1
 22436  01796E                     l9314:
 22437                           
 22438                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22439  01796E  0EFB               	movlw	-5
 22440  017970  6AE3               	clrf	plusw1,c
 22441  017972  2AE3               	incf	plusw1,f,c
 22442                           
 22443                           ;stkvar	_s @ sp[(-9)+-2]
 22444  017974  50E1               	movf	fsr1l,w,c
 22445  017976  0FF5               	addlw	-11
 22446  017978  6ED9               	movwf	fsr2l,c
 22447  01797A  50E2               	movf	fsr1h,w,c
 22448  01797C  6EDA               	movwf	fsr2h,c
 22449  01797E  0EFF               	movlw	255
 22450  017980  22DA               	addwfc	fsr2h,f,c
 22451  017982  006F FF7B FFF6     	movff	postinc2,tblptrl
 22452  017988  006F FF77 FFF7     	movff	postdec2,tblptrh
 22453  01798E                     	if	0	;tblptru may be non-zero
 22454  01798E                     	endif
 22455  01798E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22456  01798E  0E00               	movlw	low (__mediumconst shr (0+16))
 22457  017990  6EF8               	movwf	tblptru,c
 22458  017992                     	endif
 22459  017992  0008               	tblrd		*
 22460  017994  50F5               	movf	tablat,w,c
 22461  017996  0A20               	xorlw	32
 22462  017998  B4D8               	btfsc	status,2,c
 22463  01799A  D023               	goto	l9322
 22464  01799C  0EF7               	movlw	247
 22465  01799E  6E0B               	movwf	(btemp+10)^0,c
 22466  0179A0  0EFF               	movlw	255
 22467  0179A2  6E0C               	movwf	(btemp+11)^0,c
 22468                           
 22469                           ;stkvar	_s @ sp[(-9)+-2]
 22470  0179A4  50E1               	movf	fsr1l,w,c
 22471  0179A6  0FF5               	addlw	-11
 22472  0179A8  6ED9               	movwf	fsr2l,c
 22473  0179AA  50E2               	movf	fsr1h,w,c
 22474  0179AC  6EDA               	movwf	fsr2h,c
 22475  0179AE  0EFF               	movlw	255
 22476  0179B0  22DA               	addwfc	fsr2h,f,c
 22477  0179B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 22478  0179B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 22479  0179BE                     	if	0	;tblptru may be non-zero
 22480  0179BE                     	endif
 22481  0179BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22482  0179BE  0E00               	movlw	low (__mediumconst shr (0+16))
 22483  0179C0  6EF8               	movwf	tblptru,c
 22484  0179C2                     	endif
 22485  0179C2  0008               	tblrd		*
 22486  0179C4  50F5               	movf	tablat,w,c
 22487  0179C6  6E09               	movwf	(btemp+8)^0,c
 22488  0179C8  6A0A               	clrf	(btemp+9)^0,c
 22489  0179CA  500B               	movf	(btemp+10)^0,w,c
 22490  0179CC  2609               	addwf	(btemp+8)^0,f,c
 22491  0179CE  500C               	movf	(btemp+11)^0,w,c
 22492  0179D0  220A               	addwfc	(btemp+9)^0,f,c
 22493  0179D2  500A               	movf	(btemp+9)^0,w,c
 22494  0179D4  E104               	bnz	u8540
 22495  0179D6  0E05               	movlw	5
 22496  0179D8  5C09               	subwf	(btemp+8)^0,w,c
 22497  0179DA  A0D8               	btfss	status,0,c
 22498  0179DC  D002               	goto	l9322
 22499  0179DE                     u8540:
 22500                           
 22501                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22502  0179DE  0EFB               	movlw	-5
 22503  0179E0  6AE3               	clrf	plusw1,c
 22504  0179E2                     l9322:
 22505                           
 22506                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22507  0179E2  0EFB               	movlw	-5
 22508  0179E4  50E3               	movf	plusw1,w,c
 22509  0179E6  6E0B               	movwf	(btemp+10)^0,c
 22510  0179E8  6A0C               	clrf	(btemp+11)^0,c
 22511                           
 22512                           ;stkvar	_atoi$6076 @ sp[(-9)+2]
 22513  0179EA  0EF9               	movlw	-7
 22514  0179EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22515  0179F2  0EFA               	movlw	-6
 22516  0179F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 22517                           
 22518                           ;stkvar	_atoi$6076 @ sp[(-9)+2]
 22519  0179FA  0EF9               	movlw	-7
 22520  0179FC  006F FF8C  F001    	movff	plusw1,btemp
 22521  017A02  0EFA               	movlw	-6
 22522  017A04  50E3               	movf	plusw1,w,c
 22523  017A06  1001               	iorwf	btemp^0,w,c
 22524  017A08  B4D8               	btfsc	status,2,c
 22525  017A0A  D01F               	goto	l9332
 22526  017A0C  D79F               	goto	l9312
 22527  017A0E                     l9328:
 22528  017A0E  0E01               	movlw	1
 22529  017A10  6E0B               	movwf	(btemp+10)^0,c
 22530  017A12  0E00               	movlw	0
 22531  017A14  6E0C               	movwf	(btemp+11)^0,c
 22532                           
 22533                           ;stkvar	_neg @ sp[(-9)+7]
 22534  017A16  0EFE               	movlw	-2
 22535  017A18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22536  017A1E  0EFF               	movlw	-1
 22537  017A20  0060  F033  FFE3   	movff	btemp+11,plusw1
 22538  017A26                     l9330:
 22539                           
 22540                           ;stkvar	_s @ sp[(-9)+-2]
 22541  017A26  0EF5               	movlw	-11
 22542  017A28  50E3               	movf	plusw1,w,c
 22543  017A2A  0F01               	addlw	1
 22544  017A2C  6E01               	movwf	btemp^0,c
 22545  017A2E  0EF5               	movlw	-11
 22546  017A30  0060  F007  FFE3   	movff	btemp,plusw1
 22547  017A36  6A01               	clrf	btemp^0,c
 22548  017A38  0EF6               	movlw	-10
 22549  017A3A  50E3               	movf	plusw1,w,c
 22550  017A3C  2001               	addwfc	btemp^0,w,c
 22551  017A3E  6E01               	movwf	btemp^0,c
 22552  017A40  0EF6               	movlw	-10
 22553  017A42  0060  F007  FFE3   	movff	btemp,plusw1
 22554  017A48  D053               	goto	l9338
 22555  017A4A                     l9332:
 22556                           
 22557                           ;stkvar	_s @ sp[(-9)+-2]
 22558  017A4A  50E1               	movf	fsr1l,w,c
 22559  017A4C  0FF5               	addlw	-11
 22560  017A4E  6ED9               	movwf	fsr2l,c
 22561  017A50  50E2               	movf	fsr1h,w,c
 22562  017A52  6EDA               	movwf	fsr2h,c
 22563  017A54  0EFF               	movlw	255
 22564  017A56  22DA               	addwfc	fsr2h,f,c
 22565  017A58  006F FF7B FFF6     	movff	postinc2,tblptrl
 22566  017A5E  006F FF77 FFF7     	movff	postdec2,tblptrh
 22567  017A64                     	if	0	;tblptru may be non-zero
 22568  017A64                     	endif
 22569  017A64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22570  017A64  0E00               	movlw	low (__mediumconst shr (0+16))
 22571  017A66  6EF8               	movwf	tblptru,c
 22572  017A68                     	endif
 22573  017A68  0008               	tblrd		*
 22574  017A6A  50F5               	movf	tablat,w,c
 22575  017A6C  6E0B               	movwf	(btemp+10)^0,c
 22576  017A6E  6A0C               	clrf	(btemp+11)^0,c
 22577                           
 22578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22579                           ; Switch size 1, requested type "simple"
 22580                           ; Number of cases is 1, Range of values is 0 to 0
 22581                           ; switch strategies available:
 22582                           ; Name         Instructions Cycles
 22583                           ; simple_byte            4     3 (average)
 22584                           ;	Chosen strategy is simple_byte
 22585  017A70  500C               	movf	(btemp+11)^0,w,c
 22586  017A72  0A00               	xorlw	0	; case 0
 22587  017A74  A4D8               	btfss	status,2,c
 22588  017A76  D03C               	goto	l9338
 22589                           
 22590                           ; Switch size 1, requested type "simple"
 22591                           ; Number of cases is 2, Range of values is 43 to 45
 22592                           ; switch strategies available:
 22593                           ; Name         Instructions Cycles
 22594                           ; simple_byte            7     4 (average)
 22595                           ;	Chosen strategy is simple_byte
 22596  017A78  500B               	movf	(btemp+10)^0,w,c
 22597  017A7A  0A2B               	xorlw	43	; case 43
 22598  017A7C  B4D8               	btfsc	status,2,c
 22599  017A7E  D7D3               	goto	l9330
 22600  017A80  0A06               	xorlw	6	; case 45
 22601  017A82  B4D8               	btfsc	status,2,c
 22602  017A84  D7C4               	goto	l9328
 22603  017A86  D034               	goto	l9338
 22604  017A88                     l9334:
 22605                           
 22606                           ;stkvar	_n @ sp[(-9)+5]
 22607  017A88  0EFC               	movlw	-4
 22608  017A8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22609  017A90  0EFD               	movlw	-3
 22610  017A92  006F FF8C  F00C    	movff	plusw1,btemp+11
 22611  017A98  0E0A               	movlw	10
 22612  017A9A  020B               	mulwf	(btemp+10)^0,c
 22613  017A9C  006F FFCC  F009    	movff	prodl,btemp+8
 22614  017AA2  006F FFD0  F00A    	movff	prodh,btemp+9
 22615  017AA8  020C               	mulwf	(btemp+11)^0,c
 22616  017AAA  50F3               	movf	prodl,w,c
 22617  017AAC  260A               	addwf	(btemp+9)^0,f,c
 22618                           
 22619                           ;stkvar	_s @ sp[(-9)+-2]
 22620  017AAE  50E1               	movf	fsr1l,w,c
 22621  017AB0  0FF5               	addlw	-11
 22622  017AB2  6ED9               	movwf	fsr2l,c
 22623  017AB4  50E2               	movf	fsr1h,w,c
 22624  017AB6  6EDA               	movwf	fsr2h,c
 22625  017AB8  0EFF               	movlw	255
 22626  017ABA  22DA               	addwfc	fsr2h,f,c
 22627  017ABC  006F FF7B FFF6     	movff	postinc2,tblptrl
 22628  017AC2  006F FF77 FFF7     	movff	postdec2,tblptrh
 22629  017AC8                     	if	0	;tblptru may be non-zero
 22630  017AC8                     	endif
 22631  017AC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22632  017AC8  0E00               	movlw	low (__mediumconst shr (0+16))
 22633  017ACA  6EF8               	movwf	tblptru,c
 22634  017ACC                     	endif
 22635  017ACC  0008               	tblrd		*
 22636  017ACE  50F5               	movf	tablat,w,c
 22637  017AD0  5E09               	subwf	(btemp+8)^0,f,c
 22638  017AD2  0E00               	movlw	0
 22639  017AD4  5A0A               	subwfb	(btemp+9)^0,f,c
 22640  017AD6  0E30               	movlw	48
 22641  017AD8  2609               	addwf	(btemp+8)^0,f,c
 22642  017ADA  0E00               	movlw	0
 22643  017ADC  220A               	addwfc	(btemp+9)^0,f,c
 22644                           
 22645                           ;stkvar	_n @ sp[(-9)+5]
 22646  017ADE  0EFC               	movlw	-4
 22647  017AE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 22648  017AE6  0EFD               	movlw	-3
 22649  017AE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22650  017AEE  D79B               	goto	l9330
 22651  017AF0                     l9338:
 22652  017AF0  0ED0               	movlw	208
 22653  017AF2  6E0B               	movwf	(btemp+10)^0,c
 22654  017AF4  0EFF               	movlw	255
 22655  017AF6  6E0C               	movwf	(btemp+11)^0,c
 22656                           
 22657                           ;stkvar	_s @ sp[(-9)+-2]
 22658  017AF8  50E1               	movf	fsr1l,w,c
 22659  017AFA  0FF5               	addlw	-11
 22660  017AFC  6ED9               	movwf	fsr2l,c
 22661  017AFE  50E2               	movf	fsr1h,w,c
 22662  017B00  6EDA               	movwf	fsr2h,c
 22663  017B02  0EFF               	movlw	255
 22664  017B04  22DA               	addwfc	fsr2h,f,c
 22665  017B06  006F FF7B FFF6     	movff	postinc2,tblptrl
 22666  017B0C  006F FF77 FFF7     	movff	postdec2,tblptrh
 22667  017B12                     	if	0	;tblptru may be non-zero
 22668  017B12                     	endif
 22669  017B12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22670  017B12  0E00               	movlw	low (__mediumconst shr (0+16))
 22671  017B14  6EF8               	movwf	tblptru,c
 22672  017B16                     	endif
 22673  017B16  0008               	tblrd		*
 22674  017B18  50F5               	movf	tablat,w,c
 22675  017B1A  6E09               	movwf	(btemp+8)^0,c
 22676  017B1C  6A0A               	clrf	(btemp+9)^0,c
 22677  017B1E  500B               	movf	(btemp+10)^0,w,c
 22678  017B20  2609               	addwf	(btemp+8)^0,f,c
 22679  017B22  500C               	movf	(btemp+11)^0,w,c
 22680  017B24  220A               	addwfc	(btemp+9)^0,f,c
 22681  017B26  500A               	movf	(btemp+9)^0,w,c
 22682  017B28  E106               	bnz	u8560
 22683  017B2A  0E0A               	movlw	10
 22684  017B2C  5C09               	subwf	(btemp+8)^0,w,c
 22685  017B2E  B0D8               	btfsc	status,0,c
 22686  017B30  D002               	goto	u8560
 22687  017B32  0E01               	movlw	1
 22688  017B34  D001               	goto	u8570
 22689  017B36                     u8560:
 22690  017B36  0E00               	movlw	0
 22691  017B38                     u8570:
 22692  017B38  6E0B               	movwf	(btemp+10)^0,c
 22693  017B3A  6A0C               	clrf	(btemp+11)^0,c
 22694                           
 22695                           ;stkvar	_atoi$6078 @ sp[(-9)+0]
 22696  017B3C  0EF7               	movlw	-9
 22697  017B3E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22698  017B44  0EF8               	movlw	-8
 22699  017B46  0060  F033  FFE3   	movff	btemp+11,plusw1
 22700                           
 22701                           ;stkvar	_atoi$6078 @ sp[(-9)+0]
 22702  017B4C  0EF7               	movlw	-9
 22703  017B4E  006F FF8C  F001    	movff	plusw1,btemp
 22704  017B54  0EF8               	movlw	-8
 22705  017B56  50E3               	movf	plusw1,w,c
 22706  017B58  1001               	iorwf	btemp^0,w,c
 22707  017B5A  A4D8               	btfss	status,2,c
 22708  017B5C  D795               	goto	l9334
 22709                           
 22710                           ;stkvar	_neg @ sp[(-9)+7]
 22711  017B5E  0EFE               	movlw	-2
 22712  017B60  006F FF8C  F001    	movff	plusw1,btemp
 22713  017B66  0EFF               	movlw	-1
 22714  017B68  50E3               	movf	plusw1,w,c
 22715  017B6A  1001               	iorwf	btemp^0,w,c
 22716  017B6C  A4D8               	btfss	status,2,c
 22717  017B6E  D00E               	goto	l9348
 22718                           
 22719                           ;stkvar	_n @ sp[(-9)+5]
 22720  017B70  0EFC               	movlw	-4
 22721  017B72  006F FF8C  F001    	movff	plusw1,btemp
 22722  017B78  1E01               	comf	btemp^0,f,c
 22723  017B7A  0EFD               	movlw	-3
 22724  017B7C  006F FF8C  F002    	movff	plusw1,btemp+1
 22725  017B82  1E02               	comf	(btemp+1)^0,f,c
 22726  017B84  2A01               	incf	btemp^0,f,c
 22727  017B86  B4D8               	btfsc	status,2,c
 22728  017B88  2A02               	incf	(btemp+1)^0,f,c
 22729  017B8A  D008               	goto	l3115
 22730  017B8C                     l9348:
 22731                           
 22732                           ;stkvar	_n @ sp[(-9)+5]
 22733  017B8C  0EFC               	movlw	-4
 22734  017B8E  006F FF8C  F001    	movff	plusw1,btemp
 22735  017B94  0EFD               	movlw	-3
 22736  017B96  006F FF8C  F002    	movff	plusw1,btemp+1
 22737  017B9C                     l3115:
 22738                           
 22739                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22740  017B9C  0EF5               	movlw	245
 22741  017B9E  26E1               	addwf	fsr1l,f,c
 22742  017BA0  0EFF               	movlw	255
 22743  017BA2  22E2               	addwfc	fsr1h,f,c
 22744  017BA4  0012               	return		;funcret
 22745  017BA6                     __end_of_atoi:
 22746                           	opt callstack 0
 22747                           
 22748 ;; *************** function _isspace *****************
 22749 ;; Defined at:
 22750 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22751 ;; Parameters:    Size  Location     Type
 22752 ;;  c               2  [STACK] int 
 22753 ;; Auto vars:     Size  Location     Type
 22754 ;;		None
 22755 ;; Return value:  Size  Location     Type
 22756 ;;                  2  [STACK] int 
 22757 ;; Registers used:
 22758 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22759 ;; Tracked objects:
 22760 ;;		On entry : 0/0
 22761 ;;		On exit  : 0/0
 22762 ;;		Unchanged: 0/0
 22763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22768 ;;Total ram usage:        0 bytes
 22769 ;; Hardware stack levels used:    1
 22770 ;; Hardware stack levels required when called:   15
 22771 ;; This function calls:
 22772 ;;		Nothing
 22773 ;; This function is called by:
 22774 ;;		_atoi
 22775 ;; This function uses a reentrant model
 22776 ;;
 22777                           
 22778                           	psect	text80
 22779  01B2E2                     __ptext80:
 22780                           	opt callstack 0
 22781  01B2E2                     _isspace:
 22782                           	opt callstack 0
 22783                           
 22784                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22785  01B2E2  52E6               	movf	postinc1,f,c
 22786                           
 22787                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22788                           
 22789                           ;incstack = 0
 22790 ;; hardware stack exceeded
 22791  01B2E4  0EFF               	movlw	-1
 22792  01B2E6  6AE3               	clrf	plusw1,c
 22793  01B2E8  2AE3               	incf	plusw1,f,c
 22794                           
 22795                           ;stkvar	_c @ sp[(-1)+-2]
 22796  01B2EA  0EFD               	movlw	-3
 22797  01B2EC  006F FF8C  F001    	movff	plusw1,btemp
 22798  01B2F2  0E20               	movlw	32
 22799  01B2F4  1801               	xorwf	btemp^0,w,c
 22800  01B2F6  E104               	bnz	u7430
 22801  01B2F8  0EFE               	movlw	-2
 22802  01B2FA  50E3               	movf	plusw1,w,c
 22803  01B2FC  B4D8               	btfsc	status,2,c
 22804  01B2FE  D012               	goto	l8732
 22805  01B300                     u7430:
 22806                           
 22807                           ;stkvar	_c @ sp[(-1)+-2]
 22808  01B300  0EFD               	movlw	-3
 22809  01B302  50E3               	movf	plusw1,w,c
 22810  01B304  0FF7               	addlw	247
 22811  01B306  6E0B               	movwf	(btemp+10)^0,c
 22812  01B308  0EFE               	movlw	-2
 22813  01B30A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22814  01B310  0EFF               	movlw	255
 22815  01B312  220C               	addwfc	(btemp+11)^0,f,c
 22816  01B314  500C               	movf	(btemp+11)^0,w,c
 22817  01B316  E104               	bnz	u7440
 22818  01B318  0E05               	movlw	5
 22819  01B31A  5C0B               	subwf	(btemp+10)^0,w,c
 22820  01B31C  A0D8               	btfss	status,0,c
 22821  01B31E  D002               	goto	l8732
 22822  01B320                     u7440:
 22823                           
 22824                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22825  01B320  0EFF               	movlw	-1
 22826  01B322  6AE3               	clrf	plusw1,c
 22827  01B324                     l8732:
 22828                           
 22829                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22830  01B324  0EFF               	movlw	-1
 22831  01B326  50E3               	movf	plusw1,w,c
 22832  01B328  6E01               	movwf	btemp^0,c
 22833  01B32A  6A02               	clrf	(btemp+1)^0,c
 22834                           
 22835                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22836  01B32C  52E5               	movf	postdec1,f,c
 22837  01B32E  52E5               	movf	postdec1,f,c
 22838  01B330  52E5               	movf	postdec1,f,c
 22839  01B332  0012               	return		;funcret
 22840  01B334                     __end_of_isspace:
 22841                           	opt callstack 0
 22842                           
 22843 ;; *************** function _isdigit *****************
 22844 ;; Defined at:
 22845 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22846 ;; Parameters:    Size  Location     Type
 22847 ;;  c               2  [STACK] int 
 22848 ;; Auto vars:     Size  Location     Type
 22849 ;;		None
 22850 ;; Return value:  Size  Location     Type
 22851 ;;                  2  [STACK] int 
 22852 ;; Registers used:
 22853 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22854 ;; Tracked objects:
 22855 ;;		On entry : 0/0
 22856 ;;		On exit  : 0/0
 22857 ;;		Unchanged: 0/0
 22858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22863 ;;Total ram usage:        0 bytes
 22864 ;; Hardware stack levels used:    1
 22865 ;; Hardware stack levels required when called:   15
 22866 ;; This function calls:
 22867 ;;		Nothing
 22868 ;; This function is called by:
 22869 ;;		_vfpfcnvrt
 22870 ;;		_atoi
 22871 ;; This function uses a reentrant model
 22872 ;;
 22873                           
 22874                           	psect	text81
 22875  01BA32                     __ptext81:
 22876                           	opt callstack 0
 22877  01BA32                     _isdigit:
 22878                           	opt callstack 0
 22879                           
 22880                           ;stkvar	_c @ sp[(0)+-2]
 22881                           
 22882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22883                           ;incstack = 0
 22884 ;; hardware stack exceeded
 22885  01BA32  0EFE               	movlw	-2
 22886  01BA34  50E3               	movf	plusw1,w,c
 22887  01BA36  0FD0               	addlw	208
 22888  01BA38  6E0B               	movwf	(btemp+10)^0,c
 22889  01BA3A  0EFF               	movlw	-1
 22890  01BA3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22891  01BA42  0EFF               	movlw	255
 22892  01BA44  220C               	addwfc	(btemp+11)^0,f,c
 22893  01BA46  500C               	movf	(btemp+11)^0,w,c
 22894  01BA48  E106               	bnz	u6280
 22895  01BA4A  0E0A               	movlw	10
 22896  01BA4C  5C0B               	subwf	(btemp+10)^0,w,c
 22897  01BA4E  B0D8               	btfsc	status,0,c
 22898  01BA50  D002               	goto	u6280
 22899  01BA52  0E01               	movlw	1
 22900  01BA54  D001               	goto	u6290
 22901  01BA56                     u6280:
 22902  01BA56  0E00               	movlw	0
 22903  01BA58                     u6290:
 22904  01BA58  6E01               	movwf	btemp^0,c
 22905  01BA5A  6A02               	clrf	(btemp+1)^0,c
 22906                           
 22907                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22908  01BA5C  52E5               	movf	postdec1,f,c
 22909  01BA5E  52E5               	movf	postdec1,f,c
 22910  01BA60  0012               	return		;funcret
 22911  01BA62                     __end_of_isdigit:
 22912                           	opt callstack 0
 22913                           
 22914 ;; *************** function _set_vterm *****************
 22915 ;; Defined at:
 22916 ;;		line 107 in file "mconfig.c"
 22917 ;; Parameters:    Size  Location     Type
 22918 ;;  vterm           1  [STACK] const unsigned char 
 22919 ;; Auto vars:     Size  Location     Type
 22920 ;;		None
 22921 ;; Return value:  Size  Location     Type
 22922 ;;                  1  [STACK] unsigned char 
 22923 ;; Registers used:
 22924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22925 ;; Tracked objects:
 22926 ;;		On entry : 0/0
 22927 ;;		On exit  : 0/0
 22928 ;;		Unchanged: 0/0
 22929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22934 ;;Total ram usage:        0 bytes
 22935 ;; Hardware stack levels used:    1
 22936 ;; Hardware stack levels required when called:   15
 22937 ;; This function calls:
 22938 ;;		Nothing
 22939 ;; This function is called by:
 22940 ;;		_main
 22941 ;;		_check_help
 22942 ;; This function uses a reentrant model
 22943 ;;
 22944                           
 22945                           	psect	text82
 22946  01BF54                     __ptext82:
 22947                           	opt callstack 0
 22948  01BF54                     _set_vterm:
 22949                           	opt callstack 15
 22950                           
 22951                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22952                           ;stkvar	_vterm @ sp[(0)+-1]
 22953                           
 22954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22955                           ;incstack = 0
 22956  01BF54  0EFF               	movlw	-1
 22957  01BF56  006F FF8C  F00C    	movff	plusw1,btemp+11
 22958  01BF5C  0E03               	movlw	3
 22959  01BF5E  160C               	andwf	(btemp+11)^0,f,c
 22960  01BF60  EE22  F20A         	lfsr	2,_D+480
 22961  01BF64  50DF               	movf	223,w,c
 22962  01BF66  180C               	xorwf	(btemp+11)^0,w,c
 22963  01BF68  0BFE               	andlw	-2
 22964  01BF6A  180C               	xorwf	(btemp+11)^0,w,c
 22965  01BF6C  6EDF               	movwf	223,c
 22966                           
 22967                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22968  01BF6E  52E5               	movf	postdec1,f,c
 22969  01BF70  0012               	return		;funcret
 22970  01BF72                     __end_of_set_vterm:
 22971                           	opt callstack 0
 22972                           
 22973 ;; *************** function _set_temp_display_help *****************
 22974 ;; Defined at:
 22975 ;;		line 211 in file "mconfig.c"
 22976 ;; Parameters:    Size  Location     Type
 22977 ;;  new_response    1  [STACK] const enum E16509
 22978 ;; Auto vars:     Size  Location     Type
 22979 ;;		None
 22980 ;; Return value:  Size  Location     Type
 22981 ;;                  1  [STACK] enum E16509
 22982 ;; Registers used:
 22983 ;;		wreg, fsr1l, fsr1h
 22984 ;; Tracked objects:
 22985 ;;		On entry : 0/1
 22986 ;;		On exit  : 3F/1
 22987 ;;		Unchanged: 0/0
 22988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22993 ;;Total ram usage:        0 bytes
 22994 ;; Hardware stack levels used:    1
 22995 ;; Hardware stack levels required when called:   15
 22996 ;; This function calls:
 22997 ;;		Nothing
 22998 ;; This function is called by:
 22999 ;;		_check_help
 23000 ;; This function uses a reentrant model
 23001 ;;
 23002                           
 23003                           	psect	text83
 23004  01C0B6                     __ptext83:
 23005                           	opt callstack 0
 23006  01C0B6                     _set_temp_display_help:
 23007                           	opt callstack 14
 23008                           
 23009                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 23010                           
 23011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23012                           ;incstack = 0
 23013  01C0B6  0101               	movlb	1	; () banked
 23014  01C0B8  51D5               	movf	(_V+165)& (0+255),w,b	;volatile
 23015                           
 23016                           ; BSR set to: 1
 23017                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 23018                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23019  01C0BA  0EFF               	movlw	-1
 23020  01C0BC  006F FF8C  F1D5    	movff	plusw1,_V+165	;volatile
 23021                           
 23022                           ; BSR set to: 1
 23023                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23024  01C0C2  52E5               	movf	postdec1,f,c
 23025  01C0C4  0012               	return		;funcret
 23026  01C0C6                     __end_of_set_temp_display_help:
 23027                           	opt callstack 0
 23028                           
 23029 ;; *************** function _set_display_info *****************
 23030 ;; Defined at:
 23031 ;;		line 200 in file "mconfig.c"
 23032 ;; Parameters:    Size  Location     Type
 23033 ;;  new_response    1  [STACK] const enum E16509
 23034 ;; Auto vars:     Size  Location     Type
 23035 ;;		None
 23036 ;; Return value:  Size  Location     Type
 23037 ;;                  1  [STACK] enum E16994
 23038 ;; Registers used:
 23039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23040 ;; Tracked objects:
 23041 ;;		On entry : 0/1
 23042 ;;		On exit  : 0/0
 23043 ;;		Unchanged: 0/0
 23044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23049 ;;Total ram usage:        0 bytes
 23050 ;; Hardware stack levels used:    1
 23051 ;; Hardware stack levels required when called:   16
 23052 ;; This function calls:
 23053 ;;		_TimerDone
 23054 ;; This function is called by:
 23055 ;;		_main
 23056 ;;		_check_help
 23057 ;; This function uses a reentrant model
 23058 ;;
 23059                           
 23060                           	psect	text84
 23061  01BF72                     __ptext84:
 23062                           	opt callstack 0
 23063  01BF72                     _set_display_info:
 23064                           	opt callstack 14
 23065                           
 23066                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23067                           
 23068                           ; BSR set to: 1
 23069                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23070                           ;incstack = 0
 23071  01BF72  0E07               	movlw	7
 23072  01BF74  6EE6               	movwf	postinc1,c
 23073  01BF76  ECB3  F0DD         	call	_TimerDone	;wreg free
 23074  01BF7A  5001               	movf	btemp^0,w,c
 23075  01BF7C  B4D8               	btfsc	status,2,c
 23076  01BF7E  D006               	goto	l1719
 23077                           
 23078                           ;mconfig.c: 205:   old_info = V.response.info;
 23079  01BF80  0101               	movlb	1	; () banked
 23080  01BF82  51D4               	movf	(_V+164)& (0+255),w,b	;volatile
 23081                           
 23082                           ; BSR set to: 1
 23083                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23084                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23085  01BF84  0EFF               	movlw	-1
 23086  01BF86  006F FF8C  F1D4    	movff	plusw1,_V+164	;volatile
 23087  01BF8C                     l1719:
 23088                           
 23089                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23090  01BF8C  52E5               	movf	postdec1,f,c
 23091  01BF8E  0012               	return		;funcret
 23092  01BF90                     __end_of_set_display_info:
 23093                           	opt callstack 0
 23094                           
 23095 ;; *************** function _mode_lamp_dim *****************
 23096 ;; Defined at:
 23097 ;;		line 13 in file "mconfig.c"
 23098 ;; Parameters:    Size  Location     Type
 23099 ;;  level           2  [STACK] const unsigned short 
 23100 ;; Auto vars:     Size  Location     Type
 23101 ;;		None
 23102 ;; Return value:  Size  Location     Type
 23103 ;;                  1  [STACK] void 
 23104 ;; Registers used:
 23105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23106 ;; Tracked objects:
 23107 ;;		On entry : 0/1
 23108 ;;		On exit  : 0/0
 23109 ;;		Unchanged: 0/0
 23110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23115 ;;Total ram usage:        0 bytes
 23116 ;; Hardware stack levels used:    1
 23117 ;; Hardware stack levels required when called:   16
 23118 ;; This function calls:
 23119 ;;		_PWM8_LoadDutyValue
 23120 ;; This function is called by:
 23121 ;;		_main
 23122 ;;		_check_help
 23123 ;; This function uses a reentrant model
 23124 ;;
 23125                           
 23126                           	psect	text85
 23127  01BFFE                     __ptext85:
 23128                           	opt callstack 0
 23129  01BFFE                     _mode_lamp_dim:
 23130                           	opt callstack 14
 23131                           
 23132                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23133                           ;stkvar	_level @ sp[(0)+-2]
 23134                           
 23135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23136                           ;incstack = 0
 23137  01BFFE  0EFE               	movlw	-2
 23138  01C000  006F FF8F FFE6     	movff	plusw1,postinc1
 23139  01C006  006F FF8F FFE6     	movff	plusw1,postinc1
 23140  01C00C  EC2C  F0DB         	call	_PWM8_LoadDutyValue	;wreg free
 23141                           
 23142                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23143  01C010  52E5               	movf	postdec1,f,c
 23144  01C012  52E5               	movf	postdec1,f,c
 23145  01C014  0012               	return		;funcret
 23146  01C016                     __end_of_mode_lamp_dim:
 23147                           	opt callstack 0
 23148                           
 23149 ;; *************** function _mode_lamp_bright *****************
 23150 ;; Defined at:
 23151 ;;		line 18 in file "mconfig.c"
 23152 ;; Parameters:    Size  Location     Type
 23153 ;;		None
 23154 ;; Auto vars:     Size  Location     Type
 23155 ;;		None
 23156 ;; Return value:  Size  Location     Type
 23157 ;;                  1  [STACK] void 
 23158 ;; Registers used:
 23159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23160 ;; Tracked objects:
 23161 ;;		On entry : 0/0
 23162 ;;		On exit  : 0/0
 23163 ;;		Unchanged: 0/0
 23164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23169 ;;Total ram usage:        0 bytes
 23170 ;; Hardware stack levels used:    1
 23171 ;; Hardware stack levels required when called:   16
 23172 ;; This function calls:
 23173 ;;		_PWM8_LoadDutyValue
 23174 ;; This function is called by:
 23175 ;;		_check_help
 23176 ;; This function uses a reentrant model
 23177 ;;
 23178                           
 23179                           	psect	text86
 23180  01C0F2                     __ptext86:
 23181                           	opt callstack 0
 23182  01C0F2                     _mode_lamp_bright:
 23183                           	opt callstack 13
 23184                           
 23185                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23186                           
 23187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23188                           ;incstack = 0
 23189  01C0F2  0E2C               	movlw	44
 23190  01C0F4  6EE6               	movwf	postinc1,c
 23191  01C0F6  0E01               	movlw	1
 23192  01C0F8  6EE6               	movwf	postinc1,c
 23193  01C0FA  EC2C  F0DB         	call	_PWM8_LoadDutyValue	;wreg free
 23194                           
 23195                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23196  01C0FE  0012               	return		;funcret
 23197  01C100                     __end_of_mode_lamp_bright:
 23198                           	opt callstack 0
 23199                           
 23200 ;; *************** function _PWM8_LoadDutyValue *****************
 23201 ;; Defined at:
 23202 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23203 ;; Parameters:    Size  Location     Type
 23204 ;;  dutyValue       2  [STACK] unsigned short 
 23205 ;; Auto vars:     Size  Location     Type
 23206 ;;		None
 23207 ;; Return value:  Size  Location     Type
 23208 ;;                  1  [STACK] void 
 23209 ;; Registers used:
 23210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23211 ;; Tracked objects:
 23212 ;;		On entry : 0/1
 23213 ;;		On exit  : 0/0
 23214 ;;		Unchanged: 0/0
 23215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23220 ;;Total ram usage:        0 bytes
 23221 ;; Hardware stack levels used:    1
 23222 ;; Hardware stack levels required when called:   15
 23223 ;; This function calls:
 23224 ;;		Nothing
 23225 ;; This function is called by:
 23226 ;;		_mode_lamp_dim
 23227 ;;		_mode_lamp_bright
 23228 ;; This function uses a reentrant model
 23229 ;;
 23230                           
 23231                           	psect	text87
 23232  01B658                     __ptext87:
 23233                           	opt callstack 0
 23234  01B658                     _PWM8_LoadDutyValue:
 23235                           	opt callstack 14
 23236                           
 23237                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 23238                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23239                           
 23240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23241                           ;incstack = 0
 23242  01B658  0EFE               	movlw	-2
 23243  01B65A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23244  01B660  0EFF               	movlw	-1
 23245  01B662  006F FF8C  F00C    	movff	plusw1,btemp+11
 23246  01B668  90D8               	bcf	status,0,c
 23247  01B66A  320C               	rrcf	(btemp+11)^0,f,c
 23248  01B66C  320B               	rrcf	(btemp+10)^0,f,c
 23249  01B66E  90D8               	bcf	status,0,c
 23250  01B670  320C               	rrcf	(btemp+11)^0,f,c
 23251  01B672  320B               	rrcf	(btemp+10)^0,f,c
 23252  01B674  500B               	movf	(btemp+10)^0,w,c
 23253  01B676  6E61               	movwf	97,c	;volatile
 23254                           
 23255                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 23256                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23257  01B678  0EFE               	movlw	-2
 23258  01B67A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23259  01B680  0E03               	movlw	3
 23260  01B682  160C               	andwf	(btemp+11)^0,f,c
 23261  01B684  0E06               	movlw	6
 23262  01B686  6E01               	movwf	btemp^0,c
 23263  01B688                     u9375:
 23264  01B688  90D8               	bcf	status,0,c
 23265  01B68A  360C               	rlcf	(btemp+11)^0,f,c
 23266  01B68C  2E01               	decfsz	btemp^0,f,c
 23267  01B68E  D7FC               	goto	u9375
 23268  01B690  500C               	movf	(btemp+11)^0,w,c
 23269  01B692  6E60               	movwf	96,c	;volatile
 23270                           
 23271                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 23272  01B694  52E5               	movf	postdec1,f,c
 23273  01B696  52E5               	movf	postdec1,f,c
 23274  01B698  0012               	return		;funcret
 23275  01B69A                     __end_of_PWM8_LoadDutyValue:
 23276                           	opt callstack 0
 23277                           
 23278 ;; *************** function _help_button *****************
 23279 ;; Defined at:
 23280 ;;		line 26 in file "mconfig.c"
 23281 ;; Parameters:    Size  Location     Type
 23282 ;;		None
 23283 ;; Auto vars:     Size  Location     Type
 23284 ;;		None
 23285 ;; Return value:  Size  Location     Type
 23286 ;;                  1  [STACK] _Bool 
 23287 ;; Registers used:
 23288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23289 ;; Tracked objects:
 23290 ;;		On entry : 0/1
 23291 ;;		On exit  : 0/0
 23292 ;;		Unchanged: 0/0
 23293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23298 ;;Total ram usage:        0 bytes
 23299 ;; Hardware stack levels used:    1
 23300 ;; Hardware stack levels required when called:   16
 23301 ;; This function calls:
 23302 ;;		_StartTimer
 23303 ;;		_TimerDone
 23304 ;; This function is called by:
 23305 ;;		_check_help
 23306 ;; This function uses a reentrant model
 23307 ;;
 23308                           
 23309                           	psect	text88
 23310  01B894                     __ptext88:
 23311                           	opt callstack 0
 23312  01B894                     _help_button:
 23313                           	opt callstack 13
 23314                           
 23315                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 23316                           
 23317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23318                           ;incstack = 0
 23319  01B894  B0CB               	btfsc	203,0,c	;volatile
 23320  01B896  D00C               	goto	l1662
 23321                           
 23322                           ;mconfig.c: 29:   V.help = 1;
 23323  01B898  0101               	movlb	1	; () banked
 23324  01B89A  85CB               	bsf	(_V+155)& (0+255),2,b	;volatile
 23325                           
 23326                           ; BSR set to: 1
 23327                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 23328  01B89C  0E08               	movlw	8
 23329  01B89E  6EE6               	movwf	postinc1,c
 23330  01B8A0  ECB3  F0DD         	call	_TimerDone	;wreg free
 23331  01B8A4  5001               	movf	btemp^0,w,c
 23332  01B8A6  B4D8               	btfsc	status,2,c
 23333  01B8A8  D003               	goto	l1662
 23334                           
 23335                           ;mconfig.c: 31:    return 1;
 23336  01B8AA  0E01               	movlw	1
 23337  01B8AC  6E01               	movwf	btemp^0,c
 23338  01B8AE  0012               	return	
 23339  01B8B0                     l1662:
 23340                           
 23341                           ;mconfig.c: 34:  if (!V.help)
 23342  01B8B0  0101               	movlb	1	; () banked
 23343  01B8B2  B5CB               	btfsc	(_V+155)& (0+255),2,b	;volatile
 23344  01B8B4  D008               	goto	l10460
 23345                           
 23346                           ; BSR set to: 1
 23347                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 23348  01B8B6  0E2C               	movlw	44
 23349  01B8B8  6EE6               	movwf	postinc1,c
 23350  01B8BA  0E01               	movlw	1
 23351  01B8BC  6EE6               	movwf	postinc1,c
 23352  01B8BE  0E08               	movlw	8
 23353  01B8C0  6EE6               	movwf	postinc1,c
 23354  01B8C2  EC8D  F0DB         	call	_StartTimer	;wreg free
 23355  01B8C6                     l10460:
 23356                           
 23357                           ;mconfig.c: 37:  return 0;
 23358  01B8C6  0E00               	movlw	0
 23359  01B8C8  6E01               	movwf	btemp^0,c
 23360                           
 23361                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 23362  01B8CA  0012               	return		;funcret
 23363  01B8CC                     __end_of_help_button:
 23364                           	opt callstack 0
 23365                           
 23366 ;; *************** function _TimerDone *****************
 23367 ;; Defined at:
 23368 ;;		line 20 in file "timers.c"
 23369 ;; Parameters:    Size  Location     Type
 23370 ;;  timer           1  [STACK] const unsigned char 
 23371 ;; Auto vars:     Size  Location     Type
 23372 ;;		None
 23373 ;; Return value:  Size  Location     Type
 23374 ;;                  1  [STACK] _Bool 
 23375 ;; Registers used:
 23376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23377 ;; Tracked objects:
 23378 ;;		On entry : 0/1
 23379 ;;		On exit  : 0/0
 23380 ;;		Unchanged: 0/0
 23381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23386 ;;Total ram usage:        0 bytes
 23387 ;; Hardware stack levels used:    1
 23388 ;; Hardware stack levels required when called:   15
 23389 ;; This function calls:
 23390 ;;		Nothing
 23391 ;; This function is called by:
 23392 ;;		_main
 23393 ;;		_WaitMs
 23394 ;;		_help_button
 23395 ;;		_check_help
 23396 ;;		_set_display_info
 23397 ;;		_update_adc_result
 23398 ;;		_esr_check
 23399 ;; This function uses a reentrant model
 23400 ;;
 23401                           
 23402                           	psect	text89
 23403  01BB66                     __ptext89:
 23404                           	opt callstack 0
 23405  01BB66                     _TimerDone:
 23406                           	opt callstack 14
 23407                           
 23408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23409                           ;incstack = 0
 23410  01BB66  0004               	clrwdt		;# 
 23411                           
 23412                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 23413                           ;stkvar	_timer @ sp[(0)+-1]
 23414  01BB68  0EFF               	movlw	-1
 23415  01BB6A  50E3               	movf	plusw1,w,c
 23416  01BB6C  0D02               	mullw	2
 23417  01BB6E  0E7D               	movlw	low _tickCount
 23418  01BB70  24F3               	addwf	243,w,c
 23419  01BB72  6ED9               	movwf	fsr2l,c
 23420  01BB74  0E02               	movlw	high _tickCount
 23421  01BB76  20F4               	addwfc	prodh,w,c
 23422  01BB78  6EDA               	movwf	fsr2h,c
 23423  01BB7A  50DE               	movf	postinc2,w,c
 23424  01BB7C  10DE               	iorwf	postinc2,w,c
 23425  01BB7E  A4D8               	btfss	status,2,c
 23426  01BB80  D002               	goto	l9746
 23427                           
 23428                           ;timers.c: 24:   return 1;
 23429  01BB82  0E01               	movlw	1
 23430  01BB84  D001               	goto	L27
 23431  01BB86                     l9746:
 23432                           
 23433                           ;timers.c: 26:  return 0;
 23434  01BB86  0E00               	movlw	0
 23435  01BB88                     L27:
 23436  01BB88  6E01               	movwf	btemp^0,c
 23437                           
 23438                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23439  01BB8A  52E5               	movf	postdec1,f,c
 23440  01BB8C  0012               	return		;funcret
 23441  01BB8E                     __end_of_TimerDone:
 23442                           	opt callstack 0
 23443                           
 23444 ;; *************** function _StartTimer *****************
 23445 ;; Defined at:
 23446 ;;		line 12 in file "timers.c"
 23447 ;; Parameters:    Size  Location     Type
 23448 ;;  timer           1  [STACK] const unsigned char 
 23449 ;;  count           2  [STACK] const unsigned short 
 23450 ;; Auto vars:     Size  Location     Type
 23451 ;;		None
 23452 ;; Return value:  Size  Location     Type
 23453 ;;                  1  [STACK] void 
 23454 ;; Registers used:
 23455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23456 ;; Tracked objects:
 23457 ;;		On entry : 0/0
 23458 ;;		On exit  : 0/0
 23459 ;;		Unchanged: 0/0
 23460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23465 ;;Total ram usage:        0 bytes
 23466 ;; Hardware stack levels used:    1
 23467 ;; Hardware stack levels required when called:   15
 23468 ;; This function calls:
 23469 ;;		Nothing
 23470 ;; This function is called by:
 23471 ;;		_main
 23472 ;;		_WaitMs
 23473 ;;		_help_button
 23474 ;;		_check_help
 23475 ;;		_update_adc_result
 23476 ;;		_calc_bsoc
 23477 ;;		_esr_check
 23478 ;; This function uses a reentrant model
 23479 ;;
 23480                           
 23481                           	psect	text90
 23482  01B71A                     __ptext90:
 23483                           	opt callstack 0
 23484  01B71A                     _StartTimer:
 23485                           	opt callstack 0
 23486                           
 23487                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23488                           ;stkvar	_count @ sp[(0)+-3]
 23489                           
 23490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23491                           ;incstack = 0
 23492 ;; hardware stack exceeded
 23493  01B71A  0EFD               	movlw	-3
 23494  01B71C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23495  01B722  0EFE               	movlw	-2
 23496  01B724  006F FF8C  F00C    	movff	plusw1,btemp+11
 23497  01B72A  90D8               	bcf	status,0,c
 23498  01B72C  340B               	rlcf	(btemp+10)^0,w,c
 23499  01B72E  6E09               	movwf	(btemp+8)^0,c
 23500  01B730  340C               	rlcf	(btemp+11)^0,w,c
 23501  01B732  6E0A               	movwf	(btemp+9)^0,c
 23502                           
 23503                           ;stkvar	_timer @ sp[(0)+-1]
 23504  01B734  0EFF               	movlw	-1
 23505  01B736  50E3               	movf	plusw1,w,c
 23506  01B738  0D02               	mullw	2
 23507  01B73A  0E7D               	movlw	low _tickCount
 23508  01B73C  24F3               	addwf	243,w,c
 23509  01B73E  6ED9               	movwf	fsr2l,c
 23510  01B740  0E02               	movlw	high _tickCount
 23511  01B742  20F4               	addwfc	prodh,w,c
 23512  01B744  6EDA               	movwf	fsr2h,c
 23513  01B746  0060  F027  FFDE   	movff	btemp+8,postinc2
 23514  01B74C  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23515                           
 23516                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23517  01B752  52E5               	movf	postdec1,f,c
 23518  01B754  52E5               	movf	postdec1,f,c
 23519  01B756  52E5               	movf	postdec1,f,c
 23520  01B758  0012               	return		;funcret
 23521  01B75A                     __end_of_StartTimer:
 23522                           	opt callstack 0
 23523                           
 23524 ;; *************** function _display_info *****************
 23525 ;; Defined at:
 23526 ;;		line 190 in file "mconfig.c"
 23527 ;; Parameters:    Size  Location     Type
 23528 ;;		None
 23529 ;; Auto vars:     Size  Location     Type
 23530 ;;		None
 23531 ;; Return value:  Size  Location     Type
 23532 ;;                  1  [STACK] enum E16509
 23533 ;; Registers used:
 23534 ;;		btemp
 23535 ;; Tracked objects:
 23536 ;;		On entry : 0/1
 23537 ;;		On exit  : 0/0
 23538 ;;		Unchanged: 0/0
 23539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23544 ;;Total ram usage:        0 bytes
 23545 ;; Hardware stack levels used:    1
 23546 ;; Hardware stack levels required when called:   15
 23547 ;; This function calls:
 23548 ;;		Nothing
 23549 ;; This function is called by:
 23550 ;;		_check_help
 23551 ;; This function uses a reentrant model
 23552 ;;
 23553                           
 23554                           	psect	text91
 23555  01C176                     __ptext91:
 23556                           	opt callstack 0
 23557  01C176                     _display_info:
 23558                           	opt callstack 14
 23559                           
 23560                           ;mconfig.c: 192:  return V.response.info;
 23561                           
 23562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23563                           ;incstack = 0
 23564  01C176  0060  F750  F001   	movff	_V+164,btemp	;volatile
 23565                           
 23566                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23567  01C17C  0012               	return		;funcret
 23568  01C17E                     __end_of_display_info:
 23569                           	opt callstack 0
 23570                           
 23571 ;; *************** function _display_help *****************
 23572 ;; Defined at:
 23573 ;;		line 195 in file "mconfig.c"
 23574 ;; Parameters:    Size  Location     Type
 23575 ;;		None
 23576 ;; Auto vars:     Size  Location     Type
 23577 ;;		None
 23578 ;; Return value:  Size  Location     Type
 23579 ;;                  1  [STACK] enum E16509
 23580 ;; Registers used:
 23581 ;;		btemp
 23582 ;; Tracked objects:
 23583 ;;		On entry : 3F/1
 23584 ;;		On exit  : 0/0
 23585 ;;		Unchanged: 0/0
 23586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23591 ;;Total ram usage:        0 bytes
 23592 ;; Hardware stack levels used:    1
 23593 ;; Hardware stack levels required when called:   15
 23594 ;; This function calls:
 23595 ;;		Nothing
 23596 ;; This function is called by:
 23597 ;;		_check_help
 23598 ;; This function uses a reentrant model
 23599 ;;
 23600                           
 23601                           	psect	text92
 23602  01C17E                     __ptext92:
 23603                           	opt callstack 0
 23604  01C17E                     _display_help:
 23605                           	opt callstack 14
 23606                           
 23607                           ;mconfig.c: 197:  return V.response.help_temp;
 23608                           
 23609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23610                           ;incstack = 0
 23611  01C17E  0060  F754  F001   	movff	_V+165,btemp	;volatile
 23612                           
 23613                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23614  01C184  0012               	return		;funcret
 23615  01C186                     __end_of_display_help:
 23616                           	opt callstack 0
 23617                           
 23618 ;; *************** function _check_enter_button *****************
 23619 ;; Defined at:
 23620 ;;		line 42 in file "hid.c"
 23621 ;; Parameters:    Size  Location     Type
 23622 ;;  h               1  [STACK] PTR struct H_data
 23623 ;;		 -> H(7), 
 23624 ;; Auto vars:     Size  Location     Type
 23625 ;;		None
 23626 ;; Return value:  Size  Location     Type
 23627 ;;                  1  [STACK] _Bool 
 23628 ;; Registers used:
 23629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23630 ;; Tracked objects:
 23631 ;;		On entry : 0/0
 23632 ;;		On exit  : 0/0
 23633 ;;		Unchanged: 0/0
 23634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23639 ;;Total ram usage:        0 bytes
 23640 ;; Hardware stack levels used:    1
 23641 ;; Hardware stack levels required when called:   15
 23642 ;; This function calls:
 23643 ;;		Nothing
 23644 ;; This function is called by:
 23645 ;;		_main
 23646 ;; This function uses a reentrant model
 23647 ;;
 23648                           
 23649                           	psect	text93
 23650  01B75A                     __ptext93:
 23651                           	opt callstack 0
 23652  01B75A                     _check_enter_button:
 23653                           	opt callstack 15
 23654                           
 23655                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23656                           ;stkvar	_h @ sp[(0)+-1]
 23657                           
 23658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23659                           ;incstack = 0
 23660  01B75A  0EFF               	movlw	-1
 23661  01B75C  50E3               	movf	plusw1,w,c
 23662  01B75E  6ED9               	movwf	fsr2l,c
 23663  01B760  6ADA               	clrf	fsr2h,c
 23664  01B762  0E04               	movlw	4
 23665  01B764  26D9               	addwf	fsr2l,f,c
 23666  01B766  50DF               	movf	indf2,w,c
 23667  01B768  A4D8               	btfss	status,2,c
 23668  01B76A  D013               	goto	l11088
 23669                           
 23670                           ;stkvar	_h @ sp[(0)+-1]
 23671  01B76C  0EFF               	movlw	-1
 23672  01B76E  50E3               	movf	plusw1,w,c
 23673  01B770  6ED9               	movwf	fsr2l,c
 23674  01B772  6ADA               	clrf	fsr2h,c
 23675  01B774  0E05               	movlw	5
 23676  01B776  26D9               	addwf	fsr2l,f,c
 23677  01B778  50DF               	movf	indf2,w,c
 23678  01B77A  A4D8               	btfss	status,2,c
 23679  01B77C  D00A               	goto	l11088
 23680                           
 23681                           ;hid.c: 45:   h->wait_enter = 1;
 23682                           ;stkvar	_h @ sp[(0)+-1]
 23683  01B77E  0EFF               	movlw	-1
 23684  01B780  50E3               	movf	plusw1,w,c
 23685  01B782  6ED9               	movwf	fsr2l,c
 23686  01B784  6ADA               	clrf	fsr2h,c
 23687  01B786  0E04               	movlw	4
 23688  01B788  26D9               	addwf	fsr2l,f,c
 23689  01B78A  0E01               	movlw	1
 23690  01B78C  6EDF               	movwf	indf2,c
 23691                           
 23692                           ;hid.c: 46:   return 1;
 23693  01B78E  0E01               	movlw	1
 23694  01B790  D001               	goto	L28
 23695  01B792                     l11088:
 23696                           
 23697                           ;hid.c: 48:  return 0;
 23698  01B792  0E00               	movlw	0
 23699  01B794                     L28:
 23700  01B794  6E01               	movwf	btemp^0,c
 23701                           
 23702                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23703  01B796  52E5               	movf	postdec1,f,c
 23704  01B798  0012               	return		;funcret
 23705  01B79A                     __end_of_check_enter_button:
 23706                           	opt callstack 0
 23707                           
 23708 ;; *************** function _calc_ror_data *****************
 23709 ;; Defined at:
 23710 ;;		line 102 in file "mbmc.c"
 23711 ;; Parameters:    Size  Location     Type
 23712 ;;		None
 23713 ;; Auto vars:     Size  Location     Type
 23714 ;;		None
 23715 ;; Return value:  Size  Location     Type
 23716 ;;                  1  [STACK] void 
 23717 ;; Registers used:
 23718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23719 ;; Tracked objects:
 23720 ;;		On entry : 0/39
 23721 ;;		On exit  : 0/0
 23722 ;;		Unchanged: 0/0
 23723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23728 ;;Total ram usage:        0 bytes
 23729 ;; Hardware stack levels used:    1
 23730 ;; Hardware stack levels required when called:   18
 23731 ;; This function calls:
 23732 ;;		___flge
 23733 ;;		___flsub
 23734 ;;		_conv_raw_result
 23735 ;;		_fabsf
 23736 ;; This function is called by:
 23737 ;;		_main
 23738 ;; This function uses a reentrant model
 23739 ;;
 23740                           
 23741                           	psect	text94
 23742  018B54                     __ptext94:
 23743                           	opt callstack 0
 23744  018B54                     _calc_ror_data:
 23745                           	opt callstack 12
 23746                           
 23747                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23748                           
 23749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23750                           ;incstack = 0
 23751  018B54  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23752  018B5A  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23753  018B60  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23754  018B66  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23755  018B6C  0E00               	movlw	0
 23756  018B6E  6EE6               	movwf	postinc1,c
 23757  018B70  0E00               	movlw	0
 23758  018B72  6EE6               	movwf	postinc1,c
 23759  018B74  EC63  F0A9         	call	_conv_raw_result	;wreg free
 23760  018B78  0060  F007  FFE6   	movff	btemp,postinc1
 23761  018B7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23762  018B84  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23763  018B8A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23764  018B90  ECE7  F0DA         	call	___flsub	;wreg free
 23765  018B94  0060  F007  FFE6   	movff	btemp,postinc1
 23766  018B9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23767  018BA0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23768  018BA6  0060  F013  FFE6   	movff	btemp+3,postinc1
 23769  018BAC  ECEF  F0D2         	call	_fabsf	;wreg free
 23770  018BB0  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 23771  018BB6  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 23772  018BBC  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 23773  018BC2  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 23774                           
 23775                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23776  018BC8  0E00               	movlw	0
 23777  018BCA  6EE6               	movwf	postinc1,c
 23778  018BCC  0E00               	movlw	0
 23779  018BCE  6EE6               	movwf	postinc1,c
 23780  018BD0  EC63  F0A9         	call	_conv_raw_result	;wreg free
 23781  018BD4  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 23782  018BDA  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23783  018BE0  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23784  018BE6  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23785                           
 23786                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23787  018BEC  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23788  018BF2  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23789  018BF8  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23790  018BFE  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23791  018C04  0E00               	movlw	0
 23792  018C06  6EE6               	movwf	postinc1,c
 23793  018C08  0E04               	movlw	4
 23794  018C0A  6EE6               	movwf	postinc1,c
 23795  018C0C  EC63  F0A9         	call	_conv_raw_result	;wreg free
 23796  018C10  0060  F007  FFE6   	movff	btemp,postinc1
 23797  018C16  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23798  018C1C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23799  018C22  0060  F013  FFE6   	movff	btemp+3,postinc1
 23800  018C28  ECE7  F0DA         	call	___flsub	;wreg free
 23801  018C2C  0060  F007  FFE6   	movff	btemp,postinc1
 23802  018C32  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23803  018C38  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23804  018C3E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23805  018C44  ECEF  F0D2         	call	_fabsf	;wreg free
 23806  018C48  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 23807  018C4E  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 23808  018C54  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 23809  018C5A  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 23810                           
 23811                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23812  018C60  0EE7               	movlw	231
 23813  018C62  6EE6               	movwf	postinc1,c
 23814  018C64  0E1D               	movlw	29
 23815  018C66  6EE6               	movwf	postinc1,c
 23816  018C68  0EA7               	movlw	167
 23817  018C6A  6EE6               	movwf	postinc1,c
 23818  018C6C  0E3B               	movlw	59
 23819  018C6E  6EE6               	movwf	postinc1,c
 23820  018C70  EE21  F36B         	lfsr	2,_C+108	;volatile
 23821  018C74  006F FF7B FFE6     	movff	postinc2,postinc1
 23822  018C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 23823  018C80  006F FF7B FFE6     	movff	postinc2,postinc1
 23824  018C86  006F FF7B FFE6     	movff	postinc2,postinc1
 23825  018C8C  ECE6  F0C7         	call	___flge	;wreg free
 23826  018C90  B001               	btfsc	btemp& (0+255),0,c
 23827  018C92  D010               	goto	l10878
 23828                           
 23829                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23830  018C94  0EB0               	movlw	176
 23831  018C96  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23832  018C9C  0E03               	movlw	3
 23833  018C9E  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23834  018CA4  0E67               	movlw	103
 23835  018CA6  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23836  018CAC  0E3C               	movlw	60
 23837  018CAE  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23838  018CB4                     l10878:
 23839                           
 23840                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23841  018CB4  0E00               	movlw	0
 23842  018CB6  6EE6               	movwf	postinc1,c
 23843  018CB8  0E04               	movlw	4
 23844  018CBA  6EE6               	movwf	postinc1,c
 23845  018CBC  EC63  F0A9         	call	_conv_raw_result	;wreg free
 23846  018CC0  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 23847  018CC6  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23848  018CCC  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23849  018CD2  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23850                           
 23851                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23852  018CD8  0012               	return		;funcret
 23853  018CDA                     __end_of_calc_ror_data:
 23854                           	opt callstack 0
 23855                           
 23856 ;; *************** function _fabsf *****************
 23857 ;; Defined at:
 23858 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23859 ;; Parameters:    Size  Location     Type
 23860 ;;  x               4  [STACK] float 
 23861 ;; Auto vars:     Size  Location     Type
 23862 ;;  u               4  [STACK] struct .
 23863 ;; Return value:  Size  Location     Type
 23864 ;;                  4  [STACK] float 
 23865 ;; Registers used:
 23866 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23867 ;; Tracked objects:
 23868 ;;		On entry : 0/0
 23869 ;;		On exit  : 0/0
 23870 ;;		Unchanged: 0/0
 23871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23876 ;;Total ram usage:        0 bytes
 23877 ;; Hardware stack levels used:    1
 23878 ;; Hardware stack levels required when called:   15
 23879 ;; This function calls:
 23880 ;;		Nothing
 23881 ;; This function is called by:
 23882 ;;		_main
 23883 ;;		_calc_ror_data
 23884 ;;		_calc_bsoc
 23885 ;;		_esr_check
 23886 ;; This function uses a reentrant model
 23887 ;;
 23888                           
 23889                           	psect	text95
 23890  01A5DE                     __ptext95:
 23891                           	opt callstack 0
 23892  01A5DE                     _fabsf:
 23893                           	opt callstack 0
 23894                           
 23895                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23896  01A5DE  52E6               	movf	postinc1,f,c
 23897  01A5E0  52E6               	movf	postinc1,f,c
 23898  01A5E2  52E6               	movf	postinc1,f,c
 23899  01A5E4  52E6               	movf	postinc1,f,c
 23900                           
 23901                           ;incstack = 0
 23902 ;; hardware stack exceeded
 23903  01A5E6  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 23904  01A5EC  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 23905  01A5F2  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 23906  01A5F8  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 23907                           
 23908                           ;stkvar	_u @ sp[(-4)+0]
 23909  01A5FE  0EFC               	movlw	-4
 23910  01A600  0060  F027  FFE3   	movff	btemp+8,plusw1
 23911  01A606  0EFD               	movlw	-3
 23912  01A608  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23913  01A60E  0EFE               	movlw	-2
 23914  01A610  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23915  01A616  0EFF               	movlw	-1
 23916  01A618  0060  F033  FFE3   	movff	btemp+11,plusw1
 23917                           
 23918                           ;stkvar	_x @ sp[(-4)+-4]
 23919  01A61E  0EF8               	movlw	-8
 23920  01A620  006F FF8C  F009    	movff	plusw1,btemp+8
 23921  01A626  0EF9               	movlw	-7
 23922  01A628  006F FF8C  F00A    	movff	plusw1,btemp+9
 23923  01A62E  0EFA               	movlw	-6
 23924  01A630  006F FF8C  F00B    	movff	plusw1,btemp+10
 23925  01A636  0EFB               	movlw	-5
 23926  01A638  006F FF8C  F00C    	movff	plusw1,btemp+11
 23927                           
 23928                           ;stkvar	_u @ sp[(-4)+0]
 23929  01A63E  0EFC               	movlw	-4
 23930  01A640  0060  F027  FFE3   	movff	btemp+8,plusw1
 23931  01A646  0EFD               	movlw	-3
 23932  01A648  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23933  01A64E  0EFE               	movlw	-2
 23934  01A650  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23935  01A656  0EFF               	movlw	-1
 23936  01A658  0060  F033  FFE3   	movff	btemp+11,plusw1
 23937                           
 23938                           ;stkvar	_u @ sp[(-4)+0]
 23939  01A65E  0EFF               	movlw	-1
 23940  01A660  9EE3               	bcf	plusw1,7,c
 23941                           
 23942                           ;stkvar	_u @ sp[(-4)+0]
 23943  01A662  0EFC               	movlw	-4
 23944  01A664  006F FF8C  F001    	movff	plusw1,btemp
 23945  01A66A  0EFD               	movlw	-3
 23946  01A66C  006F FF8C  F002    	movff	plusw1,btemp+1
 23947  01A672  0EFE               	movlw	-2
 23948  01A674  006F FF8C  F003    	movff	plusw1,btemp+2
 23949  01A67A  0EFF               	movlw	-1
 23950  01A67C  006F FF8C  F004    	movff	plusw1,btemp+3
 23951                           
 23952                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23953  01A682  0EF8               	movlw	248
 23954  01A684  26E1               	addwf	fsr1l,f,c
 23955  01A686  0EFF               	movlw	255
 23956  01A688  22E2               	addwfc	fsr1h,f,c
 23957  01A68A  0012               	return		;funcret
 23958  01A68C                     __end_of_fabsf:
 23959                           	opt callstack 0
 23960                           
 23961 ;; *************** function _conv_raw_result *****************
 23962 ;; Defined at:
 23963 ;;		line 98 in file "daq.c"
 23964 ;; Parameters:    Size  Location     Type
 23965 ;;  chan            1  [STACK] const enum E16582
 23966 ;;  to_what         1  [STACK] const enum E16644
 23967 ;; Auto vars:     Size  Location     Type
 23968 ;;		None
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  4  [STACK] float 
 23971 ;; Registers used:
 23972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23973 ;; Tracked objects:
 23974 ;;		On entry : 0/39
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23982 ;;Total ram usage:        0 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:   17
 23985 ;; This function calls:
 23986 ;;		___fladd
 23987 ;;		___fldiv
 23988 ;;		___flmul
 23989 ;;		___flsub
 23990 ;;		___xxtofl
 23991 ;;		_get_raw_result
 23992 ;;		_nanf
 23993 ;; This function is called by:
 23994 ;;		_main
 23995 ;;		_convert_adc_data
 23996 ;;		_calc_ror_data
 23997 ;;		_check_day_time
 23998 ;;		_init_bsoc
 23999 ;;		_esr_check
 24000 ;; This function uses a reentrant model
 24001 ;;
 24002                           
 24003                           	psect	text96
 24004  0152C6                     __ptext96:
 24005                           	opt callstack 0
 24006  0152C6                     _conv_raw_result:
 24007                           	opt callstack 0
 24008                           
 24009                           ;daq.c: 98: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 99: {;daq.c: 101:  switch (to_what) {
 24010                           
 24011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24012                           ;incstack = 0
 24013 ;; hardware stack exceeded
 24014  0152C6  D276               	goto	l9728
 24015  0152C8                     l9674:
 24016                           
 24017                           ;daq.c: 103:   if (!(0b0011110001110111 >> chan & 0x1))
 24018                           ;stkvar	_chan @ sp[(0)+-1]
 24019  0152C8  0EFF               	movlw	-1
 24020  0152CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24021  0152D0  0E77               	movlw	119
 24022  0152D2  6E09               	movwf	(btemp+8)^0,c
 24023  0152D4  0E3C               	movlw	60
 24024  0152D6  6E0A               	movwf	(btemp+9)^0,c
 24025  0152D8  2A0C               	incf	(btemp+11)^0,f,c
 24026  0152DA  D003               	goto	u9094
 24027  0152DC                     u9095:
 24028  0152DC  340A               	rlcf	(btemp+9)^0,w,c
 24029  0152DE  320A               	rrcf	(btemp+9)^0,f,c
 24030  0152E0  3209               	rrcf	(btemp+8)^0,f,c
 24031  0152E2                     u9094:
 24032  0152E2  2E0C               	decfsz	(btemp+11)^0,f,c
 24033  0152E4  D7FB               	goto	u9095
 24034  0152E6  B009               	btfsc	(btemp+8)^0,0,c
 24035  0152E8  D007               	goto	l9680
 24036                           
 24037                           ;daq.c: 104:    return nanf("");
 24038  0152EA  0E4F               	movlw	low (STR_64+120)
 24039  0152EC  6EE6               	movwf	postinc1,c
 24040  0152EE  0EFC               	movlw	high (STR_64+120)
 24041  0152F0  6EE6               	movwf	postinc1,c
 24042  0152F2  EC89  F0D8         	call	_nanf	;wreg free
 24043  0152F6  D26E               	goto	l1781
 24044  0152F8                     l9680:
 24045                           
 24046                           ;daq.c: 106:   if (0b0000000000000011 >> chan & 0x1) {
 24047                           ;stkvar	_chan @ sp[(0)+-1]
 24048  0152F8  0EFF               	movlw	-1
 24049  0152FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24050  015300  0E03               	movlw	3
 24051  015302  6E09               	movwf	(btemp+8)^0,c
 24052  015304  0E00               	movlw	0
 24053  015306  6E0A               	movwf	(btemp+9)^0,c
 24054  015308  2A0C               	incf	(btemp+11)^0,f,c
 24055  01530A  D003               	goto	u9114
 24056  01530C                     u9115:
 24057  01530C  340A               	rlcf	(btemp+9)^0,w,c
 24058  01530E  320A               	rrcf	(btemp+9)^0,f,c
 24059  015310  3209               	rrcf	(btemp+8)^0,f,c
 24060  015312                     u9114:
 24061  015312  2E0C               	decfsz	(btemp+11)^0,f,c
 24062  015314  D7FB               	goto	u9115
 24063  015316  A009               	btfss	(btemp+8)^0,0,c
 24064  015318  D11F               	goto	l9694
 24065                           
 24066                           ;daq.c: 107:    if (0b0000000000000001 >> chan & 0x1) {
 24067                           ;stkvar	_chan @ sp[(0)+-1]
 24068  01531A  0EFF               	movlw	-1
 24069  01531C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24070  015322  0E01               	movlw	1
 24071  015324  6E09               	movwf	(btemp+8)^0,c
 24072  015326  0E00               	movlw	0
 24073  015328  6E0A               	movwf	(btemp+9)^0,c
 24074  01532A  2A0C               	incf	(btemp+11)^0,f,c
 24075  01532C  D003               	goto	u9134
 24076  01532E                     u9135:
 24077  01532E  340A               	rlcf	(btemp+9)^0,w,c
 24078  015330  320A               	rrcf	(btemp+9)^0,f,c
 24079  015332  3209               	rrcf	(btemp+8)^0,f,c
 24080  015334                     u9134:
 24081  015334  2E0C               	decfsz	(btemp+11)^0,f,c
 24082  015336  D7FB               	goto	u9135
 24083  015338  A009               	btfss	(btemp+8)^0,0,c
 24084  01533A  D087               	goto	l9690
 24085                           
 24086                           ;daq.c: 108:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24087  01533C  0060  F493  FFE6   	movff	_R+36,postinc1
 24088  015342  0060  F497  FFE6   	movff	_R+37,postinc1
 24089  015348  0060  F49B  FFE6   	movff	_R+38,postinc1
 24090  01534E  0060  F49F  FFE6   	movff	_R+39,postinc1
 24091  015354  0E7B               	movlw	123
 24092  015356  6EE6               	movwf	postinc1,c
 24093  015358  0E14               	movlw	20
 24094  01535A  6EE6               	movwf	postinc1,c
 24095  01535C  0EAE               	movlw	174
 24096  01535E  6EE6               	movwf	postinc1,c
 24097  015360  0E3D               	movlw	61
 24098  015362  6EE6               	movwf	postinc1,c
 24099  015364  0060  F480  F009   	movff	_R+32,btemp+8	;volatile
 24100  01536A  0060  F484  F00A   	movff	_R+33,btemp+9	;volatile
 24101  015370  0E00               	movlw	0
 24102  015372  BE0A               	btfsc	(btemp+9)^0,7,c
 24103  015374  0EFF               	movlw	255
 24104  015376  6E0B               	movwf	(btemp+10)^0,c
 24105  015378  6E0C               	movwf	(btemp+11)^0,c
 24106  01537A  0060  F027  FFE6   	movff	btemp+8,postinc1
 24107  015380  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24108  015386  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24109  01538C  0060  F033  FFE6   	movff	btemp+11,postinc1
 24110  015392  0E01               	movlw	1
 24111  015394  6EE6               	movwf	postinc1,c
 24112  015396  EC2F  F0C2         	call	___xxtofl	;wreg free
 24113  01539A  0060  F007  FFE6   	movff	btemp,postinc1
 24114  0153A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24115  0153A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24116  0153AC  0060  F013  FFE6   	movff	btemp+3,postinc1
 24117                           
 24118                           ;stkvar	_chan @ sp[(-12)+-1]
 24119  0153B2  0EF3               	movlw	-13
 24120  0153B4  50E3               	movf	plusw1,w,c
 24121  0153B6  6EE6               	movwf	postinc1,c
 24122  0153B8  EC4A  F0DF         	call	_get_raw_result	;wreg free
 24123  0153BC  0060  F004  F00B   	movff	btemp,btemp+10
 24124  0153C2  0060  F008  F00C   	movff	btemp+1,btemp+11
 24125  0153C8  500B               	movf	(btemp+10)^0,w,c
 24126  0153CA  6E05               	movwf	(btemp+4)^0,c
 24127  0153CC  500C               	movf	(btemp+11)^0,w,c
 24128  0153CE  6E06               	movwf	(btemp+5)^0,c
 24129  0153D0  6A07               	clrf	(btemp+6)^0,c
 24130  0153D2  6A08               	clrf	(btemp+7)^0,c
 24131  0153D4  0060  F017  FFE6   	movff	btemp+4,postinc1
 24132  0153DA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24133  0153E0  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24134  0153E6  0060  F023  FFE6   	movff	btemp+7,postinc1
 24135  0153EC  0E00               	movlw	0
 24136  0153EE  6EE6               	movwf	postinc1,c
 24137  0153F0  EC2F  F0C2         	call	___xxtofl	;wreg free
 24138  0153F4  0060  F007  FFE6   	movff	btemp,postinc1
 24139  0153FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24140  015400  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24141  015406  0060  F013  FFE6   	movff	btemp+3,postinc1
 24142  01540C  ECE7  F0DA         	call	___flsub	;wreg free
 24143  015410  0060  F007  FFE6   	movff	btemp,postinc1
 24144  015416  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24145  01541C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24146  015422  0060  F013  FFE6   	movff	btemp+3,postinc1
 24147  015428  ECB3  F09E         	call	___flmul	;wreg free
 24148  01542C  0060  F007  FFE6   	movff	btemp,postinc1
 24149  015432  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24150  015438  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24151  01543E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24152  015444  ECC8  F0A2         	call	___fladd	;wreg free
 24153  015448  D1C5               	goto	l1781
 24154  01544A                     l9690:
 24155                           
 24156                           ;daq.c: 110:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24157  01544A  0060  F4A3  FFE6   	movff	_R+40,postinc1
 24158  015450  0060  F4A7  FFE6   	movff	_R+41,postinc1
 24159  015456  0060  F4AB  FFE6   	movff	_R+42,postinc1
 24160  01545C  0060  F4AF  FFE6   	movff	_R+43,postinc1
 24161  015462  0E29               	movlw	41
 24162  015464  6EE6               	movwf	postinc1,c
 24163  015466  0E5C               	movlw	92
 24164  015468  6EE6               	movwf	postinc1,c
 24165  01546A  0E0F               	movlw	15
 24166  01546C  6EE6               	movwf	postinc1,c
 24167  01546E  0E3D               	movlw	61
 24168  015470  6EE6               	movwf	postinc1,c
 24169  015472  0060  F488  F009   	movff	_R+34,btemp+8	;volatile
 24170  015478  0060  F48C  F00A   	movff	_R+35,btemp+9	;volatile
 24171  01547E  0E00               	movlw	0
 24172  015480  BE0A               	btfsc	(btemp+9)^0,7,c
 24173  015482  0EFF               	movlw	255
 24174  015484  6E0B               	movwf	(btemp+10)^0,c
 24175  015486  6E0C               	movwf	(btemp+11)^0,c
 24176  015488  0060  F027  FFE6   	movff	btemp+8,postinc1
 24177  01548E  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24178  015494  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24179  01549A  0060  F033  FFE6   	movff	btemp+11,postinc1
 24180  0154A0  0E01               	movlw	1
 24181  0154A2  6EE6               	movwf	postinc1,c
 24182  0154A4  EC2F  F0C2         	call	___xxtofl	;wreg free
 24183  0154A8  0060  F007  FFE6   	movff	btemp,postinc1
 24184  0154AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24185  0154B4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24186  0154BA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24187                           
 24188                           ;stkvar	_chan @ sp[(-12)+-1]
 24189  0154C0  0EF3               	movlw	-13
 24190  0154C2  50E3               	movf	plusw1,w,c
 24191  0154C4  6EE6               	movwf	postinc1,c
 24192  0154C6  EC4A  F0DF         	call	_get_raw_result	;wreg free
 24193  0154CA  0060  F004  F00B   	movff	btemp,btemp+10
 24194  0154D0  0060  F008  F00C   	movff	btemp+1,btemp+11
 24195  0154D6  500B               	movf	(btemp+10)^0,w,c
 24196  0154D8  6E05               	movwf	(btemp+4)^0,c
 24197  0154DA  500C               	movf	(btemp+11)^0,w,c
 24198  0154DC  6E06               	movwf	(btemp+5)^0,c
 24199  0154DE  6A07               	clrf	(btemp+6)^0,c
 24200  0154E0  6A08               	clrf	(btemp+7)^0,c
 24201  0154E2  0060  F017  FFE6   	movff	btemp+4,postinc1
 24202  0154E8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24203  0154EE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24204  0154F4  0060  F023  FFE6   	movff	btemp+7,postinc1
 24205  0154FA  0E00               	movlw	0
 24206  0154FC  6EE6               	movwf	postinc1,c
 24207  0154FE  EC2F  F0C2         	call	___xxtofl	;wreg free
 24208  015502  0060  F007  FFE6   	movff	btemp,postinc1
 24209  015508  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24210  01550E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24211  015514  0060  F013  FFE6   	movff	btemp+3,postinc1
 24212  01551A  ECE7  F0DA         	call	___flsub	;wreg free
 24213  01551E  0060  F007  FFE6   	movff	btemp,postinc1
 24214  015524  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24215  01552A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24216  015530  0060  F013  FFE6   	movff	btemp+3,postinc1
 24217  015536  ECB3  F09E         	call	___flmul	;wreg free
 24218  01553A  0060  F007  FFE6   	movff	btemp,postinc1
 24219  015540  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24220  015546  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24221  01554C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24222  015552  ECC8  F0A2         	call	___fladd	;wreg free
 24223  015556  D13E               	goto	l1781
 24224  015558                     l9694:
 24225                           
 24226                           ;daq.c: 113:    if (0b0000100000000000 >> chan & 0x1) {
 24227                           ;stkvar	_chan @ sp[(0)+-1]
 24228  015558  0EFF               	movlw	-1
 24229  01555A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24230  015560  0E00               	movlw	0
 24231  015562  6E09               	movwf	(btemp+8)^0,c
 24232  015564  0E08               	movlw	8
 24233  015566  6E0A               	movwf	(btemp+9)^0,c
 24234  015568  2A0C               	incf	(btemp+11)^0,f,c
 24235  01556A  D003               	goto	u9154
 24236  01556C                     u9155:
 24237  01556C  340A               	rlcf	(btemp+9)^0,w,c
 24238  01556E  320A               	rrcf	(btemp+9)^0,f,c
 24239  015570  3209               	rrcf	(btemp+8)^0,f,c
 24240  015572                     u9154:
 24241  015572  2E0C               	decfsz	(btemp+11)^0,f,c
 24242  015574  D7FB               	goto	u9155
 24243  015576  A009               	btfss	(btemp+8)^0,0,c
 24244  015578  D008               	goto	l9702
 24245                           
 24246                           ;daq.c: 114:     return 25.0;
 24247  01557A  0E00               	movlw	0
 24248  01557C  6E01               	movwf	btemp^0,c
 24249  01557E  0E00               	movlw	0
 24250  015580  6E02               	movwf	(btemp+1)^0,c
 24251  015582  0EC8               	movlw	200
 24252  015584  6E03               	movwf	(btemp+2)^0,c
 24253  015586  0E41               	movlw	65
 24254  015588  D113               	goto	L29
 24255  01558A                     l9702:
 24256                           
 24257                           ;daq.c: 116:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24258  01558A  0E00               	movlw	0
 24259  01558C  6EE6               	movwf	postinc1,c
 24260  01558E  0E00               	movlw	0
 24261  015590  6EE6               	movwf	postinc1,c
 24262  015592  0E7A               	movlw	122
 24263  015594  6EE6               	movwf	postinc1,c
 24264  015596  0E44               	movlw	68
 24265  015598  6EE6               	movwf	postinc1,c
 24266  01559A  0E61               	movlw	97
 24267  01559C  6EE6               	movwf	postinc1,c
 24268  01559E  0E03               	movlw	3
 24269  0155A0  6EE6               	movwf	postinc1,c
 24270  0155A2  0E84               	movlw	132
 24271  0155A4  6EE6               	movwf	postinc1,c
 24272  0155A6  0E40               	movlw	64
 24273  0155A8  6EE6               	movwf	postinc1,c
 24274                           
 24275                           ;stkvar	_chan @ sp[(-8)+-1]
 24276  0155AA  0EF7               	movlw	-9
 24277  0155AC  50E3               	movf	plusw1,w,c
 24278  0155AE  6EE6               	movwf	postinc1,c
 24279  0155B0  EC4A  F0DF         	call	_get_raw_result	;wreg free
 24280  0155B4  0060  F004  F00B   	movff	btemp,btemp+10
 24281  0155BA  0060  F008  F00C   	movff	btemp+1,btemp+11
 24282  0155C0  500B               	movf	(btemp+10)^0,w,c
 24283  0155C2  6E05               	movwf	(btemp+4)^0,c
 24284  0155C4  500C               	movf	(btemp+11)^0,w,c
 24285  0155C6  6E06               	movwf	(btemp+5)^0,c
 24286  0155C8  6A07               	clrf	(btemp+6)^0,c
 24287  0155CA  6A08               	clrf	(btemp+7)^0,c
 24288  0155CC  0060  F017  FFE6   	movff	btemp+4,postinc1
 24289  0155D2  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24290  0155D8  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24291  0155DE  0060  F023  FFE6   	movff	btemp+7,postinc1
 24292  0155E4  0E00               	movlw	0
 24293  0155E6  6EE6               	movwf	postinc1,c
 24294  0155E8  EC2F  F0C2         	call	___xxtofl	;wreg free
 24295  0155EC  0060  F007  FFE6   	movff	btemp,postinc1
 24296  0155F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24297  0155F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24298  0155FE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24299  015604  ECB3  F09E         	call	___flmul	;wreg free
 24300  015608  0060  F007  FFE6   	movff	btemp,postinc1
 24301  01560E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24302  015614  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24303  01561A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24304  015620  ECA6  F0A6         	call	___fldiv	;wreg free
 24305  015624  D0D7               	goto	l1781
 24306  015626                     l9706:
 24307                           
 24308                           ;daq.c: 121:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 24309                           ;stkvar	_chan @ sp[(0)+-1]
 24310  015626  0EFF               	movlw	-1
 24311  015628  006F FF8C  F00C    	movff	plusw1,btemp+11
 24312  01562E  0E03               	movlw	3
 24313  015630  6E09               	movwf	(btemp+8)^0,c
 24314  015632  0E00               	movlw	0
 24315  015634  6E0A               	movwf	(btemp+9)^0,c
 24316  015636  2A0C               	incf	(btemp+11)^0,f,c
 24317  015638  D003               	goto	u9174
 24318  01563A                     u9175:
 24319  01563A  340A               	rlcf	(btemp+9)^0,w,c
 24320  01563C  320A               	rrcf	(btemp+9)^0,f,c
 24321  01563E  3209               	rrcf	(btemp+8)^0,f,c
 24322  015640                     u9174:
 24323  015640  2E0C               	decfsz	(btemp+11)^0,f,c
 24324  015642  D7FB               	goto	u9175
 24325  015644  B009               	btfsc	(btemp+8)^0,0,c
 24326  015646  D011               	goto	u9200
 24327                           
 24328                           ;stkvar	_chan @ sp[(0)+-1]
 24329  015648  0EFF               	movlw	-1
 24330  01564A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24331  015650  0E00               	movlw	0
 24332  015652  6E09               	movwf	(btemp+8)^0,c
 24333  015654  0E08               	movlw	8
 24334  015656  6E0A               	movwf	(btemp+9)^0,c
 24335  015658  2A0C               	incf	(btemp+11)^0,f,c
 24336  01565A  D003               	goto	u9194
 24337  01565C                     u9195:
 24338  01565C  340A               	rlcf	(btemp+9)^0,w,c
 24339  01565E  320A               	rrcf	(btemp+9)^0,f,c
 24340  015660  3209               	rrcf	(btemp+8)^0,f,c
 24341  015662                     u9194:
 24342  015662  2E0C               	decfsz	(btemp+11)^0,f,c
 24343  015664  D7FB               	goto	u9195
 24344  015666  A009               	btfss	(btemp+8)^0,0,c
 24345  015668  D04E               	goto	l9714
 24346  01566A                     u9200:
 24347                           
 24348                           ;daq.c: 122:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 24349  01566A  0E00               	movlw	0
 24350  01566C  6EE6               	movwf	postinc1,c
 24351  01566E  0E00               	movlw	0
 24352  015670  6EE6               	movwf	postinc1,c
 24353  015672  0E7A               	movlw	122
 24354  015674  6EE6               	movwf	postinc1,c
 24355  015676  0E44               	movlw	68
 24356  015678  6EE6               	movwf	postinc1,c
 24357  01567A  0E00               	movlw	0
 24358  01567C  6EE6               	movwf	postinc1,c
 24359  01567E  0E00               	movlw	0
 24360  015680  6EE6               	movwf	postinc1,c
 24361  015682  0E20               	movlw	32
 24362  015684  6EE6               	movwf	postinc1,c
 24363  015686  0E3F               	movlw	63
 24364  015688  6EE6               	movwf	postinc1,c
 24365                           
 24366                           ;stkvar	_chan @ sp[(-8)+-1]
 24367  01568A  0EF7               	movlw	-9
 24368  01568C  50E3               	movf	plusw1,w,c
 24369  01568E  6EE6               	movwf	postinc1,c
 24370  015690  EC4A  F0DF         	call	_get_raw_result	;wreg free
 24371  015694  0060  F004  F00B   	movff	btemp,btemp+10
 24372  01569A  0060  F008  F00C   	movff	btemp+1,btemp+11
 24373  0156A0  500B               	movf	(btemp+10)^0,w,c
 24374  0156A2  6E05               	movwf	(btemp+4)^0,c
 24375  0156A4  500C               	movf	(btemp+11)^0,w,c
 24376  0156A6  6E06               	movwf	(btemp+5)^0,c
 24377  0156A8  6A07               	clrf	(btemp+6)^0,c
 24378  0156AA  6A08               	clrf	(btemp+7)^0,c
 24379  0156AC  0060  F017  FFE6   	movff	btemp+4,postinc1
 24380  0156B2  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24381  0156B8  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24382  0156BE  0060  F023  FFE6   	movff	btemp+7,postinc1
 24383  0156C4  0E00               	movlw	0
 24384  0156C6  6EE6               	movwf	postinc1,c
 24385  0156C8  EC2F  F0C2         	call	___xxtofl	;wreg free
 24386  0156CC  0060  F007  FFE6   	movff	btemp,postinc1
 24387  0156D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24388  0156D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24389  0156DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24390  0156E4  ECB3  F09E         	call	___flmul	;wreg free
 24391  0156E8  0060  F007  FFE6   	movff	btemp,postinc1
 24392  0156EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24393  0156F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24394  0156FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24395  015700  ECA6  F0A6         	call	___fldiv	;wreg free
 24396  015704  D067               	goto	l1781
 24397  015706                     l9714:
 24398                           
 24399                           ;daq.c: 124:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24400  015706  0E00               	movlw	0
 24401  015708  6EE6               	movwf	postinc1,c
 24402  01570A  0E00               	movlw	0
 24403  01570C  6EE6               	movwf	postinc1,c
 24404  01570E  0E7A               	movlw	122
 24405  015710  6EE6               	movwf	postinc1,c
 24406  015712  0E44               	movlw	68
 24407  015714  6EE6               	movwf	postinc1,c
 24408  015716  0E61               	movlw	97
 24409  015718  6EE6               	movwf	postinc1,c
 24410  01571A  0E03               	movlw	3
 24411  01571C  6EE6               	movwf	postinc1,c
 24412  01571E  0E84               	movlw	132
 24413  015720  6EE6               	movwf	postinc1,c
 24414  015722  0E40               	movlw	64
 24415  015724  6EE6               	movwf	postinc1,c
 24416                           
 24417                           ;stkvar	_chan @ sp[(-8)+-1]
 24418  015726  0EF7               	movlw	-9
 24419  015728  50E3               	movf	plusw1,w,c
 24420  01572A  6EE6               	movwf	postinc1,c
 24421  01572C  EC4A  F0DF         	call	_get_raw_result	;wreg free
 24422  015730  0060  F004  F00B   	movff	btemp,btemp+10
 24423  015736  0060  F008  F00C   	movff	btemp+1,btemp+11
 24424  01573C  500B               	movf	(btemp+10)^0,w,c
 24425  01573E  6E05               	movwf	(btemp+4)^0,c
 24426  015740  500C               	movf	(btemp+11)^0,w,c
 24427  015742  6E06               	movwf	(btemp+5)^0,c
 24428  015744  6A07               	clrf	(btemp+6)^0,c
 24429  015746  6A08               	clrf	(btemp+7)^0,c
 24430  015748  0060  F017  FFE6   	movff	btemp+4,postinc1
 24431  01574E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24432  015754  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24433  01575A  0060  F023  FFE6   	movff	btemp+7,postinc1
 24434  015760  0E00               	movlw	0
 24435  015762  6EE6               	movwf	postinc1,c
 24436  015764  EC2F  F0C2         	call	___xxtofl	;wreg free
 24437  015768  0060  F007  FFE6   	movff	btemp,postinc1
 24438  01576E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24439  015774  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24440  01577A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24441  015780  ECB3  F09E         	call	___flmul	;wreg free
 24442  015784  0060  F007  FFE6   	movff	btemp,postinc1
 24443  01578A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24444  015790  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24445  015796  0060  F013  FFE6   	movff	btemp+3,postinc1
 24446  01579C  ECA6  F0A6         	call	___fldiv	;wreg free
 24447  0157A0  D019               	goto	l1781
 24448  0157A2                     l9720:
 24449                           
 24450                           ;daq.c: 127:   return 0.0;
 24451  0157A2  0E00               	movlw	0
 24452  0157A4  6E01               	movwf	btemp^0,c
 24453  0157A6  0E00               	movlw	0
 24454  0157A8  6E02               	movwf	(btemp+1)^0,c
 24455  0157AA  0E00               	movlw	0
 24456  0157AC  6E03               	movwf	(btemp+2)^0,c
 24457  0157AE  0E00               	movlw	0
 24458  0157B0                     L29:
 24459  0157B0  6E04               	movwf	(btemp+3)^0,c
 24460  0157B2  D010               	goto	l1781
 24461  0157B4                     l9728:
 24462                           
 24463                           ;stkvar	_to_what @ sp[(0)+-2]
 24464  0157B4  0EFE               	movlw	-2
 24465  0157B6  50E3               	movf	plusw1,w,c
 24466  0157B8  6E0B               	movwf	(btemp+10)^0,c
 24467  0157BA  6A0C               	clrf	(btemp+11)^0,c
 24468                           
 24469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24470                           ; Switch size 1, requested type "simple"
 24471                           ; Number of cases is 1, Range of values is 0 to 0
 24472                           ; switch strategies available:
 24473                           ; Name         Instructions Cycles
 24474                           ; simple_byte            4     3 (average)
 24475                           ;	Chosen strategy is simple_byte
 24476  0157BC  500C               	movf	(btemp+11)^0,w,c
 24477  0157BE  0A00               	xorlw	0	; case 0
 24478  0157C0  A4D8               	btfss	status,2,c
 24479  0157C2  D7EF               	goto	l9720
 24480                           
 24481                           ; Switch size 1, requested type "simple"
 24482                           ; Number of cases is 2, Range of values is 0 to 1
 24483                           ; switch strategies available:
 24484                           ; Name         Instructions Cycles
 24485                           ; simple_byte            7     4 (average)
 24486                           ;	Chosen strategy is simple_byte
 24487  0157C4  500B               	movf	(btemp+10)^0,w,c
 24488  0157C6  0A00               	xorlw	0	; case 0
 24489  0157C8  B4D8               	btfsc	status,2,c
 24490  0157CA  D57E               	goto	l9674
 24491  0157CC  0A01               	xorlw	1	; case 1
 24492  0157CE  B4D8               	btfsc	status,2,c
 24493  0157D0  D72A               	goto	l9706
 24494  0157D2  D7E7               	goto	l9720
 24495  0157D4                     l1781:
 24496                           
 24497                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24498  0157D4  52E5               	movf	postdec1,f,c
 24499  0157D6  52E5               	movf	postdec1,f,c
 24500  0157D8  0012               	return		;funcret
 24501  0157DA                     __end_of_conv_raw_result:
 24502                           	opt callstack 0
 24503                           
 24504 ;; *************** function _nanf *****************
 24505 ;; Defined at:
 24506 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24507 ;; Parameters:    Size  Location     Type
 24508 ;;  s               2  [STACK] PTR const unsigned char 
 24509 ;;		 -> STR_101(1), STR_63(1), 
 24510 ;; Auto vars:     Size  Location     Type
 24511 ;;  u               4  [STACK] struct .
 24512 ;; Return value:  Size  Location     Type
 24513 ;;                  4  [STACK] float 
 24514 ;; Registers used:
 24515 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24516 ;; Tracked objects:
 24517 ;;		On entry : 0/39
 24518 ;;		On exit  : 0/0
 24519 ;;		Unchanged: 0/0
 24520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24525 ;;Total ram usage:        0 bytes
 24526 ;; Hardware stack levels used:    1
 24527 ;; Hardware stack levels required when called:   15
 24528 ;; This function calls:
 24529 ;;		Nothing
 24530 ;; This function is called by:
 24531 ;;		_conv_raw_result
 24532 ;; This function uses a reentrant model
 24533 ;;
 24534                           
 24535                           	psect	text97
 24536  01B112                     __ptext97:
 24537                           	opt callstack 0
 24538  01B112                     _nanf:
 24539                           	opt callstack 0
 24540                           
 24541                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24542  01B112  52E6               	movf	postinc1,f,c
 24543  01B114  52E6               	movf	postinc1,f,c
 24544  01B116  52E6               	movf	postinc1,f,c
 24545  01B118  52E6               	movf	postinc1,f,c
 24546                           
 24547                           ;incstack = 0
 24548 ;; hardware stack exceeded
 24549  01B11A  0EFF               	movlw	255
 24550  01B11C  6E09               	movwf	(btemp+8)^0,c
 24551  01B11E  0EFF               	movlw	255
 24552  01B120  6E0A               	movwf	(btemp+9)^0,c
 24553  01B122  0EFF               	movlw	255
 24554  01B124  6E0B               	movwf	(btemp+10)^0,c
 24555  01B126  0E7F               	movlw	127
 24556  01B128  6E0C               	movwf	(btemp+11)^0,c
 24557                           
 24558                           ;stkvar	_u @ sp[(-4)+0]
 24559  01B12A  0EFC               	movlw	-4
 24560  01B12C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24561  01B132  0EFD               	movlw	-3
 24562  01B134  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24563  01B13A  0EFE               	movlw	-2
 24564  01B13C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24565  01B142  0EFF               	movlw	-1
 24566  01B144  0060  F033  FFE3   	movff	btemp+11,plusw1
 24567                           
 24568                           ;stkvar	_u @ sp[(-4)+0]
 24569  01B14A  0EFC               	movlw	-4
 24570  01B14C  006F FF8C  F001    	movff	plusw1,btemp
 24571  01B152  0EFD               	movlw	-3
 24572  01B154  006F FF8C  F002    	movff	plusw1,btemp+1
 24573  01B15A  0EFE               	movlw	-2
 24574  01B15C  006F FF8C  F003    	movff	plusw1,btemp+2
 24575  01B162  0EFF               	movlw	-1
 24576  01B164  006F FF8C  F004    	movff	plusw1,btemp+3
 24577                           
 24578                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24579  01B16A  0EFA               	movlw	250
 24580  01B16C  26E1               	addwf	fsr1l,f,c
 24581  01B16E  0EFF               	movlw	255
 24582  01B170  22E2               	addwfc	fsr1h,f,c
 24583  01B172  0012               	return		;funcret
 24584  01B174                     __end_of_nanf:
 24585                           	opt callstack 0
 24586                           
 24587 ;; *************** function _get_raw_result *****************
 24588 ;; Defined at:
 24589 ;;		line 90 in file "daq.c"
 24590 ;; Parameters:    Size  Location     Type
 24591 ;;  index           1  [STACK] const enum E16582
 24592 ;; Auto vars:     Size  Location     Type
 24593 ;;		None
 24594 ;; Return value:  Size  Location     Type
 24595 ;;                  2  [STACK] unsigned short 
 24596 ;; Registers used:
 24597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24598 ;; Tracked objects:
 24599 ;;		On entry : 0/1
 24600 ;;		On exit  : 0/0
 24601 ;;		Unchanged: 0/0
 24602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24607 ;;Total ram usage:        0 bytes
 24608 ;; Hardware stack levels used:    1
 24609 ;; Hardware stack levels required when called:   15
 24610 ;; This function calls:
 24611 ;;		Nothing
 24612 ;; This function is called by:
 24613 ;;		_main
 24614 ;;		_conv_raw_result
 24615 ;; This function uses a reentrant model
 24616 ;;
 24617                           
 24618                           	psect	text98
 24619  01BE94                     __ptext98:
 24620                           	opt callstack 0
 24621  01BE94                     _get_raw_result:
 24622                           	opt callstack 0
 24623                           
 24624                           ;daq.c: 90: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 91: {;daq.c: 
      +                          92:  return R.raw_adc[index];
 24625                           ;stkvar	_index @ sp[(0)+-1]
 24626                           
 24627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24628                           ;incstack = 0
 24629 ;; hardware stack exceeded
 24630  01BE94  0EFF               	movlw	-1
 24631  01BE96  50E3               	movf	plusw1,w,c
 24632  01BE98  0D02               	mullw	2
 24633  01BE9A  0E00               	movlw	low _R
 24634  01BE9C  24F3               	addwf	243,w,c
 24635  01BE9E  6ED9               	movwf	fsr2l,c
 24636  01BEA0  0E01               	movlw	high _R
 24637  01BEA2  20F4               	addwfc	prodh,w,c
 24638  01BEA4  6EDA               	movwf	fsr2h,c
 24639  01BEA6  006F FF78  F001    	movff	postinc2,btemp
 24640  01BEAC  006F FF74  F002    	movff	postdec2,btemp+1
 24641                           
 24642                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24643  01BEB2  52E5               	movf	postdec1,f,c
 24644  01BEB4  0012               	return		;funcret
 24645  01BEB6                     __end_of_get_raw_result:
 24646                           	opt callstack 0
 24647                           
 24648 ;; *************** function ___xxtofl *****************
 24649 ;; Defined at:
 24650 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24651 ;; Parameters:    Size  Location     Type
 24652 ;;  sign            1  [STACK] unsigned char 
 24653 ;;  val             4  [STACK] long 
 24654 ;; Auto vars:     Size  Location     Type
 24655 ;;  arg             4  [STACK] unsigned long 
 24656 ;;  exp             1  [STACK] unsigned char 
 24657 ;; Return value:  Size  Location     Type
 24658 ;;                  4  [STACK] unsigned char 
 24659 ;; Registers used:
 24660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24661 ;; Tracked objects:
 24662 ;;		On entry : 0/1
 24663 ;;		On exit  : 0/0
 24664 ;;		Unchanged: 0/0
 24665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24670 ;;Total ram usage:        0 bytes
 24671 ;; Hardware stack levels used:    1
 24672 ;; Hardware stack levels required when called:   15
 24673 ;; This function calls:
 24674 ;;		Nothing
 24675 ;; This function is called by:
 24676 ;;		_conv_raw_result
 24677 ;;		_init_bsoc
 24678 ;;		_Volts_to_SOC
 24679 ;; This function uses a reentrant model
 24680 ;;
 24681                           
 24682                           	psect	text99
 24683  01845E                     __ptext99:
 24684                           	opt callstack 0
 24685  01845E                     ___xxtofl:
 24686                           	opt callstack 0
 24687                           
 24688                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24689  01845E  0E05               	movlw	5
 24690  018460  26E1               	addwf	fsr1l,f,c
 24691  018462  0E00               	movlw	0
 24692  018464  22E2               	addwfc	fsr1h,f,c
 24693                           
 24694                           ;stkvar	_sign @ sp[(-5)+-1]
 24695                           
 24696                           ;incstack = 0
 24697 ;; hardware stack exceeded
 24698  018466  0EFA               	movlw	-6
 24699  018468  50E3               	movf	plusw1,w,c
 24700  01846A  B4D8               	btfsc	status,2,c
 24701  01846C  D01D               	goto	l9622
 24702                           
 24703                           ;stkvar	_val @ sp[(-5)+-5]
 24704  01846E  0EF9               	movlw	-7
 24705  018470  AEE3               	btfss	plusw1,7,c
 24706  018472  D01A               	goto	l9622
 24707                           
 24708                           ;stkvar	_val @ sp[(-5)+-5]
 24709  018474  0EF6               	movlw	-10
 24710  018476  006F FF8C  F009    	movff	plusw1,btemp+8
 24711  01847C  0EF7               	movlw	-9
 24712  01847E  006F FF8C  F00A    	movff	plusw1,btemp+9
 24713  018484  0EF8               	movlw	-8
 24714  018486  006F FF8C  F00B    	movff	plusw1,btemp+10
 24715  01848C  0EF9               	movlw	-7
 24716  01848E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24717  018494  1E09               	comf	(btemp+8)^0,f,c
 24718  018496  1E0A               	comf	(btemp+9)^0,f,c
 24719  018498  1E0B               	comf	(btemp+10)^0,f,c
 24720  01849A  1E0C               	comf	(btemp+11)^0,f,c
 24721  01849C  2A09               	incf	(btemp+8)^0,f,c
 24722  01849E  0E00               	movlw	0
 24723  0184A0  220A               	addwfc	(btemp+9)^0,f,c
 24724  0184A2  220B               	addwfc	(btemp+10)^0,f,c
 24725  0184A4  220C               	addwfc	(btemp+11)^0,f,c
 24726  0184A6  D010               	goto	L30
 24727  0184A8                     l9622:
 24728                           
 24729                           ;stkvar	_val @ sp[(-5)+-5]
 24730  0184A8  0EF6               	movlw	-10
 24731  0184AA  006F FF8C  F009    	movff	plusw1,btemp+8
 24732  0184B0  0EF7               	movlw	-9
 24733  0184B2  006F FF8C  F00A    	movff	plusw1,btemp+9
 24734  0184B8  0EF8               	movlw	-8
 24735  0184BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 24736  0184C0  0EF9               	movlw	-7
 24737  0184C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 24738  0184C8                     L30:
 24739                           
 24740                           ;stkvar	_arg @ sp[(-5)+0]
 24741  0184C8  0EFB               	movlw	-5
 24742  0184CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 24743  0184D0  0EFC               	movlw	-4
 24744  0184D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24745  0184D8  0EFD               	movlw	-3
 24746  0184DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24747  0184E0  0EFE               	movlw	-2
 24748  0184E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 24749                           
 24750                           ;stkvar	_val @ sp[(-5)+-5]
 24751  0184E8  0EF6               	movlw	-10
 24752  0184EA  50E3               	movf	plusw1,w,c
 24753  0184EC  E113               	bnz	l9630
 24754  0184EE  0EF7               	movlw	-9
 24755  0184F0  50E3               	movf	plusw1,w,c
 24756  0184F2  E110               	bnz	l9630
 24757  0184F4  0EF8               	movlw	-8
 24758  0184F6  50E3               	movf	plusw1,w,c
 24759  0184F8  E10D               	bnz	l9630
 24760  0184FA  0EF9               	movlw	-7
 24761  0184FC  50E3               	movf	plusw1,w,c
 24762  0184FE  A4D8               	btfss	status,2,c
 24763  018500  D009               	goto	l9630
 24764  018502  0E00               	movlw	0
 24765  018504  6E01               	movwf	btemp^0,c
 24766  018506  0E00               	movlw	0
 24767  018508  6E02               	movwf	(btemp+1)^0,c
 24768  01850A  0E00               	movlw	0
 24769  01850C  6E03               	movwf	(btemp+2)^0,c
 24770  01850E  0E00               	movlw	0
 24771  018510  6E04               	movwf	(btemp+3)^0,c
 24772  018512  D0A2               	goto	l3053
 24773  018514                     l9630:
 24774  018514  0E96               	movlw	150
 24775  018516  6E0C               	movwf	(btemp+11)^0,c
 24776                           
 24777                           ;stkvar	_exp @ sp[(-5)+4]
 24778  018518  0EFF               	movlw	-1
 24779  01851A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24780  018520  D00B               	goto	l9634
 24781  018522                     l9632:
 24782                           
 24783                           ;stkvar	_exp @ sp[(-5)+4]
 24784  018522  0EFF               	movlw	-1
 24785  018524  2AE3               	incf	plusw1,f,c
 24786                           
 24787                           ;stkvar	_arg @ sp[(-5)+0]
 24788  018526  90D8               	bcf	status,0,c
 24789  018528  0EFE               	movlw	-2
 24790  01852A  32E3               	rrcf	plusw1,f,c
 24791  01852C  0EFD               	movlw	-3
 24792  01852E  32E3               	rrcf	plusw1,f,c
 24793  018530  0EFC               	movlw	-4
 24794  018532  32E3               	rrcf	plusw1,f,c
 24795  018534  0EFB               	movlw	-5
 24796  018536  32E3               	rrcf	plusw1,f,c
 24797  018538                     l9634:
 24798                           
 24799                           ;stkvar	_arg @ sp[(-5)+0]
 24800  018538  50E1               	movf	fsr1l,w,c
 24801  01853A  0FFB               	addlw	-5
 24802  01853C  6ED9               	movwf	fsr2l,c
 24803  01853E  50E2               	movf	fsr1h,w,c
 24804  018540  6EDA               	movwf	fsr2h,c
 24805  018542  0EFF               	movlw	255
 24806  018544  22DA               	addwfc	fsr2h,f,c
 24807  018546  52DE               	movf	postinc2,f,c
 24808  018548  52DE               	movf	postinc2,f,c
 24809  01854A  52DE               	movf	postinc2,f,c
 24810  01854C  0EFE               	movlw	254
 24811  01854E  14DD               	andwf	postdec2,w,c
 24812  018550  B4D8               	btfsc	status,2,c
 24813  018552  D018               	goto	l9642
 24814  018554  D7E6               	goto	l9632
 24815  018556                     l9636:
 24816                           
 24817                           ;stkvar	_exp @ sp[(-5)+4]
 24818  018556  0EFF               	movlw	-1
 24819  018558  2AE3               	incf	plusw1,f,c
 24820                           
 24821                           ;stkvar	_arg @ sp[(-5)+0]
 24822  01855A  50E1               	movf	fsr1l,w,c
 24823  01855C  0FFB               	addlw	-5
 24824  01855E  6ED9               	movwf	fsr2l,c
 24825  018560  50E2               	movf	fsr1h,w,c
 24826  018562  6EDA               	movwf	fsr2h,c
 24827  018564  0EFF               	movlw	255
 24828  018566  22DA               	addwfc	fsr2h,f,c
 24829  018568  2ADE               	incf	postinc2,f,c
 24830  01856A  0E00               	movlw	0
 24831  01856C  22DE               	addwfc	postinc2,f,c
 24832  01856E  22DE               	addwfc	postinc2,f,c
 24833  018570  22DE               	addwfc	postinc2,f,c
 24834                           
 24835                           ;stkvar	_arg @ sp[(-5)+0]
 24836  018572  90D8               	bcf	status,0,c
 24837  018574  0EFE               	movlw	-2
 24838  018576  32E3               	rrcf	plusw1,f,c
 24839  018578  0EFD               	movlw	-3
 24840  01857A  32E3               	rrcf	plusw1,f,c
 24841  01857C  0EFC               	movlw	-4
 24842  01857E  32E3               	rrcf	plusw1,f,c
 24843  018580  0EFB               	movlw	-5
 24844  018582  32E3               	rrcf	plusw1,f,c
 24845  018584                     l9642:
 24846                           
 24847                           ;stkvar	_arg @ sp[(-5)+0]
 24848  018584  50E1               	movf	fsr1l,w,c
 24849  018586  0FFB               	addlw	-5
 24850  018588  6ED9               	movwf	fsr2l,c
 24851  01858A  50E2               	movf	fsr1h,w,c
 24852  01858C  6EDA               	movwf	fsr2h,c
 24853  01858E  0EFF               	movlw	255
 24854  018590  22DA               	addwfc	fsr2h,f,c
 24855  018592  52DE               	movf	postinc2,f,c
 24856  018594  52DE               	movf	postinc2,f,c
 24857  018596  52DE               	movf	postinc2,f,c
 24858  018598  0EFF               	movlw	255
 24859  01859A  14DD               	andwf	postdec2,w,c
 24860  01859C  B4D8               	btfsc	status,2,c
 24861  01859E  D00C               	goto	l9646
 24862  0185A0  D7DA               	goto	l9636
 24863  0185A2                     l9644:
 24864                           
 24865                           ;stkvar	_exp @ sp[(-5)+4]
 24866  0185A2  0EFF               	movlw	-1
 24867  0185A4  06E3               	decf	plusw1,f,c
 24868                           
 24869                           ;stkvar	_arg @ sp[(-5)+0]
 24870  0185A6  90D8               	bcf	status,0,c
 24871  0185A8  0EFB               	movlw	-5
 24872  0185AA  36E3               	rlcf	plusw1,f,c
 24873  0185AC  0EFC               	movlw	-4
 24874  0185AE  36E3               	rlcf	plusw1,f,c
 24875  0185B0  0EFD               	movlw	-3
 24876  0185B2  36E3               	rlcf	plusw1,f,c
 24877  0185B4  0EFE               	movlw	-2
 24878  0185B6  36E3               	rlcf	plusw1,f,c
 24879  0185B8                     l9646:
 24880                           
 24881                           ;stkvar	_arg @ sp[(-5)+0]
 24882  0185B8  0EFD               	movlw	-3
 24883  0185BA  BEE3               	btfsc	plusw1,7,c
 24884  0185BC  D007               	goto	u9050
 24885                           
 24886                           ;stkvar	_exp @ sp[(-5)+4]
 24887  0185BE  0EFF               	movlw	-1
 24888  0185C0  006F FF8C  F001    	movff	plusw1,btemp
 24889  0185C6  0E02               	movlw	2
 24890  0185C8  6001               	cpfslt	btemp^0,c
 24891  0185CA  D7EB               	goto	l9644
 24892  0185CC                     u9050:
 24893                           
 24894                           ;stkvar	_exp @ sp[(-5)+4]
 24895  0185CC  0EFF               	movlw	-1
 24896  0185CE  B0E3               	btfsc	plusw1,0,c
 24897  0185D0  D002               	goto	l9654
 24898                           
 24899                           ;stkvar	_arg @ sp[(-5)+0]
 24900  0185D2  0EFD               	movlw	-3
 24901  0185D4  9EE3               	bcf	plusw1,7,c
 24902  0185D6                     l9654:
 24903                           
 24904                           ;stkvar	_exp @ sp[(-5)+4]
 24905  0185D6  50E1               	movf	fsr1l,w,c
 24906  0185D8  0FFF               	addlw	-1
 24907  0185DA  6ED9               	movwf	fsr2l,c
 24908  0185DC  50E2               	movf	fsr1h,w,c
 24909  0185DE  6EDA               	movwf	fsr2h,c
 24910  0185E0  0EFF               	movlw	255
 24911  0185E2  22DA               	addwfc	fsr2h,f,c
 24912  0185E4  90D8               	bcf	status,0,c
 24913  0185E6  32DF               	rrcf	indf2,f,c
 24914                           
 24915                           ;stkvar	_exp @ sp[(-5)+4]
 24916  0185E8  0EFF               	movlw	-1
 24917  0185EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24918  0185F0  0060  F030  F005   	movff	btemp+11,btemp+4
 24919  0185F6  6A06               	clrf	(btemp+5)^0,c
 24920  0185F8  6A07               	clrf	(btemp+6)^0,c
 24921  0185FA  6A08               	clrf	(btemp+7)^0,c
 24922  0185FC  0060  F014  F008   	movff	btemp+4,btemp+7
 24923  018602  6A07               	clrf	(btemp+6)^0,c
 24924  018604  6A06               	clrf	(btemp+5)^0,c
 24925  018606  6A05               	clrf	(btemp+4)^0,c
 24926                           
 24927                           ;stkvar	_arg @ sp[(-5)+0]
 24928  018608  50E1               	movf	fsr1l,w,c
 24929  01860A  0FFB               	addlw	-5
 24930  01860C  6ED9               	movwf	fsr2l,c
 24931  01860E  50E2               	movf	fsr1h,w,c
 24932  018610  6EDA               	movwf	fsr2h,c
 24933  018612  0EFF               	movlw	255
 24934  018614  22DA               	addwfc	fsr2h,f,c
 24935  018616  5005               	movf	(btemp+4)^0,w,c
 24936  018618  12DE               	iorwf	postinc2,f,c
 24937  01861A  5006               	movf	(btemp+5)^0,w,c
 24938  01861C  12DE               	iorwf	postinc2,f,c
 24939  01861E  5007               	movf	(btemp+6)^0,w,c
 24940  018620  12DE               	iorwf	postinc2,f,c
 24941  018622  5008               	movf	(btemp+7)^0,w,c
 24942  018624  12DE               	iorwf	postinc2,f,c
 24943                           
 24944                           ;stkvar	_sign @ sp[(-5)+-1]
 24945  018626  0EFA               	movlw	-6
 24946  018628  50E3               	movf	plusw1,w,c
 24947  01862A  B4D8               	btfsc	status,2,c
 24948  01862C  D005               	goto	l9664
 24949                           
 24950                           ;stkvar	_val @ sp[(-5)+-5]
 24951  01862E  0EF9               	movlw	-7
 24952  018630  AEE3               	btfss	plusw1,7,c
 24953  018632  D002               	goto	l9664
 24954                           
 24955                           ;stkvar	_arg @ sp[(-5)+0]
 24956  018634  0EFE               	movlw	-2
 24957  018636  8EE3               	bsf	plusw1,7,c
 24958  018638                     l9664:
 24959                           
 24960                           ;stkvar	_arg @ sp[(-5)+0]
 24961  018638  0EFB               	movlw	-5
 24962  01863A  006F FF8C  F001    	movff	plusw1,btemp
 24963  018640  0EFC               	movlw	-4
 24964  018642  006F FF8C  F002    	movff	plusw1,btemp+1
 24965  018648  0EFD               	movlw	-3
 24966  01864A  006F FF8C  F003    	movff	plusw1,btemp+2
 24967  018650  0EFE               	movlw	-2
 24968  018652  006F FF8C  F004    	movff	plusw1,btemp+3
 24969  018658                     l3053:
 24970                           
 24971                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24972  018658  0EF6               	movlw	246
 24973  01865A  26E1               	addwf	fsr1l,f,c
 24974  01865C  0EFF               	movlw	255
 24975  01865E  22E2               	addwfc	fsr1h,f,c
 24976  018660  0012               	return		;funcret
 24977  018662                     __end_of___xxtofl:
 24978                           	opt callstack 0
 24979                           
 24980 ;; *************** function ___fldiv *****************
 24981 ;; Defined at:
 24982 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24983 ;; Parameters:    Size  Location     Type
 24984 ;;  b               4  [STACK] unsigned char 
 24985 ;;  a               4  [STACK] unsigned char 
 24986 ;; Auto vars:     Size  Location     Type
 24987 ;;  grs             4  [STACK] unsigned long 
 24988 ;;  rem             4  [STACK] unsigned long 
 24989 ;;  new_exp         2  [STACK] short 
 24990 ;;  aexp            1  [STACK] unsigned char 
 24991 ;;  bexp            1  [STACK] unsigned char 
 24992 ;;  sign            1  [STACK] unsigned char 
 24993 ;; Return value:  Size  Location     Type
 24994 ;;                  4  [STACK] unsigned char 
 24995 ;; Registers used:
 24996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24997 ;; Tracked objects:
 24998 ;;		On entry : 0/1
 24999 ;;		On exit  : 0/0
 25000 ;;		Unchanged: 0/0
 25001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25006 ;;Total ram usage:        0 bytes
 25007 ;; Hardware stack levels used:    1
 25008 ;; Hardware stack levels required when called:   15
 25009 ;; This function calls:
 25010 ;;		Nothing
 25011 ;; This function is called by:
 25012 ;;		_conv_raw_result
 25013 ;;		_calc_bsoc
 25014 ;;		_init_bsoc
 25015 ;;		_esr_check
 25016 ;;		_efgtoa
 25017 ;; This function uses a reentrant model
 25018 ;;
 25019                           
 25020                           	psect	text100
 25021  014D4C                     __ptext100:
 25022                           	opt callstack 0
 25023  014D4C                     ___fldiv:
 25024                           	opt callstack 0
 25025                           
 25026                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25027  014D4C  0E0D               	movlw	13
 25028  014D4E  26E1               	addwf	fsr1l,f,c
 25029  014D50  0E00               	movlw	0
 25030  014D52  22E2               	addwfc	fsr1h,f,c
 25031                           
 25032                           ;stkvar	_b @ sp[(-13)+-4]
 25033                           
 25034                           ;incstack = 0
 25035 ;; hardware stack exceeded
 25036  014D54  0EF2               	movlw	242
 25037  014D56  24E1               	addwf	fsr1l,w,c
 25038  014D58  6ED9               	movwf	fsr2l,c
 25039  014D5A  0EFF               	movlw	255
 25040  014D5C  20E2               	addwfc	fsr1h,w,c
 25041  014D5E  6EDA               	movwf	fsr2h,c
 25042  014D60  50DF               	movf	indf2,w,c
 25043  014D62  6E0C               	movwf	(btemp+11)^0,c
 25044  014D64  0E80               	movlw	128
 25045  014D66  160C               	andwf	(btemp+11)^0,f,c
 25046                           
 25047                           ;stkvar	_sign @ sp[(-13)+12]
 25048  014D68  0EFF               	movlw	-1
 25049  014D6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25050                           
 25051                           ;stkvar	_b @ sp[(-13)+-4]
 25052  014D70  0EF2               	movlw	242
 25053  014D72  24E1               	addwf	fsr1l,w,c
 25054  014D74  6ED9               	movwf	fsr2l,c
 25055  014D76  0EFF               	movlw	255
 25056  014D78  20E2               	addwfc	fsr1h,w,c
 25057  014D7A  6EDA               	movwf	fsr2h,c
 25058  014D7C  50DF               	movf	indf2,w,c
 25059  014D7E  6E0C               	movwf	(btemp+11)^0,c
 25060  014D80  90D8               	bcf	status,0,c
 25061  014D82  340C               	rlcf	(btemp+11)^0,w,c
 25062  014D84  6E0B               	movwf	(btemp+10)^0,c
 25063                           
 25064                           ;stkvar	_bexp @ sp[(-13)+11]
 25065  014D86  0EFE               	movlw	-2
 25066  014D88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25067                           
 25068                           ;stkvar	_b @ sp[(-13)+-4]
 25069  014D8E  0EF1               	movlw	241
 25070  014D90  24E1               	addwf	fsr1l,w,c
 25071  014D92  6ED9               	movwf	fsr2l,c
 25072  014D94  0EFF               	movlw	255
 25073  014D96  20E2               	addwfc	fsr1h,w,c
 25074  014D98  6EDA               	movwf	fsr2h,c
 25075  014D9A  AEDF               	btfss	indf2,7,c
 25076  014D9C  D002               	goto	l8194
 25077                           
 25078                           ;stkvar	_bexp @ sp[(-13)+11]
 25079  014D9E  0EFE               	movlw	-2
 25080  014DA0  80E3               	bsf	plusw1,0,c
 25081  014DA2                     l8194:
 25082                           
 25083                           ;stkvar	_bexp @ sp[(-13)+11]
 25084  014DA2  0EFE               	movlw	-2
 25085  014DA4  50E3               	movf	plusw1,w,c
 25086  014DA6  B4D8               	btfsc	status,2,c
 25087  014DA8  D027               	goto	l8204
 25088                           
 25089                           ;stkvar	_bexp @ sp[(-13)+11]
 25090  014DAA  0EFE               	movlw	-2
 25091  014DAC  28E3               	incf	plusw1,w,c
 25092  014DAE  A4D8               	btfss	status,2,c
 25093  014DB0  D018               	goto	l8200
 25094  014DB2  0E00               	movlw	0
 25095  014DB4  6E09               	movwf	(btemp+8)^0,c
 25096  014DB6  0E00               	movlw	0
 25097  014DB8  6E0A               	movwf	(btemp+9)^0,c
 25098  014DBA  0E00               	movlw	0
 25099  014DBC  6E0B               	movwf	(btemp+10)^0,c
 25100  014DBE  0E00               	movlw	0
 25101  014DC0  6E0C               	movwf	(btemp+11)^0,c
 25102                           
 25103                           ;stkvar	_b @ sp[(-13)+-4]
 25104  014DC2  0EEF               	movlw	-17
 25105  014DC4  0060  F027  FFE3   	movff	btemp+8,plusw1
 25106  014DCA  0EF0               	movlw	-16
 25107  014DCC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25108  014DD2  0EF1               	movlw	-15
 25109  014DD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25110  014DDA  0EF2               	movlw	-14
 25111  014DDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25112  014DE2                     l8200:
 25113                           
 25114                           ;stkvar	_b @ sp[(-13)+-4]
 25115  014DE2  0EF1               	movlw	-15
 25116  014DE4  8EE3               	bsf	plusw1,7,c
 25117                           
 25118                           ;stkvar	_b @ sp[(-13)+-4]
 25119  014DE6  0EF2               	movlw	242
 25120  014DE8  24E1               	addwf	fsr1l,w,c
 25121  014DEA  6ED9               	movwf	fsr2l,c
 25122  014DEC  0EFF               	movlw	255
 25123  014DEE  20E2               	addwfc	fsr1h,w,c
 25124  014DF0  6EDA               	movwf	fsr2h,c
 25125  014DF2  0E00               	movlw	0
 25126  014DF4  6EDF               	movwf	indf2,c
 25127  014DF6  D018               	goto	l8206
 25128  014DF8                     l8204:
 25129  014DF8  0E00               	movlw	0
 25130  014DFA  6E09               	movwf	(btemp+8)^0,c
 25131  014DFC  0E00               	movlw	0
 25132  014DFE  6E0A               	movwf	(btemp+9)^0,c
 25133  014E00  0E00               	movlw	0
 25134  014E02  6E0B               	movwf	(btemp+10)^0,c
 25135  014E04  0E00               	movlw	0
 25136  014E06  6E0C               	movwf	(btemp+11)^0,c
 25137                           
 25138                           ;stkvar	_b @ sp[(-13)+-4]
 25139  014E08  0EEF               	movlw	-17
 25140  014E0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 25141  014E10  0EF0               	movlw	-16
 25142  014E12  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25143  014E18  0EF1               	movlw	-15
 25144  014E1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25145  014E20  0EF2               	movlw	-14
 25146  014E22  0060  F033  FFE3   	movff	btemp+11,plusw1
 25147  014E28                     l8206:
 25148                           
 25149                           ;stkvar	_a @ sp[(-13)+-8]
 25150  014E28  0EEE               	movlw	238
 25151  014E2A  24E1               	addwf	fsr1l,w,c
 25152  014E2C  6ED9               	movwf	fsr2l,c
 25153  014E2E  0EFF               	movlw	255
 25154  014E30  20E2               	addwfc	fsr1h,w,c
 25155  014E32  6EDA               	movwf	fsr2h,c
 25156  014E34  50DF               	movf	indf2,w,c
 25157  014E36  6E0C               	movwf	(btemp+11)^0,c
 25158  014E38  0E80               	movlw	128
 25159  014E3A  160C               	andwf	(btemp+11)^0,f,c
 25160                           
 25161                           ;stkvar	_sign @ sp[(-13)+12]
 25162  014E3C  50E1               	movf	fsr1l,w,c
 25163  014E3E  0FFF               	addlw	-1
 25164  014E40  6ED9               	movwf	fsr2l,c
 25165  014E42  50E2               	movf	fsr1h,w,c
 25166  014E44  6EDA               	movwf	fsr2h,c
 25167  014E46  0EFF               	movlw	255
 25168  014E48  22DA               	addwfc	fsr2h,f,c
 25169  014E4A  500C               	movf	(btemp+11)^0,w,c
 25170  014E4C  1ADF               	xorwf	indf2,f,c
 25171                           
 25172                           ;stkvar	_a @ sp[(-13)+-8]
 25173  014E4E  0EEE               	movlw	238
 25174  014E50  24E1               	addwf	fsr1l,w,c
 25175  014E52  6ED9               	movwf	fsr2l,c
 25176  014E54  0EFF               	movlw	255
 25177  014E56  20E2               	addwfc	fsr1h,w,c
 25178  014E58  6EDA               	movwf	fsr2h,c
 25179  014E5A  50DF               	movf	indf2,w,c
 25180  014E5C  6E0C               	movwf	(btemp+11)^0,c
 25181  014E5E  90D8               	bcf	status,0,c
 25182  014E60  340C               	rlcf	(btemp+11)^0,w,c
 25183  014E62  6E0B               	movwf	(btemp+10)^0,c
 25184                           
 25185                           ;stkvar	_aexp @ sp[(-13)+10]
 25186  014E64  0EFD               	movlw	-3
 25187  014E66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25188                           
 25189                           ;stkvar	_a @ sp[(-13)+-8]
 25190  014E6C  0EED               	movlw	237
 25191  014E6E  24E1               	addwf	fsr1l,w,c
 25192  014E70  6ED9               	movwf	fsr2l,c
 25193  014E72  0EFF               	movlw	255
 25194  014E74  20E2               	addwfc	fsr1h,w,c
 25195  014E76  6EDA               	movwf	fsr2h,c
 25196  014E78  AEDF               	btfss	indf2,7,c
 25197  014E7A  D002               	goto	l8214
 25198                           
 25199                           ;stkvar	_aexp @ sp[(-13)+10]
 25200  014E7C  0EFD               	movlw	-3
 25201  014E7E  80E3               	bsf	plusw1,0,c
 25202  014E80                     l8214:
 25203                           
 25204                           ;stkvar	_aexp @ sp[(-13)+10]
 25205  014E80  0EFD               	movlw	-3
 25206  014E82  50E3               	movf	plusw1,w,c
 25207  014E84  B4D8               	btfsc	status,2,c
 25208  014E86  D027               	goto	l8224
 25209                           
 25210                           ;stkvar	_aexp @ sp[(-13)+10]
 25211  014E88  0EFD               	movlw	-3
 25212  014E8A  28E3               	incf	plusw1,w,c
 25213  014E8C  A4D8               	btfss	status,2,c
 25214  014E8E  D018               	goto	l8220
 25215  014E90  0E00               	movlw	0
 25216  014E92  6E09               	movwf	(btemp+8)^0,c
 25217  014E94  0E00               	movlw	0
 25218  014E96  6E0A               	movwf	(btemp+9)^0,c
 25219  014E98  0E00               	movlw	0
 25220  014E9A  6E0B               	movwf	(btemp+10)^0,c
 25221  014E9C  0E00               	movlw	0
 25222  014E9E  6E0C               	movwf	(btemp+11)^0,c
 25223                           
 25224                           ;stkvar	_a @ sp[(-13)+-8]
 25225  014EA0  0EEB               	movlw	-21
 25226  014EA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25227  014EA8  0EEC               	movlw	-20
 25228  014EAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25229  014EB0  0EED               	movlw	-19
 25230  014EB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25231  014EB8  0EEE               	movlw	-18
 25232  014EBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25233  014EC0                     l8220:
 25234                           
 25235                           ;stkvar	_a @ sp[(-13)+-8]
 25236  014EC0  0EED               	movlw	-19
 25237  014EC2  8EE3               	bsf	plusw1,7,c
 25238                           
 25239                           ;stkvar	_a @ sp[(-13)+-8]
 25240  014EC4  0EEE               	movlw	238
 25241  014EC6  24E1               	addwf	fsr1l,w,c
 25242  014EC8  6ED9               	movwf	fsr2l,c
 25243  014ECA  0EFF               	movlw	255
 25244  014ECC  20E2               	addwfc	fsr1h,w,c
 25245  014ECE  6EDA               	movwf	fsr2h,c
 25246  014ED0  0E00               	movlw	0
 25247  014ED2  6EDF               	movwf	indf2,c
 25248  014ED4  D018               	goto	l8226
 25249  014ED6                     l8224:
 25250  014ED6  0E00               	movlw	0
 25251  014ED8  6E09               	movwf	(btemp+8)^0,c
 25252  014EDA  0E00               	movlw	0
 25253  014EDC  6E0A               	movwf	(btemp+9)^0,c
 25254  014EDE  0E00               	movlw	0
 25255  014EE0  6E0B               	movwf	(btemp+10)^0,c
 25256  014EE2  0E00               	movlw	0
 25257  014EE4  6E0C               	movwf	(btemp+11)^0,c
 25258                           
 25259                           ;stkvar	_a @ sp[(-13)+-8]
 25260  014EE6  0EEB               	movlw	-21
 25261  014EE8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25262  014EEE  0EEC               	movlw	-20
 25263  014EF0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25264  014EF6  0EED               	movlw	-19
 25265  014EF8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25266  014EFE  0EEE               	movlw	-18
 25267  014F00  0060  F033  FFE3   	movff	btemp+11,plusw1
 25268  014F06                     l8226:
 25269                           
 25270                           ;stkvar	_a @ sp[(-13)+-8]
 25271  014F06  0EEB               	movlw	-21
 25272  014F08  50E3               	movf	plusw1,w,c
 25273  014F0A  E139               	bnz	l8238
 25274  014F0C  0EEC               	movlw	-20
 25275  014F0E  50E3               	movf	plusw1,w,c
 25276  014F10  E136               	bnz	l8238
 25277  014F12  0EED               	movlw	-19
 25278  014F14  50E3               	movf	plusw1,w,c
 25279  014F16  E133               	bnz	l8238
 25280  014F18  0EEE               	movlw	-18
 25281  014F1A  50E3               	movf	plusw1,w,c
 25282  014F1C  A4D8               	btfss	status,2,c
 25283  014F1E  D02F               	goto	l8238
 25284                           
 25285                           ;stkvar	_b @ sp[(-13)+-4]
 25286  014F20  0EEF               	movlw	-17
 25287  014F22  6AE3               	clrf	plusw1,c
 25288  014F24  0EF0               	movlw	-16
 25289  014F26  6AE3               	clrf	plusw1,c
 25290  014F28  0EF1               	movlw	-15
 25291  014F2A  6AE3               	clrf	plusw1,c
 25292  014F2C  0EF2               	movlw	-14
 25293  014F2E  6AE3               	clrf	plusw1,c
 25294                           
 25295                           ;stkvar	_b @ sp[(-13)+-4]
 25296  014F30  0EF1               	movlw	241
 25297  014F32  24E1               	addwf	fsr1l,w,c
 25298  014F34  6ED9               	movwf	fsr2l,c
 25299  014F36  0EFF               	movlw	255
 25300  014F38  20E2               	addwfc	fsr1h,w,c
 25301  014F3A  6EDA               	movwf	fsr2h,c
 25302  014F3C  0E80               	movlw	128
 25303  014F3E  12DE               	iorwf	postinc2,f,c
 25304  014F40  0E7F               	movlw	127
 25305  014F42  12DD               	iorwf	postdec2,f,c
 25306  014F44                     l8232:
 25307                           
 25308                           ;stkvar	_sign @ sp[(-13)+12]
 25309  014F44  0EFF               	movlw	-1
 25310  014F46  006F FF8C  F00C    	movff	plusw1,btemp+11
 25311                           
 25312                           ;stkvar	_b @ sp[(-13)+-4]
 25313  014F4C  0EF2               	movlw	242
 25314  014F4E  24E1               	addwf	fsr1l,w,c
 25315  014F50  6ED9               	movwf	fsr2l,c
 25316  014F52  0EFF               	movlw	255
 25317  014F54  20E2               	addwfc	fsr1h,w,c
 25318  014F56  6EDA               	movwf	fsr2h,c
 25319  014F58  500C               	movf	(btemp+11)^0,w,c
 25320  014F5A  12DF               	iorwf	indf2,f,c
 25321                           
 25322                           ;stkvar	_b @ sp[(-13)+-4]
 25323  014F5C  0EEF               	movlw	-17
 25324  014F5E  006F FF8C  F001    	movff	plusw1,btemp
 25325  014F64  0EF0               	movlw	-16
 25326  014F66  006F FF8C  F002    	movff	plusw1,btemp+1
 25327  014F6C  0EF1               	movlw	-15
 25328  014F6E  006F FF8C  F003    	movff	plusw1,btemp+2
 25329  014F74  0EF2               	movlw	-14
 25330  014F76  006F FF8C  F004    	movff	plusw1,btemp+3
 25331  014F7C  D19F               	goto	l2977
 25332  014F7E                     l8238:
 25333                           
 25334                           ;stkvar	_bexp @ sp[(-13)+11]
 25335  014F7E  0EFE               	movlw	-2
 25336  014F80  50E3               	movf	plusw1,w,c
 25337  014F82  A4D8               	btfss	status,2,c
 25338  014F84  D009               	goto	l8246
 25339  014F86  0E00               	movlw	0
 25340  014F88  6E01               	movwf	btemp^0,c
 25341  014F8A  0E00               	movlw	0
 25342  014F8C  6E02               	movwf	(btemp+1)^0,c
 25343  014F8E  0E00               	movlw	0
 25344  014F90  6E03               	movwf	(btemp+2)^0,c
 25345  014F92  0E00               	movlw	0
 25346  014F94  6E04               	movwf	(btemp+3)^0,c
 25347  014F96  D192               	goto	l2977
 25348  014F98                     l8246:
 25349                           
 25350                           ;stkvar	_bexp @ sp[(-13)+11]
 25351  014F98  0EFE               	movlw	-2
 25352  014F9A  50E3               	movf	plusw1,w,c
 25353  014F9C  6E0B               	movwf	(btemp+10)^0,c
 25354  014F9E  6A0C               	clrf	(btemp+11)^0,c
 25355                           
 25356                           ;stkvar	_aexp @ sp[(-13)+10]
 25357  014FA0  0EFD               	movlw	-3
 25358  014FA2  50E3               	movf	plusw1,w,c
 25359  014FA4  5E0B               	subwf	(btemp+10)^0,f,c
 25360  014FA6  0E00               	movlw	0
 25361  014FA8  5A0C               	subwfb	(btemp+11)^0,f,c
 25362  014FAA  0E7F               	movlw	127
 25363  014FAC  260B               	addwf	(btemp+10)^0,f,c
 25364  014FAE  0E00               	movlw	0
 25365  014FB0  220C               	addwfc	(btemp+11)^0,f,c
 25366                           
 25367                           ;stkvar	_new_exp @ sp[(-13)+8]
 25368  014FB2  0EFB               	movlw	-5
 25369  014FB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25370  014FBA  0EFC               	movlw	-4
 25371  014FBC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25372                           
 25373                           ;stkvar	_b @ sp[(-13)+-4]
 25374  014FC2  0EEF               	movlw	-17
 25375  014FC4  006F FF8C  F009    	movff	plusw1,btemp+8
 25376  014FCA  0EF0               	movlw	-16
 25377  014FCC  006F FF8C  F00A    	movff	plusw1,btemp+9
 25378  014FD2  0EF1               	movlw	-15
 25379  014FD4  006F FF8C  F00B    	movff	plusw1,btemp+10
 25380  014FDA  0EF2               	movlw	-14
 25381  014FDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25382                           
 25383                           ;stkvar	_rem @ sp[(-13)+4]
 25384  014FE2  0EF7               	movlw	-9
 25385  014FE4  0060  F027  FFE3   	movff	btemp+8,plusw1
 25386  014FEA  0EF8               	movlw	-8
 25387  014FEC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25388  014FF2  0EF9               	movlw	-7
 25389  014FF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25390  014FFA  0EFA               	movlw	-6
 25391  014FFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25392                           
 25393                           ;stkvar	_b @ sp[(-13)+-4]
 25394  015002  0EEF               	movlw	-17
 25395  015004  6AE3               	clrf	plusw1,c
 25396  015006  0EF0               	movlw	-16
 25397  015008  6AE3               	clrf	plusw1,c
 25398  01500A  0EF1               	movlw	-15
 25399  01500C  6AE3               	clrf	plusw1,c
 25400  01500E  0EF2               	movlw	-14
 25401  015010  6AE3               	clrf	plusw1,c
 25402                           
 25403                           ;stkvar	_grs @ sp[(-13)+0]
 25404  015012  0EF3               	movlw	-13
 25405  015014  6AE3               	clrf	plusw1,c
 25406  015016  0EF4               	movlw	-12
 25407  015018  6AE3               	clrf	plusw1,c
 25408  01501A  0EF5               	movlw	-11
 25409  01501C  6AE3               	clrf	plusw1,c
 25410  01501E  0EF6               	movlw	-10
 25411  015020  6AE3               	clrf	plusw1,c
 25412                           
 25413                           ;stkvar	_aexp @ sp[(-13)+10]
 25414  015022  0EFD               	movlw	-3
 25415  015024  6AE3               	clrf	plusw1,c
 25416  015026  D050               	goto	l8274
 25417  015028                     l8256:
 25418                           
 25419                           ;stkvar	_aexp @ sp[(-13)+10]
 25420  015028  0EFD               	movlw	-3
 25421  01502A  50E3               	movf	plusw1,w,c
 25422  01502C  B4D8               	btfsc	status,2,c
 25423  01502E  D020               	goto	l8266
 25424                           
 25425                           ;stkvar	_rem @ sp[(-13)+4]
 25426  015030  90D8               	bcf	status,0,c
 25427  015032  0EF7               	movlw	-9
 25428  015034  36E3               	rlcf	plusw1,f,c
 25429  015036  0EF8               	movlw	-8
 25430  015038  36E3               	rlcf	plusw1,f,c
 25431  01503A  0EF9               	movlw	-7
 25432  01503C  36E3               	rlcf	plusw1,f,c
 25433  01503E  0EFA               	movlw	-6
 25434  015040  36E3               	rlcf	plusw1,f,c
 25435                           
 25436                           ;stkvar	_b @ sp[(-13)+-4]
 25437  015042  90D8               	bcf	status,0,c
 25438  015044  0EEF               	movlw	-17
 25439  015046  36E3               	rlcf	plusw1,f,c
 25440  015048  0EF0               	movlw	-16
 25441  01504A  36E3               	rlcf	plusw1,f,c
 25442  01504C  0EF1               	movlw	-15
 25443  01504E  36E3               	rlcf	plusw1,f,c
 25444  015050  0EF2               	movlw	-14
 25445  015052  36E3               	rlcf	plusw1,f,c
 25446                           
 25447                           ;stkvar	_grs @ sp[(-13)+0]
 25448  015054  0EF6               	movlw	-10
 25449  015056  AEE3               	btfss	plusw1,7,c
 25450  015058  D002               	goto	l8264
 25451                           
 25452                           ;stkvar	_b @ sp[(-13)+-4]
 25453  01505A  0EEF               	movlw	-17
 25454  01505C  80E3               	bsf	plusw1,0,c
 25455  01505E                     l8264:
 25456                           
 25457                           ;stkvar	_grs @ sp[(-13)+0]
 25458  01505E  90D8               	bcf	status,0,c
 25459  015060  0EF3               	movlw	-13
 25460  015062  36E3               	rlcf	plusw1,f,c
 25461  015064  0EF4               	movlw	-12
 25462  015066  36E3               	rlcf	plusw1,f,c
 25463  015068  0EF5               	movlw	-11
 25464  01506A  36E3               	rlcf	plusw1,f,c
 25465  01506C  0EF6               	movlw	-10
 25466  01506E  36E3               	rlcf	plusw1,f,c
 25467  015070                     l8266:
 25468                           
 25469                           ;stkvar	_a @ sp[(-13)+-8]
 25470                           ;stkvar	_rem @ sp[(-13)+4]
 25471  015070  50E1               	movf	fsr1l,w,c
 25472  015072  0FF7               	addlw	-9
 25473  015074  6ED9               	movwf	fsr2l,c
 25474  015076  50E2               	movf	fsr1h,w,c
 25475  015078  6EDA               	movwf	fsr2h,c
 25476  01507A  0EFF               	movlw	255
 25477  01507C  22DA               	addwfc	fsr2h,f,c
 25478  01507E  0EEB               	movlw	-21
 25479  015080  50E3               	movf	plusw1,w,c
 25480  015082  5CDE               	subwf	postinc2,w,c
 25481  015084  0EEC               	movlw	-20
 25482  015086  50E3               	movf	plusw1,w,c
 25483  015088  58DE               	subwfb	postinc2,w,c
 25484  01508A  0EED               	movlw	-19
 25485  01508C  50E3               	movf	plusw1,w,c
 25486  01508E  58DE               	subwfb	postinc2,w,c
 25487  015090  0EEE               	movlw	-18
 25488  015092  50E3               	movf	plusw1,w,c
 25489  015094  58DE               	subwfb	postinc2,w,c
 25490  015096  A0D8               	btfss	status,0,c
 25491  015098  D015               	goto	l8272
 25492                           
 25493                           ;stkvar	_grs @ sp[(-13)+0]
 25494  01509A  0EF6               	movlw	-10
 25495  01509C  8CE3               	bsf	plusw1,6,c
 25496                           
 25497                           ;stkvar	_a @ sp[(-13)+-8]
 25498                           ;stkvar	_rem @ sp[(-13)+4]
 25499  01509E  50E1               	movf	fsr1l,w,c
 25500  0150A0  0FF7               	addlw	-9
 25501  0150A2  6ED9               	movwf	fsr2l,c
 25502  0150A4  50E2               	movf	fsr1h,w,c
 25503  0150A6  6EDA               	movwf	fsr2h,c
 25504  0150A8  0EFF               	movlw	255
 25505  0150AA  22DA               	addwfc	fsr2h,f,c
 25506  0150AC  0EEB               	movlw	-21
 25507  0150AE  50E3               	movf	plusw1,w,c
 25508  0150B0  5EDE               	subwf	postinc2,f,c
 25509  0150B2  0EEC               	movlw	-20
 25510  0150B4  50E3               	movf	plusw1,w,c
 25511  0150B6  5ADE               	subwfb	postinc2,f,c
 25512  0150B8  0EED               	movlw	-19
 25513  0150BA  50E3               	movf	plusw1,w,c
 25514  0150BC  5ADE               	subwfb	postinc2,f,c
 25515  0150BE  0EEE               	movlw	-18
 25516  0150C0  50E3               	movf	plusw1,w,c
 25517  0150C2  5ADE               	subwfb	postinc2,f,c
 25518  0150C4                     l8272:
 25519                           
 25520                           ;stkvar	_aexp @ sp[(-13)+10]
 25521  0150C4  0EFD               	movlw	-3
 25522  0150C6  2AE3               	incf	plusw1,f,c
 25523  0150C8                     l8274:
 25524                           
 25525                           ;stkvar	_aexp @ sp[(-13)+10]
 25526  0150C8  0EFD               	movlw	-3
 25527  0150CA  006F FF8C  F001    	movff	plusw1,btemp
 25528  0150D0  0E19               	movlw	25
 25529  0150D2  6401               	cpfsgt	btemp^0,c
 25530  0150D4  D7A9               	goto	l8256
 25531                           
 25532                           ;stkvar	_rem @ sp[(-13)+4]
 25533  0150D6  0EF7               	movlw	-9
 25534  0150D8  50E3               	movf	plusw1,w,c
 25535  0150DA  E10A               	bnz	u6650
 25536  0150DC  0EF8               	movlw	-8
 25537  0150DE  50E3               	movf	plusw1,w,c
 25538  0150E0  E107               	bnz	u6650
 25539  0150E2  0EF9               	movlw	-7
 25540  0150E4  50E3               	movf	plusw1,w,c
 25541  0150E6  E104               	bnz	u6650
 25542  0150E8  0EFA               	movlw	-6
 25543  0150EA  50E3               	movf	plusw1,w,c
 25544  0150EC  B4D8               	btfsc	status,2,c
 25545  0150EE  D024               	goto	l8290
 25546  0150F0                     u6650:
 25547                           
 25548                           ;stkvar	_grs @ sp[(-13)+0]
 25549  0150F0  0EF3               	movlw	-13
 25550  0150F2  80E3               	bsf	plusw1,0,c
 25551  0150F4  D021               	goto	l8290
 25552  0150F6                     l8280:
 25553                           
 25554                           ;stkvar	_b @ sp[(-13)+-4]
 25555  0150F6  90D8               	bcf	status,0,c
 25556  0150F8  0EEF               	movlw	-17
 25557  0150FA  36E3               	rlcf	plusw1,f,c
 25558  0150FC  0EF0               	movlw	-16
 25559  0150FE  36E3               	rlcf	plusw1,f,c
 25560  015100  0EF1               	movlw	-15
 25561  015102  36E3               	rlcf	plusw1,f,c
 25562  015104  0EF2               	movlw	-14
 25563  015106  36E3               	rlcf	plusw1,f,c
 25564                           
 25565                           ;stkvar	_grs @ sp[(-13)+0]
 25566  015108  0EF6               	movlw	-10
 25567  01510A  AEE3               	btfss	plusw1,7,c
 25568  01510C  D002               	goto	l8286
 25569                           
 25570                           ;stkvar	_b @ sp[(-13)+-4]
 25571  01510E  0EEF               	movlw	-17
 25572  015110  80E3               	bsf	plusw1,0,c
 25573  015112                     l8286:
 25574                           
 25575                           ;stkvar	_grs @ sp[(-13)+0]
 25576  015112  90D8               	bcf	status,0,c
 25577  015114  0EF3               	movlw	-13
 25578  015116  36E3               	rlcf	plusw1,f,c
 25579  015118  0EF4               	movlw	-12
 25580  01511A  36E3               	rlcf	plusw1,f,c
 25581  01511C  0EF5               	movlw	-11
 25582  01511E  36E3               	rlcf	plusw1,f,c
 25583  015120  0EF6               	movlw	-10
 25584  015122  36E3               	rlcf	plusw1,f,c
 25585                           
 25586                           ;stkvar	_new_exp @ sp[(-13)+8]
 25587  015124  50E1               	movf	fsr1l,w,c
 25588  015126  0FFB               	addlw	-5
 25589  015128  6ED9               	movwf	fsr2l,c
 25590  01512A  50E2               	movf	fsr1h,w,c
 25591  01512C  6EDA               	movwf	fsr2h,c
 25592  01512E  0EFF               	movlw	255
 25593  015130  22DA               	addwfc	fsr2h,f,c
 25594  015132  06DE               	decf	postinc2,f,c
 25595  015134  0E00               	movlw	0
 25596  015136  5ADD               	subwfb	postdec2,f,c
 25597  015138                     l8290:
 25598                           
 25599                           ;stkvar	_b @ sp[(-13)+-4]
 25600  015138  0EF1               	movlw	-15
 25601  01513A  AEE3               	btfss	plusw1,7,c
 25602  01513C  D7DC               	goto	l8280
 25603                           
 25604                           ;stkvar	_aexp @ sp[(-13)+10]
 25605  01513E  0EFD               	movlw	-3
 25606  015140  6AE3               	clrf	plusw1,c
 25607                           
 25608                           ;stkvar	_grs @ sp[(-13)+0]
 25609  015142  0EF6               	movlw	-10
 25610  015144  AEE3               	btfss	plusw1,7,c
 25611  015146  D020               	goto	l8304
 25612                           
 25613                           ;stkvar	_grs @ sp[(-13)+0]
 25614  015148  50E1               	movf	fsr1l,w,c
 25615  01514A  0FF3               	addlw	-13
 25616  01514C  6ED9               	movwf	fsr2l,c
 25617  01514E  50E2               	movf	fsr1h,w,c
 25618  015150  6EDA               	movwf	fsr2h,c
 25619  015152  0EFF               	movlw	255
 25620  015154  22DA               	addwfc	fsr2h,f,c
 25621  015156  0EFF               	movlw	255
 25622  015158  14DE               	andwf	postinc2,w,c
 25623  01515A  6E09               	movwf	(btemp+8)^0,c
 25624  01515C  0EFF               	movlw	255
 25625  01515E  14DE               	andwf	postinc2,w,c
 25626  015160  6E0A               	movwf	(btemp+9)^0,c
 25627  015162  0EFF               	movlw	255
 25628  015164  14DE               	andwf	postinc2,w,c
 25629  015166  6E0B               	movwf	(btemp+10)^0,c
 25630  015168  0E7F               	movlw	127
 25631  01516A  14DE               	andwf	postinc2,w,c
 25632  01516C  6E0C               	movwf	(btemp+11)^0,c
 25633  01516E  5009               	movf	(btemp+8)^0,w,c
 25634  015170  100A               	iorwf	(btemp+9)^0,w,c
 25635  015172  100B               	iorwf	(btemp+10)^0,w,c
 25636  015174  100C               	iorwf	(btemp+11)^0,w,c
 25637  015176  B4D8               	btfsc	status,2,c
 25638  015178  D004               	goto	l8300
 25639  01517A                     u6690:
 25640                           
 25641                           ;stkvar	_aexp @ sp[(-13)+10]
 25642  01517A  0EFD               	movlw	-3
 25643  01517C  6AE3               	clrf	plusw1,c
 25644  01517E  2AE3               	incf	plusw1,f,c
 25645  015180  D003               	goto	l8304
 25646  015182                     l8300:
 25647                           
 25648                           ;stkvar	_b @ sp[(-13)+-4]
 25649  015182  0EEF               	movlw	-17
 25650  015184  B0E3               	btfsc	plusw1,0,c
 25651  015186  D7F9               	goto	u6690
 25652  015188                     l8304:
 25653                           
 25654                           ;stkvar	_aexp @ sp[(-13)+10]
 25655  015188  0EFD               	movlw	-3
 25656  01518A  50E3               	movf	plusw1,w,c
 25657  01518C  B4D8               	btfsc	status,2,c
 25658  01518E  D036               	goto	l8314
 25659                           
 25660                           ;stkvar	_b @ sp[(-13)+-4]
 25661  015190  50E1               	movf	fsr1l,w,c
 25662  015192  0FEF               	addlw	-17
 25663  015194  6ED9               	movwf	fsr2l,c
 25664  015196  50E2               	movf	fsr1h,w,c
 25665  015198  6EDA               	movwf	fsr2h,c
 25666  01519A  0EFF               	movlw	255
 25667  01519C  22DA               	addwfc	fsr2h,f,c
 25668  01519E  2ADE               	incf	postinc2,f,c
 25669  0151A0  0E00               	movlw	0
 25670  0151A2  22DE               	addwfc	postinc2,f,c
 25671  0151A4  22DE               	addwfc	postinc2,f,c
 25672  0151A6  22DE               	addwfc	postinc2,f,c
 25673                           
 25674                           ;stkvar	_b @ sp[(-13)+-4]
 25675  0151A8  0EF2               	movlw	-14
 25676  0151AA  A0E3               	btfss	plusw1,0,c
 25677  0151AC  D027               	goto	l8314
 25678  0151AE  0E01               	movlw	1
 25679  0151B0  6E0C               	movwf	(btemp+11)^0,c
 25680                           
 25681                           ;stkvar	_b @ sp[(-13)+-4]
 25682  0151B2  50E1               	movf	fsr1l,w,c
 25683  0151B4  0FEF               	addlw	-17
 25684  0151B6  6ED9               	movwf	fsr2l,c
 25685  0151B8  50E2               	movf	fsr1h,w,c
 25686  0151BA  6EDA               	movwf	fsr2h,c
 25687  0151BC  0EFF               	movlw	255
 25688  0151BE  22DA               	addwfc	fsr2h,f,c
 25689  0151C0  280C               	incf	(btemp+11)^0,w,c
 25690  0151C2  52DE               	movf	postinc2,f,c
 25691  0151C4  D008               	goto	u6730
 25692  0151C6                     u6735:
 25693  0151C6  52DE               	movf	postinc2,f,c
 25694  0151C8  90D8               	bcf	status,0,c
 25695  0151CA  BEDC               	btfsc	preinc2,7,c
 25696  0151CC  80D8               	bsf	status,0,c
 25697  0151CE  32DD               	rrcf	postdec2,f,c
 25698  0151D0  32DD               	rrcf	postdec2,f,c
 25699  0151D2  32DD               	rrcf	postdec2,f,c
 25700  0151D4  32DE               	rrcf	postinc2,f,c
 25701  0151D6                     u6730:
 25702  0151D6  2EE8               	decfsz	wreg,f,c
 25703  0151D8  D7F6               	goto	u6735
 25704                           
 25705                           ;stkvar	_new_exp @ sp[(-13)+8]
 25706  0151DA  0EFB               	movlw	-5
 25707  0151DC  50E3               	movf	plusw1,w,c
 25708  0151DE  0F01               	addlw	1
 25709  0151E0  6E01               	movwf	btemp^0,c
 25710  0151E2  0EFB               	movlw	-5
 25711  0151E4  0060  F007  FFE3   	movff	btemp,plusw1
 25712  0151EA  6A01               	clrf	btemp^0,c
 25713  0151EC  0EFC               	movlw	-4
 25714  0151EE  50E3               	movf	plusw1,w,c
 25715  0151F0  2001               	addwfc	btemp^0,w,c
 25716  0151F2  6E01               	movwf	btemp^0,c
 25717  0151F4  0EFC               	movlw	-4
 25718  0151F6  0060  F007  FFE3   	movff	btemp,plusw1
 25719  0151FC                     l8314:
 25720                           
 25721                           ;stkvar	_new_exp @ sp[(-13)+8]
 25722  0151FC  0EFC               	movlw	-4
 25723  0151FE  BEE3               	btfsc	plusw1,7,c
 25724  015200  D01B               	goto	l8320
 25725  015202  0EFC               	movlw	-4
 25726  015204  50E3               	movf	plusw1,w,c
 25727  015206  E104               	bnz	u6740
 25728  015208  0EFB               	movlw	-5
 25729  01520A  28E3               	incf	plusw1,w,c
 25730  01520C  A0D8               	btfss	status,0,c
 25731  01520E  D014               	goto	l8320
 25732  015210                     u6740:
 25733  015210  0EFF               	movlw	255
 25734  015212  6E0B               	movwf	(btemp+10)^0,c
 25735  015214  0E00               	movlw	0
 25736  015216  6E0C               	movwf	(btemp+11)^0,c
 25737                           
 25738                           ;stkvar	_new_exp @ sp[(-13)+8]
 25739  015218  0EFB               	movlw	-5
 25740  01521A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25741  015220  0EFC               	movlw	-4
 25742  015222  0060  F033  FFE3   	movff	btemp+11,plusw1
 25743                           
 25744                           ;stkvar	_b @ sp[(-13)+-4]
 25745  015228  0EEF               	movlw	-17
 25746  01522A  6AE3               	clrf	plusw1,c
 25747  01522C  0EF0               	movlw	-16
 25748  01522E  6AE3               	clrf	plusw1,c
 25749  015230  0EF1               	movlw	-15
 25750  015232  6AE3               	clrf	plusw1,c
 25751  015234  0EF2               	movlw	-14
 25752  015236  6AE3               	clrf	plusw1,c
 25753  015238                     l8320:
 25754                           
 25755                           ;stkvar	_new_exp @ sp[(-13)+8]
 25756  015238  0EFC               	movlw	-4
 25757  01523A  BEE3               	btfsc	plusw1,7,c
 25758  01523C  D007               	goto	u6750
 25759  01523E  0EFC               	movlw	-4
 25760  015240  50E3               	movf	plusw1,w,c
 25761  015242  E112               	bnz	l8326
 25762  015244  0EFB               	movlw	-5
 25763  015246  04E3               	decf	plusw1,w,c
 25764  015248  B0D8               	btfsc	status,0,c
 25765  01524A  D00E               	goto	l8326
 25766  01524C                     u6750:
 25767                           
 25768                           ;stkvar	_new_exp @ sp[(-13)+8]
 25769  01524C  0EFB               	movlw	-5
 25770  01524E  6AE3               	clrf	plusw1,c
 25771  015250  0EFC               	movlw	-4
 25772  015252  6AE3               	clrf	plusw1,c
 25773                           
 25774                           ;stkvar	_b @ sp[(-13)+-4]
 25775  015254  0EEF               	movlw	-17
 25776  015256  6AE3               	clrf	plusw1,c
 25777  015258  0EF0               	movlw	-16
 25778  01525A  6AE3               	clrf	plusw1,c
 25779  01525C  0EF1               	movlw	-15
 25780  01525E  6AE3               	clrf	plusw1,c
 25781  015260  0EF2               	movlw	-14
 25782  015262  6AE3               	clrf	plusw1,c
 25783                           
 25784                           ;stkvar	_sign @ sp[(-13)+12]
 25785  015264  0EFF               	movlw	-1
 25786  015266  6AE3               	clrf	plusw1,c
 25787  015268                     l8326:
 25788                           
 25789                           ;stkvar	_new_exp @ sp[(-13)+8]
 25790                           ;stkvar	_bexp @ sp[(-13)+11]
 25791  015268  0EFB               	movlw	-5
 25792  01526A  006F FF8C  F001    	movff	plusw1,btemp
 25793  015270  0EFE               	movlw	-2
 25794  015272  0060  F007  FFE3   	movff	btemp,plusw1
 25795                           
 25796                           ;stkvar	_bexp @ sp[(-13)+11]
 25797  015278  0EFE               	movlw	-2
 25798  01527A  A0E3               	btfss	plusw1,0,c
 25799  01527C  D009               	goto	l8332
 25800                           
 25801                           ;stkvar	_b @ sp[(-13)+-4]
 25802  01527E  0EF1               	movlw	241
 25803  015280  24E1               	addwf	fsr1l,w,c
 25804  015282  6ED9               	movwf	fsr2l,c
 25805  015284  0EFF               	movlw	255
 25806  015286  20E2               	addwfc	fsr1h,w,c
 25807  015288  6EDA               	movwf	fsr2h,c
 25808  01528A  0E00               	movlw	0
 25809  01528C  8EDB               	bsf	plusw2,7,c
 25810  01528E  D008               	goto	l8334
 25811  015290                     l8332:
 25812                           
 25813                           ;stkvar	_b @ sp[(-13)+-4]
 25814  015290  0EF1               	movlw	241
 25815  015292  24E1               	addwf	fsr1l,w,c
 25816  015294  6ED9               	movwf	fsr2l,c
 25817  015296  0EFF               	movlw	255
 25818  015298  20E2               	addwfc	fsr1h,w,c
 25819  01529A  6EDA               	movwf	fsr2h,c
 25820  01529C  0E7F               	movlw	127
 25821  01529E  16DF               	andwf	indf2,f,c
 25822  0152A0                     l8334:
 25823                           
 25824                           ;stkvar	_b @ sp[(-13)+-4]
 25825  0152A0  0EF2               	movlw	242
 25826  0152A2  24E1               	addwf	fsr1l,w,c
 25827  0152A4  6ED9               	movwf	fsr2l,c
 25828  0152A6  0EFF               	movlw	255
 25829  0152A8  20E2               	addwfc	fsr1h,w,c
 25830  0152AA  6EDA               	movwf	fsr2h,c
 25831                           
 25832                           ;stkvar	_bexp @ sp[(-13)+11]
 25833  0152AC  0EFE               	movlw	-2
 25834  0152AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25835  0152B4  90D8               	bcf	status,0,c
 25836  0152B6  300C               	rrcf	(btemp+11)^0,w,c
 25837  0152B8  6EDF               	movwf	indf2,c
 25838  0152BA  D644               	goto	l8232
 25839  0152BC                     l2977:
 25840                           
 25841                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25842  0152BC  0EEB               	movlw	235
 25843  0152BE  26E1               	addwf	fsr1l,f,c
 25844  0152C0  0EFF               	movlw	255
 25845  0152C2  22E2               	addwfc	fsr1h,f,c
 25846  0152C4  0012               	return		;funcret
 25847  0152C6                     __end_of___fldiv:
 25848                           	opt callstack 0
 25849                           
 25850 ;; *************** function ___flge *****************
 25851 ;; Defined at:
 25852 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25853 ;; Parameters:    Size  Location     Type
 25854 ;;  ff1             4  [STACK] unsigned char 
 25855 ;;  ff2             4  [STACK] unsigned char 
 25856 ;; Auto vars:     Size  Location     Type
 25857 ;;		None
 25858 ;; Return value:  Size  Location     Type
 25859 ;;		None               void
 25860 ;; Registers used:
 25861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25862 ;; Tracked objects:
 25863 ;;		On entry : 0/1
 25864 ;;		On exit  : 0/0
 25865 ;;		Unchanged: 0/0
 25866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25871 ;;Total ram usage:        0 bytes
 25872 ;; Hardware stack levels used:    1
 25873 ;; Hardware stack levels required when called:   15
 25874 ;; This function calls:
 25875 ;;		Nothing
 25876 ;; This function is called by:
 25877 ;;		_main
 25878 ;;		_calc_ror_data
 25879 ;;		_check_day_time
 25880 ;;		_calc_bsoc
 25881 ;;		_efgtoa
 25882 ;; This function uses a reentrant model
 25883 ;;
 25884                           
 25885                           	psect	text101
 25886  018FCC                     __ptext101:
 25887                           	opt callstack 0
 25888  018FCC                     ___flge:
 25889                           	opt callstack 0
 25890                           
 25891                           ;stkvar	_ff1 @ sp[(0)+-4]
 25892                           
 25893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25894                           ;incstack = 0
 25895 ;; hardware stack exceeded
 25896  018FCC  50E1               	movf	fsr1l,w,c
 25897  018FCE  0FFC               	addlw	-4
 25898  018FD0  6ED9               	movwf	fsr2l,c
 25899  018FD2  50E2               	movf	fsr1h,w,c
 25900  018FD4  6EDA               	movwf	fsr2h,c
 25901  018FD6  0EFF               	movlw	255
 25902  018FD8  22DA               	addwfc	fsr2h,f,c
 25903  018FDA  0E00               	movlw	0
 25904  018FDC  14DE               	andwf	postinc2,w,c
 25905  018FDE  6E09               	movwf	(btemp+8)^0,c
 25906  018FE0  0E00               	movlw	0
 25907  018FE2  14DE               	andwf	postinc2,w,c
 25908  018FE4  6E0A               	movwf	(btemp+9)^0,c
 25909  018FE6  0E80               	movlw	128
 25910  018FE8  14DE               	andwf	postinc2,w,c
 25911  018FEA  6E0B               	movwf	(btemp+10)^0,c
 25912  018FEC  0E7F               	movlw	127
 25913  018FEE  14DE               	andwf	postinc2,w,c
 25914  018FF0  6E0C               	movwf	(btemp+11)^0,c
 25915  018FF2  5009               	movf	(btemp+8)^0,w,c
 25916  018FF4  100A               	iorwf	(btemp+9)^0,w,c
 25917  018FF6  100B               	iorwf	(btemp+10)^0,w,c
 25918  018FF8  100C               	iorwf	(btemp+11)^0,w,c
 25919  018FFA  A4D8               	btfss	status,2,c
 25920  018FFC  D008               	goto	l8608
 25921                           
 25922                           ;stkvar	_ff1 @ sp[(0)+-4]
 25923  018FFE  0EFC               	movlw	-4
 25924  019000  6AE3               	clrf	plusw1,c
 25925  019002  0EFD               	movlw	-3
 25926  019004  6AE3               	clrf	plusw1,c
 25927  019006  0EFE               	movlw	-2
 25928  019008  6AE3               	clrf	plusw1,c
 25929  01900A  0EFF               	movlw	-1
 25930  01900C  6AE3               	clrf	plusw1,c
 25931  01900E                     l8608:
 25932                           
 25933                           ;stkvar	_ff2 @ sp[(0)+-8]
 25934  01900E  50E1               	movf	fsr1l,w,c
 25935  019010  0FF8               	addlw	-8
 25936  019012  6ED9               	movwf	fsr2l,c
 25937  019014  50E2               	movf	fsr1h,w,c
 25938  019016  6EDA               	movwf	fsr2h,c
 25939  019018  0EFF               	movlw	255
 25940  01901A  22DA               	addwfc	fsr2h,f,c
 25941  01901C  0E00               	movlw	0
 25942  01901E  14DE               	andwf	postinc2,w,c
 25943  019020  6E09               	movwf	(btemp+8)^0,c
 25944  019022  0E00               	movlw	0
 25945  019024  14DE               	andwf	postinc2,w,c
 25946  019026  6E0A               	movwf	(btemp+9)^0,c
 25947  019028  0E80               	movlw	128
 25948  01902A  14DE               	andwf	postinc2,w,c
 25949  01902C  6E0B               	movwf	(btemp+10)^0,c
 25950  01902E  0E7F               	movlw	127
 25951  019030  14DE               	andwf	postinc2,w,c
 25952  019032  6E0C               	movwf	(btemp+11)^0,c
 25953  019034  5009               	movf	(btemp+8)^0,w,c
 25954  019036  100A               	iorwf	(btemp+9)^0,w,c
 25955  019038  100B               	iorwf	(btemp+10)^0,w,c
 25956  01903A  100C               	iorwf	(btemp+11)^0,w,c
 25957  01903C  A4D8               	btfss	status,2,c
 25958  01903E  D008               	goto	l2658
 25959                           
 25960                           ;stkvar	_ff2 @ sp[(0)+-8]
 25961  019040  0EF8               	movlw	-8
 25962  019042  6AE3               	clrf	plusw1,c
 25963  019044  0EF9               	movlw	-7
 25964  019046  6AE3               	clrf	plusw1,c
 25965  019048  0EFA               	movlw	-6
 25966  01904A  6AE3               	clrf	plusw1,c
 25967  01904C  0EFB               	movlw	-5
 25968  01904E  6AE3               	clrf	plusw1,c
 25969  019050                     l2658:
 25970                           
 25971                           ;stkvar	_ff1 @ sp[(0)+-4]
 25972  019050  0EFF               	movlw	-1
 25973  019052  AEE3               	btfss	plusw1,7,c
 25974  019054  D024               	goto	l8614
 25975                           
 25976                           ;stkvar	_ff1 @ sp[(0)+-4]
 25977  019056  0E00               	movlw	0
 25978  019058  6E09               	movwf	(btemp+8)^0,c
 25979  01905A  0E00               	movlw	0
 25980  01905C  6E0A               	movwf	(btemp+9)^0,c
 25981  01905E  0E00               	movlw	0
 25982  019060  6E0B               	movwf	(btemp+10)^0,c
 25983  019062  0E80               	movlw	128
 25984  019064  6E0C               	movwf	(btemp+11)^0,c
 25985  019066  0EFC               	movlw	-4
 25986  019068  50E3               	movf	plusw1,w,c
 25987  01906A  5E09               	subwf	(btemp+8)^0,f,c
 25988  01906C  0EFD               	movlw	-3
 25989  01906E  50E3               	movf	plusw1,w,c
 25990  019070  5A0A               	subwfb	(btemp+9)^0,f,c
 25991  019072  0EFE               	movlw	-2
 25992  019074  50E3               	movf	plusw1,w,c
 25993  019076  5A0B               	subwfb	(btemp+10)^0,f,c
 25994  019078  0EFF               	movlw	-1
 25995  01907A  50E3               	movf	plusw1,w,c
 25996  01907C  5A0C               	subwfb	(btemp+11)^0,f,c
 25997                           
 25998                           ;stkvar	_ff1 @ sp[(0)+-4]
 25999  01907E  0EFC               	movlw	-4
 26000  019080  0060  F027  FFE3   	movff	btemp+8,plusw1
 26001  019086  0EFD               	movlw	-3
 26002  019088  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26003  01908E  0EFE               	movlw	-2
 26004  019090  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26005  019096  0EFF               	movlw	-1
 26006  019098  0060  F033  FFE3   	movff	btemp+11,plusw1
 26007  01909E                     l8614:
 26008                           
 26009                           ;stkvar	_ff2 @ sp[(0)+-8]
 26010  01909E  0EFB               	movlw	-5
 26011  0190A0  AEE3               	btfss	plusw1,7,c
 26012  0190A2  D024               	goto	l8618
 26013                           
 26014                           ;stkvar	_ff2 @ sp[(0)+-8]
 26015  0190A4  0E00               	movlw	0
 26016  0190A6  6E09               	movwf	(btemp+8)^0,c
 26017  0190A8  0E00               	movlw	0
 26018  0190AA  6E0A               	movwf	(btemp+9)^0,c
 26019  0190AC  0E00               	movlw	0
 26020  0190AE  6E0B               	movwf	(btemp+10)^0,c
 26021  0190B0  0E80               	movlw	128
 26022  0190B2  6E0C               	movwf	(btemp+11)^0,c
 26023  0190B4  0EF8               	movlw	-8
 26024  0190B6  50E3               	movf	plusw1,w,c
 26025  0190B8  5E09               	subwf	(btemp+8)^0,f,c
 26026  0190BA  0EF9               	movlw	-7
 26027  0190BC  50E3               	movf	plusw1,w,c
 26028  0190BE  5A0A               	subwfb	(btemp+9)^0,f,c
 26029  0190C0  0EFA               	movlw	-6
 26030  0190C2  50E3               	movf	plusw1,w,c
 26031  0190C4  5A0B               	subwfb	(btemp+10)^0,f,c
 26032  0190C6  0EFB               	movlw	-5
 26033  0190C8  50E3               	movf	plusw1,w,c
 26034  0190CA  5A0C               	subwfb	(btemp+11)^0,f,c
 26035                           
 26036                           ;stkvar	_ff2 @ sp[(0)+-8]
 26037  0190CC  0EF8               	movlw	-8
 26038  0190CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 26039  0190D4  0EF9               	movlw	-7
 26040  0190D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26041  0190DC  0EFA               	movlw	-6
 26042  0190DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26043  0190E4  0EFB               	movlw	-5
 26044  0190E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 26045  0190EC                     l8618:
 26046                           
 26047                           ;stkvar	_ff1 @ sp[(0)+-4]
 26048  0190EC  0EFF               	movlw	-1
 26049  0190EE  7EE3               	btg	plusw1,7,c
 26050                           
 26051                           ;stkvar	_ff2 @ sp[(0)+-8]
 26052  0190F0  0EFB               	movlw	-5
 26053  0190F2  7EE3               	btg	plusw1,7,c
 26054                           
 26055                           ;stkvar	_ff2 @ sp[(0)+-8]
 26056                           ;stkvar	_ff1 @ sp[(0)+-4]
 26057  0190F4  50E1               	movf	fsr1l,w,c
 26058  0190F6  0FFC               	addlw	-4
 26059  0190F8  6ED9               	movwf	fsr2l,c
 26060  0190FA  50E2               	movf	fsr1h,w,c
 26061  0190FC  6EDA               	movwf	fsr2h,c
 26062  0190FE  0EFF               	movlw	255
 26063  019100  22DA               	addwfc	fsr2h,f,c
 26064  019102  0EF8               	movlw	-8
 26065  019104  50E3               	movf	plusw1,w,c
 26066  019106  5CDE               	subwf	postinc2,w,c
 26067  019108  0EF9               	movlw	-7
 26068  01910A  50E3               	movf	plusw1,w,c
 26069  01910C  58DE               	subwfb	postinc2,w,c
 26070  01910E  0EFA               	movlw	-6
 26071  019110  50E3               	movf	plusw1,w,c
 26072  019112  58DE               	subwfb	postinc2,w,c
 26073  019114  0EFB               	movlw	-5
 26074  019116  50E3               	movf	plusw1,w,c
 26075  019118  58DE               	subwfb	postinc2,w,c
 26076  01911A  B0D8               	btfsc	status,0,c
 26077  01911C  D002               	goto	l8626
 26078  01911E  9001               	bcf	btemp& (0+255),0,c
 26079  019120  D001               	goto	l2665
 26080  019122                     l8626:
 26081  019122  8001               	bsf	btemp& (0+255),0,c
 26082  019124                     l2665:
 26083                           
 26084                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26085  019124  0EF8               	movlw	248
 26086  019126  26E1               	addwf	fsr1l,f,c
 26087  019128  0EFF               	movlw	255
 26088  01912A  22E2               	addwfc	fsr1h,f,c
 26089  01912C  0012               	return		;funcret
 26090  01912E                     __end_of___flge:
 26091                           	opt callstack 0
 26092                           
 26093 ;; *************** function _calc_model_data *****************
 26094 ;; Defined at:
 26095 ;;		line 67 in file "mbmc.c"
 26096 ;; Parameters:    Size  Location     Type
 26097 ;;		None
 26098 ;; Auto vars:     Size  Location     Type
 26099 ;;		None
 26100 ;; Return value:  Size  Location     Type
 26101 ;;                  1  [STACK] void 
 26102 ;; Registers used:
 26103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26104 ;; Tracked objects:
 26105 ;;		On entry : 0/1
 26106 ;;		On exit  : 3F/39
 26107 ;;		Unchanged: 0/0
 26108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26113 ;;Total ram usage:        0 bytes
 26114 ;; Hardware stack levels used:    1
 26115 ;; Hardware stack levels required when called:   18
 26116 ;; This function calls:
 26117 ;;		___fladd
 26118 ;;		___flmul
 26119 ;;		___flsub
 26120 ;;		_lp_filter
 26121 ;;		_start_bsoc
 26122 ;;		_stop_bsoc
 26123 ;; This function is called by:
 26124 ;;		_main
 26125 ;; This function uses a reentrant model
 26126 ;;
 26127                           
 26128                           	psect	text102
 26129  015C5A                     __ptext102:
 26130                           	opt callstack 0
 26131  015C5A                     _calc_model_data:
 26132                           	opt callstack 12
 26133                           
 26134                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26135                           
 26136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26137                           ;incstack = 0
 26138  015C5A  ECD0  F0E0         	call	_stop_bsoc	;wreg free
 26139                           
 26140                           ; BSR set to: 57
 26141                           ;mbmc.c: 72:  if (!V.calib) {
 26142  015C5E  0101               	movlb	1	; () banked
 26143  015C60  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
 26144  015C62  A4D8               	btfss	status,2,c
 26145  015C64  D219               	goto	l11042
 26146                           
 26147                           ; BSR set to: 1
 26148                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26149  015C66  EE21  F2FF         	lfsr	2,_C
 26150  015C6A  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26151  015C70  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26152  015C76  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26153  015C7C  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26154                           
 26155                           ; BSR set to: 1
 26156                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26157  015C82  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 26158  015C88  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26159  015C8E  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26160  015C94  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26161  015C9A  EE21  F343         	lfsr	2,_C+68	;volatile
 26162  015C9E  006F FF7B FFE6     	movff	postinc2,postinc1
 26163  015CA4  006F FF7B FFE6     	movff	postinc2,postinc1
 26164  015CAA  006F FF7B FFE6     	movff	postinc2,postinc1
 26165  015CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 26166  015CB6  ECE7  F0DA         	call	___flsub	;wreg free
 26167  015CBA  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26168  015CC0  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26169  015CC6  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26170  015CCC  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26171                           
 26172                           ;mbmc.c: 75:   bcror = C.c_bat;
 26173  015CD2  C743  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 26174  015CD6  C744  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26175  015CDA  C745  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26176  015CDE  C746  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26177                           
 26178                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26179  015CE2  EE21  F303         	lfsr	2,_C+4	;volatile
 26180  015CE6  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26181  015CEC  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26182  015CF2  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26183  015CF8  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26184                           
 26185                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26186  015CFE  EE21  F30F         	lfsr	2,_C+16	;volatile
 26187  015D02  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26188  015D08  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26189  015D0E  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26190  015D14  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26191                           
 26192                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26193  015D1A  EE21  F333         	lfsr	2,_C+52	;volatile
 26194  015D1E  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26195  015D24  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26196  015D2A  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26197  015D30  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26198                           
 26199                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26200  015D36  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 26201  015D3C  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26202  015D42  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26203  015D48  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26204  015D4E  EE21  F353         	lfsr	2,_C+84	;volatile
 26205  015D52  006F FF7B FFE6     	movff	postinc2,postinc1
 26206  015D58  006F FF7B FFE6     	movff	postinc2,postinc1
 26207  015D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 26208  015D64  006F FF7B FFE6     	movff	postinc2,postinc1
 26209  015D6A  ECE7  F0DA         	call	___flsub	;wreg free
 26210  015D6E  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26211  015D74  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26212  015D7A  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26213  015D80  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26214                           
 26215                           ;mbmc.c: 80:   bvror = C.v_bat;
 26216  015D86  C753  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 26217  015D8A  C754  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26218  015D8E  C755  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26219  015D92  C756  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26220                           
 26221                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26222  015D96  EE21  F313         	lfsr	2,_C+20	;volatile
 26223  015D9A  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 26224  015DA0  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 26225  015DA6  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 26226  015DAC  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 26227                           
 26228                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 26229  015DB2  EE21  F307         	lfsr	2,_C+8	;volatile
 26230  015DB6  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 26231  015DBC  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 26232  015DC2  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 26233  015DC8  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 26234                           
 26235                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 26236  015DCE  EE21  F32F         	lfsr	2,_C+48	;volatile
 26237  015DD2  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 26238  015DD8  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 26239  015DDE  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 26240  015DE4  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 26241                           
 26242                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 26243  015DEA  0E01               	movlw	1
 26244  015DEC  6EE6               	movwf	postinc1,c
 26245  015DEE  0E10               	movlw	16
 26246  015DF0  6EE6               	movwf	postinc1,c
 26247  015DF2  EE21  F2FF         	lfsr	2,_C
 26248  015DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 26249  015DFC  006F FF7B FFE6     	movff	postinc2,postinc1
 26250  015E02  006F FF7B FFE6     	movff	postinc2,postinc1
 26251  015E08  006F FF7B FFE6     	movff	postinc2,postinc1
 26252  015E0E  EE21  F303         	lfsr	2,_C+4	;volatile
 26253  015E12  006F FF7B FFE6     	movff	postinc2,postinc1
 26254  015E18  006F FF7B FFE6     	movff	postinc2,postinc1
 26255  015E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 26256  015E24  006F FF7B FFE6     	movff	postinc2,postinc1
 26257  015E2A  ECE7  F0DA         	call	___flsub	;wreg free
 26258  015E2E  0060  F007  FFE6   	movff	btemp,postinc1
 26259  015E34  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26260  015E3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26261  015E40  0060  F013  FFE6   	movff	btemp+3,postinc1
 26262  015E46  EC31  F0C3         	call	_lp_filter	;wreg free
 26263  015E4A  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 26264  015E50  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 26265  015E56  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 26266  015E5C  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 26267                           
 26268                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 26269  015E62  0E01               	movlw	1
 26270  015E64  6EE6               	movwf	postinc1,c
 26271  015E66  0E11               	movlw	17
 26272  015E68  6EE6               	movwf	postinc1,c
 26273  015E6A  EE21  F353         	lfsr	2,_C+84	;volatile
 26274  015E6E  006F FF7B FFE6     	movff	postinc2,postinc1
 26275  015E74  006F FF7B FFE6     	movff	postinc2,postinc1
 26276  015E7A  006F FF7B FFE6     	movff	postinc2,postinc1
 26277  015E80  006F FF7B FFE6     	movff	postinc2,postinc1
 26278  015E86  EE21  F33F         	lfsr	2,_C+64	;volatile
 26279  015E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 26280  015E90  006F FF7B FFE6     	movff	postinc2,postinc1
 26281  015E96  006F FF7B FFE6     	movff	postinc2,postinc1
 26282  015E9C  006F FF7B FFE6     	movff	postinc2,postinc1
 26283  015EA2  ECB3  F09E         	call	___flmul	;wreg free
 26284  015EA6  0060  F007  FFE6   	movff	btemp,postinc1
 26285  015EAC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26286  015EB2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26287  015EB8  0060  F013  FFE6   	movff	btemp+3,postinc1
 26288  015EBE  EC31  F0C3         	call	_lp_filter	;wreg free
 26289  015EC2  0060  F004  F773   	movff	btemp,_C+116	;volatile
 26290  015EC8  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 26291  015ECE  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 26292  015ED4  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 26293                           
 26294                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 26295  015EDA  0E01               	movlw	1
 26296  015EDC  6EE6               	movwf	postinc1,c
 26297  015EDE  0E12               	movlw	18
 26298  015EE0  6EE6               	movwf	postinc1,c
 26299  015EE2  EE21  F34F         	lfsr	2,_C+80	;volatile
 26300  015EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 26301  015EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 26302  015EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 26303  015EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 26304  015EFE  EE21  F347         	lfsr	2,_C+72	;volatile
 26305  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 26306  015F08  006F FF7B FFE6     	movff	postinc2,postinc1
 26307  015F0E  006F FF7B FFE6     	movff	postinc2,postinc1
 26308  015F14  006F FF7B FFE6     	movff	postinc2,postinc1
 26309  015F1A  ECB3  F09E         	call	___flmul	;wreg free
 26310  015F1E  0060  F007  FFE6   	movff	btemp,postinc1
 26311  015F24  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26312  015F2A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26313  015F30  0060  F013  FFE6   	movff	btemp+3,postinc1
 26314  015F36  EC31  F0C3         	call	_lp_filter	;wreg free
 26315  015F3A  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 26316  015F40  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 26317  015F46  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 26318  015F4C  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 26319                           
 26320                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 26321  015F52  0E01               	movlw	1
 26322  015F54  6EE6               	movwf	postinc1,c
 26323  015F56  0E13               	movlw	19
 26324  015F58  6EE6               	movwf	postinc1,c
 26325  015F5A  0E00               	movlw	0
 26326  015F5C  6EE6               	movwf	postinc1,c
 26327  015F5E  0E00               	movlw	0
 26328  015F60  6EE6               	movwf	postinc1,c
 26329  015F62  0E60               	movlw	96
 26330  015F64  6EE6               	movwf	postinc1,c
 26331  015F66  0EC1               	movlw	193
 26332  015F68  6EE6               	movwf	postinc1,c
 26333  015F6A  EE21  F363         	lfsr	2,_C+100	;volatile
 26334  015F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 26335  015F74  006F FF7B FFE6     	movff	postinc2,postinc1
 26336  015F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 26337  015F80  006F FF7B FFE6     	movff	postinc2,postinc1
 26338  015F86  EE21  F33F         	lfsr	2,_C+64	;volatile
 26339  015F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 26340  015F90  006F FF7B FFE6     	movff	postinc2,postinc1
 26341  015F96  006F FF7B FFE6     	movff	postinc2,postinc1
 26342  015F9C  006F FF7B FFE6     	movff	postinc2,postinc1
 26343  015FA2  ECB3  F09E         	call	___flmul	;wreg free
 26344  015FA6  0060  F007  FFE6   	movff	btemp,postinc1
 26345  015FAC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26346  015FB2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26347  015FB8  0060  F013  FFE6   	movff	btemp+3,postinc1
 26348  015FBE  ECC8  F0A2         	call	___fladd	;wreg free
 26349  015FC2  0060  F007  FFE6   	movff	btemp,postinc1
 26350  015FC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26351  015FCE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26352  015FD4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26353  015FDA  EC31  F0C3         	call	_lp_filter	;wreg free
 26354  015FDE  0060  F004  F777   	movff	btemp,_C+120	;volatile
 26355  015FE4  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 26356  015FEA  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 26357  015FF0  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 26358                           
 26359                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 26360  015FF6  0E01               	movlw	1
 26361  015FF8  6EE6               	movwf	postinc1,c
 26362  015FFA  0E14               	movlw	20
 26363  015FFC  6EE6               	movwf	postinc1,c
 26364  015FFE  EE21  F353         	lfsr	2,_C+84	;volatile
 26365  016002  006F FF7B FFE6     	movff	postinc2,postinc1
 26366  016008  006F FF7B FFE6     	movff	postinc2,postinc1
 26367  01600E  006F FF7B FFE6     	movff	postinc2,postinc1
 26368  016014  006F FF7B FFE6     	movff	postinc2,postinc1
 26369  01601A  EE21  F343         	lfsr	2,_C+68	;volatile
 26370  01601E  006F FF7B FFE6     	movff	postinc2,postinc1
 26371  016024  006F FF7B FFE6     	movff	postinc2,postinc1
 26372  01602A  006F FF7B FFE6     	movff	postinc2,postinc1
 26373  016030  006F FF7B FFE6     	movff	postinc2,postinc1
 26374  016036  ECB3  F09E         	call	___flmul	;wreg free
 26375  01603A  0060  F007  FFE6   	movff	btemp,postinc1
 26376  016040  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26377  016046  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26378  01604C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26379  016052  EC31  F0C3         	call	_lp_filter	;wreg free
 26380  016056  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 26381  01605C  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 26382  016062  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 26383  016068  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 26384                           
 26385                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 26386  01606E  EE21  F377         	lfsr	2,_C+120	;volatile
 26387  016072  0E03               	movlw	3
 26388  016074  AEDB               	btfss	plusw2,7,c
 26389  016076  D010               	goto	l11042
 26390                           
 26391                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 26392  016078  0E17               	movlw	23
 26393  01607A  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 26394  016080  0EB7               	movlw	183
 26395  016082  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 26396  016088  0ED1               	movlw	209
 26397  01608A  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 26398  016090  0E38               	movlw	56
 26399  016092  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 26400  016098                     l11042:
 26401                           
 26402                           ;mbmc.c: 95:  start_bsoc();
 26403  016098  EC5B  F0DF         	call	_start_bsoc	;wreg free
 26404                           
 26405                           ; BSR set to: 57
 26406                           ;mbmc.c: 96:  C.update = 1;
 26407  01609C  0E01               	movlw	1
 26408  01609E  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 26409                           
 26410                           ; BSR set to: 57
 26411                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26412  0160A4  0012               	return		;funcret
 26413  0160A6                     __end_of_calc_model_data:
 26414                           	opt callstack 0
 26415                           
 26416 ;; *************** function _stop_bsoc *****************
 26417 ;; Defined at:
 26418 ;;		line 127 in file "bsoc.c"
 26419 ;; Parameters:    Size  Location     Type
 26420 ;;		None
 26421 ;; Auto vars:     Size  Location     Type
 26422 ;;		None
 26423 ;; Return value:  Size  Location     Type
 26424 ;;                  1  [STACK] void 
 26425 ;; Registers used:
 26426 ;;		None
 26427 ;; Tracked objects:
 26428 ;;		On entry : 0/1
 26429 ;;		On exit  : 3F/39
 26430 ;;		Unchanged: 0/0
 26431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26436 ;;Total ram usage:        0 bytes
 26437 ;; Hardware stack levels used:    1
 26438 ;; Hardware stack levels required when called:   15
 26439 ;; This function calls:
 26440 ;;		Nothing
 26441 ;; This function is called by:
 26442 ;;		_calc_model_data
 26443 ;; This function uses a reentrant model
 26444 ;;
 26445                           
 26446                           	psect	text103
 26447  01C1A0                     __ptext103:
 26448                           	opt callstack 0
 26449  01C1A0                     _stop_bsoc:
 26450                           	opt callstack 14
 26451                           
 26452                           ;bsoc.c: 130:  PIE6bits.TMR3IE = 0;
 26453                           
 26454                           ; BSR set to: 57
 26455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26456                           ;incstack = 0
 26457  01C1A0  0139               	movlb	57	; () banked
 26458  01C1A2  9D96               	bcf	150,6,b	;volatile
 26459                           
 26460                           ; BSR set to: 57
 26461                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26462  01C1A4  0012               	return		;funcret
 26463  01C1A6                     __end_of_stop_bsoc:
 26464                           	opt callstack 0
 26465                           
 26466 ;; *************** function _start_bsoc *****************
 26467 ;; Defined at:
 26468 ;;		line 118 in file "bsoc.c"
 26469 ;; Parameters:    Size  Location     Type
 26470 ;;		None
 26471 ;; Auto vars:     Size  Location     Type
 26472 ;;		None
 26473 ;; Return value:  Size  Location     Type
 26474 ;;                  1  [STACK] void 
 26475 ;; Registers used:
 26476 ;;		wreg, status,2, status,0, btemp+11
 26477 ;; Tracked objects:
 26478 ;;		On entry : 0/1
 26479 ;;		On exit  : 3F/39
 26480 ;;		Unchanged: 0/0
 26481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26486 ;;Total ram usage:        0 bytes
 26487 ;; Hardware stack levels used:    1
 26488 ;; Hardware stack levels required when called:   15
 26489 ;; This function calls:
 26490 ;;		Nothing
 26491 ;; This function is called by:
 26492 ;;		_calc_model_data
 26493 ;; This function uses a reentrant model
 26494 ;;
 26495                           
 26496                           	psect	text104
 26497  01BEB6                     __ptext104:
 26498                           	opt callstack 0
 26499  01BEB6                     _start_bsoc:
 26500                           	opt callstack 14
 26501                           
 26502                           ;bsoc.c: 121:  PIE6bits.TMR3IE = 1;
 26503                           
 26504                           ; BSR set to: 57
 26505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26506                           ;incstack = 0
 26507  01BEB6  0139               	movlb	57	; () banked
 26508  01BEB8  8D96               	bsf	150,6,b	;volatile
 26509                           
 26510                           ; BSR set to: 57
 26511  01BEBA  A4BE               	btfss	190,2,c	;volatile
 26512  01BEBC  D002               	goto	u9640
 26513  01BEBE  0E01               	movlw	1
 26514  01BEC0  D001               	goto	u9646
 26515  01BEC2                     u9640:
 26516  01BEC2  0E00               	movlw	0
 26517  01BEC4                     u9646:
 26518  01BEC4  0AFF               	xorlw	255
 26519  01BEC6  6E0C               	movwf	(btemp+11)^0,c
 26520  01BEC8  460C               	rlncf	(btemp+11)^0,f,c
 26521  01BECA  460C               	rlncf	(btemp+11)^0,f,c
 26522  01BECC  50BE               	movf	190,w,c	;volatile
 26523  01BECE  180C               	xorwf	(btemp+11)^0,w,c
 26524  01BED0  0BFB               	andlw	-5
 26525  01BED2  180C               	xorwf	(btemp+11)^0,w,c
 26526  01BED4  6EBE               	movwf	190,c	;volatile
 26527                           
 26528                           ; BSR set to: 57
 26529                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26530  01BED6  0012               	return		;funcret
 26531  01BED8                     __end_of_start_bsoc:
 26532                           	opt callstack 0
 26533                           
 26534 ;; *************** function _lp_filter *****************
 26535 ;; Defined at:
 26536 ;;		line 29 in file "mbmc.c"
 26537 ;; Parameters:    Size  Location     Type
 26538 ;;  new             4  [STACK] const float 
 26539 ;;  bn              1  [STACK] const unsigned char 
 26540 ;;  slow            1  [STACK] const char 
 26541 ;; Auto vars:     Size  Location     Type
 26542 ;;  lp_speed        4  [STACK] float 
 26543 ;; Return value:  Size  Location     Type
 26544 ;;                  4  [STACK] float 
 26545 ;; Registers used:
 26546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26547 ;; Tracked objects:
 26548 ;;		On entry : 0/1
 26549 ;;		On exit  : 0/0
 26550 ;;		Unchanged: 0/0
 26551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26556 ;;Total ram usage:        0 bytes
 26557 ;; Hardware stack levels used:    1
 26558 ;; Hardware stack levels required when called:   17
 26559 ;; This function calls:
 26560 ;;		___fladd
 26561 ;;		___flmul
 26562 ;;		___flsub
 26563 ;; This function is called by:
 26564 ;;		_main
 26565 ;;		_convert_adc_data
 26566 ;;		_calc_model_data
 26567 ;; This function uses a reentrant model
 26568 ;;
 26569                           
 26570                           	psect	text105
 26571  018662                     __ptext105:
 26572                           	opt callstack 0
 26573  018662                     _lp_filter:
 26574                           	opt callstack 0
 26575                           
 26576                           ; BSR set to: 57
 26577                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26578  018662  52E6               	movf	postinc1,f,c
 26579  018664  52E6               	movf	postinc1,f,c
 26580  018666  52E6               	movf	postinc1,f,c
 26581  018668  52E6               	movf	postinc1,f,c
 26582                           
 26583                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26584                           ;stkvar	_bn @ sp[(-4)+-5]
 26585                           
 26586                           ;incstack = 0
 26587  01866A  0EF7               	movlw	-9
 26588  01866C  006F FF8C  F001    	movff	plusw1,btemp
 26589  018672  0E14               	movlw	20
 26590  018674  6401               	cpfsgt	btemp^0,c
 26591  018676  D011               	goto	l10410
 26592  018678                     u9550:
 26593                           
 26594                           ;mbmc.c: 35:   return new;
 26595                           ;stkvar	_new @ sp[(-4)+-4]
 26596  018678  0EF8               	movlw	-8
 26597  01867A  006F FF8C  F001    	movff	plusw1,btemp
 26598  018680  0EF9               	movlw	-7
 26599  018682  006F FF8C  F002    	movff	plusw1,btemp+1
 26600  018688  0EFA               	movlw	-6
 26601  01868A  006F FF8C  F003    	movff	plusw1,btemp+2
 26602  018690  0EFB               	movlw	-5
 26603  018692  006F FF8C  F004    	movff	plusw1,btemp+3
 26604  018698  D0BD               	goto	l1832
 26605  01869A                     l10410:
 26606                           
 26607                           ;mbmc.c: 37:  if (slow == (-1)) {
 26608                           ;stkvar	_slow @ sp[(-4)+-6]
 26609  01869A  0EF6               	movlw	-10
 26610  01869C  28E3               	incf	plusw1,w,c
 26611  01869E  A4D8               	btfss	status,2,c
 26612  0186A0  D012               	goto	l10418
 26613                           
 26614                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26615                           ;stkvar	_bn @ sp[(-4)+-5]
 26616  0186A2  0EF7               	movlw	-9
 26617  0186A4  50E3               	movf	plusw1,w,c
 26618  0186A6  0D04               	mullw	4
 26619  0186A8  0E00               	movlw	low lp_filter@smooth
 26620  0186AA  24F3               	addwf	243,w,c
 26621  0186AC  6ED9               	movwf	fsr2l,c
 26622  0186AE  0E02               	movlw	high lp_filter@smooth
 26623  0186B0  20F4               	addwfc	prodh,w,c
 26624  0186B2  6EDA               	movwf	fsr2h,c
 26625  0186B4  0E00               	movlw	0
 26626  0186B6  6EDE               	movwf	postinc2,c
 26627  0186B8  0E00               	movlw	0
 26628  0186BA  6EDE               	movwf	postinc2,c
 26629  0186BC  0E00               	movlw	0
 26630  0186BE  6EDE               	movwf	postinc2,c
 26631  0186C0  0E00               	movlw	0
 26632  0186C2  6EDD               	movwf	postdec2,c
 26633  0186C4  D7D9               	goto	u9550
 26634  0186C6                     l10418:
 26635                           
 26636                           ;mbmc.c: 42:  if (slow) {
 26637                           ;stkvar	_slow @ sp[(-4)+-6]
 26638  0186C6  0EF6               	movlw	-10
 26639  0186C8  50E3               	movf	plusw1,w,c
 26640  0186CA  B4D8               	btfsc	status,2,c
 26641  0186CC  D006               	goto	l10422
 26642                           
 26643                           ;mbmc.c: 43:   lp_speed = 0.033;
 26644  0186CE  0E02               	movlw	2
 26645  0186D0  6E09               	movwf	(btemp+8)^0,c
 26646  0186D2  0E2B               	movlw	43
 26647  0186D4  6E0A               	movwf	(btemp+9)^0,c
 26648  0186D6  0E07               	movlw	7
 26649  0186D8  D005               	goto	L31
 26650  0186DA                     l10422:
 26651                           
 26652                           ;mbmc.c: 45:   lp_speed = 0.066;
 26653  0186DA  0E02               	movlw	2
 26654  0186DC  6E09               	movwf	(btemp+8)^0,c
 26655  0186DE  0E2B               	movlw	43
 26656  0186E0  6E0A               	movwf	(btemp+9)^0,c
 26657  0186E2  0E87               	movlw	135
 26658  0186E4                     L31:
 26659  0186E4  6E0B               	movwf	(btemp+10)^0,c
 26660  0186E6  0E3D               	movlw	61
 26661  0186E8  6E0C               	movwf	(btemp+11)^0,c
 26662                           
 26663                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26664  0186EA  0EFC               	movlw	-4
 26665  0186EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 26666  0186F2  0EFD               	movlw	-3
 26667  0186F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26668  0186FA  0EFE               	movlw	-2
 26669  0186FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26670  018702  0EFF               	movlw	-1
 26671  018704  0060  F033  FFE3   	movff	btemp+11,plusw1
 26672                           
 26673                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26674                           ;stkvar	_bn @ sp[(-4)+-5]
 26675  01870A  0EF7               	movlw	-9
 26676  01870C  50E3               	movf	plusw1,w,c
 26677  01870E  0D04               	mullw	4
 26678  018710  0E00               	movlw	low lp_filter@smooth
 26679  018712  24F3               	addwf	243,w,c
 26680  018714  6ED9               	movwf	fsr2l,c
 26681  018716  0E02               	movlw	high lp_filter@smooth
 26682  018718  20F4               	addwfc	prodh,w,c
 26683  01871A  6EDA               	movwf	fsr2h,c
 26684  01871C  006F FF7B FFE6     	movff	postinc2,postinc1
 26685  018722  006F FF7B FFE6     	movff	postinc2,postinc1
 26686  018728  006F FF7B FFE6     	movff	postinc2,postinc1
 26687  01872E  006F FF7B FFE6     	movff	postinc2,postinc1
 26688                           
 26689                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26690  018734  0EF8               	movlw	-8
 26691  018736  006F FF8F FFE6     	movff	plusw1,postinc1
 26692  01873C  006F FF8F FFE6     	movff	plusw1,postinc1
 26693  018742  006F FF8F FFE6     	movff	plusw1,postinc1
 26694  018748  006F FF8F FFE6     	movff	plusw1,postinc1
 26695                           
 26696                           ;stkvar	_bn @ sp[(-12)+-5]
 26697  01874E  0EEF               	movlw	-17
 26698  018750  50E3               	movf	plusw1,w,c
 26699  018752  0D04               	mullw	4
 26700  018754  0E00               	movlw	low lp_filter@smooth
 26701  018756  24F3               	addwf	243,w,c
 26702  018758  6ED9               	movwf	fsr2l,c
 26703  01875A  0E02               	movlw	high lp_filter@smooth
 26704  01875C  20F4               	addwfc	prodh,w,c
 26705  01875E  6EDA               	movwf	fsr2h,c
 26706  018760  006F FF7B FFE6     	movff	postinc2,postinc1
 26707  018766  006F FF7B FFE6     	movff	postinc2,postinc1
 26708  01876C  006F FF7B FFE6     	movff	postinc2,postinc1
 26709  018772  006F FF7B FFE6     	movff	postinc2,postinc1
 26710                           
 26711                           ;stkvar	_new @ sp[(-16)+-4]
 26712  018778  0EEC               	movlw	-20
 26713  01877A  006F FF8F FFE6     	movff	plusw1,postinc1
 26714  018780  006F FF8F FFE6     	movff	plusw1,postinc1
 26715  018786  006F FF8F FFE6     	movff	plusw1,postinc1
 26716  01878C  006F FF8F FFE6     	movff	plusw1,postinc1
 26717  018792  ECE7  F0DA         	call	___flsub	;wreg free
 26718  018796  0060  F007  FFE6   	movff	btemp,postinc1
 26719  01879C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26720  0187A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26721  0187A8  0060  F013  FFE6   	movff	btemp+3,postinc1
 26722  0187AE  ECB3  F09E         	call	___flmul	;wreg free
 26723  0187B2  0060  F007  FFE6   	movff	btemp,postinc1
 26724  0187B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26725  0187BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26726  0187C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26727  0187CA  ECC8  F0A2         	call	___fladd	;wreg free
 26728                           
 26729                           ;stkvar	_bn @ sp[(-4)+-5]
 26730  0187CE  0EF7               	movlw	-9
 26731  0187D0  50E3               	movf	plusw1,w,c
 26732  0187D2  0D04               	mullw	4
 26733  0187D4  0E00               	movlw	low lp_filter@smooth
 26734  0187D6  24F3               	addwf	243,w,c
 26735  0187D8  6ED9               	movwf	fsr2l,c
 26736  0187DA  0E02               	movlw	high lp_filter@smooth
 26737  0187DC  20F4               	addwfc	prodh,w,c
 26738  0187DE  6EDA               	movwf	fsr2h,c
 26739  0187E0  0060  F007  FFDE   	movff	btemp,postinc2
 26740  0187E6  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26741  0187EC  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26742  0187F2  0060  F013  FFDD   	movff	btemp+3,postdec2
 26743  0187F8  52DD               	movf	postdec2,f,c
 26744  0187FA  52DD               	movf	postdec2,f,c
 26745  0187FC  006F FF78  F001    	movff	postinc2,btemp
 26746  018802  006F FF78  F002    	movff	postinc2,btemp+1
 26747  018808  006F FF78  F003    	movff	postinc2,btemp+2
 26748  01880E  006F FF78  F004    	movff	postinc2,btemp+3
 26749  018814                     l1832:
 26750                           
 26751                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26752  018814  0EF6               	movlw	246
 26753  018816  26E1               	addwf	fsr1l,f,c
 26754  018818  0EFF               	movlw	255
 26755  01881A  22E2               	addwfc	fsr1h,f,c
 26756  01881C  0012               	return		;funcret
 26757  01881E                     __end_of_lp_filter:
 26758                           	opt callstack 0
 26759                           
 26760 ;; *************** function ___flsub *****************
 26761 ;; Defined at:
 26762 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26763 ;; Parameters:    Size  Location     Type
 26764 ;;  b               4  [STACK] float 
 26765 ;;  a               4  [STACK] float 
 26766 ;; Auto vars:     Size  Location     Type
 26767 ;;		None
 26768 ;; Return value:  Size  Location     Type
 26769 ;;                  4  [STACK] float 
 26770 ;; Registers used:
 26771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26772 ;; Tracked objects:
 26773 ;;		On entry : 0/0
 26774 ;;		On exit  : 0/0
 26775 ;;		Unchanged: 0/0
 26776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26781 ;;Total ram usage:        0 bytes
 26782 ;; Hardware stack levels used:    1
 26783 ;; Hardware stack levels required when called:   16
 26784 ;; This function calls:
 26785 ;;		___fladd
 26786 ;; This function is called by:
 26787 ;;		_conv_raw_result
 26788 ;;		_lp_filter
 26789 ;;		_calc_model_data
 26790 ;;		_calc_ror_data
 26791 ;;		_esr_check
 26792 ;;		_efgtoa
 26793 ;; This function uses a reentrant model
 26794 ;;
 26795                           
 26796                           	psect	text106
 26797  01B5CE                     __ptext106:
 26798                           	opt callstack 0
 26799  01B5CE                     ___flsub:
 26800                           	opt callstack 0
 26801                           
 26802                           ;stkvar	_a @ sp[(0)+-8]
 26803                           
 26804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26805                           ;incstack = 0
 26806 ;; hardware stack exceeded
 26807  01B5CE  0EFB               	movlw	-5
 26808  01B5D0  7EE3               	btg	plusw1,7,c
 26809                           
 26810                           ;stkvar	_a @ sp[(0)+-8]
 26811  01B5D2  0EF8               	movlw	-8
 26812  01B5D4  006F FF8F FFE6     	movff	plusw1,postinc1
 26813  01B5DA  006F FF8F FFE6     	movff	plusw1,postinc1
 26814  01B5E0  006F FF8F FFE6     	movff	plusw1,postinc1
 26815  01B5E6  006F FF8F FFE6     	movff	plusw1,postinc1
 26816                           
 26817                           ;stkvar	_b @ sp[(-4)+-4]
 26818  01B5EC  0EF8               	movlw	-8
 26819  01B5EE  006F FF8F FFE6     	movff	plusw1,postinc1
 26820  01B5F4  006F FF8F FFE6     	movff	plusw1,postinc1
 26821  01B5FA  006F FF8F FFE6     	movff	plusw1,postinc1
 26822  01B600  006F FF8F FFE6     	movff	plusw1,postinc1
 26823  01B606  ECC8  F0A2         	call	___fladd	;wreg free
 26824                           
 26825                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26826  01B60A  0EF8               	movlw	248
 26827  01B60C  26E1               	addwf	fsr1l,f,c
 26828  01B60E  0EFF               	movlw	255
 26829  01B610  22E2               	addwfc	fsr1h,f,c
 26830  01B612  0012               	return		;funcret
 26831  01B614                     __end_of___flsub:
 26832                           	opt callstack 0
 26833                           
 26834 ;; *************** function ___fladd *****************
 26835 ;; Defined at:
 26836 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26837 ;; Parameters:    Size  Location     Type
 26838 ;;  b               4  [STACK] float 
 26839 ;;  a               4  [STACK] float 
 26840 ;; Auto vars:     Size  Location     Type
 26841 ;;  grs             1  [STACK] unsigned char 
 26842 ;;  bexp            1  [STACK] unsigned char 
 26843 ;;  aexp            1  [STACK] unsigned char 
 26844 ;;  signs           1  [STACK] unsigned char 
 26845 ;; Return value:  Size  Location     Type
 26846 ;;                  4  [STACK] unsigned char 
 26847 ;; Registers used:
 26848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26849 ;; Tracked objects:
 26850 ;;		On entry : 0/0
 26851 ;;		On exit  : 0/0
 26852 ;;		Unchanged: 0/0
 26853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26858 ;;Total ram usage:        0 bytes
 26859 ;; Hardware stack levels used:    1
 26860 ;; Hardware stack levels required when called:   15
 26861 ;; This function calls:
 26862 ;;		Nothing
 26863 ;; This function is called by:
 26864 ;;		_main
 26865 ;;		_conv_raw_result
 26866 ;;		_lp_filter
 26867 ;;		_calc_model_data
 26868 ;;		_efgtoa
 26869 ;;		___asfladd
 26870 ;;		___flsub
 26871 ;; This function uses a reentrant model
 26872 ;;
 26873                           
 26874                           	psect	text107
 26875  014590                     __ptext107:
 26876                           	opt callstack 0
 26877  014590                     ___fladd:
 26878                           	opt callstack 0
 26879                           
 26880                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26881  014590  52E6               	movf	postinc1,f,c
 26882  014592  52E6               	movf	postinc1,f,c
 26883  014594  52E6               	movf	postinc1,f,c
 26884  014596  52E6               	movf	postinc1,f,c
 26885                           
 26886                           ;stkvar	_b @ sp[(-4)+-4]
 26887                           
 26888                           ;incstack = 0
 26889 ;; hardware stack exceeded
 26890  014598  0EFB               	movlw	251
 26891  01459A  24E1               	addwf	fsr1l,w,c
 26892  01459C  6ED9               	movwf	fsr2l,c
 26893  01459E  0EFF               	movlw	255
 26894  0145A0  20E2               	addwfc	fsr1h,w,c
 26895  0145A2  6EDA               	movwf	fsr2h,c
 26896  0145A4  50DF               	movf	indf2,w,c
 26897  0145A6  6E0C               	movwf	(btemp+11)^0,c
 26898  0145A8  0E80               	movlw	128
 26899  0145AA  160C               	andwf	(btemp+11)^0,f,c
 26900                           
 26901                           ;stkvar	_signs @ sp[(-4)+3]
 26902  0145AC  0EFF               	movlw	-1
 26903  0145AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26904                           
 26905                           ;stkvar	_b @ sp[(-4)+-4]
 26906  0145B4  0EFB               	movlw	251
 26907  0145B6  24E1               	addwf	fsr1l,w,c
 26908  0145B8  6ED9               	movwf	fsr2l,c
 26909  0145BA  0EFF               	movlw	255
 26910  0145BC  20E2               	addwfc	fsr1h,w,c
 26911  0145BE  6EDA               	movwf	fsr2h,c
 26912  0145C0  50DF               	movf	indf2,w,c
 26913  0145C2  6E0C               	movwf	(btemp+11)^0,c
 26914  0145C4  90D8               	bcf	status,0,c
 26915  0145C6  340C               	rlcf	(btemp+11)^0,w,c
 26916  0145C8  6E0B               	movwf	(btemp+10)^0,c
 26917                           
 26918                           ;stkvar	_bexp @ sp[(-4)+1]
 26919  0145CA  0EFD               	movlw	-3
 26920  0145CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26921                           
 26922                           ;stkvar	_b @ sp[(-4)+-4]
 26923  0145D2  0EFA               	movlw	250
 26924  0145D4  24E1               	addwf	fsr1l,w,c
 26925  0145D6  6ED9               	movwf	fsr2l,c
 26926  0145D8  0EFF               	movlw	255
 26927  0145DA  20E2               	addwfc	fsr1h,w,c
 26928  0145DC  6EDA               	movwf	fsr2h,c
 26929  0145DE  AEDF               	btfss	indf2,7,c
 26930  0145E0  D002               	goto	l7716
 26931                           
 26932                           ;stkvar	_bexp @ sp[(-4)+1]
 26933  0145E2  0EFD               	movlw	-3
 26934  0145E4  80E3               	bsf	plusw1,0,c
 26935  0145E6                     l7716:
 26936                           
 26937                           ;stkvar	_bexp @ sp[(-4)+1]
 26938  0145E6  0EFD               	movlw	-3
 26939  0145E8  50E3               	movf	plusw1,w,c
 26940  0145EA  B4D8               	btfsc	status,2,c
 26941  0145EC  D027               	goto	l7726
 26942                           
 26943                           ;stkvar	_bexp @ sp[(-4)+1]
 26944  0145EE  0EFD               	movlw	-3
 26945  0145F0  28E3               	incf	plusw1,w,c
 26946  0145F2  A4D8               	btfss	status,2,c
 26947  0145F4  D018               	goto	l7722
 26948  0145F6  0E00               	movlw	0
 26949  0145F8  6E09               	movwf	(btemp+8)^0,c
 26950  0145FA  0E00               	movlw	0
 26951  0145FC  6E0A               	movwf	(btemp+9)^0,c
 26952  0145FE  0E00               	movlw	0
 26953  014600  6E0B               	movwf	(btemp+10)^0,c
 26954  014602  0E00               	movlw	0
 26955  014604  6E0C               	movwf	(btemp+11)^0,c
 26956                           
 26957                           ;stkvar	_b @ sp[(-4)+-4]
 26958  014606  0EF8               	movlw	-8
 26959  014608  0060  F027  FFE3   	movff	btemp+8,plusw1
 26960  01460E  0EF9               	movlw	-7
 26961  014610  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26962  014616  0EFA               	movlw	-6
 26963  014618  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26964  01461E  0EFB               	movlw	-5
 26965  014620  0060  F033  FFE3   	movff	btemp+11,plusw1
 26966  014626                     l7722:
 26967                           
 26968                           ;stkvar	_b @ sp[(-4)+-4]
 26969  014626  0EFA               	movlw	-6
 26970  014628  8EE3               	bsf	plusw1,7,c
 26971                           
 26972                           ;stkvar	_b @ sp[(-4)+-4]
 26973  01462A  0EFB               	movlw	251
 26974  01462C  24E1               	addwf	fsr1l,w,c
 26975  01462E  6ED9               	movwf	fsr2l,c
 26976  014630  0EFF               	movlw	255
 26977  014632  20E2               	addwfc	fsr1h,w,c
 26978  014634  6EDA               	movwf	fsr2h,c
 26979  014636  0E00               	movlw	0
 26980  014638  6EDF               	movwf	indf2,c
 26981  01463A  D018               	goto	l7728
 26982  01463C                     l7726:
 26983  01463C  0E00               	movlw	0
 26984  01463E  6E09               	movwf	(btemp+8)^0,c
 26985  014640  0E00               	movlw	0
 26986  014642  6E0A               	movwf	(btemp+9)^0,c
 26987  014644  0E00               	movlw	0
 26988  014646  6E0B               	movwf	(btemp+10)^0,c
 26989  014648  0E00               	movlw	0
 26990  01464A  6E0C               	movwf	(btemp+11)^0,c
 26991                           
 26992                           ;stkvar	_b @ sp[(-4)+-4]
 26993  01464C  0EF8               	movlw	-8
 26994  01464E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26995  014654  0EF9               	movlw	-7
 26996  014656  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26997  01465C  0EFA               	movlw	-6
 26998  01465E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26999  014664  0EFB               	movlw	-5
 27000  014666  0060  F033  FFE3   	movff	btemp+11,plusw1
 27001  01466C                     l7728:
 27002                           
 27003                           ;stkvar	_a @ sp[(-4)+-8]
 27004  01466C  0EF7               	movlw	247
 27005  01466E  24E1               	addwf	fsr1l,w,c
 27006  014670  6ED9               	movwf	fsr2l,c
 27007  014672  0EFF               	movlw	255
 27008  014674  20E2               	addwfc	fsr1h,w,c
 27009  014676  6EDA               	movwf	fsr2h,c
 27010  014678  50DF               	movf	indf2,w,c
 27011  01467A  6E0C               	movwf	(btemp+11)^0,c
 27012  01467C  0E80               	movlw	128
 27013  01467E  160C               	andwf	(btemp+11)^0,f,c
 27014                           
 27015                           ;stkvar	_aexp @ sp[(-4)+2]
 27016  014680  0EFE               	movlw	-2
 27017  014682  0060  F033  FFE3   	movff	btemp+11,plusw1
 27018                           
 27019                           ;stkvar	_signs @ sp[(-4)+3]
 27020                           ;stkvar	_aexp @ sp[(-4)+2]
 27021  014688  50E1               	movf	fsr1l,w,c
 27022  01468A  0FFE               	addlw	-2
 27023  01468C  6ED9               	movwf	fsr2l,c
 27024  01468E  50E2               	movf	fsr1h,w,c
 27025  014690  6EDA               	movwf	fsr2h,c
 27026  014692  0EFF               	movlw	255
 27027  014694  22DA               	addwfc	fsr2h,f,c
 27028  014696  0EFF               	movlw	-1
 27029  014698  50E3               	movf	plusw1,w,c
 27030  01469A  18DE               	xorwf	postinc2,w,c
 27031  01469C  B4D8               	btfsc	status,2,c
 27032  01469E  D002               	goto	l7734
 27033                           
 27034                           ;stkvar	_signs @ sp[(-4)+3]
 27035  0146A0  0EFF               	movlw	-1
 27036  0146A2  8CE3               	bsf	plusw1,6,c
 27037  0146A4                     l7734:
 27038                           
 27039                           ;stkvar	_a @ sp[(-4)+-8]
 27040  0146A4  0EF7               	movlw	247
 27041  0146A6  24E1               	addwf	fsr1l,w,c
 27042  0146A8  6ED9               	movwf	fsr2l,c
 27043  0146AA  0EFF               	movlw	255
 27044  0146AC  20E2               	addwfc	fsr1h,w,c
 27045  0146AE  6EDA               	movwf	fsr2h,c
 27046  0146B0  50DF               	movf	indf2,w,c
 27047  0146B2  6E0C               	movwf	(btemp+11)^0,c
 27048  0146B4  90D8               	bcf	status,0,c
 27049  0146B6  340C               	rlcf	(btemp+11)^0,w,c
 27050  0146B8  6E0B               	movwf	(btemp+10)^0,c
 27051                           
 27052                           ;stkvar	_aexp @ sp[(-4)+2]
 27053  0146BA  0EFE               	movlw	-2
 27054  0146BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27055                           
 27056                           ;stkvar	_a @ sp[(-4)+-8]
 27057  0146C2  0EF6               	movlw	246
 27058  0146C4  24E1               	addwf	fsr1l,w,c
 27059  0146C6  6ED9               	movwf	fsr2l,c
 27060  0146C8  0EFF               	movlw	255
 27061  0146CA  20E2               	addwfc	fsr1h,w,c
 27062  0146CC  6EDA               	movwf	fsr2h,c
 27063  0146CE  AEDF               	btfss	indf2,7,c
 27064  0146D0  D002               	goto	l7740
 27065                           
 27066                           ;stkvar	_aexp @ sp[(-4)+2]
 27067  0146D2  0EFE               	movlw	-2
 27068  0146D4  80E3               	bsf	plusw1,0,c
 27069  0146D6                     l7740:
 27070                           
 27071                           ;stkvar	_aexp @ sp[(-4)+2]
 27072  0146D6  0EFE               	movlw	-2
 27073  0146D8  50E3               	movf	plusw1,w,c
 27074  0146DA  B4D8               	btfsc	status,2,c
 27075  0146DC  D027               	goto	l7750
 27076                           
 27077                           ;stkvar	_aexp @ sp[(-4)+2]
 27078  0146DE  0EFE               	movlw	-2
 27079  0146E0  28E3               	incf	plusw1,w,c
 27080  0146E2  A4D8               	btfss	status,2,c
 27081  0146E4  D018               	goto	l7746
 27082  0146E6  0E00               	movlw	0
 27083  0146E8  6E09               	movwf	(btemp+8)^0,c
 27084  0146EA  0E00               	movlw	0
 27085  0146EC  6E0A               	movwf	(btemp+9)^0,c
 27086  0146EE  0E00               	movlw	0
 27087  0146F0  6E0B               	movwf	(btemp+10)^0,c
 27088  0146F2  0E00               	movlw	0
 27089  0146F4  6E0C               	movwf	(btemp+11)^0,c
 27090                           
 27091                           ;stkvar	_a @ sp[(-4)+-8]
 27092  0146F6  0EF4               	movlw	-12
 27093  0146F8  0060  F027  FFE3   	movff	btemp+8,plusw1
 27094  0146FE  0EF5               	movlw	-11
 27095  014700  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27096  014706  0EF6               	movlw	-10
 27097  014708  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27098  01470E  0EF7               	movlw	-9
 27099  014710  0060  F033  FFE3   	movff	btemp+11,plusw1
 27100  014716                     l7746:
 27101                           
 27102                           ;stkvar	_a @ sp[(-4)+-8]
 27103  014716  0EF6               	movlw	-10
 27104  014718  8EE3               	bsf	plusw1,7,c
 27105                           
 27106                           ;stkvar	_a @ sp[(-4)+-8]
 27107  01471A  0EF7               	movlw	247
 27108  01471C  24E1               	addwf	fsr1l,w,c
 27109  01471E  6ED9               	movwf	fsr2l,c
 27110  014720  0EFF               	movlw	255
 27111  014722  20E2               	addwfc	fsr1h,w,c
 27112  014724  6EDA               	movwf	fsr2h,c
 27113  014726  0E00               	movlw	0
 27114  014728  6EDF               	movwf	indf2,c
 27115  01472A  D018               	goto	l7752
 27116  01472C                     l7750:
 27117  01472C  0E00               	movlw	0
 27118  01472E  6E09               	movwf	(btemp+8)^0,c
 27119  014730  0E00               	movlw	0
 27120  014732  6E0A               	movwf	(btemp+9)^0,c
 27121  014734  0E00               	movlw	0
 27122  014736  6E0B               	movwf	(btemp+10)^0,c
 27123  014738  0E00               	movlw	0
 27124  01473A  6E0C               	movwf	(btemp+11)^0,c
 27125                           
 27126                           ;stkvar	_a @ sp[(-4)+-8]
 27127  01473C  0EF4               	movlw	-12
 27128  01473E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27129  014744  0EF5               	movlw	-11
 27130  014746  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27131  01474C  0EF6               	movlw	-10
 27132  01474E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27133  014754  0EF7               	movlw	-9
 27134  014756  0060  F033  FFE3   	movff	btemp+11,plusw1
 27135  01475C                     l7752:
 27136                           
 27137                           ;stkvar	_bexp @ sp[(-4)+1]
 27138                           ;stkvar	_aexp @ sp[(-4)+2]
 27139  01475C  50E1               	movf	fsr1l,w,c
 27140  01475E  0FFE               	addlw	-2
 27141  014760  6ED9               	movwf	fsr2l,c
 27142  014762  50E2               	movf	fsr1h,w,c
 27143  014764  6EDA               	movwf	fsr2h,c
 27144  014766  0EFF               	movlw	255
 27145  014768  22DA               	addwfc	fsr2h,f,c
 27146  01476A  0EFD               	movlw	-3
 27147  01476C  50E3               	movf	plusw1,w,c
 27148  01476E  5CDE               	subwf	postinc2,w,c
 27149  014770  B0D8               	btfsc	status,0,c
 27150  014772  D0A4               	goto	l7788
 27151                           
 27152                           ;stkvar	_signs @ sp[(-4)+3]
 27153  014774  0EFF               	movlw	-1
 27154  014776  ACE3               	btfss	plusw1,6,c
 27155  014778  D002               	goto	l7758
 27156                           
 27157                           ;stkvar	_signs @ sp[(-4)+3]
 27158  01477A  0EFF               	movlw	-1
 27159  01477C  7EE3               	btg	plusw1,7,c
 27160  01477E                     l7758:
 27161                           
 27162                           ;stkvar	_bexp @ sp[(-4)+1]
 27163                           ;stkvar	_grs @ sp[(-4)+0]
 27164  01477E  0EFD               	movlw	-3
 27165  014780  006F FF8C  F001    	movff	plusw1,btemp
 27166  014786  0EFC               	movlw	-4
 27167  014788  0060  F007  FFE3   	movff	btemp,plusw1
 27168                           
 27169                           ;stkvar	_aexp @ sp[(-4)+2]
 27170                           ;stkvar	_bexp @ sp[(-4)+1]
 27171  01478E  0EFE               	movlw	-2
 27172  014790  006F FF8C  F001    	movff	plusw1,btemp
 27173  014796  0EFD               	movlw	-3
 27174  014798  0060  F007  FFE3   	movff	btemp,plusw1
 27175                           
 27176                           ;stkvar	_grs @ sp[(-4)+0]
 27177                           ;stkvar	_aexp @ sp[(-4)+2]
 27178  01479E  0EFC               	movlw	-4
 27179  0147A0  006F FF8C  F001    	movff	plusw1,btemp
 27180  0147A6  0EFE               	movlw	-2
 27181  0147A8  0060  F007  FFE3   	movff	btemp,plusw1
 27182                           
 27183                           ;stkvar	_b @ sp[(-4)+-4]
 27184                           ;stkvar	_grs @ sp[(-4)+0]
 27185  0147AE  0EF8               	movlw	-8
 27186  0147B0  006F FF8C  F001    	movff	plusw1,btemp
 27187  0147B6  0EFC               	movlw	-4
 27188  0147B8  0060  F007  FFE3   	movff	btemp,plusw1
 27189                           
 27190                           ;stkvar	_a @ sp[(-4)+-8]
 27191                           ;stkvar	_b @ sp[(-4)+-4]
 27192  0147BE  0EF4               	movlw	-12
 27193  0147C0  006F FF8C  F001    	movff	plusw1,btemp
 27194  0147C6  0EF8               	movlw	-8
 27195  0147C8  0060  F007  FFE3   	movff	btemp,plusw1
 27196                           
 27197                           ;stkvar	_grs @ sp[(-4)+0]
 27198                           ;stkvar	_a @ sp[(-4)+-8]
 27199  0147CE  0EFC               	movlw	-4
 27200  0147D0  006F FF8C  F001    	movff	plusw1,btemp
 27201  0147D6  0EF4               	movlw	-12
 27202  0147D8  0060  F007  FFE3   	movff	btemp,plusw1
 27203                           
 27204                           ;stkvar	_b @ sp[(-4)+-4]
 27205  0147DE  0EF9               	movlw	249
 27206  0147E0  24E1               	addwf	fsr1l,w,c
 27207  0147E2  6ED9               	movwf	fsr2l,c
 27208  0147E4  0EFF               	movlw	255
 27209  0147E6  20E2               	addwfc	fsr1h,w,c
 27210  0147E8  6EDA               	movwf	fsr2h,c
 27211  0147EA  50DF               	movf	indf2,w,c
 27212  0147EC  6E0C               	movwf	(btemp+11)^0,c
 27213                           
 27214                           ;stkvar	_grs @ sp[(-4)+0]
 27215  0147EE  0EFC               	movlw	-4
 27216  0147F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27217                           
 27218                           ;stkvar	_a @ sp[(-4)+-8]
 27219  0147F6  0EF5               	movlw	245
 27220  0147F8  24E1               	addwf	fsr1l,w,c
 27221  0147FA  6ED9               	movwf	fsr2l,c
 27222  0147FC  0EFF               	movlw	255
 27223  0147FE  20E2               	addwfc	fsr1h,w,c
 27224  014800  6EDA               	movwf	fsr2h,c
 27225                           
 27226                           ;stkvar	_b @ sp[(-4)+-4]
 27227  014802  0EF9               	movlw	249
 27228  014804  24E1               	addwf	fsr1l,w,c
 27229  014806  6EE9               	movwf	fsr0l,c
 27230  014808  0EFF               	movlw	255
 27231  01480A  20E2               	addwfc	fsr1h,w,c
 27232  01480C  6EEA               	movwf	fsr0h,c
 27233  01480E  006F FF7F FFEF     	movff	indf2,indf0
 27234                           
 27235                           ;stkvar	_grs @ sp[(-4)+0]
 27236                           ;stkvar	_a @ sp[(-4)+-8]
 27237  014814  0EF5               	movlw	245
 27238  014816  24E1               	addwf	fsr1l,w,c
 27239  014818  6ED9               	movwf	fsr2l,c
 27240  01481A  0EFF               	movlw	255
 27241  01481C  20E2               	addwfc	fsr1h,w,c
 27242  01481E  6EDA               	movwf	fsr2h,c
 27243  014820  0EFC               	movlw	-4
 27244  014822  006F FF8F FFDF     	movff	plusw1,indf2
 27245                           
 27246                           ;stkvar	_b @ sp[(-4)+-4]
 27247  014828  0EFA               	movlw	250
 27248  01482A  24E1               	addwf	fsr1l,w,c
 27249  01482C  6ED9               	movwf	fsr2l,c
 27250  01482E  0EFF               	movlw	255
 27251  014830  20E2               	addwfc	fsr1h,w,c
 27252  014832  6EDA               	movwf	fsr2h,c
 27253  014834  50DF               	movf	indf2,w,c
 27254  014836  6E0C               	movwf	(btemp+11)^0,c
 27255                           
 27256                           ;stkvar	_grs @ sp[(-4)+0]
 27257  014838  0EFC               	movlw	-4
 27258  01483A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27259                           
 27260                           ;stkvar	_a @ sp[(-4)+-8]
 27261  014840  0EF6               	movlw	246
 27262  014842  24E1               	addwf	fsr1l,w,c
 27263  014844  6ED9               	movwf	fsr2l,c
 27264  014846  0EFF               	movlw	255
 27265  014848  20E2               	addwfc	fsr1h,w,c
 27266  01484A  6EDA               	movwf	fsr2h,c
 27267                           
 27268                           ;stkvar	_b @ sp[(-4)+-4]
 27269  01484C  0EFA               	movlw	250
 27270  01484E  24E1               	addwf	fsr1l,w,c
 27271  014850  6EE9               	movwf	fsr0l,c
 27272  014852  0EFF               	movlw	255
 27273  014854  20E2               	addwfc	fsr1h,w,c
 27274  014856  6EEA               	movwf	fsr0h,c
 27275  014858  006F FF7F FFEF     	movff	indf2,indf0
 27276                           
 27277                           ;stkvar	_grs @ sp[(-4)+0]
 27278                           ;stkvar	_a @ sp[(-4)+-8]
 27279  01485E  0EF6               	movlw	246
 27280  014860  24E1               	addwf	fsr1l,w,c
 27281  014862  6ED9               	movwf	fsr2l,c
 27282  014864  0EFF               	movlw	255
 27283  014866  20E2               	addwfc	fsr1h,w,c
 27284  014868  6EDA               	movwf	fsr2h,c
 27285  01486A  0EFC               	movlw	-4
 27286  01486C  006F FF8F FFDF     	movff	plusw1,indf2
 27287                           
 27288                           ;stkvar	_b @ sp[(-4)+-4]
 27289  014872  0EFB               	movlw	251
 27290  014874  24E1               	addwf	fsr1l,w,c
 27291  014876  6ED9               	movwf	fsr2l,c
 27292  014878  0EFF               	movlw	255
 27293  01487A  20E2               	addwfc	fsr1h,w,c
 27294  01487C  6EDA               	movwf	fsr2h,c
 27295  01487E  50DF               	movf	indf2,w,c
 27296  014880  6E0C               	movwf	(btemp+11)^0,c
 27297                           
 27298                           ;stkvar	_grs @ sp[(-4)+0]
 27299  014882  0EFC               	movlw	-4
 27300  014884  0060  F033  FFE3   	movff	btemp+11,plusw1
 27301                           
 27302                           ;stkvar	_a @ sp[(-4)+-8]
 27303  01488A  0EF7               	movlw	247
 27304  01488C  24E1               	addwf	fsr1l,w,c
 27305  01488E  6ED9               	movwf	fsr2l,c
 27306  014890  0EFF               	movlw	255
 27307  014892  20E2               	addwfc	fsr1h,w,c
 27308  014894  6EDA               	movwf	fsr2h,c
 27309                           
 27310                           ;stkvar	_b @ sp[(-4)+-4]
 27311  014896  0EFB               	movlw	251
 27312  014898  24E1               	addwf	fsr1l,w,c
 27313  01489A  6EE9               	movwf	fsr0l,c
 27314  01489C  0EFF               	movlw	255
 27315  01489E  20E2               	addwfc	fsr1h,w,c
 27316  0148A0  6EEA               	movwf	fsr0h,c
 27317  0148A2  006F FF7F FFEF     	movff	indf2,indf0
 27318                           
 27319                           ;stkvar	_grs @ sp[(-4)+0]
 27320                           ;stkvar	_a @ sp[(-4)+-8]
 27321  0148A8  0EF7               	movlw	247
 27322  0148AA  24E1               	addwf	fsr1l,w,c
 27323  0148AC  6ED9               	movwf	fsr2l,c
 27324  0148AE  0EFF               	movlw	255
 27325  0148B0  20E2               	addwfc	fsr1h,w,c
 27326  0148B2  6EDA               	movwf	fsr2h,c
 27327  0148B4  0EFC               	movlw	-4
 27328  0148B6  006F FF8F FFDF     	movff	plusw1,indf2
 27329  0148BC                     l7788:
 27330                           
 27331                           ;stkvar	_grs @ sp[(-4)+0]
 27332  0148BC  0EFC               	movlw	-4
 27333  0148BE  6AE3               	clrf	plusw1,c
 27334                           
 27335                           ;stkvar	_aexp @ sp[(-4)+2]
 27336  0148C0  0EFE               	movlw	-2
 27337  0148C2  50E3               	movf	plusw1,w,c
 27338  0148C4  6E0B               	movwf	(btemp+10)^0,c
 27339  0148C6  6A0C               	clrf	(btemp+11)^0,c
 27340                           
 27341                           ;stkvar	_bexp @ sp[(-4)+1]
 27342  0148C8  0EFD               	movlw	-3
 27343  0148CA  50E3               	movf	plusw1,w,c
 27344  0148CC  5E0B               	subwf	(btemp+10)^0,f,c
 27345  0148CE  0E00               	movlw	0
 27346  0148D0  5A0C               	subwfb	(btemp+11)^0,f,c
 27347  0148D2  BE0C               	btfsc	(btemp+11)^0,7,c
 27348  0148D4  D062               	goto	l7812
 27349  0148D6  500C               	movf	(btemp+11)^0,w,c
 27350  0148D8  E104               	bnz	u5560
 27351  0148DA  0E1A               	movlw	26
 27352  0148DC  5C0B               	subwf	(btemp+10)^0,w,c
 27353  0148DE  A0D8               	btfss	status,0,c
 27354  0148E0  D05C               	goto	l7812
 27355  0148E2                     u5560:
 27356                           
 27357                           ;stkvar	_b @ sp[(-4)+-4]
 27358  0148E2  0EF8               	movlw	-8
 27359  0148E4  50E3               	movf	plusw1,w,c
 27360  0148E6  E10A               	bnz	u5571
 27361  0148E8  0EF9               	movlw	-7
 27362  0148EA  50E3               	movf	plusw1,w,c
 27363  0148EC  E107               	bnz	u5571
 27364  0148EE  0EFA               	movlw	-6
 27365  0148F0  50E3               	movf	plusw1,w,c
 27366  0148F2  E104               	bnz	u5571
 27367  0148F4  0EFB               	movlw	-5
 27368  0148F6  50E3               	movf	plusw1,w,c
 27369  0148F8  B4D8               	btfsc	status,2,c
 27370  0148FA  D003               	goto	u5570
 27371  0148FC                     u5571:
 27372  0148FC  6A0C               	clrf	(btemp+11)^0,c
 27373  0148FE  2A0C               	incf	(btemp+11)^0,f,c
 27374  014900  D001               	goto	u5588
 27375  014902                     u5570:
 27376  014902  6A0C               	clrf	(btemp+11)^0,c
 27377  014904                     u5588:
 27378                           
 27379                           ;stkvar	_grs @ sp[(-4)+0]
 27380  014904  0EFC               	movlw	-4
 27381  014906  0060  F033  FFE3   	movff	btemp+11,plusw1
 27382                           
 27383                           ;stkvar	_b @ sp[(-4)+-4]
 27384  01490C  0EF8               	movlw	-8
 27385  01490E  6AE3               	clrf	plusw1,c
 27386  014910  0EF9               	movlw	-7
 27387  014912  6AE3               	clrf	plusw1,c
 27388  014914  0EFA               	movlw	-6
 27389  014916  6AE3               	clrf	plusw1,c
 27390  014918  0EFB               	movlw	-5
 27391  01491A  6AE3               	clrf	plusw1,c
 27392                           
 27393                           ;stkvar	_aexp @ sp[(-4)+2]
 27394                           ;stkvar	_bexp @ sp[(-4)+1]
 27395  01491C  0EFE               	movlw	-2
 27396  01491E  006F FF8C  F001    	movff	plusw1,btemp
 27397  014924  0EFD               	movlw	-3
 27398  014926  0060  F007  FFE3   	movff	btemp,plusw1
 27399  01492C  D042               	goto	u5620
 27400  01492E                     l7798:
 27401                           
 27402                           ;stkvar	_grs @ sp[(-4)+0]
 27403  01492E  0EFC               	movlw	-4
 27404  014930  A0E3               	btfss	plusw1,0,c
 27405  014932  D00D               	goto	l7802
 27406                           
 27407                           ;stkvar	_grs @ sp[(-4)+0]
 27408  014934  0EFC               	movlw	-4
 27409  014936  006F FF8C  F00C    	movff	plusw1,btemp+11
 27410  01493C  90D8               	bcf	status,0,c
 27411  01493E  320C               	rrcf	(btemp+11)^0,f,c
 27412  014940  0E01               	movlw	1
 27413  014942  120C               	iorwf	(btemp+11)^0,f,c
 27414                           
 27415                           ;stkvar	_grs @ sp[(-4)+0]
 27416  014944  0EFC               	movlw	-4
 27417  014946  0060  F033  FFE3   	movff	btemp+11,plusw1
 27418  01494C  D009               	goto	l7804
 27419  01494E                     l7802:
 27420                           
 27421                           ;stkvar	_grs @ sp[(-4)+0]
 27422  01494E  50E1               	movf	fsr1l,w,c
 27423  014950  0FFC               	addlw	-4
 27424  014952  6ED9               	movwf	fsr2l,c
 27425  014954  50E2               	movf	fsr1h,w,c
 27426  014956  6EDA               	movwf	fsr2h,c
 27427  014958  0EFF               	movlw	255
 27428  01495A  22DA               	addwfc	fsr2h,f,c
 27429  01495C  90D8               	bcf	status,0,c
 27430  01495E  32DF               	rrcf	indf2,f,c
 27431  014960                     l7804:
 27432                           
 27433                           ;stkvar	_b @ sp[(-4)+-4]
 27434  014960  0EF8               	movlw	-8
 27435  014962  A0E3               	btfss	plusw1,0,c
 27436  014964  D002               	goto	l7808
 27437                           
 27438                           ;stkvar	_grs @ sp[(-4)+0]
 27439  014966  0EFC               	movlw	-4
 27440  014968  8EE3               	bsf	plusw1,7,c
 27441  01496A                     l7808:
 27442  01496A  0E01               	movlw	1
 27443  01496C  6E0C               	movwf	(btemp+11)^0,c
 27444                           
 27445                           ;stkvar	_b @ sp[(-4)+-4]
 27446  01496E  50E1               	movf	fsr1l,w,c
 27447  014970  0FF8               	addlw	-8
 27448  014972  6ED9               	movwf	fsr2l,c
 27449  014974  50E2               	movf	fsr1h,w,c
 27450  014976  6EDA               	movwf	fsr2h,c
 27451  014978  0EFF               	movlw	255
 27452  01497A  22DA               	addwfc	fsr2h,f,c
 27453  01497C  280C               	incf	(btemp+11)^0,w,c
 27454  01497E  52DE               	movf	postinc2,f,c
 27455  014980  D008               	goto	u5610
 27456  014982                     u5615:
 27457  014982  52DE               	movf	postinc2,f,c
 27458  014984  90D8               	bcf	status,0,c
 27459  014986  BEDC               	btfsc	preinc2,7,c
 27460  014988  80D8               	bsf	status,0,c
 27461  01498A  32DD               	rrcf	postdec2,f,c
 27462  01498C  32DD               	rrcf	postdec2,f,c
 27463  01498E  32DD               	rrcf	postdec2,f,c
 27464  014990  32DE               	rrcf	postinc2,f,c
 27465  014992                     u5610:
 27466  014992  2EE8               	decfsz	wreg,f,c
 27467  014994  D7F6               	goto	u5615
 27468                           
 27469                           ;stkvar	_bexp @ sp[(-4)+1]
 27470  014996  0EFD               	movlw	-3
 27471  014998  2AE3               	incf	plusw1,f,c
 27472  01499A                     l7812:
 27473                           
 27474                           ;stkvar	_aexp @ sp[(-4)+2]
 27475                           ;stkvar	_bexp @ sp[(-4)+1]
 27476  01499A  50E1               	movf	fsr1l,w,c
 27477  01499C  0FFD               	addlw	-3
 27478  01499E  6ED9               	movwf	fsr2l,c
 27479  0149A0  50E2               	movf	fsr1h,w,c
 27480  0149A2  6EDA               	movwf	fsr2h,c
 27481  0149A4  0EFF               	movlw	255
 27482  0149A6  22DA               	addwfc	fsr2h,f,c
 27483  0149A8  0EFE               	movlw	-2
 27484  0149AA  50E3               	movf	plusw1,w,c
 27485  0149AC  5CDE               	subwf	postinc2,w,c
 27486  0149AE  A0D8               	btfss	status,0,c
 27487  0149B0  D7BE               	goto	l7798
 27488  0149B2                     u5620:
 27489                           
 27490                           ;stkvar	_signs @ sp[(-4)+3]
 27491  0149B2  0EFF               	movlw	-1
 27492  0149B4  BCE3               	btfsc	plusw1,6,c
 27493  0149B6  D066               	goto	l7840
 27494                           
 27495                           ;stkvar	_bexp @ sp[(-4)+1]
 27496  0149B8  0EFD               	movlw	-3
 27497  0149BA  50E3               	movf	plusw1,w,c
 27498  0149BC  B4D8               	btfsc	status,2,c
 27499  0149BE  D0F2               	goto	u5720
 27500                           
 27501                           ;stkvar	_a @ sp[(-4)+-8]
 27502                           ;stkvar	_b @ sp[(-4)+-4]
 27503  0149C0  0EF8               	movlw	-8
 27504  0149C2  50E3               	movf	plusw1,w,c
 27505  0149C4  6E01               	movwf	btemp^0,c
 27506  0149C6  0EF4               	movlw	-12
 27507  0149C8  50E3               	movf	plusw1,w,c
 27508  0149CA  2601               	addwf	btemp^0,f,c
 27509  0149CC  0EF8               	movlw	-8
 27510  0149CE  0060  F007  FFE3   	movff	btemp,plusw1
 27511  0149D4  0EF9               	movlw	-7
 27512  0149D6  50E3               	movf	plusw1,w,c
 27513  0149D8  6E01               	movwf	btemp^0,c
 27514  0149DA  0EF5               	movlw	-11
 27515  0149DC  50E3               	movf	plusw1,w,c
 27516  0149DE  2201               	addwfc	btemp^0,f,c
 27517  0149E0  0EF9               	movlw	-7
 27518  0149E2  0060  F007  FFE3   	movff	btemp,plusw1
 27519  0149E8  0EFA               	movlw	-6
 27520  0149EA  50E3               	movf	plusw1,w,c
 27521  0149EC  6E01               	movwf	btemp^0,c
 27522  0149EE  0EF6               	movlw	-10
 27523  0149F0  50E3               	movf	plusw1,w,c
 27524  0149F2  2201               	addwfc	btemp^0,f,c
 27525  0149F4  0EFA               	movlw	-6
 27526  0149F6  0060  F007  FFE3   	movff	btemp,plusw1
 27527  0149FC  0EFB               	movlw	-5
 27528  0149FE  50E3               	movf	plusw1,w,c
 27529  014A00  6E01               	movwf	btemp^0,c
 27530  014A02  0EF7               	movlw	-9
 27531  014A04  50E3               	movf	plusw1,w,c
 27532  014A06  2201               	addwfc	btemp^0,f,c
 27533  014A08  0EFB               	movlw	-5
 27534  014A0A  0060  F007  FFE3   	movff	btemp,plusw1
 27535                           
 27536                           ;stkvar	_b @ sp[(-4)+-4]
 27537  014A10  0EFB               	movlw	-5
 27538  014A12  A0E3               	btfss	plusw1,0,c
 27539  014A14  D101               	goto	u5760
 27540                           
 27541                           ;stkvar	_grs @ sp[(-4)+0]
 27542  014A16  0EFC               	movlw	-4
 27543  014A18  A0E3               	btfss	plusw1,0,c
 27544  014A1A  D00D               	goto	l7830
 27545                           
 27546                           ;stkvar	_grs @ sp[(-4)+0]
 27547  014A1C  0EFC               	movlw	-4
 27548  014A1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27549  014A24  90D8               	bcf	status,0,c
 27550  014A26  320C               	rrcf	(btemp+11)^0,f,c
 27551  014A28  0E01               	movlw	1
 27552  014A2A  120C               	iorwf	(btemp+11)^0,f,c
 27553                           
 27554                           ;stkvar	_grs @ sp[(-4)+0]
 27555  014A2C  0EFC               	movlw	-4
 27556  014A2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27557  014A34  D009               	goto	l7832
 27558  014A36                     l7830:
 27559                           
 27560                           ;stkvar	_grs @ sp[(-4)+0]
 27561  014A36  50E1               	movf	fsr1l,w,c
 27562  014A38  0FFC               	addlw	-4
 27563  014A3A  6ED9               	movwf	fsr2l,c
 27564  014A3C  50E2               	movf	fsr1h,w,c
 27565  014A3E  6EDA               	movwf	fsr2h,c
 27566  014A40  0EFF               	movlw	255
 27567  014A42  22DA               	addwfc	fsr2h,f,c
 27568  014A44  90D8               	bcf	status,0,c
 27569  014A46  32DF               	rrcf	indf2,f,c
 27570  014A48                     l7832:
 27571                           
 27572                           ;stkvar	_b @ sp[(-4)+-4]
 27573  014A48  0EF8               	movlw	-8
 27574  014A4A  A0E3               	btfss	plusw1,0,c
 27575  014A4C  D002               	goto	l7836
 27576                           
 27577                           ;stkvar	_grs @ sp[(-4)+0]
 27578  014A4E  0EFC               	movlw	-4
 27579  014A50  8EE3               	bsf	plusw1,7,c
 27580  014A52                     l7836:
 27581  014A52  0E01               	movlw	1
 27582  014A54  6E0C               	movwf	(btemp+11)^0,c
 27583                           
 27584                           ;stkvar	_b @ sp[(-4)+-4]
 27585  014A56  50E1               	movf	fsr1l,w,c
 27586  014A58  0FF8               	addlw	-8
 27587  014A5A  6ED9               	movwf	fsr2l,c
 27588  014A5C  50E2               	movf	fsr1h,w,c
 27589  014A5E  6EDA               	movwf	fsr2h,c
 27590  014A60  0EFF               	movlw	255
 27591  014A62  22DA               	addwfc	fsr2h,f,c
 27592  014A64  280C               	incf	(btemp+11)^0,w,c
 27593  014A66  52DE               	movf	postinc2,f,c
 27594  014A68  D008               	goto	u5680
 27595  014A6A                     u5685:
 27596  014A6A  52DE               	movf	postinc2,f,c
 27597  014A6C  90D8               	bcf	status,0,c
 27598  014A6E  BEDC               	btfsc	preinc2,7,c
 27599  014A70  80D8               	bsf	status,0,c
 27600  014A72  32DD               	rrcf	postdec2,f,c
 27601  014A74  32DD               	rrcf	postdec2,f,c
 27602  014A76  32DD               	rrcf	postdec2,f,c
 27603  014A78  32DE               	rrcf	postinc2,f,c
 27604  014A7A                     u5680:
 27605  014A7A  2EE8               	decfsz	wreg,f,c
 27606  014A7C  D7F6               	goto	u5685
 27607                           
 27608                           ;stkvar	_bexp @ sp[(-4)+1]
 27609  014A7E  0EFD               	movlw	-3
 27610  014A80  2AE3               	incf	plusw1,f,c
 27611  014A82  D0CA               	goto	u5760
 27612  014A84                     l7840:
 27613                           
 27614                           ;stkvar	_a @ sp[(-4)+-8]
 27615                           ;stkvar	_b @ sp[(-4)+-4]
 27616  014A84  50E1               	movf	fsr1l,w,c
 27617  014A86  0FF8               	addlw	-8
 27618  014A88  6ED9               	movwf	fsr2l,c
 27619  014A8A  50E2               	movf	fsr1h,w,c
 27620  014A8C  6EDA               	movwf	fsr2h,c
 27621  014A8E  0EFF               	movlw	255
 27622  014A90  22DA               	addwfc	fsr2h,f,c
 27623  014A92  0EF4               	movlw	-12
 27624  014A94  50E3               	movf	plusw1,w,c
 27625  014A96  5CDE               	subwf	postinc2,w,c
 27626  014A98  0EF5               	movlw	-11
 27627  014A9A  50E3               	movf	plusw1,w,c
 27628  014A9C  58DE               	subwfb	postinc2,w,c
 27629  014A9E  0EF6               	movlw	-10
 27630  014AA0  50E3               	movf	plusw1,w,c
 27631  014AA2  58DE               	subwfb	postinc2,w,c
 27632  014AA4  50DE               	movf	postinc2,w,c
 27633  014AA6  0A80               	xorlw	128
 27634  014AA8  6E01               	movwf	btemp^0,c
 27635  014AAA  0EF7               	movlw	-9
 27636  014AAC  50E3               	movf	plusw1,w,c
 27637  014AAE  0A80               	xorlw	128
 27638  014AB0  5801               	subwfb	btemp^0,w,c
 27639  014AB2  B0D8               	btfsc	status,0,c
 27640  014AB4  D053               	goto	l7852
 27641                           
 27642                           ;stkvar	_b @ sp[(-4)+-4]
 27643                           ;stkvar	_a @ sp[(-4)+-8]
 27644  014AB6  0EF4               	movlw	-12
 27645  014AB8  006F FF8C  F009    	movff	plusw1,btemp+8
 27646  014ABE  0EF5               	movlw	-11
 27647  014AC0  006F FF8C  F00A    	movff	plusw1,btemp+9
 27648  014AC6  0EF6               	movlw	-10
 27649  014AC8  006F FF8C  F00B    	movff	plusw1,btemp+10
 27650  014ACE  0EF7               	movlw	-9
 27651  014AD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 27652  014AD6  0EF8               	movlw	-8
 27653  014AD8  50E3               	movf	plusw1,w,c
 27654  014ADA  5E09               	subwf	(btemp+8)^0,f,c
 27655  014ADC  0EF9               	movlw	-7
 27656  014ADE  50E3               	movf	plusw1,w,c
 27657  014AE0  5A0A               	subwfb	(btemp+9)^0,f,c
 27658  014AE2  0EFA               	movlw	-6
 27659  014AE4  50E3               	movf	plusw1,w,c
 27660  014AE6  5A0B               	subwfb	(btemp+10)^0,f,c
 27661  014AE8  0EFB               	movlw	-5
 27662  014AEA  50E3               	movf	plusw1,w,c
 27663  014AEC  5A0C               	subwfb	(btemp+11)^0,f,c
 27664  014AEE  0EFF               	movlw	255
 27665  014AF0  2409               	addwf	(btemp+8)^0,w,c
 27666  014AF2  6E05               	movwf	(btemp+4)^0,c
 27667  014AF4  0EFF               	movlw	255
 27668  014AF6  200A               	addwfc	(btemp+9)^0,w,c
 27669  014AF8  6E06               	movwf	(btemp+5)^0,c
 27670  014AFA  0EFF               	movlw	255
 27671  014AFC  200B               	addwfc	(btemp+10)^0,w,c
 27672  014AFE  6E07               	movwf	(btemp+6)^0,c
 27673  014B00  0EFF               	movlw	255
 27674  014B02  200C               	addwfc	(btemp+11)^0,w,c
 27675  014B04  6E08               	movwf	(btemp+7)^0,c
 27676                           
 27677                           ;stkvar	_b @ sp[(-4)+-4]
 27678  014B06  0EF8               	movlw	-8
 27679  014B08  0060  F017  FFE3   	movff	btemp+4,plusw1
 27680  014B0E  0EF9               	movlw	-7
 27681  014B10  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27682  014B16  0EFA               	movlw	-6
 27683  014B18  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27684  014B1E  0EFB               	movlw	-5
 27685  014B20  0060  F023  FFE3   	movff	btemp+7,plusw1
 27686                           
 27687                           ;stkvar	_signs @ sp[(-4)+3]
 27688  014B26  0EFF               	movlw	-1
 27689  014B28  7EE3               	btg	plusw1,7,c
 27690                           
 27691                           ;stkvar	_grs @ sp[(-4)+0]
 27692  014B2A  0EFC               	movlw	-4
 27693  014B2C  50E3               	movf	plusw1,w,c
 27694  014B2E  0800               	sublw	0
 27695  014B30  6E0C               	movwf	(btemp+11)^0,c
 27696                           
 27697                           ;stkvar	_grs @ sp[(-4)+0]
 27698  014B32  0EFC               	movlw	-4
 27699  014B34  0060  F033  FFE3   	movff	btemp+11,plusw1
 27700                           
 27701                           ;stkvar	_grs @ sp[(-4)+0]
 27702  014B3A  0EFC               	movlw	-4
 27703  014B3C  50E3               	movf	plusw1,w,c
 27704  014B3E  A4D8               	btfss	status,2,c
 27705  014B40  D020               	goto	l7854
 27706                           
 27707                           ;stkvar	_b @ sp[(-4)+-4]
 27708  014B42  50E1               	movf	fsr1l,w,c
 27709  014B44  0FF8               	addlw	-8
 27710  014B46  6ED9               	movwf	fsr2l,c
 27711  014B48  50E2               	movf	fsr1h,w,c
 27712  014B4A  6EDA               	movwf	fsr2h,c
 27713  014B4C  0EFF               	movlw	255
 27714  014B4E  22DA               	addwfc	fsr2h,f,c
 27715  014B50  2ADE               	incf	postinc2,f,c
 27716  014B52  0E00               	movlw	0
 27717  014B54  22DE               	addwfc	postinc2,f,c
 27718  014B56  22DE               	addwfc	postinc2,f,c
 27719  014B58  22DE               	addwfc	postinc2,f,c
 27720  014B5A  D013               	goto	l7854
 27721  014B5C                     l7852:
 27722                           
 27723                           ;stkvar	_a @ sp[(-4)+-8]
 27724                           ;stkvar	_b @ sp[(-4)+-4]
 27725  014B5C  50E1               	movf	fsr1l,w,c
 27726  014B5E  0FF8               	addlw	-8
 27727  014B60  6ED9               	movwf	fsr2l,c
 27728  014B62  50E2               	movf	fsr1h,w,c
 27729  014B64  6EDA               	movwf	fsr2h,c
 27730  014B66  0EFF               	movlw	255
 27731  014B68  22DA               	addwfc	fsr2h,f,c
 27732  014B6A  0EF4               	movlw	-12
 27733  014B6C  50E3               	movf	plusw1,w,c
 27734  014B6E  5EDE               	subwf	postinc2,f,c
 27735  014B70  0EF5               	movlw	-11
 27736  014B72  50E3               	movf	plusw1,w,c
 27737  014B74  5ADE               	subwfb	postinc2,f,c
 27738  014B76  0EF6               	movlw	-10
 27739  014B78  50E3               	movf	plusw1,w,c
 27740  014B7A  5ADE               	subwfb	postinc2,f,c
 27741  014B7C  0EF7               	movlw	-9
 27742  014B7E  50E3               	movf	plusw1,w,c
 27743  014B80  5ADE               	subwfb	postinc2,f,c
 27744  014B82                     l7854:
 27745                           
 27746                           ;stkvar	_b @ sp[(-4)+-4]
 27747  014B82  0EF8               	movlw	-8
 27748  014B84  50E3               	movf	plusw1,w,c
 27749  014B86  E145               	bnz	l7876
 27750  014B88  0EF9               	movlw	-7
 27751  014B8A  50E3               	movf	plusw1,w,c
 27752  014B8C  E142               	bnz	l7876
 27753  014B8E  0EFA               	movlw	-6
 27754  014B90  50E3               	movf	plusw1,w,c
 27755  014B92  E13F               	bnz	l7876
 27756  014B94  0EFB               	movlw	-5
 27757  014B96  50E3               	movf	plusw1,w,c
 27758  014B98  A4D8               	btfss	status,2,c
 27759  014B9A  D03B               	goto	l7876
 27760                           
 27761                           ;stkvar	_grs @ sp[(-4)+0]
 27762  014B9C  0EFC               	movlw	-4
 27763  014B9E  50E3               	movf	plusw1,w,c
 27764  014BA0  A4D8               	btfss	status,2,c
 27765  014BA2  D037               	goto	l7876
 27766  014BA4                     u5720:
 27767  014BA4  0E00               	movlw	0
 27768  014BA6  6E01               	movwf	btemp^0,c
 27769  014BA8  0E00               	movlw	0
 27770  014BAA  6E02               	movwf	(btemp+1)^0,c
 27771  014BAC  0E00               	movlw	0
 27772  014BAE  6E03               	movwf	(btemp+2)^0,c
 27773  014BB0  0E00               	movlw	0
 27774  014BB2  6E04               	movwf	(btemp+3)^0,c
 27775  014BB4  D0C6               	goto	l2932
 27776  014BB6                     l7862:
 27777                           
 27778                           ;stkvar	_b @ sp[(-4)+-4]
 27779  014BB6  90D8               	bcf	status,0,c
 27780  014BB8  0EF8               	movlw	-8
 27781  014BBA  36E3               	rlcf	plusw1,f,c
 27782  014BBC  0EF9               	movlw	-7
 27783  014BBE  36E3               	rlcf	plusw1,f,c
 27784  014BC0  0EFA               	movlw	-6
 27785  014BC2  36E3               	rlcf	plusw1,f,c
 27786  014BC4  0EFB               	movlw	-5
 27787  014BC6  36E3               	rlcf	plusw1,f,c
 27788                           
 27789                           ;stkvar	_grs @ sp[(-4)+0]
 27790  014BC8  0EFC               	movlw	-4
 27791  014BCA  AEE3               	btfss	plusw1,7,c
 27792  014BCC  D002               	goto	l2944
 27793                           
 27794                           ;stkvar	_b @ sp[(-4)+-4]
 27795  014BCE  0EF8               	movlw	-8
 27796  014BD0  80E3               	bsf	plusw1,0,c
 27797  014BD2                     l2944:
 27798                           
 27799                           ;stkvar	_grs @ sp[(-4)+0]
 27800  014BD2  0EFC               	movlw	-4
 27801  014BD4  A0E3               	btfss	plusw1,0,c
 27802  014BD6  D00E               	goto	l7870
 27803                           
 27804                           ;stkvar	_grs @ sp[(-4)+0]
 27805  014BD8  0EFC               	movlw	-4
 27806  014BDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27807  014BE0  90D8               	bcf	status,0,c
 27808  014BE2  340C               	rlcf	(btemp+11)^0,w,c
 27809  014BE4  6E0B               	movwf	(btemp+10)^0,c
 27810  014BE6  0E01               	movlw	1
 27811  014BE8  120B               	iorwf	(btemp+10)^0,f,c
 27812                           
 27813                           ;stkvar	_grs @ sp[(-4)+0]
 27814  014BEA  0EFC               	movlw	-4
 27815  014BEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27816  014BF2  D009               	goto	l7872
 27817  014BF4                     l7870:
 27818                           
 27819                           ;stkvar	_grs @ sp[(-4)+0]
 27820  014BF4  50E1               	movf	fsr1l,w,c
 27821  014BF6  0FFC               	addlw	-4
 27822  014BF8  6ED9               	movwf	fsr2l,c
 27823  014BFA  50E2               	movf	fsr1h,w,c
 27824  014BFC  6EDA               	movwf	fsr2h,c
 27825  014BFE  0EFF               	movlw	255
 27826  014C00  22DA               	addwfc	fsr2h,f,c
 27827  014C02  90D8               	bcf	status,0,c
 27828  014C04  36DF               	rlcf	indf2,f,c
 27829  014C06                     l7872:
 27830                           
 27831                           ;stkvar	_bexp @ sp[(-4)+1]
 27832  014C06  0EFD               	movlw	-3
 27833  014C08  50E3               	movf	plusw1,w,c
 27834  014C0A  B4D8               	btfsc	status,2,c
 27835  014C0C  D002               	goto	l7876
 27836                           
 27837                           ;stkvar	_bexp @ sp[(-4)+1]
 27838  014C0E  0EFD               	movlw	-3
 27839  014C10  06E3               	decf	plusw1,f,c
 27840  014C12                     l7876:
 27841                           
 27842                           ;stkvar	_b @ sp[(-4)+-4]
 27843  014C12  0EFA               	movlw	-6
 27844  014C14  AEE3               	btfss	plusw1,7,c
 27845  014C16  D7CF               	goto	l7862
 27846  014C18                     u5760:
 27847                           
 27848                           ;stkvar	_aexp @ sp[(-4)+2]
 27849  014C18  0EFE               	movlw	-2
 27850  014C1A  6AE3               	clrf	plusw1,c
 27851                           
 27852                           ;stkvar	_grs @ sp[(-4)+0]
 27853  014C1C  0EFC               	movlw	-4
 27854  014C1E  AEE3               	btfss	plusw1,7,c
 27855  014C20  D00F               	goto	l7890
 27856                           
 27857                           ;stkvar	_grs @ sp[(-4)+0]
 27858  014C22  0EFC               	movlw	-4
 27859  014C24  006F FF8C  F00C    	movff	plusw1,btemp+11
 27860  014C2A  0E7F               	movlw	127
 27861  014C2C  160C               	andwf	(btemp+11)^0,f,c
 27862  014C2E  B4D8               	btfsc	status,2,c
 27863  014C30  D004               	goto	l7886
 27864  014C32                     u5780:
 27865                           
 27866                           ;stkvar	_aexp @ sp[(-4)+2]
 27867  014C32  0EFE               	movlw	-2
 27868  014C34  6AE3               	clrf	plusw1,c
 27869  014C36  2AE3               	incf	plusw1,f,c
 27870  014C38  D003               	goto	l7890
 27871  014C3A                     l7886:
 27872                           
 27873                           ;stkvar	_b @ sp[(-4)+-4]
 27874  014C3A  0EF8               	movlw	-8
 27875  014C3C  B0E3               	btfsc	plusw1,0,c
 27876  014C3E  D7F9               	goto	u5780
 27877  014C40                     l7890:
 27878                           
 27879                           ;stkvar	_aexp @ sp[(-4)+2]
 27880  014C40  0EFE               	movlw	-2
 27881  014C42  50E3               	movf	plusw1,w,c
 27882  014C44  B4D8               	btfsc	status,2,c
 27883  014C46  D02B               	goto	l7902
 27884                           
 27885                           ;stkvar	_b @ sp[(-4)+-4]
 27886  014C48  50E1               	movf	fsr1l,w,c
 27887  014C4A  0FF8               	addlw	-8
 27888  014C4C  6ED9               	movwf	fsr2l,c
 27889  014C4E  50E2               	movf	fsr1h,w,c
 27890  014C50  6EDA               	movwf	fsr2h,c
 27891  014C52  0EFF               	movlw	255
 27892  014C54  22DA               	addwfc	fsr2h,f,c
 27893  014C56  2ADE               	incf	postinc2,f,c
 27894  014C58  0E00               	movlw	0
 27895  014C5A  22DE               	addwfc	postinc2,f,c
 27896  014C5C  22DE               	addwfc	postinc2,f,c
 27897  014C5E  22DE               	addwfc	postinc2,f,c
 27898                           
 27899                           ;stkvar	_b @ sp[(-4)+-4]
 27900  014C60  0EFB               	movlw	-5
 27901  014C62  A0E3               	btfss	plusw1,0,c
 27902  014C64  D01C               	goto	l7902
 27903  014C66  0E01               	movlw	1
 27904  014C68  6E0C               	movwf	(btemp+11)^0,c
 27905                           
 27906                           ;stkvar	_b @ sp[(-4)+-4]
 27907  014C6A  50E1               	movf	fsr1l,w,c
 27908  014C6C  0FF8               	addlw	-8
 27909  014C6E  6ED9               	movwf	fsr2l,c
 27910  014C70  50E2               	movf	fsr1h,w,c
 27911  014C72  6EDA               	movwf	fsr2h,c
 27912  014C74  0EFF               	movlw	255
 27913  014C76  22DA               	addwfc	fsr2h,f,c
 27914  014C78  280C               	incf	(btemp+11)^0,w,c
 27915  014C7A  52DE               	movf	postinc2,f,c
 27916  014C7C  D008               	goto	u5820
 27917  014C7E                     u5825:
 27918  014C7E  52DE               	movf	postinc2,f,c
 27919  014C80  90D8               	bcf	status,0,c
 27920  014C82  BEDC               	btfsc	preinc2,7,c
 27921  014C84  80D8               	bsf	status,0,c
 27922  014C86  32DD               	rrcf	postdec2,f,c
 27923  014C88  32DD               	rrcf	postdec2,f,c
 27924  014C8A  32DD               	rrcf	postdec2,f,c
 27925  014C8C  32DE               	rrcf	postinc2,f,c
 27926  014C8E                     u5820:
 27927  014C8E  2EE8               	decfsz	wreg,f,c
 27928  014C90  D7F6               	goto	u5825
 27929                           
 27930                           ;stkvar	_bexp @ sp[(-4)+1]
 27931  014C92  0EFD               	movlw	-3
 27932  014C94  28E3               	incf	plusw1,w,c
 27933  014C96  B4D8               	btfsc	status,2,c
 27934  014C98  D002               	goto	l7902
 27935                           
 27936                           ;stkvar	_bexp @ sp[(-4)+1]
 27937  014C9A  0EFD               	movlw	-3
 27938  014C9C  2AE3               	incf	plusw1,f,c
 27939  014C9E                     l7902:
 27940                           
 27941                           ;stkvar	_bexp @ sp[(-4)+1]
 27942  014C9E  0EFD               	movlw	-3
 27943  014CA0  28E3               	incf	plusw1,w,c
 27944  014CA2  B4D8               	btfsc	status,2,c
 27945  014CA4  D004               	goto	u5850
 27946                           
 27947                           ;stkvar	_bexp @ sp[(-4)+1]
 27948  014CA6  0EFD               	movlw	-3
 27949  014CA8  50E3               	movf	plusw1,w,c
 27950  014CAA  A4D8               	btfss	status,2,c
 27951  014CAC  D00E               	goto	l7912
 27952  014CAE                     u5850:
 27953                           
 27954                           ;stkvar	_b @ sp[(-4)+-4]
 27955  014CAE  0EF8               	movlw	-8
 27956  014CB0  6AE3               	clrf	plusw1,c
 27957  014CB2  0EF9               	movlw	-7
 27958  014CB4  6AE3               	clrf	plusw1,c
 27959  014CB6  0EFA               	movlw	-6
 27960  014CB8  6AE3               	clrf	plusw1,c
 27961  014CBA  0EFB               	movlw	-5
 27962  014CBC  6AE3               	clrf	plusw1,c
 27963                           
 27964                           ;stkvar	_bexp @ sp[(-4)+1]
 27965  014CBE  0EFD               	movlw	-3
 27966  014CC0  50E3               	movf	plusw1,w,c
 27967  014CC2  A4D8               	btfss	status,2,c
 27968  014CC4  D002               	goto	l7912
 27969                           
 27970                           ;stkvar	_signs @ sp[(-4)+3]
 27971  014CC6  0EFF               	movlw	-1
 27972  014CC8  6AE3               	clrf	plusw1,c
 27973  014CCA                     l7912:
 27974                           
 27975                           ;stkvar	_bexp @ sp[(-4)+1]
 27976  014CCA  0EFD               	movlw	-3
 27977  014CCC  A0E3               	btfss	plusw1,0,c
 27978  014CCE  D009               	goto	l7916
 27979                           
 27980                           ;stkvar	_b @ sp[(-4)+-4]
 27981  014CD0  0EFA               	movlw	250
 27982  014CD2  24E1               	addwf	fsr1l,w,c
 27983  014CD4  6ED9               	movwf	fsr2l,c
 27984  014CD6  0EFF               	movlw	255
 27985  014CD8  20E2               	addwfc	fsr1h,w,c
 27986  014CDA  6EDA               	movwf	fsr2h,c
 27987  014CDC  0E00               	movlw	0
 27988  014CDE  8EDB               	bsf	plusw2,7,c
 27989  014CE0  D008               	goto	l7918
 27990  014CE2                     l7916:
 27991                           
 27992                           ;stkvar	_b @ sp[(-4)+-4]
 27993  014CE2  0EFA               	movlw	250
 27994  014CE4  24E1               	addwf	fsr1l,w,c
 27995  014CE6  6ED9               	movwf	fsr2l,c
 27996  014CE8  0EFF               	movlw	255
 27997  014CEA  20E2               	addwfc	fsr1h,w,c
 27998  014CEC  6EDA               	movwf	fsr2h,c
 27999  014CEE  0E7F               	movlw	127
 28000  014CF0  16DF               	andwf	indf2,f,c
 28001  014CF2                     l7918:
 28002                           
 28003                           ;stkvar	_b @ sp[(-4)+-4]
 28004  014CF2  0EFB               	movlw	251
 28005  014CF4  24E1               	addwf	fsr1l,w,c
 28006  014CF6  6ED9               	movwf	fsr2l,c
 28007  014CF8  0EFF               	movlw	255
 28008  014CFA  20E2               	addwfc	fsr1h,w,c
 28009  014CFC  6EDA               	movwf	fsr2h,c
 28010                           
 28011                           ;stkvar	_bexp @ sp[(-4)+1]
 28012  014CFE  0EFD               	movlw	-3
 28013  014D00  006F FF8C  F00C    	movff	plusw1,btemp+11
 28014  014D06  90D8               	bcf	status,0,c
 28015  014D08  300C               	rrcf	(btemp+11)^0,w,c
 28016  014D0A  6EDF               	movwf	indf2,c
 28017                           
 28018                           ;stkvar	_signs @ sp[(-4)+3]
 28019  014D0C  0EFF               	movlw	-1
 28020  014D0E  AEE3               	btfss	plusw1,7,c
 28021  014D10  D008               	goto	l7924
 28022                           
 28023                           ;stkvar	_b @ sp[(-4)+-4]
 28024  014D12  0EFB               	movlw	251
 28025  014D14  24E1               	addwf	fsr1l,w,c
 28026  014D16  6ED9               	movwf	fsr2l,c
 28027  014D18  0EFF               	movlw	255
 28028  014D1A  20E2               	addwfc	fsr1h,w,c
 28029  014D1C  6EDA               	movwf	fsr2h,c
 28030  014D1E  0E00               	movlw	0
 28031  014D20  8EDB               	bsf	plusw2,7,c
 28032  014D22                     l7924:
 28033                           
 28034                           ;stkvar	_b @ sp[(-4)+-4]
 28035  014D22  0EF8               	movlw	-8
 28036  014D24  006F FF8C  F001    	movff	plusw1,btemp
 28037  014D2A  0EF9               	movlw	-7
 28038  014D2C  006F FF8C  F002    	movff	plusw1,btemp+1
 28039  014D32  0EFA               	movlw	-6
 28040  014D34  006F FF8C  F003    	movff	plusw1,btemp+2
 28041  014D3A  0EFB               	movlw	-5
 28042  014D3C  006F FF8C  F004    	movff	plusw1,btemp+3
 28043  014D42                     l2932:
 28044                           
 28045                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28046  014D42  0EF4               	movlw	244
 28047  014D44  26E1               	addwf	fsr1l,f,c
 28048  014D46  0EFF               	movlw	255
 28049  014D48  22E2               	addwfc	fsr1h,f,c
 28050  014D4A  0012               	return		;funcret
 28051  014D4C                     __end_of___fladd:
 28052                           	opt callstack 0
 28053                           
 28054 ;; *************** function ___flmul *****************
 28055 ;; Defined at:
 28056 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28057 ;; Parameters:    Size  Location     Type
 28058 ;;  b               4  [STACK] unsigned char 
 28059 ;;  a               4  [STACK] unsigned char 
 28060 ;; Auto vars:     Size  Location     Type
 28061 ;;  prod            4  [STACK] struct .
 28062 ;;  grs             4  [STACK] unsigned long 
 28063 ;;  temp            2  [STACK] struct .
 28064 ;;  bexp            1  [STACK] unsigned char 
 28065 ;;  aexp            1  [STACK] unsigned char 
 28066 ;;  sign            1  [STACK] unsigned char 
 28067 ;; Return value:  Size  Location     Type
 28068 ;;                  4  [STACK] unsigned char 
 28069 ;; Registers used:
 28070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28071 ;; Tracked objects:
 28072 ;;		On entry : 0/1
 28073 ;;		On exit  : 0/0
 28074 ;;		Unchanged: 0/0
 28075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28080 ;;Total ram usage:        0 bytes
 28081 ;; Hardware stack levels used:    1
 28082 ;; Hardware stack levels required when called:   15
 28083 ;; This function calls:
 28084 ;;		Nothing
 28085 ;; This function is called by:
 28086 ;;		_conv_raw_result
 28087 ;;		_lp_filter
 28088 ;;		_calc_model_data
 28089 ;;		_calc_bsoc
 28090 ;;		_init_bsoc
 28091 ;;		_efgtoa
 28092 ;; This function uses a reentrant model
 28093 ;;
 28094                           
 28095                           	psect	text108
 28096  013D66                     __ptext108:
 28097                           	opt callstack 0
 28098  013D66                     ___flmul:
 28099                           	opt callstack 0
 28100                           
 28101                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28102  013D66  0E0D               	movlw	13
 28103  013D68  26E1               	addwf	fsr1l,f,c
 28104  013D6A  0E00               	movlw	0
 28105  013D6C  22E2               	addwfc	fsr1h,f,c
 28106                           
 28107                           ;stkvar	_b @ sp[(-13)+-4]
 28108                           
 28109                           ;incstack = 0
 28110 ;; hardware stack exceeded
 28111  013D6E  0EF2               	movlw	242
 28112  013D70  24E1               	addwf	fsr1l,w,c
 28113  013D72  6ED9               	movwf	fsr2l,c
 28114  013D74  0EFF               	movlw	255
 28115  013D76  20E2               	addwfc	fsr1h,w,c
 28116  013D78  6EDA               	movwf	fsr2h,c
 28117  013D7A  50DF               	movf	indf2,w,c
 28118  013D7C  6E0C               	movwf	(btemp+11)^0,c
 28119  013D7E  0E80               	movlw	128
 28120  013D80  160C               	andwf	(btemp+11)^0,f,c
 28121                           
 28122                           ;stkvar	_sign @ sp[(-13)+12]
 28123  013D82  0EFF               	movlw	-1
 28124  013D84  0060  F033  FFE3   	movff	btemp+11,plusw1
 28125                           
 28126                           ;stkvar	_b @ sp[(-13)+-4]
 28127  013D8A  0EF2               	movlw	242
 28128  013D8C  24E1               	addwf	fsr1l,w,c
 28129  013D8E  6ED9               	movwf	fsr2l,c
 28130  013D90  0EFF               	movlw	255
 28131  013D92  20E2               	addwfc	fsr1h,w,c
 28132  013D94  6EDA               	movwf	fsr2h,c
 28133  013D96  50DF               	movf	indf2,w,c
 28134  013D98  6E0C               	movwf	(btemp+11)^0,c
 28135  013D9A  90D8               	bcf	status,0,c
 28136  013D9C  340C               	rlcf	(btemp+11)^0,w,c
 28137  013D9E  6E0B               	movwf	(btemp+10)^0,c
 28138                           
 28139                           ;stkvar	_bexp @ sp[(-13)+10]
 28140  013DA0  0EFD               	movlw	-3
 28141  013DA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28142                           
 28143                           ;stkvar	_b @ sp[(-13)+-4]
 28144  013DA8  0EF1               	movlw	241
 28145  013DAA  24E1               	addwf	fsr1l,w,c
 28146  013DAC  6ED9               	movwf	fsr2l,c
 28147  013DAE  0EFF               	movlw	255
 28148  013DB0  20E2               	addwfc	fsr1h,w,c
 28149  013DB2  6EDA               	movwf	fsr2h,c
 28150  013DB4  AEDF               	btfss	indf2,7,c
 28151  013DB6  D002               	goto	l8350
 28152                           
 28153                           ;stkvar	_bexp @ sp[(-13)+10]
 28154  013DB8  0EFD               	movlw	-3
 28155  013DBA  80E3               	bsf	plusw1,0,c
 28156  013DBC                     l8350:
 28157                           
 28158                           ;stkvar	_bexp @ sp[(-13)+10]
 28159  013DBC  0EFD               	movlw	-3
 28160  013DBE  50E3               	movf	plusw1,w,c
 28161  013DC0  B4D8               	btfsc	status,2,c
 28162  013DC2  D01F               	goto	l8358
 28163                           
 28164                           ;stkvar	_bexp @ sp[(-13)+10]
 28165  013DC4  0EFD               	movlw	-3
 28166  013DC6  28E3               	incf	plusw1,w,c
 28167  013DC8  A4D8               	btfss	status,2,c
 28168  013DCA  D018               	goto	l8356
 28169  013DCC  0E00               	movlw	0
 28170  013DCE  6E09               	movwf	(btemp+8)^0,c
 28171  013DD0  0E00               	movlw	0
 28172  013DD2  6E0A               	movwf	(btemp+9)^0,c
 28173  013DD4  0E00               	movlw	0
 28174  013DD6  6E0B               	movwf	(btemp+10)^0,c
 28175  013DD8  0E00               	movlw	0
 28176  013DDA  6E0C               	movwf	(btemp+11)^0,c
 28177                           
 28178                           ;stkvar	_b @ sp[(-13)+-4]
 28179  013DDC  0EEF               	movlw	-17
 28180  013DDE  0060  F027  FFE3   	movff	btemp+8,plusw1
 28181  013DE4  0EF0               	movlw	-16
 28182  013DE6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28183  013DEC  0EF1               	movlw	-15
 28184  013DEE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28185  013DF4  0EF2               	movlw	-14
 28186  013DF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 28187  013DFC                     l8356:
 28188                           
 28189                           ;stkvar	_b @ sp[(-13)+-4]
 28190  013DFC  0EF1               	movlw	-15
 28191  013DFE  8EE3               	bsf	plusw1,7,c
 28192  013E00  D018               	goto	l8360
 28193  013E02                     l8358:
 28194  013E02  0E00               	movlw	0
 28195  013E04  6E09               	movwf	(btemp+8)^0,c
 28196  013E06  0E00               	movlw	0
 28197  013E08  6E0A               	movwf	(btemp+9)^0,c
 28198  013E0A  0E00               	movlw	0
 28199  013E0C  6E0B               	movwf	(btemp+10)^0,c
 28200  013E0E  0E00               	movlw	0
 28201  013E10  6E0C               	movwf	(btemp+11)^0,c
 28202                           
 28203                           ;stkvar	_b @ sp[(-13)+-4]
 28204  013E12  0EEF               	movlw	-17
 28205  013E14  0060  F027  FFE3   	movff	btemp+8,plusw1
 28206  013E1A  0EF0               	movlw	-16
 28207  013E1C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28208  013E22  0EF1               	movlw	-15
 28209  013E24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28210  013E2A  0EF2               	movlw	-14
 28211  013E2C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28212  013E32                     l8360:
 28213                           
 28214                           ;stkvar	_a @ sp[(-13)+-8]
 28215  013E32  0EEE               	movlw	238
 28216  013E34  24E1               	addwf	fsr1l,w,c
 28217  013E36  6ED9               	movwf	fsr2l,c
 28218  013E38  0EFF               	movlw	255
 28219  013E3A  20E2               	addwfc	fsr1h,w,c
 28220  013E3C  6EDA               	movwf	fsr2h,c
 28221  013E3E  50DF               	movf	indf2,w,c
 28222  013E40  6E0C               	movwf	(btemp+11)^0,c
 28223  013E42  0E80               	movlw	128
 28224  013E44  160C               	andwf	(btemp+11)^0,f,c
 28225                           
 28226                           ;stkvar	_sign @ sp[(-13)+12]
 28227  013E46  50E1               	movf	fsr1l,w,c
 28228  013E48  0FFF               	addlw	-1
 28229  013E4A  6ED9               	movwf	fsr2l,c
 28230  013E4C  50E2               	movf	fsr1h,w,c
 28231  013E4E  6EDA               	movwf	fsr2h,c
 28232  013E50  0EFF               	movlw	255
 28233  013E52  22DA               	addwfc	fsr2h,f,c
 28234  013E54  500C               	movf	(btemp+11)^0,w,c
 28235  013E56  1ADF               	xorwf	indf2,f,c
 28236                           
 28237                           ;stkvar	_a @ sp[(-13)+-8]
 28238  013E58  0EEE               	movlw	238
 28239  013E5A  24E1               	addwf	fsr1l,w,c
 28240  013E5C  6ED9               	movwf	fsr2l,c
 28241  013E5E  0EFF               	movlw	255
 28242  013E60  20E2               	addwfc	fsr1h,w,c
 28243  013E62  6EDA               	movwf	fsr2h,c
 28244  013E64  50DF               	movf	indf2,w,c
 28245  013E66  6E0C               	movwf	(btemp+11)^0,c
 28246  013E68  90D8               	bcf	status,0,c
 28247  013E6A  340C               	rlcf	(btemp+11)^0,w,c
 28248  013E6C  6E0B               	movwf	(btemp+10)^0,c
 28249                           
 28250                           ;stkvar	_aexp @ sp[(-13)+11]
 28251  013E6E  0EFE               	movlw	-2
 28252  013E70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28253                           
 28254                           ;stkvar	_a @ sp[(-13)+-8]
 28255  013E76  0EED               	movlw	237
 28256  013E78  24E1               	addwf	fsr1l,w,c
 28257  013E7A  6ED9               	movwf	fsr2l,c
 28258  013E7C  0EFF               	movlw	255
 28259  013E7E  20E2               	addwfc	fsr1h,w,c
 28260  013E80  6EDA               	movwf	fsr2h,c
 28261  013E82  AEDF               	btfss	indf2,7,c
 28262  013E84  D002               	goto	l8368
 28263                           
 28264                           ;stkvar	_aexp @ sp[(-13)+11]
 28265  013E86  0EFE               	movlw	-2
 28266  013E88  80E3               	bsf	plusw1,0,c
 28267  013E8A                     l8368:
 28268                           
 28269                           ;stkvar	_aexp @ sp[(-13)+11]
 28270  013E8A  0EFE               	movlw	-2
 28271  013E8C  50E3               	movf	plusw1,w,c
 28272  013E8E  B4D8               	btfsc	status,2,c
 28273  013E90  D01F               	goto	l8376
 28274                           
 28275                           ;stkvar	_aexp @ sp[(-13)+11]
 28276  013E92  0EFE               	movlw	-2
 28277  013E94  28E3               	incf	plusw1,w,c
 28278  013E96  A4D8               	btfss	status,2,c
 28279  013E98  D018               	goto	l8374
 28280  013E9A  0E00               	movlw	0
 28281  013E9C  6E09               	movwf	(btemp+8)^0,c
 28282  013E9E  0E00               	movlw	0
 28283  013EA0  6E0A               	movwf	(btemp+9)^0,c
 28284  013EA2  0E00               	movlw	0
 28285  013EA4  6E0B               	movwf	(btemp+10)^0,c
 28286  013EA6  0E00               	movlw	0
 28287  013EA8  6E0C               	movwf	(btemp+11)^0,c
 28288                           
 28289                           ;stkvar	_a @ sp[(-13)+-8]
 28290  013EAA  0EEB               	movlw	-21
 28291  013EAC  0060  F027  FFE3   	movff	btemp+8,plusw1
 28292  013EB2  0EEC               	movlw	-20
 28293  013EB4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28294  013EBA  0EED               	movlw	-19
 28295  013EBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28296  013EC2  0EEE               	movlw	-18
 28297  013EC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 28298  013ECA                     l8374:
 28299                           
 28300                           ;stkvar	_a @ sp[(-13)+-8]
 28301  013ECA  0EED               	movlw	-19
 28302  013ECC  8EE3               	bsf	plusw1,7,c
 28303  013ECE  D018               	goto	l8378
 28304  013ED0                     l8376:
 28305  013ED0  0E00               	movlw	0
 28306  013ED2  6E09               	movwf	(btemp+8)^0,c
 28307  013ED4  0E00               	movlw	0
 28308  013ED6  6E0A               	movwf	(btemp+9)^0,c
 28309  013ED8  0E00               	movlw	0
 28310  013EDA  6E0B               	movwf	(btemp+10)^0,c
 28311  013EDC  0E00               	movlw	0
 28312  013EDE  6E0C               	movwf	(btemp+11)^0,c
 28313                           
 28314                           ;stkvar	_a @ sp[(-13)+-8]
 28315  013EE0  0EEB               	movlw	-21
 28316  013EE2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28317  013EE8  0EEC               	movlw	-20
 28318  013EEA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28319  013EF0  0EED               	movlw	-19
 28320  013EF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28321  013EF8  0EEE               	movlw	-18
 28322  013EFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28323  013F00                     l8378:
 28324                           
 28325                           ;stkvar	_aexp @ sp[(-13)+11]
 28326  013F00  0EFE               	movlw	-2
 28327  013F02  50E3               	movf	plusw1,w,c
 28328  013F04  B4D8               	btfsc	status,2,c
 28329  013F06  D004               	goto	u6840
 28330                           
 28331                           ;stkvar	_bexp @ sp[(-13)+10]
 28332  013F08  0EFD               	movlw	-3
 28333  013F0A  50E3               	movf	plusw1,w,c
 28334  013F0C  A4D8               	btfss	status,2,c
 28335  013F0E  D009               	goto	l8386
 28336  013F10                     u6840:
 28337  013F10  0E00               	movlw	0
 28338  013F12  6E01               	movwf	btemp^0,c
 28339  013F14  0E00               	movlw	0
 28340  013F16  6E02               	movwf	(btemp+1)^0,c
 28341  013F18  0E00               	movlw	0
 28342  013F1A  6E03               	movwf	(btemp+2)^0,c
 28343  013F1C  0E00               	movlw	0
 28344  013F1E  6E04               	movwf	(btemp+3)^0,c
 28345  013F20  D332               	goto	l3013
 28346  013F22                     l8386:
 28347                           
 28348                           ;stkvar	_b @ sp[(-13)+-4]
 28349  013F22  0EEF               	movlw	-17
 28350  013F24  006F FF8C  F00C    	movff	plusw1,btemp+11
 28351                           
 28352                           ;stkvar	_a @ sp[(-13)+-8]
 28353  013F2A  0EED               	movlw	237
 28354  013F2C  24E1               	addwf	fsr1l,w,c
 28355  013F2E  6ED9               	movwf	fsr2l,c
 28356  013F30  0EFF               	movlw	255
 28357  013F32  20E2               	addwfc	fsr1h,w,c
 28358  013F34  6EDA               	movwf	fsr2h,c
 28359  013F36  50DF               	movf	indf2,w,c
 28360  013F38  020C               	mulwf	(btemp+11)^0,c
 28361                           
 28362                           ;stkvar	_temp @ sp[(-13)+8]
 28363  013F3A  0EFB               	movlw	-5
 28364  013F3C  006F FFCF FFE3     	movff	prodl,plusw1
 28365  013F42  0EFC               	movlw	-4
 28366  013F44  006F FFD3 FFE3     	movff	prodh,plusw1
 28367                           
 28368                           ;stkvar	_temp @ sp[(-13)+8]
 28369  013F4A  0EFB               	movlw	-5
 28370  013F4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28371  013F52  0060  F030  F005   	movff	btemp+11,btemp+4
 28372  013F58  6A06               	clrf	(btemp+5)^0,c
 28373  013F5A  6A07               	clrf	(btemp+6)^0,c
 28374  013F5C  6A08               	clrf	(btemp+7)^0,c
 28375                           
 28376                           ;stkvar	_grs @ sp[(-13)+4]
 28377  013F5E  0EF7               	movlw	-9
 28378  013F60  0060  F017  FFE3   	movff	btemp+4,plusw1
 28379  013F66  0EF8               	movlw	-8
 28380  013F68  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28381  013F6E  0EF9               	movlw	-7
 28382  013F70  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28383  013F76  0EFA               	movlw	-6
 28384  013F78  0060  F023  FFE3   	movff	btemp+7,plusw1
 28385                           
 28386                           ;stkvar	_temp @ sp[(-13)+8]
 28387  013F7E  0EFC               	movlw	252
 28388  013F80  24E1               	addwf	fsr1l,w,c
 28389  013F82  6ED9               	movwf	fsr2l,c
 28390  013F84  0EFF               	movlw	255
 28391  013F86  20E2               	addwfc	fsr1h,w,c
 28392  013F88  6EDA               	movwf	fsr2h,c
 28393  013F8A  50DF               	movf	indf2,w,c
 28394  013F8C  6E0C               	movwf	(btemp+11)^0,c
 28395  013F8E  0060  F030  F005   	movff	btemp+11,btemp+4
 28396  013F94  6A06               	clrf	(btemp+5)^0,c
 28397  013F96  6A07               	clrf	(btemp+6)^0,c
 28398  013F98  6A08               	clrf	(btemp+7)^0,c
 28399                           
 28400                           ;stkvar	_prod @ sp[(-13)+0]
 28401  013F9A  0EF3               	movlw	-13
 28402  013F9C  0060  F017  FFE3   	movff	btemp+4,plusw1
 28403  013FA2  0EF4               	movlw	-12
 28404  013FA4  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28405  013FAA  0EF5               	movlw	-11
 28406  013FAC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28407  013FB2  0EF6               	movlw	-10
 28408  013FB4  0060  F023  FFE3   	movff	btemp+7,plusw1
 28409                           
 28410                           ;stkvar	_b @ sp[(-13)+-4]
 28411  013FBA  0EF0               	movlw	240
 28412  013FBC  24E1               	addwf	fsr1l,w,c
 28413  013FBE  6ED9               	movwf	fsr2l,c
 28414  013FC0  0EFF               	movlw	255
 28415  013FC2  20E2               	addwfc	fsr1h,w,c
 28416  013FC4  6EDA               	movwf	fsr2h,c
 28417  013FC6  50DF               	movf	indf2,w,c
 28418  013FC8  6E0C               	movwf	(btemp+11)^0,c
 28419                           
 28420                           ;stkvar	_a @ sp[(-13)+-8]
 28421  013FCA  0EEC               	movlw	236
 28422  013FCC  24E1               	addwf	fsr1l,w,c
 28423  013FCE  6ED9               	movwf	fsr2l,c
 28424  013FD0  0EFF               	movlw	255
 28425  013FD2  20E2               	addwfc	fsr1h,w,c
 28426  013FD4  6EDA               	movwf	fsr2h,c
 28427  013FD6  50DF               	movf	indf2,w,c
 28428  013FD8  020C               	mulwf	(btemp+11)^0,c
 28429                           
 28430                           ;stkvar	_temp @ sp[(-13)+8]
 28431  013FDA  0EFB               	movlw	-5
 28432  013FDC  006F FFCF FFE3     	movff	prodl,plusw1
 28433  013FE2  0EFC               	movlw	-4
 28434  013FE4  006F FFD3 FFE3     	movff	prodh,plusw1
 28435                           
 28436                           ;stkvar	_grs @ sp[(-13)+4]
 28437  013FEA  50E1               	movf	fsr1l,w,c
 28438  013FEC  0FF7               	addlw	-9
 28439  013FEE  6ED9               	movwf	fsr2l,c
 28440  013FF0  50E2               	movf	fsr1h,w,c
 28441  013FF2  6EDA               	movwf	fsr2h,c
 28442  013FF4  0EFF               	movlw	255
 28443  013FF6  22DA               	addwfc	fsr2h,f,c
 28444                           
 28445                           ;stkvar	_temp @ sp[(-13)+8]
 28446  013FF8  0EFB               	movlw	-5
 28447  013FFA  50E3               	movf	plusw1,w,c
 28448  013FFC  26DE               	addwf	postinc2,f,c
 28449  013FFE  0E00               	movlw	0
 28450  014000  22DE               	addwfc	postinc2,f,c
 28451  014002  22DE               	addwfc	postinc2,f,c
 28452  014004  22DE               	addwfc	postinc2,f,c
 28453                           
 28454                           ;stkvar	_prod @ sp[(-13)+0]
 28455  014006  50E1               	movf	fsr1l,w,c
 28456  014008  0FF3               	addlw	-13
 28457  01400A  6ED9               	movwf	fsr2l,c
 28458  01400C  50E2               	movf	fsr1h,w,c
 28459  01400E  6EDA               	movwf	fsr2h,c
 28460  014010  0EFF               	movlw	255
 28461  014012  22DA               	addwfc	fsr2h,f,c
 28462                           
 28463                           ;stkvar	_temp @ sp[(-13)+8]
 28464  014014  0EFC               	movlw	252
 28465  014016  24E1               	addwf	fsr1l,w,c
 28466  014018  6EE9               	movwf	fsr0l,c
 28467  01401A  0EFF               	movlw	255
 28468  01401C  20E2               	addwfc	fsr1h,w,c
 28469  01401E  6EEA               	movwf	fsr0h,c
 28470  014020  50EF               	movf	indf0,w,c
 28471  014022  26DE               	addwf	postinc2,f,c
 28472  014024  0E00               	movlw	0
 28473  014026  22DE               	addwfc	postinc2,f,c
 28474  014028  22DE               	addwfc	postinc2,f,c
 28475  01402A  22DE               	addwfc	postinc2,f,c
 28476                           
 28477                           ;stkvar	_b @ sp[(-13)+-4]
 28478  01402C  0EF1               	movlw	241
 28479  01402E  24E1               	addwf	fsr1l,w,c
 28480  014030  6ED9               	movwf	fsr2l,c
 28481  014032  0EFF               	movlw	255
 28482  014034  20E2               	addwfc	fsr1h,w,c
 28483  014036  6EDA               	movwf	fsr2h,c
 28484  014038  50DF               	movf	indf2,w,c
 28485  01403A  6E0C               	movwf	(btemp+11)^0,c
 28486                           
 28487                           ;stkvar	_a @ sp[(-13)+-8]
 28488  01403C  0EEB               	movlw	-21
 28489  01403E  50E3               	movf	plusw1,w,c
 28490  014040  020C               	mulwf	(btemp+11)^0,c
 28491                           
 28492                           ;stkvar	_temp @ sp[(-13)+8]
 28493  014042  0EFB               	movlw	-5
 28494  014044  006F FFCF FFE3     	movff	prodl,plusw1
 28495  01404A  0EFC               	movlw	-4
 28496  01404C  006F FFD3 FFE3     	movff	prodh,plusw1
 28497                           
 28498                           ;stkvar	_grs @ sp[(-13)+4]
 28499  014052  50E1               	movf	fsr1l,w,c
 28500  014054  0FF7               	addlw	-9
 28501  014056  6ED9               	movwf	fsr2l,c
 28502  014058  50E2               	movf	fsr1h,w,c
 28503  01405A  6EDA               	movwf	fsr2h,c
 28504  01405C  0EFF               	movlw	255
 28505  01405E  22DA               	addwfc	fsr2h,f,c
 28506                           
 28507                           ;stkvar	_temp @ sp[(-13)+8]
 28508  014060  0EFB               	movlw	-5
 28509  014062  50E3               	movf	plusw1,w,c
 28510  014064  26DE               	addwf	postinc2,f,c
 28511  014066  0E00               	movlw	0
 28512  014068  22DE               	addwfc	postinc2,f,c
 28513  01406A  22DE               	addwfc	postinc2,f,c
 28514  01406C  22DE               	addwfc	postinc2,f,c
 28515                           
 28516                           ;stkvar	_prod @ sp[(-13)+0]
 28517  01406E  50E1               	movf	fsr1l,w,c
 28518  014070  0FF3               	addlw	-13
 28519  014072  6ED9               	movwf	fsr2l,c
 28520  014074  50E2               	movf	fsr1h,w,c
 28521  014076  6EDA               	movwf	fsr2h,c
 28522  014078  0EFF               	movlw	255
 28523  01407A  22DA               	addwfc	fsr2h,f,c
 28524                           
 28525                           ;stkvar	_temp @ sp[(-13)+8]
 28526  01407C  0EFC               	movlw	252
 28527  01407E  24E1               	addwf	fsr1l,w,c
 28528  014080  6EE9               	movwf	fsr0l,c
 28529  014082  0EFF               	movlw	255
 28530  014084  20E2               	addwfc	fsr1h,w,c
 28531  014086  6EEA               	movwf	fsr0h,c
 28532  014088  50EF               	movf	indf0,w,c
 28533  01408A  26DE               	addwf	postinc2,f,c
 28534  01408C  0E00               	movlw	0
 28535  01408E  22DE               	addwfc	postinc2,f,c
 28536  014090  22DE               	addwfc	postinc2,f,c
 28537  014092  22DE               	addwfc	postinc2,f,c
 28538                           
 28539                           ;stkvar	_grs @ sp[(-13)+4]
 28540  014094  50E1               	movf	fsr1l,w,c
 28541  014096  0FF7               	addlw	-9
 28542  014098  6ED9               	movwf	fsr2l,c
 28543  01409A  50E2               	movf	fsr1h,w,c
 28544  01409C  6EDA               	movwf	fsr2h,c
 28545  01409E  0EFF               	movlw	255
 28546  0140A0  22DA               	addwfc	fsr2h,f,c
 28547  0140A2  0E08               	movlw	8
 28548  0140A4                     u6855:
 28549  0140A4  90D8               	bcf	status,0,c
 28550  0140A6  36DE               	rlcf	postinc2,f,c
 28551  0140A8  36DE               	rlcf	postinc2,f,c
 28552  0140AA  36DE               	rlcf	postinc2,f,c
 28553  0140AC  36DD               	rlcf	postdec2,f,c
 28554  0140AE  52DD               	movf	postdec2,f,c
 28555  0140B0  52DD               	movf	postdec2,f,c
 28556  0140B2  2EE8               	decfsz	wreg,f,c
 28557  0140B4  D7F7               	goto	u6855
 28558                           
 28559                           ;stkvar	_b @ sp[(-13)+-4]
 28560  0140B6  0EF0               	movlw	240
 28561  0140B8  24E1               	addwf	fsr1l,w,c
 28562  0140BA  6ED9               	movwf	fsr2l,c
 28563  0140BC  0EFF               	movlw	255
 28564  0140BE  20E2               	addwfc	fsr1h,w,c
 28565  0140C0  6EDA               	movwf	fsr2h,c
 28566  0140C2  50DF               	movf	indf2,w,c
 28567  0140C4  6E0C               	movwf	(btemp+11)^0,c
 28568                           
 28569                           ;stkvar	_a @ sp[(-13)+-8]
 28570  0140C6  0EEB               	movlw	-21
 28571  0140C8  50E3               	movf	plusw1,w,c
 28572  0140CA  020C               	mulwf	(btemp+11)^0,c
 28573                           
 28574                           ;stkvar	_temp @ sp[(-13)+8]
 28575  0140CC  0EFB               	movlw	-5
 28576  0140CE  006F FFCF FFE3     	movff	prodl,plusw1
 28577  0140D4  0EFC               	movlw	-4
 28578  0140D6  006F FFD3 FFE3     	movff	prodh,plusw1
 28579                           
 28580                           ;stkvar	_temp @ sp[(-13)+8]
 28581  0140DC  0EFB               	movlw	-5
 28582  0140DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 28583  0140E4  0EFC               	movlw	-4
 28584  0140E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 28585                           
 28586                           ;stkvar	_grs @ sp[(-13)+4]
 28587  0140EC  50E1               	movf	fsr1l,w,c
 28588  0140EE  0FF7               	addlw	-9
 28589  0140F0  6ED9               	movwf	fsr2l,c
 28590  0140F2  50E2               	movf	fsr1h,w,c
 28591  0140F4  6EDA               	movwf	fsr2h,c
 28592  0140F6  0EFF               	movlw	255
 28593  0140F8  22DA               	addwfc	fsr2h,f,c
 28594  0140FA  500B               	movf	(btemp+10)^0,w,c
 28595  0140FC  26DE               	addwf	postinc2,f,c
 28596  0140FE  500C               	movf	(btemp+11)^0,w,c
 28597  014100  22DE               	addwfc	postinc2,f,c
 28598  014102  0E00               	movlw	0
 28599  014104  22DE               	addwfc	postinc2,f,c
 28600  014106  22DE               	addwfc	postinc2,f,c
 28601                           
 28602                           ;stkvar	_b @ sp[(-13)+-4]
 28603  014108  0EEF               	movlw	-17
 28604  01410A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28605                           
 28606                           ;stkvar	_a @ sp[(-13)+-8]
 28607  014110  0EEC               	movlw	236
 28608  014112  24E1               	addwf	fsr1l,w,c
 28609  014114  6ED9               	movwf	fsr2l,c
 28610  014116  0EFF               	movlw	255
 28611  014118  20E2               	addwfc	fsr1h,w,c
 28612  01411A  6EDA               	movwf	fsr2h,c
 28613  01411C  50DF               	movf	indf2,w,c
 28614  01411E  020C               	mulwf	(btemp+11)^0,c
 28615                           
 28616                           ;stkvar	_temp @ sp[(-13)+8]
 28617  014120  0EFB               	movlw	-5
 28618  014122  006F FFCF FFE3     	movff	prodl,plusw1
 28619  014128  0EFC               	movlw	-4
 28620  01412A  006F FFD3 FFE3     	movff	prodh,plusw1
 28621                           
 28622                           ;stkvar	_temp @ sp[(-13)+8]
 28623  014130  0EFB               	movlw	-5
 28624  014132  006F FF8C  F00B    	movff	plusw1,btemp+10
 28625  014138  0EFC               	movlw	-4
 28626  01413A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28627                           
 28628                           ;stkvar	_grs @ sp[(-13)+4]
 28629  014140  50E1               	movf	fsr1l,w,c
 28630  014142  0FF7               	addlw	-9
 28631  014144  6ED9               	movwf	fsr2l,c
 28632  014146  50E2               	movf	fsr1h,w,c
 28633  014148  6EDA               	movwf	fsr2h,c
 28634  01414A  0EFF               	movlw	255
 28635  01414C  22DA               	addwfc	fsr2h,f,c
 28636  01414E  500B               	movf	(btemp+10)^0,w,c
 28637  014150  26DE               	addwf	postinc2,f,c
 28638  014152  500C               	movf	(btemp+11)^0,w,c
 28639  014154  22DE               	addwfc	postinc2,f,c
 28640  014156  0E00               	movlw	0
 28641  014158  22DE               	addwfc	postinc2,f,c
 28642  01415A  22DE               	addwfc	postinc2,f,c
 28643                           
 28644                           ;stkvar	_grs @ sp[(-13)+4]
 28645  01415C  50E1               	movf	fsr1l,w,c
 28646  01415E  0FF7               	addlw	-9
 28647  014160  6ED9               	movwf	fsr2l,c
 28648  014162  50E2               	movf	fsr1h,w,c
 28649  014164  6EDA               	movwf	fsr2h,c
 28650  014166  0EFF               	movlw	255
 28651  014168  22DA               	addwfc	fsr2h,f,c
 28652  01416A  0E08               	movlw	8
 28653  01416C                     u6865:
 28654  01416C  90D8               	bcf	status,0,c
 28655  01416E  36DE               	rlcf	postinc2,f,c
 28656  014170  36DE               	rlcf	postinc2,f,c
 28657  014172  36DE               	rlcf	postinc2,f,c
 28658  014174  36DD               	rlcf	postdec2,f,c
 28659  014176  52DD               	movf	postdec2,f,c
 28660  014178  52DD               	movf	postdec2,f,c
 28661  01417A  2EE8               	decfsz	wreg,f,c
 28662  01417C  D7F7               	goto	u6865
 28663                           
 28664                           ;stkvar	_b @ sp[(-13)+-4]
 28665  01417E  0EEF               	movlw	-17
 28666  014180  006F FF8C  F00C    	movff	plusw1,btemp+11
 28667                           
 28668                           ;stkvar	_a @ sp[(-13)+-8]
 28669  014186  0EEB               	movlw	-21
 28670  014188  50E3               	movf	plusw1,w,c
 28671  01418A  020C               	mulwf	(btemp+11)^0,c
 28672                           
 28673                           ;stkvar	_temp @ sp[(-13)+8]
 28674  01418C  0EFB               	movlw	-5
 28675  01418E  006F FFCF FFE3     	movff	prodl,plusw1
 28676  014194  0EFC               	movlw	-4
 28677  014196  006F FFD3 FFE3     	movff	prodh,plusw1
 28678                           
 28679                           ;stkvar	_temp @ sp[(-13)+8]
 28680  01419C  0EFB               	movlw	-5
 28681  01419E  006F FF8C  F00B    	movff	plusw1,btemp+10
 28682  0141A4  0EFC               	movlw	-4
 28683  0141A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 28684                           
 28685                           ;stkvar	_grs @ sp[(-13)+4]
 28686  0141AC  50E1               	movf	fsr1l,w,c
 28687  0141AE  0FF7               	addlw	-9
 28688  0141B0  6ED9               	movwf	fsr2l,c
 28689  0141B2  50E2               	movf	fsr1h,w,c
 28690  0141B4  6EDA               	movwf	fsr2h,c
 28691  0141B6  0EFF               	movlw	255
 28692  0141B8  22DA               	addwfc	fsr2h,f,c
 28693  0141BA  500B               	movf	(btemp+10)^0,w,c
 28694  0141BC  26DE               	addwf	postinc2,f,c
 28695  0141BE  500C               	movf	(btemp+11)^0,w,c
 28696  0141C0  22DE               	addwfc	postinc2,f,c
 28697  0141C2  0E00               	movlw	0
 28698  0141C4  22DE               	addwfc	postinc2,f,c
 28699  0141C6  22DE               	addwfc	postinc2,f,c
 28700                           
 28701                           ;stkvar	_b @ sp[(-13)+-4]
 28702  0141C8  0EF0               	movlw	240
 28703  0141CA  24E1               	addwf	fsr1l,w,c
 28704  0141CC  6ED9               	movwf	fsr2l,c
 28705  0141CE  0EFF               	movlw	255
 28706  0141D0  20E2               	addwfc	fsr1h,w,c
 28707  0141D2  6EDA               	movwf	fsr2h,c
 28708  0141D4  50DF               	movf	indf2,w,c
 28709  0141D6  6E0C               	movwf	(btemp+11)^0,c
 28710                           
 28711                           ;stkvar	_a @ sp[(-13)+-8]
 28712  0141D8  0EED               	movlw	237
 28713  0141DA  24E1               	addwf	fsr1l,w,c
 28714  0141DC  6ED9               	movwf	fsr2l,c
 28715  0141DE  0EFF               	movlw	255
 28716  0141E0  20E2               	addwfc	fsr1h,w,c
 28717  0141E2  6EDA               	movwf	fsr2h,c
 28718  0141E4  50DF               	movf	indf2,w,c
 28719  0141E6  020C               	mulwf	(btemp+11)^0,c
 28720                           
 28721                           ;stkvar	_temp @ sp[(-13)+8]
 28722  0141E8  0EFB               	movlw	-5
 28723  0141EA  006F FFCF FFE3     	movff	prodl,plusw1
 28724  0141F0  0EFC               	movlw	-4
 28725  0141F2  006F FFD3 FFE3     	movff	prodh,plusw1
 28726                           
 28727                           ;stkvar	_temp @ sp[(-13)+8]
 28728  0141F8  0EFB               	movlw	-5
 28729  0141FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 28730  014200  0EFC               	movlw	-4
 28731  014202  006F FF8C  F00C    	movff	plusw1,btemp+11
 28732                           
 28733                           ;stkvar	_prod @ sp[(-13)+0]
 28734  014208  50E1               	movf	fsr1l,w,c
 28735  01420A  0FF3               	addlw	-13
 28736  01420C  6ED9               	movwf	fsr2l,c
 28737  01420E  50E2               	movf	fsr1h,w,c
 28738  014210  6EDA               	movwf	fsr2h,c
 28739  014212  0EFF               	movlw	255
 28740  014214  22DA               	addwfc	fsr2h,f,c
 28741  014216  500B               	movf	(btemp+10)^0,w,c
 28742  014218  26DE               	addwf	postinc2,f,c
 28743  01421A  500C               	movf	(btemp+11)^0,w,c
 28744  01421C  22DE               	addwfc	postinc2,f,c
 28745  01421E  0E00               	movlw	0
 28746  014220  22DE               	addwfc	postinc2,f,c
 28747  014222  22DE               	addwfc	postinc2,f,c
 28748                           
 28749                           ;stkvar	_b @ sp[(-13)+-4]
 28750  014224  0EF1               	movlw	241
 28751  014226  24E1               	addwf	fsr1l,w,c
 28752  014228  6ED9               	movwf	fsr2l,c
 28753  01422A  0EFF               	movlw	255
 28754  01422C  20E2               	addwfc	fsr1h,w,c
 28755  01422E  6EDA               	movwf	fsr2h,c
 28756  014230  50DF               	movf	indf2,w,c
 28757  014232  6E0C               	movwf	(btemp+11)^0,c
 28758                           
 28759                           ;stkvar	_a @ sp[(-13)+-8]
 28760  014234  0EEC               	movlw	236
 28761  014236  24E1               	addwf	fsr1l,w,c
 28762  014238  6ED9               	movwf	fsr2l,c
 28763  01423A  0EFF               	movlw	255
 28764  01423C  20E2               	addwfc	fsr1h,w,c
 28765  01423E  6EDA               	movwf	fsr2h,c
 28766  014240  50DF               	movf	indf2,w,c
 28767  014242  020C               	mulwf	(btemp+11)^0,c
 28768                           
 28769                           ;stkvar	_temp @ sp[(-13)+8]
 28770  014244  0EFB               	movlw	-5
 28771  014246  006F FFCF FFE3     	movff	prodl,plusw1
 28772  01424C  0EFC               	movlw	-4
 28773  01424E  006F FFD3 FFE3     	movff	prodh,plusw1
 28774                           
 28775                           ;stkvar	_temp @ sp[(-13)+8]
 28776  014254  0EFB               	movlw	-5
 28777  014256  006F FF8C  F00B    	movff	plusw1,btemp+10
 28778  01425C  0EFC               	movlw	-4
 28779  01425E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28780                           
 28781                           ;stkvar	_prod @ sp[(-13)+0]
 28782  014264  50E1               	movf	fsr1l,w,c
 28783  014266  0FF3               	addlw	-13
 28784  014268  6ED9               	movwf	fsr2l,c
 28785  01426A  50E2               	movf	fsr1h,w,c
 28786  01426C  6EDA               	movwf	fsr2h,c
 28787  01426E  0EFF               	movlw	255
 28788  014270  22DA               	addwfc	fsr2h,f,c
 28789  014272  500B               	movf	(btemp+10)^0,w,c
 28790  014274  26DE               	addwf	postinc2,f,c
 28791  014276  500C               	movf	(btemp+11)^0,w,c
 28792  014278  22DE               	addwfc	postinc2,f,c
 28793  01427A  0E00               	movlw	0
 28794  01427C  22DE               	addwfc	postinc2,f,c
 28795  01427E  22DE               	addwfc	postinc2,f,c
 28796                           
 28797                           ;stkvar	_b @ sp[(-13)+-4]
 28798  014280  0EF1               	movlw	241
 28799  014282  24E1               	addwf	fsr1l,w,c
 28800  014284  6ED9               	movwf	fsr2l,c
 28801  014286  0EFF               	movlw	255
 28802  014288  20E2               	addwfc	fsr1h,w,c
 28803  01428A  6EDA               	movwf	fsr2h,c
 28804  01428C  50DF               	movf	indf2,w,c
 28805  01428E  6E0C               	movwf	(btemp+11)^0,c
 28806                           
 28807                           ;stkvar	_a @ sp[(-13)+-8]
 28808  014290  0EED               	movlw	237
 28809  014292  24E1               	addwf	fsr1l,w,c
 28810  014294  6ED9               	movwf	fsr2l,c
 28811  014296  0EFF               	movlw	255
 28812  014298  20E2               	addwfc	fsr1h,w,c
 28813  01429A  6EDA               	movwf	fsr2h,c
 28814  01429C  50DF               	movf	indf2,w,c
 28815  01429E  020C               	mulwf	(btemp+11)^0,c
 28816                           
 28817                           ;stkvar	_temp @ sp[(-13)+8]
 28818  0142A0  0EFB               	movlw	-5
 28819  0142A2  006F FFCF FFE3     	movff	prodl,plusw1
 28820  0142A8  0EFC               	movlw	-4
 28821  0142AA  006F FFD3 FFE3     	movff	prodh,plusw1
 28822                           
 28823                           ;stkvar	_temp @ sp[(-13)+8]
 28824  0142B0  0EFB               	movlw	-5
 28825  0142B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 28826  0142B8  0EFC               	movlw	-4
 28827  0142BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28828  0142C0  500B               	movf	(btemp+10)^0,w,c
 28829  0142C2  6E05               	movwf	(btemp+4)^0,c
 28830  0142C4  500C               	movf	(btemp+11)^0,w,c
 28831  0142C6  6E06               	movwf	(btemp+5)^0,c
 28832  0142C8  6A07               	clrf	(btemp+6)^0,c
 28833  0142CA  6A08               	clrf	(btemp+7)^0,c
 28834  0142CC  0060  F01C  F008   	movff	btemp+6,btemp+7
 28835  0142D2  0060  F018  F007   	movff	btemp+5,btemp+6
 28836  0142D8  0060  F014  F006   	movff	btemp+4,btemp+5
 28837  0142DE  6A05               	clrf	(btemp+4)^0,c
 28838                           
 28839                           ;stkvar	_prod @ sp[(-13)+0]
 28840  0142E0  50E1               	movf	fsr1l,w,c
 28841  0142E2  0FF3               	addlw	-13
 28842  0142E4  6ED9               	movwf	fsr2l,c
 28843  0142E6  50E2               	movf	fsr1h,w,c
 28844  0142E8  6EDA               	movwf	fsr2h,c
 28845  0142EA  0EFF               	movlw	255
 28846  0142EC  22DA               	addwfc	fsr2h,f,c
 28847  0142EE  5005               	movf	(btemp+4)^0,w,c
 28848  0142F0  26DE               	addwf	postinc2,f,c
 28849  0142F2  5006               	movf	(btemp+5)^0,w,c
 28850  0142F4  22DE               	addwfc	postinc2,f,c
 28851  0142F6  5007               	movf	(btemp+6)^0,w,c
 28852  0142F8  22DE               	addwfc	postinc2,f,c
 28853  0142FA  5008               	movf	(btemp+7)^0,w,c
 28854  0142FC  22DE               	addwfc	postinc2,f,c
 28855                           
 28856                           ;stkvar	_prod @ sp[(-13)+0]
 28857  0142FE  50E1               	movf	fsr1l,w,c
 28858  014300  0FF3               	addlw	-13
 28859  014302  6ED9               	movwf	fsr2l,c
 28860  014304  50E2               	movf	fsr1h,w,c
 28861  014306  6EDA               	movwf	fsr2h,c
 28862  014308  0EFF               	movlw	255
 28863  01430A  22DA               	addwfc	fsr2h,f,c
 28864                           
 28865                           ;stkvar	_grs @ sp[(-13)+4]
 28866  01430C  0EFA               	movlw	250
 28867  01430E  24E1               	addwf	fsr1l,w,c
 28868  014310  6EE9               	movwf	fsr0l,c
 28869  014312  0EFF               	movlw	255
 28870  014314  20E2               	addwfc	fsr1h,w,c
 28871  014316  6EEA               	movwf	fsr0h,c
 28872  014318  50EF               	movf	indf0,w,c
 28873  01431A  26DE               	addwf	postinc2,f,c
 28874  01431C  0E00               	movlw	0
 28875  01431E  22DE               	addwfc	postinc2,f,c
 28876  014320  22DE               	addwfc	postinc2,f,c
 28877  014322  22DE               	addwfc	postinc2,f,c
 28878                           
 28879                           ;stkvar	_grs @ sp[(-13)+4]
 28880  014324  50E1               	movf	fsr1l,w,c
 28881  014326  0FF7               	addlw	-9
 28882  014328  6ED9               	movwf	fsr2l,c
 28883  01432A  50E2               	movf	fsr1h,w,c
 28884  01432C  6EDA               	movwf	fsr2h,c
 28885  01432E  0EFF               	movlw	255
 28886  014330  22DA               	addwfc	fsr2h,f,c
 28887  014332  0E08               	movlw	8
 28888  014334                     u6875:
 28889  014334  90D8               	bcf	status,0,c
 28890  014336  36DE               	rlcf	postinc2,f,c
 28891  014338  36DE               	rlcf	postinc2,f,c
 28892  01433A  36DE               	rlcf	postinc2,f,c
 28893  01433C  36DD               	rlcf	postdec2,f,c
 28894  01433E  52DD               	movf	postdec2,f,c
 28895  014340  52DD               	movf	postdec2,f,c
 28896  014342  2EE8               	decfsz	wreg,f,c
 28897  014344  D7F7               	goto	u6875
 28898  014346  0E82               	movlw	130
 28899  014348  6E0B               	movwf	(btemp+10)^0,c
 28900  01434A  0EFF               	movlw	255
 28901  01434C  6E0C               	movwf	(btemp+11)^0,c
 28902                           
 28903                           ;stkvar	_bexp @ sp[(-13)+10]
 28904  01434E  0EFD               	movlw	-3
 28905  014350  50E3               	movf	plusw1,w,c
 28906  014352  6E09               	movwf	(btemp+8)^0,c
 28907  014354  6A0A               	clrf	(btemp+9)^0,c
 28908                           
 28909                           ;stkvar	_aexp @ sp[(-13)+11]
 28910  014356  0EFE               	movlw	-2
 28911  014358  50E3               	movf	plusw1,w,c
 28912  01435A  2609               	addwf	(btemp+8)^0,f,c
 28913  01435C  0E00               	movlw	0
 28914  01435E  220A               	addwfc	(btemp+9)^0,f,c
 28915  014360  500B               	movf	(btemp+10)^0,w,c
 28916  014362  2609               	addwf	(btemp+8)^0,f,c
 28917  014364  500C               	movf	(btemp+11)^0,w,c
 28918  014366  220A               	addwfc	(btemp+9)^0,f,c
 28919                           
 28920                           ;stkvar	_temp @ sp[(-13)+8]
 28921  014368  0EFB               	movlw	-5
 28922  01436A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28923  014370  0EFC               	movlw	-4
 28924  014372  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28925  014378  D021               	goto	l8448
 28926  01437A                     l8438:
 28927                           
 28928                           ;stkvar	_prod @ sp[(-13)+0]
 28929  01437A  90D8               	bcf	status,0,c
 28930  01437C  0EF3               	movlw	-13
 28931  01437E  36E3               	rlcf	plusw1,f,c
 28932  014380  0EF4               	movlw	-12
 28933  014382  36E3               	rlcf	plusw1,f,c
 28934  014384  0EF5               	movlw	-11
 28935  014386  36E3               	rlcf	plusw1,f,c
 28936  014388  0EF6               	movlw	-10
 28937  01438A  36E3               	rlcf	plusw1,f,c
 28938                           
 28939                           ;stkvar	_grs @ sp[(-13)+4]
 28940  01438C  0EFA               	movlw	-6
 28941  01438E  AEE3               	btfss	plusw1,7,c
 28942  014390  D002               	goto	l8444
 28943                           
 28944                           ;stkvar	_prod @ sp[(-13)+0]
 28945  014392  0EF3               	movlw	-13
 28946  014394  80E3               	bsf	plusw1,0,c
 28947  014396                     l8444:
 28948                           
 28949                           ;stkvar	_grs @ sp[(-13)+4]
 28950  014396  90D8               	bcf	status,0,c
 28951  014398  0EF7               	movlw	-9
 28952  01439A  36E3               	rlcf	plusw1,f,c
 28953  01439C  0EF8               	movlw	-8
 28954  01439E  36E3               	rlcf	plusw1,f,c
 28955  0143A0  0EF9               	movlw	-7
 28956  0143A2  36E3               	rlcf	plusw1,f,c
 28957  0143A4  0EFA               	movlw	-6
 28958  0143A6  36E3               	rlcf	plusw1,f,c
 28959                           
 28960                           ;stkvar	_temp @ sp[(-13)+8]
 28961  0143A8  50E1               	movf	fsr1l,w,c
 28962  0143AA  0FFB               	addlw	-5
 28963  0143AC  6ED9               	movwf	fsr2l,c
 28964  0143AE  50E2               	movf	fsr1h,w,c
 28965  0143B0  6EDA               	movwf	fsr2h,c
 28966  0143B2  0EFF               	movlw	255
 28967  0143B4  22DA               	addwfc	fsr2h,f,c
 28968  0143B6  06DE               	decf	postinc2,f,c
 28969  0143B8  0E00               	movlw	0
 28970  0143BA  5ADD               	subwfb	postdec2,f,c
 28971  0143BC                     l8448:
 28972                           
 28973                           ;stkvar	_prod @ sp[(-13)+0]
 28974  0143BC  0EF5               	movlw	-11
 28975  0143BE  AEE3               	btfss	plusw1,7,c
 28976  0143C0  D7DC               	goto	l8438
 28977                           
 28978                           ;stkvar	_aexp @ sp[(-13)+11]
 28979  0143C2  0EFE               	movlw	-2
 28980  0143C4  6AE3               	clrf	plusw1,c
 28981                           
 28982                           ;stkvar	_grs @ sp[(-13)+4]
 28983  0143C6  0EFA               	movlw	-6
 28984  0143C8  AEE3               	btfss	plusw1,7,c
 28985  0143CA  D020               	goto	l8462
 28986                           
 28987                           ;stkvar	_grs @ sp[(-13)+4]
 28988  0143CC  50E1               	movf	fsr1l,w,c
 28989  0143CE  0FF7               	addlw	-9
 28990  0143D0  6ED9               	movwf	fsr2l,c
 28991  0143D2  50E2               	movf	fsr1h,w,c
 28992  0143D4  6EDA               	movwf	fsr2h,c
 28993  0143D6  0EFF               	movlw	255
 28994  0143D8  22DA               	addwfc	fsr2h,f,c
 28995  0143DA  0EFF               	movlw	255
 28996  0143DC  14DE               	andwf	postinc2,w,c
 28997  0143DE  6E09               	movwf	(btemp+8)^0,c
 28998  0143E0  0EFF               	movlw	255
 28999  0143E2  14DE               	andwf	postinc2,w,c
 29000  0143E4  6E0A               	movwf	(btemp+9)^0,c
 29001  0143E6  0EFF               	movlw	255
 29002  0143E8  14DE               	andwf	postinc2,w,c
 29003  0143EA  6E0B               	movwf	(btemp+10)^0,c
 29004  0143EC  0E7F               	movlw	127
 29005  0143EE  14DE               	andwf	postinc2,w,c
 29006  0143F0  6E0C               	movwf	(btemp+11)^0,c
 29007  0143F2  5009               	movf	(btemp+8)^0,w,c
 29008  0143F4  100A               	iorwf	(btemp+9)^0,w,c
 29009  0143F6  100B               	iorwf	(btemp+10)^0,w,c
 29010  0143F8  100C               	iorwf	(btemp+11)^0,w,c
 29011  0143FA  B4D8               	btfsc	status,2,c
 29012  0143FC  D004               	goto	l8458
 29013  0143FE                     u6910:
 29014                           
 29015                           ;stkvar	_aexp @ sp[(-13)+11]
 29016  0143FE  0EFE               	movlw	-2
 29017  014400  6AE3               	clrf	plusw1,c
 29018  014402  2AE3               	incf	plusw1,f,c
 29019  014404  D003               	goto	l8462
 29020  014406                     l8458:
 29021                           
 29022                           ;stkvar	_prod @ sp[(-13)+0]
 29023  014406  0EF3               	movlw	-13
 29024  014408  B0E3               	btfsc	plusw1,0,c
 29025  01440A  D7F9               	goto	u6910
 29026  01440C                     l8462:
 29027                           
 29028                           ;stkvar	_aexp @ sp[(-13)+11]
 29029  01440C  0EFE               	movlw	-2
 29030  01440E  50E3               	movf	plusw1,w,c
 29031  014410  B4D8               	btfsc	status,2,c
 29032  014412  D036               	goto	l8472
 29033                           
 29034                           ;stkvar	_prod @ sp[(-13)+0]
 29035  014414  50E1               	movf	fsr1l,w,c
 29036  014416  0FF3               	addlw	-13
 29037  014418  6ED9               	movwf	fsr2l,c
 29038  01441A  50E2               	movf	fsr1h,w,c
 29039  01441C  6EDA               	movwf	fsr2h,c
 29040  01441E  0EFF               	movlw	255
 29041  014420  22DA               	addwfc	fsr2h,f,c
 29042  014422  2ADE               	incf	postinc2,f,c
 29043  014424  0E00               	movlw	0
 29044  014426  22DE               	addwfc	postinc2,f,c
 29045  014428  22DE               	addwfc	postinc2,f,c
 29046  01442A  22DE               	addwfc	postinc2,f,c
 29047                           
 29048                           ;stkvar	_prod @ sp[(-13)+0]
 29049  01442C  0EF6               	movlw	-10
 29050  01442E  A0E3               	btfss	plusw1,0,c
 29051  014430  D027               	goto	l8472
 29052  014432  0E01               	movlw	1
 29053  014434  6E0C               	movwf	(btemp+11)^0,c
 29054                           
 29055                           ;stkvar	_prod @ sp[(-13)+0]
 29056  014436  50E1               	movf	fsr1l,w,c
 29057  014438  0FF3               	addlw	-13
 29058  01443A  6ED9               	movwf	fsr2l,c
 29059  01443C  50E2               	movf	fsr1h,w,c
 29060  01443E  6EDA               	movwf	fsr2h,c
 29061  014440  0EFF               	movlw	255
 29062  014442  22DA               	addwfc	fsr2h,f,c
 29063  014444  280C               	incf	(btemp+11)^0,w,c
 29064  014446  52DE               	movf	postinc2,f,c
 29065  014448  D008               	goto	u6950
 29066  01444A                     u6955:
 29067  01444A  52DE               	movf	postinc2,f,c
 29068  01444C  90D8               	bcf	status,0,c
 29069  01444E  BEDC               	btfsc	preinc2,7,c
 29070  014450  80D8               	bsf	status,0,c
 29071  014452  32DD               	rrcf	postdec2,f,c
 29072  014454  32DD               	rrcf	postdec2,f,c
 29073  014456  32DD               	rrcf	postdec2,f,c
 29074  014458  32DE               	rrcf	postinc2,f,c
 29075  01445A                     u6950:
 29076  01445A  2EE8               	decfsz	wreg,f,c
 29077  01445C  D7F6               	goto	u6955
 29078                           
 29079                           ;stkvar	_temp @ sp[(-13)+8]
 29080  01445E  0EFB               	movlw	-5
 29081  014460  50E3               	movf	plusw1,w,c
 29082  014462  0F01               	addlw	1
 29083  014464  6E01               	movwf	btemp^0,c
 29084  014466  0EFB               	movlw	-5
 29085  014468  0060  F007  FFE3   	movff	btemp,plusw1
 29086  01446E  6A01               	clrf	btemp^0,c
 29087  014470  0EFC               	movlw	-4
 29088  014472  50E3               	movf	plusw1,w,c
 29089  014474  2001               	addwfc	btemp^0,w,c
 29090  014476  6E01               	movwf	btemp^0,c
 29091  014478  0EFC               	movlw	-4
 29092  01447A  0060  F007  FFE3   	movff	btemp,plusw1
 29093  014480                     l8472:
 29094                           
 29095                           ;stkvar	_temp @ sp[(-13)+8]
 29096  014480  0EFC               	movlw	-4
 29097  014482  BEE3               	btfsc	plusw1,7,c
 29098  014484  D020               	goto	l8476
 29099  014486  0EFC               	movlw	-4
 29100  014488  50E3               	movf	plusw1,w,c
 29101  01448A  E104               	bnz	u6960
 29102  01448C  0EFB               	movlw	-5
 29103  01448E  28E3               	incf	plusw1,w,c
 29104  014490  A0D8               	btfss	status,0,c
 29105  014492  D019               	goto	l8476
 29106  014494                     u6960:
 29107  014494  0E00               	movlw	0
 29108  014496  6E09               	movwf	(btemp+8)^0,c
 29109  014498  0E00               	movlw	0
 29110  01449A  6E0A               	movwf	(btemp+9)^0,c
 29111  01449C  0E80               	movlw	128
 29112  01449E  6E0B               	movwf	(btemp+10)^0,c
 29113  0144A0  0E7F               	movlw	127
 29114  0144A2  6E0C               	movwf	(btemp+11)^0,c
 29115                           
 29116                           ;stkvar	_prod @ sp[(-13)+0]
 29117  0144A4  0EF3               	movlw	-13
 29118  0144A6  0060  F027  FFE3   	movff	btemp+8,plusw1
 29119  0144AC  0EF4               	movlw	-12
 29120  0144AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29121  0144B4  0EF5               	movlw	-11
 29122  0144B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29123  0144BC  0EF6               	movlw	-10
 29124  0144BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 29125  0144C4  D044               	goto	l8492
 29126  0144C6                     l8476:
 29127                           
 29128                           ;stkvar	_temp @ sp[(-13)+8]
 29129  0144C6  0EFC               	movlw	-4
 29130  0144C8  BEE3               	btfsc	plusw1,7,c
 29131  0144CA  D007               	goto	u6970
 29132  0144CC  0EFC               	movlw	-4
 29133  0144CE  50E3               	movf	plusw1,w,c
 29134  0144D0  E10F               	bnz	l8482
 29135  0144D2  0EFB               	movlw	-5
 29136  0144D4  04E3               	decf	plusw1,w,c
 29137  0144D6  B0D8               	btfsc	status,0,c
 29138  0144D8  D00B               	goto	l8482
 29139  0144DA                     u6970:
 29140                           
 29141                           ;stkvar	_prod @ sp[(-13)+0]
 29142  0144DA  0EF3               	movlw	-13
 29143  0144DC  6AE3               	clrf	plusw1,c
 29144  0144DE  0EF4               	movlw	-12
 29145  0144E0  6AE3               	clrf	plusw1,c
 29146  0144E2  0EF5               	movlw	-11
 29147  0144E4  6AE3               	clrf	plusw1,c
 29148  0144E6  0EF6               	movlw	-10
 29149  0144E8  6AE3               	clrf	plusw1,c
 29150                           
 29151                           ;stkvar	_sign @ sp[(-13)+12]
 29152  0144EA  0EFF               	movlw	-1
 29153  0144EC  6AE3               	clrf	plusw1,c
 29154  0144EE  D02F               	goto	l8492
 29155  0144F0                     l8482:
 29156                           
 29157                           ;stkvar	_temp @ sp[(-13)+8]
 29158                           ;stkvar	_bexp @ sp[(-13)+10]
 29159  0144F0  0EFB               	movlw	-5
 29160  0144F2  006F FF8C  F001    	movff	plusw1,btemp
 29161  0144F8  0EFD               	movlw	-3
 29162  0144FA  0060  F007  FFE3   	movff	btemp,plusw1
 29163                           
 29164                           ;stkvar	_prod @ sp[(-13)+0]
 29165  014500  50E1               	movf	fsr1l,w,c
 29166  014502  0FF3               	addlw	-13
 29167  014504  6ED9               	movwf	fsr2l,c
 29168  014506  50E2               	movf	fsr1h,w,c
 29169  014508  6EDA               	movwf	fsr2h,c
 29170  01450A  0EFF               	movlw	255
 29171  01450C  22DA               	addwfc	fsr2h,f,c
 29172  01450E  0EFF               	movlw	255
 29173  014510  16DE               	andwf	postinc2,f,c
 29174  014512  0EFF               	movlw	255
 29175  014514  16DE               	andwf	postinc2,f,c
 29176  014516  0E7F               	movlw	127
 29177  014518  16DE               	andwf	postinc2,f,c
 29178  01451A  0E00               	movlw	0
 29179  01451C  16DE               	andwf	postinc2,f,c
 29180                           
 29181                           ;stkvar	_bexp @ sp[(-13)+10]
 29182  01451E  0EFD               	movlw	-3
 29183  014520  A0E3               	btfss	plusw1,0,c
 29184  014522  D008               	goto	l8490
 29185                           
 29186                           ;stkvar	_prod @ sp[(-13)+0]
 29187  014524  0EF5               	movlw	245
 29188  014526  24E1               	addwf	fsr1l,w,c
 29189  014528  6ED9               	movwf	fsr2l,c
 29190  01452A  0EFF               	movlw	255
 29191  01452C  20E2               	addwfc	fsr1h,w,c
 29192  01452E  6EDA               	movwf	fsr2h,c
 29193  014530  0E00               	movlw	0
 29194  014532  8EDB               	bsf	plusw2,7,c
 29195  014534                     l8490:
 29196                           
 29197                           ;stkvar	_prod @ sp[(-13)+0]
 29198  014534  0EF6               	movlw	246
 29199  014536  24E1               	addwf	fsr1l,w,c
 29200  014538  6ED9               	movwf	fsr2l,c
 29201  01453A  0EFF               	movlw	255
 29202  01453C  20E2               	addwfc	fsr1h,w,c
 29203  01453E  6EDA               	movwf	fsr2h,c
 29204                           
 29205                           ;stkvar	_bexp @ sp[(-13)+10]
 29206  014540  0EFD               	movlw	-3
 29207  014542  006F FF8C  F00C    	movff	plusw1,btemp+11
 29208  014548  90D8               	bcf	status,0,c
 29209  01454A  300C               	rrcf	(btemp+11)^0,w,c
 29210  01454C  6EDF               	movwf	indf2,c
 29211  01454E                     l8492:
 29212                           
 29213                           ;stkvar	_sign @ sp[(-13)+12]
 29214  01454E  0EFF               	movlw	-1
 29215  014550  006F FF8C  F00C    	movff	plusw1,btemp+11
 29216                           
 29217                           ;stkvar	_prod @ sp[(-13)+0]
 29218  014556  0EF6               	movlw	246
 29219  014558  24E1               	addwf	fsr1l,w,c
 29220  01455A  6ED9               	movwf	fsr2l,c
 29221  01455C  0EFF               	movlw	255
 29222  01455E  20E2               	addwfc	fsr1h,w,c
 29223  014560  6EDA               	movwf	fsr2h,c
 29224  014562  500C               	movf	(btemp+11)^0,w,c
 29225  014564  12DF               	iorwf	indf2,f,c
 29226                           
 29227                           ;stkvar	_prod @ sp[(-13)+0]
 29228  014566  0EF3               	movlw	-13
 29229  014568  006F FF8C  F001    	movff	plusw1,btemp
 29230  01456E  0EF4               	movlw	-12
 29231  014570  006F FF8C  F002    	movff	plusw1,btemp+1
 29232  014576  0EF5               	movlw	-11
 29233  014578  006F FF8C  F003    	movff	plusw1,btemp+2
 29234  01457E  0EF6               	movlw	-10
 29235  014580  006F FF8C  F004    	movff	plusw1,btemp+3
 29236  014586                     l3013:
 29237                           
 29238                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29239  014586  0EEB               	movlw	235
 29240  014588  26E1               	addwf	fsr1l,f,c
 29241  01458A  0EFF               	movlw	255
 29242  01458C  22E2               	addwfc	fsr1h,f,c
 29243  01458E  0012               	return		;funcret
 29244  014590                     __end_of___flmul:
 29245                           	opt callstack 0
 29246                           
 29247 ;; *************** function _SYSTEM_Initialize *****************
 29248 ;; Defined at:
 29249 ;;		line 50 in file "mcc_generated_files/mcc.c"
 29250 ;; Parameters:    Size  Location     Type
 29251 ;;		None
 29252 ;; Auto vars:     Size  Location     Type
 29253 ;;		None
 29254 ;; Return value:  Size  Location     Type
 29255 ;;                  1  [STACK] void 
 29256 ;; Registers used:
 29257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 29258 ;; Tracked objects:
 29259 ;;		On entry : 0/0
 29260 ;;		On exit  : 3F/3C
 29261 ;;		Unchanged: 0/0
 29262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29267 ;;Total ram usage:        0 bytes
 29268 ;; Hardware stack levels used:    1
 29269 ;; Hardware stack levels required when called:   17
 29270 ;; This function calls:
 29271 ;;		_ADCC_Initialize
 29272 ;;		_CLKREF_Initialize
 29273 ;;		_DMA1_Initialize
 29274 ;;		_DMA2_Initialize
 29275 ;;		_EXT_INT_Initialize
 29276 ;;		_FVR_Initialize
 29277 ;;		_INTERRUPT_Initialize
 29278 ;;		_OSCILLATOR_Initialize
 29279 ;;		_PIN_MANAGER_Initialize
 29280 ;;		_PMD_Initialize
 29281 ;;		_PWM8_Initialize
 29282 ;;		_SPI1_Initialize
 29283 ;;		_TMR2_Initialize
 29284 ;;		_TMR3_Initialize
 29285 ;;		_TMR5_Initialize
 29286 ;;		_TMR6_Initialize
 29287 ;;		_UART1_Initialize
 29288 ;;		_UART2_Initialize
 29289 ;; This function is called by:
 29290 ;;		_main
 29291 ;; This function uses a reentrant model
 29292 ;;
 29293                           
 29294                           	psect	text109
 29295  01B41E                     __ptext109:
 29296                           	opt callstack 0
 29297  01B41E                     _SYSTEM_Initialize:
 29298                           	opt callstack 13
 29299                           
 29300                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 29301                           
 29302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29303                           ;incstack = 0
 29304  01B41E  ECF3  F0D7         	call	_INTERRUPT_Initialize	;wreg free
 29305                           
 29306                           ; BSR set to: 57
 29307                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 29308  01B422  EC38  F0E0         	call	_PMD_Initialize	;wreg free
 29309                           
 29310                           ; BSR set to: 57
 29311                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 29312  01B426  EC7E  F0D5         	call	_PIN_MANAGER_Initialize	;wreg free
 29313                           
 29314                           ; BSR set to: 58
 29315                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 29316  01B42A  EC2D  F0E0         	call	_OSCILLATOR_Initialize	;wreg free
 29317                           
 29318                           ; BSR set to: 57
 29319                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 29320  01B42E  ECC3  F0E0         	call	_FVR_Initialize	;wreg free
 29321                           
 29322                           ; BSR set to: 62
 29323                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 29324  01B432  EC89  F0D7         	call	_ADCC_Initialize	;wreg free
 29325                           
 29326                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 29327  01B436  EC22  F0E0         	call	_PWM8_Initialize	;wreg free
 29328                           
 29329                           ; BSR set to: 63
 29330                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 29331  01B43A  EC0B  F0E0         	call	_TMR2_Initialize	;wreg free
 29332                           
 29333                           ; BSR set to: 57
 29334                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 29335  01B43E  ECB7  F0DC         	call	_EXT_INT_Initialize	;wreg free
 29336                           
 29337                           ; BSR set to: 57
 29338                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 29339  01B442  EC8A  F0DD         	call	_TMR6_Initialize	;wreg free
 29340                           
 29341                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 29342  01B446  ECA0  F0DA         	call	_TMR3_Initialize	;wreg free
 29343                           
 29344                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 29345  01B44A  EC7C  F0DA         	call	_TMR5_Initialize	;wreg free
 29346                           
 29347                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 29348  01B44E  EC58  F0DA         	call	_UART1_Initialize	;wreg free
 29349                           
 29350                           ; BSR set to: 57
 29351                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 29352  01B452  ECBA  F0D8         	call	_UART2_Initialize	;wreg free
 29353                           
 29354                           ; BSR set to: 57
 29355                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 29356  01B456  EC17  F0E0         	call	_SPI1_Initialize	;wreg free
 29357                           
 29358                           ; BSR set to: 61
 29359                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 29360  01B45A  EC44  F0D9         	call	_DMA2_Initialize	;wreg free
 29361                           
 29362                           ; BSR set to: 59
 29363                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 29364  01B45E  EC54  F0D7         	call	_DMA1_Initialize	;wreg free
 29365                           
 29366                           ; BSR set to: 59
 29367                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 29368  01B462  EC97  F0E0         	call	_CLKREF_Initialize	;wreg free
 29369                           
 29370                           ; BSR set to: 60
 29371                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29372  01B466  0012               	return		;funcret
 29373  01B468                     __end_of_SYSTEM_Initialize:
 29374                           	opt callstack 0
 29375                           
 29376 ;; *************** function _UART2_Initialize *****************
 29377 ;; Defined at:
 29378 ;;		line 78 in file "mcc_generated_files/uart2.c"
 29379 ;; Parameters:    Size  Location     Type
 29380 ;;		None
 29381 ;; Auto vars:     Size  Location     Type
 29382 ;;		None
 29383 ;; Return value:  Size  Location     Type
 29384 ;;                  1  [STACK] void 
 29385 ;; Registers used:
 29386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29387 ;; Tracked objects:
 29388 ;;		On entry : 3F/39
 29389 ;;		On exit  : 3F/39
 29390 ;;		Unchanged: 0/0
 29391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29396 ;;Total ram usage:        0 bytes
 29397 ;; Hardware stack levels used:    1
 29398 ;; Hardware stack levels required when called:   16
 29399 ;; This function calls:
 29400 ;;		_UART2_SetRxInterruptHandler
 29401 ;;		_UART2_SetTxInterruptHandler
 29402 ;; This function is called by:
 29403 ;;		_SYSTEM_Initialize
 29404 ;; This function uses a reentrant model
 29405 ;;
 29406                           
 29407                           	psect	text110
 29408  01B174                     __ptext110:
 29409                           	opt callstack 0
 29410  01B174                     _UART2_Initialize:
 29411                           	opt callstack 13
 29412                           
 29413                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 29414                           
 29415                           ; BSR set to: 60
 29416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29417                           ;incstack = 0
 29418  01B174  0139               	movlb	57	; () banked
 29419  01B176  9596               	bcf	150,2,b	;volatile
 29420                           
 29421                           ; BSR set to: 57
 29422                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29423  01B178  0EF8               	movlw	low _UART2_Receive_ISR
 29424  01B17A  6EE6               	movwf	postinc1,c
 29425  01B17C  0EBE               	movlw	high _UART2_Receive_ISR
 29426  01B17E  6EE6               	movwf	postinc1,c
 29427  01B180  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29428  01B182  6EE6               	movwf	postinc1,c
 29429  01B184  ECDB  F0DD         	call	_UART2_SetRxInterruptHandler	;wreg free
 29430                           
 29431                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29432  01B188  0139               	movlb	57	; () banked
 29433  01B18A  9796               	bcf	150,3,b	;volatile
 29434                           
 29435                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29436  01B18C  0EE8               	movlw	low _UART2_Transmit_ISR
 29437  01B18E  6EE6               	movwf	postinc1,c
 29438  01B190  0EBA               	movlw	high _UART2_Transmit_ISR
 29439  01B192  6EE6               	movwf	postinc1,c
 29440  01B194  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29441  01B196  6EE6               	movwf	postinc1,c
 29442  01B198  ECC7  F0DD         	call	_UART2_SetTxInterruptHandler	;wreg free
 29443                           
 29444                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29445  01B19C  013D               	movlb	61	; () banked
 29446  01B19E  6BD4               	clrf	212,b	;volatile
 29447                           
 29448                           ; BSR set to: 61
 29449                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29450  01B1A0  6BD6               	clrf	214,b	;volatile
 29451                           
 29452                           ; BSR set to: 61
 29453                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29454  01B1A2  6BD8               	clrf	216,b	;volatile
 29455                           
 29456                           ; BSR set to: 61
 29457                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29458  01B1A4  0EB0               	movlw	176
 29459  01B1A6  6FDA               	movwf	218,b	;volatile
 29460                           
 29461                           ; BSR set to: 61
 29462                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29463  01B1A8  0E80               	movlw	128
 29464  01B1AA  6FDB               	movwf	219,b	;volatile
 29465                           
 29466                           ; BSR set to: 61
 29467                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29468  01B1AC  6BDC               	clrf	220,b	;volatile
 29469                           
 29470                           ; BSR set to: 61
 29471                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29472  01B1AE  0E82               	movlw	130
 29473  01B1B0  6FDD               	movwf	221,b	;volatile
 29474                           
 29475                           ; BSR set to: 61
 29476                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29477  01B1B2  0E06               	movlw	6
 29478  01B1B4  6FDE               	movwf	222,b	;volatile
 29479                           
 29480                           ; BSR set to: 61
 29481                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29482  01B1B6  6BDF               	clrf	223,b	;volatile
 29483                           
 29484                           ; BSR set to: 61
 29485                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29486  01B1B8  6BE0               	clrf	224,b	;volatile
 29487                           
 29488                           ; BSR set to: 61
 29489                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29490  01B1BA  6BE1               	clrf	225,b	;volatile
 29491                           
 29492                           ; BSR set to: 61
 29493                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29494  01B1BC  6BE2               	clrf	226,b	;volatile
 29495                           
 29496                           ; BSR set to: 61
 29497                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29498  01B1BE  0100               	movlb	0	; () banked
 29499  01B1C0  6BCD               	clrf	_uart2TxHead& (0+255),b	;volatile
 29500                           
 29501                           ; BSR set to: 0
 29502                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29503  01B1C2  6A45               	clrf	_uart2TxTail^0,c	;volatile
 29504                           
 29505                           ; BSR set to: 0
 29506                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29507  01B1C4  0E40               	movlw	64
 29508  01B1C6  6E44               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29509                           
 29510                           ; BSR set to: 0
 29511                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29512  01B1C8  6A43               	clrf	_uart2RxHead^0,c	;volatile
 29513                           
 29514                           ; BSR set to: 0
 29515                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29516  01B1CA  6BCC               	clrf	_uart2RxTail& (0+255),b	;volatile
 29517                           
 29518                           ; BSR set to: 0
 29519                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29520  01B1CC  6BCB               	clrf	_uart2RxCount& (0+255),b	;volatile
 29521                           
 29522                           ; BSR set to: 0
 29523                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29524  01B1CE  0139               	movlb	57	; () banked
 29525  01B1D0  8596               	bsf	150,2,b	;volatile
 29526                           
 29527                           ; BSR set to: 57
 29528                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29529  01B1D2  0012               	return		;funcret
 29530  01B1D4                     __end_of_UART2_Initialize:
 29531                           	opt callstack 0
 29532                           
 29533 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29534 ;; Defined at:
 29535 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29536 ;; Parameters:    Size  Location     Type
 29537 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29538 ;;		 -> UART2_Transmit_ISR(1), 
 29539 ;; Auto vars:     Size  Location     Type
 29540 ;;		None
 29541 ;; Return value:  Size  Location     Type
 29542 ;;                  1  [STACK] void 
 29543 ;; Registers used:
 29544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29545 ;; Tracked objects:
 29546 ;;		On entry : 3F/39
 29547 ;;		On exit  : 0/0
 29548 ;;		Unchanged: 0/0
 29549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29554 ;;Total ram usage:        0 bytes
 29555 ;; Hardware stack levels used:    1
 29556 ;; Hardware stack levels required when called:   15
 29557 ;; This function calls:
 29558 ;;		Nothing
 29559 ;; This function is called by:
 29560 ;;		_UART2_Initialize
 29561 ;; This function uses a reentrant model
 29562 ;;
 29563                           
 29564                           	psect	text111
 29565  01BB8E                     __ptext111:
 29566                           	opt callstack 0
 29567  01BB8E                     _UART2_SetTxInterruptHandler:
 29568                           	opt callstack 13
 29569                           
 29570                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29571                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29572                           
 29573                           ; BSR set to: 57
 29574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29575                           ;incstack = 0
 29576  01BB8E  50E1               	movf	fsr1l,w,c
 29577  01BB90  0FFD               	addlw	-3
 29578  01BB92  6ED9               	movwf	fsr2l,c
 29579  01BB94  50E2               	movf	fsr1h,w,c
 29580  01BB96  6EDA               	movwf	fsr2h,c
 29581  01BB98  0EFF               	movlw	255
 29582  01BB9A  22DA               	addwfc	fsr2h,f,c
 29583  01BB9C  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 29584  01BBA2  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 29585  01BBA8  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 29586                           
 29587                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29588  01BBAE  52E5               	movf	postdec1,f,c
 29589  01BBB0  52E5               	movf	postdec1,f,c
 29590  01BBB2  52E5               	movf	postdec1,f,c
 29591  01BBB4  0012               	return		;funcret
 29592  01BBB6                     __end_of_UART2_SetTxInterruptHandler:
 29593                           	opt callstack 0
 29594                           
 29595 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29596 ;; Defined at:
 29597 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29598 ;; Parameters:    Size  Location     Type
 29599 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29600 ;;		 -> UART2_Receive_ISR(1), 
 29601 ;; Auto vars:     Size  Location     Type
 29602 ;;		None
 29603 ;; Return value:  Size  Location     Type
 29604 ;;                  1  [STACK] void 
 29605 ;; Registers used:
 29606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29607 ;; Tracked objects:
 29608 ;;		On entry : 3F/39
 29609 ;;		On exit  : 0/0
 29610 ;;		Unchanged: 0/0
 29611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29616 ;;Total ram usage:        0 bytes
 29617 ;; Hardware stack levels used:    1
 29618 ;; Hardware stack levels required when called:   15
 29619 ;; This function calls:
 29620 ;;		Nothing
 29621 ;; This function is called by:
 29622 ;;		_UART2_Initialize
 29623 ;; This function uses a reentrant model
 29624 ;;
 29625                           
 29626                           	psect	text112
 29627  01BBB6                     __ptext112:
 29628                           	opt callstack 0
 29629  01BBB6                     _UART2_SetRxInterruptHandler:
 29630                           	opt callstack 13
 29631                           
 29632                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29633                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29634                           
 29635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29636                           ;incstack = 0
 29637  01BBB6  50E1               	movf	fsr1l,w,c
 29638  01BBB8  0FFD               	addlw	-3
 29639  01BBBA  6ED9               	movwf	fsr2l,c
 29640  01BBBC  50E2               	movf	fsr1h,w,c
 29641  01BBBE  6EDA               	movwf	fsr2h,c
 29642  01BBC0  0EFF               	movlw	255
 29643  01BBC2  22DA               	addwfc	fsr2h,f,c
 29644  01BBC4  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 29645  01BBCA  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 29646  01BBD0  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 29647                           
 29648                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29649  01BBD6  52E5               	movf	postdec1,f,c
 29650  01BBD8  52E5               	movf	postdec1,f,c
 29651  01BBDA  52E5               	movf	postdec1,f,c
 29652  01BBDC  0012               	return		;funcret
 29653  01BBDE                     __end_of_UART2_SetRxInterruptHandler:
 29654                           	opt callstack 0
 29655                           
 29656 ;; *************** function _UART1_Initialize *****************
 29657 ;; Defined at:
 29658 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29659 ;; Parameters:    Size  Location     Type
 29660 ;;		None
 29661 ;; Auto vars:     Size  Location     Type
 29662 ;;		None
 29663 ;; Return value:  Size  Location     Type
 29664 ;;                  1  [STACK] void 
 29665 ;; Registers used:
 29666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29667 ;; Tracked objects:
 29668 ;;		On entry : 0/39
 29669 ;;		On exit  : 3F/39
 29670 ;;		Unchanged: 0/0
 29671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29676 ;;Total ram usage:        0 bytes
 29677 ;; Hardware stack levels used:    1
 29678 ;; Hardware stack levels required when called:   16
 29679 ;; This function calls:
 29680 ;;		_UART1_SetRxInterruptHandler
 29681 ;; This function is called by:
 29682 ;;		_SYSTEM_Initialize
 29683 ;; This function uses a reentrant model
 29684 ;;
 29685                           
 29686                           	psect	text113
 29687  01B4B0                     __ptext113:
 29688                           	opt callstack 0
 29689  01B4B0                     _UART1_Initialize:
 29690                           	opt callstack 13
 29691                           
 29692                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29693                           
 29694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29695                           ;incstack = 0
 29696  01B4B0  0139               	movlb	57	; () banked
 29697  01B4B2  9793               	bcf	147,3,b	;volatile
 29698                           
 29699                           ; BSR set to: 57
 29700                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29701  01B4B4  0E90               	movlw	low _UART1_Receive_ISR
 29702  01B4B6  6EE6               	movwf	postinc1,c
 29703  01B4B8  0EBF               	movlw	high _UART1_Receive_ISR
 29704  01B4BA  6EE6               	movwf	postinc1,c
 29705  01B4BC  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29706  01B4BE  6EE6               	movwf	postinc1,c
 29707  01B4C0  ECEF  F0DD         	call	_UART1_SetRxInterruptHandler	;wreg free
 29708                           
 29709                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29710  01B4C4  013D               	movlb	61	; () banked
 29711  01B4C6  6BEC               	clrf	236,b	;volatile
 29712                           
 29713                           ; BSR set to: 61
 29714                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29715  01B4C8  6BED               	clrf	237,b	;volatile
 29716                           
 29717                           ; BSR set to: 61
 29718                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29719  01B4CA  6BEE               	clrf	238,b	;volatile
 29720                           
 29721                           ; BSR set to: 61
 29722                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29723  01B4CC  6BEF               	clrf	239,b	;volatile
 29724                           
 29725                           ; BSR set to: 61
 29726                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29727  01B4CE  6BF0               	clrf	240,b	;volatile
 29728                           
 29729                           ; BSR set to: 61
 29730                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29731  01B4D0  6BF1               	clrf	241,b	;volatile
 29732                           
 29733                           ; BSR set to: 61
 29734                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29735  01B4D2  0EB0               	movlw	176
 29736  01B4D4  6FF2               	movwf	242,b	;volatile
 29737                           
 29738                           ; BSR set to: 61
 29739                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29740  01B4D6  0E80               	movlw	128
 29741  01B4D8  6FF3               	movwf	243,b	;volatile
 29742                           
 29743                           ; BSR set to: 61
 29744                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29745  01B4DA  6BF4               	clrf	244,b	;volatile
 29746                           
 29747                           ; BSR set to: 61
 29748                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29749  01B4DC  0E8A               	movlw	138
 29750  01B4DE  6FF5               	movwf	245,b	;volatile
 29751                           
 29752                           ; BSR set to: 61
 29753                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29754  01B4E0  6BF6               	clrf	246,b	;volatile
 29755                           
 29756                           ; BSR set to: 61
 29757                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29758  01B4E2  6BF7               	clrf	247,b	;volatile
 29759                           
 29760                           ; BSR set to: 61
 29761                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29762  01B4E4  6BF8               	clrf	248,b	;volatile
 29763                           
 29764                           ; BSR set to: 61
 29765                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29766  01B4E6  6BF9               	clrf	249,b	;volatile
 29767                           
 29768                           ; BSR set to: 61
 29769                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29770  01B4E8  6BFA               	clrf	250,b	;volatile
 29771                           
 29772                           ; BSR set to: 61
 29773                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29774  01B4EA  6A47               	clrf	_uart1RxHead^0,c	;volatile
 29775                           
 29776                           ; BSR set to: 61
 29777                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29778  01B4EC  6A46               	clrf	_uart1RxTail^0,c	;volatile
 29779                           
 29780                           ; BSR set to: 61
 29781                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29782  01B4EE  0100               	movlb	0	; () banked
 29783  01B4F0  6BCE               	clrf	_uart1RxCount& (0+255),b	;volatile
 29784                           
 29785                           ; BSR set to: 0
 29786                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29787  01B4F2  0139               	movlb	57	; () banked
 29788  01B4F4  8793               	bsf	147,3,b	;volatile
 29789                           
 29790                           ; BSR set to: 57
 29791                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29792  01B4F6  0012               	return		;funcret
 29793  01B4F8                     __end_of_UART1_Initialize:
 29794                           	opt callstack 0
 29795                           
 29796 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29797 ;; Defined at:
 29798 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29799 ;; Parameters:    Size  Location     Type
 29800 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29801 ;;		 -> UART1_Receive_ISR(1), 
 29802 ;; Auto vars:     Size  Location     Type
 29803 ;;		None
 29804 ;; Return value:  Size  Location     Type
 29805 ;;                  1  [STACK] void 
 29806 ;; Registers used:
 29807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29808 ;; Tracked objects:
 29809 ;;		On entry : 3F/39
 29810 ;;		On exit  : 0/0
 29811 ;;		Unchanged: 0/0
 29812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29817 ;;Total ram usage:        0 bytes
 29818 ;; Hardware stack levels used:    1
 29819 ;; Hardware stack levels required when called:   15
 29820 ;; This function calls:
 29821 ;;		Nothing
 29822 ;; This function is called by:
 29823 ;;		_UART1_Initialize
 29824 ;; This function uses a reentrant model
 29825 ;;
 29826                           
 29827                           	psect	text114
 29828  01BBDE                     __ptext114:
 29829                           	opt callstack 0
 29830  01BBDE                     _UART1_SetRxInterruptHandler:
 29831                           	opt callstack 13
 29832                           
 29833                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29834                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29835                           
 29836                           ; BSR set to: 57
 29837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29838                           ;incstack = 0
 29839  01BBDE  50E1               	movf	fsr1l,w,c
 29840  01BBE0  0FFD               	addlw	-3
 29841  01BBE2  6ED9               	movwf	fsr2l,c
 29842  01BBE4  50E2               	movf	fsr1h,w,c
 29843  01BBE6  6EDA               	movwf	fsr2h,c
 29844  01BBE8  0EFF               	movlw	255
 29845  01BBEA  22DA               	addwfc	fsr2h,f,c
 29846  01BBEC  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29847  01BBF2  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29848  01BBF8  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29849                           
 29850                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29851  01BBFE  52E5               	movf	postdec1,f,c
 29852  01BC00  52E5               	movf	postdec1,f,c
 29853  01BC02  52E5               	movf	postdec1,f,c
 29854  01BC04  0012               	return		;funcret
 29855  01BC06                     __end_of_UART1_SetRxInterruptHandler:
 29856                           	opt callstack 0
 29857                           
 29858 ;; *************** function _TMR6_Initialize *****************
 29859 ;; Defined at:
 29860 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29861 ;; Parameters:    Size  Location     Type
 29862 ;;		None
 29863 ;; Auto vars:     Size  Location     Type
 29864 ;;		None
 29865 ;; Return value:  Size  Location     Type
 29866 ;;                  1  [STACK] void 
 29867 ;; Registers used:
 29868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29869 ;; Tracked objects:
 29870 ;;		On entry : 3F/39
 29871 ;;		On exit  : 0/0
 29872 ;;		Unchanged: 0/0
 29873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29878 ;;Total ram usage:        0 bytes
 29879 ;; Hardware stack levels used:    1
 29880 ;; Hardware stack levels required when called:   16
 29881 ;; This function calls:
 29882 ;;		_TMR6_SetInterruptHandler
 29883 ;; This function is called by:
 29884 ;;		_SYSTEM_Initialize
 29885 ;; This function uses a reentrant model
 29886 ;;
 29887                           
 29888                           	psect	text115
 29889  01BB14                     __ptext115:
 29890                           	opt callstack 0
 29891  01BB14                     _TMR6_Initialize:
 29892                           	opt callstack 13
 29893                           
 29894                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29895                           
 29896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29897                           ;incstack = 0
 29898  01BB14  0E01               	movlw	1
 29899  01BB16  6E96               	movwf	150,c	;volatile
 29900                           
 29901                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29902  01BB18  6A95               	clrf	149,c	;volatile
 29903                           
 29904                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29905  01BB1A  6A97               	clrf	151,c	;volatile
 29906                           
 29907                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29908  01BB1C  0E7C               	movlw	124
 29909  01BB1E  6E93               	movwf	147,c	;volatile
 29910                           
 29911                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29912  01BB20  6A92               	clrf	146,c	;volatile
 29913                           
 29914                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29915  01BB22  0139               	movlb	57	; () banked
 29916  01BB24  91A9               	bcf	169,0,b	;volatile
 29917                           
 29918                           ; BSR set to: 57
 29919                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29920  01BB26  8199               	bsf	153,0,b	;volatile
 29921                           
 29922                           ; BSR set to: 57
 29923                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29924  01BB28  0E86               	movlw	low _TMR6_DefaultInterruptHandler
 29925  01BB2A  6EE6               	movwf	postinc1,c
 29926  01BB2C  0EB3               	movlw	high _TMR6_DefaultInterruptHandler
 29927  01BB2E  6EE6               	movwf	postinc1,c
 29928  01BB30  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29929  01BB32  6EE6               	movwf	postinc1,c
 29930  01BB34  EC03  F0DE         	call	_TMR6_SetInterruptHandler	;wreg free
 29931                           
 29932                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29933  01BB38  0EE0               	movlw	224
 29934  01BB3A  6E94               	movwf	148,c	;volatile
 29935                           
 29936                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29937  01BB3C  0012               	return		;funcret
 29938  01BB3E                     __end_of_TMR6_Initialize:
 29939                           	opt callstack 0
 29940                           
 29941 ;; *************** function _TMR6_SetInterruptHandler *****************
 29942 ;; Defined at:
 29943 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29944 ;; Parameters:    Size  Location     Type
 29945 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29946 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29947 ;; Auto vars:     Size  Location     Type
 29948 ;;		None
 29949 ;; Return value:  Size  Location     Type
 29950 ;;                  1  [STACK] void 
 29951 ;; Registers used:
 29952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29953 ;; Tracked objects:
 29954 ;;		On entry : 3F/39
 29955 ;;		On exit  : 0/0
 29956 ;;		Unchanged: 0/0
 29957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29962 ;;Total ram usage:        0 bytes
 29963 ;; Hardware stack levels used:    1
 29964 ;; Hardware stack levels required when called:   15
 29965 ;; This function calls:
 29966 ;;		Nothing
 29967 ;; This function is called by:
 29968 ;;		_TMR6_Initialize
 29969 ;; This function uses a reentrant model
 29970 ;;
 29971                           
 29972                           	psect	text116
 29973  01BC06                     __ptext116:
 29974                           	opt callstack 0
 29975  01BC06                     _TMR6_SetInterruptHandler:
 29976                           	opt callstack 13
 29977                           
 29978                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29979                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29980                           
 29981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29982                           ;incstack = 0
 29983  01BC06  50E1               	movf	fsr1l,w,c
 29984  01BC08  0FFD               	addlw	-3
 29985  01BC0A  6ED9               	movwf	fsr2l,c
 29986  01BC0C  50E2               	movf	fsr1h,w,c
 29987  01BC0E  6EDA               	movwf	fsr2h,c
 29988  01BC10  0EFF               	movlw	255
 29989  01BC12  22DA               	addwfc	fsr2h,f,c
 29990  01BC14  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29991  01BC1A  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29992  01BC20  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29993                           
 29994                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29995  01BC26  52E5               	movf	postdec1,f,c
 29996  01BC28  52E5               	movf	postdec1,f,c
 29997  01BC2A  52E5               	movf	postdec1,f,c
 29998  01BC2C  0012               	return		;funcret
 29999  01BC2E                     __end_of_TMR6_SetInterruptHandler:
 30000                           	opt callstack 0
 30001                           
 30002 ;; *************** function _TMR5_Initialize *****************
 30003 ;; Defined at:
 30004 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 30005 ;; Parameters:    Size  Location     Type
 30006 ;;		None
 30007 ;; Auto vars:     Size  Location     Type
 30008 ;;		None
 30009 ;; Return value:  Size  Location     Type
 30010 ;;                  1  [STACK] void 
 30011 ;; Registers used:
 30012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30013 ;; Tracked objects:
 30014 ;;		On entry : 0/39
 30015 ;;		On exit  : 0/0
 30016 ;;		Unchanged: 0/0
 30017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30022 ;;Total ram usage:        0 bytes
 30023 ;; Hardware stack levels used:    1
 30024 ;; Hardware stack levels required when called:   16
 30025 ;; This function calls:
 30026 ;;		_TMR5_SetInterruptHandler
 30027 ;; This function is called by:
 30028 ;;		_SYSTEM_Initialize
 30029 ;; This function uses a reentrant model
 30030 ;;
 30031                           
 30032                           	psect	text117
 30033  01B4F8                     __ptext117:
 30034                           	opt callstack 0
 30035  01B4F8                     _TMR5_Initialize:
 30036                           	opt callstack 13
 30037                           
 30038                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30039                           
 30040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30041                           ;incstack = 0
 30042  01B4F8  6A9B               	clrf	155,c	;volatile
 30043                           
 30044                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30045  01B4FA  6A9C               	clrf	156,c	;volatile
 30046                           
 30047                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30048  01B4FC  0E01               	movlw	1
 30049  01B4FE  6E9D               	movwf	157,c	;volatile
 30050                           
 30051                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30052  01B500  0E63               	movlw	99
 30053  01B502  6E99               	movwf	153,c	;volatile
 30054                           
 30055                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30056  01B504  0EC0               	movlw	192
 30057  01B506  6E98               	movwf	152,c	;volatile
 30058                           
 30059                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30060  01B508  5098               	movf	152,w,c	;volatile
 30061  01B50A  006F FE64  F001    	movff	16281,btemp	;volatile
 30062  01B510  6A02               	clrf	(btemp+1)^0,c
 30063  01B512  0060  F004  F002   	movff	btemp,btemp+1
 30064  01B518  6A01               	clrf	btemp^0,c
 30065  01B51A  1001               	iorwf	btemp^0,w,c
 30066  01B51C  0100               	movlb	0	; () banked
 30067  01B51E  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30068  01B520  5002               	movf	(btemp+1)^0,w,c
 30069  01B522  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30070                           
 30071                           ; BSR set to: 0
 30072                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30073  01B524  0139               	movlb	57	; () banked
 30074  01B526  9DA8               	bcf	168,6,b	;volatile
 30075                           
 30076                           ; BSR set to: 57
 30077                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30078  01B528  8D98               	bsf	152,6,b	;volatile
 30079                           
 30080                           ; BSR set to: 57
 30081                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30082  01B52A  0ECC               	movlw	low _TMR5_DefaultInterruptHandler
 30083  01B52C  6EE6               	movwf	postinc1,c
 30084  01B52E  0EB8               	movlw	high _TMR5_DefaultInterruptHandler
 30085  01B530  6EE6               	movwf	postinc1,c
 30086  01B532  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30087  01B534  6EE6               	movwf	postinc1,c
 30088  01B536  EC17  F0DE         	call	_TMR5_SetInterruptHandler	;wreg free
 30089                           
 30090                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30091  01B53A  0E31               	movlw	49
 30092  01B53C  6E9A               	movwf	154,c	;volatile
 30093                           
 30094                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30095  01B53E  0012               	return		;funcret
 30096  01B540                     __end_of_TMR5_Initialize:
 30097                           	opt callstack 0
 30098                           
 30099 ;; *************** function _TMR5_SetInterruptHandler *****************
 30100 ;; Defined at:
 30101 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30102 ;; Parameters:    Size  Location     Type
 30103 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30104 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30105 ;; Auto vars:     Size  Location     Type
 30106 ;;		None
 30107 ;; Return value:  Size  Location     Type
 30108 ;;                  1  [STACK] void 
 30109 ;; Registers used:
 30110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30111 ;; Tracked objects:
 30112 ;;		On entry : 3F/39
 30113 ;;		On exit  : 0/0
 30114 ;;		Unchanged: 0/0
 30115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30120 ;;Total ram usage:        0 bytes
 30121 ;; Hardware stack levels used:    1
 30122 ;; Hardware stack levels required when called:   15
 30123 ;; This function calls:
 30124 ;;		Nothing
 30125 ;; This function is called by:
 30126 ;;		_TMR5_Initialize
 30127 ;; This function uses a reentrant model
 30128 ;;
 30129                           
 30130                           	psect	text118
 30131  01BC2E                     __ptext118:
 30132                           	opt callstack 0
 30133  01BC2E                     _TMR5_SetInterruptHandler:
 30134                           	opt callstack 13
 30135                           
 30136                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30137                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30138                           
 30139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30140                           ;incstack = 0
 30141  01BC2E  50E1               	movf	fsr1l,w,c
 30142  01BC30  0FFD               	addlw	-3
 30143  01BC32  6ED9               	movwf	fsr2l,c
 30144  01BC34  50E2               	movf	fsr1h,w,c
 30145  01BC36  6EDA               	movwf	fsr2h,c
 30146  01BC38  0EFF               	movlw	255
 30147  01BC3A  22DA               	addwfc	fsr2h,f,c
 30148  01BC3C  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 30149  01BC42  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 30150  01BC48  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 30151                           
 30152                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30153  01BC4E  52E5               	movf	postdec1,f,c
 30154  01BC50  52E5               	movf	postdec1,f,c
 30155  01BC52  52E5               	movf	postdec1,f,c
 30156  01BC54  0012               	return		;funcret
 30157  01BC56                     __end_of_TMR5_SetInterruptHandler:
 30158                           	opt callstack 0
 30159                           
 30160 ;; *************** function _TMR3_Initialize *****************
 30161 ;; Defined at:
 30162 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30163 ;; Parameters:    Size  Location     Type
 30164 ;;		None
 30165 ;; Auto vars:     Size  Location     Type
 30166 ;;		None
 30167 ;; Return value:  Size  Location     Type
 30168 ;;                  1  [STACK] void 
 30169 ;; Registers used:
 30170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30171 ;; Tracked objects:
 30172 ;;		On entry : 0/39
 30173 ;;		On exit  : 0/0
 30174 ;;		Unchanged: 0/0
 30175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30180 ;;Total ram usage:        0 bytes
 30181 ;; Hardware stack levels used:    1
 30182 ;; Hardware stack levels required when called:   16
 30183 ;; This function calls:
 30184 ;;		_TMR3_SetInterruptHandler
 30185 ;; This function is called by:
 30186 ;;		_SYSTEM_Initialize
 30187 ;; This function uses a reentrant model
 30188 ;;
 30189                           
 30190                           	psect	text119
 30191  01B540                     __ptext119:
 30192                           	opt callstack 0
 30193  01B540                     _TMR3_Initialize:
 30194                           	opt callstack 13
 30195                           
 30196                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30197                           
 30198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30199                           ;incstack = 0
 30200  01B540  6AA7               	clrf	167,c	;volatile
 30201                           
 30202                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30203  01B542  6AA8               	clrf	168,c	;volatile
 30204                           
 30205                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30206  01B544  0E01               	movlw	1
 30207  01B546  6EA9               	movwf	169,c	;volatile
 30208                           
 30209                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30210  01B548  0E3C               	movlw	60
 30211  01B54A  6EA5               	movwf	165,c	;volatile
 30212                           
 30213                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30214  01B54C  0EB0               	movlw	176
 30215  01B54E  6EA4               	movwf	164,c	;volatile
 30216                           
 30217                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30218  01B550  50A4               	movf	164,w,c	;volatile
 30219  01B552  006F FE94  F001    	movff	16293,btemp	;volatile
 30220  01B558  6A02               	clrf	(btemp+1)^0,c
 30221  01B55A  0060  F004  F002   	movff	btemp,btemp+1
 30222  01B560  6A01               	clrf	btemp^0,c
 30223  01B562  1001               	iorwf	btemp^0,w,c
 30224  01B564  0100               	movlb	0	; () banked
 30225  01B566  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 30226  01B568  5002               	movf	(btemp+1)^0,w,c
 30227  01B56A  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 30228                           
 30229                           ; BSR set to: 0
 30230                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 30231  01B56C  0139               	movlb	57	; () banked
 30232  01B56E  9DA6               	bcf	166,6,b	;volatile
 30233                           
 30234                           ; BSR set to: 57
 30235                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 30236  01B570  8D96               	bsf	150,6,b	;volatile
 30237                           
 30238                           ; BSR set to: 57
 30239                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 30240  01B572  0EB0               	movlw	low _TMR3_DefaultInterruptHandler
 30241  01B574  6EE6               	movwf	postinc1,c
 30242  01B576  0EC1               	movlw	high _TMR3_DefaultInterruptHandler
 30243  01B578  6EE6               	movwf	postinc1,c
 30244  01B57A  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 30245  01B57C  6EE6               	movwf	postinc1,c
 30246  01B57E  EC2B  F0DE         	call	_TMR3_SetInterruptHandler	;wreg free
 30247                           
 30248                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 30249  01B582  0E31               	movlw	49
 30250  01B584  6EA6               	movwf	166,c	;volatile
 30251                           
 30252                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30253  01B586  0012               	return		;funcret
 30254  01B588                     __end_of_TMR3_Initialize:
 30255                           	opt callstack 0
 30256                           
 30257 ;; *************** function _TMR3_SetInterruptHandler *****************
 30258 ;; Defined at:
 30259 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 30260 ;; Parameters:    Size  Location     Type
 30261 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30262 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 30263 ;; Auto vars:     Size  Location     Type
 30264 ;;		None
 30265 ;; Return value:  Size  Location     Type
 30266 ;;                  1  [STACK] void 
 30267 ;; Registers used:
 30268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30269 ;; Tracked objects:
 30270 ;;		On entry : 0/1
 30271 ;;		On exit  : 0/0
 30272 ;;		Unchanged: 0/0
 30273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30278 ;;Total ram usage:        0 bytes
 30279 ;; Hardware stack levels used:    1
 30280 ;; Hardware stack levels required when called:   15
 30281 ;; This function calls:
 30282 ;;		Nothing
 30283 ;; This function is called by:
 30284 ;;		_TMR3_Initialize
 30285 ;;		_init_bsoc
 30286 ;; This function uses a reentrant model
 30287 ;;
 30288                           
 30289                           	psect	text120
 30290  01BC56                     __ptext120:
 30291                           	opt callstack 0
 30292  01BC56                     _TMR3_SetInterruptHandler:
 30293                           	opt callstack 14
 30294                           
 30295                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 30296                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30297                           
 30298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30299                           ;incstack = 0
 30300  01BC56  50E1               	movf	fsr1l,w,c
 30301  01BC58  0FFD               	addlw	-3
 30302  01BC5A  6ED9               	movwf	fsr2l,c
 30303  01BC5C  50E2               	movf	fsr1h,w,c
 30304  01BC5E  6EDA               	movwf	fsr2h,c
 30305  01BC60  0EFF               	movlw	255
 30306  01BC62  22DA               	addwfc	fsr2h,f,c
 30307  01BC64  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 30308  01BC6A  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 30309  01BC70  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 30310                           
 30311                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30312  01BC76  52E5               	movf	postdec1,f,c
 30313  01BC78  52E5               	movf	postdec1,f,c
 30314  01BC7A  52E5               	movf	postdec1,f,c
 30315  01BC7C  0012               	return		;funcret
 30316  01BC7E                     __end_of_TMR3_SetInterruptHandler:
 30317                           	opt callstack 0
 30318                           
 30319 ;; *************** function _TMR2_Initialize *****************
 30320 ;; Defined at:
 30321 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 30322 ;; Parameters:    Size  Location     Type
 30323 ;;		None
 30324 ;; Auto vars:     Size  Location     Type
 30325 ;;		None
 30326 ;; Return value:  Size  Location     Type
 30327 ;;                  1  [STACK] void 
 30328 ;; Registers used:
 30329 ;;		wreg, status,2
 30330 ;; Tracked objects:
 30331 ;;		On entry : 3F/3F
 30332 ;;		On exit  : 3F/39
 30333 ;;		Unchanged: 0/0
 30334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30339 ;;Total ram usage:        0 bytes
 30340 ;; Hardware stack levels used:    1
 30341 ;; Hardware stack levels required when called:   15
 30342 ;; This function calls:
 30343 ;;		Nothing
 30344 ;; This function is called by:
 30345 ;;		_SYSTEM_Initialize
 30346 ;; This function uses a reentrant model
 30347 ;;
 30348                           
 30349                           	psect	text121
 30350  01C016                     __ptext121:
 30351                           	opt callstack 0
 30352  01C016                     _TMR2_Initialize:
 30353                           	opt callstack 14
 30354                           
 30355                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 30356                           
 30357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30358                           ;incstack = 0
 30359  01C016  0E01               	movlw	1
 30360  01C018  6EAE               	movwf	174,c	;volatile
 30361                           
 30362                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 30363  01C01A  6AAD               	clrf	173,c	;volatile
 30364                           
 30365                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 30366  01C01C  6AAF               	clrf	175,c	;volatile
 30367                           
 30368                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 30369  01C01E  0E63               	movlw	99
 30370  01C020  6EAB               	movwf	171,c	;volatile
 30371                           
 30372                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 30373  01C022  6AAA               	clrf	170,c	;volatile
 30374                           
 30375                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 30376  01C024  0139               	movlb	57	; () banked
 30377  01C026  95A4               	bcf	164,2,b	;volatile
 30378                           
 30379                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 30380  01C028  0EC0               	movlw	192
 30381  01C02A  6EAC               	movwf	172,c	;volatile
 30382                           
 30383                           ; BSR set to: 57
 30384                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30385  01C02C  0012               	return		;funcret
 30386  01C02E                     __end_of_TMR2_Initialize:
 30387                           	opt callstack 0
 30388                           
 30389 ;; *************** function _SPI1_Initialize *****************
 30390 ;; Defined at:
 30391 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30392 ;; Parameters:    Size  Location     Type
 30393 ;;		None
 30394 ;; Auto vars:     Size  Location     Type
 30395 ;;		None
 30396 ;; Return value:  Size  Location     Type
 30397 ;;                  1  [STACK] void 
 30398 ;; Registers used:
 30399 ;;		wreg, status,2
 30400 ;; Tracked objects:
 30401 ;;		On entry : 3F/39
 30402 ;;		On exit  : 3F/3D
 30403 ;;		Unchanged: 0/0
 30404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30409 ;;Total ram usage:        0 bytes
 30410 ;; Hardware stack levels used:    1
 30411 ;; Hardware stack levels required when called:   15
 30412 ;; This function calls:
 30413 ;;		Nothing
 30414 ;; This function is called by:
 30415 ;;		_SYSTEM_Initialize
 30416 ;; This function uses a reentrant model
 30417 ;;
 30418                           
 30419                           	psect	text122
 30420  01C02E                     __ptext122:
 30421                           	opt callstack 0
 30422  01C02E                     _SPI1_Initialize:
 30423                           	opt callstack 14
 30424                           
 30425                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30426                           
 30427                           ; BSR set to: 57
 30428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30429                           ;incstack = 0
 30430  01C02E  0E40               	movlw	64
 30431  01C030  013D               	movlb	61	; () banked
 30432  01C032  6F15               	movwf	21,b	;volatile
 30433                           
 30434                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30435  01C034  0E03               	movlw	3
 30436  01C036  6F16               	movwf	22,b	;volatile
 30437                           
 30438                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30439  01C038  0E4F               	movlw	79
 30440  01C03A  6F19               	movwf	25,b	;volatile
 30441                           
 30442                           ; BSR set to: 61
 30443                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30444  01C03C  6B1C               	clrf	28,b	;volatile
 30445                           
 30446                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30447  01C03E  0E83               	movlw	131
 30448  01C040  6F14               	movwf	20,b	;volatile
 30449                           
 30450                           ; BSR set to: 61
 30451                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30452  01C042  0012               	return		;funcret
 30453  01C044                     __end_of_SPI1_Initialize:
 30454                           	opt callstack 0
 30455                           
 30456 ;; *************** function _PWM8_Initialize *****************
 30457 ;; Defined at:
 30458 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30459 ;; Parameters:    Size  Location     Type
 30460 ;;		None
 30461 ;; Auto vars:     Size  Location     Type
 30462 ;;		None
 30463 ;; Return value:  Size  Location     Type
 30464 ;;                  1  [STACK] void 
 30465 ;; Registers used:
 30466 ;;		wreg, status,2
 30467 ;; Tracked objects:
 30468 ;;		On entry : 0/3E
 30469 ;;		On exit  : 3F/3F
 30470 ;;		Unchanged: 0/0
 30471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30476 ;;Total ram usage:        0 bytes
 30477 ;; Hardware stack levels used:    1
 30478 ;; Hardware stack levels required when called:   15
 30479 ;; This function calls:
 30480 ;;		Nothing
 30481 ;; This function is called by:
 30482 ;;		_SYSTEM_Initialize
 30483 ;; This function uses a reentrant model
 30484 ;;
 30485                           
 30486                           	psect	text123
 30487  01C044                     __ptext123:
 30488                           	opt callstack 0
 30489  01C044                     _PWM8_Initialize:
 30490                           	opt callstack 14
 30491                           
 30492                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30493                           
 30494                           ; BSR set to: 61
 30495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30496                           ;incstack = 0
 30497  01C044  0E80               	movlw	128
 30498  01C046  6E62               	movwf	98,c	;volatile
 30499                           
 30500                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30501  01C048  6A61               	clrf	97,c	;volatile
 30502                           
 30503                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30504  01C04A  0E40               	movlw	64
 30505  01C04C  6E60               	movwf	96,c	;volatile
 30506                           
 30507                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30508  01C04E  013F               	movlb	63	; () banked
 30509  01C050  515F               	movf	95,w,b	;volatile
 30510  01C052  0B3F               	andlw	-193
 30511  01C054  0940               	iorlw	64
 30512  01C056  6F5F               	movwf	95,b	;volatile
 30513                           
 30514                           ; BSR set to: 63
 30515                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30516  01C058  0012               	return		;funcret
 30517  01C05A                     __end_of_PWM8_Initialize:
 30518                           	opt callstack 0
 30519                           
 30520 ;; *************** function _PMD_Initialize *****************
 30521 ;; Defined at:
 30522 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30523 ;; Parameters:    Size  Location     Type
 30524 ;;		None
 30525 ;; Auto vars:     Size  Location     Type
 30526 ;;		None
 30527 ;; Return value:  Size  Location     Type
 30528 ;;                  1  [STACK] void 
 30529 ;; Registers used:
 30530 ;;		None
 30531 ;; Tracked objects:
 30532 ;;		On entry : 3F/39
 30533 ;;		On exit  : 3F/39
 30534 ;;		Unchanged: 0/0
 30535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30540 ;;Total ram usage:        0 bytes
 30541 ;; Hardware stack levels used:    1
 30542 ;; Hardware stack levels required when called:   15
 30543 ;; This function calls:
 30544 ;;		Nothing
 30545 ;; This function is called by:
 30546 ;;		_SYSTEM_Initialize
 30547 ;; This function uses a reentrant model
 30548 ;;
 30549                           
 30550                           	psect	text124
 30551  01C070                     __ptext124:
 30552                           	opt callstack 0
 30553  01C070                     _PMD_Initialize:
 30554                           	opt callstack 14
 30555                           
 30556                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30557                           
 30558                           ; BSR set to: 63
 30559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30560                           ;incstack = 0
 30561  01C070  0139               	movlb	57	; () banked
 30562  01C072  6BC0               	clrf	192,b	;volatile
 30563                           
 30564                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30565  01C074  6BC1               	clrf	193,b	;volatile
 30566                           
 30567                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30568  01C076  6BC2               	clrf	194,b	;volatile
 30569                           
 30570                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30571  01C078  6BC3               	clrf	195,b	;volatile
 30572                           
 30573                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30574  01C07A  6BC4               	clrf	196,b	;volatile
 30575                           
 30576                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30577  01C07C  6BC5               	clrf	197,b	;volatile
 30578                           
 30579                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30580  01C07E  6BC6               	clrf	198,b	;volatile
 30581                           
 30582                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30583  01C080  6BC7               	clrf	199,b	;volatile
 30584                           
 30585                           ; BSR set to: 57
 30586                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30587  01C082  0012               	return		;funcret
 30588  01C084                     __end_of_PMD_Initialize:
 30589                           	opt callstack 0
 30590                           
 30591 ;; *************** function _PIN_MANAGER_Initialize *****************
 30592 ;; Defined at:
 30593 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30594 ;; Parameters:    Size  Location     Type
 30595 ;;		None
 30596 ;; Auto vars:     Size  Location     Type
 30597 ;;		None
 30598 ;; Return value:  Size  Location     Type
 30599 ;;                  1  [STACK] void 
 30600 ;; Registers used:
 30601 ;;		wreg, status,2
 30602 ;; Tracked objects:
 30603 ;;		On entry : 3F/39
 30604 ;;		On exit  : 3F/3A
 30605 ;;		Unchanged: 0/0
 30606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30611 ;;Total ram usage:        0 bytes
 30612 ;; Hardware stack levels used:    1
 30613 ;; Hardware stack levels required when called:   15
 30614 ;; This function calls:
 30615 ;;		Nothing
 30616 ;; This function is called by:
 30617 ;;		_SYSTEM_Initialize
 30618 ;; This function uses a reentrant model
 30619 ;;
 30620                           
 30621                           	psect	text125
 30622  01AAFC                     __ptext125:
 30623                           	opt callstack 0
 30624  01AAFC                     _PIN_MANAGER_Initialize:
 30625                           	opt callstack 14
 30626                           
 30627                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30628                           
 30629                           ; BSR set to: 57
 30630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30631                           ;incstack = 0
 30632  01AAFC  0E07               	movlw	7
 30633  01AAFE  6EBE               	movwf	190,c	;volatile
 30634                           
 30635                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 30636  01AB00  6ABD               	clrf	189,c	;volatile
 30637                           
 30638                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30639  01AB02  6ABA               	clrf	186,c	;volatile
 30640                           
 30641                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 30642  01AB04  0E20               	movlw	32
 30643  01AB06  6EBF               	movwf	191,c	;volatile
 30644                           
 30645                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30646  01AB08  6ABB               	clrf	187,c	;volatile
 30647                           
 30648                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30649  01AB0A  0E07               	movlw	7
 30650  01AB0C  6EBC               	movwf	188,c	;volatile
 30651                           
 30652                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30653  01AB0E  6AC6               	clrf	198,c	;volatile
 30654                           
 30655                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 30656  01AB10  0E0F               	movlw	15
 30657  01AB12  6EC7               	movwf	199,c	;volatile
 30658                           
 30659                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30660  01AB14  68C2               	setf	194,c	;volatile
 30661                           
 30662                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30663  01AB16  0EBF               	movlw	191
 30664  01AB18  6EC3               	movwf	195,c	;volatile
 30665                           
 30666                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30667  01AB1A  0E90               	movlw	144
 30668  01AB1C  6EC4               	movwf	196,c	;volatile
 30669                           
 30670                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30671  01AB1E  0E0C               	movlw	12
 30672  01AB20  6EC5               	movwf	197,c	;volatile
 30673                           
 30674                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30675  01AB22  013A               	movlb	58	; () banked
 30676  01AB24  6B70               	clrf	112,b	;volatile
 30677                           
 30678                           ; BSR set to: 58
 30679                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30680  01AB26  6B60               	clrf	96,b	;volatile
 30681                           
 30682                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30683  01AB28  0E3C               	movlw	60
 30684  01AB2A  6F50               	movwf	80,b	;volatile
 30685                           
 30686                           ; BSR set to: 58
 30687                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30688  01AB2C  6B80               	clrf	128,b	;volatile
 30689                           
 30690                           ; BSR set to: 58
 30691                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30692  01AB2E  6B90               	clrf	144,b	;volatile
 30693                           
 30694                           ; BSR set to: 58
 30695                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30696  01AB30  6940               	setf	64,b	;volatile
 30697                           
 30698                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30699  01AB32  0E0C               	movlw	12
 30700  01AB34  6F71               	movwf	113,b	;volatile
 30701                           
 30702                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30703  01AB36  0E0F               	movlw	15
 30704  01AB38  6F91               	movwf	145,b	;volatile
 30705                           
 30706                           ; BSR set to: 58
 30707                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30708  01AB3A  6B81               	clrf	129,b	;volatile
 30709                           
 30710                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30711  01AB3C  0E83               	movlw	131
 30712  01AB3E  6F51               	movwf	81,b	;volatile
 30713                           
 30714                           ; BSR set to: 58
 30715                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30716  01AB40  6B41               	clrf	65,b	;volatile
 30717                           
 30718                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30719  01AB42  0E97               	movlw	151
 30720  01AB44  6F61               	movwf	97,b	;volatile
 30721                           
 30722                           ; BSR set to: 58
 30723                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30724  01AB46  6B82               	clrf	130,b	;volatile
 30725                           
 30726                           ; BSR set to: 58
 30727                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30728  01AB48  6B92               	clrf	146,b	;volatile
 30729                           
 30730                           ; BSR set to: 58
 30731                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30732  01AB4A  6B42               	clrf	66,b	;volatile
 30733                           
 30734                           ; BSR set to: 58
 30735                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30736  01AB4C  6B52               	clrf	82,b	;volatile
 30737                           
 30738                           ; BSR set to: 58
 30739                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30740  01AB4E  6B62               	clrf	98,b	;volatile
 30741                           
 30742                           ; BSR set to: 58
 30743                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30744  01AB50  6B72               	clrf	114,b	;volatile
 30745                           
 30746                           ; BSR set to: 58
 30747                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30748  01AB52  6943               	setf	67,b	;volatile
 30749                           
 30750                           ; BSR set to: 58
 30751                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30752  01AB54  6953               	setf	83,b	;volatile
 30753                           
 30754                           ; BSR set to: 58
 30755                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30756  01AB56  6963               	setf	99,b	;volatile
 30757                           
 30758                           ; BSR set to: 58
 30759                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30760  01AB58  6973               	setf	115,b	;volatile
 30761                           
 30762                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30763  01AB5A  0E07               	movlw	7
 30764  01AB5C  6F83               	movwf	131,b	;volatile
 30765                           
 30766                           ; BSR set to: 58
 30767                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30768  01AB5E  6993               	setf	147,b	;volatile
 30769                           
 30770                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30771  01AB60  0E0F               	movlw	15
 30772  01AB62  6FE8               	movwf	232,b	;volatile
 30773                           
 30774                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30775  01AB64  0E13               	movlw	19
 30776  01AB66  6FDE               	movwf	222,b	;volatile
 30777                           
 30778                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30779  01AB68  0E16               	movlw	22
 30780  01AB6A  6F0E               	movwf	14,b	;volatile
 30781                           
 30782                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30783  01AB6C  0E1E               	movlw	30
 30784  01AB6E  6F13               	movwf	19,b	;volatile
 30785                           
 30786                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30787  01AB70  0E08               	movlw	8
 30788  01AB72  6FC0               	movwf	192,b	;volatile
 30789                           
 30790                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30791  01AB74  0E10               	movlw	16
 30792  01AB76  6F19               	movwf	25,b	;volatile
 30793                           
 30794                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30795  01AB78  0E09               	movlw	9
 30796  01AB7A  6FC1               	movwf	193,b	;volatile
 30797                           
 30798                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30799  01AB7C  0E1F               	movlw	31
 30800  01AB7E  6F15               	movwf	21,b	;volatile
 30801                           
 30802                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30803  01AB80  0E13               	movlw	19
 30804  01AB82  6F16               	movwf	22,b	;volatile
 30805                           
 30806                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30807  01AB84  0E17               	movlw	23
 30808  01AB86  6FE5               	movwf	229,b	;volatile
 30809                           
 30810                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30811  01AB88  0E14               	movlw	20
 30812  01AB8A  6FDF               	movwf	223,b	;volatile
 30813                           
 30814                           ; BSR set to: 58
 30815                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30816  01AB8C  0012               	return		;funcret
 30817  01AB8E                     __end_of_PIN_MANAGER_Initialize:
 30818                           	opt callstack 0
 30819                           
 30820 ;; *************** function _OSCILLATOR_Initialize *****************
 30821 ;; Defined at:
 30822 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30823 ;; Parameters:    Size  Location     Type
 30824 ;;		None
 30825 ;; Auto vars:     Size  Location     Type
 30826 ;;		None
 30827 ;; Return value:  Size  Location     Type
 30828 ;;                  1  [STACK] void 
 30829 ;; Registers used:
 30830 ;;		wreg, status,2
 30831 ;; Tracked objects:
 30832 ;;		On entry : 3F/3A
 30833 ;;		On exit  : 3F/39
 30834 ;;		Unchanged: 0/0
 30835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30840 ;;Total ram usage:        0 bytes
 30841 ;; Hardware stack levels used:    1
 30842 ;; Hardware stack levels required when called:   15
 30843 ;; This function calls:
 30844 ;;		Nothing
 30845 ;; This function is called by:
 30846 ;;		_SYSTEM_Initialize
 30847 ;; This function uses a reentrant model
 30848 ;;
 30849                           
 30850                           	psect	text126
 30851  01C05A                     __ptext126:
 30852                           	opt callstack 0
 30853  01C05A                     _OSCILLATOR_Initialize:
 30854                           	opt callstack 14
 30855                           
 30856                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30857                           
 30858                           ; BSR set to: 58
 30859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30860                           ;incstack = 0
 30861  01C05A  0E20               	movlw	32
 30862  01C05C  0139               	movlb	57	; () banked
 30863  01C05E  6FD9               	movwf	217,b	;volatile
 30864                           
 30865                           ; BSR set to: 57
 30866                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30867  01C060  6BDB               	clrf	219,b	;volatile
 30868                           
 30869                           ; BSR set to: 57
 30870                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30871  01C062  6BDD               	clrf	221,b	;volatile
 30872                           
 30873                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30874  01C064  0E02               	movlw	2
 30875  01C066  6FDF               	movwf	223,b	;volatile
 30876                           
 30877                           ; BSR set to: 57
 30878                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30879  01C068  6BDE               	clrf	222,b	;volatile
 30880  01C06A                     l169:
 30881                           
 30882                           ; BSR set to: 57
 30883                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30884  01C06A  B1DC               	btfsc	220,0,b	;volatile
 30885  01C06C  0012               	return	
 30886  01C06E  D7FD               	goto	l169
 30887  01C070                     __end_of_OSCILLATOR_Initialize:
 30888                           	opt callstack 0
 30889                           
 30890 ;; *************** function _INTERRUPT_Initialize *****************
 30891 ;; Defined at:
 30892 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30893 ;; Parameters:    Size  Location     Type
 30894 ;;		None
 30895 ;; Auto vars:     Size  Location     Type
 30896 ;;  state           1  [STACK] _Bool 
 30897 ;; Return value:  Size  Location     Type
 30898 ;;                  1  [STACK] void 
 30899 ;; Registers used:
 30900 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30901 ;; Tracked objects:
 30902 ;;		On entry : 0/0
 30903 ;;		On exit  : 3F/39
 30904 ;;		Unchanged: 0/0
 30905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30910 ;;Total ram usage:        0 bytes
 30911 ;; Hardware stack levels used:    1
 30912 ;; Hardware stack levels required when called:   15
 30913 ;; This function calls:
 30914 ;;		Nothing
 30915 ;; This function is called by:
 30916 ;;		_SYSTEM_Initialize
 30917 ;; This function uses a reentrant model
 30918 ;;
 30919                           
 30920                           	psect	text127
 30921  01AFE6                     __ptext127:
 30922                           	opt callstack 0
 30923  01AFE6                     _INTERRUPT_Initialize:
 30924                           	opt callstack 0
 30925                           
 30926                           ; BSR set to: 57
 30927                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30928  01AFE6  52E6               	movf	postinc1,f,c
 30929                           
 30930                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30931                           
 30932                           ;incstack = 0
 30933  01AFE8  8AD2               	bsf	210,5,c	;volatile
 30934                           
 30935                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30936  01AFEA  AED2               	btfss	16338,7,c	;volatile
 30937  01AFEC  D003               	goto	u9430
 30938  01AFEE  6A0C               	clrf	(btemp+11)^0,c
 30939  01AFF0  2A0C               	incf	(btemp+11)^0,f,c
 30940  01AFF2  D001               	goto	u9448
 30941  01AFF4                     u9430:
 30942  01AFF4  6A0C               	clrf	(btemp+11)^0,c
 30943  01AFF6                     u9448:
 30944                           
 30945                           ;stkvar	_state @ sp[(-1)+0]
 30946  01AFF6  0EFF               	movlw	-1
 30947  01AFF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 30948                           
 30949                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30950  01AFFE  9ED2               	bcf	16338,7,c	;volatile
 30951                           
 30952                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30953  01B000  0E55               	movlw	85
 30954  01B002  6ED4               	movwf	212,c	;volatile
 30955                           
 30956                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30957  01B004  0EAA               	movlw	170
 30958  01B006  6ED4               	movwf	212,c	;volatile
 30959                           
 30960                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30961  01B008  90D4               	bcf	212,0,c	;volatile
 30962                           
 30963                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30964  01B00A  0138               	movlb	56	; () banked
 30965  01B00C  6B9F               	clrf	159,b	;volatile
 30966                           
 30967                           ; BSR set to: 56
 30968                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30969  01B00E  6B9E               	clrf	158,b	;volatile
 30970                           
 30971                           ; BSR set to: 56
 30972                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30973  01B010  0E08               	movlw	8
 30974  01B012  6F9D               	movwf	157,b	;volatile
 30975                           
 30976                           ; BSR set to: 56
 30977                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30978  01B014  0E55               	movlw	85
 30979  01B016  6ED4               	movwf	212,c	;volatile
 30980                           
 30981                           ; BSR set to: 56
 30982                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30983  01B018  0EAA               	movlw	170
 30984  01B01A  6ED4               	movwf	212,c	;volatile
 30985                           
 30986                           ; BSR set to: 56
 30987                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30988  01B01C  80D4               	bsf	212,0,c	;volatile
 30989                           
 30990                           ; BSR set to: 56
 30991                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30992                           ;stkvar	_state @ sp[(-1)+0]
 30993  01B01E  0EFF               	movlw	-1
 30994  01B020  B0E3               	btfsc	plusw1,0,c
 30995  01B022  D002               	bra	u9455
 30996  01B024  9ED2               	bcf	16338,7,c	;volatile
 30997  01B026  D001               	bra	u9456
 30998  01B028                     u9455:
 30999  01B028  8ED2               	bsf	16338,7,c	;volatile
 31000  01B02A                     u9456:
 31001                           
 31002                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 31003  01B02A  0139               	movlb	57	; () banked
 31004  01B02C  8782               	bsf	130,3,b	;volatile
 31005                           
 31006                           ; BSR set to: 57
 31007                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 31008  01B02E  8382               	bsf	130,1,b	;volatile
 31009                           
 31010                           ; BSR set to: 57
 31011                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 31012  01B030  8182               	bsf	130,0,b	;volatile
 31013                           
 31014                           ; BSR set to: 57
 31015                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 31016  01B032  8582               	bsf	130,2,b	;volatile
 31017                           
 31018                           ; BSR set to: 57
 31019                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 31020  01B034  8786               	bsf	134,3,b	;volatile
 31021                           
 31022                           ; BSR set to: 57
 31023                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31024  01B036  8586               	bsf	134,2,b	;volatile
 31025                           
 31026                           ; BSR set to: 57
 31027                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31028  01B038  8783               	bsf	131,3,b	;volatile
 31029                           
 31030                           ; BSR set to: 57
 31031                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31032  01B03A  8181               	bsf	129,0,b	;volatile
 31033                           
 31034                           ; BSR set to: 57
 31035                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31036  01B03C  9185               	bcf	133,0,b	;volatile
 31037                           
 31038                           ; BSR set to: 57
 31039                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31040  01B03E  8189               	bsf	137,0,b	;volatile
 31041                           
 31042                           ; BSR set to: 57
 31043                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31044  01B040  9D88               	bcf	136,6,b	;volatile
 31045                           
 31046                           ; BSR set to: 57
 31047                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 31048  01B042  8581               	bsf	129,2,b	;volatile
 31049                           
 31050                           ; BSR set to: 57
 31051                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 31052  01B044  8781               	bsf	129,3,b	;volatile
 31053                           
 31054                           ; BSR set to: 57
 31055                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 31056  01B046  9D86               	bcf	134,6,b	;volatile
 31057                           
 31058                           ; BSR set to: 57
 31059                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31060  01B048  52E5               	movf	postdec1,f,c
 31061  01B04A  0012               	return		;funcret
 31062  01B04C                     __end_of_INTERRUPT_Initialize:
 31063                           	opt callstack 0
 31064                           
 31065 ;; *************** function _FVR_Initialize *****************
 31066 ;; Defined at:
 31067 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31068 ;; Parameters:    Size  Location     Type
 31069 ;;		None
 31070 ;; Auto vars:     Size  Location     Type
 31071 ;;		None
 31072 ;; Return value:  Size  Location     Type
 31073 ;;                  1  [STACK] void 
 31074 ;; Registers used:
 31075 ;;		wreg, status,2
 31076 ;; Tracked objects:
 31077 ;;		On entry : 3F/39
 31078 ;;		On exit  : 3F/3E
 31079 ;;		Unchanged: 0/0
 31080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31085 ;;Total ram usage:        0 bytes
 31086 ;; Hardware stack levels used:    1
 31087 ;; Hardware stack levels required when called:   15
 31088 ;; This function calls:
 31089 ;;		Nothing
 31090 ;; This function is called by:
 31091 ;;		_SYSTEM_Initialize
 31092 ;; This function uses a reentrant model
 31093 ;;
 31094                           
 31095                           	psect	text128
 31096  01C186                     __ptext128:
 31097                           	opt callstack 0
 31098  01C186                     _FVR_Initialize:
 31099                           	opt callstack 14
 31100                           
 31101                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31102                           
 31103                           ; BSR set to: 57
 31104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31105                           ;incstack = 0
 31106  01C186  0EAF               	movlw	175
 31107  01C188  013E               	movlb	62	; () banked
 31108  01C18A  6FC1               	movwf	193,b	;volatile
 31109                           
 31110                           ; BSR set to: 62
 31111                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31112  01C18C  0012               	return		;funcret
 31113  01C18E                     __end_of_FVR_Initialize:
 31114                           	opt callstack 0
 31115                           
 31116 ;; *************** function _EXT_INT_Initialize *****************
 31117 ;; Defined at:
 31118 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31119 ;; Parameters:    Size  Location     Type
 31120 ;;		None
 31121 ;; Auto vars:     Size  Location     Type
 31122 ;;		None
 31123 ;; Return value:  Size  Location     Type
 31124 ;;                  1  [STACK] void 
 31125 ;; Registers used:
 31126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31127 ;; Tracked objects:
 31128 ;;		On entry : 3F/39
 31129 ;;		On exit  : 3F/39
 31130 ;;		Unchanged: 0/0
 31131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31136 ;;Total ram usage:        0 bytes
 31137 ;; Hardware stack levels used:    1
 31138 ;; Hardware stack levels required when called:   16
 31139 ;; This function calls:
 31140 ;;		_INT0_SetInterruptHandler
 31141 ;;		_INT1_SetInterruptHandler
 31142 ;; This function is called by:
 31143 ;;		_SYSTEM_Initialize
 31144 ;; This function uses a reentrant model
 31145 ;;
 31146                           
 31147                           	psect	text129
 31148  01B96E                     __ptext129:
 31149                           	opt callstack 0
 31150  01B96E                     _EXT_INT_Initialize:
 31151                           	opt callstack 13
 31152                           
 31153                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31154                           
 31155                           ; BSR set to: 62
 31156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31157                           ;incstack = 0
 31158  01B96E  0139               	movlb	57	; () banked
 31159  01B970  91A1               	bcf	161,0,b	;volatile
 31160                           
 31161                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31162  01B972  90D2               	bcf	210,0,c	;volatile
 31163                           
 31164                           ; BSR set to: 57
 31165                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31166  01B974  0EB2               	movlw	low _INT0_DefaultInterruptHandler
 31167  01B976  6EE6               	movwf	postinc1,c
 31168  01B978  0EC1               	movlw	high _INT0_DefaultInterruptHandler
 31169  01B97A  6EE6               	movwf	postinc1,c
 31170  01B97C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31171  01B97E  6EE6               	movwf	postinc1,c
 31172  01B980  EC53  F0DE         	call	_INT0_SetInterruptHandler	;wreg free
 31173                           
 31174                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31175  01B984  0139               	movlb	57	; () banked
 31176  01B986  8191               	bsf	145,0,b	;volatile
 31177                           
 31178                           ; BSR set to: 57
 31179                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31180  01B988  91A5               	bcf	165,0,b	;volatile
 31181                           
 31182                           ; BSR set to: 57
 31183                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31184  01B98A  92D2               	bcf	210,1,c	;volatile
 31185                           
 31186                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31187  01B98C  0EAE               	movlw	low _INT1_DefaultInterruptHandler
 31188  01B98E  6EE6               	movwf	postinc1,c
 31189  01B990  0EC1               	movlw	high _INT1_DefaultInterruptHandler
 31190  01B992  6EE6               	movwf	postinc1,c
 31191  01B994  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31192  01B996  6EE6               	movwf	postinc1,c
 31193  01B998  EC3F  F0DE         	call	_INT1_SetInterruptHandler	;wreg free
 31194                           
 31195                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31196  01B99C  0139               	movlb	57	; () banked
 31197  01B99E  8195               	bsf	149,0,b	;volatile
 31198                           
 31199                           ; BSR set to: 57
 31200                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31201  01B9A0  0012               	return		;funcret
 31202  01B9A2                     __end_of_EXT_INT_Initialize:
 31203                           	opt callstack 0
 31204                           
 31205 ;; *************** function _INT1_SetInterruptHandler *****************
 31206 ;; Defined at:
 31207 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31208 ;; Parameters:    Size  Location     Type
 31209 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31210 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31211 ;; Auto vars:     Size  Location     Type
 31212 ;;		None
 31213 ;; Return value:  Size  Location     Type
 31214 ;;                  1  [STACK] void 
 31215 ;; Registers used:
 31216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31217 ;; Tracked objects:
 31218 ;;		On entry : 3F/39
 31219 ;;		On exit  : 0/0
 31220 ;;		Unchanged: 0/0
 31221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31226 ;;Total ram usage:        0 bytes
 31227 ;; Hardware stack levels used:    1
 31228 ;; Hardware stack levels required when called:   15
 31229 ;; This function calls:
 31230 ;;		Nothing
 31231 ;; This function is called by:
 31232 ;;		_EXT_INT_Initialize
 31233 ;;		_start_switch_handler
 31234 ;; This function uses a reentrant model
 31235 ;;
 31236                           
 31237                           	psect	text130
 31238  01BC7E                     __ptext130:
 31239                           	opt callstack 0
 31240  01BC7E                     _INT1_SetInterruptHandler:
 31241                           	opt callstack 14
 31242                           
 31243                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 31244                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31245                           
 31246                           ; BSR set to: 57
 31247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31248                           ;incstack = 0
 31249  01BC7E  50E1               	movf	fsr1l,w,c
 31250  01BC80  0FFD               	addlw	-3
 31251  01BC82  6ED9               	movwf	fsr2l,c
 31252  01BC84  50E2               	movf	fsr1h,w,c
 31253  01BC86  6EDA               	movwf	fsr2h,c
 31254  01BC88  0EFF               	movlw	255
 31255  01BC8A  22DA               	addwfc	fsr2h,f,c
 31256  01BC8C  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 31257  01BC92  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 31258  01BC98  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 31259                           
 31260                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31261  01BC9E  52E5               	movf	postdec1,f,c
 31262  01BCA0  52E5               	movf	postdec1,f,c
 31263  01BCA2  52E5               	movf	postdec1,f,c
 31264  01BCA4  0012               	return		;funcret
 31265  01BCA6                     __end_of_INT1_SetInterruptHandler:
 31266                           	opt callstack 0
 31267                           
 31268 ;; *************** function _INT0_SetInterruptHandler *****************
 31269 ;; Defined at:
 31270 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 31271 ;; Parameters:    Size  Location     Type
 31272 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31273 ;;		 -> INT0_DefaultInterruptHandler(1), 
 31274 ;; Auto vars:     Size  Location     Type
 31275 ;;		None
 31276 ;; Return value:  Size  Location     Type
 31277 ;;                  1  [STACK] void 
 31278 ;; Registers used:
 31279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31280 ;; Tracked objects:
 31281 ;;		On entry : 3F/39
 31282 ;;		On exit  : 0/0
 31283 ;;		Unchanged: 0/0
 31284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31289 ;;Total ram usage:        0 bytes
 31290 ;; Hardware stack levels used:    1
 31291 ;; Hardware stack levels required when called:   15
 31292 ;; This function calls:
 31293 ;;		Nothing
 31294 ;; This function is called by:
 31295 ;;		_EXT_INT_Initialize
 31296 ;; This function uses a reentrant model
 31297 ;;
 31298                           
 31299                           	psect	text131
 31300  01BCA6                     __ptext131:
 31301                           	opt callstack 0
 31302  01BCA6                     _INT0_SetInterruptHandler:
 31303                           	opt callstack 13
 31304                           
 31305                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 31306                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31307                           
 31308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31309                           ;incstack = 0
 31310  01BCA6  50E1               	movf	fsr1l,w,c
 31311  01BCA8  0FFD               	addlw	-3
 31312  01BCAA  6ED9               	movwf	fsr2l,c
 31313  01BCAC  50E2               	movf	fsr1h,w,c
 31314  01BCAE  6EDA               	movwf	fsr2h,c
 31315  01BCB0  0EFF               	movlw	255
 31316  01BCB2  22DA               	addwfc	fsr2h,f,c
 31317  01BCB4  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 31318  01BCBA  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 31319  01BCC0  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 31320                           
 31321                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31322  01BCC6  52E5               	movf	postdec1,f,c
 31323  01BCC8  52E5               	movf	postdec1,f,c
 31324  01BCCA  52E5               	movf	postdec1,f,c
 31325  01BCCC  0012               	return		;funcret
 31326  01BCCE                     __end_of_INT0_SetInterruptHandler:
 31327                           	opt callstack 0
 31328                           
 31329 ;; *************** function _DMA2_Initialize *****************
 31330 ;; Defined at:
 31331 ;;		line 61 in file "mcc_generated_files/dma2.c"
 31332 ;; Parameters:    Size  Location     Type
 31333 ;;		None
 31334 ;; Auto vars:     Size  Location     Type
 31335 ;;		None
 31336 ;; Return value:  Size  Location     Type
 31337 ;;                  1  [STACK] void 
 31338 ;; Registers used:
 31339 ;;		wreg, status,2
 31340 ;; Tracked objects:
 31341 ;;		On entry : 3F/3D
 31342 ;;		On exit  : 3F/3B
 31343 ;;		Unchanged: 0/0
 31344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31349 ;;Total ram usage:        0 bytes
 31350 ;; Hardware stack levels used:    1
 31351 ;; Hardware stack levels required when called:   15
 31352 ;; This function calls:
 31353 ;;		Nothing
 31354 ;; This function is called by:
 31355 ;;		_SYSTEM_Initialize
 31356 ;; This function uses a reentrant model
 31357 ;;
 31358                           
 31359                           	psect	text132
 31360  01B288                     __ptext132:
 31361                           	opt callstack 0
 31362  01B288                     _DMA2_Initialize:
 31363                           	opt callstack 14
 31364                           
 31365                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 31366                           
 31367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31368                           ;incstack = 0
 31369  01B288  0E00               	movlw	0
 31370  01B28A  013B               	movlb	59	; () banked
 31371  01B28C  6FD9               	movwf	217,b	;volatile
 31372  01B28E  0E10               	movlw	16
 31373  01B290  6FDA               	movwf	218,b	;volatile
 31374  01B292  0E00               	movlw	0
 31375  01B294  6FDB               	movwf	219,b	;volatile
 31376                           
 31377                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 31378  01B296  0E3F               	movlw	63
 31379  01B298  6FD1               	movwf	209,b	;volatile
 31380  01B29A  0EBB               	movlw	187
 31381  01B29C  6FD0               	movwf	208,b	;volatile
 31382                           
 31383                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 31384  01B29E  0E03               	movlw	3
 31385  01B2A0  6FDD               	movwf	221,b	;volatile
 31386                           
 31387                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 31388  01B2A2  0E00               	movlw	0
 31389  01B2A4  6FD8               	movwf	216,b	;volatile
 31390  01B2A6  0E01               	movlw	1
 31391  01B2A8  6FD7               	movwf	215,b	;volatile
 31392                           
 31393                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 31394  01B2AA  0E00               	movlw	0
 31395  01B2AC  6FCF               	movwf	207,b	;volatile
 31396  01B2AE  0E01               	movlw	1
 31397  01B2B0  6FCE               	movwf	206,b	;volatile
 31398                           
 31399                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 31400  01B2B2  0E1C               	movlw	28
 31401  01B2B4  6FDF               	movwf	223,b	;volatile
 31402                           
 31403                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 31404  01B2B6  0E3D               	movlw	61
 31405  01B2B8  6FDE               	movwf	222,b	;volatile
 31406                           
 31407                           ; BSR set to: 59
 31408                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 31409  01B2BA  0139               	movlb	57	; () banked
 31410  01B2BC  97A5               	bcf	165,3,b	;volatile
 31411                           
 31412                           ; BSR set to: 57
 31413                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 31414  01B2BE  95A5               	bcf	165,2,b	;volatile
 31415                           
 31416                           ; BSR set to: 57
 31417                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 31418  01B2C0  9BA5               	bcf	165,5,b	;volatile
 31419                           
 31420                           ; BSR set to: 57
 31421                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31422  01B2C2  99A5               	bcf	165,4,b	;volatile
 31423                           
 31424                           ; BSR set to: 57
 31425                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31426  01B2C4  9795               	bcf	149,3,b	;volatile
 31427                           
 31428                           ; BSR set to: 57
 31429                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31430  01B2C6  9595               	bcf	149,2,b	;volatile
 31431                           
 31432                           ; BSR set to: 57
 31433                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31434  01B2C8  9B95               	bcf	149,5,b	;volatile
 31435                           
 31436                           ; BSR set to: 57
 31437                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31438  01B2CA  9995               	bcf	149,4,b	;volatile
 31439  01B2CC  9ED2               	bcf	16338,7,c	;# 
 31440  01B2CE  0139               	banksel	14831	;# 
 31441  01B2D0  0E55               	movlw	85	;# 
 31442  01B2D2  6FEF               	movwf	14831,b	;# 
 31443  01B2D4  0EAA               	movlw	170	;# 
 31444  01B2D6  6FEF               	movwf	14831,b	;# 
 31445  01B2D8  81EF               	bsf	14831,0,b	;# 
 31446  01B2DA  8ED2               	bsf	16338,7,c	;# 
 31447                           
 31448                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31449  01B2DC  013B               	movlb	59	; () banked
 31450  01B2DE  6BDC               	clrf	220,b	;volatile
 31451                           
 31452                           ; BSR set to: 59
 31453                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31454  01B2E0  0012               	return		;funcret
 31455  01B2E2                     __end_of_DMA2_Initialize:
 31456                           	opt callstack 0
 31457                           
 31458 ;; *************** function _DMA1_Initialize *****************
 31459 ;; Defined at:
 31460 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31461 ;; Parameters:    Size  Location     Type
 31462 ;;		None
 31463 ;; Auto vars:     Size  Location     Type
 31464 ;;		None
 31465 ;; Return value:  Size  Location     Type
 31466 ;;                  1  [STACK] void 
 31467 ;; Registers used:
 31468 ;;		wreg, status,2
 31469 ;; Tracked objects:
 31470 ;;		On entry : 3F/3B
 31471 ;;		On exit  : 3F/3B
 31472 ;;		Unchanged: 0/0
 31473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31478 ;;Total ram usage:        0 bytes
 31479 ;; Hardware stack levels used:    1
 31480 ;; Hardware stack levels required when called:   15
 31481 ;; This function calls:
 31482 ;;		Nothing
 31483 ;; This function is called by:
 31484 ;;		_SYSTEM_Initialize
 31485 ;; This function uses a reentrant model
 31486 ;;
 31487                           
 31488                           	psect	text133
 31489  01AEA8                     __ptext133:
 31490                           	opt callstack 0
 31491  01AEA8                     _DMA1_Initialize:
 31492                           	opt callstack 14
 31493                           
 31494                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31495                           
 31496                           ; BSR set to: 59
 31497                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31498                           ;incstack = 0
 31499  01AEA8  0E00               	movlw	0
 31500  01AEAA  013B               	movlb	59	; () banked
 31501  01AEAC  6FF9               	movwf	249,b	;volatile
 31502  01AEAE  0E10               	movlw	16
 31503  01AEB0  6FFA               	movwf	250,b	;volatile
 31504  01AEB2  0E00               	movlw	0
 31505  01AEB4  6FFB               	movwf	251,b	;volatile
 31506                           
 31507                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31508  01AEB6  0E3D               	movlw	61
 31509  01AEB8  6FF1               	movwf	241,b	;volatile
 31510  01AEBA  0E11               	movlw	17
 31511  01AEBC  6FF0               	movwf	240,b	;volatile
 31512                           
 31513                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31514  01AEBE  0E03               	movlw	3
 31515  01AEC0  6FFD               	movwf	253,b	;volatile
 31516                           
 31517                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31518  01AEC2  0E00               	movlw	0
 31519  01AEC4  6FF8               	movwf	248,b	;volatile
 31520  01AEC6  0E01               	movlw	1
 31521  01AEC8  6FF7               	movwf	247,b	;volatile
 31522                           
 31523                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31524  01AECA  0E00               	movlw	0
 31525  01AECC  6FEF               	movwf	239,b	;volatile
 31526  01AECE  0E01               	movlw	1
 31527  01AED0  6FEE               	movwf	238,b	;volatile
 31528                           
 31529                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31530  01AED2  0E15               	movlw	21
 31531  01AED4  6FFF               	movwf	255,b	;volatile
 31532                           
 31533                           ; BSR set to: 59
 31534                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31535  01AED6  6BFE               	clrf	254,b	;volatile
 31536                           
 31537                           ; BSR set to: 59
 31538                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31539  01AED8  0139               	movlb	57	; () banked
 31540  01AEDA  93A2               	bcf	162,1,b	;volatile
 31541                           
 31542                           ; BSR set to: 57
 31543                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31544  01AEDC  91A2               	bcf	162,0,b	;volatile
 31545                           
 31546                           ; BSR set to: 57
 31547                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31548  01AEDE  97A2               	bcf	162,3,b	;volatile
 31549                           
 31550                           ; BSR set to: 57
 31551                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31552  01AEE0  95A2               	bcf	162,2,b	;volatile
 31553                           
 31554                           ; BSR set to: 57
 31555                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31556  01AEE2  8392               	bsf	146,1,b	;volatile
 31557                           
 31558                           ; BSR set to: 57
 31559                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31560  01AEE4  8192               	bsf	146,0,b	;volatile
 31561                           
 31562                           ; BSR set to: 57
 31563                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31564  01AEE6  8792               	bsf	146,3,b	;volatile
 31565                           
 31566                           ; BSR set to: 57
 31567                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31568  01AEE8  8592               	bsf	146,2,b	;volatile
 31569                           
 31570                           ; BSR set to: 57
 31571                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31572  01AEEA  6BF1               	clrf	241,b	;volatile
 31573                           
 31574                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31575  01AEEC  0E01               	movlw	1
 31576  01AEEE  6FF2               	movwf	242,b	;volatile
 31577                           
 31578                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31579  01AEF0  0E04               	movlw	4
 31580  01AEF2  6FF3               	movwf	243,b	;volatile
 31581                           
 31582                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31583  01AEF4  0E02               	movlw	2
 31584  01AEF6  6FF4               	movwf	244,b	;volatile
 31585                           
 31586                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31587  01AEF8  0E03               	movlw	3
 31588  01AEFA  6FF7               	movwf	247,b	;volatile
 31589  01AEFC  9ED2               	bcf	16338,7,c	;# 
 31590  01AEFE  0139               	banksel	14831	;# 
 31591  01AF00  0E55               	movlw	85	;# 
 31592  01AF02  6FEF               	movwf	14831,b	;# 
 31593  01AF04  0EAA               	movlw	170	;# 
 31594  01AF06  6FEF               	movwf	14831,b	;# 
 31595  01AF08  81EF               	bsf	14831,0,b	;# 
 31596  01AF0A  8ED2               	bsf	16338,7,c	;# 
 31597                           
 31598                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31599  01AF0C  013B               	movlb	59	; () banked
 31600  01AF0E  6BFC               	clrf	252,b	;volatile
 31601                           
 31602                           ; BSR set to: 59
 31603                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31604  01AF10  0012               	return		;funcret
 31605  01AF12                     __end_of_DMA1_Initialize:
 31606                           	opt callstack 0
 31607                           
 31608 ;; *************** function _CLKREF_Initialize *****************
 31609 ;; Defined at:
 31610 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31611 ;; Parameters:    Size  Location     Type
 31612 ;;		None
 31613 ;; Auto vars:     Size  Location     Type
 31614 ;;		None
 31615 ;; Return value:  Size  Location     Type
 31616 ;;                  1  [STACK] void 
 31617 ;; Registers used:
 31618 ;;		wreg, status,2
 31619 ;; Tracked objects:
 31620 ;;		On entry : 3F/3B
 31621 ;;		On exit  : 3F/3C
 31622 ;;		Unchanged: 0/0
 31623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31628 ;;Total ram usage:        0 bytes
 31629 ;; Hardware stack levels used:    1
 31630 ;; Hardware stack levels required when called:   15
 31631 ;; This function calls:
 31632 ;;		Nothing
 31633 ;; This function is called by:
 31634 ;;		_SYSTEM_Initialize
 31635 ;; This function uses a reentrant model
 31636 ;;
 31637                           
 31638                           	psect	text134
 31639  01C12E                     __ptext134:
 31640                           	opt callstack 0
 31641  01C12E                     _CLKREF_Initialize:
 31642                           	opt callstack 14
 31643                           
 31644                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31645                           
 31646                           ; BSR set to: 59
 31647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31648                           ;incstack = 0
 31649  01C12E  013C               	movlb	60	; () banked
 31650  01C130  6BE6               	clrf	230,b	;volatile
 31651                           
 31652                           ; BSR set to: 60
 31653                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31654  01C132  0E94               	movlw	148
 31655  01C134  6FE5               	movwf	229,b	;volatile
 31656                           
 31657                           ; BSR set to: 60
 31658                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31659  01C136  0012               	return		;funcret
 31660  01C138                     __end_of_CLKREF_Initialize:
 31661                           	opt callstack 0
 31662                           
 31663 ;; *************** function _ADCC_Initialize *****************
 31664 ;; Defined at:
 31665 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31666 ;; Parameters:    Size  Location     Type
 31667 ;;		None
 31668 ;; Auto vars:     Size  Location     Type
 31669 ;;		None
 31670 ;; Return value:  Size  Location     Type
 31671 ;;                  1  [STACK] void 
 31672 ;; Registers used:
 31673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31674 ;; Tracked objects:
 31675 ;;		On entry : 3F/3E
 31676 ;;		On exit  : 0/0
 31677 ;;		Unchanged: 0/0
 31678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31683 ;;Total ram usage:        0 bytes
 31684 ;; Hardware stack levels used:    1
 31685 ;; Hardware stack levels required when called:   16
 31686 ;; This function calls:
 31687 ;;		_ADCC_SetADIInterruptHandler
 31688 ;;		_ADCC_SetADTIInterruptHandler
 31689 ;; This function is called by:
 31690 ;;		_SYSTEM_Initialize
 31691 ;; This function uses a reentrant model
 31692 ;;
 31693                           
 31694                           	psect	text135
 31695  01AF12                     __ptext135:
 31696                           	opt callstack 0
 31697  01AF12                     _ADCC_Initialize:
 31698                           	opt callstack 13
 31699                           
 31700                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31701                           
 31702                           ; BSR set to: 60
 31703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31704                           ;incstack = 0
 31705  01AF12  013E               	movlb	62	; () banked
 31706  01AF14  6BDE               	clrf	222,b	;volatile
 31707                           
 31708                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31709  01AF16  6BDF               	clrf	223,b	;volatile
 31710                           
 31711                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31712  01AF18  6BE0               	clrf	224,b	;volatile
 31713                           
 31714                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31715  01AF1A  6BE1               	clrf	225,b	;volatile
 31716                           
 31717                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31718  01AF1C  6BE4               	clrf	228,b	;volatile
 31719                           
 31720                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31721  01AF1E  6BE5               	clrf	229,b	;volatile
 31722                           
 31723                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31724  01AF20  6BEA               	clrf	234,b	;volatile
 31725                           
 31726                           ; BSR set to: 62
 31727                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31728  01AF22  0E40               	movlw	64
 31729  01AF24  6FEC               	movwf	236,b	;volatile
 31730                           
 31731                           ; BSR set to: 62
 31732                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31733  01AF26  6BF1               	clrf	241,b	;volatile
 31734                           
 31735                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31736  01AF28  0E20               	movlw	32
 31737  01AF2A  6FF3               	movwf	243,b	;volatile
 31738                           
 31739                           ; BSR set to: 62
 31740                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31741  01AF2C  6BF4               	clrf	244,b	;volatile
 31742                           
 31743                           ; BSR set to: 62
 31744                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31745  01AF2E  6BF5               	clrf	245,b	;volatile
 31746                           
 31747                           ; BSR set to: 62
 31748                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31749  01AF30  6BF6               	clrf	246,b	;volatile
 31750                           
 31751                           ; BSR set to: 62
 31752                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31753  01AF32  6BF7               	clrf	247,b	;volatile
 31754                           
 31755                           ; BSR set to: 62
 31756                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31757  01AF34  6BF9               	clrf	249,b	;volatile
 31758                           
 31759                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31760  01AF36  0E5B               	movlw	91
 31761  01AF38  6FFA               	movwf	250,b	;volatile
 31762                           
 31763                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31764  01AF3A  0E27               	movlw	39
 31765  01AF3C  6FFB               	movwf	251,b	;volatile
 31766                           
 31767                           ; BSR set to: 62
 31768                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31769  01AF3E  6BFC               	clrf	252,b	;volatile
 31770                           
 31771                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31772  01AF40  0E02               	movlw	2
 31773  01AF42  6FFD               	movwf	253,b	;volatile
 31774                           
 31775                           ; BSR set to: 62
 31776                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31777  01AF44  6BFE               	clrf	254,b	;volatile
 31778                           
 31779                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31780  01AF46  0E07               	movlw	7
 31781  01AF48  6FFF               	movwf	255,b	;volatile
 31782                           
 31783                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31784  01AF4A  0E84               	movlw	132
 31785  01AF4C  6FF8               	movwf	248,b	;volatile
 31786                           
 31787                           ; BSR set to: 62
 31788                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31789  01AF4E  0139               	movlb	57	; () banked
 31790  01AF50  95A1               	bcf	161,2,b	;volatile
 31791                           
 31792                           ; BSR set to: 57
 31793                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31794  01AF52  8591               	bsf	145,2,b	;volatile
 31795                           
 31796                           ; BSR set to: 57
 31797                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31798  01AF54  0EB4               	movlw	low _ADCC_DefaultInterruptHandler
 31799  01AF56  6EE6               	movwf	postinc1,c
 31800  01AF58  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 31801  01AF5A  6EE6               	movwf	postinc1,c
 31802  01AF5C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31803  01AF5E  6EE6               	movwf	postinc1,c
 31804  01AF60  EC7B  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31805                           
 31806                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31807  01AF64  0139               	movlb	57	; () banked
 31808  01AF66  97A1               	bcf	161,3,b	;volatile
 31809                           
 31810                           ; BSR set to: 57
 31811                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31812  01AF68  8791               	bsf	145,3,b	;volatile
 31813                           
 31814                           ; BSR set to: 57
 31815                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31816  01AF6A  0EB4               	movlw	low _ADCC_DefaultInterruptHandler
 31817  01AF6C  6EE6               	movwf	postinc1,c
 31818  01AF6E  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 31819  01AF70  6EE6               	movwf	postinc1,c
 31820  01AF72  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31821  01AF74  6EE6               	movwf	postinc1,c
 31822  01AF76  EC67  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31823                           
 31824                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31825  01AF7A  0012               	return		;funcret
 31826  01AF7C                     __end_of_ADCC_Initialize:
 31827                           	opt callstack 0
 31828                           
 31829 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31830 ;; Defined at:
 31831 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31832 ;; Parameters:    Size  Location     Type
 31833 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31834 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31835 ;; Auto vars:     Size  Location     Type
 31836 ;;		None
 31837 ;; Return value:  Size  Location     Type
 31838 ;;                  1  [STACK] void 
 31839 ;; Registers used:
 31840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31841 ;; Tracked objects:
 31842 ;;		On entry : 0/1
 31843 ;;		On exit  : 0/0
 31844 ;;		Unchanged: 0/0
 31845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31850 ;;Total ram usage:        0 bytes
 31851 ;; Hardware stack levels used:    1
 31852 ;; Hardware stack levels required when called:   15
 31853 ;; This function calls:
 31854 ;;		Nothing
 31855 ;; This function is called by:
 31856 ;;		_ADCC_Initialize
 31857 ;;		_start_adc_scan
 31858 ;; This function uses a reentrant model
 31859 ;;
 31860                           
 31861                           	psect	text136
 31862  01BCCE                     __ptext136:
 31863                           	opt callstack 0
 31864  01BCCE                     _ADCC_SetADTIInterruptHandler:
 31865                           	opt callstack 14
 31866                           
 31867                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31868                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31869                           
 31870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31871                           ;incstack = 0
 31872  01BCCE  50E1               	movf	fsr1l,w,c
 31873  01BCD0  0FFD               	addlw	-3
 31874  01BCD2  6ED9               	movwf	fsr2l,c
 31875  01BCD4  50E2               	movf	fsr1h,w,c
 31876  01BCD6  6EDA               	movwf	fsr2h,c
 31877  01BCD8  0EFF               	movlw	255
 31878  01BCDA  22DA               	addwfc	fsr2h,f,c
 31879  01BCDC  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31880  01BCE2  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31881  01BCE8  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31882                           
 31883                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31884  01BCEE  52E5               	movf	postdec1,f,c
 31885  01BCF0  52E5               	movf	postdec1,f,c
 31886  01BCF2  52E5               	movf	postdec1,f,c
 31887  01BCF4  0012               	return		;funcret
 31888  01BCF6                     __end_of_ADCC_SetADTIInterruptHandler:
 31889                           	opt callstack 0
 31890                           
 31891 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31892 ;; Defined at:
 31893 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31894 ;; Parameters:    Size  Location     Type
 31895 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31896 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31897 ;; Auto vars:     Size  Location     Type
 31898 ;;		None
 31899 ;; Return value:  Size  Location     Type
 31900 ;;                  1  [STACK] void 
 31901 ;; Registers used:
 31902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31903 ;; Tracked objects:
 31904 ;;		On entry : 7/1
 31905 ;;		On exit  : 0/0
 31906 ;;		Unchanged: 0/0
 31907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31912 ;;Total ram usage:        0 bytes
 31913 ;; Hardware stack levels used:    1
 31914 ;; Hardware stack levels required when called:   15
 31915 ;; This function calls:
 31916 ;;		Nothing
 31917 ;; This function is called by:
 31918 ;;		_ADCC_Initialize
 31919 ;;		_start_adc_scan
 31920 ;; This function uses a reentrant model
 31921 ;;
 31922                           
 31923                           	psect	text137
 31924  01BCF6                     __ptext137:
 31925                           	opt callstack 0
 31926  01BCF6                     _ADCC_SetADIInterruptHandler:
 31927                           	opt callstack 14
 31928                           
 31929                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31930                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31931                           
 31932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31933                           ;incstack = 0
 31934  01BCF6  50E1               	movf	fsr1l,w,c
 31935  01BCF8  0FFD               	addlw	-3
 31936  01BCFA  6ED9               	movwf	fsr2l,c
 31937  01BCFC  50E2               	movf	fsr1h,w,c
 31938  01BCFE  6EDA               	movwf	fsr2h,c
 31939  01BD00  0EFF               	movlw	255
 31940  01BD02  22DA               	addwfc	fsr2h,f,c
 31941  01BD04  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31942  01BD0A  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31943  01BD10  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31944                           
 31945                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31946  01BD16  52E5               	movf	postdec1,f,c
 31947  01BD18  52E5               	movf	postdec1,f,c
 31948  01BD1A  52E5               	movf	postdec1,f,c
 31949  01BD1C  0012               	return		;funcret
 31950  01BD1E                     __end_of_ADCC_SetADIInterruptHandler:
 31951                           	opt callstack 0
 31952                           
 31953 ;; *************** function _INT1_ISR *****************
 31954 ;; Defined at:
 31955 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31956 ;; Parameters:    Size  Location     Type
 31957 ;;		None
 31958 ;; Auto vars:     Size  Location     Type
 31959 ;;		None
 31960 ;; Return value:  Size  Location     Type
 31961 ;;                  1    wreg      void 
 31962 ;; Registers used:
 31963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31964 ;; Tracked objects:
 31965 ;;		On entry : 0/0
 31966 ;;		On exit  : 0/0
 31967 ;;		Unchanged: 0/0
 31968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31971 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31972 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31973 ;;Total ram usage:        4 bytes
 31974 ;; Hardware stack levels used:    1
 31975 ;; Hardware stack levels required when called:    5
 31976 ;; This function calls:
 31977 ;;		_INT1_CallBack
 31978 ;; This function is called by:
 31979 ;;		Interrupt level 1
 31980 ;; This function uses a non-reentrant model
 31981 ;;
 31982                           
 31983                           	psect	text138
 31984  01B81C                     __ptext138:
 31985                           	opt callstack 0
 31986  01B81C                     _INT1_ISR:
 31987                           	opt callstack 11
 31988                           
 31989                           ;incstack = 0
 31990  01B81C  006F FF60  F027    	movff	status,??_INT1_ISR
 31991  01B822  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 31992  01B828  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 31993  01B82E  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 31994  01B834  EE16  F0AF         	lfsr	1,___intlo_sp
 31995                           
 31996                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31997  01B838  0139               	movlb	57	; () banked
 31998  01B83A  91A5               	bcf	165,0,b	;volatile
 31999                           
 32000                           ; BSR set to: 57
 32001                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 32002  01B83C  ECF0  F0DE         	call	_INT1_CallBack	;wreg free
 32003  01B840  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 32004  01B846  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 32005  01B84C  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 32006  01B852  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 32007  01B858  0011               	retfie		f
 32008  01B85A                     __end_of_INT1_ISR:
 32009                           	opt callstack 0
 32010                           
 32011 ;; *************** function _INT1_CallBack *****************
 32012 ;; Defined at:
 32013 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 32014 ;; Parameters:    Size  Location     Type
 32015 ;;		None
 32016 ;; Auto vars:     Size  Location     Type
 32017 ;;		None
 32018 ;; Return value:  Size  Location     Type
 32019 ;;                  1  [STACK] void 
 32020 ;; Registers used:
 32021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32022 ;; Tracked objects:
 32023 ;;		On entry : 3F/39
 32024 ;;		On exit  : 0/0
 32025 ;;		Unchanged: 0/0
 32026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32031 ;;Total ram usage:        0 bytes
 32032 ;; Hardware stack levels used:    1
 32033 ;; Hardware stack levels required when called:    4
 32034 ;; This function calls:
 32035 ;;		Absolute function
 32036 ;;		_INT1_DefaultInterruptHandler
 32037 ;;		_switch_handler
 32038 ;; This function is called by:
 32039 ;;		_INT1_ISR
 32040 ;; This function uses a reentrant model
 32041 ;;
 32042                           
 32043                           	psect	text139
 32044  01BDE0                     __ptext139:
 32045                           	opt callstack 0
 32046  01BDE0                     _INT1_CallBack:
 32047                           	opt callstack 11
 32048                           
 32049                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32050                           
 32051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32052                           ;incstack = 0
 32053  01BDE0  0100               	movlb	0	; () banked
 32054  01BDE2  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 32055  01BDE4  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32056  01BDE6  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32057  01BDE8  B4D8               	btfsc	status,2,c
 32058  01BDEA  0012               	return	
 32059                           
 32060                           ; BSR set to: 0
 32061                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32062  01BDEC  D801               	call	u999_28
 32063  01BDEE  0012               	return	
 32064  01BDF0                     u999_28:
 32065  01BDF0  0005               	push	
 32066  01BDF2  6EFA               	movwf	pclath,c
 32067  01BDF4  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 32068  01BDF6  6EFD               	movwf	tosl,c
 32069  01BDF8  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32070  01BDFA  6EFE               	movwf	tosh,c
 32071  01BDFC  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32072  01BDFE  6EFF               	movwf	tosu,c
 32073  01BE00  50FA               	movf	pclath,w,c
 32074  01BE02  0012               	return		;indir
 32075  01BE04                     __end_of_INT1_CallBack:
 32076                           	opt callstack 0
 32077                           
 32078 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32079 ;; Defined at:
 32080 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32081 ;; Parameters:    Size  Location     Type
 32082 ;;		None
 32083 ;; Auto vars:     Size  Location     Type
 32084 ;;		None
 32085 ;; Return value:  Size  Location     Type
 32086 ;;                  1  [STACK] void 
 32087 ;; Registers used:
 32088 ;;		None
 32089 ;; Tracked objects:
 32090 ;;		On entry : 3F/0
 32091 ;;		On exit  : 0/0
 32092 ;;		Unchanged: 0/0
 32093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32098 ;;Total ram usage:        0 bytes
 32099 ;; Hardware stack levels used:    1
 32100 ;; Hardware stack levels required when called:    3
 32101 ;; This function calls:
 32102 ;;		Nothing
 32103 ;; This function is called by:
 32104 ;;		_EXT_INT_Initialize
 32105 ;;		_INT1_CallBack
 32106 ;; This function uses a reentrant model
 32107 ;;
 32108                           
 32109                           	psect	text140
 32110  01C1AE                     __ptext140:
 32111                           	opt callstack 0
 32112  01C1AE                     _INT1_DefaultInterruptHandler:
 32113                           	opt callstack 11
 32114                           
 32115                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32116                           
 32117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32118                           ;incstack = 0
 32119  01C1AE  0012               	return		;funcret
 32120  01C1B0                     __end_of_INT1_DefaultInterruptHandler:
 32121                           	opt callstack 0
 32122                           
 32123 ;; *************** function _switch_handler *****************
 32124 ;; Defined at:
 32125 ;;		line 58 in file "dio.c"
 32126 ;; Parameters:    Size  Location     Type
 32127 ;;		None
 32128 ;; Auto vars:     Size  Location     Type
 32129 ;;  i               1  [STACK] unsigned char 
 32130 ;;  sw_value        1  [STACK] unsigned char 
 32131 ;; Return value:  Size  Location     Type
 32132 ;;                  1  [STACK] void 
 32133 ;; Registers used:
 32134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32135 ;; Tracked objects:
 32136 ;;		On entry : 3F/0
 32137 ;;		On exit  : 0/0
 32138 ;;		Unchanged: 0/0
 32139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32144 ;;Total ram usage:        0 bytes
 32145 ;; Hardware stack levels used:    1
 32146 ;; Hardware stack levels required when called:    3
 32147 ;; This function calls:
 32148 ;;		Nothing
 32149 ;; This function is called by:
 32150 ;;		_start_switch_handler
 32151 ;;		_INT1_CallBack
 32152 ;; This function uses a reentrant model
 32153 ;;
 32154                           
 32155                           	psect	text141
 32156  0193E0                     __ptext141:
 32157                           	opt callstack 0
 32158  0193E0                     _switch_handler:
 32159                           	opt callstack 0
 32160                           
 32161                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32162  0193E0  52E6               	movf	postinc1,f,c
 32163  0193E2  52E6               	movf	postinc1,f,c
 32164                           
 32165                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32166                           ;stkvar	_i @ sp[(-2)+0]
 32167                           
 32168                           ;incstack = 0
 32169  0193E4  0EFE               	movlw	-2
 32170  0193E6  6AE3               	clrf	plusw1,c
 32171  0193E8  9ABF               	bcf	191,5,c	;volatile
 32172                           
 32173                           ;dio.c: 73:  __nop();
 32174  0193EA  F000               	nop	
 32175                           
 32176                           ;dio.c: 74:  __nop();
 32177  0193EC  F000               	nop	
 32178                           
 32179                           ;dio.c: 75:  __nop();
 32180  0193EE  F000               	nop	
 32181                           
 32182                           ;dio.c: 76:  __nop();
 32183  0193F0  F000               	nop	
 32184                           
 32185                           ;dio.c: 77:  __nop();
 32186  0193F2  F000               	nop	
 32187                           
 32188                           ;dio.c: 78:  __nop();
 32189  0193F4  F000               	nop	
 32190  0193F6  D019               	goto	l10542
 32191  0193F8                     l10530:
 32192                           
 32193                           ;dio.c: 83:    sw_value = PORTFbits.RF3;
 32194  0193F8  A6CF               	btfss	207,3,c	;volatile
 32195  0193FA  D011               	goto	u968_20
 32196  0193FC  D00D               	goto	u968_21
 32197  0193FE                     u965_28:
 32198                           
 32199                           ;stkvar	_sw_value @ sp[(-2)+1]
 32200  0193FE  0EFF               	movlw	-1
 32201  019400  0060  F033  FFE3   	movff	btemp+11,plusw1
 32202                           
 32203                           ;dio.c: 84:    break;
 32204  019406  D027               	goto	l10544
 32205  019408                     l10532:
 32206                           
 32207                           ;dio.c: 86:    sw_value = PORTFbits.RF2;
 32208  019408  A4CF               	btfss	207,2,c	;volatile
 32209  01940A  D009               	goto	u968_20
 32210  01940C  D005               	goto	u968_21
 32211  01940E                     l10534:
 32212                           
 32213                           ;dio.c: 89:    sw_value = PORTFbits.RF1;
 32214  01940E  A2CF               	btfss	207,1,c	;volatile
 32215  019410  D006               	goto	u968_20
 32216  019412  D002               	goto	u968_21
 32217  019414                     l10536:
 32218                           
 32219                           ;dio.c: 92:    sw_value = PORTFbits.RF0;
 32220  019414  A0CF               	btfss	207,0,c	;volatile
 32221  019416  D003               	goto	u968_20
 32222  019418                     u968_21:
 32223  019418  6A0C               	clrf	(btemp+11)^0,c
 32224  01941A  2A0C               	incf	(btemp+11)^0,f,c
 32225  01941C  D7F0               	goto	u965_28
 32226  01941E                     u968_20:
 32227  01941E  6A0C               	clrf	(btemp+11)^0,c
 32228  019420  D7EE               	goto	u965_28
 32229  019422                     l10538:
 32230                           
 32231                           ;dio.c: 95:    sw_value = 1;
 32232                           ;stkvar	_sw_value @ sp[(-2)+1]
 32233  019422  0EFF               	movlw	-1
 32234  019424  6AE3               	clrf	plusw1,c
 32235  019426  2AE3               	incf	plusw1,f,c
 32236                           
 32237                           ;dio.c: 96:    break;
 32238  019428  D016               	goto	l10544
 32239  01942A                     l10542:
 32240                           
 32241                           ;stkvar	_i @ sp[(-2)+0]
 32242  01942A  0EFE               	movlw	-2
 32243  01942C  50E3               	movf	plusw1,w,c
 32244  01942E  6E0B               	movwf	(btemp+10)^0,c
 32245  019430  6A0C               	clrf	(btemp+11)^0,c
 32246                           
 32247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32248                           ; Switch size 1, requested type "simple"
 32249                           ; Number of cases is 1, Range of values is 0 to 0
 32250                           ; switch strategies available:
 32251                           ; Name         Instructions Cycles
 32252                           ; simple_byte            4     3 (average)
 32253                           ;	Chosen strategy is simple_byte
 32254  019432  500C               	movf	(btemp+11)^0,w,c
 32255  019434  0A00               	xorlw	0	; case 0
 32256  019436  A4D8               	btfss	status,2,c
 32257  019438  D7F4               	goto	l10538
 32258                           
 32259                           ; Switch size 1, requested type "simple"
 32260                           ; Number of cases is 4, Range of values is 0 to 3
 32261                           ; switch strategies available:
 32262                           ; Name         Instructions Cycles
 32263                           ; simple_byte           13     7 (average)
 32264                           ;	Chosen strategy is simple_byte
 32265  01943A  500B               	movf	(btemp+10)^0,w,c
 32266  01943C  0A00               	xorlw	0	; case 0
 32267  01943E  B4D8               	btfsc	status,2,c
 32268  019440  D7E9               	goto	l10536
 32269  019442  0A01               	xorlw	1	; case 1
 32270  019444  B4D8               	btfsc	status,2,c
 32271  019446  D7E3               	goto	l10534
 32272  019448  0A03               	xorlw	3	; case 2
 32273  01944A  B4D8               	btfsc	status,2,c
 32274  01944C  D7DD               	goto	l10532
 32275  01944E  0A01               	xorlw	1	; case 3
 32276  019450  B4D8               	btfsc	status,2,c
 32277  019452  D7D2               	goto	l10530
 32278  019454  D7E6               	goto	l10538
 32279  019456                     l10544:
 32280                           
 32281                           ;dio.c: 100:   if (sw_value) {
 32282                           ;stkvar	_sw_value @ sp[(-2)+1]
 32283  019456  0EFF               	movlw	-1
 32284  019458  50E3               	movf	plusw1,w,c
 32285  01945A  B4D8               	btfsc	status,2,c
 32286  01945C  D018               	goto	l10550
 32287                           
 32288                           ;dio.c: 101:    if (S.button[i].sw == SW_ON) {
 32289                           ;stkvar	_i @ sp[(-2)+0]
 32290  01945E  0EFE               	movlw	-2
 32291  019460  50E3               	movf	plusw1,w,c
 32292  019462  0D05               	mullw	5
 32293  019464  0E54               	movlw	low _S
 32294  019466  24F3               	addwf	243,w,c
 32295  019468  6ED9               	movwf	fsr2l,c
 32296  01946A  0E02               	movlw	high _S
 32297  01946C  20F4               	addwfc	prodh,w,c
 32298  01946E  6EDA               	movwf	fsr2h,c
 32299  019470  04DE               	decf	postinc2,w,c
 32300  019472  A4D8               	btfss	status,2,c
 32301  019474  D049               	goto	l10558
 32302                           
 32303                           ;dio.c: 102:     S.button[i].sw = SW_OFF;
 32304                           ;stkvar	_i @ sp[(-2)+0]
 32305  019476  0EFE               	movlw	-2
 32306  019478  50E3               	movf	plusw1,w,c
 32307  01947A  0D05               	mullw	5
 32308  01947C  0E54               	movlw	low _S
 32309  01947E  24F3               	addwf	243,w,c
 32310  019480  6ED9               	movwf	fsr2l,c
 32311  019482  0E02               	movlw	high _S
 32312  019484  20F4               	addwfc	prodh,w,c
 32313  019486  6EDA               	movwf	fsr2h,c
 32314  019488  0E00               	movlw	0
 32315  01948A  6EDF               	movwf	indf2,c
 32316  01948C  D03D               	goto	l10558
 32317  01948E                     l10550:
 32318                           
 32319                           ;dio.c: 105:    if (S.button[i].sw == SW_OFF) {
 32320                           ;stkvar	_i @ sp[(-2)+0]
 32321  01948E  0EFE               	movlw	-2
 32322  019490  50E3               	movf	plusw1,w,c
 32323  019492  0D05               	mullw	5
 32324  019494  0E54               	movlw	low _S
 32325  019496  24F3               	addwf	243,w,c
 32326  019498  6ED9               	movwf	fsr2l,c
 32327  01949A  0E02               	movlw	high _S
 32328  01949C  20F4               	addwfc	prodh,w,c
 32329  01949E  6EDA               	movwf	fsr2h,c
 32330  0194A0  50DF               	movf	indf2,w,c
 32331  0194A2  A4D8               	btfss	status,2,c
 32332  0194A4  D031               	goto	l10558
 32333                           
 32334                           ;dio.c: 106:     S.button[i].sw = SW_ON;
 32335                           ;stkvar	_i @ sp[(-2)+0]
 32336  0194A6  0EFE               	movlw	-2
 32337  0194A8  50E3               	movf	plusw1,w,c
 32338  0194AA  0D05               	mullw	5
 32339  0194AC  0E54               	movlw	low _S
 32340  0194AE  24F3               	addwf	243,w,c
 32341  0194B0  6ED9               	movwf	fsr2l,c
 32342  0194B2  0E02               	movlw	high _S
 32343  0194B4  20F4               	addwfc	prodh,w,c
 32344  0194B6  6EDA               	movwf	fsr2h,c
 32345  0194B8  0E01               	movlw	1
 32346  0194BA  6EDF               	movwf	indf2,c
 32347                           
 32348                           ;dio.c: 107:     S.button[i].count = V.timerint_count;
 32349  0194BC  EE20  F1EB         	lfsr	2,_V+187	;volatile
 32350                           
 32351                           ;stkvar	_i @ sp[(-2)+0]
 32352  0194C0  0EFE               	movlw	-2
 32353  0194C2  50E3               	movf	plusw1,w,c
 32354  0194C4  0D05               	mullw	5
 32355  0194C6  0E55               	movlw	low (_S+1)
 32356  0194C8  24F3               	addwf	243,w,c
 32357  0194CA  6EE9               	movwf	fsr0l,c
 32358  0194CC  0E02               	movlw	high (_S+1)
 32359  0194CE  20F4               	addwfc	prodh,w,c
 32360  0194D0  6EEA               	movwf	fsr0h,c
 32361  0194D2  006F FF7B FFEE     	movff	postinc2,postinc0
 32362  0194D8  006F FF7B FFEE     	movff	postinc2,postinc0
 32363  0194DE  006F FF7B FFEE     	movff	postinc2,postinc0
 32364  0194E4  006F FF7B FFEE     	movff	postinc2,postinc0
 32365                           
 32366                           ;dio.c: 108:     S.sw_bitmap |= 1 << i;
 32367                           ;stkvar	_i @ sp[(-2)+0]
 32368  0194EA  0EFE               	movlw	-2
 32369  0194EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 32370  0194F2  0E01               	movlw	1
 32371  0194F4  6E0B               	movwf	(btemp+10)^0,c
 32372  0194F6  2A0C               	incf	(btemp+11)^0,f,c
 32373  0194F8  D002               	goto	u972_24
 32374  0194FA                     u972_25:
 32375  0194FA  90D8               	bcf	status,0,c
 32376  0194FC  360B               	rlcf	(btemp+10)^0,f,c
 32377  0194FE                     u972_24:
 32378  0194FE  2E0C               	decfsz	(btemp+11)^0,f,c
 32379  019500  D7FC               	goto	u972_25
 32380  019502  500B               	movf	(btemp+10)^0,w,c
 32381  019504  0102               	movlb	2	; () banked
 32382  019506  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 32383  019508                     l10558:
 32384                           
 32385                           ;dio.c: 111:  } while (++i < 4);
 32386                           ;stkvar	_i @ sp[(-2)+0]
 32387  019508  0EFE               	movlw	-2
 32388  01950A  2AE3               	incf	plusw1,f,c
 32389  01950C  0EFE               	movlw	-2
 32390  01950E  006F FF8C  F001    	movff	plusw1,btemp
 32391  019514  0E03               	movlw	3
 32392  019516  6401               	cpfsgt	btemp^0,c
 32393  019518  D788               	goto	l10542
 32394                           
 32395                           ;dio.c: 121:  do { LATFbits.LATF5 = 1; } while(0);
 32396  01951A  8ABF               	bsf	191,5,c	;volatile
 32397                           
 32398                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32399  01951C  52E5               	movf	postdec1,f,c
 32400  01951E  52E5               	movf	postdec1,f,c
 32401  019520  0012               	return		;funcret
 32402  019522                     __end_of_switch_handler:
 32403                           	opt callstack 0
 32404                           
 32405 ;; *************** function _TMR5_ISR *****************
 32406 ;; Defined at:
 32407 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 32408 ;; Parameters:    Size  Location     Type
 32409 ;;		None
 32410 ;; Auto vars:     Size  Location     Type
 32411 ;;		None
 32412 ;; Return value:  Size  Location     Type
 32413 ;;                  1    wreg      void 
 32414 ;; Registers used:
 32415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32416 ;; Tracked objects:
 32417 ;;		On entry : 0/0
 32418 ;;		On exit  : 3F/0
 32419 ;;		Unchanged: 0/0
 32420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32423 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32424 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32425 ;;Total ram usage:       15 bytes
 32426 ;; Hardware stack levels used:    1
 32427 ;; Hardware stack levels required when called:    9
 32428 ;; This function calls:
 32429 ;;		_TMR5_CallBack
 32430 ;;		_TMR5_WriteTimer
 32431 ;; This function is called by:
 32432 ;;		Interrupt level 1
 32433 ;; This function uses a non-reentrant model
 32434 ;;
 32435                           
 32436                           	psect	text142
 32437  01A1D8                     __ptext142:
 32438                           	opt callstack 0
 32439  01A1D8                     _TMR5_ISR:
 32440                           	opt callstack 7
 32441                           
 32442                           ;incstack = 0
 32443  01A1D8  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32444  01A1DE  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32445  01A1E4  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32446  01A1EA  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32447  01A1F0  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32448  01A1F6  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32449  01A1FC  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32450  01A202  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32451  01A208  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32452  01A20E  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32453  01A214  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32454  01A21A  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32455  01A220  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32456  01A226  EE16  F0AF         	lfsr	1,___intlo_sp
 32457                           
 32458                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32459  01A22A  0139               	movlb	57	; () banked
 32460  01A22C  9DA8               	bcf	168,6,b	;volatile
 32461                           
 32462                           ; BSR set to: 57
 32463                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32464  01A22E  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 32465  01A234  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32466  01A23A  ECCD  F0DB         	call	_TMR5_WriteTimer	;wreg free
 32467                           
 32468                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32469  01A23E  0101               	movlb	1	; () banked
 32470  01A240  51DA               	movf	(_V+170)& (0+255),w,b	;volatile
 32471  01A242  6E2B               	movwf	??_TMR5_ISR^0,c
 32472  01A244  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32473  01A246  0E05               	movlw	5
 32474  01A248  262B               	addwf	??_TMR5_ISR^0,f,c
 32475  01A24A  0E00               	movlw	0
 32476  01A24C  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32477  01A24E  0100               	movlb	0	; () banked
 32478  01A250  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32479  01A252  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32480  01A254  502B               	movf	??_TMR5_ISR^0,w,c
 32481  01A256  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32482  01A258  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32483  01A25A  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32484  01A25C  A0D8               	btfss	status,0,c
 32485  01A25E  D005               	goto	i1l1019
 32486                           
 32487                           ; BSR set to: 0
 32488                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32489  01A260  EC02  F0DF         	call	_TMR5_CallBack	;wreg free
 32490                           
 32491                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32492  01A264  0100               	movlb	0	; () banked
 32493  01A266  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32494  01A268  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32495  01A26A                     i1l1019:
 32496                           
 32497                           ; BSR set to: 0
 32498  01A26A  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32499  01A270  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32500  01A276  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32501  01A27C  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32502  01A282  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32503  01A288  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32504  01A28E  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32505  01A294  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32506  01A29A  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32507  01A2A0  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32508  01A2A6  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32509  01A2AC  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32510  01A2B2  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32511  01A2B8  0011               	retfie		f
 32512  01A2BA                     __end_of_TMR5_ISR:
 32513                           	opt callstack 0
 32514                           
 32515 ;; *************** function _TMR5_WriteTimer *****************
 32516 ;; Defined at:
 32517 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32518 ;; Parameters:    Size  Location     Type
 32519 ;;  timerVal        2  [STACK] unsigned short 
 32520 ;; Auto vars:     Size  Location     Type
 32521 ;;		None
 32522 ;; Return value:  Size  Location     Type
 32523 ;;                  1  [STACK] void 
 32524 ;; Registers used:
 32525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32526 ;; Tracked objects:
 32527 ;;		On entry : 3F/39
 32528 ;;		On exit  : 0/0
 32529 ;;		Unchanged: 0/0
 32530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32535 ;;Total ram usage:        0 bytes
 32536 ;; Hardware stack levels used:    1
 32537 ;; Hardware stack levels required when called:    3
 32538 ;; This function calls:
 32539 ;;		Nothing
 32540 ;; This function is called by:
 32541 ;;		_TMR5_ISR
 32542 ;; This function uses a reentrant model
 32543 ;;
 32544                           
 32545                           	psect	text143
 32546  01B79A                     __ptext143:
 32547                           	opt callstack 0
 32548  01B79A                     _TMR5_WriteTimer:
 32549                           	opt callstack 12
 32550                           
 32551                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32552                           
 32553                           ; BSR set to: 0
 32554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32555                           ;incstack = 0
 32556  01B79A  A49A               	btfss	154,2,c	;volatile
 32557  01B79C  D00F               	goto	l10760
 32558                           
 32559                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32560  01B79E  909A               	bcf	154,0,c	;volatile
 32561                           
 32562                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32563                           ;stkvar	_timerVal @ sp[(0)+-2]
 32564  01B7A0  0EFF               	movlw	255
 32565  01B7A2  24E1               	addwf	fsr1l,w,c
 32566  01B7A4  6ED9               	movwf	fsr2l,c
 32567  01B7A6  0EFF               	movlw	255
 32568  01B7A8  20E2               	addwfc	fsr1h,w,c
 32569  01B7AA  6EDA               	movwf	fsr2h,c
 32570  01B7AC  50DF               	movf	indf2,w,c
 32571  01B7AE  6E99               	movwf	153,c	;volatile
 32572                           
 32573                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32574                           ;stkvar	_timerVal @ sp[(0)+-2]
 32575  01B7B0  0EFE               	movlw	-2
 32576  01B7B2  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32577                           
 32578                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32579  01B7B8  809A               	bsf	154,0,c	;volatile
 32580                           
 32581                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32582  01B7BA  D00C               	goto	l1002
 32583  01B7BC                     l10760:
 32584                           
 32585                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32586                           ;stkvar	_timerVal @ sp[(0)+-2]
 32587  01B7BC  0EFF               	movlw	255
 32588  01B7BE  24E1               	addwf	fsr1l,w,c
 32589  01B7C0  6ED9               	movwf	fsr2l,c
 32590  01B7C2  0EFF               	movlw	255
 32591  01B7C4  20E2               	addwfc	fsr1h,w,c
 32592  01B7C6  6EDA               	movwf	fsr2h,c
 32593  01B7C8  50DF               	movf	indf2,w,c
 32594  01B7CA  6E99               	movwf	153,c	;volatile
 32595                           
 32596                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32597                           ;stkvar	_timerVal @ sp[(0)+-2]
 32598  01B7CC  0EFE               	movlw	-2
 32599  01B7CE  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32600  01B7D4                     l1002:
 32601                           
 32602                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32603  01B7D4  52E5               	movf	postdec1,f,c
 32604  01B7D6  52E5               	movf	postdec1,f,c
 32605  01B7D8  0012               	return		;funcret
 32606  01B7DA                     __end_of_TMR5_WriteTimer:
 32607                           	opt callstack 0
 32608                           
 32609 ;; *************** function _TMR5_CallBack *****************
 32610 ;; Defined at:
 32611 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32612 ;; Parameters:    Size  Location     Type
 32613 ;;		None
 32614 ;; Auto vars:     Size  Location     Type
 32615 ;;		None
 32616 ;; Return value:  Size  Location     Type
 32617 ;;                  1  [STACK] void 
 32618 ;; Registers used:
 32619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32620 ;; Tracked objects:
 32621 ;;		On entry : 3F/0
 32622 ;;		On exit  : 0/0
 32623 ;;		Unchanged: 0/0
 32624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32629 ;;Total ram usage:        0 bytes
 32630 ;; Hardware stack levels used:    1
 32631 ;; Hardware stack levels required when called:    8
 32632 ;; This function calls:
 32633 ;;		Absolute function
 32634 ;;		_TMR5_DefaultInterruptHandler
 32635 ;; This function is called by:
 32636 ;;		_TMR5_ISR
 32637 ;; This function uses a reentrant model
 32638 ;;
 32639                           
 32640                           	psect	text144
 32641  01BE04                     __ptext144:
 32642                           	opt callstack 0
 32643  01BE04                     _TMR5_CallBack:
 32644                           	opt callstack 7
 32645                           
 32646                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32647                           
 32648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32649                           ;incstack = 0
 32650  01BE04  0100               	movlb	0	; () banked
 32651  01BE06  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32652  01BE08  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32653  01BE0A  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32654  01BE0C  B4D8               	btfsc	status,2,c
 32655  01BE0E  0012               	return	
 32656                           
 32657                           ; BSR set to: 0
 32658                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32659  01BE10  D801               	call	u1008_28
 32660  01BE12  0012               	return	
 32661  01BE14                     u1008_28:
 32662  01BE14  0005               	push	
 32663  01BE16  6EFA               	movwf	pclath,c
 32664  01BE18  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32665  01BE1A  6EFD               	movwf	tosl,c
 32666  01BE1C  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32667  01BE1E  6EFE               	movwf	tosh,c
 32668  01BE20  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32669  01BE22  6EFF               	movwf	tosu,c
 32670  01BE24  50FA               	movf	pclath,w,c
 32671  01BE26  0012               	return		;indir
 32672  01BE28                     __end_of_TMR5_CallBack:
 32673                           	opt callstack 0
 32674                           
 32675 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32676 ;; Defined at:
 32677 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32678 ;; Parameters:    Size  Location     Type
 32679 ;;		None
 32680 ;; Auto vars:     Size  Location     Type
 32681 ;;		None
 32682 ;; Return value:  Size  Location     Type
 32683 ;;                  1  [STACK] void 
 32684 ;; Registers used:
 32685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32686 ;; Tracked objects:
 32687 ;;		On entry : 3F/0
 32688 ;;		On exit  : 0/0
 32689 ;;		Unchanged: 0/0
 32690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32695 ;;Total ram usage:        0 bytes
 32696 ;; Hardware stack levels used:    1
 32697 ;; Hardware stack levels required when called:    7
 32698 ;; This function calls:
 32699 ;;		_check_day_time
 32700 ;; This function is called by:
 32701 ;;		_TMR5_Initialize
 32702 ;;		_TMR5_CallBack
 32703 ;; This function uses a reentrant model
 32704 ;;
 32705                           
 32706                           	psect	text145
 32707  01B8CC                     __ptext145:
 32708                           	opt callstack 0
 32709  01B8CC                     _TMR5_DefaultInterruptHandler:
 32710                           	opt callstack 7
 32711                           
 32712                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32713                           
 32714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32715                           ;incstack = 0
 32716  01B8CC  A0BE               	btfss	190,0,c	;volatile
 32717  01B8CE  D002               	goto	u949_20
 32718  01B8D0  0E01               	movlw	1
 32719  01B8D2  D001               	goto	u949_26
 32720  01B8D4                     u949_20:
 32721  01B8D4  0E00               	movlw	0
 32722  01B8D6                     u949_26:
 32723  01B8D6  0AFF               	xorlw	255
 32724  01B8D8  6E0C               	movwf	(btemp+11)^0,c
 32725  01B8DA  50BE               	movf	190,w,c	;volatile
 32726  01B8DC  180C               	xorwf	(btemp+11)^0,w,c
 32727  01B8DE  0BFE               	andlw	-2
 32728  01B8E0  180C               	xorwf	(btemp+11)^0,w,c
 32729  01B8E2  6EBE               	movwf	190,c	;volatile
 32730                           
 32731                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32732  01B8E4  0E01               	movlw	1
 32733  01B8E6  0101               	movlb	1	; () banked
 32734  01B8E8  27EB               	addwf	(_V+187)& (0+255),f,b	;volatile
 32735  01B8EA  0E00               	movlw	0
 32736  01B8EC  23EC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32737  01B8EE  23ED               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32738  01B8F0  23EE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32739                           
 32740                           ; BSR set to: 1
 32741                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32742  01B8F2  0E01               	movlw	1
 32743  01B8F4  27B1               	addwf	(_V+129)& (0+255),f,b	;volatile
 32744  01B8F6  0E00               	movlw	0
 32745  01B8F8  23B2               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32746  01B8FA  23B3               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32747  01B8FC  23B4               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32748                           
 32749                           ; BSR set to: 1
 32750                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32751  01B8FE  EC0F  F0C4         	call	_check_day_time	;wreg free
 32752                           
 32753                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32754  01B902  0012               	return		;funcret
 32755  01B904                     __end_of_TMR5_DefaultInterruptHandler:
 32756                           	opt callstack 0
 32757                           
 32758 ;; *************** function _check_day_time *****************
 32759 ;; Defined at:
 32760 ;;		line 165 in file "mbmc.c"
 32761 ;; Parameters:    Size  Location     Type
 32762 ;;		None
 32763 ;; Auto vars:     Size  Location     Type
 32764 ;;  light           4  [STACK] float 
 32765 ;; Return value:  Size  Location     Type
 32766 ;;                  1  [STACK] _Bool 
 32767 ;; Registers used:
 32768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32769 ;; Tracked objects:
 32770 ;;		On entry : 3F/1
 32771 ;;		On exit  : 0/0
 32772 ;;		Unchanged: 0/0
 32773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32778 ;;Total ram usage:        0 bytes
 32779 ;; Hardware stack levels used:    1
 32780 ;; Hardware stack levels required when called:    6
 32781 ;; This function calls:
 32782 ;;		___flge
 32783 ;;		_conv_raw_result
 32784 ;;		_get_ac_charger_relay
 32785 ;;		_set_ac_charger_relay
 32786 ;; This function is called by:
 32787 ;;		_TMR5_DefaultInterruptHandler
 32788 ;; This function uses a reentrant model
 32789 ;;
 32790                           
 32791                           	psect	text146
 32792  01881E                     __ptext146:
 32793                           	opt callstack 0
 32794  01881E                     _check_day_time:
 32795                           	opt callstack 0
 32796                           
 32797                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32798  01881E  52E6               	movf	postinc1,f,c
 32799  018820  52E6               	movf	postinc1,f,c
 32800  018822  52E6               	movf	postinc1,f,c
 32801  018824  52E6               	movf	postinc1,f,c
 32802                           
 32803                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 32804                           
 32805                           ;incstack = 0
 32806  018826  0E00               	movlw	0
 32807  018828  6EE6               	movwf	postinc1,c
 32808  01882A  0E0D               	movlw	13
 32809  01882C  6EE6               	movwf	postinc1,c
 32810  01882E  EC63  F0A9         	call	_conv_raw_result	;wreg free
 32811                           
 32812                           ;stkvar	_light @ sp[(-4)+0]
 32813  018832  0EFC               	movlw	-4
 32814  018834  0060  F007  FFE3   	movff	btemp,plusw1
 32815  01883A  0EFD               	movlw	-3
 32816  01883C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32817  018842  0EFE               	movlw	-2
 32818  018844  0060  F00F  FFE3   	movff	btemp+2,plusw1
 32819  01884A  0EFF               	movlw	-1
 32820  01884C  0060  F013  FFE3   	movff	btemp+3,plusw1
 32821                           
 32822                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 32823  018852  2A42               	incf	check_day_time@day_delay^0,f,c
 32824  018854  0442               	decf	check_day_time@day_delay^0,w,c
 32825  018856  A4D8               	btfss	status,2,c
 32826  018858  D0A9               	goto	l1896
 32827  01885A  0101               	movlb	1	; () banked
 32828  01885C  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 32829  01885E  B4D8               	btfsc	status,2,c
 32830  018860  D0A5               	goto	l1896
 32831                           
 32832                           ; BSR set to: 1
 32833                           ;mbmc.c: 173:   if (C.soc > 15) {
 32834  018862  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32835  018866  0E01               	movlw	1
 32836  018868  50DB               	movf	plusw2,w,c
 32837  01886A  E104               	bnz	u928_20
 32838  01886C  0E10               	movlw	16
 32839  01886E  5CDE               	subwf	postinc2,w,c
 32840  018870  A0D8               	btfss	status,0,c
 32841  018872  D073               	goto	l9846
 32842  018874                     u928_20:
 32843                           
 32844                           ; BSR set to: 1
 32845                           ;mbmc.c: 174:    if (!C.day) {
 32846  018874  EE22  F021         	lfsr	2,_C+290	;volatile
 32847  018878  50DF               	movf	indf2,w,c
 32848  01887A  A4D8               	btfss	status,2,c
 32849  01887C  D035               	goto	l9834
 32850                           
 32851                           ; BSR set to: 1
 32852                           ;mbmc.c: 175:     if (light > 22.0) {
 32853                           ;stkvar	_light @ sp[(-4)+0]
 32854  01887E  0EFC               	movlw	-4
 32855  018880  006F FF8F FFE6     	movff	plusw1,postinc1
 32856  018886  006F FF8F FFE6     	movff	plusw1,postinc1
 32857  01888C  006F FF8F FFE6     	movff	plusw1,postinc1
 32858  018892  006F FF8F FFE6     	movff	plusw1,postinc1
 32859  018898  0E00               	movlw	0
 32860  01889A  6EE6               	movwf	postinc1,c
 32861  01889C  0E00               	movlw	0
 32862  01889E  6EE6               	movwf	postinc1,c
 32863  0188A0  0EB0               	movlw	176
 32864  0188A2  6EE6               	movwf	postinc1,c
 32865  0188A4  0E41               	movlw	65
 32866  0188A6  6EE6               	movwf	postinc1,c
 32867  0188A8  ECE6  F0C7         	call	___flge	;wreg free
 32868  0188AC  B001               	btfsc	btemp& (0+255),0,c
 32869  0188AE  D07E               	goto	l1896
 32870                           
 32871                           ;mbmc.c: 176:      C.day = 1;
 32872  0188B0  0E01               	movlw	1
 32873  0188B2  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32874                           
 32875                           ;mbmc.c: 177:      C.day_start = V.ticks;
 32876  0188B8  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32877  0188BC  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32878  0188C2  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32879  0188C8  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32880  0188CE  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32881                           
 32882                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 32883  0188D4  EC80  F0E0         	call	_get_ac_charger_relay	;wreg free
 32884  0188D8  5001               	movf	btemp^0,w,c
 32885  0188DA  B4D8               	btfsc	status,2,c
 32886  0188DC  D06B               	goto	l1892
 32887                           
 32888                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 32889  0188DE  0E00               	movlw	0
 32890  0188E0  6EE6               	movwf	postinc1,c
 32891  0188E2  EC63  F0E0         	call	_set_ac_charger_relay	;wreg free
 32892  0188E6  D066               	goto	l1892
 32893  0188E8                     l9834:
 32894                           
 32895                           ; BSR set to: 1
 32896                           ;mbmc.c: 184:     if (light < 12.0) {
 32897  0188E8  0E00               	movlw	0
 32898  0188EA  6EE6               	movwf	postinc1,c
 32899  0188EC  0E00               	movlw	0
 32900  0188EE  6EE6               	movwf	postinc1,c
 32901  0188F0  0E40               	movlw	64
 32902  0188F2  6EE6               	movwf	postinc1,c
 32903  0188F4  0E41               	movlw	65
 32904  0188F6  6EE6               	movwf	postinc1,c
 32905                           
 32906                           ;stkvar	_light @ sp[(-8)+0]
 32907  0188F8  0EF8               	movlw	-8
 32908  0188FA  006F FF8F FFE6     	movff	plusw1,postinc1
 32909  018900  006F FF8F FFE6     	movff	plusw1,postinc1
 32910  018906  006F FF8F FFE6     	movff	plusw1,postinc1
 32911  01890C  006F FF8F FFE6     	movff	plusw1,postinc1
 32912  018912  ECE6  F0C7         	call	___flge	;wreg free
 32913  018916  B001               	btfsc	btemp& (0+255),0,c
 32914  018918  D049               	goto	l1896
 32915                           
 32916                           ;mbmc.c: 185:      C.day = 0;
 32917  01891A  0E00               	movlw	0
 32918  01891C  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32919                           
 32920                           ;mbmc.c: 186:      C.day_end = V.ticks;
 32921  018922  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32922  018926  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 32923  01892C  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 32924  018932  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 32925  018938  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 32926                           
 32927                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 32928  01893E  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32929  018942  0E01               	movlw	1
 32930  018944  50DB               	movf	plusw2,w,c
 32931  018946  E136               	bnz	l1892
 32932  018948  0E28               	movlw	40
 32933  01894A  5CDE               	subwf	postinc2,w,c
 32934  01894C  B0D8               	btfsc	status,0,c
 32935  01894E  D032               	goto	l1892
 32936                           
 32937                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 32938  018950  0E01               	movlw	1
 32939  018952  6EE6               	movwf	postinc1,c
 32940  018954  EC63  F0E0         	call	_set_ac_charger_relay	;wreg free
 32941  018958  D02D               	goto	l1892
 32942  01895A                     l9846:
 32943                           
 32944                           ; BSR set to: 1
 32945                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 32946  01895A  EE21  F377         	lfsr	2,_C+120	;volatile
 32947  01895E  006F FF7B FFE6     	movff	postinc2,postinc1
 32948  018964  006F FF7B FFE6     	movff	postinc2,postinc1
 32949  01896A  006F FF7B FFE6     	movff	postinc2,postinc1
 32950  018970  006F FF7B FFE6     	movff	postinc2,postinc1
 32951  018976  EE21  F37B         	lfsr	2,_C+124	;volatile
 32952  01897A  006F FF7B FFE6     	movff	postinc2,postinc1
 32953  018980  006F FF7B FFE6     	movff	postinc2,postinc1
 32954  018986  006F FF7B FFE6     	movff	postinc2,postinc1
 32955  01898C  006F FF7B FFE6     	movff	postinc2,postinc1
 32956  018992  ECE6  F0C7         	call	___flge	;wreg free
 32957  018996  B001               	btfsc	btemp& (0+255),0,c
 32958  018998  D009               	goto	l1896
 32959                           
 32960                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 32961  01899A  EC80  F0E0         	call	_get_ac_charger_relay	;wreg free
 32962  01899E  5001               	movf	btemp^0,w,c
 32963  0189A0  A4D8               	btfss	status,2,c
 32964  0189A2  D004               	goto	l1896
 32965                           
 32966                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 32967  0189A4  0E01               	movlw	1
 32968  0189A6  6EE6               	movwf	postinc1,c
 32969  0189A8  EC63  F0E0         	call	_set_ac_charger_relay	;wreg free
 32970  0189AC                     l1896:
 32971                           
 32972                           ;mbmc.c: 204:  if (day_delay >= 240)
 32973  0189AC  0EEF               	movlw	239
 32974  0189AE  6442               	cpfsgt	check_day_time@day_delay^0,c
 32975  0189B0  D001               	goto	l1892
 32976                           
 32977                           ;mbmc.c: 205:   day_delay = 0;
 32978  0189B2  6A42               	clrf	check_day_time@day_delay^0,c
 32979  0189B4                     l1892:
 32980                           
 32981                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32982  0189B4  52E5               	movf	postdec1,f,c
 32983  0189B6  52E5               	movf	postdec1,f,c
 32984  0189B8  52E5               	movf	postdec1,f,c
 32985  0189BA  52E5               	movf	postdec1,f,c
 32986  0189BC  0012               	return		;funcret
 32987  0189BE                     __end_of_check_day_time:
 32988                           	opt callstack 0
 32989                           
 32990 ;; *************** function _set_ac_charger_relay *****************
 32991 ;; Defined at:
 32992 ;;		line 135 in file "mbmc.c"
 32993 ;; Parameters:    Size  Location     Type
 32994 ;;  mode            1  [STACK] _Bool 
 32995 ;; Auto vars:     Size  Location     Type
 32996 ;;		None
 32997 ;; Return value:  Size  Location     Type
 32998 ;;                  1  [STACK] void 
 32999 ;; Registers used:
 33000 ;;		wreg, fsr1l, fsr1h
 33001 ;; Tracked objects:
 33002 ;;		On entry : 0/1
 33003 ;;		On exit  : 0/0
 33004 ;;		Unchanged: 0/0
 33005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33010 ;;Total ram usage:        0 bytes
 33011 ;; Hardware stack levels used:    1
 33012 ;; Hardware stack levels required when called:    3
 33013 ;; This function calls:
 33014 ;;		Nothing
 33015 ;; This function is called by:
 33016 ;;		_check_day_time
 33017 ;; This function uses a reentrant model
 33018 ;;
 33019                           
 33020                           	psect	text147
 33021  01C0C6                     __ptext147:
 33022                           	opt callstack 0
 33023  01C0C6                     _set_ac_charger_relay:
 33024                           	opt callstack 9
 33025                           
 33026                           ;mbmc.c: 135: void set_ac_charger_relay(_Bool mode);mbmc.c: 136: {;mbmc.c: 137:  LATDbit
      +                          s.LATD6 = mode;
 33027                           ;stkvar	_mode @ sp[(0)+-1]
 33028                           
 33029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33030                           ;incstack = 0
 33031  01C0C6  0EFF               	movlw	-1
 33032  01C0C8  B0E3               	btfsc	plusw1,0,c
 33033  01C0CA  D002               	bra	u923_25
 33034  01C0CC  9CBD               	bcf	189,6,c	;volatile
 33035  01C0CE  D001               	bra	u923_26
 33036  01C0D0                     u923_25:
 33037  01C0D0  8CBD               	bsf	189,6,c	;volatile
 33038  01C0D2                     u923_26:
 33039                           
 33040                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33041  01C0D2  52E5               	movf	postdec1,f,c
 33042  01C0D4  0012               	return		;funcret
 33043  01C0D6                     __end_of_set_ac_charger_relay:
 33044                           	opt callstack 0
 33045                           
 33046 ;; *************** function _get_ac_charger_relay *****************
 33047 ;; Defined at:
 33048 ;;		line 140 in file "mbmc.c"
 33049 ;; Parameters:    Size  Location     Type
 33050 ;;		None
 33051 ;; Auto vars:     Size  Location     Type
 33052 ;;		None
 33053 ;; Return value:  Size  Location     Type
 33054 ;;                  1  [STACK] _Bool 
 33055 ;; Registers used:
 33056 ;;		btemp
 33057 ;; Tracked objects:
 33058 ;;		On entry : 0/1
 33059 ;;		On exit  : 0/0
 33060 ;;		Unchanged: 0/0
 33061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33066 ;;Total ram usage:        0 bytes
 33067 ;; Hardware stack levels used:    1
 33068 ;; Hardware stack levels required when called:    3
 33069 ;; This function calls:
 33070 ;;		Nothing
 33071 ;; This function is called by:
 33072 ;;		_check_day_time
 33073 ;;		_calc_bsoc
 33074 ;; This function uses a reentrant model
 33075 ;;
 33076                           
 33077                           	psect	text148
 33078  01C100                     __ptext148:
 33079                           	opt callstack 0
 33080  01C100                     _get_ac_charger_relay:
 33081                           	opt callstack 10
 33082                           
 33083                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33084                           
 33085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33086                           ;incstack = 0
 33087  01C100  ACBD               	btfss	189,6,c	;volatile
 33088  01C102  D003               	goto	u942_20
 33089  01C104  6A01               	clrf	btemp^0,c
 33090  01C106  2A01               	incf	btemp^0,f,c
 33091  01C108  0012               	return	
 33092  01C10A                     u942_20:
 33093  01C10A  6A01               	clrf	btemp^0,c
 33094                           
 33095                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33096  01C10C  0012               	return		;funcret
 33097  01C10E                     __end_of_get_ac_charger_relay:
 33098                           	opt callstack 0
 33099                           
 33100 ;; *************** function _TMR3_ISR *****************
 33101 ;; Defined at:
 33102 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33103 ;; Parameters:    Size  Location     Type
 33104 ;;		None
 33105 ;; Auto vars:     Size  Location     Type
 33106 ;;		None
 33107 ;; Return value:  Size  Location     Type
 33108 ;;                  1    wreg      void 
 33109 ;; Registers used:
 33110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33111 ;; Tracked objects:
 33112 ;;		On entry : 0/0
 33113 ;;		On exit  : 3F/0
 33114 ;;		Unchanged: 0/0
 33115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33118 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33119 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33120 ;;Total ram usage:       25 bytes
 33121 ;; Hardware stack levels used:    1
 33122 ;; Hardware stack levels required when called:   14
 33123 ;; This function calls:
 33124 ;;		_TMR3_CallBack
 33125 ;;		_TMR3_WriteTimer
 33126 ;; This function is called by:
 33127 ;;		Interrupt level 1
 33128 ;; This function uses a non-reentrant model
 33129 ;;
 33130                           
 33131                           	psect	text149
 33132  019130                     __ptext149:
 33133                           	opt callstack 0
 33134  019130                     _TMR3_ISR:
 33135                           	opt callstack 2
 33136                           
 33137                           ;incstack = 0
 33138  019130  006F FF60  F0D7    	movff	status,??_TMR3_ISR
 33139  019136  006F FFD8  F0D8    	movff	tblptrl,??_TMR3_ISR+1
 33140  01913C  006F FFDC  F0D9    	movff	tblptrh,??_TMR3_ISR+2
 33141  019142  006F FFE0  F0DA    	movff	tblptru,??_TMR3_ISR+3
 33142  019148  006F FFD4  F0DB    	movff	tablat,??_TMR3_ISR+4
 33143  01914E  0060  F004  F0DC   	movff	btemp,??_TMR3_ISR+5
 33144  019154  0060  F008  F0DD   	movff	btemp+1,??_TMR3_ISR+6
 33145  01915A  0060  F00C  F0DE   	movff	btemp+2,??_TMR3_ISR+7
 33146  019160  0060  F010  F0DF   	movff	btemp+3,??_TMR3_ISR+8
 33147  019166  0060  F014  F0E0   	movff	btemp+4,??_TMR3_ISR+9
 33148  01916C  0060  F018  F0E1   	movff	btemp+5,??_TMR3_ISR+10
 33149  019172  0060  F01C  F0E2   	movff	btemp+6,??_TMR3_ISR+11
 33150  019178  0060  F020  F0E3   	movff	btemp+7,??_TMR3_ISR+12
 33151  01917E  0060  F024  F0E4   	movff	btemp+8,??_TMR3_ISR+13
 33152  019184  0060  F028  F0E5   	movff	btemp+9,??_TMR3_ISR+14
 33153  01918A  0060  F02C  F0E6   	movff	btemp+10,??_TMR3_ISR+15
 33154  019190  0060  F030  F0E7   	movff	btemp+11,??_TMR3_ISR+16
 33155  019196  0060  F044  F0E8   	movff	btemp+16,??_TMR3_ISR+17
 33156  01919C  0060  F048  F0E9   	movff	btemp+17,??_TMR3_ISR+18
 33157  0191A2  0060  F04C  F0EA   	movff	btemp+18,??_TMR3_ISR+19
 33158  0191A8  0060  F050  F0EB   	movff	btemp+19,??_TMR3_ISR+20
 33159  0191AE  0060  F054  F0EC   	movff	btemp+20,??_TMR3_ISR+21
 33160  0191B4  0060  F058  F0ED   	movff	btemp+21,??_TMR3_ISR+22
 33161  0191BA  0060  F05C  F0EE   	movff	btemp+22,??_TMR3_ISR+23
 33162  0191C0  0060  F060  F0EF   	movff	btemp+23,??_TMR3_ISR+24
 33163  0191C6  EE16  F0AF         	lfsr	1,___intlo_sp
 33164                           
 33165                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33166  0191CA  0139               	movlb	57	; () banked
 33167  0191CC  9DA6               	bcf	166,6,b	;volatile
 33168                           
 33169                           ; BSR set to: 57
 33170                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33171  0191CE  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 33172  0191D4  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33173  0191DA  ECED  F0DB         	call	_TMR3_WriteTimer	;wreg free
 33174                           
 33175                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33176  0191DE  0100               	movlb	0	; () banked
 33177  0191E0  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33178  0191E2  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33179  0191E4  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33180  0191E6  E104               	bnz	i1u1256_20
 33181  0191E8  0E28               	movlw	40
 33182  0191EA  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33183  0191EC  A0D8               	btfss	status,0,c
 33184  0191EE  D005               	goto	i1l1207
 33185  0191F0                     i1u1256_20:
 33186                           
 33187                           ; BSR set to: 0
 33188                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33189  0191F0  EC14  F0DF         	call	_TMR3_CallBack	;wreg free
 33190                           
 33191                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33192  0191F4  0100               	movlb	0	; () banked
 33193  0191F6  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33194  0191F8  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33195  0191FA                     i1l1207:
 33196                           
 33197                           ; BSR set to: 0
 33198  0191FA  0060  F3BC  F018   	movff	??_TMR3_ISR+24,btemp+23
 33199  019200  0060  F3B8  F017   	movff	??_TMR3_ISR+23,btemp+22
 33200  019206  0060  F3B4  F016   	movff	??_TMR3_ISR+22,btemp+21
 33201  01920C  0060  F3B0  F015   	movff	??_TMR3_ISR+21,btemp+20
 33202  019212  0060  F3AC  F014   	movff	??_TMR3_ISR+20,btemp+19
 33203  019218  0060  F3A8  F013   	movff	??_TMR3_ISR+19,btemp+18
 33204  01921E  0060  F3A4  F012   	movff	??_TMR3_ISR+18,btemp+17
 33205  019224  0060  F3A0  F011   	movff	??_TMR3_ISR+17,btemp+16
 33206  01922A  0060  F39C  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33207  019230  0060  F398  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33208  019236  0060  F394  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33209  01923C  0060  F390  F009   	movff	??_TMR3_ISR+13,btemp+8
 33210  019242  0060  F38C  F008   	movff	??_TMR3_ISR+12,btemp+7
 33211  019248  0060  F388  F007   	movff	??_TMR3_ISR+11,btemp+6
 33212  01924E  0060  F384  F006   	movff	??_TMR3_ISR+10,btemp+5
 33213  019254  0060  F380  F005   	movff	??_TMR3_ISR+9,btemp+4
 33214  01925A  0060  F37C  F004   	movff	??_TMR3_ISR+8,btemp+3
 33215  019260  0060  F378  F003   	movff	??_TMR3_ISR+7,btemp+2
 33216  019266  0060  F374  F002   	movff	??_TMR3_ISR+6,btemp+1
 33217  01926C  0060  F370  F001   	movff	??_TMR3_ISR+5,btemp
 33218  019272  0060  F36F  FFF5   	movff	??_TMR3_ISR+4,tablat
 33219  019278  0060  F36B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33220  01927E  0060  F367  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33221  019284  0060  F363  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33222  01928A  0060  F35F  FFD8   	movff	??_TMR3_ISR,status
 33223  019290  0011               	retfie		f
 33224  019292                     __end_of_TMR3_ISR:
 33225                           	opt callstack 0
 33226                           
 33227 ;; *************** function _TMR3_WriteTimer *****************
 33228 ;; Defined at:
 33229 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33230 ;; Parameters:    Size  Location     Type
 33231 ;;  timerVal        2  [STACK] unsigned short 
 33232 ;; Auto vars:     Size  Location     Type
 33233 ;;		None
 33234 ;; Return value:  Size  Location     Type
 33235 ;;                  1  [STACK] void 
 33236 ;; Registers used:
 33237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33238 ;; Tracked objects:
 33239 ;;		On entry : 3F/39
 33240 ;;		On exit  : 0/0
 33241 ;;		Unchanged: 0/0
 33242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33247 ;;Total ram usage:        0 bytes
 33248 ;; Hardware stack levels used:    1
 33249 ;; Hardware stack levels required when called:    3
 33250 ;; This function calls:
 33251 ;;		Nothing
 33252 ;; This function is called by:
 33253 ;;		_TMR3_ISR
 33254 ;; This function uses a reentrant model
 33255 ;;
 33256                           
 33257                           	psect	text150
 33258  01B7DA                     __ptext150:
 33259                           	opt callstack 0
 33260  01B7DA                     _TMR3_WriteTimer:
 33261                           	opt callstack 12
 33262                           
 33263                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 33264                           
 33265                           ; BSR set to: 0
 33266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33267                           ;incstack = 0
 33268  01B7DA  A4A6               	btfss	166,2,c	;volatile
 33269  01B7DC  D00F               	goto	l10778
 33270                           
 33271                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 33272  01B7DE  90A6               	bcf	166,0,c	;volatile
 33273                           
 33274                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 33275                           ;stkvar	_timerVal @ sp[(0)+-2]
 33276  01B7E0  0EFF               	movlw	255
 33277  01B7E2  24E1               	addwf	fsr1l,w,c
 33278  01B7E4  6ED9               	movwf	fsr2l,c
 33279  01B7E6  0EFF               	movlw	255
 33280  01B7E8  20E2               	addwfc	fsr1h,w,c
 33281  01B7EA  6EDA               	movwf	fsr2h,c
 33282  01B7EC  50DF               	movf	indf2,w,c
 33283  01B7EE  6EA5               	movwf	165,c	;volatile
 33284                           
 33285                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 33286                           ;stkvar	_timerVal @ sp[(0)+-2]
 33287  01B7F0  0EFE               	movlw	-2
 33288  01B7F2  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33289                           
 33290                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 33291  01B7F8  80A6               	bsf	166,0,c	;volatile
 33292                           
 33293                           ;mcc_generated_files/tmr3.c: 141:     }
 33294  01B7FA  D00C               	goto	l1190
 33295  01B7FC                     l10778:
 33296                           
 33297                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 33298                           ;stkvar	_timerVal @ sp[(0)+-2]
 33299  01B7FC  0EFF               	movlw	255
 33300  01B7FE  24E1               	addwf	fsr1l,w,c
 33301  01B800  6ED9               	movwf	fsr2l,c
 33302  01B802  0EFF               	movlw	255
 33303  01B804  20E2               	addwfc	fsr1h,w,c
 33304  01B806  6EDA               	movwf	fsr2h,c
 33305  01B808  50DF               	movf	indf2,w,c
 33306  01B80A  6EA5               	movwf	165,c	;volatile
 33307                           
 33308                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 33309                           ;stkvar	_timerVal @ sp[(0)+-2]
 33310  01B80C  0EFE               	movlw	-2
 33311  01B80E  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33312  01B814                     l1190:
 33313                           
 33314                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33315  01B814  52E5               	movf	postdec1,f,c
 33316  01B816  52E5               	movf	postdec1,f,c
 33317  01B818  0012               	return		;funcret
 33318  01B81A                     __end_of_TMR3_WriteTimer:
 33319                           	opt callstack 0
 33320                           
 33321 ;; *************** function _TMR3_CallBack *****************
 33322 ;; Defined at:
 33323 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 33324 ;; Parameters:    Size  Location     Type
 33325 ;;		None
 33326 ;; Auto vars:     Size  Location     Type
 33327 ;;		None
 33328 ;; Return value:  Size  Location     Type
 33329 ;;                  1  [STACK] void 
 33330 ;; Registers used:
 33331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33332 ;; Tracked objects:
 33333 ;;		On entry : 3F/0
 33334 ;;		On exit  : 0/0
 33335 ;;		Unchanged: 0/0
 33336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33341 ;;Total ram usage:        0 bytes
 33342 ;; Hardware stack levels used:    1
 33343 ;; Hardware stack levels required when called:   13
 33344 ;; This function calls:
 33345 ;;		Absolute function
 33346 ;;		_TMR3_DefaultInterruptHandler
 33347 ;;		_calc_bsoc
 33348 ;; This function is called by:
 33349 ;;		_TMR3_ISR
 33350 ;; This function uses a reentrant model
 33351 ;;
 33352                           
 33353                           	psect	text151
 33354  01BE28                     __ptext151:
 33355                           	opt callstack 0
 33356  01BE28                     _TMR3_CallBack:
 33357                           	opt callstack 2
 33358                           
 33359                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 33360                           
 33361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33362                           ;incstack = 0
 33363  01BE28  0100               	movlb	0	; () banked
 33364  01BE2A  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33365  01BE2C  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33366  01BE2E  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33367  01BE30  B4D8               	btfsc	status,2,c
 33368  01BE32  0012               	return	
 33369                           
 33370                           ; BSR set to: 0
 33371                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 33372  01BE34  D801               	call	u1247_28
 33373  01BE36  0012               	return	
 33374  01BE38                     u1247_28:
 33375  01BE38  0005               	push	
 33376  01BE3A  6EFA               	movwf	pclath,c
 33377  01BE3C  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33378  01BE3E  6EFD               	movwf	tosl,c
 33379  01BE40  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33380  01BE42  6EFE               	movwf	tosh,c
 33381  01BE44  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33382  01BE46  6EFF               	movwf	tosu,c
 33383  01BE48  50FA               	movf	pclath,w,c
 33384  01BE4A  0012               	return		;indir
 33385  01BE4C                     __end_of_TMR3_CallBack:
 33386                           	opt callstack 0
 33387                           
 33388 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 33389 ;; Defined at:
 33390 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 33391 ;; Parameters:    Size  Location     Type
 33392 ;;		None
 33393 ;; Auto vars:     Size  Location     Type
 33394 ;;		None
 33395 ;; Return value:  Size  Location     Type
 33396 ;;                  1  [STACK] void 
 33397 ;; Registers used:
 33398 ;;		None
 33399 ;; Tracked objects:
 33400 ;;		On entry : 3F/0
 33401 ;;		On exit  : 0/0
 33402 ;;		Unchanged: 0/0
 33403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33408 ;;Total ram usage:        0 bytes
 33409 ;; Hardware stack levels used:    1
 33410 ;; Hardware stack levels required when called:    3
 33411 ;; This function calls:
 33412 ;;		Nothing
 33413 ;; This function is called by:
 33414 ;;		_TMR3_Initialize
 33415 ;;		_TMR3_CallBack
 33416 ;; This function uses a reentrant model
 33417 ;;
 33418                           
 33419                           	psect	text152
 33420  01C1B0                     __ptext152:
 33421                           	opt callstack 0
 33422  01C1B0                     _TMR3_DefaultInterruptHandler:
 33423                           	opt callstack 11
 33424                           
 33425                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33426                           
 33427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33428                           ;incstack = 0
 33429  01C1B0  0012               	return		;funcret
 33430  01C1B2                     __end_of_TMR3_DefaultInterruptHandler:
 33431                           	opt callstack 0
 33432                           
 33433 ;; *************** function _calc_bsoc *****************
 33434 ;; Defined at:
 33435 ;;		line 39 in file "bsoc.c"
 33436 ;; Parameters:    Size  Location     Type
 33437 ;;		None
 33438 ;; Auto vars:     Size  Location     Type
 33439 ;;  adj             4  [STACK] float 
 33440 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33441 ;;		 -> port_data(512), 
 33442 ;; Return value:  Size  Location     Type
 33443 ;;                  1  [STACK] void 
 33444 ;; Registers used:
 33445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33446 ;; Tracked objects:
 33447 ;;		On entry : 3F/0
 33448 ;;		On exit  : 5/1
 33449 ;;		Unchanged: 0/0
 33450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33455 ;;Total ram usage:        0 bytes
 33456 ;; Hardware stack levels used:    1
 33457 ;; Hardware stack levels required when called:   12
 33458 ;; This function calls:
 33459 ;;		_StartTimer
 33460 ;;		___asfladd
 33461 ;;		___fldiv
 33462 ;;		___flge
 33463 ;;		___flmul
 33464 ;;		___flneg
 33465 ;;		___fltol
 33466 ;;		_fabsf
 33467 ;;		_get_ac_charger_relay
 33468 ;;		_port_data_dma_ptr
 33469 ;;		_send_port_data_dma
 33470 ;;		_sprintf
 33471 ;;		_strlen
 33472 ;; This function is called by:
 33473 ;;		_init_bsoc
 33474 ;;		_TMR3_CallBack
 33475 ;; This function uses a reentrant model
 33476 ;;
 33477                           
 33478                           	psect	text153
 33479  01334C                     __ptext153:
 33480                           	opt callstack 0
 33481  01334C                     _calc_bsoc:
 33482                           	opt callstack 0
 33483                           
 33484                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33485  01334C  0E06               	movlw	6
 33486  01334E  26E1               	addwf	fsr1l,f,c
 33487  013350  0E00               	movlw	0
 33488  013352  22E2               	addwfc	fsr1h,f,c
 33489                           
 33490                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 33491                           
 33492                           ;incstack = 0
 33493  013354  0E00               	movlw	0
 33494  013356  6E09               	movwf	(btemp+8)^0,c
 33495  013358  0E00               	movlw	0
 33496  01335A  6E0A               	movwf	(btemp+9)^0,c
 33497  01335C  0E80               	movlw	128
 33498  01335E  6E0B               	movwf	(btemp+10)^0,c
 33499  013360  0E3F               	movlw	63
 33500  013362  6E0C               	movwf	(btemp+11)^0,c
 33501                           
 33502                           ;stkvar	_adj @ sp[(-6)+0]
 33503  013364  0EFA               	movlw	-6
 33504  013366  0060  F027  FFE3   	movff	btemp+8,plusw1
 33505  01336C  0EFB               	movlw	-5
 33506  01336E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33507  013374  0EFC               	movlw	-4
 33508  013376  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33509  01337C  0EFD               	movlw	-3
 33510  01337E  0060  F033  FFE3   	movff	btemp+11,plusw1
 33511  013384  82BE               	bsf	190,1,c	;volatile
 33512                           
 33513                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 33514  013386  0E00               	movlw	0
 33515  013388  6EE6               	movwf	postinc1,c
 33516  01338A  0E00               	movlw	0
 33517  01338C  6EE6               	movwf	postinc1,c
 33518  01338E  0E61               	movlw	97
 33519  013390  6EE6               	movwf	postinc1,c
 33520  013392  0E45               	movlw	69
 33521  013394  6EE6               	movwf	postinc1,c
 33522  013396  EE21  F343         	lfsr	2,_C+68	;volatile
 33523  01339A  006F FF7B FFE6     	movff	postinc2,postinc1
 33524  0133A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33525  0133A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33526  0133AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33527  0133B2  ECA6  F0A6         	call	___fldiv	;wreg free
 33528  0133B6  0060  F007  FFE6   	movff	btemp,postinc1
 33529  0133BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33530  0133C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33531  0133C8  0060  F013  FFE6   	movff	btemp+3,postinc1
 33532  0133CE  0E8F               	movlw	low (_C+144)
 33533  0133D0  6EE6               	movwf	postinc1,c
 33534  0133D2  0E07               	movlw	high (_C+144)
 33535  0133D4  6EE6               	movwf	postinc1,c
 33536  0133D6  EC18  F0D7         	call	___asfladd	;wreg free
 33537                           
 33538                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 33539  0133DA  EE21  F38F         	lfsr	2,_C+144	;volatile
 33540  0133DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33541  0133E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33542  0133EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33543  0133F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33544  0133F6  EE21  F38B         	lfsr	2,_C+140	;volatile
 33545  0133FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33546  013400  006F FF7B FFE6     	movff	postinc2,postinc1
 33547  013406  006F FF7B FFE6     	movff	postinc2,postinc1
 33548  01340C  006F FF7B FFE6     	movff	postinc2,postinc1
 33549  013412  ECE6  F0C7         	call	___flge	;wreg free
 33550  013416  B001               	btfsc	btemp& (0+255),0,c
 33551  013418  D00E               	goto	l12814
 33552                           
 33553                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 33554  01341A  EE21  F38B         	lfsr	2,_C+140	;volatile
 33555  01341E  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33556  013424  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33557  01342A  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33558  013430  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33559  013436                     l12814:
 33560                           
 33561                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 33562  013436  0ECD               	movlw	205
 33563  013438  6EE6               	movwf	postinc1,c
 33564  01343A  0ECC               	movlw	204
 33565  01343C  6EE6               	movwf	postinc1,c
 33566  01343E  0ECC               	movlw	204
 33567  013440  6EE6               	movwf	postinc1,c
 33568  013442  0E3D               	movlw	61
 33569  013444  6EE6               	movwf	postinc1,c
 33570  013446  EE21  F38F         	lfsr	2,_C+144	;volatile
 33571  01344A  006F FF7B FFE6     	movff	postinc2,postinc1
 33572  013450  006F FF7B FFE6     	movff	postinc2,postinc1
 33573  013456  006F FF7B FFE6     	movff	postinc2,postinc1
 33574  01345C  006F FF7B FFE6     	movff	postinc2,postinc1
 33575  013462  ECE6  F0C7         	call	___flge	;wreg free
 33576  013466  B001               	btfsc	btemp& (0+255),0,c
 33577  013468  D010               	goto	l12818
 33578                           
 33579                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 33580  01346A  0ECD               	movlw	205
 33581  01346C  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 33582  013472  0ECC               	movlw	204
 33583  013474  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 33584  01347A  0ECC               	movlw	204
 33585  01347C  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 33586  013482  0E3D               	movlw	61
 33587  013484  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 33588  01348A                     l12818:
 33589                           
 33590                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 33591  01348A  EE21  F343         	lfsr	2,_C+68	;volatile
 33592  01348E  006F FF7B FFE6     	movff	postinc2,postinc1
 33593  013494  006F FF7B FFE6     	movff	postinc2,postinc1
 33594  01349A  006F FF7B FFE6     	movff	postinc2,postinc1
 33595  0134A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33596  0134A6  0E0A               	movlw	10
 33597  0134A8  6EE6               	movwf	postinc1,c
 33598  0134AA  0ED7               	movlw	215
 33599  0134AC  6EE6               	movwf	postinc1,c
 33600  0134AE  0E23               	movlw	35
 33601  0134B0  6EE6               	movwf	postinc1,c
 33602  0134B2  0E3C               	movlw	60
 33603  0134B4  6EE6               	movwf	postinc1,c
 33604  0134B6  ECE6  F0C7         	call	___flge	;wreg free
 33605  0134BA  B001               	btfsc	btemp& (0+255),0,c
 33606  0134BC  D01C               	goto	l12822
 33607                           
 33608                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 33609  0134BE  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 33610  0134C4  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 33611  0134CA  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 33612  0134D0  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 33613                           
 33614                           ;stkvar	_adj @ sp[(-6)+0]
 33615  0134D6  0EFA               	movlw	-6
 33616  0134D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 33617  0134DE  0EFB               	movlw	-5
 33618  0134E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33619  0134E6  0EFC               	movlw	-4
 33620  0134E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33621  0134EE  0EFD               	movlw	-3
 33622  0134F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 33623  0134F6                     l12822:
 33624                           
 33625                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 33626  0134F6  0E0A               	movlw	10
 33627  0134F8  6EE6               	movwf	postinc1,c
 33628  0134FA  0ED7               	movlw	215
 33629  0134FC  6EE6               	movwf	postinc1,c
 33630  0134FE  0E23               	movlw	35
 33631  013500  6EE6               	movwf	postinc1,c
 33632  013502  0E3C               	movlw	60
 33633  013504  6EE6               	movwf	postinc1,c
 33634  013506  EE21  F343         	lfsr	2,_C+68	;volatile
 33635  01350A  006F FF7B FFE6     	movff	postinc2,postinc1
 33636  013510  006F FF7B FFE6     	movff	postinc2,postinc1
 33637  013516  006F FF7B FFE6     	movff	postinc2,postinc1
 33638  01351C  006F FF7B FFE6     	movff	postinc2,postinc1
 33639  013522  ECE6  F0C7         	call	___flge	;wreg free
 33640  013526  B001               	btfsc	btemp& (0+255),0,c
 33641  013528  D01C               	goto	l12826
 33642                           
 33643                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 33644  01352A  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 33645  013530  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 33646  013536  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 33647  01353C  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 33648                           
 33649                           ;stkvar	_adj @ sp[(-6)+0]
 33650  013542  0EFA               	movlw	-6
 33651  013544  0060  F027  FFE3   	movff	btemp+8,plusw1
 33652  01354A  0EFB               	movlw	-5
 33653  01354C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33654  013552  0EFC               	movlw	-4
 33655  013554  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33656  01355A  0EFD               	movlw	-3
 33657  01355C  0060  F033  FFE3   	movff	btemp+11,plusw1
 33658  013562                     l12826:
 33659                           
 33660                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 33661  013562  0E00               	movlw	0
 33662  013564  6EE6               	movwf	postinc1,c
 33663  013566  0E00               	movlw	0
 33664  013568  6EE6               	movwf	postinc1,c
 33665  01356A  0E61               	movlw	97
 33666  01356C  6EE6               	movwf	postinc1,c
 33667  01356E  0E45               	movlw	69
 33668  013570  6EE6               	movwf	postinc1,c
 33669                           
 33670                           ;stkvar	_adj @ sp[(-10)+0]
 33671  013572  0EF6               	movlw	-10
 33672  013574  006F FF8F FFE6     	movff	plusw1,postinc1
 33673  01357A  006F FF8F FFE6     	movff	plusw1,postinc1
 33674  013580  006F FF8F FFE6     	movff	plusw1,postinc1
 33675  013586  006F FF8F FFE6     	movff	plusw1,postinc1
 33676  01358C  EE21  F343         	lfsr	2,_C+68	;volatile
 33677  013590  006F FF7B FFE6     	movff	postinc2,postinc1
 33678  013596  006F FF7B FFE6     	movff	postinc2,postinc1
 33679  01359C  006F FF7B FFE6     	movff	postinc2,postinc1
 33680  0135A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33681  0135A8  ECB3  F09E         	call	___flmul	;wreg free
 33682  0135AC  0060  F007  FFE6   	movff	btemp,postinc1
 33683  0135B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33684  0135B8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33685  0135BE  0060  F013  FFE6   	movff	btemp+3,postinc1
 33686  0135C4  ECA6  F0A6         	call	___fldiv	;wreg free
 33687  0135C8  0060  F007  FFE6   	movff	btemp,postinc1
 33688  0135CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33689  0135D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33690  0135DA  0060  F013  FFE6   	movff	btemp+3,postinc1
 33691  0135E0  0E8F               	movlw	low (_C+144)
 33692  0135E2  6EE6               	movwf	postinc1,c
 33693  0135E4  0E07               	movlw	high (_C+144)
 33694  0135E6  6EE6               	movwf	postinc1,c
 33695  0135E8  EC18  F0D7         	call	___asfladd	;wreg free
 33696                           
 33697                           ;bsoc.c: 58:  if (C.dynamic_ah_adj > (C.bank_ah))
 33698  0135EC  EE21  F39B         	lfsr	2,_C+156	;volatile
 33699  0135F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33700  0135F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33701  0135FC  006F FF7B FFE6     	movff	postinc2,postinc1
 33702  013602  006F FF7B FFE6     	movff	postinc2,postinc1
 33703  013608  EE21  F38B         	lfsr	2,_C+140	;volatile
 33704  01360C  006F FF7B FFE6     	movff	postinc2,postinc1
 33705  013612  006F FF7B FFE6     	movff	postinc2,postinc1
 33706  013618  006F FF7B FFE6     	movff	postinc2,postinc1
 33707  01361E  006F FF7B FFE6     	movff	postinc2,postinc1
 33708  013624  ECE6  F0C7         	call	___flge	;wreg free
 33709  013628  B001               	btfsc	btemp& (0+255),0,c
 33710  01362A  D00E               	goto	l12832
 33711                           
 33712                           ;bsoc.c: 59:   C.dynamic_ah_adj = C.bank_ah;
 33713  01362C  EE21  F38B         	lfsr	2,_C+140	;volatile
 33714  013630  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 33715  013636  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 33716  01363C  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 33717  013642  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 33718  013648                     l12832:
 33719                           
 33720                           ;bsoc.c: 60:  if (C.dynamic_ah_adj < 0.1)
 33721  013648  0ECD               	movlw	205
 33722  01364A  6EE6               	movwf	postinc1,c
 33723  01364C  0ECC               	movlw	204
 33724  01364E  6EE6               	movwf	postinc1,c
 33725  013650  0ECC               	movlw	204
 33726  013652  6EE6               	movwf	postinc1,c
 33727  013654  0E3D               	movlw	61
 33728  013656  6EE6               	movwf	postinc1,c
 33729  013658  EE21  F39B         	lfsr	2,_C+156	;volatile
 33730  01365C  006F FF7B FFE6     	movff	postinc2,postinc1
 33731  013662  006F FF7B FFE6     	movff	postinc2,postinc1
 33732  013668  006F FF7B FFE6     	movff	postinc2,postinc1
 33733  01366E  006F FF7B FFE6     	movff	postinc2,postinc1
 33734  013674  ECE6  F0C7         	call	___flge	;wreg free
 33735  013678  B001               	btfsc	btemp& (0+255),0,c
 33736  01367A  D010               	goto	l12836
 33737                           
 33738                           ;bsoc.c: 61:   C.dynamic_ah_adj = 0.1;
 33739  01367C  0ECD               	movlw	205
 33740  01367E  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 33741  013684  0ECC               	movlw	204
 33742  013686  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 33743  01368C  0ECC               	movlw	204
 33744  01368E  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 33745  013694  0E3D               	movlw	61
 33746  013696  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 33747  01369C                     l12836:
 33748                           
 33749                           ;bsoc.c: 64:  C.pv_ah += (C.c_pv / 3600.0);
 33750  01369C  0E00               	movlw	0
 33751  01369E  6EE6               	movwf	postinc1,c
 33752  0136A0  0E00               	movlw	0
 33753  0136A2  6EE6               	movwf	postinc1,c
 33754  0136A4  0E61               	movlw	97
 33755  0136A6  6EE6               	movwf	postinc1,c
 33756  0136A8  0E45               	movlw	69
 33757  0136AA  6EE6               	movwf	postinc1,c
 33758  0136AC  EE21  F347         	lfsr	2,_C+72	;volatile
 33759  0136B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33760  0136B6  006F FF7B FFE6     	movff	postinc2,postinc1
 33761  0136BC  006F FF7B FFE6     	movff	postinc2,postinc1
 33762  0136C2  006F FF7B FFE6     	movff	postinc2,postinc1
 33763  0136C8  ECA6  F0A6         	call	___fldiv	;wreg free
 33764  0136CC  0060  F007  FFE6   	movff	btemp,postinc1
 33765  0136D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33766  0136D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33767  0136DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 33768  0136E4  0E93               	movlw	low (_C+148)
 33769  0136E6  6EE6               	movwf	postinc1,c
 33770  0136E8  0E07               	movlw	high (_C+148)
 33771  0136EA  6EE6               	movwf	postinc1,c
 33772  0136EC  EC18  F0D7         	call	___asfladd	;wreg free
 33773                           
 33774                           ;bsoc.c: 65:  C.pvkw += (C.p_pv / 3600.0);
 33775  0136F0  0E00               	movlw	0
 33776  0136F2  6EE6               	movwf	postinc1,c
 33777  0136F4  0E00               	movlw	0
 33778  0136F6  6EE6               	movwf	postinc1,c
 33779  0136F8  0E61               	movlw	97
 33780  0136FA  6EE6               	movwf	postinc1,c
 33781  0136FC  0E45               	movlw	69
 33782  0136FE  6EE6               	movwf	postinc1,c
 33783  013700  EE21  F37B         	lfsr	2,_C+124	;volatile
 33784  013704  006F FF7B FFE6     	movff	postinc2,postinc1
 33785  01370A  006F FF7B FFE6     	movff	postinc2,postinc1
 33786  013710  006F FF7B FFE6     	movff	postinc2,postinc1
 33787  013716  006F FF7B FFE6     	movff	postinc2,postinc1
 33788  01371C  ECA6  F0A6         	call	___fldiv	;wreg free
 33789  013720  0060  F007  FFE6   	movff	btemp,postinc1
 33790  013726  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33791  01372C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33792  013732  0060  F013  FFE6   	movff	btemp+3,postinc1
 33793  013738  0EA7               	movlw	low (_C+168)
 33794  01373A  6EE6               	movwf	postinc1,c
 33795  01373C  0E07               	movlw	high (_C+168)
 33796  01373E  6EE6               	movwf	postinc1,c
 33797  013740  EC18  F0D7         	call	___asfladd	;wreg free
 33798                           
 33799                           ;bsoc.c: 66:  C.invkw += (C.p_inverter / 3600.0);
 33800  013744  0E00               	movlw	0
 33801  013746  6EE6               	movwf	postinc1,c
 33802  013748  0E00               	movlw	0
 33803  01374A  6EE6               	movwf	postinc1,c
 33804  01374C  0E61               	movlw	97
 33805  01374E  6EE6               	movwf	postinc1,c
 33806  013750  0E45               	movlw	69
 33807  013752  6EE6               	movwf	postinc1,c
 33808  013754  EE21  F377         	lfsr	2,_C+120	;volatile
 33809  013758  006F FF7B FFE6     	movff	postinc2,postinc1
 33810  01375E  006F FF7B FFE6     	movff	postinc2,postinc1
 33811  013764  006F FF7B FFE6     	movff	postinc2,postinc1
 33812  01376A  006F FF7B FFE6     	movff	postinc2,postinc1
 33813  013770  ECA6  F0A6         	call	___fldiv	;wreg free
 33814  013774  0060  F007  FFE6   	movff	btemp,postinc1
 33815  01377A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33816  013780  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33817  013786  0060  F013  FFE6   	movff	btemp+3,postinc1
 33818  01378C  0EAB               	movlw	low (_C+172)
 33819  01378E  6EE6               	movwf	postinc1,c
 33820  013790  0E07               	movlw	high (_C+172)
 33821  013792  6EE6               	movwf	postinc1,c
 33822  013794  EC18  F0D7         	call	___asfladd	;wreg free
 33823                           
 33824                           ;bsoc.c: 67:  C.loadkw += (C.p_load / 3600.0);
 33825  013798  0E00               	movlw	0
 33826  01379A  6EE6               	movwf	postinc1,c
 33827  01379C  0E00               	movlw	0
 33828  01379E  6EE6               	movwf	postinc1,c
 33829  0137A0  0E61               	movlw	97
 33830  0137A2  6EE6               	movwf	postinc1,c
 33831  0137A4  0E45               	movlw	69
 33832  0137A6  6EE6               	movwf	postinc1,c
 33833  0137A8  EE21  F373         	lfsr	2,_C+116	;volatile
 33834  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33835  0137B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33836  0137B8  006F FF7B FFE6     	movff	postinc2,postinc1
 33837  0137BE  006F FF7B FFE6     	movff	postinc2,postinc1
 33838  0137C4  ECA6  F0A6         	call	___fldiv	;wreg free
 33839  0137C8  0060  F007  FFE6   	movff	btemp,postinc1
 33840  0137CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33841  0137D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33842  0137DA  0060  F013  FFE6   	movff	btemp+3,postinc1
 33843  0137E0  0EAF               	movlw	low (_C+176)
 33844  0137E2  6EE6               	movwf	postinc1,c
 33845  0137E4  0E07               	movlw	high (_C+176)
 33846  0137E6  6EE6               	movwf	postinc1,c
 33847  0137E8  EC18  F0D7         	call	___asfladd	;wreg free
 33848                           
 33849                           ;bsoc.c: 68:  if (C.p_bat > 0.0)
 33850  0137EC  EE21  F37F         	lfsr	2,_C+128	;volatile
 33851  0137F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33852  0137F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33853  0137FC  006F FF7B FFE6     	movff	postinc2,postinc1
 33854  013802  006F FF7B FFE6     	movff	postinc2,postinc1
 33855  013808  0E00               	movlw	0
 33856  01380A  6EE6               	movwf	postinc1,c
 33857  01380C  0E00               	movlw	0
 33858  01380E  6EE6               	movwf	postinc1,c
 33859  013810  0E00               	movlw	0
 33860  013812  6EE6               	movwf	postinc1,c
 33861  013814  0E00               	movlw	0
 33862  013816  6EE6               	movwf	postinc1,c
 33863  013818  ECE6  F0C7         	call	___flge	;wreg free
 33864  01381C  B001               	btfsc	btemp& (0+255),0,c
 33865  01381E  D02A               	goto	l12842
 33866                           
 33867                           ;bsoc.c: 69:   C.bkwi += (C.p_bat / 3600.0);
 33868  013820  0E00               	movlw	0
 33869  013822  6EE6               	movwf	postinc1,c
 33870  013824  0E00               	movlw	0
 33871  013826  6EE6               	movwf	postinc1,c
 33872  013828  0E61               	movlw	97
 33873  01382A  6EE6               	movwf	postinc1,c
 33874  01382C  0E45               	movlw	69
 33875  01382E  6EE6               	movwf	postinc1,c
 33876  013830  EE21  F37F         	lfsr	2,_C+128	;volatile
 33877  013834  006F FF7B FFE6     	movff	postinc2,postinc1
 33878  01383A  006F FF7B FFE6     	movff	postinc2,postinc1
 33879  013840  006F FF7B FFE6     	movff	postinc2,postinc1
 33880  013846  006F FF7B FFE6     	movff	postinc2,postinc1
 33881  01384C  ECA6  F0A6         	call	___fldiv	;wreg free
 33882  013850  0060  F007  FFE6   	movff	btemp,postinc1
 33883  013856  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33884  01385C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33885  013862  0060  F013  FFE6   	movff	btemp+3,postinc1
 33886  013868  0E9F               	movlw	low (_C+160)
 33887  01386A  6EE6               	movwf	postinc1,c
 33888  01386C  0E07               	movlw	high (_C+160)
 33889  01386E  6EE6               	movwf	postinc1,c
 33890  013870  EC18  F0D7         	call	___asfladd	;wreg free
 33891  013874                     l12842:
 33892                           
 33893                           ;bsoc.c: 70:  if (C.p_bat < 0.0)
 33894  013874  EE21  F37F         	lfsr	2,_C+128	;volatile
 33895  013878  0E03               	movlw	3
 33896  01387A  AEDB               	btfss	plusw2,7,c
 33897  01387C  D038               	goto	l12846
 33898                           
 33899                           ;bsoc.c: 71:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33900  01387E  0E00               	movlw	0
 33901  013880  6EE6               	movwf	postinc1,c
 33902  013882  0E00               	movlw	0
 33903  013884  6EE6               	movwf	postinc1,c
 33904  013886  0E61               	movlw	97
 33905  013888  6EE6               	movwf	postinc1,c
 33906  01388A  0E45               	movlw	69
 33907  01388C  6EE6               	movwf	postinc1,c
 33908  01388E  EE21  F37F         	lfsr	2,_C+128	;volatile
 33909  013892  006F FF7B FFE6     	movff	postinc2,postinc1
 33910  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 33911  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 33912  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33913  0138AA  ECA6  F0A6         	call	___fldiv	;wreg free
 33914  0138AE  0060  F007  FFE6   	movff	btemp,postinc1
 33915  0138B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33916  0138BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33917  0138C0  0060  F013  FFE6   	movff	btemp+3,postinc1
 33918  0138C6  ECEF  F0D2         	call	_fabsf	;wreg free
 33919  0138CA  0060  F007  FFE6   	movff	btemp,postinc1
 33920  0138D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33921  0138D6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33922  0138DC  0060  F013  FFE6   	movff	btemp+3,postinc1
 33923  0138E2  0EA3               	movlw	low (_C+164)
 33924  0138E4  6EE6               	movwf	postinc1,c
 33925  0138E6  0E07               	movlw	high (_C+164)
 33926  0138E8  6EE6               	movwf	postinc1,c
 33927  0138EA  EC18  F0D7         	call	___asfladd	;wreg free
 33928  0138EE                     l12846:
 33929                           
 33930                           ;bsoc.c: 73:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 33931  0138EE  0E00               	movlw	0
 33932  0138F0  6EE6               	movwf	postinc1,c
 33933  0138F2  0E00               	movlw	0
 33934  0138F4  6EE6               	movwf	postinc1,c
 33935  0138F6  0EC8               	movlw	200
 33936  0138F8  6EE6               	movwf	postinc1,c
 33937  0138FA  0E42               	movlw	66
 33938  0138FC  6EE6               	movwf	postinc1,c
 33939  0138FE  EE21  F38B         	lfsr	2,_C+140	;volatile
 33940  013902  006F FF7B FFE6     	movff	postinc2,postinc1
 33941  013908  006F FF7B FFE6     	movff	postinc2,postinc1
 33942  01390E  006F FF7B FFE6     	movff	postinc2,postinc1
 33943  013914  006F FF7B FFE6     	movff	postinc2,postinc1
 33944  01391A  EE21  F39B         	lfsr	2,_C+156	;volatile
 33945  01391E  006F FF7B FFE6     	movff	postinc2,postinc1
 33946  013924  006F FF7B FFE6     	movff	postinc2,postinc1
 33947  01392A  006F FF7B FFE6     	movff	postinc2,postinc1
 33948  013930  006F FF7B FFE6     	movff	postinc2,postinc1
 33949  013936  ECA6  F0A6         	call	___fldiv	;wreg free
 33950  01393A  0060  F007  FFE6   	movff	btemp,postinc1
 33951  013940  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33952  013946  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33953  01394C  0060  F013  FFE6   	movff	btemp+3,postinc1
 33954  013952  ECB3  F09E         	call	___flmul	;wreg free
 33955  013956  0060  F007  FFE6   	movff	btemp,postinc1
 33956  01395C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33957  013962  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33958  013968  0060  F013  FFE6   	movff	btemp+3,postinc1
 33959  01396E  EC2D  F0C7         	call	___fltol	;wreg free
 33960  013972  0060  F004  F00B   	movff	btemp,btemp+10
 33961  013978  0060  F008  F00C   	movff	btemp+1,btemp+11
 33962  01397E  0E01               	movlw	1
 33963  013980  260B               	addwf	(btemp+10)^0,f,c
 33964  013982  0E00               	movlw	0
 33965  013984  220C               	addwfc	(btemp+11)^0,f,c
 33966  013986  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 33967  01398C  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 33968                           
 33969                           ;bsoc.c: 74:  if (C.soc > 100)
 33970  013992  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33971  013996  0E01               	movlw	1
 33972  013998  50DB               	movf	plusw2,w,c
 33973  01399A  E104               	bnz	u1240_20
 33974  01399C  0E65               	movlw	101
 33975  01399E  5CDE               	subwf	postinc2,w,c
 33976  0139A0  A0D8               	btfss	status,0,c
 33977  0139A2  D008               	goto	l12852
 33978  0139A4                     u1240_20:
 33979                           
 33980                           ;bsoc.c: 75:   C.soc = 100;
 33981  0139A4  0E64               	movlw	100
 33982  0139A6  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 33983  0139AC  0E00               	movlw	0
 33984  0139AE  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 33985  0139B4                     l12852:
 33986                           
 33987                           ;bsoc.c: 77:  if (C.c_bat < 0.0) {
 33988  0139B4  EE21  F343         	lfsr	2,_C+68	;volatile
 33989  0139B8  0E03               	movlw	3
 33990  0139BA  AEDB               	btfss	plusw2,7,c
 33991  0139BC  D047               	goto	l2033
 33992                           
 33993                           ;bsoc.c: 78:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 33994  0139BE  EE21  F343         	lfsr	2,_C+68	;volatile
 33995  0139C2  006F FF7B FFE6     	movff	postinc2,postinc1
 33996  0139C8  006F FF7B FFE6     	movff	postinc2,postinc1
 33997  0139CE  006F FF7B FFE6     	movff	postinc2,postinc1
 33998  0139D4  006F FF7B FFE6     	movff	postinc2,postinc1
 33999  0139DA  EE21  F39B         	lfsr	2,_C+156	;volatile
 34000  0139DE  006F FF7B FFE6     	movff	postinc2,postinc1
 34001  0139E4  006F FF7B FFE6     	movff	postinc2,postinc1
 34002  0139EA  006F FF7B FFE6     	movff	postinc2,postinc1
 34003  0139F0  006F FF7B FFE6     	movff	postinc2,postinc1
 34004  0139F6  ECA6  F0A6         	call	___fldiv	;wreg free
 34005  0139FA  0060  F007  FFE6   	movff	btemp,postinc1
 34006  013A00  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34007  013A06  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34008  013A0C  0060  F013  FFE6   	movff	btemp+3,postinc1
 34009  013A12  EC34  F0DA         	call	___flneg	;wreg free
 34010  013A16  0060  F007  FFE6   	movff	btemp,postinc1
 34011  013A1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34012  013A22  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34013  013A28  0060  F013  FFE6   	movff	btemp+3,postinc1
 34014  013A2E  EC2D  F0C7         	call	___fltol	;wreg free
 34015  013A32  0060  F004  F00B   	movff	btemp,btemp+10
 34016  013A38  0060  F008  F00C   	movff	btemp+1,btemp+11
 34017  013A3E  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 34018  013A44  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 34019                           
 34020                           ;bsoc.c: 79:  } else {
 34021  013A4A  D008               	goto	l12856
 34022  013A4C                     l2033:
 34023                           
 34024                           ;bsoc.c: 80:   C.runtime = 120;
 34025  013A4C  0E78               	movlw	120
 34026  013A4E  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34027  013A54  0E00               	movlw	0
 34028  013A56  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34029  013A5C                     l12856:
 34030                           
 34031                           ;bsoc.c: 82:  if (C.runtime > 120)
 34032  013A5C  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34033  013A60  0E01               	movlw	1
 34034  013A62  50DB               	movf	plusw2,w,c
 34035  013A64  E104               	bnz	u1242_20
 34036  013A66  0E79               	movlw	121
 34037  013A68  5CDE               	subwf	postinc2,w,c
 34038  013A6A  A0D8               	btfss	status,0,c
 34039  013A6C  D008               	goto	l12860
 34040  013A6E                     u1242_20:
 34041                           
 34042                           ;bsoc.c: 83:   C.runtime = 120;
 34043  013A6E  0E78               	movlw	120
 34044  013A70  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34045  013A76  0E00               	movlw	0
 34046  013A78  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34047  013A7E                     l12860:
 34048                           
 34049                           ;bsoc.c: 85:  V.lowint_count++;
 34050  013A7E  0E01               	movlw	1
 34051  013A80  0101               	movlb	1	; () banked
 34052  013A82  27E3               	addwf	(_V+179)& (0+255),f,b	;volatile
 34053  013A84  0E00               	movlw	0
 34054  013A86  23E4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34055  013A88  23E5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34056  013A8A  23E6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34057                           
 34058                           ;bsoc.c: 87:  if (!log_update_wait++ && V.system_stable) {
 34059  013A8C  2A41               	incf	calc_bsoc@log_update_wait^0,f,c
 34060  013A8E  0441               	decf	calc_bsoc@log_update_wait^0,w,c
 34061  013A90  A4D8               	btfss	status,2,c
 34062  013A92  D15B               	goto	l12872
 34063                           
 34064                           ; BSR set to: 1
 34065  013A94  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 34066  013A96  B4D8               	btfsc	status,2,c
 34067  013A98  D158               	goto	l12872
 34068                           
 34069                           ; BSR set to: 1
 34070                           ;bsoc.c: 88:   log_ptr = port_data_dma_ptr();
 34071  013A9A  EC9C  F0E0         	call	_port_data_dma_ptr	;wreg free
 34072                           
 34073                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34074  013A9E  0EFF               	movlw	-1
 34075  013AA0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34076  013AA6  0EFE               	movlw	-2
 34077  013AA8  0060  F007  FFE3   	movff	btemp,plusw1
 34078                           
 34079                           ;bsoc.c: 89:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34080  013AAE  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34081  013AB2  006F FF7B FFE6     	movff	postinc2,postinc1
 34082  013AB8  006F FF7B FFE6     	movff	postinc2,postinc1
 34083  013ABE  006F FF7B FFE6     	movff	postinc2,postinc1
 34084  013AC4  006F FF7B FFE6     	movff	postinc2,postinc1
 34085  013ACA  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34086  013ACE  006F FF7B FFE6     	movff	postinc2,postinc1
 34087  013AD4  006F FF7B FFE6     	movff	postinc2,postinc1
 34088  013ADA  006F FF7B FFE6     	movff	postinc2,postinc1
 34089  013AE0  006F FF7B FFE6     	movff	postinc2,postinc1
 34090  013AE6  EE21  F39B         	lfsr	2,_C+156	;volatile
 34091  013AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 34092  013AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 34093  013AF6  006F FF7B FFE6     	movff	postinc2,postinc1
 34094  013AFC  006F FF7B FFE6     	movff	postinc2,postinc1
 34095  013B02  EE22  F026         	lfsr	2,_C+295	;volatile
 34096  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 34097  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 34098  013B12  006F FF7B FFE6     	movff	postinc2,postinc1
 34099  013B18  006F FF7B FFE6     	movff	postinc2,postinc1
 34100  013B1E  EE22  F022         	lfsr	2,_C+291	;volatile
 34101  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 34102  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 34103  013B2E  006F FF7B FFE6     	movff	postinc2,postinc1
 34104  013B34  006F FF7B FFE6     	movff	postinc2,postinc1
 34105  013B3A  EE22  F021         	lfsr	2,_C+290	;volatile
 34106  013B3E  50DF               	movf	indf2,w,c
 34107  013B40  6EE6               	movwf	postinc1,c
 34108  013B42  0E00               	movlw	0
 34109  013B44  6EE6               	movwf	postinc1,c
 34110  013B46  EC80  F0E0         	call	_get_ac_charger_relay	;wreg free
 34111  013B4A  5001               	movf	btemp^0,w,c
 34112  013B4C  6EE6               	movwf	postinc1,c
 34113  013B4E  0E00               	movlw	0
 34114  013B50  6EE6               	movwf	postinc1,c
 34115  013B52  EE21  F367         	lfsr	2,_C+104	;volatile
 34116  013B56  006F FF7B FFE6     	movff	postinc2,postinc1
 34117  013B5C  006F FF7B FFE6     	movff	postinc2,postinc1
 34118  013B62  006F FF7B FFE6     	movff	postinc2,postinc1
 34119  013B68  006F FF7B FFE6     	movff	postinc2,postinc1
 34120  013B6E  EE21  F387         	lfsr	2,_C+136	;volatile
 34121  013B72  006F FF7B FFE6     	movff	postinc2,postinc1
 34122  013B78  006F FF7B FFE6     	movff	postinc2,postinc1
 34123  013B7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34124  013B84  006F FF7B FFE6     	movff	postinc2,postinc1
 34125  013B8A  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34126  013B8E  006F FF78  F00B    	movff	postinc2,btemp+10
 34127  013B94  006F FF74  F00C    	movff	postdec2,btemp+11
 34128  013B9A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34129  013BA0  0060  F033  FFE6   	movff	btemp+11,postinc1
 34130  013BA6  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34131  013BAA  006F FF78  F00B    	movff	postinc2,btemp+10
 34132  013BB0  006F FF74  F00C    	movff	postdec2,btemp+11
 34133  013BB6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34134  013BBC  0060  F033  FFE6   	movff	btemp+11,postinc1
 34135  013BC2  EE21  F393         	lfsr	2,_C+148	;volatile
 34136  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 34137  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 34138  013BD2  006F FF7B FFE6     	movff	postinc2,postinc1
 34139  013BD8  006F FF7B FFE6     	movff	postinc2,postinc1
 34140  013BDE  EE21  F38F         	lfsr	2,_C+144	;volatile
 34141  013BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34142  013BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34143  013BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34144  013BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34145  013BFA  EE21  F377         	lfsr	2,_C+120	;volatile
 34146  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 34147  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 34148  013C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34149  013C10  006F FF7B FFE6     	movff	postinc2,postinc1
 34150  013C16  EE21  F373         	lfsr	2,_C+116	;volatile
 34151  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 34152  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 34153  013C26  006F FF7B FFE6     	movff	postinc2,postinc1
 34154  013C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34155  013C32  EE21  F37B         	lfsr	2,_C+124	;volatile
 34156  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 34157  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34158  013C42  006F FF7B FFE6     	movff	postinc2,postinc1
 34159  013C48  006F FF7B FFE6     	movff	postinc2,postinc1
 34160  013C4E  EE21  F37F         	lfsr	2,_C+128	;volatile
 34161  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 34162  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 34163  013C5E  006F FF7B FFE6     	movff	postinc2,postinc1
 34164  013C64  006F FF7B FFE6     	movff	postinc2,postinc1
 34165  013C6A  EE21  F363         	lfsr	2,_C+100	;volatile
 34166  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34167  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 34168  013C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 34169  013C80  006F FF7B FFE6     	movff	postinc2,postinc1
 34170  013C86  EE21  F34B         	lfsr	2,_C+76	;volatile
 34171  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34172  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 34173  013C96  006F FF7B FFE6     	movff	postinc2,postinc1
 34174  013C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 34175  013CA2  EE21  F34F         	lfsr	2,_C+80	;volatile
 34176  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34177  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34178  013CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 34179  013CB8  006F FF7B FFE6     	movff	postinc2,postinc1
 34180  013CBE  EE21  F353         	lfsr	2,_C+84	;volatile
 34181  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34182  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34183  013CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 34184  013CD4  006F FF7B FFE6     	movff	postinc2,postinc1
 34185  013CDA  0060  F6C7  FFE6   	movff	_V+129,postinc1
 34186  013CE0  0060  F6CB  FFE6   	movff	_V+130,postinc1
 34187  013CE6  0060  F6CF  FFE6   	movff	_V+131,postinc1
 34188  013CEC  0060  F6D3  FFE6   	movff	_V+132,postinc1
 34189  013CF2  0E31               	movlw	49
 34190  013CF4  6EE6               	movwf	postinc1,c
 34191  013CF6  0E00               	movlw	0
 34192  013CF8  6EE6               	movwf	postinc1,c
 34193  013CFA  0ED7               	movlw	low STR_64
 34194  013CFC  6EE6               	movwf	postinc1,c
 34195  013CFE  0EFB               	movlw	high STR_64
 34196  013D00  6EE6               	movwf	postinc1,c
 34197                           
 34198                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34199  013D02  0EAA               	movlw	-86
 34200  013D04  006F FF8F FFE6     	movff	plusw1,postinc1
 34201  013D0A  006F FF8F FFE6     	movff	plusw1,postinc1
 34202  013D10  0E56               	movlw	86
 34203  013D12  6EE6               	movwf	postinc1,c
 34204  013D14  EC85  F0CE         	call	_sprintf	;wreg free
 34205                           
 34206                           ; BSR set to: 0
 34207                           ;bsoc.c: 95:   StartTimer(TMR_DISPLAY, 125);
 34208  013D18  0E7D               	movlw	125
 34209  013D1A  6EE6               	movwf	postinc1,c
 34210  013D1C  0E00               	movlw	0
 34211  013D1E  6EE6               	movwf	postinc1,c
 34212  013D20  0E0A               	movlw	10
 34213  013D22  6EE6               	movwf	postinc1,c
 34214  013D24  EC8D  F0DB         	call	_StartTimer	;wreg free
 34215                           
 34216                           ;bsoc.c: 96:   send_port_data_dma(strlen((char*) log_ptr));
 34217                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34218  013D28  0EFE               	movlw	-2
 34219  013D2A  006F FF8F FFE6     	movff	plusw1,postinc1
 34220  013D30  006F FF8F FFE6     	movff	plusw1,postinc1
 34221  013D36  EC98  F0D4         	call	_strlen	;wreg free
 34222  013D3A  0060  F007  FFE6   	movff	btemp,postinc1
 34223  013D40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34224  013D46  EC9A  F0D9         	call	_send_port_data_dma	;wreg free
 34225  013D4A                     l12872:
 34226                           
 34227                           ;bsoc.c: 98:  if (log_update_wait >= 10)
 34228  013D4A  0E09               	movlw	9
 34229  013D4C  6441               	cpfsgt	calc_bsoc@log_update_wait^0,c
 34230  013D4E  D001               	goto	l2037
 34231                           
 34232                           ;bsoc.c: 99:   log_update_wait = 0;
 34233  013D50  6A41               	clrf	calc_bsoc@log_update_wait^0,c
 34234  013D52                     l2037:
 34235                           
 34236                           ;bsoc.c: 101:  C.update = 0;
 34237  013D52  0E00               	movlw	0
 34238  013D54  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 34239                           
 34240                           ;bsoc.c: 103:  do { LATEbits.LATE1 = 0; } while(0);
 34241  013D5A  92BE               	bcf	190,1,c	;volatile
 34242                           
 34243                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 34244  013D5C  0EFA               	movlw	250
 34245  013D5E  26E1               	addwf	fsr1l,f,c
 34246  013D60  0EFF               	movlw	255
 34247  013D62  22E2               	addwfc	fsr1h,f,c
 34248  013D64  0012               	return		;funcret
 34249  013D66                     __end_of_calc_bsoc:
 34250                           	opt callstack 0
 34251                           
 34252 ;; *************** function _send_port_data_dma *****************
 34253 ;; Defined at:
 34254 ;;		line 398 in file "eadog.c"
 34255 ;; Parameters:    Size  Location     Type
 34256 ;;  dsize           2  [STACK] unsigned short 
 34257 ;; Auto vars:     Size  Location     Type
 34258 ;;		None
 34259 ;; Return value:  Size  Location     Type
 34260 ;;                  1  [STACK] void 
 34261 ;; Registers used:
 34262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34263 ;; Tracked objects:
 34264 ;;		On entry : 0/0
 34265 ;;		On exit  : 3F/3B
 34266 ;;		Unchanged: 0/0
 34267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34272 ;;Total ram usage:        0 bytes
 34273 ;; Hardware stack levels used:    1
 34274 ;; Hardware stack levels required when called:    3
 34275 ;; This function calls:
 34276 ;;		Nothing
 34277 ;; This function is called by:
 34278 ;;		_calc_bsoc
 34279 ;; This function uses a reentrant model
 34280 ;;
 34281                           
 34282                           	psect	text154
 34283  01B334                     __ptext154:
 34284                           	opt callstack 0
 34285  01B334                     _send_port_data_dma:
 34286                           	opt callstack 10
 34287                           
 34288                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 34289                           ;stkvar	_dsize @ sp[(0)+-2]
 34290                           
 34291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34292                           ;incstack = 0
 34293  01B334  0EFE               	movlw	-2
 34294  01B336  04E3               	decf	plusw1,w,c
 34295  01B338  0EFF               	movlw	-1
 34296  01B33A  006F FF8C  F001    	movff	plusw1,btemp
 34297  01B340  0E02               	movlw	2
 34298  01B342  5A01               	subwfb	btemp^0,f,c
 34299  01B344  A0D8               	btfss	status,0,c
 34300  01B346  D00C               	goto	l9956
 34301                           
 34302                           ;eadog.c: 401:   dsize = 512;
 34303  01B348  0E00               	movlw	0
 34304  01B34A  6E0B               	movwf	(btemp+10)^0,c
 34305  01B34C  0E02               	movlw	2
 34306  01B34E  6E0C               	movwf	(btemp+11)^0,c
 34307                           
 34308                           ;stkvar	_dsize @ sp[(0)+-2]
 34309  01B350  0EFE               	movlw	-2
 34310  01B352  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34311  01B358  0EFF               	movlw	-1
 34312  01B35A  0060  F033  FFE3   	movff	btemp+11,plusw1
 34313  01B360                     l9956:
 34314                           
 34315                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 34316  01B360  013B               	movlb	59	; () banked
 34317  01B362  9FDC               	bcf	220,7,b	;volatile
 34318                           
 34319                           ; BSR set to: 59
 34320                           ;eadog.c: 404:  DMA2SSZ = dsize;
 34321                           ;stkvar	_dsize @ sp[(0)+-2]
 34322  01B364  0EFE               	movlw	-2
 34323  01B366  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 34324  01B36C  0EFF               	movlw	-1
 34325  01B36E  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 34326                           
 34327                           ; BSR set to: 59
 34328                           ;eadog.c: 405:  DMA2DSZ = 1;
 34329  01B374  0E00               	movlw	0
 34330  01B376  6FCF               	movwf	207,b	;volatile
 34331  01B378  0E01               	movlw	1
 34332  01B37A  6FCE               	movwf	206,b	;volatile
 34333                           
 34334                           ; BSR set to: 59
 34335                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 34336  01B37C  8FDC               	bsf	220,7,b	;volatile
 34337                           
 34338                           ; BSR set to: 59
 34339                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 34340  01B37E  8DDC               	bsf	220,6,b	;volatile
 34341                           
 34342                           ; BSR set to: 59
 34343                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 34344  01B380  52E5               	movf	postdec1,f,c
 34345  01B382  52E5               	movf	postdec1,f,c
 34346  01B384  0012               	return		;funcret
 34347  01B386                     __end_of_send_port_data_dma:
 34348                           	opt callstack 0
 34349                           
 34350 ;; *************** function _port_data_dma_ptr *****************
 34351 ;; Defined at:
 34352 ;;		line 413 in file "eadog.c"
 34353 ;; Parameters:    Size  Location     Type
 34354 ;;		None
 34355 ;; Auto vars:     Size  Location     Type
 34356 ;;		None
 34357 ;; Return value:  Size  Location     Type
 34358 ;;                  2  [STACK] PTR unsigned char 
 34359 ;; Registers used:
 34360 ;;		wreg, status,2, status,0, btemp, btemp+1
 34361 ;; Tracked objects:
 34362 ;;		On entry : 3F/1
 34363 ;;		On exit  : 0/0
 34364 ;;		Unchanged: 0/0
 34365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34370 ;;Total ram usage:        0 bytes
 34371 ;; Hardware stack levels used:    1
 34372 ;; Hardware stack levels required when called:    3
 34373 ;; This function calls:
 34374 ;;		Nothing
 34375 ;; This function is called by:
 34376 ;;		_calc_bsoc
 34377 ;; This function uses a reentrant model
 34378 ;;
 34379                           
 34380                           	psect	text155
 34381  01C138                     __ptext155:
 34382                           	opt callstack 0
 34383  01C138                     _port_data_dma_ptr:
 34384                           	opt callstack 10
 34385                           
 34386                           ;eadog.c: 415:  return port_data;
 34387                           
 34388                           ; BSR set to: 59
 34389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34390                           ;incstack = 0
 34391  01C138  0EFF               	movlw	low _port_data
 34392  01C13A  6E01               	movwf	btemp^0,c
 34393  01C13C  0E04               	movlw	high _port_data
 34394  01C13E  6E02               	movwf	(btemp+1)^0,c
 34395                           
 34396                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34397  01C140  0012               	return		;funcret
 34398  01C142                     __end_of_port_data_dma_ptr:
 34399                           	opt callstack 0
 34400                           
 34401 ;; *************** function ___asfladd *****************
 34402 ;; Defined at:
 34403 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 34404 ;; Parameters:    Size  Location     Type
 34405 ;;  f1p             2  [STACK] PTR 
 34406 ;;		 -> C(299), 
 34407 ;;  f2              4  [STACK] PTR 
 34408 ;; Auto vars:     Size  Location     Type
 34409 ;;		None
 34410 ;; Return value:  Size  Location     Type
 34411 ;;                  4  [STACK] PTR 
 34412 ;; Registers used:
 34413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 34414 ;; Tracked objects:
 34415 ;;		On entry : 0/0
 34416 ;;		On exit  : 0/0
 34417 ;;		Unchanged: 0/0
 34418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34423 ;;Total ram usage:        0 bytes
 34424 ;; Hardware stack levels used:    1
 34425 ;; Hardware stack levels required when called:    4
 34426 ;; This function calls:
 34427 ;;		___fladd
 34428 ;; This function is called by:
 34429 ;;		_calc_bsoc
 34430 ;; This function uses a reentrant model
 34431 ;;
 34432                           
 34433                           	psect	text156
 34434  01AE30                     __ptext156:
 34435                           	opt callstack 0
 34436  01AE30                     ___asfladd:
 34437                           	opt callstack 9
 34438                           
 34439                           ;	Return value of ___asfladd is never used
 34440                           ;stkvar	_f2 @ sp[(0)+-6]
 34441                           
 34442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34443                           ;incstack = 0
 34444  01AE30  0EFA               	movlw	-6
 34445  01AE32  006F FF8F FFE6     	movff	plusw1,postinc1
 34446  01AE38  006F FF8F FFE6     	movff	plusw1,postinc1
 34447  01AE3E  006F FF8F FFE6     	movff	plusw1,postinc1
 34448  01AE44  006F FF8F FFE6     	movff	plusw1,postinc1
 34449                           
 34450                           ;stkvar	_f1p @ sp[(-4)+-2]
 34451  01AE4A  0EFA               	movlw	-6
 34452  01AE4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 34453  01AE52  0EFB               	movlw	-5
 34454  01AE54  006F FF8F FFDA     	movff	plusw1,fsr2h
 34455  01AE5A  006F FF7B FFE6     	movff	postinc2,postinc1
 34456  01AE60  006F FF7B FFE6     	movff	postinc2,postinc1
 34457  01AE66  006F FF7B FFE6     	movff	postinc2,postinc1
 34458  01AE6C  006F FF7B FFE6     	movff	postinc2,postinc1
 34459  01AE72  ECC8  F0A2         	call	___fladd	;wreg free
 34460                           
 34461                           ;stkvar	_f1p @ sp[(0)+-2]
 34462  01AE76  0EFE               	movlw	-2
 34463  01AE78  006F FF8F FFD9     	movff	plusw1,fsr2l
 34464  01AE7E  0EFF               	movlw	-1
 34465  01AE80  006F FF8F FFDA     	movff	plusw1,fsr2h
 34466  01AE86  0060  F007  FFDE   	movff	btemp,postinc2
 34467  01AE8C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 34468  01AE92  0060  F00F  FFDE   	movff	btemp+2,postinc2
 34469  01AE98  0060  F013  FFDE   	movff	btemp+3,postinc2
 34470                           
 34471                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 34472  01AE9E  0EFA               	movlw	250
 34473  01AEA0  26E1               	addwf	fsr1l,f,c
 34474  01AEA2  0EFF               	movlw	255
 34475  01AEA4  22E2               	addwfc	fsr1h,f,c
 34476  01AEA6  0012               	return		;funcret
 34477  01AEA8                     __end_of___asfladd:
 34478                           	opt callstack 0
 34479                           
 34480 ;; *************** function _INT0_ISR *****************
 34481 ;; Defined at:
 34482 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 34483 ;; Parameters:    Size  Location     Type
 34484 ;;		None
 34485 ;; Auto vars:     Size  Location     Type
 34486 ;;		None
 34487 ;; Return value:  Size  Location     Type
 34488 ;;                  1    wreg      void 
 34489 ;; Registers used:
 34490 ;;		wreg, status,2, status,0, pclath, tosl
 34491 ;; Tracked objects:
 34492 ;;		On entry : 0/0
 34493 ;;		On exit  : 0/0
 34494 ;;		Unchanged: 0/0
 34495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34500 ;;Total ram usage:        0 bytes
 34501 ;; Hardware stack levels used:    1
 34502 ;; Hardware stack levels required when called:    2
 34503 ;; This function calls:
 34504 ;;		_INT0_CallBack
 34505 ;; This function is called by:
 34506 ;;		Interrupt level 2
 34507 ;; This function uses a non-reentrant model
 34508 ;;
 34509                           
 34510                           	psect	text157
 34511  01C110                     __ptext157:
 34512                           	opt callstack 0
 34513  01C110                     _INT0_ISR:
 34514                           	opt callstack 2
 34515                           
 34516                           ;incstack = 0
 34517  01C110  EE14  F15E         	lfsr	1,___inthi_sp
 34518                           
 34519                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 34520  01C114  0139               	movlb	57	; () banked
 34521  01C116  91A1               	bcf	161,0,b	;volatile
 34522                           
 34523                           ; BSR set to: 57
 34524                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 34525  01C118  EC26  F0DF         	call	_INT0_CallBack	;wreg free
 34526  01C11C  0011               	retfie		f
 34527  01C11E                     __end_of_INT0_ISR:
 34528                           	opt callstack 0
 34529                           
 34530 ;; *************** function _INT0_CallBack *****************
 34531 ;; Defined at:
 34532 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 34533 ;; Parameters:    Size  Location     Type
 34534 ;;		None
 34535 ;; Auto vars:     Size  Location     Type
 34536 ;;		None
 34537 ;; Return value:  Size  Location     Type
 34538 ;;                  1  [STACK] void 
 34539 ;; Registers used:
 34540 ;;		wreg, status,2, status,0, pclath, tosl
 34541 ;; Tracked objects:
 34542 ;;		On entry : 3F/39
 34543 ;;		On exit  : 0/0
 34544 ;;		Unchanged: 0/0
 34545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34550 ;;Total ram usage:        0 bytes
 34551 ;; Hardware stack levels used:    1
 34552 ;; Hardware stack levels required when called:    1
 34553 ;; This function calls:
 34554 ;;		Absolute function
 34555 ;;		_INT0_DefaultInterruptHandler
 34556 ;; This function is called by:
 34557 ;;		_INT0_ISR
 34558 ;; This function uses a reentrant model
 34559 ;;
 34560                           
 34561                           	psect	text158
 34562  01BE4C                     __ptext158:
 34563                           	opt callstack 0
 34564  01BE4C                     _INT0_CallBack:
 34565                           	opt callstack 2
 34566                           
 34567                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 34568                           
 34569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34570                           ;incstack = 0
 34571  01BE4C  0100               	movlb	0	; () banked
 34572  01BE4E  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34573  01BE50  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34574  01BE52  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34575  01BE54  B4D8               	btfsc	status,2,c
 34576  01BE56  0012               	return	
 34577                           
 34578                           ; BSR set to: 0
 34579                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 34580  01BE58  D801               	call	u997_48
 34581  01BE5A  0012               	return	
 34582  01BE5C                     u997_48:
 34583  01BE5C  0005               	push	
 34584  01BE5E  6EFA               	movwf	pclath,c
 34585  01BE60  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34586  01BE62  6EFD               	movwf	tosl,c
 34587  01BE64  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34588  01BE66  6EFE               	movwf	tosh,c
 34589  01BE68  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34590  01BE6A  6EFF               	movwf	tosu,c
 34591  01BE6C  50FA               	movf	pclath,w,c
 34592  01BE6E  0012               	return		;indir
 34593  01BE70                     __end_of_INT0_CallBack:
 34594                           	opt callstack 0
 34595                           
 34596 ;; *************** function _INT0_DefaultInterruptHandler *****************
 34597 ;; Defined at:
 34598 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 34599 ;; Parameters:    Size  Location     Type
 34600 ;;		None
 34601 ;; Auto vars:     Size  Location     Type
 34602 ;;		None
 34603 ;; Return value:  Size  Location     Type
 34604 ;;                  1  [STACK] void 
 34605 ;; Registers used:
 34606 ;;		None
 34607 ;; Tracked objects:
 34608 ;;		On entry : 3F/0
 34609 ;;		On exit  : 0/0
 34610 ;;		Unchanged: 0/0
 34611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34616 ;;Total ram usage:        0 bytes
 34617 ;; Hardware stack levels used:    1
 34618 ;; This function calls:
 34619 ;;		Nothing
 34620 ;; This function is called by:
 34621 ;;		_EXT_INT_Initialize
 34622 ;;		_INT0_CallBack
 34623 ;; This function uses a reentrant model
 34624 ;;
 34625                           
 34626                           	psect	text159
 34627  01C1B2                     __ptext159:
 34628                           	opt callstack 0
 34629  01C1B2                     _INT0_DefaultInterruptHandler:
 34630                           	opt callstack 2
 34631                           
 34632                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34633                           
 34634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34635                           ;incstack = 0
 34636  01C1B2  0012               	return		;funcret
 34637  01C1B4                     __end_of_INT0_DefaultInterruptHandler:
 34638                           	opt callstack 0
 34639                           
 34640 ;; *************** function _Default_ISR *****************
 34641 ;; Defined at:
 34642 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 34643 ;; Parameters:    Size  Location     Type
 34644 ;;		None
 34645 ;; Auto vars:     Size  Location     Type
 34646 ;;		None
 34647 ;; Return value:  Size  Location     Type
 34648 ;;                  1    wreg      void 
 34649 ;; Registers used:
 34650 ;;		None
 34651 ;; Tracked objects:
 34652 ;;		On entry : 0/0
 34653 ;;		On exit  : 0/0
 34654 ;;		Unchanged: 0/0
 34655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34660 ;;Total ram usage:        0 bytes
 34661 ;; Hardware stack levels used:    1
 34662 ;; This function calls:
 34663 ;;		Nothing
 34664 ;; This function is called by:
 34665 ;;		Interrupt level 2
 34666 ;; This function uses a non-reentrant model
 34667 ;;
 34668                           
 34669                           	psect	text160
 34670  01C1A8                     __ptext160:
 34671                           	opt callstack 0
 34672  01C1A8                     _Default_ISR:
 34673                           	opt callstack 4
 34674                           
 34675                           ;incstack = 0
 34676  01C1A8  EE14  F15E         	lfsr	1,___inthi_sp
 34677  01C1AC  0011               	retfie		f
 34678  01C1AE                     __end_of_Default_ISR:
 34679                           	opt callstack 0
 34680                           
 34681 ;; *************** function _ADCC_ISR *****************
 34682 ;; Defined at:
 34683 ;;		line 314 in file "mcc_generated_files/adcc.c"
 34684 ;; Parameters:    Size  Location     Type
 34685 ;;		None
 34686 ;; Auto vars:     Size  Location     Type
 34687 ;;		None
 34688 ;; Return value:  Size  Location     Type
 34689 ;;                  1    wreg      void 
 34690 ;; Registers used:
 34691 ;;		wreg, status,2, status,0, pclath, tosl
 34692 ;; Tracked objects:
 34693 ;;		On entry : 0/0
 34694 ;;		On exit  : 0/0
 34695 ;;		Unchanged: 0/0
 34696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34701 ;;Total ram usage:        0 bytes
 34702 ;; Hardware stack levels used:    1
 34703 ;; Hardware stack levels required when called:    1
 34704 ;; This function calls:
 34705 ;;		Absolute function
 34706 ;;		_ADCC_DefaultInterruptHandler
 34707 ;;		_adc_int_handler
 34708 ;; This function is called by:
 34709 ;;		Interrupt level 2
 34710 ;; This function uses a non-reentrant model
 34711 ;;
 34712                           
 34713                           	psect	text161
 34714  01BABC                     __ptext161:
 34715                           	opt callstack 0
 34716  01BABC                     _ADCC_ISR:
 34717                           	opt callstack 3
 34718                           
 34719                           ;incstack = 0
 34720  01BABC  EE14  F15E         	lfsr	1,___inthi_sp
 34721                           
 34722                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 34723  01BAC0  0139               	movlb	57	; () banked
 34724  01BAC2  95A1               	bcf	161,2,b	;volatile
 34725                           
 34726                           ; BSR set to: 57
 34727                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 34728  01BAC4  0100               	movlb	0	; () banked
 34729  01BAC6  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34730  01BAC8  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34731  01BACA  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34732  01BACC  B4D8               	btfsc	status,2,c
 34733  01BACE  0011               	retfie		f
 34734                           
 34735                           ; BSR set to: 0
 34736                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 34737  01BAD0  D801               	call	i2u1040_48
 34738  01BAD2  0011               	retfie		f
 34739  01BAD4                     i2u1040_48:
 34740  01BAD4  0005               	push	
 34741  01BAD6  6EFA               	movwf	pclath,c
 34742  01BAD8  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34743  01BADA  6EFD               	movwf	tosl,c
 34744  01BADC  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34745  01BADE  6EFE               	movwf	tosh,c
 34746  01BAE0  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34747  01BAE2  6EFF               	movwf	tosu,c
 34748  01BAE4  50FA               	movf	pclath,w,c
 34749  01BAE6  0012               	return		;indir
 34750  01BAE8                     __end_of_ADCC_ISR:
 34751                           	opt callstack 0
 34752                           
 34753 ;; *************** function _adc_int_t_handler *****************
 34754 ;; Defined at:
 34755 ;;		line 146 in file "daq.c"
 34756 ;; Parameters:    Size  Location     Type
 34757 ;;		None
 34758 ;; Auto vars:     Size  Location     Type
 34759 ;;		None
 34760 ;; Return value:  Size  Location     Type
 34761 ;;                  1  [STACK] void 
 34762 ;; Registers used:
 34763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 34764 ;; Tracked objects:
 34765 ;;		On entry : 3F/0
 34766 ;;		On exit  : 0/0
 34767 ;;		Unchanged: 0/0
 34768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34773 ;;Total ram usage:        0 bytes
 34774 ;; Hardware stack levels used:    1
 34775 ;; Hardware stack levels required when called:    1
 34776 ;; This function calls:
 34777 ;;		_ADCC_DischargeSampleCapacitor
 34778 ;;		_ADCC_StartConversion
 34779 ;; This function is called by:
 34780 ;;		_start_adc_scan
 34781 ;;		_ADCC_ThresholdISR
 34782 ;; This function uses a reentrant model
 34783 ;;
 34784                           
 34785                           	psect	text162
 34786  01ADAE                     __ptext162:
 34787                           	opt callstack 0
 34788  01ADAE                     _adc_int_t_handler:
 34789                           	opt callstack 2
 34790                           
 34791                           ;daq.c: 151:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 34792                           
 34793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34794                           ;incstack = 0
 34795  01ADAE  013E               	movlb	62	; () banked
 34796  01ADB0  51E6               	movf	230,w,b	;volatile
 34797  01ADB2  006F FB9C  F001    	movff	16103,btemp	;volatile
 34798  01ADB8  6A02               	clrf	(btemp+1)^0,c
 34799  01ADBA  0060  F004  F002   	movff	btemp,btemp+1
 34800  01ADC0  6A01               	clrf	btemp^0,c
 34801  01ADC2  2601               	addwf	btemp^0,f,c
 34802  01ADC4  0E00               	movlw	0
 34803  01ADC6  2202               	addwfc	(btemp+1)^0,f,c
 34804  01ADC8  0101               	movlb	1	; () banked
 34805  01ADCA  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34806  01ADCC  0D02               	mullw	2
 34807  01ADCE  0E00               	movlw	low _R
 34808  01ADD0  24F3               	addwf	243,w,c
 34809  01ADD2  6ED9               	movwf	fsr2l,c
 34810  01ADD4  0E01               	movlw	high _R
 34811  01ADD6  20F4               	addwfc	prodh,w,c
 34812  01ADD8  6EDA               	movwf	fsr2h,c
 34813  01ADDA  0060  F007  FFDE   	movff	btemp,postinc2
 34814  01ADE0  0060  F00B  FFDD   	movff	btemp+1,postdec2
 34815  01ADE6                     l11148:
 34816                           
 34817                           ;daq.c: 153:   if (++R.scan_index > 0XD) {
 34818  01ADE6  0101               	movlb	1	; () banked
 34819  01ADE8  2B2C               	incf	(_R+44)& (0+255),f,b	;volatile
 34820  01ADEA  0E0D               	movlw	13
 34821  01ADEC  652C               	cpfsgt	(_R+44)& (0+255),b	;volatile
 34822  01ADEE  D003               	goto	l11154
 34823                           
 34824                           ; BSR set to: 1
 34825                           ;daq.c: 154:    R.done = 1;
 34826  01ADF0  0E01               	movlw	1
 34827  01ADF2  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
 34828  01ADF4  0012               	return	
 34829  01ADF6                     l11154:
 34830                           
 34831                           ; BSR set to: 1
 34832                           ;daq.c: 160:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34833  01ADF6  0060  F4B0  F00C   	movff	_R+44,btemp+11	;volatile
 34834  01ADFC  EE20  F12D         	lfsr	2,_R+45	;volatile
 34835  01AE00  006F FF78  F009    	movff	postinc2,btemp+8
 34836  01AE06  006F FF74  F00A    	movff	postdec2,btemp+9
 34837  01AE0C  2A0C               	incf	(btemp+11)^0,f,c
 34838  01AE0E  D003               	goto	u1037_44
 34839  01AE10                     u1037_45:
 34840  01AE10  90D8               	bcf	status,0,c
 34841  01AE12  320A               	rrcf	(btemp+9)^0,f,c
 34842  01AE14  3209               	rrcf	(btemp+8)^0,f,c
 34843  01AE16                     u1037_44:
 34844  01AE16  2E0C               	decfsz	(btemp+11)^0,f,c
 34845  01AE18  D7FB               	goto	u1037_45
 34846  01AE1A  A009               	btfss	(btemp+8)^0,0,c
 34847  01AE1C  D7E4               	goto	l11148
 34848                           
 34849                           ;daq.c: 161:  ADCC_DischargeSampleCapacitor();
 34850  01AE1E  ECB3  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34851                           
 34852                           ; BSR set to: 62
 34853                           ;daq.c: 162:  ADCC_StartConversion(R.scan_index & 0xf);
 34854  01AE22  0101               	movlb	1	; () banked
 34855  01AE24  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34856  01AE26  0B0F               	andlw	15
 34857  01AE28  6EE6               	movwf	postinc1,c
 34858  01AE2A  EC42  F0E0         	call	_ADCC_StartConversion	;wreg free
 34859                           
 34860                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34861  01AE2E  0012               	return		;funcret
 34862  01AE30                     __end_of_adc_int_t_handler:
 34863                           	opt callstack 0
 34864                           
 34865 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34866 ;; Defined at:
 34867 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34868 ;; Parameters:    Size  Location     Type
 34869 ;;		None
 34870 ;; Auto vars:     Size  Location     Type
 34871 ;;		None
 34872 ;; Return value:  Size  Location     Type
 34873 ;;                  1  [STACK] void 
 34874 ;; Registers used:
 34875 ;;		None
 34876 ;; Tracked objects:
 34877 ;;		On entry : 3F/0
 34878 ;;		On exit  : 0/0
 34879 ;;		Unchanged: 0/0
 34880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34885 ;;Total ram usage:        0 bytes
 34886 ;; Hardware stack levels used:    1
 34887 ;; This function calls:
 34888 ;;		Nothing
 34889 ;; This function is called by:
 34890 ;;		_ADCC_Initialize
 34891 ;;		_ADCC_ISR
 34892 ;;		_ADCC_ThresholdISR
 34893 ;; This function uses a reentrant model
 34894 ;;
 34895                           
 34896                           	psect	text163
 34897  01C1B4                     __ptext163:
 34898                           	opt callstack 0
 34899  01C1B4                     _ADCC_DefaultInterruptHandler:
 34900                           	opt callstack 3
 34901                           
 34902                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34903                           
 34904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34905                           ;incstack = 0
 34906  01C1B4  0012               	return		;funcret
 34907  01C1B6                     __end_of_ADCC_DefaultInterruptHandler:
 34908                           	opt callstack 0
 34909                           
 34910 ;; *************** function _adc_int_handler *****************
 34911 ;; Defined at:
 34912 ;;		line 136 in file "daq.c"
 34913 ;; Parameters:    Size  Location     Type
 34914 ;;		None
 34915 ;; Auto vars:     Size  Location     Type
 34916 ;;		None
 34917 ;; Return value:  Size  Location     Type
 34918 ;;                  1  [STACK] void 
 34919 ;; Registers used:
 34920 ;;		None
 34921 ;; Tracked objects:
 34922 ;;		On entry : 3F/0
 34923 ;;		On exit  : 0/0
 34924 ;;		Unchanged: 0/0
 34925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34930 ;;Total ram usage:        0 bytes
 34931 ;; Hardware stack levels used:    1
 34932 ;; This function calls:
 34933 ;;		Nothing
 34934 ;; This function is called by:
 34935 ;;		_start_adc_scan
 34936 ;;		_ADCC_ISR
 34937 ;; This function uses a reentrant model
 34938 ;;
 34939                           
 34940                           	psect	text164
 34941  01C1B6                     __ptext164:
 34942                           	opt callstack 0
 34943  01C1B6                     _adc_int_handler:
 34944                           	opt callstack 3
 34945                           
 34946                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34947                           
 34948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34949                           ;incstack = 0
 34950  01C1B6  0012               	return		;funcret
 34951  01C1B8                     __end_of_adc_int_handler:
 34952                           	opt callstack 0
 34953                           
 34954 ;; *************** function _ADCC_ThresholdISR *****************
 34955 ;; Defined at:
 34956 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34957 ;; Parameters:    Size  Location     Type
 34958 ;;		None
 34959 ;; Auto vars:     Size  Location     Type
 34960 ;;		None
 34961 ;; Return value:  Size  Location     Type
 34962 ;;                  1    wreg      void 
 34963 ;; Registers used:
 34964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34965 ;; Tracked objects:
 34966 ;;		On entry : 0/0
 34967 ;;		On exit  : 0/0
 34968 ;;		Unchanged: 0/0
 34969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34972 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34973 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34974 ;;Total ram usage:        5 bytes
 34975 ;; Hardware stack levels used:    1
 34976 ;; Hardware stack levels required when called:    2
 34977 ;; This function calls:
 34978 ;;		Absolute function
 34979 ;;		_ADCC_DefaultInterruptHandler
 34980 ;;		_adc_int_t_handler
 34981 ;; This function is called by:
 34982 ;;		Interrupt level 2
 34983 ;; This function uses a non-reentrant model
 34984 ;;
 34985                           
 34986                           	psect	text165
 34987  01AF7C                     __ptext165:
 34988                           	opt callstack 0
 34989  01AF7C                     _ADCC_ThresholdISR:
 34990                           	opt callstack 2
 34991                           
 34992                           ;incstack = 0
 34993  01AF7C  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 34994  01AF82  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34995  01AF88  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34996  01AF8E  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34997  01AF94  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34998  01AF9A  EE14  F15E         	lfsr	1,___inthi_sp
 34999                           
 35000                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 35001  01AF9E  0139               	movlb	57	; () banked
 35002  01AFA0  97A1               	bcf	161,3,b	;volatile
 35003                           
 35004                           ; BSR set to: 57
 35005                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 35006  01AFA2  0100               	movlb	0	; () banked
 35007  01AFA4  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35008  01AFA6  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35009  01AFA8  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35010  01AFAA  B4D8               	btfsc	status,2,c
 35011  01AFAC  D00C               	goto	i2u1042_49
 35012                           
 35013                           ; BSR set to: 0
 35014                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 35015  01AFAE  D801               	call	i2u1042_48
 35016  01AFB0  D00A               	goto	i2u1042_49
 35017  01AFB2                     i2u1042_48:
 35018  01AFB2  0005               	push	
 35019  01AFB4  6EFA               	movwf	pclath,c
 35020  01AFB6  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35021  01AFB8  6EFD               	movwf	tosl,c
 35022  01AFBA  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35023  01AFBC  6EFE               	movwf	tosh,c
 35024  01AFBE  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35025  01AFC0  6EFF               	movwf	tosu,c
 35026  01AFC2  50FA               	movf	pclath,w,c
 35027  01AFC4  0012               	return		;indir
 35028  01AFC6                     i2u1042_49:
 35029  01AFC6  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35030  01AFCC  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35031  01AFD2  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35032  01AFD8  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35033  01AFDE  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35034  01AFE4  0011               	retfie		f
 35035  01AFE6                     __end_of_ADCC_ThresholdISR:
 35036                           	opt callstack 0
 35037                           
 35038 ;; *************** function _UART1_rx_vect_isr *****************
 35039 ;; Defined at:
 35040 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35041 ;; Parameters:    Size  Location     Type
 35042 ;;		None
 35043 ;; Auto vars:     Size  Location     Type
 35044 ;;		None
 35045 ;; Return value:  Size  Location     Type
 35046 ;;                  1    wreg      void 
 35047 ;; Registers used:
 35048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35049 ;; Tracked objects:
 35050 ;;		On entry : 0/0
 35051 ;;		On exit  : 0/0
 35052 ;;		Unchanged: 0/0
 35053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35058 ;;Total ram usage:        0 bytes
 35059 ;; Hardware stack levels used:    1
 35060 ;; Hardware stack levels required when called:    1
 35061 ;; This function calls:
 35062 ;;		Absolute function
 35063 ;;		_UART1_Receive_ISR
 35064 ;; This function is called by:
 35065 ;;		Interrupt level 2
 35066 ;; This function uses a non-reentrant model
 35067 ;;
 35068                           
 35069                           	psect	text166
 35070  01BD20                     __ptext166:
 35071                           	opt callstack 0
 35072  01BD20                     _UART1_rx_vect_isr:
 35073                           	opt callstack 3
 35074                           
 35075                           ;incstack = 0
 35076  01BD20  EE14  F15E         	lfsr	1,___inthi_sp
 35077                           
 35078                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35079  01BD24  0100               	movlb	0	; () banked
 35080  01BD26  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35081  01BD28  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35082  01BD2A  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35083  01BD2C  B4D8               	btfsc	status,2,c
 35084  01BD2E  0011               	retfie		f
 35085                           
 35086                           ; BSR set to: 0
 35087                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35088  01BD30  D801               	call	i2u1044_48
 35089  01BD32  0011               	retfie		f
 35090  01BD34                     i2u1044_48:
 35091  01BD34  0005               	push	
 35092  01BD36  6EFA               	movwf	pclath,c
 35093  01BD38  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35094  01BD3A  6EFD               	movwf	tosl,c
 35095  01BD3C  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35096  01BD3E  6EFE               	movwf	tosh,c
 35097  01BD40  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35098  01BD42  6EFF               	movwf	tosu,c
 35099  01BD44  50FA               	movf	pclath,w,c
 35100  01BD46  0012               	return		;indir
 35101  01BD48                     __end_of_UART1_rx_vect_isr:
 35102                           	opt callstack 0
 35103                           
 35104 ;; *************** function _UART1_Receive_ISR *****************
 35105 ;; Defined at:
 35106 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35107 ;; Parameters:    Size  Location     Type
 35108 ;;		None
 35109 ;; Auto vars:     Size  Location     Type
 35110 ;;		None
 35111 ;; Return value:  Size  Location     Type
 35112 ;;                  1  [STACK] void 
 35113 ;; Registers used:
 35114 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35115 ;; Tracked objects:
 35116 ;;		On entry : 3F/0
 35117 ;;		On exit  : 3F/0
 35118 ;;		Unchanged: 0/0
 35119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35124 ;;Total ram usage:        0 bytes
 35125 ;; Hardware stack levels used:    1
 35126 ;; This function calls:
 35127 ;;		Nothing
 35128 ;; This function is called by:
 35129 ;;		_UART1_Initialize
 35130 ;;		_UART1_rx_vect_isr
 35131 ;; This function uses a reentrant model
 35132 ;;
 35133                           
 35134                           	psect	text167
 35135  01BF90                     __ptext167:
 35136                           	opt callstack 0
 35137  01BF90                     _UART1_Receive_ISR:
 35138                           	opt callstack 3
 35139                           
 35140                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35141                           
 35142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35143                           ;incstack = 0
 35144  01BF90  5047               	movf	_uart1RxHead^0,w,c
 35145  01BF92  0F6C               	addlw	low _uart1RxBuffer
 35146  01BF94  6ED9               	movwf	fsr2l,c
 35147  01BF96  6ADA               	clrf	fsr2h,c
 35148  01BF98  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35149  01BF9E  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35150                           
 35151                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35152  01BFA0  0E07               	movlw	7
 35153  01BFA2  6447               	cpfsgt	_uart1RxHead^0,c
 35154  01BFA4  D001               	goto	l10722
 35155                           
 35156                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35157  01BFA6  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35158  01BFA8                     l10722:
 35159                           
 35160                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35161  01BFA8  0100               	movlb	0	; () banked
 35162  01BFAA  2BCE               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35163                           
 35164                           ; BSR set to: 0
 35165                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35166  01BFAC  0012               	return		;funcret
 35167  01BFAE                     __end_of_UART1_Receive_ISR:
 35168                           	opt callstack 0
 35169                           
 35170 ;; *************** function _UART2_tx_vect_isr *****************
 35171 ;; Defined at:
 35172 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35173 ;; Parameters:    Size  Location     Type
 35174 ;;		None
 35175 ;; Auto vars:     Size  Location     Type
 35176 ;;		None
 35177 ;; Return value:  Size  Location     Type
 35178 ;;                  1    wreg      void 
 35179 ;; Registers used:
 35180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35181 ;; Tracked objects:
 35182 ;;		On entry : 0/0
 35183 ;;		On exit  : 0/0
 35184 ;;		Unchanged: 0/0
 35185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35190 ;;Total ram usage:        0 bytes
 35191 ;; Hardware stack levels used:    1
 35192 ;; Hardware stack levels required when called:    1
 35193 ;; This function calls:
 35194 ;;		Absolute function
 35195 ;;		_UART2_Transmit_ISR
 35196 ;; This function is called by:
 35197 ;;		Interrupt level 2
 35198 ;; This function uses a non-reentrant model
 35199 ;;
 35200                           
 35201                           	psect	text168
 35202  01BD48                     __ptext168:
 35203                           	opt callstack 0
 35204  01BD48                     _UART2_tx_vect_isr:
 35205                           	opt callstack 3
 35206                           
 35207                           ; BSR set to: 0
 35208                           ;incstack = 0
 35209  01BD48  EE14  F15E         	lfsr	1,___inthi_sp
 35210                           
 35211                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35212  01BD4C  0100               	movlb	0	; () banked
 35213  01BD4E  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35214  01BD50  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35215  01BD52  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35216  01BD54  B4D8               	btfsc	status,2,c
 35217  01BD56  0011               	retfie		f
 35218                           
 35219                           ; BSR set to: 0
 35220                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35221  01BD58  D801               	call	i2u1046_48
 35222  01BD5A  0011               	retfie		f
 35223  01BD5C                     i2u1046_48:
 35224  01BD5C  0005               	push	
 35225  01BD5E  6EFA               	movwf	pclath,c
 35226  01BD60  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35227  01BD62  6EFD               	movwf	tosl,c
 35228  01BD64  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35229  01BD66  6EFE               	movwf	tosh,c
 35230  01BD68  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35231  01BD6A  6EFF               	movwf	tosu,c
 35232  01BD6C  50FA               	movf	pclath,w,c
 35233  01BD6E  0012               	return		;indir
 35234  01BD70                     __end_of_UART2_tx_vect_isr:
 35235                           	opt callstack 0
 35236                           
 35237 ;; *************** function _UART2_Transmit_ISR *****************
 35238 ;; Defined at:
 35239 ;;		line 213 in file "mcc_generated_files/uart2.c"
 35240 ;; Parameters:    Size  Location     Type
 35241 ;;		None
 35242 ;; Auto vars:     Size  Location     Type
 35243 ;;		None
 35244 ;; Return value:  Size  Location     Type
 35245 ;;                  1  [STACK] void 
 35246 ;; Registers used:
 35247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35248 ;; Tracked objects:
 35249 ;;		On entry : 3F/0
 35250 ;;		On exit  : 3B/39
 35251 ;;		Unchanged: 0/0
 35252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35257 ;;Total ram usage:        0 bytes
 35258 ;; Hardware stack levels used:    1
 35259 ;; This function calls:
 35260 ;;		Nothing
 35261 ;; This function is called by:
 35262 ;;		_UART2_Initialize
 35263 ;;		_UART2_tx_vect_isr
 35264 ;; This function uses a reentrant model
 35265 ;;
 35266                           
 35267                           	psect	text169
 35268  01BAE8                     __ptext169:
 35269                           	opt callstack 0
 35270  01BAE8                     _UART2_Transmit_ISR:
 35271                           	opt callstack 3
 35272                           
 35273                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 35274                           
 35275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35276                           ;incstack = 0
 35277  01BAE8  0E40               	movlw	64
 35278  01BAEA  6044               	cpfslt	_uart2TxBufferRemaining^0,c
 35279  01BAEC  D010               	goto	l673
 35280                           
 35281                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 35282  01BAEE  0E00               	movlw	low _uart2TxBuffer
 35283  01BAF0  2445               	addwf	_uart2TxTail^0,w,c	;volatile
 35284  01BAF2  6ED9               	movwf	fsr2l,c
 35285  01BAF4  6ADA               	clrf	fsr2h,c
 35286  01BAF6  0E03               	movlw	high _uart2TxBuffer
 35287  01BAF8  22DA               	addwfc	fsr2h,f,c
 35288  01BAFA  50DF               	movf	indf2,w,c
 35289  01BAFC  013D               	movlb	61	; () banked
 35290  01BAFE  6FD2               	movwf	210,b	;volatile
 35291                           
 35292                           ; BSR set to: 61
 35293  01BB00  2A45               	incf	_uart2TxTail^0,f,c	;volatile
 35294                           
 35295                           ; BSR set to: 61
 35296                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 35297  01BB02  0E3F               	movlw	63
 35298  01BB04  6445               	cpfsgt	_uart2TxTail^0,c
 35299  01BB06  D001               	goto	l10734
 35300                           
 35301                           ; BSR set to: 61
 35302                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 35303  01BB08  6A45               	clrf	_uart2TxTail^0,c	;volatile
 35304  01BB0A                     l10734:
 35305                           
 35306                           ; BSR set to: 61
 35307                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 35308  01BB0A  2A44               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 35309                           
 35310                           ;mcc_generated_files/uart2.c: 224:     }
 35311  01BB0C  0012               	return	
 35312  01BB0E                     l673:
 35313                           
 35314                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 35315  01BB0E  0139               	movlb	57	; () banked
 35316  01BB10  9796               	bcf	150,3,b	;volatile
 35317                           
 35318                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 35319  01BB12  0012               	return		;funcret
 35320  01BB14                     __end_of_UART2_Transmit_ISR:
 35321                           	opt callstack 0
 35322                           
 35323 ;; *************** function _UART2_rx_vect_isr *****************
 35324 ;; Defined at:
 35325 ;;		line 203 in file "mcc_generated_files/uart2.c"
 35326 ;; Parameters:    Size  Location     Type
 35327 ;;		None
 35328 ;; Auto vars:     Size  Location     Type
 35329 ;;		None
 35330 ;; Return value:  Size  Location     Type
 35331 ;;                  1    wreg      void 
 35332 ;; Registers used:
 35333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35334 ;; Tracked objects:
 35335 ;;		On entry : 0/0
 35336 ;;		On exit  : 0/0
 35337 ;;		Unchanged: 0/0
 35338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35343 ;;Total ram usage:        0 bytes
 35344 ;; Hardware stack levels used:    1
 35345 ;; Hardware stack levels required when called:    1
 35346 ;; This function calls:
 35347 ;;		Absolute function
 35348 ;;		_UART2_Receive_ISR
 35349 ;; This function is called by:
 35350 ;;		Interrupt level 2
 35351 ;; This function uses a non-reentrant model
 35352 ;;
 35353                           
 35354                           	psect	text170
 35355  01BD70                     __ptext170:
 35356                           	opt callstack 0
 35357  01BD70                     _UART2_rx_vect_isr:
 35358                           	opt callstack 3
 35359                           
 35360                           ;incstack = 0
 35361  01BD70  EE14  F15E         	lfsr	1,___inthi_sp
 35362                           
 35363                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 35364  01BD74  0100               	movlb	0	; () banked
 35365  01BD76  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35366  01BD78  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35367  01BD7A  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35368  01BD7C  B4D8               	btfsc	status,2,c
 35369  01BD7E  0011               	retfie		f
 35370                           
 35371                           ; BSR set to: 0
 35372                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 35373  01BD80  D801               	call	i2u1048_48
 35374  01BD82  0011               	retfie		f
 35375  01BD84                     i2u1048_48:
 35376  01BD84  0005               	push	
 35377  01BD86  6EFA               	movwf	pclath,c
 35378  01BD88  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35379  01BD8A  6EFD               	movwf	tosl,c
 35380  01BD8C  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35381  01BD8E  6EFE               	movwf	tosh,c
 35382  01BD90  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35383  01BD92  6EFF               	movwf	tosu,c
 35384  01BD94  50FA               	movf	pclath,w,c
 35385  01BD96  0012               	return		;indir
 35386  01BD98                     __end_of_UART2_rx_vect_isr:
 35387                           	opt callstack 0
 35388                           
 35389 ;; *************** function _UART2_Receive_ISR *****************
 35390 ;; Defined at:
 35391 ;;		line 233 in file "mcc_generated_files/uart2.c"
 35392 ;; Parameters:    Size  Location     Type
 35393 ;;		None
 35394 ;; Auto vars:     Size  Location     Type
 35395 ;;		None
 35396 ;; Return value:  Size  Location     Type
 35397 ;;                  1  [STACK] void 
 35398 ;; Registers used:
 35399 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35400 ;; Tracked objects:
 35401 ;;		On entry : 3F/0
 35402 ;;		On exit  : 3F/0
 35403 ;;		Unchanged: 0/0
 35404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35409 ;;Total ram usage:        0 bytes
 35410 ;; Hardware stack levels used:    1
 35411 ;; This function calls:
 35412 ;;		Nothing
 35413 ;; This function is called by:
 35414 ;;		_UART2_Initialize
 35415 ;;		_UART2_rx_vect_isr
 35416 ;; This function uses a reentrant model
 35417 ;;
 35418                           
 35419                           	psect	text171
 35420  01BEF8                     __ptext171:
 35421                           	opt callstack 0
 35422  01BEF8                     _UART2_Receive_ISR:
 35423                           	opt callstack 3
 35424                           
 35425                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 35426                           
 35427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35428                           ;incstack = 0
 35429  01BEF8  0E00               	movlw	low _uart2RxBuffer
 35430  01BEFA  2443               	addwf	_uart2RxHead^0,w,c	;volatile
 35431  01BEFC  6ED9               	movwf	fsr2l,c
 35432  01BEFE  6ADA               	clrf	fsr2h,c
 35433  01BF00  0E04               	movlw	high _uart2RxBuffer
 35434  01BF02  22DA               	addwfc	fsr2h,f,c
 35435  01BF04  006F F743 FFDF     	movff	15824,indf2	;volatile
 35436  01BF0A  2A43               	incf	_uart2RxHead^0,f,c	;volatile
 35437                           
 35438                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 35439  01BF0C  2843               	incf	_uart2RxHead^0,w,c
 35440  01BF0E  B4D8               	btfsc	status,2,c
 35441                           
 35442                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 35443  01BF10  6A43               	clrf	_uart2RxHead^0,c	;volatile
 35444                           
 35445                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 35446  01BF12  0100               	movlb	0	; () banked
 35447  01BF14  2BCB               	incf	_uart2RxCount& (0+255),f,b	;volatile
 35448                           
 35449                           ; BSR set to: 0
 35450                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35451  01BF16  0012               	return		;funcret
 35452  01BF18                     __end_of_UART2_Receive_ISR:
 35453                           	opt callstack 0
 35454                           
 35455 ;; *************** function _TMR6_ISR *****************
 35456 ;; Defined at:
 35457 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 35458 ;; Parameters:    Size  Location     Type
 35459 ;;		None
 35460 ;; Auto vars:     Size  Location     Type
 35461 ;;		None
 35462 ;; Return value:  Size  Location     Type
 35463 ;;                  1    wreg      void 
 35464 ;; Registers used:
 35465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35466 ;; Tracked objects:
 35467 ;;		On entry : 0/0
 35468 ;;		On exit  : 0/0
 35469 ;;		Unchanged: 0/0
 35470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35475 ;;Total ram usage:        1 bytes
 35476 ;; Hardware stack levels used:    1
 35477 ;; Hardware stack levels required when called:    2
 35478 ;; This function calls:
 35479 ;;		_TMR6_CallBack
 35480 ;; This function is called by:
 35481 ;;		Interrupt level 2
 35482 ;; This function uses a non-reentrant model
 35483 ;;
 35484                           
 35485                           	psect	text172
 35486  01BFE4                     __ptext172:
 35487                           	opt callstack 0
 35488  01BFE4                     _TMR6_ISR:
 35489                           	opt callstack 2
 35490                           
 35491                           ; BSR set to: 0
 35492                           ;incstack = 0
 35493  01BFE4  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 35494  01BFEA  EE14  F15E         	lfsr	1,___inthi_sp
 35495                           
 35496                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 35497  01BFEE  0139               	movlb	57	; () banked
 35498  01BFF0  91A9               	bcf	169,0,b	;volatile
 35499                           
 35500                           ; BSR set to: 57
 35501                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 35502  01BFF2  EC38  F0DF         	call	_TMR6_CallBack	;wreg free
 35503  01BFF6  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 35504  01BFFC  0011               	retfie		f
 35505  01BFFE                     __end_of_TMR6_ISR:
 35506                           	opt callstack 0
 35507                           
 35508 ;; *************** function _TMR6_CallBack *****************
 35509 ;; Defined at:
 35510 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 35511 ;; Parameters:    Size  Location     Type
 35512 ;;		None
 35513 ;; Auto vars:     Size  Location     Type
 35514 ;;		None
 35515 ;; Return value:  Size  Location     Type
 35516 ;;                  1  [STACK] void 
 35517 ;; Registers used:
 35518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35519 ;; Tracked objects:
 35520 ;;		On entry : 3F/39
 35521 ;;		On exit  : 0/0
 35522 ;;		Unchanged: 0/0
 35523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35528 ;;Total ram usage:        0 bytes
 35529 ;; Hardware stack levels used:    1
 35530 ;; Hardware stack levels required when called:    1
 35531 ;; This function calls:
 35532 ;;		Absolute function
 35533 ;;		_TMR6_DefaultInterruptHandler
 35534 ;; This function is called by:
 35535 ;;		_TMR6_ISR
 35536 ;; This function uses a reentrant model
 35537 ;;
 35538                           
 35539                           	psect	text173
 35540  01BE70                     __ptext173:
 35541                           	opt callstack 0
 35542  01BE70                     _TMR6_CallBack:
 35543                           	opt callstack 2
 35544                           
 35545                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 35546                           
 35547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35548                           ;incstack = 0
 35549  01BE70  0100               	movlb	0	; () banked
 35550  01BE72  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35551  01BE74  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35552  01BE76  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35553  01BE78  B4D8               	btfsc	status,2,c
 35554  01BE7A  0012               	return	
 35555                           
 35556                           ; BSR set to: 0
 35557                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 35558  01BE7C  D801               	call	u1005_48
 35559  01BE7E  0012               	return	
 35560  01BE80                     u1005_48:
 35561  01BE80  0005               	push	
 35562  01BE82  6EFA               	movwf	pclath,c
 35563  01BE84  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35564  01BE86  6EFD               	movwf	tosl,c
 35565  01BE88  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35566  01BE8A  6EFE               	movwf	tosh,c
 35567  01BE8C  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35568  01BE8E  6EFF               	movwf	tosu,c
 35569  01BE90  50FA               	movf	pclath,w,c
 35570  01BE92  0012               	return		;indir
 35571  01BE94                     __end_of_TMR6_CallBack:
 35572                           	opt callstack 0
 35573                           
 35574 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 35575 ;; Defined at:
 35576 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 35577 ;; Parameters:    Size  Location     Type
 35578 ;;		None
 35579 ;; Auto vars:     Size  Location     Type
 35580 ;;  i               1  [STACK] unsigned char 
 35581 ;; Return value:  Size  Location     Type
 35582 ;;                  1  [STACK] void 
 35583 ;; Registers used:
 35584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 35585 ;; Tracked objects:
 35586 ;;		On entry : 3F/0
 35587 ;;		On exit  : 0/0
 35588 ;;		Unchanged: 0/0
 35589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35594 ;;Total ram usage:        0 bytes
 35595 ;; Hardware stack levels used:    1
 35596 ;; This function calls:
 35597 ;;		Nothing
 35598 ;; This function is called by:
 35599 ;;		_TMR6_Initialize
 35600 ;;		_TMR6_CallBack
 35601 ;; This function uses a reentrant model
 35602 ;;
 35603                           
 35604                           	psect	text174
 35605  01B386                     __ptext174:
 35606                           	opt callstack 0
 35607  01B386                     _TMR6_DefaultInterruptHandler:
 35608                           	opt callstack 0
 35609                           
 35610                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35611  01B386  52E6               	movf	postinc1,f,c
 35612                           
 35613                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 35614                           ;stkvar	_i @ sp[(-1)+0]
 35615                           
 35616                           ;incstack = 0
 35617  01B388  0EFF               	movlw	-1
 35618  01B38A  6AE3               	clrf	plusw1,c
 35619  01B38C                     l10346:
 35620                           
 35621                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 35622                           ;stkvar	_i @ sp[(-1)+0]
 35623  01B38C  0EFF               	movlw	-1
 35624  01B38E  50E3               	movf	plusw1,w,c
 35625  01B390  0D02               	mullw	2
 35626  01B392  0E7D               	movlw	low _tickCount
 35627  01B394  24F3               	addwf	243,w,c
 35628  01B396  6ED9               	movwf	fsr2l,c
 35629  01B398  0E02               	movlw	high _tickCount
 35630  01B39A  20F4               	addwfc	prodh,w,c
 35631  01B39C  6EDA               	movwf	fsr2h,c
 35632  01B39E  50DE               	movf	postinc2,w,c
 35633  01B3A0  10DE               	iorwf	postinc2,w,c
 35634  01B3A2  B4D8               	btfsc	status,2,c
 35635  01B3A4  D00C               	goto	l10350
 35636                           
 35637                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 35638                           ;stkvar	_i @ sp[(-1)+0]
 35639  01B3A6  0EFF               	movlw	-1
 35640  01B3A8  50E3               	movf	plusw1,w,c
 35641  01B3AA  0D02               	mullw	2
 35642  01B3AC  0E7D               	movlw	low _tickCount
 35643  01B3AE  24F3               	addwf	243,w,c
 35644  01B3B0  6ED9               	movwf	fsr2l,c
 35645  01B3B2  0E02               	movlw	high _tickCount
 35646  01B3B4  20F4               	addwfc	prodh,w,c
 35647  01B3B6  6EDA               	movwf	fsr2h,c
 35648  01B3B8  06DE               	decf	postinc2,f,c
 35649  01B3BA  0E00               	movlw	0
 35650  01B3BC  5ADD               	subwfb	postdec2,f,c
 35651  01B3BE                     l10350:
 35652                           
 35653                           ;mcc_generated_files/tmr6.c: 207:  }
 35654                           ;stkvar	_i @ sp[(-1)+0]
 35655  01B3BE  0EFF               	movlw	-1
 35656  01B3C0  2AE3               	incf	plusw1,f,c
 35657                           
 35658                           ;stkvar	_i @ sp[(-1)+0]
 35659  01B3C2  0EFF               	movlw	-1
 35660  01B3C4  006F FF8C  F001    	movff	plusw1,btemp
 35661  01B3CA  0E0C               	movlw	12
 35662  01B3CC  6401               	cpfsgt	btemp^0,c
 35663  01B3CE  D7DE               	goto	l10346
 35664                           
 35665                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35666  01B3D0  52E5               	movf	postdec1,f,c
 35667  01B3D2  0012               	return		;funcret
 35668  01B3D4                     __end_of_TMR6_DefaultInterruptHandler:
 35669                           	opt callstack 0
 35670                           
 35671 ;; *************** function _DMA1_DMASCNT_ISR *****************
 35672 ;; Defined at:
 35673 ;;		line 126 in file "mcc_generated_files/dma1.c"
 35674 ;; Parameters:    Size  Location     Type
 35675 ;;		None
 35676 ;; Auto vars:     Size  Location     Type
 35677 ;;		None
 35678 ;; Return value:  Size  Location     Type
 35679 ;;                  1    wreg      void 
 35680 ;; Registers used:
 35681 ;;		None
 35682 ;; Tracked objects:
 35683 ;;		On entry : 0/0
 35684 ;;		On exit  : 3F/0
 35685 ;;		Unchanged: 0/0
 35686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35691 ;;Total ram usage:        0 bytes
 35692 ;; Hardware stack levels used:    1
 35693 ;; This function calls:
 35694 ;;		Nothing
 35695 ;; This function is called by:
 35696 ;;		Interrupt level 2
 35697 ;; This function uses a non-reentrant model
 35698 ;;
 35699                           
 35700                           	psect	text175
 35701  01C120                     __ptext175:
 35702                           	opt callstack 0
 35703  01C120                     _DMA1_DMASCNT_ISR:
 35704                           	opt callstack 4
 35705                           
 35706                           ;incstack = 0
 35707  01C120  EE14  F15E         	lfsr	1,___inthi_sp
 35708                           
 35709                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 35710  01C124  0139               	movlb	57	; () banked
 35711  01C126  91A2               	bcf	162,0,b	;volatile
 35712                           
 35713                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 35714  01C128  0100               	movlb	0	; () banked
 35715  01C12A  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 35716                           
 35717                           ; BSR set to: 0
 35718  01C12C  0011               	retfie		f
 35719  01C12E                     __end_of_DMA1_DMASCNT_ISR:
 35720                           	opt callstack 0
 35721                           
 35722 ;; *************** function _DMA1_DMADCNT_ISR *****************
 35723 ;; Defined at:
 35724 ;;		line 133 in file "mcc_generated_files/dma1.c"
 35725 ;; Parameters:    Size  Location     Type
 35726 ;;		None
 35727 ;; Auto vars:     Size  Location     Type
 35728 ;;		None
 35729 ;; Return value:  Size  Location     Type
 35730 ;;                  1    wreg      void 
 35731 ;; Registers used:
 35732 ;;		None
 35733 ;; Tracked objects:
 35734 ;;		On entry : 0/0
 35735 ;;		On exit  : 3F/39
 35736 ;;		Unchanged: 0/0
 35737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35742 ;;Total ram usage:        0 bytes
 35743 ;; Hardware stack levels used:    1
 35744 ;; This function calls:
 35745 ;;		Nothing
 35746 ;; This function is called by:
 35747 ;;		Interrupt level 2
 35748 ;; This function uses a non-reentrant model
 35749 ;;
 35750                           
 35751                           	psect	text176
 35752  01C144                     __ptext176:
 35753                           	opt callstack 0
 35754  01C144                     _DMA1_DMADCNT_ISR:
 35755                           	opt callstack 4
 35756                           
 35757                           ; BSR set to: 0
 35758                           ;incstack = 0
 35759  01C144  EE14  F15E         	lfsr	1,___inthi_sp
 35760                           
 35761                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 35762  01C148  0139               	movlb	57	; () banked
 35763  01C14A  93A2               	bcf	162,1,b	;volatile
 35764                           
 35765                           ; BSR set to: 57
 35766  01C14C  0011               	retfie		f
 35767  01C14E                     __end_of_DMA1_DMADCNT_ISR:
 35768                           	opt callstack 0
 35769                           
 35770 ;; *************** function _DMA1_DMAA_ISR *****************
 35771 ;; Defined at:
 35772 ;;		line 143 in file "mcc_generated_files/dma1.c"
 35773 ;; Parameters:    Size  Location     Type
 35774 ;;		None
 35775 ;; Auto vars:     Size  Location     Type
 35776 ;;		None
 35777 ;; Return value:  Size  Location     Type
 35778 ;;                  1    wreg      void 
 35779 ;; Registers used:
 35780 ;;		None
 35781 ;; Tracked objects:
 35782 ;;		On entry : 0/0
 35783 ;;		On exit  : 3F/39
 35784 ;;		Unchanged: 0/0
 35785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35790 ;;Total ram usage:        0 bytes
 35791 ;; Hardware stack levels used:    1
 35792 ;; This function calls:
 35793 ;;		Nothing
 35794 ;; This function is called by:
 35795 ;;		Interrupt level 2
 35796 ;; This function uses a non-reentrant model
 35797 ;;
 35798                           
 35799                           	psect	text177
 35800  01C150                     __ptext177:
 35801                           	opt callstack 0
 35802  01C150                     _DMA1_DMAA_ISR:
 35803                           	opt callstack 4
 35804                           
 35805                           ; BSR set to: 57
 35806                           ;incstack = 0
 35807  01C150  EE14  F15E         	lfsr	1,___inthi_sp
 35808                           
 35809                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 35810  01C154  0139               	movlb	57	; () banked
 35811  01C156  97A2               	bcf	162,3,b	;volatile
 35812                           
 35813                           ; BSR set to: 57
 35814  01C158  0011               	retfie		f
 35815  01C15A                     __end_of_DMA1_DMAA_ISR:
 35816                           	opt callstack 0
 35817                           
 35818 ;; *************** function _DMA1_DMAOR_ISR *****************
 35819 ;; Defined at:
 35820 ;;		line 154 in file "mcc_generated_files/dma1.c"
 35821 ;; Parameters:    Size  Location     Type
 35822 ;;		None
 35823 ;; Auto vars:     Size  Location     Type
 35824 ;;		None
 35825 ;; Return value:  Size  Location     Type
 35826 ;;                  1    wreg      void 
 35827 ;; Registers used:
 35828 ;;		None
 35829 ;; Tracked objects:
 35830 ;;		On entry : 0/0
 35831 ;;		On exit  : 3F/39
 35832 ;;		Unchanged: 0/0
 35833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35838 ;;Total ram usage:        0 bytes
 35839 ;; Hardware stack levels used:    1
 35840 ;; This function calls:
 35841 ;;		Nothing
 35842 ;; This function is called by:
 35843 ;;		Interrupt level 2
 35844 ;; This function uses a non-reentrant model
 35845 ;;
 35846                           
 35847                           	psect	text178
 35848  01C15C                     __ptext178:
 35849                           	opt callstack 0
 35850  01C15C                     _DMA1_DMAOR_ISR:
 35851                           	opt callstack 4
 35852                           
 35853                           ; BSR set to: 57
 35854                           ;incstack = 0
 35855  01C15C  EE14  F15E         	lfsr	1,___inthi_sp
 35856                           
 35857                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 35858  01C160  0139               	movlb	57	; () banked
 35859  01C162  95A2               	bcf	162,2,b	;volatile
 35860                           
 35861                           ; BSR set to: 57
 35862  01C164  0011               	retfie		f
 35863  01C166                     __end_of_DMA1_DMAOR_ISR:
 35864                           	opt callstack 0
 35865                           
 35866                           ;
 35867                           ; Interrupt Vector Table @ 0x8
 35868                           ;
 35869                           
 35870                           	psect	ivt0x8
 35871  000008                     __pivt0x8:
 35872                           	opt callstack 0
 35873  000008                     ivt0x8_base:
 35874                           	opt callstack 0
 35875                           
 35876                           ; Vector 0 : SWINT
 35877  000008  706A               	dw	_Default_ISR shr (0+2)
 35878                           
 35879                           ; Vector 1 : HLVD
 35880  00000A  706A               	dw	_Default_ISR shr (0+2)
 35881                           
 35882                           ; Vector 2 : OSF
 35883  00000C  706A               	dw	_Default_ISR shr (0+2)
 35884                           
 35885                           ; Vector 3 : CSW
 35886  00000E  706A               	dw	_Default_ISR shr (0+2)
 35887                           
 35888                           ; Vector 4 : NVM
 35889  000010  706A               	dw	_Default_ISR shr (0+2)
 35890                           
 35891                           ; Vector 5 : SCAN
 35892  000012  706A               	dw	_Default_ISR shr (0+2)
 35893                           
 35894                           ; Vector 6 : CRC
 35895  000014  706A               	dw	_Default_ISR shr (0+2)
 35896                           
 35897                           ; Vector 7 : IOC
 35898  000016  706A               	dw	_Default_ISR shr (0+2)
 35899                           
 35900                           ; Vector 8 : INT0
 35901  000018  7044               	dw	_INT0_ISR shr (0+2)
 35902                           
 35903                           ; Vector 9 : ZCD
 35904  00001A  706A               	dw	_Default_ISR shr (0+2)
 35905                           
 35906                           ; Vector 10 : AD
 35907  00001C  6EAF               	dw	_ADCC_ISR shr (0+2)
 35908                           
 35909                           ; Vector 11 : ADT
 35910  00001E  6BDF               	dw	_ADCC_ThresholdISR shr (0+2)
 35911                           
 35912                           ; Vector 12 : CMP1
 35913  000020  706A               	dw	_Default_ISR shr (0+2)
 35914                           
 35915                           ; Vector 13 : SMT1
 35916  000022  706A               	dw	_Default_ISR shr (0+2)
 35917                           
 35918                           ; Vector 14 : SMT1PRA
 35919  000024  706A               	dw	_Default_ISR shr (0+2)
 35920                           
 35921                           ; Vector 15 : SMT1PRW
 35922  000026  706A               	dw	_Default_ISR shr (0+2)
 35923                           
 35924                           ; Vector 16 : DMA1SCNT
 35925  000028  7048               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35926                           
 35927                           ; Vector 17 : DMA1DCNT
 35928  00002A  7051               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35929                           
 35930                           ; Vector 18 : DMA1OR
 35931  00002C  7057               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35932                           
 35933                           ; Vector 19 : DMA1A
 35934  00002E  7054               	dw	_DMA1_DMAA_ISR shr (0+2)
 35935                           
 35936                           ; Vector 20 : SPI1RX
 35937  000030  706A               	dw	_Default_ISR shr (0+2)
 35938                           
 35939                           ; Vector 21 : SPI1TX
 35940  000032  706A               	dw	_Default_ISR shr (0+2)
 35941                           
 35942                           ; Vector 22 : SPI1
 35943  000034  706A               	dw	_Default_ISR shr (0+2)
 35944                           
 35945                           ; Vector 23 : I2C1RX
 35946  000036  706A               	dw	_Default_ISR shr (0+2)
 35947                           
 35948                           ; Vector 24 : I2C1TX
 35949  000038  706A               	dw	_Default_ISR shr (0+2)
 35950                           
 35951                           ; Vector 25 : I2C1
 35952  00003A  706A               	dw	_Default_ISR shr (0+2)
 35953                           
 35954                           ; Vector 26 : I2C1E
 35955  00003C  706A               	dw	_Default_ISR shr (0+2)
 35956                           
 35957                           ; Vector 27 : U1RX
 35958  00003E  6F48               	dw	_UART1_rx_vect_isr shr (0+2)
 35959                           
 35960                           ; Vector 28 : U1TX
 35961  000040  706A               	dw	_Default_ISR shr (0+2)
 35962                           
 35963                           ; Vector 29 : U1E
 35964  000042  706A               	dw	_Default_ISR shr (0+2)
 35965                           
 35966                           ; Vector 30 : U1
 35967  000044  706A               	dw	_Default_ISR shr (0+2)
 35968                           
 35969                           ; Vector 31 : TMR0
 35970  000046  706A               	dw	_Default_ISR shr (0+2)
 35971                           
 35972                           ; Vector 32 : TMR1
 35973  000048  706A               	dw	_Default_ISR shr (0+2)
 35974                           
 35975                           ; Vector 33 : TMR1G
 35976  00004A  706A               	dw	_Default_ISR shr (0+2)
 35977                           
 35978                           ; Vector 34 : TMR2
 35979  00004C  706A               	dw	_Default_ISR shr (0+2)
 35980                           
 35981                           ; Vector 35 : CCP1
 35982  00004E  706A               	dw	_Default_ISR shr (0+2)
 35983                           
 35984                           ; Vector 36 : Undefined
 35985  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35986                           
 35987                           ; Vector 37 : NCO1
 35988  000052  706A               	dw	_Default_ISR shr (0+2)
 35989                           
 35990                           ; Vector 38 : CWG1
 35991  000054  706A               	dw	_Default_ISR shr (0+2)
 35992                           
 35993                           ; Vector 39 : CLC1
 35994  000056  706A               	dw	_Default_ISR shr (0+2)
 35995                           
 35996                           ; Vector 40 : INT1
 35997  000058  6E07               	dw	_INT1_ISR shr (0+2)
 35998                           
 35999                           ; Vector 41 : CMP2
 36000  00005A  706A               	dw	_Default_ISR shr (0+2)
 36001                           
 36002                           ; Vector 42 : DMA2SCNT
 36003  00005C  706A               	dw	_Default_ISR shr (0+2)
 36004                           
 36005                           ; Vector 43 : DMA2DCNT
 36006  00005E  706A               	dw	_Default_ISR shr (0+2)
 36007                           
 36008                           ; Vector 44 : DMA2OR
 36009  000060  706A               	dw	_Default_ISR shr (0+2)
 36010                           
 36011                           ; Vector 45 : DMA2A
 36012  000062  706A               	dw	_Default_ISR shr (0+2)
 36013                           
 36014                           ; Vector 46 : I2C2RX
 36015  000064  706A               	dw	_Default_ISR shr (0+2)
 36016                           
 36017                           ; Vector 47 : I2C2TX
 36018  000066  706A               	dw	_Default_ISR shr (0+2)
 36019                           
 36020                           ; Vector 48 : I2C2
 36021  000068  706A               	dw	_Default_ISR shr (0+2)
 36022                           
 36023                           ; Vector 49 : I2C2E
 36024  00006A  706A               	dw	_Default_ISR shr (0+2)
 36025                           
 36026                           ; Vector 50 : U2RX
 36027  00006C  6F5C               	dw	_UART2_rx_vect_isr shr (0+2)
 36028                           
 36029                           ; Vector 51 : U2TX
 36030  00006E  6F52               	dw	_UART2_tx_vect_isr shr (0+2)
 36031                           
 36032                           ; Vector 52 : U2E
 36033  000070  706A               	dw	_Default_ISR shr (0+2)
 36034                           
 36035                           ; Vector 53 : U2
 36036  000072  706A               	dw	_Default_ISR shr (0+2)
 36037                           
 36038                           ; Vector 54 : TMR3
 36039  000074  644C               	dw	_TMR3_ISR shr (0+2)
 36040                           
 36041                           ; Vector 55 : TMR3G
 36042  000076  706A               	dw	_Default_ISR shr (0+2)
 36043                           
 36044                           ; Vector 56 : TMR4
 36045  000078  706A               	dw	_Default_ISR shr (0+2)
 36046                           
 36047                           ; Vector 57 : CCP2
 36048  00007A  706A               	dw	_Default_ISR shr (0+2)
 36049                           
 36050                           ; Vector 58 : Undefined
 36051  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36052                           
 36053                           ; Vector 59 : CWG2
 36054  00007E  706A               	dw	_Default_ISR shr (0+2)
 36055                           
 36056                           ; Vector 60 : CLC2
 36057  000080  706A               	dw	_Default_ISR shr (0+2)
 36058                           
 36059                           ; Vector 61 : INT2
 36060  000082  706A               	dw	_Default_ISR shr (0+2)
 36061                           
 36062                           ; Vector 62 : Undefined
 36063  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36064                           
 36065                           ; Vector 63 : Undefined
 36066  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36067                           
 36068                           ; Vector 64 : Undefined
 36069  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36070                           
 36071                           ; Vector 65 : Undefined
 36072  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36073                           
 36074                           ; Vector 66 : Undefined
 36075  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36076                           
 36077                           ; Vector 67 : Undefined
 36078  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36079                           
 36080                           ; Vector 68 : Undefined
 36081  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36082                           
 36083                           ; Vector 69 : Undefined
 36084  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36085                           
 36086                           ; Vector 70 : TMR5
 36087  000094  6876               	dw	_TMR5_ISR shr (0+2)
 36088                           
 36089                           ; Vector 71 : TMR5G
 36090  000096  706A               	dw	_Default_ISR shr (0+2)
 36091                           
 36092                           ; Vector 72 : TMR6
 36093  000098  6FF9               	dw	_TMR6_ISR shr (0+2)
 36094                           
 36095                           ; Vector 73 : CCP3
 36096  00009A  706A               	dw	_Default_ISR shr (0+2)
 36097                           
 36098                           ; Vector 74 : CWG3
 36099  00009C  706A               	dw	_Default_ISR shr (0+2)
 36100                           
 36101                           ; Vector 75 : CLC3
 36102  00009E  706A               	dw	_Default_ISR shr (0+2)
 36103                           
 36104                           ; Vector 76 : Undefined
 36105  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36106                           
 36107                           ; Vector 77 : Undefined
 36108  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36109                           
 36110                           ; Vector 78 : Undefined
 36111  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36112                           
 36113                           ; Vector 79 : Undefined
 36114  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36115                           
 36116                           ; Vector 80 : CCP4
 36117  0000A8  706A               	dw	_Default_ISR shr (0+2)
 36118                           
 36119                           ; Vector 81 : CLC4
 36120  0000AA  706A               	dw	_Default_ISR shr (0+2)
 36121  0000AC                     ivt0x8_undefint:
 36122                           	opt callstack 0
 36123  0000AC  00FF               	reset	
 36124                           
 36125                           	psect	text179
 36126  000000                     __ptext179:
 36127                           	opt callstack 0
 36128                           
 36129                           	psect	rparam
 36130  0000                     
 36131                           	psect	temp
 36132  000001                     btemp:
 36133                           	opt callstack 0
 36134  000001                     	ds	32
 36135  0000                     wtemp0	set	btemp
 36136  0000                     wtemp1	set	btemp+2
 36137  0000                     wtemp2	set	btemp+4
 36138  0000                     wtemp3	set	btemp+6
 36139  0000                     wtemp4	set	btemp+8
 36140  0000                     wtemp5	set	btemp+10
 36141  0000                     wtemp8	set	btemp+1
 36142  0000                     ttemp0	set	btemp
 36143  0000                     ttemp1	set	btemp+3
 36144  0000                     ttemp2	set	btemp+6
 36145  0000                     ttemp3	set	btemp+9
 36146  0000                     ttemp5	set	btemp+1
 36147  0000                     ttemp6	set	btemp+4
 36148  0000                     ttemp7	set	btemp+8
 36149  0000                     ltemp0	set	btemp
 36150  0000                     ltemp1	set	btemp+4
 36151  0000                     ltemp2	set	btemp+8
 36152  0000                     lltemp0	set	btemp
 36153  0000                     lltemp1	set	btemp+8
 36154  0000                     lltemp2	set	btemp+16
 36155  0000                     lltemp3	set	btemp+24
 36156                           tosu	equ	0x3FFF
 36157                           tosh	equ	0x3FFE
 36158                           tosl	equ	0x3FFD
 36159                           stkptr	equ	0x3FFC
 36160                           pclatu	equ	0x3FFB
 36161                           pclath	equ	0x3FFA
 36162                           pcl	equ	0x3FF9
 36163                           tblptru	equ	0x3FF8
 36164                           tblptrh	equ	0x3FF7
 36165                           tblptrl	equ	0x3FF6
 36166                           tablat	equ	0x3FF5
 36167                           prodh	equ	0x3FF4
 36168                           prodl	equ	0x3FF3
 36169                           indf0	equ	0x3FEF
 36170                           postinc0	equ	0x3FEE
 36171                           postdec0	equ	0x3FED
 36172                           preinc0	equ	0x3FEC
 36173                           plusw0	equ	0x3FEB
 36174                           fsr0h	equ	0x3FEA
 36175                           fsr0l	equ	0x3FE9
 36176                           wreg	equ	0x3FE8
 36177                           indf1	equ	0x3FE7
 36178                           postinc1	equ	0x3FE6
 36179                           postdec1	equ	0x3FE5
 36180                           preinc1	equ	0x3FE4
 36181                           plusw1	equ	0x3FE3
 36182                           fsr1h	equ	0x3FE2
 36183                           fsr1l	equ	0x3FE1
 36184                           bsr	equ	0x3FE0
 36185                           indf2	equ	0x3FDF
 36186                           postinc2	equ	0x3FDE
 36187                           postdec2	equ	0x3FDD
 36188                           preinc2	equ	0x3FDC
 36189                           plusw2	equ	0x3FDB
 36190                           fsr2h	equ	0x3FDA
 36191                           fsr2l	equ	0x3FD9
 36192                           status	equ	0x3FD8


Data Sizes:
    Strings     1064
    Constant    492
    Data        1064
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     239
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6155_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4592tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  478424
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10948
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         9     5      4     687
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
       ___fltol
       ___xxtofl
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     460      58        0.0%
DATA                 0      0     96D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jan  5 18:43:17 2020

                     _SPI1_Exchange8bit BF18                __end_of_set_display_info BF90  
                                     _C 06FF                                       _D 082A  
                                     _H 00F7                                       _P 009E  
                                     _R 0100                                       _S 0254  
                                     _T FABB                                       _V 0130  
      __end_of_TMR5_SetInterruptHandler BC56            __end_of_start_switch_handler BEF8  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBC3                  __end_of_FVR_Initialize C18E  
                        _check_day_time 881E                             __CFG_LVP$ON 000000  
                                   l169 C06A                                     l807 BF26  
                                   l673 BB0E                                     _GIE 01FE97  
                                   _abs B588                                     _pad 9AE6  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C016  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack BE4C  
                     _update_adc_result B85A                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 011A                           _INT1_CallBack BDE0  
                          __CFG_ZCD$OFF 000000                                    l1002 B7D4  
                                  l2033 3A4C                                    l1340 18FE  
                                  l1324 12A2                                    l2037 3D52  
                                  l3013 4586                                    l1190 B814  
                                  l1350 19A0                                    l1342 1904  
                                  l2223 066A                                    l2312 60EA  
                                  l1360 1BA6                                    l1361 1DD0  
                                  l2138 9B42                                    l3115 7B9C  
                                  l1603 B91C                         _timer3ReloadVal 00C4  
                                  l3053 8658                                    l2158 58B8  
                                  l2238 0B1A                                    l1366 2360  
                                  l2079 73F0                                    l2194 123A  
                                  l2362 3342                                    l1459 B238  
                                  l3084 B5C8                                    l3076 8B4A  
                                  l2276 74DE                                    l1662 B8B0  
                                  l1719 BF8C                                    l1671 82FE  
                                  l1832 8814                                    l1584 A7DA  
                                  l3184 98AA                                    l1672 845A  
                                  l2297 6810                                    l3451 8242  
                                  l1588 AAF4                                    l1781 57D4  
                                  l2654 A51C                    _ADCC_StartConversion C084  
                                  l1679 9D06                                    l2665 9124  
                                  l2658 9050                                    l3466 ADA4  
                                  l1892 89B4                                    l2932 4D42  
                                  l2692 8FC2                                    l1958 AC1A  
                                  l3479 AD20                                    l1967 9F12  
                                  l1879 A104                                    l1896 89AC  
                                  l2944 4BD2                                    l8000 B5B8  
                                  l8014 8AE8                                    l8200 4DE2  
                                  l8120 7768                                    l8024 8B42  
                                  l2977 52BC                                    l8114 7714  
                                  l8018 8AEC                                    l8042 AD94  
                                  l8300 5182                                    l8220 4EC0  
                                  l8204 4DF8                                    l8214 4E80  
                                  l8206 4E28                                    l8126 77AE  
                                  l8070 669C                                    l8320 5238  
                                  l8304 5188                                    l8232 4F44  
                                  l8224 4ED6                                    l8080 67A2  
                                  l8072 66EC                                    l8056 657E  
                                  l8314 51FC                                    l8226 4F06  
                                  l8138 7880                                    l8332 5290  
                                  l8076 6734                                    l8350 3DBC  
                                  l8334 52A0                                    l8326 5268  
                                  l8246 4F98                                    l8238 4F7E  
                                  l8174 7F7E                                    l8166 7ED2  
                                  l8158 7E4A                                    l8360 3E32  
                                  l8280 50F6                                    l8272 50C4  
                                  l8264 505E                                    l8256 5028  
                                  l9312 794C                                    l8512 92B6  
                                  l8600 A51A                                    l7802 494E  
                                  l7722 4626                                    l8290 5138  
                                  l8266 5070                                    l8274 50C8  
                                  l8194 4DA2                                    l9330 7A26  
                                  l9322 79E2                                    l9314 796E  
                                  l8098 AD10                                    l8444 4396  
                                  l8356 3DFC                                    l7804 4960  
                                  l7812 499A                                    l7740 46D6  
                                  l7716 45E6                                    l9332 7A4A  
                                  l8524 92EC                                    l8462 440C  
                                  l8438 437A                                    l8374 3ECA  
                                  l8358 3E02                                    l7902 4C9E  
                                  l7830 4A36                                    l7750 472C  
                                  l7734 46A4                                    l7726 463C  
                                  l8614 909E                                    l8286 5112  
                                  l9334 7A88                                    l8518 92CC  
                                  l8472 4480                                    l8448 43BC  
                                  l8376 3ED0                                    l8368 3E8A  
                                  l7912 4CCA                                    l7832 4A48  
                                  l7840 4A84                                    l7808 496A  
                                  l7752 475C                                    l7728 466C  
                                  l8608 900E                                    l9328 7A0E  
                                  l8490 4534                                    l8482 44F0  
                                  l8458 4406                                    l8386 3F22  
                                  l8378 3F00                                    l7746 4716  
                                  l8626 9122                                    l8618 90EC  
                                  l9338 7AF0                                    l7690 A978  
                                  l8546 93C6                                    l8538 9392  
                                  l8562 9A00                                    l8634 B486  
                                  l8492 454E                                    l8476 44C6  
                                  l7924 4D22                                    l7916 4CE2  
                                  l7852 4B5C                                    l7836 4A52  
                                  l8732 B324                                    l9348 7B8C  
                                  l8660 8F2E                                    l8644 8EAC  
                                  l9364 80B4                                    l8716 9608  
                                  l8708 955C                                    l7918 4CF2  
                                  l7870 4BF4                                    l7862 4BB6  
                                  l7854 4B82                                    l7758 477E  
                                  l9630 8514                                    l9622 84A8  
                                  l9702 558A                                    l8566 9A18  
                                  l8558 99EE                                    l8670 8F70  
                                  l8662 8F4A                                    l9366 8120  
                                  l7872 4C06                                    l9632 8522  
                                  l9720 57A2                                    l7688 A956  
                                  l8584 9ACC                                    l8576 9A98  
                                  l8592 A4A4                                    l7890 4C40  
                                  l9642 8584                                    l9634 8538  
                                  l9714 5706                                    l9706 5626  
                                  l7876 4C12                                    l7788 48BC  
                                  l9644 85A2                                    l9636 8556  
                                  l8596 A4E6                                    l8668 8F5A  
                                  l8684 8D28                                    l7886 4C3A  
                                  l7798 492E                                    l9654 85D6  
                                  l9646 85B8                                    l9664 8638  
                                  l9680 52F8                                    l9728 57B4  
                                  l8696 8DFA                                    l9834 88E8  
                                  l9690 544A                                    l9674 52C8  
                                  l9746 BB86                                    l9922 BAA2  
                                  l9846 895A                                    l9694 5558  
                                  STR_1 FF1E                                    l9864 B926  
                                  STR_2 FF09                                    STR_3 FFD2  
                                  STR_4 FECA                                    STR_5 FEA0  
                                  l9956 B360                                    STR_6 FEA0  
                                  STR_7 FEA0                                    STR_8 FEB5  
                                  STR_9 FC84                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6000 B59C                                    u6010 8A6C  
                                  u6100 AD52                                    u6110 AD54  
                                  u6015 8A62                                    u6200 671A  
                                  u6130 6516                                    _T6PR 003F93  
                                  u5420 A9A6                                    u7020 9318  
                                  u6060 8B3A                                    u6140 6562  
                                  _PMD0 0039C0                                    u6205 6710  
                                  _PMD1 0039C1                                    u6310 770E  
                                  u7110 9AB8                                    u6070 8B3C  
                                  u6230 B64C                                    _PMD2 0039C2  
                                  u6055 8B1C                                    u6135 650C  
                                  _PMD3 0039C3                                    u6400 790A  
                                  u7040 93B2                                    u6240 B64E  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u5610 4992                                    u6330 7764  
                                  u7210 B482                                    u5450 BA26  
                                  u6250 ACCE                                    _PMD6 0039C6  
                                  u5427 A998                                    _PMD7 0039C7  
                                  u5620 49B2                                    u7220 8E8C  
                                  u6180 6642                                    u5460 BA28  
                                  u6260 ACD0                                    u6341 776E  
                                  u6165 659C                                    u6350 77A8  
                                  u6510 8008                                    u6430 7E44  
                                  u7150 A516                                    u7310 8FA2  
                                  u7230 8EA0                                    u6166 65A2  
                                  u5615 4982                                    u6167 65B0  
                                  u5720 4BA4                                    u5560 48E2  
                                  u6280 BA56                                    u6360 77DA  
                                  u7240 8EDA                                    u7225 8E82  
                                  u6185 6638                                    u7321 8CE8  
                                  u5570 4902                                    u6290 BA58  
                                  u6450 7E9A                                    u7090 9A44  
                                  u7330 8D22                                    u7410 9640  
                                  u5571 48FC                                    u5820 4C8E  
                                  u6380 78B8                                    u6460 7ECC  
                                  u7340 8D54                                    u5900 B9F8  
                                  u7245 8ED0                                    u7430 B300  
                                  u6470 7EFE                                    u5760 4C18  
                                  u5680 4A7A                                    u9200 566A  
                                  u7440 B320                                    u7360 8E32  
                                  u5825 4C7E                                    u5850 4CAE  
                                  u6730 51D6                                    u6650 50F0  
                                  u9050 85CC                                    u9114 5312  
                                  u6490 7FB6                                    u7290 8F78  
                                  u9115 530C                                    u5780 4C32  
                                  u5588 4904                                    u6740 5210  
                                  u7380 9556                                    u5685 4A6A  
                                  u6910 43FE                                    u6750 524C  
                                  u9134 5334                                    u7390 9588  
                                  u6735 51C6                                    u9135 532E  
                                  u6840 3F10                                    u6690 517A  
                                  u9154 5572                                    u8610 814E  
                                  u5890 B9F6                                    u9155 556C  
                                  u8540 79DE                                    u9430 AFF4  
                                  u6950 445A                                    u9174 5640  
                                  u9094 52E2                                    u6855 40A4  
                                  u9175 563A                                    u9095 52DC  
                                  u6960 4494                                    u8560 7B36  
                                  u6865 416C                                    u8617 8140  
                                  u9505 C0B0                                    u6970 44DA  
                                  u9194 5662                                    u8570 7B38  
                                  u8650 81E8                                    u9506 C0B2  
                                  u6955 444A                                    u6875 4334  
                                  u9195 565C                                    u9515 C0A0  
                                  u8660 8216                                    u9516 C0A2  
                                  u9550 8678                                    u9455 B028  
                                  u9375 B688                                    u8655 81E2  
                                  u9456 B02A                                    u9448 AFF6  
                                  u9640 BEC2                                    u8657 81D4  
                                  _PLLR 01CEE0                                    u8667 8208  
                                  u9646 BEC4                                    u9750 ABC0  
                                  u9780 AC06                                    u9768 ABC2  
                                  u9798 AC08                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR BAE8  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FBD3                                    _cp_l FBCF  
                                  _atoi 7932                                    _ctoa AC1E  
                                  _main 1244                                    _dtoa 57DA  
                                  _nanf B112                                    _seed 00CF  
                                  _prec 003C                                    _nout 00C0  
                                  _spin FB4B                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 73F4                                    btemp 0001  
                                  _utoa 67CC                                    _xtoa 60A6  
                __end_of_check_adc_scan C176                           ___fpclassifyf 89BE  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00C8  
             __end_of_SPI1_Exchange8bit BF36               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize B540             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr BD20                            ___param_bank 000000  
                __end_of_check_day_time 89BE                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR C11E                        __end_of_INT1_ISR B85A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A7E2  
         __end_of_OSCILLATOR_Initialize C070                                   l10410 869A  
                                 l11042 6098                                   l12010 00F0  
                                 l11060 9E7C                                   l10350 B3BE  
                                 l10422 86DA                                   l12030 0216  
                                 l10502 B87A                                   l11070 9EEC  
                                 l12200 0D24                                   l12104 05F6  
                                 l12032 022C                                   l11048 9E20  
                                 l10346 B38C                                   l11154 ADF6  
                                 l10530 93F8                                   l10418 86C6  
                                 l12122 06B8                                   l12106 0602  
                                 l12018 0146                                   l11148 ADE6  
                                 l10532 9408                                   l10460 B8C6  
                                 l12132 077A                                   l12028 01EA  
                                 l12036 0258                                   l12300 7460  
                                 l10550 948E                                   l10534 940E  
                                 l10542 942A                                   l12142 0926  
                                 l12126 06F0                                   l12062 0396  
                                 l12046 02FC                                   l12054 032A  
                                 l10536 9414                                   l10544 9456  
                                 l11088 B792                                   l12208 0D90  
                                 l12216 0EA2                                   l12072 04D2  
                                 l12320 7550                                   l10722 BFA8  
                                 l10538 9422                                   l12242 0FD6  
                                 l12090 058E                                   l12066 0406  
                                 l12330 760A                                   l10570 ABD4  
                                 l13042 12AA                                   l12244 0FF0  
                                 l12228 0F3A                                   l12180 0C32  
                                 l12164 0B12                                   l12156 0A48  
                                 l12084 0554                                   l12068 0470  
                                 l12324 7580                                   l12316 7514  
                                 l12412 61B0                                   l12404 6150  
                                 l13140 16D6                                   l13044 12BC  
                                 l13036 1284                                   l10734 BB0A  
                                 l10558 9508                                   l12254 1092  
                                 l12166 0B34                                   l12334 7636  
                                 l10662 9994                                   l13222 2054  
                                 l13206 1AB2                                   l13038 128C  
                                 l10760 B7BC                                   l12280 119A  
                                 l12264 10E2                                   l12192 0CBA  
                                 l12096 0594                                   l12088 057C  
                                 l12360 685C                                   l12352 6800  
                                 l12512 2604                                   l13232 21E8  
                                 l13152 17B0                                   l11810 97C0  
                                 l12338 7672                                   l12370 6A52  
                                 l12514 263E                                   l10914 713E  
                                 l10658 98F0                                   l13218 1FF2  
                                 l13234 2214                                   l13162 1908  
                                 l12452 6416                                   l12428 62A6  
                                 l12436 632C                                   l12532 27B8  
                                 l12516 2654                                   l10940 71E0  
                                 l10924 7182                                   l10916 714E  
                                 l13252 228A                                   l13164 1936  
                                 PRLOCK 0039EF                                   l11822 A9E2  
                                 l12550 293C                                   l12542 2850  
                                 l12710 A6B8                                   l10934 71B8  
                                 l10918 7152                                   l13270 22F2  
                                 l13262 22C8                                   l13094 146E  
                                 l11912 AC3C                                   l12392 60DA  
                                 l12608 2DE4                                   l12712 A6FA  
                                 l10960 7260                                   l10952 723A  
                                 l10944 71EC                                   l10928 718E  
                                 l13280 2336                                   l13248 2266  
                                 l13184 1990                                   l13176 196A  
                                 l10778 B7FC                                   l11826 AA20  
                                 l11914 AC68                                   l12642 3138  
                                 l12618 2F06                                   l12554 2990  
                                 l12490 2482                                   l11842 6ED0  
                                 l13290 238C                                   l13194 19B2  
                                 l12628 2FBC                                   l12492 24BC  
                                 l12740 A806                                   l10892 A1C6  
                                 l13276 2310                                   l13268 22DA  
                                 l12822 34F6                                   l12814 3436  
                                 l10878 8CB4                                   l11950 5910  
                                 l12398 6114                                   l12662 32CA  
                                 l12574 2BA2                                   l12566 2AEA  
                                 l12494 24D2                                   l11862 70A6  
                                 l11854 6FF8                                   l12734 A7E6  
                                 l10982 73B8                                   l10886 A120  
                                 l12832 3648                                   l11880 9B4C  
                                 l11960 5B22                                   l12656 3270  
                                 l12672 32EE                                   l11848 6F8E  
                                 l12736 A7EE                                   l10984 73E0  
                                 l12842 3874                                   l12826 3562  
                                 l12818 348A                                   l11874 9B12  
                                 l11946 58F2                                   l11938 58A8  
                                 l12666 32CE                                   l12578 2BD6  
                                 l12690 A8E2                                   l12738 A7F8  
                                 l12746 A80E                                   l12770 9C1E  
                                 l10994 A52C                                   l12860 3A7E  
                                 l12852 39B4                                   l12836 369C  
                                 l11884 9B88                                   l11980 5BD4  
                                 l12748 A83A                                   l12846 38EE  
                                 l11878 9B3A                                   l11894 A3D6  
                                 l12598 2D36                                   l10998 A56A  
                                 l12872 3D4A                                   l12856 3A5C  
                                 l11888 9BD2                                   l11984 5C10  
                                 l11998 00AC                                   l12974 82CE  
                                 l12988 83F6                         __end_of___aodiv 7932  
                          _Volts_to_SOC 98B4                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4D4C  
                                 _ADCLK 003EFF                         __end_of___aomod 802C  
                                 _ADPCH 003EF1                         __end_of___fldiv 52C6  
                                 _ADREF 003EFD                         __end_of___awdiv 93E0  
                       __end_of___flneg B4B0                                   STR_10 FD56  
                                 STR_11 FE32                                   STR_12 FEDF  
                                 STR_21 FF83                                   STR_13 FEF4  
                                 STR_14 FF48                                   STR_30 FE5E  
                                 STR_22 FE1C                                   STR_15 FF33  
                                 STR_23 FE06                                   STR_31 FD6C  
                                 STR_40 FE8A                                   STR_24 FDF0  
                                 STR_32 FD82                                   STR_16 FD40  
                                 STR_41 FE8A                                   STR_25 FDDA  
                                 STR_33 FD98                                   STR_17 FC50  
                         __CFG_WDTE$OFF 000000                                   STR_50 FFBF  
                                 STR_42 FE8A                                   STR_26 FDC4  
                                 STR_34 FCE4                                   STR_18 FC6A  
                                 STR_43 FFFC                                   STR_51 FFA4  
                                 STR_19 FF94                                   STR_27 FDAE  
                                 STR_35 FD29                                   STR_52 FFA4  
                                 STR_44 FFF9                                   STR_28 FE74  
                                 STR_36 FCCD                         __end_of___awmod 9AE6  
                                 STR_53 FFA4                                   STR_45 FFB3  
                                 STR_29 FE48                                   STR_37 FCB6  
                                 STR_70 FFE3                                   STR_46 FFC9  
                                 STR_38 FCFB                                   STR_54 FC9E  
                                 STR_63 FC4F                                   STR_47 FF5D  
                                 STR_39 FD12                                   STR_48 FF5D  
                                 STR_56 FF70                                   STR_64 FBD7  
                                 _ADRPT 003EEC                                   STR_73 FFEA  
                                 STR_65 FFD7                                   STR_49 FFBF  
                                 STR_82 FFED                                   STR_66 FFDF  
                                 STR_75 FFEA                                   STR_84 FFED  
                                 STR_92 FFF6                                   STR_77 FFF0  
                                 STR_69 FFDB                                   STR_94 FFF6  
                                 STR_79 FFF0                                   STR_87 FFF3  
                                 STR_96 FFE7                         __end_of___flmul 4590  
                                 STR_89 FFF3                                   STR_98 FFE7  
                       __end_of___flsub B614                         __end_of___fltol 8FCC  
                                 u11000 58DE                                   u11010 5B36  
                                 u11021 5B66                                   u11030 5B7C  
                                 u11110 00DA                                   u11031 5B7A  
                                 u11040 5B90                                   u12000 251A  
                                 u11050 5B94                                   u12010 251C  
                                 u11140 0194                                   u12020 2542  
                                 u11070 5BAA                                   u11230 050E  
                                 u11150 0196                                   u11400 0A18  
                                 u12120 28A4                                   u11330 0648  
                                 u12050 269C                         __end_of___lodiv 8E5A  
                                 u11500 0EE4                                   u11260 0562  
                                 u11180 02A6                                   u12140 2A18  
                                 u12060 269E                                   u11190 02A8  
                                 u12070 26C4                                   u12240 3010  
                                 u11290 05C6                                   u12170 2C90  
                                 _U1P1H 003DED                                   u11700 7698  
                                 u12260 31C0                                   u12180 2C92  
                                 _U1P2H 003DEF                                   u10750 97B4  
                                 u10830 711A                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u11560 10B8                                   u11720 67E6  
                                 u11800 60C0                                   u12280 A8C2  
                                 u12600 1588                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10770 9830  
                                 u10930 580A                                   _U1P3L 003DF0  
                                 u10940 580C                                   u11580 116E  
                                 u11660 7576                                   u11900 6328  
                                 u12540 8446                                   u12620 17DE  
                                 u11590 1170                                   u11670 75BC  
                                 u11910 6348                                   u11830 61A8  
                                 u12550 8448                                   _U2P1L 003DD4  
                                 u11751 6A94                                   u10960 587C  
                                 u10880 A450                                   u11760 6AAA  
                                 u11840 61FC                                   u12720 2256  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11761 6AA8                                   u11921 6378  
                                 u11905 630A                                   u11770 6ABE  
                                 u11930 638E                                   u11850 61FE  
                                 u12730 2270                                   _U2P3L 003DD8  
                                 u11931 638C                                   u10980 588E  
                                 u11780 6AC2                                   u11940 63A2  
                                 u12740 2282                                   u11677 75AE  
                                 u11950 63A6                                   u11870 625C  
                                 u12726 2258                                   u10887 A442  
                                 _T5CLK 003F9D                                   u11880 625E  
                                 u12736 2272                         __end_of___lomod 9662  
                                 u12746 2284                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result B894  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR C1A8                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 9292  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A2BA                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR BFFE                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf A5DE  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay C10E                                   _fputc 9790  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha B658  
                                 _fputs A9D2                         __end_of_isdigit BA62  
                       __end_of_ivln2_h FBCF                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand B93A                                   _width 003A  
                                 _putch BFCA            __end_of_set_ac_charger_relay C0D6  
                       __end_of_islower BA02                         __end_of_isspace B334  
              _INT1_SetInterruptHandler BC7E                         __end_of_isupper BA32  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler BC06             _UART1_SetRxInterruptHandler BBDE  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9E14  
                       __end_of_tolower ADAE                         __end_of_strncmp 824C  
                       __end_of_toupper AD2A               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr BD48                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B4F8                   __end_of_ringBufS_init BB66  
                       __initialization A2BA                       _UART2_rx_vect_isr BD70  
                          __end_of_cp_h FBD7                            __end_of_cp_l FBD3  
                          __end_of_atoi 7BA6                            __end_of_ctoa ACA6  
                          __end_of_main 23A0                            __end_of_dtoa 5C5A  
                          __end_of_nanf B174                            __end_of_spin FBC3  
                          __end_of_stoa 76B2                            __end_of_utoa 6B0C  
                          __end_of_xtoa 6460                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize C02E  
                 __end_of_send_lcd_data BDBC                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B79A                _TMR5_SetInterruptHandler BC2E  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr C138  
                    esr_check@esr_state 0040                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize BB14  
                       _PWM8_Initialize C044                        _UART1_Initialize B4B0  
                     _UART2_tx_vect_isr BD48                      _UART2_Transmit_ISR BAE8  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan B04C  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue B658  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A26A                                  _RB6PPS 003A0E  
                                i1l1207 91FA                    _start_switch_handler BED8  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B588                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C0F2  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u923_25 C0D0                                  u923_26 C0D2  
                                u942_20 C10A                                  u928_20 8874  
                  __size_of_hid_display 0102                                  u972_24 94FE  
                                u972_25 94FA                                  u949_20 B8D4  
                                u949_26 B8D6                                  u965_28 93FE  
                                u968_20 941E                                  u968_21 9418  
                                u997_48 BE5C                                  u999_28 BDF0  
                      __end_of___xxtofl 8662   __end_of_ADCC_DischargeSampleCapacitor C16E  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor C166  
              __end_of_send_lcd_cmd_dma BF54                         _TMR3_WriteTimer B7DA  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr BD98  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize C12E  
                      _UART2_Initialize B174                                  _WaitMs B904  
                       _conv_raw_result 52C6                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 8FCC  
                                ___fleq A462                       _ADCC_ThresholdISR AF7C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush AA6A  
                                _efgtoa 0000                                  _floorf 6460  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6E38  
                  __size_of_help_button 0038                                  clear_0 A32C  
                                clear_1 A340                                  clear_2 A352  
                                clear_3 A35E                                  clear_4 A36A  
                                clear_5 A376               __end_of_port_data_dma_ptr C142  
                                _printf B0B0                      _eaDogM_WriteString A88A  
                                _strcpy A38E                               ?_ADCC_ISR 0021  
                                _strlen A930                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize AF12  
                        _PMD_Initialize C070              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr BD70                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan B0B0                            __mediumconst F9EA  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay B288  
                      __end_of_spinners A1D6                        __end_of_vfprintf A738  
                            _StartTimer B71A                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B540  
                     _SYSTEM_Initialize B41E                              __accesstop 0060  
               __end_of__initialization A388                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help C186  
                  __end_of_display_info C17E               __end_of_CLKREF_Initialize C138  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer B79A                   _set_temp_display_help C0B6  
                      _clear_hid_pflags BDBC                   __end_of_TMR3_CallBack BE4C  
             __end_of_ADCC_ThresholdISR AFE6                      __size_of_calc_bsoc 0A1A  
                __end_of_ringBufS_flush AAFC                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 C0D6                            __pidataBANK1 9F16  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A68C  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 98B4                           __end_of_fputs AA6A  
                  _get_ac_charger_relay C100                           __end_of_srand B96E  
                 __end_of_TMR5_CallBack BE28                           __end_of_putch BFE4  
                  _set_ac_charger_relay C0C6                 __end_of_PWM8_Initialize C05A  
               __end_of_TMR6_Initialize BB3E                       _adc_int_t_handler ADAE  
                __end_of_PMD_Initialize C084                              __end_of_bp FBCB  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack BE94  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0041  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR C150  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan C18E  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize B468  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer B81A                              __pbssBANK0 0060  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 824C  
               __end_of_conv_raw_result 57DA                      __size_of_esr_check 02D0  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone BB8E  
                      _DMA1_DMADCNT_ISR C144                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma B9A2  
                 __end_of_wait_lcd_done BFCA        __end_of_TMR3_SetInterruptHandler BC7E  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler BC2E  
                            ??_TMR3_ISR 00D7                 __end_of_ADCC_Initialize AF7C  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler AE30  
                            ??_TMR6_ISR 0026                       __end_of___asfladd AEA8  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler BCF6   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler BCCE                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR BF90                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan C194  
                               u1005_48 BE80                                 u1008_28 BE14  
                               u1037_44 AE16                                 u1037_45 AE10  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR C120  
                               u1240_20 39A4                                 _U1ERRIE 003DFA  
                               u1242_20 3A6E                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1247_28 BE38  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3D66  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch BA90  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer B7DA  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C0B6              __end_of_set_load_relay_two C0A6  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 8B54                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim BFFE                                 __Lparam 0000  
              __end_of_UART1_Initialize B4F8                       __end_of_hid_input AC1E  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 76B2  
                               ___fladd 4590                                 ___aomod 7DEC  
                               ___fldiv 4D4C                                 ___awdiv 9292  
                               ___flneg B468                                 ___awmod 99CE  
                               ___flmul 3D66                                 ___flsub B5CE  
                               ___fltol 8E5A                                 ___lodiv 8CDA  
                               ___lomod 9522               __end_of_UART1_Receive_ISR BFAE  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A0F0                                 __pcinit A2BA  
              __end_of_mode_lamp_bright C100                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C0E4  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B1D4                                 __ptext2 BED8  
                               __ptext3 B93A                                 __ptext4 A0F0  
                               __ptext5 B9A2                                 __ptext6 A006  
                               __ptext7 BD98                                 __ptext8 B69A  
                               __ptext9 B6DA                       __end_of_esr_check 73F4  
                     _UART2_Receive_ISR BEF8                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C05A  
                          __size_of_abs 0046                                 us641999 791C  
                               us652999 801A                            __size_of_pad 0114  
                     __end_of_init_bsoc 7DEC                                 us742999 9652  
                               _isalpha B614                                 _isdigit BA32  
                               us737999 8E44                                 _ivln2_h FBCB  
                             _T3CONbits 003FA6                                 _mode_sw 00CA  
                     __end_of_lp_filter 881E                                 _islower B9D2  
                               _isspace B2E2                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize B1D4  
                               _isupper BA02              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9D0A                                 _tolower AD2A  
                 __size_of_display_help 0008                                 _utctime 0096  
                 __size_of_display_info 0008                                 _strncmp 802C  
                               _toupper ACA6                    end_of_initialization A388  
             __size_of_convert_adc_data 00B8                      _check_enter_button B75A  
                             i1u1256_20 91F0     __end_of_UART2_SetRxInterruptHandler BBDE  
           _UART2_SetRxInterruptHandler BBB6                               i2u1040_48 BAD4  
                             i2u1042_48 AFB2                               i2u1042_49 AFC6  
                             i2u1044_48 BD34                               i2u1046_48 BD5C  
                             i2u1048_48 BD84                 check_day_time@day_delay 0042  
                     __end_of_set_vterm BF72                       __end_of_vfpfcnvrt 334C  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 0082  
                   __size_of_StartTimer 0040                       __end_of_start_lcd C1A0  
             __end_of_UART2_Receive_ISR BF18                          wdtdelay@dcount 009A  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc C1A6                _TMR3_SetInterruptHandler BC56  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler BC06  
                          _display_help C17E                   _TMR5_InterruptHandler 00A5  
                          _display_info C176    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags BDE0                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler BD1E             _ADCC_SetADIInterruptHandler BCF6  
                            _update_lcd 9BFA                         _calc_model_data 5C5A  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B1D4                         _DMA1_Initialize AEA8  
                            _start_bsoc BEB6                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C02E                   __end_of_get_vterm_ptr BA90  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs B93A            __end_of_INTERRUPT_Initialize B04C  
                            _vterm_dump 9662                          __end_of___flge 912E  
                        __end_of___fleq A526    __end_of_INT0_DefaultInterruptHandler C1B4  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C1B2  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize B288  
                         __pidataBIGRAM 6B0C                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 67CC             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 7124  
                        __end_of_printf B112                __end_of_DMA1_DMADCNT_ISR C14E  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack BE70  
                        __end_of_strcpy A462                          __end_of_strlen A9D2  
                   start_initialization A2BA    __end_of_TMR5_DefaultInterruptHandler B904  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler B8CC  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs B5CE  
                 __end_of_INT1_CallBack BE04               __size_of_set_display_info 001E  
                           __end_of_pad 9BFA                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B71A                          _switch_handler 93E0  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 8B54  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C12E  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C15C  
                   __end_of_hid_display 9F16              __end_of_send_port_data_dma B386  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BB66  
                         _ringBufS_init BB3E                             __pdataBANK0 00F0  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B9A2  
               __end_of_calc_model_data 60A6                           _send_lcd_data BD98  
                   __end_of_help_button B8CC         __end_of_eaDogM_WriteStringAtPos A88A  
                   __end_of_BVSOC_TABLE FABB                               ___asfladd AE30  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize AF12                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler BCCE  
                         __pcstackBANK0 00D7                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 9522  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C044  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FB4B                        _convert_adc_data A526  
                             _calc_bsoc 334C               __size_of_ringBufS_put_dma 00AA  
                          _init_display A006                  __end_of_DMA1_DMAOR_ISR C166  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B2E2                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize AAFC                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C19A                           __pmediumconst F9EA  
                             __ptext100 4D4C                               __ptext101 8FCC  
                             __ptext110 B174                               __ptext102 5C5A  
                             __ptext111 BB8E                               __ptext103 C1A0  
                             __ptext120 BC56                               __ptext112 BBB6  
                             __ptext104 BEB6                               __ptext121 C016  
                             __ptext113 B4B0                               __ptext105 8662  
                             __ptext130 BC7E                               __ptext122 C02E  
                             __ptext114 BBDE                               __ptext106 B5CE  
                             __ptext131 BCA6                               __ptext123 C044  
                             __ptext115 BB14                               __ptext107 4590  
                             __ptext140 C1AE                               __ptext132 B288  
                             __ptext124 C070                               __ptext116 BC06  
                             __ptext108 3D66                               __ptext141 93E0  
                             __ptext133 AEA8                               __ptext125 AAFC  
                             __ptext117 B4F8                               __ptext109 B41E  
                             __ptext150 B7DA                               __ptext142 A1D8  
                             __ptext134 C12E                               __ptext126 C05A  
                             __ptext118 BC2E                               __ptext151 BE28  
                             __ptext143 B79A                               __ptext135 AF12  
                             __ptext127 AFE6                               __ptext119 B540  
                             __ptext160 C1A8                               __ptext152 C1B0  
                             __ptext144 BE04                               __ptext136 BCCE  
                             __ptext128 C186                               __ptext161 BABC  
                             __ptext153 334C                               __ptext145 B8CC  
                             __ptext137 BCF6                               __ptext129 B96E  
                             __ptext170 BD70                               __ptext162 ADAE  
                             __ptext154 B334                               __ptext146 881E  
                             __ptext138 B81C                               __ptext171 BEF8  
                             __ptext163 C1B4                               __ptext155 C138  
                             __ptext147 C0C6                               __ptext139 BDE0  
                             __ptext172 BFE4                               __ptext164 C1B6  
                             __ptext156 AE30                               __ptext148 C100  
                             __ptext173 BE70                               __ptext165 AF7C  
                             __ptext157 C110                               __ptext149 9130  
                             __ptext174 B386                               __ptext166 BD20  
                             __ptext158 BE4C                               __ptext175 C120  
                             __ptext167 BF90                               __ptext159 C1B2  
                             __ptext176 C144                               __ptext168 BD48  
                             __ptext177 C150                               __ptext169 BAE8  
                             __ptext178 C15C                               __ptext179 0000  
                             _hid_input AB8E                      __end_of_StartTimer B75A  
                    _set_load_relay_one C0A6                      _set_load_relay_two C096  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR BABC  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 7124                 __size_of_get_raw_result 0022  
                        __size_of_fabsf 00AE                               _init_bsoc 7BA6  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 8662                             _hid_display 9E14  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize AFE6                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR C110                                _INT1_ISR B81C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 027D                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack BE28  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm BF54  
                   __size_of_update_lcd 0110                             _help_button B894  
                              _TMR3_ISR 9130                             _BVSOC_TABLE F9EB  
                              _TMR5_ISR A1D8                                _TMR6_ISR BFE4  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 23A0                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack BE04  
                            _ADCON0bits 003EF8                      __end_of_check_help 845E  
                             _start_lcd C19A                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack BE70  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc C1A0                        _set_display_info BF72  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A2CE  
                             copy_data1 A2F4                               copy_data2 A316  
              _INT0_SetInterruptHandler BCA6                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler BBB6             _UART2_SetTxInterruptHandler BB8E  
                          _uart1RxCount 00CE                            _uart2RxCount 00CB  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0514  
                         _wait_lcd_done BFAE                            _send_lcd_cmd B6DA  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler C1B6                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch BABC  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR C15A  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 845E  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand C0F2  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                              __ptext10 BF18                                __ptext11 BB3E  
                              __ptext20 C084                                __ptext12 7BA6  
                              __ptext21 C166                                __ptext13 98B4  
                              __ptext30 9662                                __ptext22 C18E  
                              __ptext14 9E14                                __ptext31 9D0A  
                              __ptext23 C16E                                __ptext15 AB8E  
                              __ptext40 A88A                                __ptext32 BA62  
                              __ptext24 C096                                __ptext16 BA90  
                              __ptext41 C194                                __ptext33 B904  
                              __ptext25 C0A6                                __ptext17 7124  
                              __ptext50 B9D2                                __ptext42 C19A  
                              __ptext34 9BFA                                __ptext26 C0E4  
                              __ptext18 B85A                                __ptext51 B614  
                              __ptext43 AA6A                                __ptext35 A7E2  
                              __ptext27 A526                                __ptext19 B04C  
                              __ptext60 A38E                                __ptext52 67CC  
                              __ptext44 6E38                                __ptext36 BF36  
                              __ptext28 BDBC                                __ptext61 6460  
                              __ptext53 9522                                __ptext45 B0B0  
                              __ptext37 BFAE                                __ptext29 824C  
                              __ptext70 7DEC                                __ptext62 89BE  
                              __ptext54 8CDA                                __ptext46 A68C  
                              __ptext38 B22E                                __ptext71 76B2  
                              __ptext63 8E5A                                __ptext55 802C  
                              __ptext47 23A0                                __ptext39 B3D4  
                              __ptext80 B2E2                                __ptext72 AC1E  
                              __ptext64 B468                                __ptext56 73F4  
                              __ptext48 60A6                                __ptext81 BA32  
                              __ptext73 9AE6                                __ptext65 A462  
                              __ptext57 0000                                __ptext49 ACA6  
                              __ptext90 B71A                                __ptext82 BF54  
                              __ptext74 A930                                __ptext66 99CE  
                              __ptext58 AD2A                                __ptext91 C176  
                              __ptext83 C0B6                                __ptext75 A9D2  
                              __ptext67 9292                                __ptext59 BA02  
                              __ptext92 C17E                                __ptext84 BF72  
                              __ptext76 9790                                __ptext68 57DA  
                              __ptext93 B75A                                __ptext85 BFFE  
                              __ptext77 BFCA                                __ptext69 B588  
                              __ptext94 8B54                                __ptext86 C0F2  
                              __ptext78 A738                                __ptext95 A5DE  
                              __ptext87 B658                                __ptext79 7932  
                              __ptext96 52C6                                __ptext88 B894  
                              __ptext97 B112                                __ptext89 BB66  
                              __ptext98 BE94                                __ptext99 845E  
                      __size_of_isupper 0030                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1161999 7406  
                              us1092999 57F4                                us1173999 6832  
                              us1182999 6126                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A738  
                  __end_of_Volts_to_SOC 99CE                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 115C  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma B9D2                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00F0                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion C096                                _spi_link 0060  
                              _wdtdelay B22E              __end_of_UART2_Transmit_ISR BB14  
                              _spinners A0F0                                _vfprintf A68C  
              __end_of_convert_adc_data A5DE              __end_of_PWM8_LoadDutyValue B69A  
  __end_of_TMR3_DefaultInterruptHandler C1B2   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler C1B0    __end_of_INT1_DefaultInterruptHandler C1B0  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler C1AE  
                    _send_port_data_dma B334                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0043                             _uart1RxTail 0046  
                        _get_raw_result BE94                             _uart2TxHead 00CD  
                           _uart2RxTail 00CC                               spinners@s 0074  
                           _uart2TxTail 0045                            _wait_lcd_set C194  
                    _EXT_INT_Initialize B96E    __end_of_TMR6_DefaultInterruptHandler B3D4  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B386  
                     _send_lcd_data_dma B3D4    __end_of_ADCC_DefaultInterruptHandler C1B6  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler C1B4  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B69A          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C0C6                   __end_of_calc_ror_data 8CDA  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString A930  
                 __end_of_mode_lamp_dim C016                 __end_of_adc_int_handler C1B8  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9D0A                  _uart2TxBufferRemaining 0044  
                    __end_of_static_soc B22E                      __end_of_start_bsoc BED8  
                        _FVR_Initialize C186                  __end_of_get_raw_result BEB6  
                      _send_lcd_cmd_dma BF36                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00C6        __end_of_INT1_SetInterruptHandler BCA6  
             __size_of_UART1_Initialize 0048               __end_of_send_lcd_data_dma B41E  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long B6DA  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR C1AE  
        __end_of_PIN_MANAGER_Initialize AB8E               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 9790                 _eaDogM_WriteStringAtPos A7E2  
                         _get_vterm_ptr BA62                          _check_adc_scan C16E  
             __size_of_UART2_Initialize 0060  
