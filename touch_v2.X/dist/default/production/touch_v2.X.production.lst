

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 18:15:29 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=4,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=4,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=4,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text176,global,reloc=4,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=4,class=CODE,delta=1
   203                           	psect	text180,global,reloc=4,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=4,class=CODE,delta=1
   208                           	psect	text185,global,reloc=4,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=4,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=4,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=4,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=4,class=CODE,delta=1
   218                           	psect	text195,global,reloc=4,class=CODE,delta=1
   219                           	psect	text196,global,reloc=4,class=CODE,delta=1
   220                           	psect	text197,global,reloc=4,class=CODE,delta=1
   221                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   222                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   223                           	psect	text198,global,reloc=4,class=CODE,delta=1
   224                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   225                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   226  0000                     
   227                           ; Version 2.10
   228                           ; Generated 31/07/2019 GMT
   229                           ; 
   230                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   231                           ; All rights reserved.
   232                           ; 
   233                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   234                           ; 
   235                           ; Redistribution and use in source and binary forms, with or without modification, are
   236                           ; permitted provided that the following conditions are met:
   237                           ; 
   238                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   239                           ;        conditions and the following disclaimer.
   240                           ; 
   241                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   242                           ;        of conditions and the following disclaimer in the documentation and/or other
   243                           ;        materials provided with the distribution.
   244                           ; 
   245                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   246                           ;        software without specific prior written permission.
   247                           ; 
   248                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   249                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   250                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   251                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   252                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   253                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   254                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   255                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   256                           ; 
   257                           ; 
   258                           ; Code-generator required, PIC18F57K42 Definitions
   259                           ; 
   260                           ; SFR Addresses
   261  0000                     
   262 ;;_main$3962	offset	0
   263 ;;_main$3958	offset	2
   264 ;;_esr_temp	offset	4
   265 ;;_i_esr	offset	8
   266 ;;_shape	offset	10
   267 ;;_inp_index	offset	11
   268 ;;_k	offset	12
   269 ;;_j	offset	13
   270 ;;_i	offset	14
   271 ;;_mode	offset	15
   272 ;;_i_ror	offset	16
   273 ;;_s	offset=-2 (param)
   274 ;;_voltage	offset=-4 (param)
   275 ;;_voltage	offset=-4 (param)
   276 ;;_voltage	offset=-4 (param)
   277 ;;_set	offset=-1 (param)
   278 ;;_x	offset	0
   279 ;;_r_cal_ptr	offset	2
   280 ;;_y	offset	4
   281 ;;_crcVal_save	offset	6
   282 ;;_bAdd	offset=-2 (param)
   283 ;;_data	offset=-1 (param)
   284 ;;_cmd	offset=-1 (param)
   285 ;;_cmd	offset=-1 (param)
   286 ;;_data	offset=-1 (param)
   287 ;;__this	offset=-2 (param)
   288 ;;_soc	offset	0
   289 ;;_slot	offset	2
   290 ;;_cvoltage	offset=-4 (param)
   291 ;;_h	offset=-2 (param)
   292 ;;_h	offset=-2 (param)
   293 ;;_fsm	offset=-1 (param)
   294 ;;_mode	offset=-1 (param)
   295 ;;_mode	offset=-1 (param)
   296 ;;_cmd	offset=-1 (param)
   297 ;;_cp	offset	0
   298 ;;_cb	offset	4
   299 ;;_x	offset	8
   300 ;;_x	offset	0
   301 ;;_y	offset	2
   302 ;;_r_cal_ptr	offset	4
   303 ;;_crcVal	offset	5
   304 ;;_GIEBitValue	offset	0
   305 ;;_bAdd	offset=-2 (param)
   306 ;;_bData	offset=-3 (param)
   307 ;;_result	offset	0
   308 ;;_mask	offset	2
   309 ;;_reverse	offset=-1 (param)
   310 ;;_xorValue	offset=-3 (param)
   311 ;;_mask	offset	0
   312 ;;_reverse	offset	2
   313 ;;_crc	offset=-2 (param)
   314 ;;_data	offset=-1 (param)
   315 ;;_channel	offset=-1 (param)
   316 ;;_c	offset	0
   317 ;;_shape	offset=-1 (param)
   318 ;;_reset	offset=-2 (param)
   319 ;;_i	offset=-1 (param)
   320 ;;_mode	offset=-1 (param)
   321 ;;_cb	offset=-3 (param)
   322 ;;_cp	offset=-5 (param)
   323 ;;_value	offset=-2 (param)
   324 ;;_window	offset=-4 (param)
   325 ;;_standard	offset=-6 (param)
   326 ;;_i	offset	0
   327 ;;_h	offset=-2 (param)
   328 ;;_flipper	offset=-1 (param)
   329 ;;_f	offset	0
   330 ;;_ap	offset	6
   331 ;;_s	offset=-3 (param)
   332 ;;_fmt	offset=-5 (param)
   333 ;;_line	offset=-1 (param)
   334 ;;_vterm	offset=-2 (param)
   335 ;;_numMilliseconds	offset=-2 (param)
   336 ;;_vterm	offset=-1 (param)
   337 ;;_row	offset	0
   338 ;;_r	offset=-1 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_strPtr	offset=-4 (param)
   341 ;;_strPtr	offset=-1 (param)
   342 ;;_delay	offset=-4 (param)
   343 ;;_strPtr	offset=-1 (param)
   344 ;;_strPtr	offset=-2 (param)
   345 ;;__this	offset=-2 (param)
   346 ;;_clearBuffer	offset=-3 (param)
   347 ;;_s	offset	0
   348 ;;_k	offset	2
   349 ;;_dest	offset=-2 (param)
   350 ;;_c	offset=-4 (param)
   351 ;;_n	offset=-6 (param)
   352 ;;_ap	offset	0
   353 ;;_fmt	offset=-3 (param)
   354 ;;_cfmt	offset	0
   355 ;;_fp	offset=-2 (param)
   356 ;;_fmt	offset=-4 (param)
   357 ;;_ap	offset=-6 (param)
   358 ;;_vfpfcnvrt$6209	offset	0
   359 ;;_vfpfcnvrt$6220	offset	2
   360 ;;_vfpfcnvrt$6208	offset	4
   361 ;;_llu	offset	6
   362 ;;_ll	offset	14
   363 ;;_f	offset	22
   364 ;;_ct	offset	26
   365 ;;_cp	offset	29
   366 ;;_c	offset	31
   367 ;;_fp	offset=-2 (param)
   368 ;;_fmt	offset=-4 (param)
   369 ;;_ap	offset=-6 (param)
   370 ;;_xtoa$6194	offset	0
   371 ;;_xtoa$6193	offset	2
   372 ;;_n	offset	4
   373 ;;_c	offset	12
   374 ;;_i	offset	14
   375 ;;_w	offset	16
   376 ;;_p	offset	18
   377 ;;_fp	offset=-2 (param)
   378 ;;_d	offset=-10 (param)
   379 ;;_x	offset=-11 (param)
   380 ;;_toupper$7000	offset	0
   381 ;;_c	offset=-2 (param)
   382 ;;_c	offset=-2 (param)
   383 ;;_c	offset=-2 (param)
   384 ;;_n	offset	0
   385 ;;_i	offset	8
   386 ;;_w	offset	10
   387 ;;_p	offset	12
   388 ;;_fp	offset=-2 (param)
   389 ;;_d	offset=-10 (param)
   390 ;;_counter	offset	0
   391 ;;_dividend	offset=-8 (param)
   392 ;;_divisor	offset=-16 (param)
   393 ;;_quotient	offset	0
   394 ;;_counter	offset	8
   395 ;;_dividend	offset=-8 (param)
   396 ;;_divisor	offset=-16 (param)
   397 ;;_r	offset	0
   398 ;;_l	offset	2
   399 ;;__l	offset=-2 (param)
   400 ;;__r	offset=-4 (param)
   401 ;;_n	offset=-6 (param)
   402 ;;_nuls	offset	0
   403 ;;_l	offset	7
   404 ;;_p	offset	9
   405 ;;_cp	offset	11
   406 ;;_w	offset	13
   407 ;;_i	offset	15
   408 ;;_fp	offset=-2 (param)
   409 ;;_s	offset=-4 (param)
   410 ;;_efgtoa$6166	offset	0
   411 ;;_efgtoa$6165	offset	2
   412 ;;_efgtoa$6164	offset	4
   413 ;;_efgtoa$6160	offset	6
   414 ;;_efgtoa$6156	offset	8
   415 ;;_efgtoa$6155	offset	10
   416 ;;_u	offset	12
   417 ;;_g	offset	16
   418 ;;_l	offset	20
   419 ;;_h	offset	24
   420 ;;_ou	offset	28
   421 ;;_n	offset	32
   422 ;;_e	offset	34
   423 ;;_i	offset	36
   424 ;;_w	offset	38
   425 ;;_p	offset	40
   426 ;;_sign	offset	42
   427 ;;_d	offset	44
   428 ;;_ne	offset	46
   429 ;;_m	offset	48
   430 ;;_pp	offset	50
   431 ;;_t	offset	52
   432 ;;_mode	offset	54
   433 ;;_nmode	offset	55
   434 ;;_fp	offset=-2 (param)
   435 ;;_f	offset=-6 (param)
   436 ;;_c	offset=-7 (param)
   437 ;;_tolower$6985	offset	0
   438 ;;_c	offset=-2 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_d	offset	0
   441 ;;_s	offset	2
   442 ;;_dest	offset=-2 (param)
   443 ;;_src	offset=-4 (param)
   444 ;;_u	offset	0
   445 ;;_m	offset	4
   446 ;;_e	offset	8
   447 ;;_x	offset=-4 (param)
   448 ;;_u	offset	0
   449 ;;_e	offset	4
   450 ;;_x	offset=-4 (param)
   451 ;;_exp1	offset	0
   452 ;;_sign1	offset	1
   453 ;;_f1	offset=-4 (param)
   454 ;;_f1	offset=-4 (param)
   455 ;;_ff1	offset=-4 (param)
   456 ;;_ff2	offset=-8 (param)
   457 ;;_sign	offset	0
   458 ;;_counter	offset	1
   459 ;;_dividend	offset=-2 (param)
   460 ;;_divisor	offset=-4 (param)
   461 ;;_quotient	offset	0
   462 ;;_sign	offset	2
   463 ;;_counter	offset	3
   464 ;;_dividend	offset=-2 (param)
   465 ;;_divisor	offset=-4 (param)
   466 ;;_dtoa$6132	offset	0
   467 ;;_n	offset	2
   468 ;;_i	offset	10
   469 ;;_s	offset	12
   470 ;;_w	offset	14
   471 ;;_p	offset	16
   472 ;;_fp	offset=-2 (param)
   473 ;;_d	offset=-10 (param)
   474 ;;_a	offset=-2 (param)
   475 ;;_sign	offset	0
   476 ;;_counter	offset	1
   477 ;;_dividend	offset=-8 (param)
   478 ;;_divisor	offset=-16 (param)
   479 ;;_quotient	offset	0
   480 ;;_sign	offset	8
   481 ;;_counter	offset	9
   482 ;;_dividend	offset=-8 (param)
   483 ;;_divisor	offset=-16 (param)
   484 ;;_w	offset	0
   485 ;;_fp	offset=-2 (param)
   486 ;;_c	offset=-3 (param)
   487 ;;_w	offset	0
   488 ;;_i	offset	2
   489 ;;_fp	offset=-2 (param)
   490 ;;_buf	offset=-4 (param)
   491 ;;_p	offset=-6 (param)
   492 ;;_a	offset	0
   493 ;;_s	offset=-2 (param)
   494 ;;_i	offset	0
   495 ;;_c	offset	2
   496 ;;_s	offset=-2 (param)
   497 ;;_fp	offset=-4 (param)
   498 ;;_c	offset=-2 (param)
   499 ;;_fp	offset=-4 (param)
   500 ;;_c	offset=-1 (param)
   501 ;;__this	offset=-2 (param)
   502 ;;_c	offset=-3 (param)
   503 ;;_atoi$6716	offset	0
   504 ;;_atoi$6714	offset	2
   505 ;;_atoi$6715	offset	4
   506 ;;_n	offset	5
   507 ;;_neg	offset	7
   508 ;;_s	offset=-2 (param)
   509 ;;_isspace$6765	offset	0
   510 ;;_c	offset=-2 (param)
   511 ;;_c	offset=-2 (param)
   512 ;;_vterm	offset=-1 (param)
   513 ;;_new_response_info	offset=-1 (param)
   514 ;;_new_response_info	offset=-1 (param)
   515 ;;_level	offset=-2 (param)
   516 ;;_dutyValue	offset=-2 (param)
   517 ;;_timer	offset=-1 (param)
   518 ;;_timer	offset=-1 (param)
   519 ;;_count	offset=-3 (param)
   520 ;;_h	offset=-2 (param)
   521 ;;_u	offset	0
   522 ;;_x	offset=-4 (param)
   523 ;;_chan	offset=-1 (param)
   524 ;;_to_what	offset=-2 (param)
   525 ;;_u	offset	0
   526 ;;_s	offset=-2 (param)
   527 ;;_index	offset=-1 (param)
   528 ;;_arg	offset	0
   529 ;;_exp	offset	4
   530 ;;_sign	offset=-1 (param)
   531 ;;_val	offset=-5 (param)
   532 ;;_grs	offset	0
   533 ;;_rem	offset	4
   534 ;;_new_exp	offset	8
   535 ;;_aexp	offset	10
   536 ;;_bexp	offset	11
   537 ;;_sign	offset	12
   538 ;;_b	offset=-4 (param)
   539 ;;_a	offset=-8 (param)
   540 ;;_ff1	offset=-4 (param)
   541 ;;_ff2	offset=-8 (param)
   542 ;;_lp_speed	offset	0
   543 ;;_new	offset=-4 (param)
   544 ;;_bn	offset=-5 (param)
   545 ;;_slow	offset=-6 (param)
   546 ;;_b	offset=-4 (param)
   547 ;;_a	offset=-8 (param)
   548 ;;_grs	offset	0
   549 ;;_bexp	offset	1
   550 ;;_aexp	offset	2
   551 ;;_signs	offset	3
   552 ;;_b	offset=-4 (param)
   553 ;;_a	offset=-8 (param)
   554 ;;_prod	offset	0
   555 ;;_grs	offset	4
   556 ;;_temp	offset	8
   557 ;;_bexp	offset	10
   558 ;;_aexp	offset	11
   559 ;;_sign	offset	12
   560 ;;_b	offset=-4 (param)
   561 ;;_a	offset=-8 (param)
   562 ;;_InterruptHandler	offset=-3 (param)
   563 ;;_InterruptHandler	offset=-3 (param)
   564 ;;_InterruptHandler	offset=-3 (param)
   565 ;;_InterruptHandler	offset=-3 (param)
   566 ;;_InterruptHandler	offset=-3 (param)
   567 ;;_InterruptHandler	offset=-3 (param)
   568 ;;_state	offset	0
   569 ;;_InterruptHandler	offset=-3 (param)
   570 ;;_InterruptHandler	offset=-3 (param)
   571 ;;_seed	offset	0
   572 ;;_poly	offset	2
   573 ;;_InterruptHandler	offset=-3 (param)
   574 ;;_InterruptHandler	offset=-3 (param)
   575 ;;_i	offset	0
   576 ;;_sw_value	offset	1
   577 ;;_timerVal	offset=-2 (param)
   578 ;;_light	offset	0
   579 ;;_mode	offset=-1 (param)
   580 ;;_chan	offset=-1 (param)
   581 ;;_to_what	offset=-2 (param)
   582 ;;_u	offset	0
   583 ;;_s	offset=-2 (param)
   584 ;;_index	offset=-1 (param)
   585 ;;_arg	offset	0
   586 ;;_exp	offset	4
   587 ;;_sign	offset=-1 (param)
   588 ;;_val	offset=-5 (param)
   589 ;;_b	offset=-4 (param)
   590 ;;_a	offset=-8 (param)
   591 ;;_grs	offset	0
   592 ;;_bexp	offset	1
   593 ;;_aexp	offset	2
   594 ;;_signs	offset	3
   595 ;;_b	offset=-4 (param)
   596 ;;_a	offset=-8 (param)
   597 ;;_prod	offset	0
   598 ;;_grs	offset	4
   599 ;;_temp	offset	8
   600 ;;_bexp	offset	10
   601 ;;_aexp	offset	11
   602 ;;_sign	offset	12
   603 ;;_b	offset=-4 (param)
   604 ;;_a	offset=-8 (param)
   605 ;;_grs	offset	0
   606 ;;_rem	offset	4
   607 ;;_new_exp	offset	8
   608 ;;_aexp	offset	10
   609 ;;_bexp	offset	11
   610 ;;_sign	offset	12
   611 ;;_b	offset=-4 (param)
   612 ;;_a	offset=-8 (param)
   613 ;;_ff1	offset=-4 (param)
   614 ;;_ff2	offset=-8 (param)
   615 ;;_timerVal	offset=-2 (param)
   616 ;;_adj	offset	0
   617 ;;_log_ptr	offset	4
   618 ;;_f	offset	0
   619 ;;_ap	offset	6
   620 ;;_s	offset=-3 (param)
   621 ;;_fmt	offset=-5 (param)
   622 ;;_cfmt	offset	0
   623 ;;_fp	offset=-2 (param)
   624 ;;_fmt	offset=-4 (param)
   625 ;;_ap	offset=-6 (param)
   626 ;;_vfpfcnvrt$6209	offset	0
   627 ;;_vfpfcnvrt$6220	offset	2
   628 ;;_vfpfcnvrt$6208	offset	4
   629 ;;_llu	offset	6
   630 ;;_ll	offset	14
   631 ;;_f	offset	22
   632 ;;_ct	offset	26
   633 ;;_cp	offset	29
   634 ;;_c	offset	31
   635 ;;_fp	offset=-2 (param)
   636 ;;_fmt	offset=-4 (param)
   637 ;;_ap	offset=-6 (param)
   638 ;;_xtoa$6194	offset	0
   639 ;;_xtoa$6193	offset	2
   640 ;;_n	offset	4
   641 ;;_c	offset	12
   642 ;;_i	offset	14
   643 ;;_w	offset	16
   644 ;;_p	offset	18
   645 ;;_fp	offset=-2 (param)
   646 ;;_d	offset=-10 (param)
   647 ;;_x	offset=-11 (param)
   648 ;;_toupper$7000	offset	0
   649 ;;_c	offset=-2 (param)
   650 ;;_c	offset=-2 (param)
   651 ;;_c	offset=-2 (param)
   652 ;;_n	offset	0
   653 ;;_i	offset	8
   654 ;;_w	offset	10
   655 ;;_p	offset	12
   656 ;;_fp	offset=-2 (param)
   657 ;;_d	offset=-10 (param)
   658 ;;_counter	offset	0
   659 ;;_dividend	offset=-8 (param)
   660 ;;_divisor	offset=-16 (param)
   661 ;;_quotient	offset	0
   662 ;;_counter	offset	8
   663 ;;_dividend	offset=-8 (param)
   664 ;;_divisor	offset=-16 (param)
   665 ;;_r	offset	0
   666 ;;_l	offset	2
   667 ;;__l	offset=-2 (param)
   668 ;;__r	offset=-4 (param)
   669 ;;_n	offset=-6 (param)
   670 ;;_nuls	offset	0
   671 ;;_l	offset	7
   672 ;;_p	offset	9
   673 ;;_cp	offset	11
   674 ;;_w	offset	13
   675 ;;_i	offset	15
   676 ;;_fp	offset=-2 (param)
   677 ;;_s	offset=-4 (param)
   678 ;;_efgtoa$6166	offset	0
   679 ;;_efgtoa$6165	offset	2
   680 ;;_efgtoa$6164	offset	4
   681 ;;_efgtoa$6160	offset	6
   682 ;;_efgtoa$6156	offset	8
   683 ;;_efgtoa$6155	offset	10
   684 ;;_u	offset	12
   685 ;;_g	offset	16
   686 ;;_l	offset	20
   687 ;;_h	offset	24
   688 ;;_ou	offset	28
   689 ;;_n	offset	32
   690 ;;_e	offset	34
   691 ;;_i	offset	36
   692 ;;_w	offset	38
   693 ;;_p	offset	40
   694 ;;_sign	offset	42
   695 ;;_d	offset	44
   696 ;;_ne	offset	46
   697 ;;_m	offset	48
   698 ;;_pp	offset	50
   699 ;;_t	offset	52
   700 ;;_mode	offset	54
   701 ;;_nmode	offset	55
   702 ;;_fp	offset=-2 (param)
   703 ;;_f	offset=-6 (param)
   704 ;;_c	offset=-7 (param)
   705 ;;_tolower$6985	offset	0
   706 ;;_c	offset=-2 (param)
   707 ;;_c	offset=-2 (param)
   708 ;;_d	offset	0
   709 ;;_s	offset	2
   710 ;;_dest	offset=-2 (param)
   711 ;;_src	offset=-4 (param)
   712 ;;_u	offset	0
   713 ;;_m	offset	4
   714 ;;_e	offset	8
   715 ;;_x	offset=-4 (param)
   716 ;;_u	offset	0
   717 ;;_e	offset	4
   718 ;;_x	offset=-4 (param)
   719 ;;_exp1	offset	0
   720 ;;_sign1	offset	1
   721 ;;_f1	offset=-4 (param)
   722 ;;_f1	offset=-4 (param)
   723 ;;_ff1	offset=-4 (param)
   724 ;;_ff2	offset=-8 (param)
   725 ;;_sign	offset	0
   726 ;;_counter	offset	1
   727 ;;_dividend	offset=-2 (param)
   728 ;;_divisor	offset=-4 (param)
   729 ;;_quotient	offset	0
   730 ;;_sign	offset	2
   731 ;;_counter	offset	3
   732 ;;_dividend	offset=-2 (param)
   733 ;;_divisor	offset=-4 (param)
   734 ;;_dtoa$6132	offset	0
   735 ;;_n	offset	2
   736 ;;_i	offset	10
   737 ;;_s	offset	12
   738 ;;_w	offset	14
   739 ;;_p	offset	16
   740 ;;_fp	offset=-2 (param)
   741 ;;_d	offset=-10 (param)
   742 ;;_a	offset=-2 (param)
   743 ;;_sign	offset	0
   744 ;;_counter	offset	1
   745 ;;_dividend	offset=-8 (param)
   746 ;;_divisor	offset=-16 (param)
   747 ;;_quotient	offset	0
   748 ;;_sign	offset	8
   749 ;;_counter	offset	9
   750 ;;_dividend	offset=-8 (param)
   751 ;;_divisor	offset=-16 (param)
   752 ;;_w	offset	0
   753 ;;_fp	offset=-2 (param)
   754 ;;_c	offset=-3 (param)
   755 ;;_w	offset	0
   756 ;;_i	offset	2
   757 ;;_fp	offset=-2 (param)
   758 ;;_buf	offset=-4 (param)
   759 ;;_p	offset=-6 (param)
   760 ;;_a	offset	0
   761 ;;_s	offset=-2 (param)
   762 ;;_i	offset	0
   763 ;;_c	offset	2
   764 ;;_s	offset=-2 (param)
   765 ;;_fp	offset=-4 (param)
   766 ;;_c	offset=-2 (param)
   767 ;;_fp	offset=-4 (param)
   768 ;;_c	offset=-1 (param)
   769 ;;__this	offset=-2 (param)
   770 ;;_c	offset=-3 (param)
   771 ;;_atoi$6716	offset	0
   772 ;;_atoi$6714	offset	2
   773 ;;_atoi$6715	offset	4
   774 ;;_n	offset	5
   775 ;;_neg	offset	7
   776 ;;_s	offset=-2 (param)
   777 ;;_isspace$6765	offset	0
   778 ;;_c	offset=-2 (param)
   779 ;;_c	offset=-2 (param)
   780 ;;_dsize	offset=-2 (param)
   781 ;;_u	offset	0
   782 ;;_x	offset=-4 (param)
   783 ;;_f1p	offset=-2 (param)
   784 ;;_f2	offset=-6 (param)
   785 ;;_timer	offset=-1 (param)
   786 ;;_count	offset=-3 (param)
   787 ;;_channel	offset=-1 (param)
   788 ;;_i	offset	0
   789                           
   790                           	psect	idataBIGRAM
   791  0170E2                     __pidataBIGRAM:
   792                           	opt callstack 0
   793                           
   794                           ;initializer for _port_data
   795  0170E2  FF                 	db	255
   796  0170E3  00                 	db	0
   797  0170E4  FF                 	db	255
   798  0170E5  00                 	db	0
   799  0170E6  FF                 	db	255
   800  0170E7  00                 	db	0
   801  0170E8  FF                 	db	255
   802  0170E9  00                 	db	0
   803  0170EA  FF                 	db	255
   804  0170EB  00                 	db	0
   805  0170EC  FF                 	db	255
   806  0170ED  00                 	db	0
   807  0170EE  FF                 	db	255
   808  0170EF  00                 	db	0
   809  0170F0  FF                 	db	255
   810  0170F1  00                 	db	0
   811  0170F2  00                 	db	0
   812  0170F3  00                 	db	0
   813  0170F4  00                 	db	0
   814  0170F5  00                 	db	0
   815  0170F6  00                 	db	0
   816  0170F7  00                 	db	0
   817  0170F8  00                 	db	0
   818  0170F9  00                 	db	0
   819  0170FA  00                 	db	0
   820  0170FB  00                 	db	0
   821  0170FC  00                 	db	0
   822  0170FD  00                 	db	0
   823  0170FE  00                 	db	0
   824  0170FF  00                 	db	0
   825  017100  00                 	db	0
   826  017101  00                 	db	0
   827  017102  00                 	db	0
   828  017103  00                 	db	0
   829  017104  00                 	db	0
   830  017105  00                 	db	0
   831  017106  00                 	db	0
   832  017107  00                 	db	0
   833  017108  00                 	db	0
   834  017109  00                 	db	0
   835  01710A  00                 	db	0
   836  01710B  00                 	db	0
   837  01710C  00                 	db	0
   838  01710D  00                 	db	0
   839  01710E  00                 	db	0
   840  01710F  00                 	db	0
   841  017110  00                 	db	0
   842  017111  00                 	db	0
   843  017112  00                 	db	0
   844  017113  00                 	db	0
   845  017114  00                 	db	0
   846  017115  00                 	db	0
   847  017116  00                 	db	0
   848  017117  00                 	db	0
   849  017118  00                 	db	0
   850  017119  00                 	db	0
   851  01711A  00                 	db	0
   852  01711B  00                 	db	0
   853  01711C  00                 	db	0
   854  01711D  00                 	db	0
   855  01711E  00                 	db	0
   856  01711F  00                 	db	0
   857  017120  00                 	db	0
   858  017121  00                 	db	0
   859  017122  00                 	db	0
   860  017123  00                 	db	0
   861  017124  00                 	db	0
   862  017125  00                 	db	0
   863  017126  00                 	db	0
   864  017127  00                 	db	0
   865  017128  00                 	db	0
   866  017129  00                 	db	0
   867  01712A  00                 	db	0
   868  01712B  00                 	db	0
   869  01712C  00                 	db	0
   870  01712D  00                 	db	0
   871  01712E  00                 	db	0
   872  01712F  00                 	db	0
   873  017130  00                 	db	0
   874  017131  00                 	db	0
   875  017132  00                 	db	0
   876  017133  00                 	db	0
   877  017134  00                 	db	0
   878  017135  00                 	db	0
   879  017136  00                 	db	0
   880  017137  00                 	db	0
   881  017138  00                 	db	0
   882  017139  00                 	db	0
   883  01713A  00                 	db	0
   884  01713B  00                 	db	0
   885  01713C  00                 	db	0
   886  01713D  00                 	db	0
   887  01713E  00                 	db	0
   888  01713F  00                 	db	0
   889  017140  00                 	db	0
   890  017141  00                 	db	0
   891  017142  00                 	db	0
   892  017143  00                 	db	0
   893  017144  00                 	db	0
   894  017145  00                 	db	0
   895  017146  00                 	db	0
   896  017147  00                 	db	0
   897  017148  00                 	db	0
   898  017149  00                 	db	0
   899  01714A  00                 	db	0
   900  01714B  00                 	db	0
   901  01714C  00                 	db	0
   902  01714D  00                 	db	0
   903  01714E  00                 	db	0
   904  01714F  00                 	db	0
   905  017150  00                 	db	0
   906  017151  00                 	db	0
   907  017152  00                 	db	0
   908  017153  00                 	db	0
   909  017154  00                 	db	0
   910  017155  00                 	db	0
   911  017156  00                 	db	0
   912  017157  00                 	db	0
   913  017158  00                 	db	0
   914  017159  00                 	db	0
   915  01715A  00                 	db	0
   916  01715B  00                 	db	0
   917  01715C  00                 	db	0
   918  01715D  00                 	db	0
   919  01715E  00                 	db	0
   920  01715F  00                 	db	0
   921  017160  00                 	db	0
   922  017161  00                 	db	0
   923  017162  00                 	db	0
   924  017163  00                 	db	0
   925  017164  00                 	db	0
   926  017165  00                 	db	0
   927  017166  00                 	db	0
   928  017167  00                 	db	0
   929  017168  00                 	db	0
   930  017169  00                 	db	0
   931  01716A  00                 	db	0
   932  01716B  00                 	db	0
   933  01716C  00                 	db	0
   934  01716D  00                 	db	0
   935  01716E  00                 	db	0
   936  01716F  00                 	db	0
   937  017170  00                 	db	0
   938  017171  00                 	db	0
   939  017172  00                 	db	0
   940  017173  00                 	db	0
   941  017174  00                 	db	0
   942  017175  00                 	db	0
   943  017176  00                 	db	0
   944  017177  00                 	db	0
   945  017178  00                 	db	0
   946  017179  00                 	db	0
   947  01717A  00                 	db	0
   948  01717B  00                 	db	0
   949  01717C  00                 	db	0
   950  01717D  00                 	db	0
   951  01717E  00                 	db	0
   952  01717F  00                 	db	0
   953  017180  00                 	db	0
   954  017181  00                 	db	0
   955  017182  00                 	db	0
   956  017183  00                 	db	0
   957  017184  00                 	db	0
   958  017185  00                 	db	0
   959  017186  00                 	db	0
   960  017187  00                 	db	0
   961  017188  00                 	db	0
   962  017189  00                 	db	0
   963  01718A  00                 	db	0
   964  01718B  00                 	db	0
   965  01718C  00                 	db	0
   966  01718D  00                 	db	0
   967  01718E  00                 	db	0
   968  01718F  00                 	db	0
   969  017190  00                 	db	0
   970  017191  00                 	db	0
   971  017192  00                 	db	0
   972  017193  00                 	db	0
   973  017194  00                 	db	0
   974  017195  00                 	db	0
   975  017196  00                 	db	0
   976  017197  00                 	db	0
   977  017198  00                 	db	0
   978  017199  00                 	db	0
   979  01719A  00                 	db	0
   980  01719B  00                 	db	0
   981  01719C  00                 	db	0
   982  01719D  00                 	db	0
   983  01719E  00                 	db	0
   984  01719F  00                 	db	0
   985  0171A0  00                 	db	0
   986  0171A1  00                 	db	0
   987  0171A2  00                 	db	0
   988  0171A3  00                 	db	0
   989  0171A4  00                 	db	0
   990  0171A5  00                 	db	0
   991  0171A6  00                 	db	0
   992  0171A7  00                 	db	0
   993  0171A8  00                 	db	0
   994  0171A9  00                 	db	0
   995  0171AA  00                 	db	0
   996  0171AB  00                 	db	0
   997  0171AC  00                 	db	0
   998  0171AD  00                 	db	0
   999  0171AE  00                 	db	0
  1000  0171AF  00                 	db	0
  1001  0171B0  00                 	db	0
  1002  0171B1  00                 	db	0
  1003  0171B2  00                 	db	0
  1004  0171B3  00                 	db	0
  1005  0171B4  00                 	db	0
  1006  0171B5  00                 	db	0
  1007  0171B6  00                 	db	0
  1008  0171B7  00                 	db	0
  1009  0171B8  00                 	db	0
  1010  0171B9  00                 	db	0
  1011  0171BA  00                 	db	0
  1012  0171BB  00                 	db	0
  1013  0171BC  00                 	db	0
  1014  0171BD  00                 	db	0
  1015  0171BE  00                 	db	0
  1016  0171BF  00                 	db	0
  1017  0171C0  00                 	db	0
  1018  0171C1  00                 	db	0
  1019  0171C2  00                 	db	0
  1020  0171C3  00                 	db	0
  1021  0171C4  00                 	db	0
  1022  0171C5  00                 	db	0
  1023  0171C6  00                 	db	0
  1024  0171C7  00                 	db	0
  1025  0171C8  00                 	db	0
  1026  0171C9  00                 	db	0
  1027  0171CA  00                 	db	0
  1028  0171CB  00                 	db	0
  1029  0171CC  00                 	db	0
  1030  0171CD  00                 	db	0
  1031  0171CE  00                 	db	0
  1032  0171CF  00                 	db	0
  1033  0171D0  00                 	db	0
  1034  0171D1  00                 	db	0
  1035  0171D2  00                 	db	0
  1036  0171D3  00                 	db	0
  1037  0171D4  00                 	db	0
  1038  0171D5  00                 	db	0
  1039  0171D6  00                 	db	0
  1040  0171D7  00                 	db	0
  1041  0171D8  00                 	db	0
  1042  0171D9  00                 	db	0
  1043  0171DA  00                 	db	0
  1044  0171DB  00                 	db	0
  1045  0171DC  00                 	db	0
  1046  0171DD  00                 	db	0
  1047  0171DE  00                 	db	0
  1048  0171DF  00                 	db	0
  1049  0171E0  00                 	db	0
  1050  0171E1  00                 	db	0
  1051  0171E2  00                 	db	0
  1052  0171E3  00                 	db	0
  1053  0171E4  00                 	db	0
  1054  0171E5  00                 	db	0
  1055  0171E6  00                 	db	0
  1056  0171E7  00                 	db	0
  1057  0171E8  00                 	db	0
  1058  0171E9  00                 	db	0
  1059  0171EA  00                 	db	0
  1060  0171EB  00                 	db	0
  1061  0171EC  00                 	db	0
  1062  0171ED  00                 	db	0
  1063  0171EE  00                 	db	0
  1064  0171EF  00                 	db	0
  1065  0171F0  00                 	db	0
  1066  0171F1  00                 	db	0
  1067  0171F2  00                 	db	0
  1068  0171F3  00                 	db	0
  1069  0171F4  00                 	db	0
  1070  0171F5  00                 	db	0
  1071  0171F6  00                 	db	0
  1072  0171F7  00                 	db	0
  1073  0171F8  00                 	db	0
  1074  0171F9  00                 	db	0
  1075  0171FA  00                 	db	0
  1076  0171FB  00                 	db	0
  1077  0171FC  00                 	db	0
  1078  0171FD  00                 	db	0
  1079  0171FE  00                 	db	0
  1080  0171FF  00                 	db	0
  1081  017200  00                 	db	0
  1082  017201  00                 	db	0
  1083  017202  00                 	db	0
  1084  017203  00                 	db	0
  1085  017204  00                 	db	0
  1086  017205  00                 	db	0
  1087  017206  00                 	db	0
  1088  017207  00                 	db	0
  1089  017208  00                 	db	0
  1090  017209  00                 	db	0
  1091  01720A  00                 	db	0
  1092  01720B  00                 	db	0
  1093  01720C  00                 	db	0
  1094  01720D  00                 	db	0
  1095  01720E  00                 	db	0
  1096  01720F  00                 	db	0
  1097  017210  00                 	db	0
  1098  017211  00                 	db	0
  1099  017212  00                 	db	0
  1100  017213  00                 	db	0
  1101  017214  00                 	db	0
  1102  017215  00                 	db	0
  1103  017216  00                 	db	0
  1104  017217  00                 	db	0
  1105  017218  00                 	db	0
  1106  017219  00                 	db	0
  1107  01721A  00                 	db	0
  1108  01721B  00                 	db	0
  1109  01721C  00                 	db	0
  1110  01721D  00                 	db	0
  1111  01721E  00                 	db	0
  1112  01721F  00                 	db	0
  1113  017220  00                 	db	0
  1114  017221  00                 	db	0
  1115  017222  00                 	db	0
  1116  017223  00                 	db	0
  1117  017224  00                 	db	0
  1118  017225  00                 	db	0
  1119  017226  00                 	db	0
  1120  017227  00                 	db	0
  1121  017228  00                 	db	0
  1122  017229  00                 	db	0
  1123  01722A  00                 	db	0
  1124  01722B  00                 	db	0
  1125  01722C  00                 	db	0
  1126  01722D  00                 	db	0
  1127  01722E  00                 	db	0
  1128  01722F  00                 	db	0
  1129  017230  00                 	db	0
  1130  017231  00                 	db	0
  1131  017232  00                 	db	0
  1132  017233  00                 	db	0
  1133  017234  00                 	db	0
  1134  017235  00                 	db	0
  1135  017236  00                 	db	0
  1136  017237  00                 	db	0
  1137  017238  00                 	db	0
  1138  017239  00                 	db	0
  1139  01723A  00                 	db	0
  1140  01723B  00                 	db	0
  1141  01723C  00                 	db	0
  1142  01723D  00                 	db	0
  1143  01723E  00                 	db	0
  1144  01723F  00                 	db	0
  1145  017240  00                 	db	0
  1146  017241  00                 	db	0
  1147  017242  00                 	db	0
  1148  017243  00                 	db	0
  1149  017244  00                 	db	0
  1150  017245  00                 	db	0
  1151  017246  00                 	db	0
  1152  017247  00                 	db	0
  1153  017248  00                 	db	0
  1154  017249  00                 	db	0
  1155  01724A  00                 	db	0
  1156  01724B  00                 	db	0
  1157  01724C  00                 	db	0
  1158  01724D  00                 	db	0
  1159  01724E  00                 	db	0
  1160  01724F  00                 	db	0
  1161  017250  00                 	db	0
  1162  017251  00                 	db	0
  1163  017252  00                 	db	0
  1164  017253  00                 	db	0
  1165  017254  00                 	db	0
  1166  017255  00                 	db	0
  1167  017256  00                 	db	0
  1168  017257  00                 	db	0
  1169  017258  00                 	db	0
  1170  017259  00                 	db	0
  1171  01725A  00                 	db	0
  1172  01725B  00                 	db	0
  1173  01725C  00                 	db	0
  1174  01725D  00                 	db	0
  1175  01725E  00                 	db	0
  1176  01725F  00                 	db	0
  1177  017260  00                 	db	0
  1178  017261  00                 	db	0
  1179  017262  00                 	db	0
  1180  017263  00                 	db	0
  1181  017264  00                 	db	0
  1182  017265  00                 	db	0
  1183  017266  00                 	db	0
  1184  017267  00                 	db	0
  1185  017268  00                 	db	0
  1186  017269  00                 	db	0
  1187  01726A  00                 	db	0
  1188  01726B  00                 	db	0
  1189  01726C  00                 	db	0
  1190  01726D  00                 	db	0
  1191  01726E  00                 	db	0
  1192  01726F  00                 	db	0
  1193  017270  00                 	db	0
  1194  017271  00                 	db	0
  1195  017272  00                 	db	0
  1196  017273  00                 	db	0
  1197  017274  00                 	db	0
  1198  017275  00                 	db	0
  1199  017276  00                 	db	0
  1200  017277  00                 	db	0
  1201  017278  00                 	db	0
  1202  017279  00                 	db	0
  1203  01727A  00                 	db	0
  1204  01727B  00                 	db	0
  1205  01727C  00                 	db	0
  1206  01727D  00                 	db	0
  1207  01727E  00                 	db	0
  1208  01727F  00                 	db	0
  1209  017280  00                 	db	0
  1210  017281  00                 	db	0
  1211  017282  00                 	db	0
  1212  017283  00                 	db	0
  1213  017284  00                 	db	0
  1214  017285  00                 	db	0
  1215  017286  00                 	db	0
  1216  017287  00                 	db	0
  1217  017288  00                 	db	0
  1218  017289  00                 	db	0
  1219  01728A  00                 	db	0
  1220  01728B  00                 	db	0
  1221  01728C  00                 	db	0
  1222  01728D  00                 	db	0
  1223  01728E  00                 	db	0
  1224  01728F  00                 	db	0
  1225  017290  00                 	db	0
  1226  017291  00                 	db	0
  1227  017292  00                 	db	0
  1228  017293  00                 	db	0
  1229  017294  00                 	db	0
  1230  017295  00                 	db	0
  1231  017296  00                 	db	0
  1232  017297  00                 	db	0
  1233  017298  00                 	db	0
  1234  017299  00                 	db	0
  1235  01729A  00                 	db	0
  1236  01729B  00                 	db	0
  1237  01729C  00                 	db	0
  1238  01729D  00                 	db	0
  1239  01729E  00                 	db	0
  1240  01729F  00                 	db	0
  1241  0172A0  00                 	db	0
  1242  0172A1  00                 	db	0
  1243  0172A2  00                 	db	0
  1244  0172A3  00                 	db	0
  1245  0172A4  00                 	db	0
  1246  0172A5  00                 	db	0
  1247  0172A6  00                 	db	0
  1248  0172A7  00                 	db	0
  1249  0172A8  00                 	db	0
  1250  0172A9  00                 	db	0
  1251  0172AA  00                 	db	0
  1252  0172AB  00                 	db	0
  1253  0172AC  00                 	db	0
  1254  0172AD  00                 	db	0
  1255  0172AE  00                 	db	0
  1256  0172AF  00                 	db	0
  1257  0172B0  00                 	db	0
  1258  0172B1  00                 	db	0
  1259  0172B2  00                 	db	0
  1260  0172B3  00                 	db	0
  1261  0172B4  00                 	db	0
  1262  0172B5  00                 	db	0
  1263  0172B6  00                 	db	0
  1264  0172B7  00                 	db	0
  1265  0172B8  00                 	db	0
  1266  0172B9  00                 	db	0
  1267  0172BA  00                 	db	0
  1268  0172BB  00                 	db	0
  1269  0172BC  00                 	db	0
  1270  0172BD  00                 	db	0
  1271  0172BE  00                 	db	0
  1272  0172BF  00                 	db	0
  1273  0172C0  00                 	db	0
  1274  0172C1  00                 	db	0
  1275  0172C2  00                 	db	0
  1276  0172C3  00                 	db	0
  1277  0172C4  00                 	db	0
  1278  0172C5  00                 	db	0
  1279  0172C6  00                 	db	0
  1280  0172C7  00                 	db	0
  1281  0172C8  00                 	db	0
  1282  0172C9  00                 	db	0
  1283  0172CA  00                 	db	0
  1284  0172CB  00                 	db	0
  1285  0172CC  00                 	db	0
  1286  0172CD  00                 	db	0
  1287  0172CE  00                 	db	0
  1288  0172CF  00                 	db	0
  1289  0172D0  00                 	db	0
  1290  0172D1  00                 	db	0
  1291  0172D2  00                 	db	0
  1292  0172D3  00                 	db	0
  1293  0172D4  00                 	db	0
  1294  0172D5  00                 	db	0
  1295  0172D6  00                 	db	0
  1296  0172D7  00                 	db	0
  1297  0172D8  00                 	db	0
  1298  0172D9  00                 	db	0
  1299  0172DA  00                 	db	0
  1300  0172DB  00                 	db	0
  1301  0172DC  00                 	db	0
  1302  0172DD  00                 	db	0
  1303  0172DE  00                 	db	0
  1304  0172DF  00                 	db	0
  1305  0172E0  00                 	db	0
  1306  0172E1  00                 	db	0
  1307                           
  1308                           ;initializer for _C
  1309  0172E2  0000               	dw	0
  1310  0172E4  0000               	dw	0
  1311  0172E6  0000               	dw	0
  1312  0172E8  0000               	dw	0
  1313  0172EA  0000               	dw	0
  1314  0172EC  0000               	dw	0
  1315  0172EE  0000               	dw	0
  1316  0172F0  0000               	dw	0
  1317  0172F2  0000               	dw	0
  1318  0172F4  0000               	dw	0
  1319  0172F6  0000               	dw	0
  1320  0172F8  0000               	dw	0
  1321  0172FA  0000               	dw	0
  1322  0172FC  0000               	dw	0
  1323  0172FE  0000               	dw	0
  1324  017300  0000               	dw	0
  1325  017302  0000               	dw	0
  1326  017304  0000               	dw	0
  1327  017306  0000               	dw	0
  1328  017308  0000               	dw	0
  1329  01730A  0000               	dw	0
  1330  01730C  0000               	dw	0
  1331  01730E  0000               	dw	0
  1332  017310  0000               	dw	0
  1333  017312  0000               	dw	0
  1334  017314  0000               	dw	0
  1335  017316  0000               	dw	0
  1336  017318  0000               	dw	0
  1337  01731A  0000               	dw	0
  1338  01731C  0000               	dw	0
  1339  01731E  0000               	dw	0
  1340  017320  0000               	dw	0
  1341  017322  0000               	dw	0
  1342  017324  0000               	dw	0
  1343  017326  0000               	dw	0
  1344  017328  0000               	dw	0
  1345  01732A  0000               	dw	0
  1346  01732C  0000               	dw	0
  1347  01732E  0000               	dw	0
  1348  017330  0000               	dw	0
  1349  017332  0000               	dw	0
  1350  017334  0000               	dw	0
  1351  017336  0000               	dw	0
  1352  017338  0000               	dw	0
  1353  01733A  0000               	dw	0
  1354  01733C  0000               	dw	0
  1355  01733E  0000               	dw	0
  1356  017340  0000               	dw	0
  1357  017342  0000               	dw	0
  1358  017344  0000               	dw	0
  1359  017346  0000               	dw	0
  1360  017348  0000               	dw	0
  1361  01734A  0000               	dw	0
  1362  01734C  0000               	dw	0
  1363  01734E  0000               	dw	0
  1364  017350  0000               	dw	0
  1365  017352  0000               	dw	0
  1366  017354  0000               	dw	0
  1367  017356  0000               	dw	0
  1368  017358  0000               	dw	0
  1369  01735A  0000               	dw	0
  1370  01735C  0000               	dw	0
  1371  01735E  0000               	dw	0
  1372  017360  0000               	dw	0
  1373  017362  0000               	dw	0
  1374  017364  0000               	dw	0
  1375  017366  0000               	dw	0
  1376  017368  0000               	dw	0
  1377  01736A  0000               	dw	0
  1378  01736C  0000               	dw	0
  1379  01736E  0000               	dw	0
  1380  017370  42FA               	dw	17146
  1381  017372  0000               	dw	0
  1382  017374  0000               	dw	0
  1383  017376  0000               	dw	0
  1384  017378  0000               	dw	0
  1385  01737A  0000               	dw	0
  1386  01737C  0000               	dw	0
  1387  01737E  0000               	dw	0
  1388  017380  0000               	dw	0
  1389  017382  0000               	dw	0
  1390  017384  0000               	dw	0
  1391  017386  0000               	dw	0
  1392  017388  0000               	dw	0
  1393  01738A  0000               	dw	0
  1394  01738C  0000               	dw	0
  1395  01738E  0000               	dw	0
  1396  017390  0000               	dw	0
  1397  017392  0000               	dw	0
  1398  017394  0000               	dw	0
  1399  017396  0000               	dw	0
  1400  017398  0000               	dw	0
  1401  01739A  00                 	db	0
  1402  01739B  01                 	db	1
  1403  01739C  0000               	dw	0
  1404  01739E  3F80               	dw	16256
  1405  0173A0  0000               	dw	0
  1406  0173A2  3F80               	dw	16256
  1407  0173A4  00                 	db	0
  1408  0173A5  00                 	db	0
  1409  0173A6  00                 	db	0
  1410  0173A7  00                 	db	0
  1411  0173A8  00                 	db	0
  1412  0173A9  00                 	db	0
  1413  0173AA  00                 	db	0
  1414  0173AB  00                 	db	0
  1415  0173AC  00                 	db	0
  1416  0173AD  00                 	db	0
  1417  0173AE  00                 	db	0
  1418  0173AF  00                 	db	0
  1419  0173B0  00                 	db	0
  1420  0173B1  00                 	db	0
  1421  0173B2  00                 	db	0
  1422  0173B3  00                 	db	0
  1423  0173B4  00                 	db	0
  1424  0173B5  00                 	db	0
  1425  0173B6  00                 	db	0
  1426  0173B7  00                 	db	0
  1427  0173B8  00                 	db	0
  1428  0173B9  00                 	db	0
  1429  0173BA  00                 	db	0
  1430  0173BB  00                 	db	0
  1431  0173BC  00                 	db	0
  1432  0173BD  00                 	db	0
  1433  0173BE  00                 	db	0
  1434  0173BF  00                 	db	0
  1435  0173C0  00                 	db	0
  1436  0173C1  00                 	db	0
  1437  0173C2  00                 	db	0
  1438  0173C3  00                 	db	0
  1439  0173C4  00                 	db	0
  1440  0173C5  00                 	db	0
  1441  0173C6  00                 	db	0
  1442  0173C7  00                 	db	0
  1443  0173C8  00                 	db	0
  1444  0173C9  00                 	db	0
  1445  0173CA  00                 	db	0
  1446  0173CB  00                 	db	0
  1447  0173CC  00                 	db	0
  1448  0173CD  00                 	db	0
  1449  0173CE  00                 	db	0
  1450  0173CF  00                 	db	0
  1451  0173D0  00                 	db	0
  1452  0173D1  00                 	db	0
  1453  0173D2  00                 	db	0
  1454  0173D3  00                 	db	0
  1455  0173D4  00                 	db	0
  1456  0173D5  00                 	db	0
  1457  0173D6  00                 	db	0
  1458  0173D7  00                 	db	0
  1459  0173D8  00                 	db	0
  1460  0173D9  00                 	db	0
  1461  0173DA  00                 	db	0
  1462  0173DB  00                 	db	0
  1463  0173DC  00                 	db	0
  1464  0173DD  00                 	db	0
  1465  0173DE  00                 	db	0
  1466  0173DF  00                 	db	0
  1467  0173E0  00                 	db	0
  1468  0173E1  00                 	db	0
  1469  0173E2  00                 	db	0
  1470  0173E3  00                 	db	0
  1471  0173E4  00                 	db	0
  1472  0173E5  00                 	db	0
  1473  0173E6  00                 	db	0
  1474  0173E7  00                 	db	0
  1475  0173E8  00                 	db	0
  1476  0173E9  00                 	db	0
  1477  0173EA  00                 	db	0
  1478  0173EB  00                 	db	0
  1479  0173EC  00                 	db	0
  1480  0173ED  00                 	db	0
  1481  0173EE  00                 	db	0
  1482  0173EF  00                 	db	0
  1483  0173F0  0000               	dw	0
  1484  0173F2  0000               	dw	0
  1485  0173F4  0000               	dw	0
  1486  0173F6  0000               	dw	0
  1487  0173F8  0000               	dw	0
  1488  0173FA  0000               	dw	0
  1489  0173FC  0000               	dw	0
  1490  0173FE  0000               	dw	0
  1491  017400  0000               	dw	0
  1492  017402  0000               	dw	0
  1493  017404  01                 	db	1
  1494  017405  00                 	db	0
  1495  017406  00                 	db	0
  1496  017407  00                 	db	0
  1497  017408  00                 	db	0
  1498  017409  00                 	db	0
  1499  01740A  00                 	db	0
  1500  01740B  00                 	db	0
  1501  01740C  00                 	db	0
  1502                           
  1503                           	psect	idataBANK0
  1504  01C9E4                     __pidataBANK0:
  1505                           	opt callstack 0
  1506                           
  1507                           ;initializer for _R
  1508  01C9E4  0000               	dw	0
  1509  01C9E6  0000               	dw	0
  1510  01C9E8  0000               	dw	0
  1511  01C9EA  0000               	dw	0
  1512  01C9EC  0000               	dw	0
  1513  01C9EE  0000               	dw	0
  1514  01C9F0  0000               	dw	0
  1515  01C9F2  0000               	dw	0
  1516  01C9F4  0000               	dw	0
  1517  01C9F6  0000               	dw	0
  1518  01C9F8  0000               	dw	0
  1519  01C9FA  0000               	dw	0
  1520  01C9FC  0000               	dw	0
  1521  01C9FE  0000               	dw	0
  1522  01CA00  0000               	dw	0
  1523  01CA02  0000               	dw	0
  1524  01CA04  0000               	dw	0
  1525  01CA06  0000               	dw	0
  1526  01CA08  0000               	dw	0
  1527  01CA0A  0F62               	dw	3938
  1528  01CA0C  0FA4               	dw	4004
  1529  01CA0E  2D0E               	dw	11534
  1530  01CA10  3DB2               	dw	15794
  1531  01CA12  DD98               	dw	56728
  1532  01CA14  3D13               	dw	15635
  1533  01CA16  00                 	db	0
  1534  01CA17  0000               	dw	0
  1535  01CA19  00                 	db	0
  1536  01CA1A  1957               	dw	6487
  1537  01CA1C  42                 	db	66
  1538                           
  1539                           	psect	idataBANK1
  1540  01B01A                     __pidataBANK1:
  1541                           	opt callstack 0
  1542                           
  1543                           ;initializer for stoa@F1166
  1544  01B01A  28                 	db	40
  1545  01B01B  6E                 	db	110
  1546  01B01C  75                 	db	117
  1547  01B01D  6C                 	db	108
  1548  01B01E  6C                 	db	108
  1549  01B01F  29                 	db	41
  1550  01B020  00                 	db	0
  1551                           
  1552                           ;initializer for _V
  1553  01B021  00                 	db	0
  1554  01B022  00                 	db	0
  1555  01B023  00                 	db	0
  1556  01B024  00                 	db	0
  1557  01B025  00                 	db	0
  1558  01B026  00                 	db	0
  1559  01B027  00                 	db	0
  1560  01B028  00                 	db	0
  1561  01B029  00                 	db	0
  1562  01B02A  00                 	db	0
  1563  01B02B  00                 	db	0
  1564  01B02C  00                 	db	0
  1565  01B02D  00                 	db	0
  1566  01B02E  00                 	db	0
  1567  01B02F  00                 	db	0
  1568  01B030  00                 	db	0
  1569  01B031  00                 	db	0
  1570  01B032  00                 	db	0
  1571  01B033  00                 	db	0
  1572  01B034  00                 	db	0
  1573  01B035  00                 	db	0
  1574  01B036  00                 	db	0
  1575  01B037  00                 	db	0
  1576  01B038  00                 	db	0
  1577  01B039  00                 	db	0
  1578  01B03A  00                 	db	0
  1579  01B03B  00                 	db	0
  1580  01B03C  00                 	db	0
  1581  01B03D  00                 	db	0
  1582  01B03E  00                 	db	0
  1583  01B03F  00                 	db	0
  1584  01B040  00                 	db	0
  1585  01B041  00                 	db	0
  1586  01B042  00                 	db	0
  1587  01B043  00                 	db	0
  1588  01B044  00                 	db	0
  1589  01B045  00                 	db	0
  1590  01B046  00                 	db	0
  1591  01B047  00                 	db	0
  1592  01B048  00                 	db	0
  1593  01B049  00                 	db	0
  1594  01B04A  00                 	db	0
  1595  01B04B  00                 	db	0
  1596  01B04C  00                 	db	0
  1597  01B04D  00                 	db	0
  1598  01B04E  00                 	db	0
  1599  01B04F  00                 	db	0
  1600  01B050  00                 	db	0
  1601  01B051  00                 	db	0
  1602  01B052  00                 	db	0
  1603  01B053  00                 	db	0
  1604  01B054  00                 	db	0
  1605  01B055  00                 	db	0
  1606  01B056  00                 	db	0
  1607  01B057  00                 	db	0
  1608  01B058  00                 	db	0
  1609  01B059  00                 	db	0
  1610  01B05A  00                 	db	0
  1611  01B05B  00                 	db	0
  1612  01B05C  00                 	db	0
  1613  01B05D  00                 	db	0
  1614  01B05E  00                 	db	0
  1615  01B05F  00                 	db	0
  1616  01B060  00                 	db	0
  1617  01B061  00                 	db	0
  1618  01B062  00                 	db	0
  1619  01B063  00                 	db	0
  1620  01B064  00                 	db	0
  1621  01B065  00                 	db	0
  1622  01B066  00                 	db	0
  1623  01B067  00                 	db	0
  1624  01B068  00                 	db	0
  1625  01B069  00                 	db	0
  1626  01B06A  00                 	db	0
  1627  01B06B  00                 	db	0
  1628  01B06C  00                 	db	0
  1629  01B06D  00                 	db	0
  1630  01B06E  00                 	db	0
  1631  01B06F  00                 	db	0
  1632  01B070  00                 	db	0
  1633  01B071  00                 	db	0
  1634  01B072  00                 	db	0
  1635  01B073  00                 	db	0
  1636  01B074  00                 	db	0
  1637  01B075  00                 	db	0
  1638  01B076  00                 	db	0
  1639  01B077  00                 	db	0
  1640  01B078  00                 	db	0
  1641  01B079  00                 	db	0
  1642  01B07A  00                 	db	0
  1643  01B07B  00                 	db	0
  1644  01B07C  00                 	db	0
  1645  01B07D  00                 	db	0
  1646  01B07E  00                 	db	0
  1647  01B07F  00                 	db	0
  1648  01B080  00                 	db	0
  1649  01B081  00                 	db	0
  1650  01B082  00                 	db	0
  1651  01B083  00                 	db	0
  1652  01B084  00                 	db	0
  1653  01B085  00                 	db	0
  1654  01B086  00                 	db	0
  1655  01B087  00                 	db	0
  1656  01B088  00                 	db	0
  1657  01B089  00                 	db	0
  1658  01B08A  00                 	db	0
  1659  01B08B  00                 	db	0
  1660  01B08C  00                 	db	0
  1661  01B08D  00                 	db	0
  1662  01B08E  00                 	db	0
  1663  01B08F  00                 	db	0
  1664  01B090  00                 	db	0
  1665  01B091  00                 	db	0
  1666  01B092  00                 	db	0
  1667  01B093  00                 	db	0
  1668  01B094  00                 	db	0
  1669  01B095  00                 	db	0
  1670  01B096  00                 	db	0
  1671  01B097  00                 	db	0
  1672  01B098  00                 	db	0
  1673  01B099  00                 	db	0
  1674  01B09A  00                 	db	0
  1675  01B09B  00                 	db	0
  1676  01B09C  00                 	db	0
  1677  01B09D  00                 	db	0
  1678  01B09E  00                 	db	0
  1679  01B09F  00                 	db	0
  1680  01B0A0  00                 	db	0
  1681  01B0A1  00                 	db	0
  1682  01B0A2  0000               	dw	0
  1683  01B0A4  0000               	dw	0
  1684  01B0A6  0000               	dw	0
  1685  01B0A8  0000               	dw	0
  1686  01B0AA  00                 	db	0
  1687  01B0AB  00                 	db	0
  1688  01B0AC  00                 	db	0
  1689  01B0AD  00                 	db	0
  1690  01B0AE  00                 	db	0
  1691  01B0AF  00                 	db	0
  1692  01B0B0  0000               	dw	0
  1693  01B0B2  0000               	dw	0
  1694  01B0B4  0000               	dw	0
  1695  01B0B6  0000               	dw	0
  1696  01B0B8  0000               	dw	0
  1697  01B0BA  0000               	dw	0
  1698  01B0BC  00                 	db	0
  1699  01B0BD  00                 	db	0
  1700  01B0BE  00                 	db	0
  1701  01B0BF  00                 	db	0
  1702  01B0C0  00                 	db	0
  1703  01B0C1  00                 	db	0
  1704  01B0C2  00                 	db	0
  1705  01B0C3  00                 	db	0
  1706  01B0C4  00                 	db	0
  1707  01B0C5  00                 	db	0
  1708  01B0C6  00                 	db	0
  1709  01B0C7  0000               	dw	0
  1710  01B0C9  0000               	dw	0
  1711  01B0CB  2D                 	db	45
  1712  01B0CC  00                 	db	0
  1713  01B0CD  00                 	db	0
  1714  01B0CE  00                 	db	0
  1715  01B0CF  00                 	db	0
  1716  01B0D0  00                 	db	0
  1717  01B0D1  0000               	dw	0
  1718  01B0D3  0000               	dw	0
  1719  01B0D5  0000               	dw	0
  1720  01B0D7  0000               	dw	0
  1721  01B0D9  0000               	dw	0
  1722  01B0DB  0000               	dw	0
  1723  01B0DD  0000               	dw	0
  1724  01B0DF  0000               	dw	0
  1725                           
  1726                           ;initializer for _H
  1727  01B0E1  00                 	db	0
  1728  01B0E2  00                 	db	0
  1729  01B0E3  01                 	db	1
  1730  01B0E4  00                 	db	0
  1731  01B0E5  01                 	db	1
  1732  01B0E6  00                 	db	0
  1733  01B0E7  01                 	db	1
  1734  01B0E8  00                 	db	0
  1735  01B0E9  00                 	db	0
  1736                           
  1737                           	psect	mediumconst
  1738  00F8E2                     __pmediumconst:
  1739                           	opt callstack 0
  1740  00F8E2  00                 	db	0
  1741  00F8E3                     _BVSOC_TABLE:
  1742                           	opt callstack 0
  1743  00F8E3  59D8               	dw	23000
  1744  00F8E5  0000               	dw	0
  1745  00F8E7  0005               	dw	5
  1746  00F8E9  0000               	dw	0
  1747  00F8EB  5B68               	dw	23400
  1748  00F8ED  0000               	dw	0
  1749  00F8EF  000A               	dw	10
  1750  00F8F1  0000               	dw	0
  1751  00F8F3  5C30               	dw	23600
  1752  00F8F5  0000               	dw	0
  1753  00F8F7  0014               	dw	20
  1754  00F8F9  0000               	dw	0
  1755  00F8FB  5E38               	dw	24120
  1756  00F8FD  0000               	dw	0
  1757  00F8FF  0019               	dw	25
  1758  00F901  0000               	dw	0
  1759  00F903  5E88               	dw	24200
  1760  00F905  0000               	dw	0
  1761  00F907  001E               	dw	30
  1762  00F909  0000               	dw	0
  1763  00F90B  5F78               	dw	24440
  1764  00F90D  0000               	dw	0
  1765  00F90F  0028               	dw	40
  1766  00F911  0000               	dw	0
  1767  00F913  5FDC               	dw	24540
  1768  00F915  0000               	dw	0
  1769  00F917  002D               	dw	45
  1770  00F919  0000               	dw	0
  1771  00F91B  6018               	dw	24600
  1772  00F91D  0000               	dw	0
  1773  00F91F  0032               	dw	50
  1774  00F921  0000               	dw	0
  1775  00F923  6046               	dw	24646
  1776  00F925  0000               	dw	0
  1777  00F927  0035               	dw	53
  1778  00F929  0000               	dw	0
  1779  00F92B  607C               	dw	24700
  1780  00F92D  0000               	dw	0
  1781  00F92F  0037               	dw	55
  1782  00F931  0000               	dw	0
  1783  00F933  60AE               	dw	24750
  1784  00F935  0000               	dw	0
  1785  00F937  0039               	dw	57
  1786  00F939  0000               	dw	0
  1787  00F93B  60E0               	dw	24800
  1788  00F93D  0000               	dw	0
  1789  00F93F  003C               	dw	60
  1790  00F941  0000               	dw	0
  1791  00F943  6112               	dw	24850
  1792  00F945  0000               	dw	0
  1793  00F947  003F               	dw	63
  1794  00F949  0000               	dw	0
  1795  00F94B  615D               	dw	24925
  1796  00F94D  0000               	dw	0
  1797  00F94F  0043               	dw	67
  1798  00F951  0000               	dw	0
  1799  00F953  61A8               	dw	25000
  1800  00F955  0000               	dw	0
  1801  00F957  0046               	dw	70
  1802  00F959  0000               	dw	0
  1803  00F95B  61BC               	dw	25020
  1804  00F95D  0000               	dw	0
  1805  00F95F  0048               	dw	72
  1806  00F961  0000               	dw	0
  1807  00F963  61D0               	dw	25040
  1808  00F965  0000               	dw	0
  1809  00F967  004B               	dw	75
  1810  00F969  0000               	dw	0
  1811  00F96B  61DA               	dw	25050
  1812  00F96D  0000               	dw	0
  1813  00F96F  0050               	dw	80
  1814  00F971  0000               	dw	0
  1815  00F973  61E4               	dw	25060
  1816  00F975  0000               	dw	0
  1817  00F977  0055               	dw	85
  1818  00F979  0000               	dw	0
  1819  00F97B  61F8               	dw	25080
  1820  00F97D  0000               	dw	0
  1821  00F97F  005A               	dw	90
  1822  00F981  0000               	dw	0
  1823  00F983  6208               	dw	25096
  1824  00F985  0000               	dw	0
  1825  00F987  005C               	dw	92
  1826  00F989  0000               	dw	0
  1827  00F98B  6222               	dw	25122
  1828  00F98D  0000               	dw	0
  1829  00F98F  005D               	dw	93
  1830  00F991  0000               	dw	0
  1831  00F993  6234               	dw	25140
  1832  00F995  0000               	dw	0
  1833  00F997  005F               	dw	95
  1834  00F999  0000               	dw	0
  1835  00F99B  6248               	dw	25160
  1836  00F99D  0000               	dw	0
  1837  00F99F  0061               	dw	97
  1838  00F9A1  0000               	dw	0
  1839  00F9A3  625C               	dw	25180
  1840  00F9A5  0000               	dw	0
  1841  00F9A7  0064               	dw	100
  1842  00F9A9  0000               	dw	0
  1843  00F9AB  6784               	dw	26500
  1844  00F9AD  0000               	dw	0
  1845  00F9AF  0062               	dw	98
  1846  00F9B1  0000               	dw	0
  1847  00F9B3                     __end_of_BVSOC_TABLE:
  1848                           	opt callstack 0
  1849  00F9B3                     _T:
  1850                           	opt callstack 0
  1851  00F9B3  63                 	db	99
  1852  00F9B4  6F                 	db	111
  1853  00F9B5  6D                 	db	109
  1854  00F9B6  6D                 	db	109
  1855  00F9B7  61                 	db	97
  1856  00F9B8  6E                 	db	110
  1857  00F9B9  64                 	db	100
  1858  00F9BA  73                 	db	115
  1859  00F9BB  20                 	db	32
  1860  00F9BC  31                 	db	49
  1861  00F9BD  00                 	db	0
  1862  00F9BE  00                 	db	0
  1863  00F9BF  00                 	db	0
  1864  00F9C0  00                 	db	0
  1865  00F9C1  00                 	db	0
  1866  00F9C2  00                 	db	0
  1867  00F9C3  00                 	db	0
  1868  00F9C4  00                 	db	0
  1869  00F9C5  64                 	db	100
  1870  00F9C6  69                 	db	105
  1871  00F9C7  73                 	db	115
  1872  00F9C8  70                 	db	112
  1873  00F9C9  6C                 	db	108
  1874  00F9CA  61                 	db	97
  1875  00F9CB  79                 	db	121
  1876  00F9CC  73                 	db	115
  1877  00F9CD  20                 	db	32
  1878  00F9CE  31                 	db	49
  1879  00F9CF  00                 	db	0
  1880  00F9D0  00                 	db	0
  1881  00F9D1  00                 	db	0
  1882  00F9D2  00                 	db	0
  1883  00F9D3  00                 	db	0
  1884  00F9D4  00                 	db	0
  1885  00F9D5  00                 	db	0
  1886  00F9D6  00                 	db	0
  1887  00F9D7  63                 	db	99
  1888  00F9D8  6F                 	db	111
  1889  00F9D9  6D                 	db	109
  1890  00F9DA  6D                 	db	109
  1891  00F9DB  61                 	db	97
  1892  00F9DC  6E                 	db	110
  1893  00F9DD  64                 	db	100
  1894  00F9DE  73                 	db	115
  1895  00F9DF  20                 	db	32
  1896  00F9E0  32                 	db	50
  1897  00F9E1  00                 	db	0
  1898  00F9E2  00                 	db	0
  1899  00F9E3  00                 	db	0
  1900  00F9E4  00                 	db	0
  1901  00F9E5  00                 	db	0
  1902  00F9E6  00                 	db	0
  1903  00F9E7  00                 	db	0
  1904  00F9E8  00                 	db	0
  1905  00F9E9  64                 	db	100
  1906  00F9EA  69                 	db	105
  1907  00F9EB  73                 	db	115
  1908  00F9EC  70                 	db	112
  1909  00F9ED  6C                 	db	108
  1910  00F9EE  61                 	db	97
  1911  00F9EF  79                 	db	121
  1912  00F9F0  73                 	db	115
  1913  00F9F1  20                 	db	32
  1914  00F9F2  32                 	db	50
  1915  00F9F3  00                 	db	0
  1916  00F9F4  00                 	db	0
  1917  00F9F5  00                 	db	0
  1918  00F9F6  00                 	db	0
  1919  00F9F7  00                 	db	0
  1920  00F9F8  00                 	db	0
  1921  00F9F9  00                 	db	0
  1922  00F9FA  00                 	db	0
  1923  00F9FB  63                 	db	99
  1924  00F9FC  6F                 	db	111
  1925  00F9FD  6D                 	db	109
  1926  00F9FE  6D                 	db	109
  1927  00F9FF  61                 	db	97
  1928  00FA00  6E                 	db	110
  1929  00FA01  64                 	db	100
  1930  00FA02  73                 	db	115
  1931  00FA03  20                 	db	32
  1932  00FA04  33                 	db	51
  1933  00FA05  00                 	db	0
  1934  00FA06  00                 	db	0
  1935  00FA07  00                 	db	0
  1936  00FA08  00                 	db	0
  1937  00FA09  00                 	db	0
  1938  00FA0A  00                 	db	0
  1939  00FA0B  00                 	db	0
  1940  00FA0C  00                 	db	0
  1941  00FA0D  64                 	db	100
  1942  00FA0E  69                 	db	105
  1943  00FA0F  73                 	db	115
  1944  00FA10  70                 	db	112
  1945  00FA11  6C                 	db	108
  1946  00FA12  61                 	db	97
  1947  00FA13  79                 	db	121
  1948  00FA14  73                 	db	115
  1949  00FA15  20                 	db	32
  1950  00FA16  33                 	db	51
  1951  00FA17  00                 	db	0
  1952  00FA18  00                 	db	0
  1953  00FA19  00                 	db	0
  1954  00FA1A  00                 	db	0
  1955  00FA1B  00                 	db	0
  1956  00FA1C  00                 	db	0
  1957  00FA1D  00                 	db	0
  1958  00FA1E  00                 	db	0
  1959  00FA1F  63                 	db	99
  1960  00FA20  6F                 	db	111
  1961  00FA21  6D                 	db	109
  1962  00FA22  6D                 	db	109
  1963  00FA23  61                 	db	97
  1964  00FA24  6E                 	db	110
  1965  00FA25  64                 	db	100
  1966  00FA26  73                 	db	115
  1967  00FA27  20                 	db	32
  1968  00FA28  34                 	db	52
  1969  00FA29  00                 	db	0
  1970  00FA2A  00                 	db	0
  1971  00FA2B  00                 	db	0
  1972  00FA2C  00                 	db	0
  1973  00FA2D  00                 	db	0
  1974  00FA2E  00                 	db	0
  1975  00FA2F  00                 	db	0
  1976  00FA30  00                 	db	0
  1977  00FA31  64                 	db	100
  1978  00FA32  69                 	db	105
  1979  00FA33  73                 	db	115
  1980  00FA34  70                 	db	112
  1981  00FA35  6C                 	db	108
  1982  00FA36  61                 	db	97
  1983  00FA37  79                 	db	121
  1984  00FA38  73                 	db	115
  1985  00FA39  20                 	db	32
  1986  00FA3A  34                 	db	52
  1987  00FA3B  00                 	db	0
  1988  00FA3C  00                 	db	0
  1989  00FA3D  00                 	db	0
  1990  00FA3E  00                 	db	0
  1991  00FA3F  00                 	db	0
  1992  00FA40  00                 	db	0
  1993  00FA41  00                 	db	0
  1994  00FA42  00                 	db	0
  1995  00FA43                     __end_of_T:
  1996                           	opt callstack 0
  1997  00FA43                     _spin:
  1998                           	opt callstack 0
  1999  00FA43  7C                 	db	124
  2000  00FA44  7C                 	db	124
  2001  00FA45  2F                 	db	47
  2002  00FA46  2F                 	db	47
  2003  00FA47  2D                 	db	45
  2004  00FA48  2D                 	db	45
  2005  00FA49  00                 	db	0
  2006  00FA4A  00                 	db	0
  2007  00FA4B  00                 	db	0
  2008  00FA4C  00                 	db	0
  2009  00FA4D  00                 	db	0
  2010  00FA4E  00                 	db	0
  2011  00FA4F  00                 	db	0
  2012  00FA50  00                 	db	0
  2013  00FA51  00                 	db	0
  2014  00FA52  00                 	db	0
  2015  00FA53  00                 	db	0
  2016  00FA54  00                 	db	0
  2017  00FA55  00                 	db	0
  2018  00FA56  00                 	db	0
  2019  00FA57  7C                 	db	124
  2020  00FA58  7C                 	db	124
  2021  00FA59  2F                 	db	47
  2022  00FA5A  2F                 	db	47
  2023  00FA5B  2D                 	db	45
  2024  00FA5C  2D                 	db	45
  2025  00FA5D  5C                 	db	92
  2026  00FA5E  5C                 	db	92
  2027  00FA5F  00                 	db	0
  2028  00FA60  00                 	db	0
  2029  00FA61  00                 	db	0
  2030  00FA62  00                 	db	0
  2031  00FA63  00                 	db	0
  2032  00FA64  00                 	db	0
  2033  00FA65  00                 	db	0
  2034  00FA66  00                 	db	0
  2035  00FA67  00                 	db	0
  2036  00FA68  00                 	db	0
  2037  00FA69  00                 	db	0
  2038  00FA6A  00                 	db	0
  2039  00FA6B  4F                 	db	79
  2040  00FA6C  4F                 	db	79
  2041  00FA6D  4F                 	db	79
  2042  00FA6E  4F                 	db	79
  2043  00FA6F  4F                 	db	79
  2044  00FA70  4F                 	db	79
  2045  00FA71  2D                 	db	45
  2046  00FA72  2D                 	db	45
  2047  00FA73  5F                 	db	95
  2048  00FA74  5F                 	db	95
  2049  00FA75  2D                 	db	45
  2050  00FA76  00                 	db	0
  2051  00FA77  00                 	db	0
  2052  00FA78  00                 	db	0
  2053  00FA79  00                 	db	0
  2054  00FA7A  00                 	db	0
  2055  00FA7B  00                 	db	0
  2056  00FA7C  00                 	db	0
  2057  00FA7D  00                 	db	0
  2058  00FA7E  00                 	db	0
  2059  00FA7F  76                 	db	118
  2060  00FA80  76                 	db	118
  2061  00FA81  3C                 	db	60
  2062  00FA82  3C                 	db	60
  2063  00FA83  5E                 	db	94
  2064  00FA84  5E                 	db	94
  2065  00FA85  3E                 	db	62
  2066  00FA86  3E                 	db	62
  2067  00FA87  00                 	db	0
  2068  00FA88  00                 	db	0
  2069  00FA89  00                 	db	0
  2070  00FA8A  00                 	db	0
  2071  00FA8B  00                 	db	0
  2072  00FA8C  00                 	db	0
  2073  00FA8D  00                 	db	0
  2074  00FA8E  00                 	db	0
  2075  00FA8F  00                 	db	0
  2076  00FA90  00                 	db	0
  2077  00FA91  00                 	db	0
  2078  00FA92  00                 	db	0
  2079  00FA93  2E                 	db	46
  2080  00FA94  2E                 	db	46
  2081  00FA95  2A                 	db	42
  2082  00FA96  2A                 	db	42
  2083  00FA97  78                 	db	120
  2084  00FA98  23                 	db	35
  2085  00FA99  78                 	db	120
  2086  00FA9A  23                 	db	35
  2087  00FA9B  58                 	db	88
  2088  00FA9C  58                 	db	88
  2089  00FA9D  7C                 	db	124
  2090  00FA9E  7C                 	db	124
  2091  00FA9F  2D                 	db	45
  2092  00FAA0  2D                 	db	45
  2093  00FAA1  00                 	db	0
  2094  00FAA2  00                 	db	0
  2095  00FAA3  00                 	db	0
  2096  00FAA4  00                 	db	0
  2097  00FAA5  00                 	db	0
  2098  00FAA6  00                 	db	0
  2099  00FAA7  2E                 	db	46
  2100  00FAA8  2E                 	db	46
  2101  00FAA9  6F                 	db	111
  2102  00FAAA  6F                 	db	111
  2103  00FAAB  4F                 	db	79
  2104  00FAAC  4F                 	db	79
  2105  00FAAD  6F                 	db	111
  2106  00FAAE  6F                 	db	111
  2107  00FAAF  00                 	db	0
  2108  00FAB0  00                 	db	0
  2109  00FAB1  00                 	db	0
  2110  00FAB2  00                 	db	0
  2111  00FAB3  00                 	db	0
  2112  00FAB4  00                 	db	0
  2113  00FAB5  00                 	db	0
  2114  00FAB6  00                 	db	0
  2115  00FAB7  00                 	db	0
  2116  00FAB8  00                 	db	0
  2117  00FAB9  00                 	db	0
  2118  00FABA  00                 	db	0
  2119  00FABB                     __end_of_spin:
  2120                           	opt callstack 0
  2121  00FABB  0000               	dw	0
  2122  00FABD  3F80               	dw	16256
  2123  00FABF  0000               	dw	0
  2124  00FAC1  3FC0               	dw	16320
  2125  00FAC3                     __end_of_bp:
  2126                           	opt callstack 0
  2127  00FAC3  AA00               	dw	43520
  2128  00FAC5  3FB8               	dw	16312
  2129  00FAC7                     __end_of_ivln2_h:
  2130                           	opt callstack 0
  2131  00FAC7  23C6               	dw	9158
  2132  00FAC9  B8F6               	dw	47350
  2133  00FACB                     __end_of_cp_l:
  2134                           	opt callstack 0
  2135  00FACB  4000               	dw	16384
  2136  00FACD  3F76               	dw	16246
  2137  00FACF                     __end_of_cp_h:
  2138                           	opt callstack 0
  2139  0000                     _IVTADL	set	14493
  2140  0000                     _IVTADH	set	14494
  2141  0000                     _IVTADU	set	14495
  2142  0000                     _CRCDATH	set	14689
  2143  0000                     _CRCDATL	set	14688
  2144  0000                     _CRCCON0bits	set	14696
  2145  0000                     _CRCCON1bits	set	14697
  2146  0000                     _CRCXORL	set	14694
  2147  0000                     _CRCXORH	set	14695
  2148  0000                     _SCANTRIG	set	14717
  2149  0000                     _SCANHADRL	set	14713
  2150  0000                     _SCANHADRH	set	14714
  2151  0000                     _SCANHADRU	set	14715
  2152  0000                     _SCANLADRL	set	14710
  2153  0000                     _SCANLADRH	set	14711
  2154  0000                     _SCANLADRU	set	14712
  2155  0000                     _SCANCON0	set	14716
  2156  0000                     _CRCACCH	set	14691
  2157  0000                     _CRCACCL	set	14690
  2158  0000                     _CRCCON1	set	14697
  2159  0000                     _CRCCON0	set	14696
  2160  0000                     _PIR6bits	set	14758
  2161  0000                     _PIR4bits	set	14756
  2162  0000                     _PIE8bits	set	14744
  2163  0000                     _PIR8bits	set	14760
  2164  0000                     _PIR0bits	set	14752
  2165  0000                     _NVMCON2	set	14822
  2166  0000                     _NVMDAT	set	14819
  2167  0000                     _NVMADRL	set	14816
  2168  0000                     _NVMADRH	set	14817
  2169  0000                     _NVMCON1bits	set	14821
  2170  0000                     _SCANPR	set	14839
  2171  0000                     _DMA2PR	set	14836
  2172  0000                     _DMA1PR	set	14835
  2173  0000                     _MAINPR	set	14834
  2174  0000                     _ISRPR	set	14833
  2175  0000                     _PIE2bits	set	14738
  2176  0000                     _PIR2bits	set	14754
  2177  0000                     _PIE9bits	set	14745
  2178  0000                     _PIR9bits	set	14761
  2179  0000                     _PIE6bits	set	14742
  2180  0000                     _PIE3bits	set	14739
  2181  0000                     _PMD7	set	14791
  2182  0000                     _PMD6	set	14790
  2183  0000                     _PMD5	set	14789
  2184  0000                     _PMD4	set	14788
  2185  0000                     _PMD3	set	14787
  2186  0000                     _PMD2	set	14786
  2187  0000                     _PMD1	set	14785
  2188  0000                     _PMD0	set	14784
  2189  0000                     _OSCTUNE	set	14814
  2190  0000                     _OSCFRQ	set	14815
  2191  0000                     _OSCEN	set	14813
  2192  0000                     _OSCCON3	set	14811
  2193  0000                     _OSCCON1	set	14809
  2194  0000                     _IPR8bits	set	14728
  2195  0000                     _IPR9bits	set	14729
  2196  0000                     _IPR5bits	set	14725
  2197  0000                     _IPR1bits	set	14721
  2198  0000                     _IPR3bits	set	14723
  2199  0000                     _IPR6bits	set	14726
  2200  0000                     _IPR2bits	set	14722
  2201  0000                     _PIE5bits	set	14741
  2202  0000                     _PIE1bits	set	14737
  2203  0000                     _PIR5bits	set	14757
  2204  0000                     _PIR1bits	set	14753
  2205  0000                     _PLLR	set	118496
  2206  0000                     _SPI1SDIPPS	set	15071
  2207  0000                     _U1RXPPS	set	15077
  2208  0000                     _RC6PPS	set	14870
  2209  0000                     _RC5PPS	set	14869
  2210  0000                     _INT1PPS	set	15041
  2211  0000                     _RD1PPS	set	14873
  2212  0000                     _INT0PPS	set	15040
  2213  0000                     _RC3PPS	set	14867
  2214  0000                     _RB6PPS	set	14862
  2215  0000                     _SPI1SCKPPS	set	15070
  2216  0000                     _U2RXPPS	set	15080
  2217  0000                     _SLRCONF	set	14995
  2218  0000                     _SLRCONE	set	14979
  2219  0000                     _SLRCOND	set	14963
  2220  0000                     _SLRCONC	set	14947
  2221  0000                     _SLRCONB	set	14931
  2222  0000                     _SLRCONA	set	14915
  2223  0000                     _ODCOND	set	14962
  2224  0000                     _ODCONC	set	14946
  2225  0000                     _ODCONB	set	14930
  2226  0000                     _ODCONA	set	14914
  2227  0000                     _ODCONF	set	14994
  2228  0000                     _ODCONE	set	14978
  2229  0000                     _WPUC	set	14945
  2230  0000                     _WPUA	set	14913
  2231  0000                     _WPUB	set	14929
  2232  0000                     _WPUE	set	14977
  2233  0000                     _WPUF	set	14993
  2234  0000                     _WPUD	set	14961
  2235  0000                     _ANSELA	set	14912
  2236  0000                     _ANSELF	set	14992
  2237  0000                     _ANSELE	set	14976
  2238  0000                     _ANSELB	set	14928
  2239  0000                     _ANSELC	set	14944
  2240  0000                     _ANSELD	set	14960
  2241  0000                     _DMA2SSA	set	15321
  2242  0000                     _DMA1SSA	set	15353
  2243  0000                     _DMA2DSZ	set	15310
  2244  0000                     _DMA2SSZ	set	15319
  2245  0000                     _DMA2DSA	set	15312
  2246  0000                     _DMA1DSZ	set	15342
  2247  0000                     _DMA1SSZ	set	15351
  2248  0000                     _DMA1DSA	set	15344
  2249  0000                     _DMA2CON0bits	set	15324
  2250  0000                     _DMA2CON1bits	set	15325
  2251  0000                     _DMA1CON0bits	set	15356
  2252  0000                     _DMA1CON1bits	set	15357
  2253  0000                     _DMA2CON0	set	15324
  2254  0000                     _DMA2AIRQ	set	15326
  2255  0000                     _DMA2SIRQ	set	15327
  2256  0000                     _DMA2CON1	set	15325
  2257  0000                     _DMA1CON0	set	15356
  2258  0000                     _DMA1AIRQ	set	15358
  2259  0000                     _DMA1SIRQ	set	15359
  2260  0000                     _DMA1CON1	set	15357
  2261  0000                     _CLKRCON	set	15589
  2262  0000                     _CLKRCLK	set	15590
  2263  0000                     _SPI1CON1bits	set	15637
  2264  0000                     _SPI1STATUSbits	set	15639
  2265  0000                     _SPI1INTFbits	set	15642
  2266  0000                     _SPI1CON0bits	set	15636
  2267  0000                     _SPI1RXB	set	15632
  2268  0000                     _SPI1TXB	set	15633
  2269  0000                     _SPI1TCNTL	set	15634
  2270  0000                     _SPI1CON0	set	15636
  2271  0000                     _SPI1CLK	set	15644
  2272  0000                     _SPI1BAUD	set	15641
  2273  0000                     _SPI1CON2	set	15638
  2274  0000                     _SPI1CON1	set	15637
  2275  0000                     _U2RXB	set	15824
  2276  0000                     _U2TXB	set	15826
  2277  0000                     _U2ERRIE	set	15842
  2278  0000                     _U2ERRIR	set	15841
  2279  0000                     _U2UIR	set	15840
  2280  0000                     _U2FIFO	set	15839
  2281  0000                     _U2BRGH	set	15838
  2282  0000                     _U2BRGL	set	15837
  2283  0000                     _U2CON2	set	15836
  2284  0000                     _U2CON1	set	15835
  2285  0000                     _U2CON0	set	15834
  2286  0000                     _U2P3L	set	15832
  2287  0000                     _U2P2L	set	15830
  2288  0000                     _U2P1L	set	15828
  2289  0000                     _U1RXB	set	15848
  2290  0000                     _U1ERRIE	set	15866
  2291  0000                     _U1ERRIR	set	15865
  2292  0000                     _U1UIR	set	15864
  2293  0000                     _U1FIFO	set	15863
  2294  0000                     _U1BRGH	set	15862
  2295  0000                     _U1BRGL	set	15861
  2296  0000                     _U1CON2	set	15860
  2297  0000                     _U1CON1	set	15859
  2298  0000                     _U1CON0	set	15858
  2299  0000                     _U1P3H	set	15857
  2300  0000                     _U1P3L	set	15856
  2301  0000                     _U1P2H	set	15855
  2302  0000                     _U1P2L	set	15854
  2303  0000                     _U1P1H	set	15853
  2304  0000                     _U1P1L	set	15852
  2305  0000                     _FVRCON	set	16065
  2306  0000                     _ADFLTRL	set	16102
  2307  0000                     _ADFLTRH	set	16103
  2308  0000                     _ADCON0bits	set	16120
  2309  0000                     _ADCON0	set	16120
  2310  0000                     _ADCLK	set	16127
  2311  0000                     _ADACT	set	16126
  2312  0000                     _ADREF	set	16125
  2313  0000                     _ADSTAT	set	16124
  2314  0000                     _ADCON3	set	16123
  2315  0000                     _ADCON2	set	16122
  2316  0000                     _ADCON1	set	16121
  2317  0000                     _ADPREH	set	16119
  2318  0000                     _ADPREL	set	16118
  2319  0000                     _ADCAP	set	16117
  2320  0000                     _ADACQH	set	16116
  2321  0000                     _ADACQL	set	16115
  2322  0000                     _ADPCH	set	16113
  2323  0000                     _ADRPT	set	16108
  2324  0000                     _ADACCU	set	16106
  2325  0000                     _ADSTPTH	set	16101
  2326  0000                     _ADSTPTL	set	16100
  2327  0000                     _ADUTHH	set	16097
  2328  0000                     _ADUTHL	set	16096
  2329  0000                     _ADLTHH	set	16095
  2330  0000                     _ADLTHL	set	16094
  2331  0000                     _CCPTMRS1bits	set	16223
  2332  0000                     _PORTDbits	set	16333
  2333  0000                     _PORTFbits	set	16335
  2334  0000                     _LATFbits	set	16319
  2335  0000                     _LATCbits	set	16316
  2336  0000                     _LATDbits	set	16317
  2337  0000                     _PORTBbits	set	16331
  2338  0000                     _T3CONbits	set	16294
  2339  0000                     _T3CON	set	16294
  2340  0000                     _TMR3L	set	16292
  2341  0000                     _TMR3H	set	16293
  2342  0000                     _T3CLK	set	16297
  2343  0000                     _T3GATE	set	16296
  2344  0000                     _T3GCON	set	16295
  2345  0000                     _T2CON	set	16300
  2346  0000                     _T2TMR	set	16298
  2347  0000                     _T2PR	set	16299
  2348  0000                     _T2RST	set	16303
  2349  0000                     _T2HLT	set	16301
  2350  0000                     _T2CLKCON	set	16302
  2351  0000                     _PWM8DCL	set	16224
  2352  0000                     _PWM8DCH	set	16225
  2353  0000                     _PWM8CON	set	16226
  2354  0000                     _LATEbits	set	16318
  2355  0000                     _T5CONbits	set	16282
  2356  0000                     _T5CON	set	16282
  2357  0000                     _TMR5L	set	16280
  2358  0000                     _TMR5H	set	16281
  2359  0000                     _T5CLK	set	16285
  2360  0000                     _T5GATE	set	16284
  2361  0000                     _T5GCON	set	16283
  2362  0000                     _T6CON	set	16276
  2363  0000                     _T6TMR	set	16274
  2364  0000                     _T6PR	set	16275
  2365  0000                     _T6RST	set	16279
  2366  0000                     _T6HLT	set	16277
  2367  0000                     _T6CLKCON	set	16278
  2368  0000                     _TRISD	set	16325
  2369  0000                     _TRISC	set	16324
  2370  0000                     _TRISB	set	16323
  2371  0000                     _TRISA	set	16322
  2372  0000                     _TRISF	set	16327
  2373  0000                     _TRISE	set	16326
  2374  0000                     _LATC	set	16316
  2375  0000                     _LATB	set	16315
  2376  0000                     _LATF	set	16319
  2377  0000                     _LATA	set	16314
  2378  0000                     _LATD	set	16317
  2379  0000                     _LATE	set	16318
  2380  0000                     _IVTLOCKbits	set	16340
  2381  0000                     _IVTLOCK	set	16340
  2382  0000                     _INTCON0bits	set	16338
  2383  0000                     _GIE	set	130711
  2384  00FACF                     STR_81:
  2385                           
  2386                           ; BSR set to: 57
  2387  00FACF  20                 	db	32
  2388  00FAD0  25                 	db	37
  2389  00FAD1  63                 	db	99	;'c'
  2390  00FAD2  20                 	db	32
  2391  00FAD3  2C                 	db	44
  2392  00FAD4  25                 	db	37
  2393  00FAD5  6C                 	db	108	;'l'
  2394  00FAD6  75                 	db	117	;'u'
  2395  00FAD7  2C                 	db	44
  2396  00FAD8  25                 	db	37
  2397  00FAD9  34                 	db	52	;'4'
  2398  00FADA  2E                 	db	46
  2399  00FADB  34                 	db	52	;'4'
  2400  00FADC  66                 	db	102	;'f'
  2401  00FADD  2C                 	db	44
  2402  00FADE  25                 	db	37
  2403  00FADF  34                 	db	52	;'4'
  2404  00FAE0  2E                 	db	46
  2405  00FAE1  34                 	db	52	;'4'
  2406  00FAE2  66                 	db	102	;'f'
  2407  00FAE3  2C                 	db	44
  2408  00FAE4  25                 	db	37
  2409  00FAE5  34                 	db	52	;'4'
  2410  00FAE6  2E                 	db	46
  2411  00FAE7  34                 	db	52	;'4'
  2412  00FAE8  66                 	db	102	;'f'
  2413  00FAE9  2C                 	db	44
  2414  00FAEA  25                 	db	37
  2415  00FAEB  34                 	db	52	;'4'
  2416  00FAEC  2E                 	db	46
  2417  00FAED  34                 	db	52	;'4'
  2418  00FAEE  66                 	db	102	;'f'
  2419  00FAEF  2C                 	db	44
  2420  00FAF0  25                 	db	37
  2421  00FAF1  34                 	db	52	;'4'
  2422  00FAF2  2E                 	db	46
  2423  00FAF3  34                 	db	52	;'4'
  2424  00FAF4  66                 	db	102	;'f'
  2425  00FAF5  2C                 	db	44
  2426  00FAF6  25                 	db	37
  2427  00FAF7  34                 	db	52	;'4'
  2428  00FAF8  2E                 	db	46
  2429  00FAF9  33                 	db	51	;'3'
  2430  00FAFA  66                 	db	102	;'f'
  2431  00FAFB  2C                 	db	44
  2432  00FAFC  25                 	db	37
  2433  00FAFD  34                 	db	52	;'4'
  2434  00FAFE  2E                 	db	46
  2435  00FAFF  33                 	db	51	;'3'
  2436  00FB00  66                 	db	102	;'f'
  2437  00FB01  2C                 	db	44
  2438  00FB02  25                 	db	37
  2439  00FB03  34                 	db	52	;'4'
  2440  00FB04  2E                 	db	46
  2441  00FB05  33                 	db	51	;'3'
  2442  00FB06  66                 	db	102	;'f'
  2443  00FB07  2C                 	db	44
  2444  00FB08  25                 	db	37
  2445  00FB09  34                 	db	52	;'4'
  2446  00FB0A  2E                 	db	46
  2447  00FB0B  33                 	db	51	;'3'
  2448  00FB0C  66                 	db	102	;'f'
  2449  00FB0D  2C                 	db	44
  2450  00FB0E  25                 	db	37
  2451  00FB0F  34                 	db	52	;'4'
  2452  00FB10  2E                 	db	46
  2453  00FB11  33                 	db	51	;'3'
  2454  00FB12  66                 	db	102	;'f'
  2455  00FB13  2C                 	db	44
  2456  00FB14  25                 	db	37
  2457  00FB15  34                 	db	52	;'4'
  2458  00FB16  2E                 	db	46
  2459  00FB17  33                 	db	51	;'3'
  2460  00FB18  66                 	db	102	;'f'
  2461  00FB19  2C                 	db	44
  2462  00FB1A  25                 	db	37
  2463  00FB1B  64                 	db	100	;'d'
  2464  00FB1C  2C                 	db	44
  2465  00FB1D  25                 	db	37
  2466  00FB1E  64                 	db	100	;'d'
  2467  00FB1F  2C                 	db	44
  2468  00FB20  25                 	db	37
  2469  00FB21  32                 	db	50	;'2'
  2470  00FB22  2E                 	db	46
  2471  00FB23  36                 	db	54	;'6'
  2472  00FB24  66                 	db	102	;'f'
  2473  00FB25  2C                 	db	44
  2474  00FB26  25                 	db	37
  2475  00FB27  34                 	db	52	;'4'
  2476  00FB28  2E                 	db	46
  2477  00FB29  33                 	db	51	;'3'
  2478  00FB2A  66                 	db	102	;'f'
  2479  00FB2B  2C                 	db	44
  2480  00FB2C  25                 	db	37
  2481  00FB2D  64                 	db	100	;'d'
  2482  00FB2E  2C                 	db	44
  2483  00FB2F  25                 	db	37
  2484  00FB30  64                 	db	100	;'d'
  2485  00FB31  2C                 	db	44
  2486  00FB32  25                 	db	37
  2487  00FB33  6C                 	db	108	;'l'
  2488  00FB34  75                 	db	117	;'u'
  2489  00FB35  2C                 	db	44
  2490  00FB36  25                 	db	37
  2491  00FB37  6C                 	db	108	;'l'
  2492  00FB38  75                 	db	117	;'u'
  2493  00FB39  2C                 	db	44
  2494  00FB3A  25                 	db	37
  2495  00FB3B  34                 	db	52	;'4'
  2496  00FB3C  2E                 	db	46
  2497  00FB3D  33                 	db	51	;'3'
  2498  00FB3E  66                 	db	102	;'f'
  2499  00FB3F  2C                 	db	44
  2500  00FB40  25                 	db	37
  2501  00FB41  34                 	db	52	;'4'
  2502  00FB42  2E                 	db	46
  2503  00FB43  33                 	db	51	;'3'
  2504  00FB44  66                 	db	102	;'f'
  2505  00FB45  2C                 	db	44
  2506  00FB46  25                 	db	37
  2507  00FB47  34                 	db	52	;'4'
  2508  00FB48  2E                 	db	46
  2509  00FB49  33                 	db	51	;'3'
  2510  00FB4A  66                 	db	102	;'f'
  2511  00FB4B  0D                 	db	13
  2512  00FB4C  0A                 	db	10
  2513  00FB4D  00                 	db	0
  2514  00FB4E                     STR_39:
  2515                           
  2516                           ; BSR set to: 57
  2517  00FB4E  53                 	db	83	;'S'
  2518  00FB4F  25                 	db	37
  2519  00FB50  63                 	db	99	;'c'
  2520  00FB51  43                 	db	67	;'C'
  2521  00FB52  20                 	db	32
  2522  00FB53  25                 	db	37
  2523  00FB54  64                 	db	100	;'d'
  2524  00FB55  20                 	db	32
  2525  00FB56  52                 	db	82	;'R'
  2526  00FB57  55                 	db	85	;'U'
  2527  00FB58  4E                 	db	78	;'N'
  2528  00FB59  20                 	db	32
  2529  00FB5A  25                 	db	37
  2530  00FB5B  64                 	db	100	;'d'
  2531  00FB5C  20                 	db	32
  2532  00FB5D  56                 	db	86	;'V'
  2533  00FB5E  25                 	db	37
  2534  00FB5F  32                 	db	50	;'2'
  2535  00FB60  2E                 	db	46
  2536  00FB61  32                 	db	50	;'2'
  2537  00FB62  66                 	db	102	;'f'
  2538  00FB63  20                 	db	32
  2539  00FB64  20                 	db	32
  2540  00FB65  20                 	db	32
  2541  00FB66  20                 	db	32
  2542  00FB67  20                 	db	32
  2543  00FB68  20                 	db	32
  2544  00FB69  20                 	db	32
  2545  00FB6A  00                 	db	0
  2546  00FB6B                     STR_20:
  2547                           
  2548                           ; BSR set to: 57
  2549  00FB6B  52                 	db	82	;'R'
  2550  00FB6C  31                 	db	49	;'1'
  2551  00FB6D  20                 	db	32
  2552  00FB6E  25                 	db	37
  2553  00FB6F  32                 	db	50	;'2'
  2554  00FB70  2E                 	db	46
  2555  00FB71  33                 	db	51	;'3'
  2556  00FB72  66                 	db	102	;'f'
  2557  00FB73  20                 	db	32
  2558  00FB74  25                 	db	37
  2559  00FB75  33                 	db	51	;'3'
  2560  00FB76  2E                 	db	46
  2561  00FB77  34                 	db	52	;'4'
  2562  00FB78  66                 	db	102	;'f'
  2563  00FB79  20                 	db	32
  2564  00FB7A  20                 	db	32
  2565  00FB7B  20                 	db	32
  2566  00FB7C  20                 	db	32
  2567  00FB7D  20                 	db	32
  2568  00FB7E  20                 	db	32
  2569  00FB7F  20                 	db	32
  2570  00FB80  20                 	db	32
  2571  00FB81  20                 	db	32
  2572  00FB82  20                 	db	32
  2573  00FB83  20                 	db	32
  2574  00FB84  00                 	db	0
  2575  00FB85                     STR_21:
  2576                           
  2577                           ; BSR set to: 57
  2578  00FB85  52                 	db	82	;'R'
  2579  00FB86  32                 	db	50	;'2'
  2580  00FB87  20                 	db	32
  2581  00FB88  25                 	db	37
  2582  00FB89  32                 	db	50	;'2'
  2583  00FB8A  2E                 	db	46
  2584  00FB8B  33                 	db	51	;'3'
  2585  00FB8C  66                 	db	102	;'f'
  2586  00FB8D  20                 	db	32
  2587  00FB8E  25                 	db	37
  2588  00FB8F  33                 	db	51	;'3'
  2589  00FB90  2E                 	db	46
  2590  00FB91  34                 	db	52	;'4'
  2591  00FB92  66                 	db	102	;'f'
  2592  00FB93  20                 	db	32
  2593  00FB94  20                 	db	32
  2594  00FB95  20                 	db	32
  2595  00FB96  20                 	db	32
  2596  00FB97  20                 	db	32
  2597  00FB98  20                 	db	32
  2598  00FB99  20                 	db	32
  2599  00FB9A  20                 	db	32
  2600  00FB9B  20                 	db	32
  2601  00FB9C  20                 	db	32
  2602  00FB9D  20                 	db	32
  2603  00FB9E  00                 	db	0
  2604  00FB9F                     STR_11:
  2605                           
  2606                           ; BSR set to: 57
  2607  00FB9F  53                 	db	83	;'S'
  2608  00FBA0  20                 	db	32
  2609  00FBA1  53                 	db	83	;'S'
  2610  00FBA2  25                 	db	37
  2611  00FBA3  63                 	db	99	;'c'
  2612  00FBA4  43                 	db	67	;'C'
  2613  00FBA5  20                 	db	32
  2614  00FBA6  25                 	db	37
  2615  00FBA7  64                 	db	100	;'d'
  2616  00FBA8  20                 	db	32
  2617  00FBA9  25                 	db	37
  2618  00FBAA  32                 	db	50	;'2'
  2619  00FBAB  2E                 	db	46
  2620  00FBAC  34                 	db	52	;'4'
  2621  00FBAD  66                 	db	102	;'f'
  2622  00FBAE  20                 	db	32
  2623  00FBAF  20                 	db	32
  2624  00FBB0  20                 	db	32
  2625  00FBB1  20                 	db	32
  2626  00FBB2  20                 	db	32
  2627  00FBB3  20                 	db	32
  2628  00FBB4  20                 	db	32
  2629  00FBB5  20                 	db	32
  2630  00FBB6  20                 	db	32
  2631  00FBB7  20                 	db	32
  2632  00FBB8  00                 	db	0
  2633  00FBB9                     
  2634                           ; BSR set to: 57
  2635  00FBB9  20                 	db	32
  2636  00FBBA  4D                 	db	77	;'M'
  2637  00FBBB  65                 	db	101	;'e'
  2638  00FBBC  73                 	db	115	;'s'
  2639  00FBBD  67                 	db	103	;'g'
  2640  00FBBE  20                 	db	32
  2641  00FBBF  25                 	db	37
  2642  00FBC0  64                 	db	100	;'d'
  2643  00FBC1  20                 	db	32
  2644  00FBC2  53                 	db	83	;'S'
  2645  00FBC3  74                 	db	116	;'t'
  2646  00FBC4  61                 	db	97	;'a'
  2647  00FBC5  63                 	db	99	;'c'
  2648  00FBC6  6B                 	db	107	;'k'
  2649  00FBC7  20                 	db	32
  2650  00FBC8  25                 	db	37
  2651  00FBC9  64                 	db	100	;'d'
  2652  00FBCA  20                 	db	32
  2653  00FBCB  20                 	db	32
  2654  00FBCC  20                 	db	32
  2655  00FBCD  20                 	db	32
  2656  00FBCE  20                 	db	32
  2657  00FBCF  20                 	db	32
  2658  00FBD0  00                 	db	0
  2659  00FBD1                     STR_40:
  2660                           
  2661                           ; BSR set to: 57
  2662  00FBD1  45                 	db	69	;'E'
  2663  00FBD2  53                 	db	83	;'S'
  2664  00FBD3  52                 	db	82	;'R'
  2665  00FBD4  20                 	db	32
  2666  00FBD5  20                 	db	32
  2667  00FBD6  25                 	db	37
  2668  00FBD7  32                 	db	50	;'2'
  2669  00FBD8  2E                 	db	46
  2670  00FBD9  36                 	db	54	;'6'
  2671  00FBDA  66                 	db	102	;'f'
  2672  00FBDB  20                 	db	32
  2673  00FBDC  20                 	db	32
  2674  00FBDD  20                 	db	32
  2675  00FBDE  20                 	db	32
  2676  00FBDF  20                 	db	32
  2677  00FBE0  20                 	db	32
  2678  00FBE1  20                 	db	32
  2679  00FBE2  20                 	db	32
  2680  00FBE3  20                 	db	32
  2681  00FBE4  20                 	db	32
  2682  00FBE5  20                 	db	32
  2683  00FBE6  20                 	db	32
  2684  00FBE7  00                 	db	0
  2685  00FBE8                     STR_37:
  2686                           
  2687                           ; BSR set to: 57
  2688  00FBE8  42                 	db	66	;'B'
  2689  00FBE9  41                 	db	65	;'A'
  2690  00FBEA  54                 	db	84	;'T'
  2691  00FBEB  54                 	db	84	;'T'
  2692  00FBEC  20                 	db	32
  2693  00FBED  50                 	db	80	;'P'
  2694  00FBEE  57                 	db	87	;'W'
  2695  00FBEF  52                 	db	82	;'R'
  2696  00FBF0  20                 	db	32
  2697  00FBF1  25                 	db	37
  2698  00FBF2  33                 	db	51	;'3'
  2699  00FBF3  2E                 	db	46
  2700  00FBF4  32                 	db	50	;'2'
  2701  00FBF5  66                 	db	102	;'f'
  2702  00FBF6  20                 	db	32
  2703  00FBF7  20                 	db	32
  2704  00FBF8  20                 	db	32
  2705  00FBF9  20                 	db	32
  2706  00FBFA  20                 	db	32
  2707  00FBFB  20                 	db	32
  2708  00FBFC  20                 	db	32
  2709  00FBFD  20                 	db	32
  2710  00FBFE  00                 	db	0
  2711  00FBFF                     STR_41:
  2712                           
  2713                           ; BSR set to: 57
  2714  00FBFF  52                 	db	82	;'R'
  2715  00FC00  31                 	db	49	;'1'
  2716  00FC01  20                 	db	32
  2717  00FC02  25                 	db	37
  2718  00FC03  32                 	db	50	;'2'
  2719  00FC04  2E                 	db	46
  2720  00FC05  33                 	db	51	;'3'
  2721  00FC06  66                 	db	102	;'f'
  2722  00FC07  20                 	db	32
  2723  00FC08  25                 	db	37
  2724  00FC09  33                 	db	51	;'3'
  2725  00FC0A  2E                 	db	46
  2726  00FC0B  34                 	db	52	;'4'
  2727  00FC0C  66                 	db	102	;'f'
  2728  00FC0D  20                 	db	32
  2729  00FC0E  20                 	db	32
  2730  00FC0F  20                 	db	32
  2731  00FC10  20                 	db	32
  2732  00FC11  20                 	db	32
  2733  00FC12  20                 	db	32
  2734  00FC13  20                 	db	32
  2735  00FC14  20                 	db	32
  2736  00FC15  00                 	db	0
  2737  00FC16                     STR_42:
  2738                           
  2739                           ; BSR set to: 57
  2740  00FC16  52                 	db	82	;'R'
  2741  00FC17  32                 	db	50	;'2'
  2742  00FC18  20                 	db	32
  2743  00FC19  25                 	db	37
  2744  00FC1A  32                 	db	50	;'2'
  2745  00FC1B  2E                 	db	46
  2746  00FC1C  33                 	db	51	;'3'
  2747  00FC1D  66                 	db	102	;'f'
  2748  00FC1E  20                 	db	32
  2749  00FC1F  25                 	db	37
  2750  00FC20  33                 	db	51	;'3'
  2751  00FC21  2E                 	db	46
  2752  00FC22  34                 	db	52	;'4'
  2753  00FC23  66                 	db	102	;'f'
  2754  00FC24  20                 	db	32
  2755  00FC25  20                 	db	32
  2756  00FC26  20                 	db	32
  2757  00FC27  20                 	db	32
  2758  00FC28  20                 	db	32
  2759  00FC29  20                 	db	32
  2760  00FC2A  20                 	db	32
  2761  00FC2B  20                 	db	32
  2762  00FC2C  00                 	db	0
  2763  00FC2D                     STR_38:
  2764                           
  2765                           ; BSR set to: 57
  2766  00FC2D  42                 	db	66	;'B'
  2767  00FC2E  41                 	db	65	;'A'
  2768  00FC2F  48                 	db	72	;'H'
  2769  00FC30  20                 	db	32
  2770  00FC31  25                 	db	37
  2771  00FC32  33                 	db	51	;'3'
  2772  00FC33  2E                 	db	46
  2773  00FC34  32                 	db	50	;'2'
  2774  00FC35  66                 	db	102	;'f'
  2775  00FC36  20                 	db	32
  2776  00FC37  50                 	db	80	;'P'
  2777  00FC38  25                 	db	37
  2778  00FC39  33                 	db	51	;'3'
  2779  00FC3A  2E                 	db	46
  2780  00FC3B  32                 	db	50	;'2'
  2781  00FC3C  66                 	db	102	;'f'
  2782  00FC3D  20                 	db	32
  2783  00FC3E  20                 	db	32
  2784  00FC3F  20                 	db	32
  2785  00FC40  20                 	db	32
  2786  00FC41  20                 	db	32
  2787  00FC42  20                 	db	32
  2788  00FC43  00                 	db	0
  2789  00FC44                     STR_14:
  2790                           
  2791                           ; BSR set to: 57
  2792  00FC44  20                 	db	32
  2793  00FC45  20                 	db	32
  2794  00FC46  20                 	db	32
  2795  00FC47  20                 	db	32
  2796  00FC48  20                 	db	32
  2797  00FC49  20                 	db	32
  2798  00FC4A  20                 	db	32
  2799  00FC4B  20                 	db	32
  2800  00FC4C  20                 	db	32
  2801  00FC4D  20                 	db	32
  2802  00FC4E  20                 	db	32
  2803  00FC4F  20                 	db	32
  2804  00FC50  20                 	db	32
  2805  00FC51  20                 	db	32
  2806  00FC52  20                 	db	32
  2807  00FC53  20                 	db	32
  2808  00FC54  20                 	db	32
  2809  00FC55  20                 	db	32
  2810  00FC56  20                 	db	32
  2811  00FC57  20                 	db	32
  2812  00FC58  20                 	db	32
  2813  00FC59  00                 	db	0
  2814  00FC5A                     STR_19:
  2815                           
  2816                           ; BSR set to: 57
  2817  00FC5A  45                 	db	69	;'E'
  2818  00FC5B  53                 	db	83	;'S'
  2819  00FC5C  52                 	db	82	;'R'
  2820  00FC5D  20                 	db	32
  2821  00FC5E  20                 	db	32
  2822  00FC5F  25                 	db	37
  2823  00FC60  32                 	db	50	;'2'
  2824  00FC61  2E                 	db	46
  2825  00FC62  36                 	db	54	;'6'
  2826  00FC63  66                 	db	102	;'f'
  2827  00FC64  20                 	db	32
  2828  00FC65  20                 	db	32
  2829  00FC66  20                 	db	32
  2830  00FC67  20                 	db	32
  2831  00FC68  20                 	db	32
  2832  00FC69  20                 	db	32
  2833  00FC6A  20                 	db	32
  2834  00FC6B  20                 	db	32
  2835  00FC6C  20                 	db	32
  2836  00FC6D  20                 	db	32
  2837  00FC6E  20                 	db	32
  2838  00FC6F  00                 	db	0
  2839  00FC70                     STR_12:
  2840                           
  2841                           ; BSR set to: 57
  2842  00FC70  53                 	db	83	;'S'
  2843  00FC71  74                 	db	116	;'t'
  2844  00FC72  61                 	db	97	;'a'
  2845  00FC73  74                 	db	116	;'t'
  2846  00FC74  69                 	db	105	;'i'
  2847  00FC75  63                 	db	99	;'c'
  2848  00FC76  20                 	db	32
  2849  00FC77  53                 	db	83	;'S'
  2850  00FC78  4F                 	db	79	;'O'
  2851  00FC79  43                 	db	67	;'C'
  2852  00FC7A  20                 	db	32
  2853  00FC7B  25                 	db	37
  2854  00FC7C  64                 	db	100	;'d'
  2855  00FC7D  20                 	db	32
  2856  00FC7E  20                 	db	32
  2857  00FC7F  20                 	db	32
  2858  00FC80  20                 	db	32
  2859  00FC81  20                 	db	32
  2860  00FC82  20                 	db	32
  2861  00FC83  20                 	db	32
  2862  00FC84  20                 	db	32
  2863  00FC85  00                 	db	0
  2864  00FC86                     STR_34:
  2865                           
  2866                           ; BSR set to: 57
  2867  00FC86  42                 	db	66	;'B'
  2868  00FC87  41                 	db	65	;'A'
  2869  00FC88  54                 	db	84	;'T'
  2870  00FC89  20                 	db	32
  2871  00FC8A  49                 	db	73	;'I'
  2872  00FC8B  57                 	db	87	;'W'
  2873  00FC8C  48                 	db	72	;'H'
  2874  00FC8D  20                 	db	32
  2875  00FC8E  25                 	db	37
  2876  00FC8F  34                 	db	52	;'4'
  2877  00FC90  2E                 	db	46
  2878  00FC91  31                 	db	49	;'1'
  2879  00FC92  66                 	db	102	;'f'
  2880  00FC93  20                 	db	32
  2881  00FC94  20                 	db	32
  2882  00FC95  20                 	db	32
  2883  00FC96  20                 	db	32
  2884  00FC97  20                 	db	32
  2885  00FC98  20                 	db	32
  2886  00FC99  20                 	db	32
  2887  00FC9A  20                 	db	32
  2888  00FC9B  00                 	db	0
  2889  00FC9C                     STR_35:
  2890                           
  2891                           ; BSR set to: 57
  2892  00FC9C  42                 	db	66	;'B'
  2893  00FC9D  41                 	db	65	;'A'
  2894  00FC9E  54                 	db	84	;'T'
  2895  00FC9F  20                 	db	32
  2896  00FCA0  4F                 	db	79	;'O'
  2897  00FCA1  57                 	db	87	;'W'
  2898  00FCA2  48                 	db	72	;'H'
  2899  00FCA3  20                 	db	32
  2900  00FCA4  25                 	db	37
  2901  00FCA5  34                 	db	52	;'4'
  2902  00FCA6  2E                 	db	46
  2903  00FCA7  31                 	db	49	;'1'
  2904  00FCA8  66                 	db	102	;'f'
  2905  00FCA9  20                 	db	32
  2906  00FCAA  20                 	db	32
  2907  00FCAB  20                 	db	32
  2908  00FCAC  20                 	db	32
  2909  00FCAD  20                 	db	32
  2910  00FCAE  20                 	db	32
  2911  00FCAF  20                 	db	32
  2912  00FCB0  20                 	db	32
  2913  00FCB1  00                 	db	0
  2914  00FCB2                     STR_36:
  2915                           
  2916                           ; BSR set to: 57
  2917  00FCB2  42                 	db	66	;'B'
  2918  00FCB3  41                 	db	65	;'A'
  2919  00FCB4  54                 	db	84	;'T'
  2920  00FCB5  20                 	db	32
  2921  00FCB6  54                 	db	84	;'T'
  2922  00FCB7  57                 	db	87	;'W'
  2923  00FCB8  48                 	db	72	;'H'
  2924  00FCB9  20                 	db	32
  2925  00FCBA  25                 	db	37
  2926  00FCBB  34                 	db	52	;'4'
  2927  00FCBC  2E                 	db	46
  2928  00FCBD  31                 	db	49	;'1'
  2929  00FCBE  66                 	db	102	;'f'
  2930  00FCBF  20                 	db	32
  2931  00FCC0  20                 	db	32
  2932  00FCC1  20                 	db	32
  2933  00FCC2  20                 	db	32
  2934  00FCC3  20                 	db	32
  2935  00FCC4  20                 	db	32
  2936  00FCC5  20                 	db	32
  2937  00FCC6  20                 	db	32
  2938  00FCC7  00                 	db	0
  2939  00FCC8                     STR_30:
  2940                           
  2941                           ; BSR set to: 57
  2942  00FCC8  49                 	db	73	;'I'
  2943  00FCC9  4E                 	db	78	;'N'
  2944  00FCCA  56                 	db	86	;'V'
  2945  00FCCB  20                 	db	32
  2946  00FCCC  20                 	db	32
  2947  00FCCD  57                 	db	87	;'W'
  2948  00FCCE  48                 	db	72	;'H'
  2949  00FCCF  20                 	db	32
  2950  00FCD0  25                 	db	37
  2951  00FCD1  33                 	db	51	;'3'
  2952  00FCD2  2E                 	db	46
  2953  00FCD3  32                 	db	50	;'2'
  2954  00FCD4  66                 	db	102	;'f'
  2955  00FCD5  20                 	db	32
  2956  00FCD6  20                 	db	32
  2957  00FCD7  20                 	db	32
  2958  00FCD8  20                 	db	32
  2959  00FCD9  20                 	db	32
  2960  00FCDA  20                 	db	32
  2961  00FCDB  20                 	db	32
  2962  00FCDC  20                 	db	32
  2963  00FCDD  00                 	db	0
  2964  00FCDE                     STR_29:
  2965                           
  2966                           ; BSR set to: 57
  2967  00FCDE  4C                 	db	76	;'L'
  2968  00FCDF  4F                 	db	79	;'O'
  2969  00FCE0  41                 	db	65	;'A'
  2970  00FCE1  44                 	db	68	;'D'
  2971  00FCE2  20                 	db	32
  2972  00FCE3  57                 	db	87	;'W'
  2973  00FCE4  48                 	db	72	;'H'
  2974  00FCE5  20                 	db	32
  2975  00FCE6  25                 	db	37
  2976  00FCE7  33                 	db	51	;'3'
  2977  00FCE8  2E                 	db	46
  2978  00FCE9  32                 	db	50	;'2'
  2979  00FCEA  66                 	db	102	;'f'
  2980  00FCEB  20                 	db	32
  2981  00FCEC  20                 	db	32
  2982  00FCED  20                 	db	32
  2983  00FCEE  20                 	db	32
  2984  00FCEF  20                 	db	32
  2985  00FCF0  20                 	db	32
  2986  00FCF1  20                 	db	32
  2987  00FCF2  20                 	db	32
  2988  00FCF3  00                 	db	0
  2989  00FCF4                     STR_28:
  2990                           
  2991                           ; BSR set to: 57
  2992  00FCF4  50                 	db	80	;'P'
  2993  00FCF5  56                 	db	86	;'V'
  2994  00FCF6  20                 	db	32
  2995  00FCF7  25                 	db	37
  2996  00FCF8  63                 	db	99	;'c'
  2997  00FCF9  20                 	db	32
  2998  00FCFA  57                 	db	87	;'W'
  2999  00FCFB  48                 	db	72	;'H'
  3000  00FCFC  20                 	db	32
  3001  00FCFD  25                 	db	37
  3002  00FCFE  33                 	db	51	;'3'
  3003  00FCFF  2E                 	db	46
  3004  00FD00  32                 	db	50	;'2'
  3005  00FD01  66                 	db	102	;'f'
  3006  00FD02  20                 	db	32
  3007  00FD03  20                 	db	32
  3008  00FD04  20                 	db	32
  3009  00FD05  20                 	db	32
  3010  00FD06  20                 	db	32
  3011  00FD07  20                 	db	32
  3012  00FD08  20                 	db	32
  3013  00FD09  00                 	db	0
  3014  00FD0A                     STR_27:
  3015                           
  3016                           ; BSR set to: 57
  3017  00FD0A  49                 	db	73	;'I'
  3018  00FD0B  4E                 	db	78	;'N'
  3019  00FD0C  56                 	db	86	;'V'
  3020  00FD0D  20                 	db	32
  3021  00FD0E  20                 	db	32
  3022  00FD0F  50                 	db	80	;'P'
  3023  00FD10  57                 	db	87	;'W'
  3024  00FD11  52                 	db	82	;'R'
  3025  00FD12  20                 	db	32
  3026  00FD13  25                 	db	37
  3027  00FD14  33                 	db	51	;'3'
  3028  00FD15  2E                 	db	46
  3029  00FD16  32                 	db	50	;'2'
  3030  00FD17  66                 	db	102	;'f'
  3031  00FD18  20                 	db	32
  3032  00FD19  20                 	db	32
  3033  00FD1A  20                 	db	32
  3034  00FD1B  20                 	db	32
  3035  00FD1C  20                 	db	32
  3036  00FD1D  20                 	db	32
  3037  00FD1E  20                 	db	32
  3038  00FD1F  00                 	db	0
  3039  00FD20                     STR_26:
  3040                           
  3041                           ; BSR set to: 57
  3042  00FD20  4C                 	db	76	;'L'
  3043  00FD21  4F                 	db	79	;'O'
  3044  00FD22  41                 	db	65	;'A'
  3045  00FD23  44                 	db	68	;'D'
  3046  00FD24  20                 	db	32
  3047  00FD25  50                 	db	80	;'P'
  3048  00FD26  57                 	db	87	;'W'
  3049  00FD27  52                 	db	82	;'R'
  3050  00FD28  20                 	db	32
  3051  00FD29  25                 	db	37
  3052  00FD2A  33                 	db	51	;'3'
  3053  00FD2B  2E                 	db	46
  3054  00FD2C  32                 	db	50	;'2'
  3055  00FD2D  66                 	db	102	;'f'
  3056  00FD2E  20                 	db	32
  3057  00FD2F  20                 	db	32
  3058  00FD30  20                 	db	32
  3059  00FD31  20                 	db	32
  3060  00FD32  20                 	db	32
  3061  00FD33  20                 	db	32
  3062  00FD34  20                 	db	32
  3063  00FD35  00                 	db	0
  3064  00FD36                     STR_25:
  3065                           
  3066                           ; BSR set to: 57
  3067  00FD36  50                 	db	80	;'P'
  3068  00FD37  56                 	db	86	;'V'
  3069  00FD38  20                 	db	32
  3070  00FD39  25                 	db	37
  3071  00FD3A  63                 	db	99	;'c'
  3072  00FD3B  20                 	db	32
  3073  00FD3C  50                 	db	80	;'P'
  3074  00FD3D  57                 	db	87	;'W'
  3075  00FD3E  52                 	db	82	;'R'
  3076  00FD3F  20                 	db	32
  3077  00FD40  25                 	db	37
  3078  00FD41  33                 	db	51	;'3'
  3079  00FD42  2E                 	db	46
  3080  00FD43  32                 	db	50	;'2'
  3081  00FD44  66                 	db	102	;'f'
  3082  00FD45  20                 	db	32
  3083  00FD46  20                 	db	32
  3084  00FD47  20                 	db	32
  3085  00FD48  20                 	db	32
  3086  00FD49  20                 	db	32
  3087  00FD4A  20                 	db	32
  3088  00FD4B  00                 	db	0
  3089  00FD4C                     STR_13:
  3090                           
  3091                           ; BSR set to: 57
  3092  00FD4C  42                 	db	66	;'B'
  3093  00FD4D  61                 	db	97	;'a'
  3094  00FD4E  74                 	db	116	;'t'
  3095  00FD4F  74                 	db	116	;'t'
  3096  00FD50  65                 	db	101	;'e'
  3097  00FD51  72                 	db	114	;'r'
  3098  00FD52  79                 	db	121	;'y'
  3099  00FD53  20                 	db	32
  3100  00FD54  41                 	db	65	;'A'
  3101  00FD55  68                 	db	104	;'h'
  3102  00FD56  20                 	db	32
  3103  00FD57  25                 	db	37
  3104  00FD58  33                 	db	51	;'3'
  3105  00FD59  2E                 	db	46
  3106  00FD5A  32                 	db	50	;'2'
  3107  00FD5B  66                 	db	102	;'f'
  3108  00FD5C  20                 	db	32
  3109  00FD5D  20                 	db	32
  3110  00FD5E  20                 	db	32
  3111  00FD5F  20                 	db	32
  3112  00FD60  20                 	db	32
  3113  00FD61  00                 	db	0
  3114  00FD62                     STR_32:
  3115                           
  3116                           ; BSR set to: 57
  3117  00FD62  42                 	db	66	;'B'
  3118  00FD63  56                 	db	86	;'V'
  3119  00FD64  20                 	db	32
  3120  00FD65  25                 	db	37
  3121  00FD66  32                 	db	50	;'2'
  3122  00FD67  2E                 	db	46
  3123  00FD68  32                 	db	50	;'2'
  3124  00FD69  66                 	db	102	;'f'
  3125  00FD6A  20                 	db	32
  3126  00FD6B  42                 	db	66	;'B'
  3127  00FD6C  41                 	db	65	;'A'
  3128  00FD6D  20                 	db	32
  3129  00FD6E  25                 	db	37
  3130  00FD6F  32                 	db	50	;'2'
  3131  00FD70  2E                 	db	46
  3132  00FD71  32                 	db	50	;'2'
  3133  00FD72  66                 	db	102	;'f'
  3134  00FD73  20                 	db	32
  3135  00FD74  20                 	db	32
  3136  00FD75  20                 	db	32
  3137  00FD76  20                 	db	32
  3138  00FD77  00                 	db	0
  3139  00FD78                     STR_33:
  3140                           
  3141                           ; BSR set to: 57
  3142  00FD78  43                 	db	67	;'C'
  3143  00FD79  56                 	db	86	;'V'
  3144  00FD7A  20                 	db	32
  3145  00FD7B  25                 	db	37
  3146  00FD7C  32                 	db	50	;'2'
  3147  00FD7D  2E                 	db	46
  3148  00FD7E  32                 	db	50	;'2'
  3149  00FD7F  66                 	db	102	;'f'
  3150  00FD80  20                 	db	32
  3151  00FD81  4C                 	db	76	;'L'
  3152  00FD82  41                 	db	65	;'A'
  3153  00FD83  20                 	db	32
  3154  00FD84  25                 	db	37
  3155  00FD85  32                 	db	50	;'2'
  3156  00FD86  2E                 	db	46
  3157  00FD87  32                 	db	50	;'2'
  3158  00FD88  66                 	db	102	;'f'
  3159  00FD89  20                 	db	32
  3160  00FD8A  20                 	db	32
  3161  00FD8B  20                 	db	32
  3162  00FD8C  20                 	db	32
  3163  00FD8D  00                 	db	0
  3164  00FD8E                     STR_31:
  3165                           
  3166                           ; BSR set to: 57
  3167  00FD8E  50                 	db	80	;'P'
  3168  00FD8F  56                 	db	86	;'V'
  3169  00FD90  20                 	db	32
  3170  00FD91  25                 	db	37
  3171  00FD92  32                 	db	50	;'2'
  3172  00FD93  2E                 	db	46
  3173  00FD94  32                 	db	50	;'2'
  3174  00FD95  66                 	db	102	;'f'
  3175  00FD96  20                 	db	32
  3176  00FD97  50                 	db	80	;'P'
  3177  00FD98  41                 	db	65	;'A'
  3178  00FD99  20                 	db	32
  3179  00FD9A  25                 	db	37
  3180  00FD9B  32                 	db	50	;'2'
  3181  00FD9C  2E                 	db	46
  3182  00FD9D  32                 	db	50	;'2'
  3183  00FD9E  66                 	db	102	;'f'
  3184  00FD9F  20                 	db	32
  3185  00FDA0  20                 	db	32
  3186  00FDA1  20                 	db	32
  3187  00FDA2  20                 	db	32
  3188  00FDA3  00                 	db	0
  3189  00FDA4                     STR_43:
  3190                           
  3191                           ; BSR set to: 57
  3192  00FDA4  25                 	db	37
  3193  00FDA5  64                 	db	100	;'d'
  3194  00FDA6  20                 	db	32
  3195  00FDA7  25                 	db	37
  3196  00FDA8  32                 	db	50	;'2'
  3197  00FDA9  2E                 	db	46
  3198  00FDAA  34                 	db	52	;'4'
  3199  00FDAB  66                 	db	102	;'f'
  3200  00FDAC  2C                 	db	44
  3201  00FDAD  20                 	db	32
  3202  00FDAE  25                 	db	37
  3203  00FDAF  64                 	db	100	;'d'
  3204  00FDB0  20                 	db	32
  3205  00FDB1  20                 	db	32
  3206  00FDB2  54                 	db	84	;'T'
  3207  00FDB3  52                 	db	82	;'R'
  3208  00FDB4  49                 	db	73	;'I'
  3209  00FDB5  4D                 	db	77	;'M'
  3210  00FDB6  20                 	db	32
  3211  00FDB7  20                 	db	32
  3212  00FDB8  20                 	db	32
  3213  00FDB9  00                 	db	0
  3214  00FDBA                     STR_52:
  3215                           
  3216                           ; BSR set to: 57
  3217  00FDBA  20                 	db	32
  3218  00FDBB  25                 	db	37
  3219  00FDBC  64                 	db	100	;'d'
  3220  00FDBD  20                 	db	32
  3221  00FDBE  25                 	db	37
  3222  00FDBF  64                 	db	100	;'d'
  3223  00FDC0  20                 	db	32
  3224  00FDC1  20                 	db	32
  3225  00FDC2  20                 	db	32
  3226  00FDC3  20                 	db	32
  3227  00FDC4  20                 	db	32
  3228  00FDC5  20                 	db	32
  3229  00FDC6  20                 	db	32
  3230  00FDC7  20                 	db	32
  3231  00FDC8  20                 	db	32
  3232  00FDC9  20                 	db	32
  3233  00FDCA  20                 	db	32
  3234  00FDCB  20                 	db	32
  3235  00FDCC  20                 	db	32
  3236  00FDCD  20                 	db	32
  3237  00FDCE  00                 	db	0
  3238  00FDCF                     STR_47:
  3239                           
  3240                           ; BSR set to: 57
  3241  00FDCF  53                 	db	83	;'S'
  3242  00FDD0  65                 	db	101	;'e'
  3243  00FDD1  6E                 	db	110	;'n'
  3244  00FDD2  73                 	db	115	;'s'
  3245  00FDD3  6F                 	db	111	;'o'
  3246  00FDD4  72                 	db	114	;'r'
  3247  00FDD5  20                 	db	32
  3248  00FDD6  20                 	db	32
  3249  00FDD7  20                 	db	32
  3250  00FDD8  20                 	db	32
  3251  00FDD9  20                 	db	32
  3252  00FDDA  20                 	db	32
  3253  00FDDB  20                 	db	32
  3254  00FDDC  20                 	db	32
  3255  00FDDD  20                 	db	32
  3256  00FDDE  20                 	db	32
  3257  00FDDF  20                 	db	32
  3258  00FDE0  20                 	db	32
  3259  00FDE1  20                 	db	32
  3260  00FDE2  20                 	db	32
  3261  00FDE3  00                 	db	0
  3262  00FDE4                     STR_55:
  3263                           
  3264                           ; BSR set to: 57
  3265  00FDE4  20                 	db	32
  3266  00FDE5  25                 	db	37
  3267  00FDE6  6C                 	db	108	;'l'
  3268  00FDE7  64                 	db	100	;'d'
  3269  00FDE8  20                 	db	32
  3270  00FDE9  25                 	db	37
  3271  00FDEA  6C                 	db	108	;'l'
  3272  00FDEB  64                 	db	100	;'d'
  3273  00FDEC  20                 	db	32
  3274  00FDED  20                 	db	32
  3275  00FDEE  20                 	db	32
  3276  00FDEF  20                 	db	32
  3277  00FDF0  20                 	db	32
  3278  00FDF1  20                 	db	32
  3279  00FDF2  20                 	db	32
  3280  00FDF3  20                 	db	32
  3281  00FDF4  20                 	db	32
  3282  00FDF5  20                 	db	32
  3283  00FDF6  20                 	db	32
  3284  00FDF7  20                 	db	32
  3285  00FDF8  00                 	db	0
  3286  00FDF9                     STR_10:
  3287                           
  3288                           ; BSR set to: 57
  3289  00FDF9  42                 	db	66	;'B'
  3290  00FDFA  56                 	db	86	;'V'
  3291  00FDFB  20                 	db	32
  3292  00FDFC  25                 	db	37
  3293  00FDFD  32                 	db	50	;'2'
  3294  00FDFE  2E                 	db	46
  3295  00FDFF  34                 	db	52	;'4'
  3296  00FE00  66                 	db	102	;'f'
  3297  00FE01  20                 	db	32
  3298  00FE02  20                 	db	32
  3299  00FE03  20                 	db	32
  3300  00FE04  20                 	db	32
  3301  00FE05  20                 	db	32
  3302  00FE06  20                 	db	32
  3303  00FE07  20                 	db	32
  3304  00FE08  20                 	db	32
  3305  00FE09  20                 	db	32
  3306  00FE0A  20                 	db	32
  3307  00FE0B  20                 	db	32
  3308  00FE0C  20                 	db	32
  3309  00FE0D  00                 	db	0
  3310  00FE0E                     STR_4:
  3311                           
  3312                           ; BSR set to: 57
  3313  00FE0E  20                 	db	32
  3314  00FE0F  4E                 	db	78	;'N'
  3315  00FE10  53                 	db	83	;'S'
  3316  00FE11  41                 	db	65	;'A'
  3317  00FE12  53                 	db	83	;'S'
  3318  00FE13  50                 	db	80	;'P'
  3319  00FE14  4F                 	db	79	;'O'
  3320  00FE15  4F                 	db	79	;'O'
  3321  00FE16  4B                 	db	75	;'K'
  3322  00FE17  20                 	db	32
  3323  00FE18  20                 	db	32
  3324  00FE19  20                 	db	32
  3325  00FE1A  20                 	db	32
  3326  00FE1B  20                 	db	32
  3327  00FE1C  20                 	db	32
  3328  00FE1D  20                 	db	32
  3329  00FE1E  20                 	db	32
  3330  00FE1F  20                 	db	32
  3331  00FE20  20                 	db	32
  3332  00FE21  20                 	db	32
  3333  00FE22  00                 	db	0
  3334  00FE23                     STR_15:
  3335                           
  3336                           ; BSR set to: 57
  3337  00FE23  42                 	db	66	;'B'
  3338  00FE24  61                 	db	97	;'a'
  3339  00FE25  74                 	db	116	;'t'
  3340  00FE26  74                 	db	116	;'t'
  3341  00FE27  65                 	db	101	;'e'
  3342  00FE28  72                 	db	114	;'r'
  3343  00FE29  79                 	db	121	;'y'
  3344  00FE2A  20                 	db	32
  3345  00FE2B  45                 	db	69	;'E'
  3346  00FE2C  53                 	db	83	;'S'
  3347  00FE2D  52                 	db	82	;'R'
  3348  00FE2E  20                 	db	32
  3349  00FE2F  20                 	db	32
  3350  00FE30  20                 	db	32
  3351  00FE31  20                 	db	32
  3352  00FE32  20                 	db	32
  3353  00FE33  20                 	db	32
  3354  00FE34  20                 	db	32
  3355  00FE35  20                 	db	32
  3356  00FE36  20                 	db	32
  3357  00FE37  00                 	db	0
  3358  00FE38                     STR_16:
  3359                           
  3360                           ; BSR set to: 57
  3361  00FE38  43                 	db	67	;'C'
  3362  00FE39  61                 	db	97	;'a'
  3363  00FE3A  6C                 	db	108	;'l'
  3364  00FE3B  63                 	db	99	;'c'
  3365  00FE3C  75                 	db	117	;'u'
  3366  00FE3D  6C                 	db	108	;'l'
  3367  00FE3E  61                 	db	97	;'a'
  3368  00FE3F  74                 	db	116	;'t'
  3369  00FE40  69                 	db	105	;'i'
  3370  00FE41  6F                 	db	111	;'o'
  3371  00FE42  6E                 	db	110	;'n'
  3372  00FE43  20                 	db	32
  3373  00FE44  20                 	db	32
  3374  00FE45  20                 	db	32
  3375  00FE46  20                 	db	32
  3376  00FE47  20                 	db	32
  3377  00FE48  20                 	db	32
  3378  00FE49  20                 	db	32
  3379  00FE4A  20                 	db	32
  3380  00FE4B  20                 	db	32
  3381  00FE4C  00                 	db	0
  3382  00FE4D                     STR_48:
  3383                           
  3384                           ; BSR set to: 57
  3385  00FE4D  43                 	db	67	;'C'
  3386  00FE4E  61                 	db	97	;'a'
  3387  00FE4F  6C                 	db	108	;'l'
  3388  00FE50  69                 	db	105	;'i'
  3389  00FE51  62                 	db	98	;'b'
  3390  00FE52  72                 	db	114	;'r'
  3391  00FE53  61                 	db	97	;'a'
  3392  00FE54  74                 	db	116	;'t'
  3393  00FE55  69                 	db	105	;'i'
  3394  00FE56  6F                 	db	111	;'o'
  3395  00FE57  6E                 	db	110	;'n'
  3396  00FE58  20                 	db	32
  3397  00FE59  20                 	db	32
  3398  00FE5A  20                 	db	32
  3399  00FE5B  20                 	db	32
  3400  00FE5C  20                 	db	32
  3401  00FE5D  20                 	db	32
  3402  00FE5E  20                 	db	32
  3403  00FE5F  20                 	db	32
  3404  00FE60  20                 	db	32
  3405  00FE61  00                 	db	0
  3406  00FE62                     STR_2:
  3407                           
  3408                           ; BSR set to: 57
  3409  00FE62  20                 	db	32
  3410  00FE63  56                 	db	86	;'V'
  3411  00FE64  65                 	db	101	;'e'
  3412  00FE65  72                 	db	114	;'r'
  3413  00FE66  73                 	db	115	;'s'
  3414  00FE67  69                 	db	105	;'i'
  3415  00FE68  6F                 	db	111	;'o'
  3416  00FE69  6E                 	db	110	;'n'
  3417  00FE6A  20                 	db	32
  3418  00FE6B  25                 	db	37
  3419  00FE6C  73                 	db	115	;'s'
  3420  00FE6D  20                 	db	32
  3421  00FE6E  20                 	db	32
  3422  00FE6F  20                 	db	32
  3423  00FE70  20                 	db	32
  3424  00FE71  20                 	db	32
  3425  00FE72  20                 	db	32
  3426  00FE73  20                 	db	32
  3427  00FE74  20                 	db	32
  3428  00FE75  20                 	db	32
  3429  00FE76  00                 	db	0
  3430  00FE77                     STR_59:
  3431                           
  3432                           ; BSR set to: 57
  3433  00FE77  4F                 	db	79	;'O'
  3434  00FE78  75                 	db	117	;'u'
  3435  00FE79  74                 	db	116	;'t'
  3436  00FE7A  20                 	db	32
  3437  00FE7B  4F                 	db	79	;'O'
  3438  00FE7C  66                 	db	102	;'f'
  3439  00FE7D  20                 	db	32
  3440  00FE7E  52                 	db	82	;'R'
  3441  00FE7F  61                 	db	97	;'a'
  3442  00FE80  6E                 	db	110	;'n'
  3443  00FE81  67                 	db	103	;'g'
  3444  00FE82  65                 	db	101	;'e'
  3445  00FE83  20                 	db	32
  3446  00FE84  20                 	db	32
  3447  00FE85  20                 	db	32
  3448  00FE86  20                 	db	32
  3449  00FE87  20                 	db	32
  3450  00FE88  20                 	db	32
  3451  00FE89  20                 	db	32
  3452  00FE8A  20                 	db	32
  3453  00FE8B  00                 	db	0
  3454  00FE8C                     STR_56:
  3455                           
  3456                           ; BSR set to: 57
  3457  00FE8C  5A                 	db	90	;'Z'
  3458  00FE8D  65                 	db	101	;'e'
  3459  00FE8E  72                 	db	114	;'r'
  3460  00FE8F  6F                 	db	111	;'o'
  3461  00FE90  20                 	db	32
  3462  00FE91  43                 	db	67	;'C'
  3463  00FE92  61                 	db	97	;'a'
  3464  00FE93  6C                 	db	108	;'l'
  3465  00FE94  20                 	db	32
  3466  00FE95  53                 	db	83	;'S'
  3467  00FE96  65                 	db	101	;'e'
  3468  00FE97  74                 	db	116	;'t'
  3469  00FE98  20                 	db	32
  3470  00FE99  20                 	db	32
  3471  00FE9A  20                 	db	32
  3472  00FE9B  20                 	db	32
  3473  00FE9C  20                 	db	32
  3474  00FE9D  20                 	db	32
  3475  00FE9E  20                 	db	32
  3476  00FE9F  20                 	db	32
  3477  00FEA0  00                 	db	0
  3478  00FEA1                     STR_1:
  3479                           
  3480                           ; BSR set to: 57
  3481  00FEA1  20                 	db	32
  3482  00FEA2  4D                 	db	77	;'M'
  3483  00FEA3  42                 	db	66	;'B'
  3484  00FEA4  4D                 	db	77	;'M'
  3485  00FEA5  43                 	db	67	;'C'
  3486  00FEA6  20                 	db	32
  3487  00FEA7  53                 	db	83	;'S'
  3488  00FEA8  4F                 	db	79	;'O'
  3489  00FEA9  4C                 	db	76	;'L'
  3490  00FEAA  41                 	db	65	;'A'
  3491  00FEAB  52                 	db	82	;'R'
  3492  00FEAC  4D                 	db	77	;'M'
  3493  00FEAD  4F                 	db	79	;'O'
  3494  00FEAE  4E                 	db	78	;'N'
  3495  00FEAF  20                 	db	32
  3496  00FEB0  20                 	db	32
  3497  00FEB1  20                 	db	32
  3498  00FEB2  20                 	db	32
  3499  00FEB3  20                 	db	32
  3500  00FEB4  20                 	db	32
  3501  00FEB5  00                 	db	0
  3502  00FEB6                     STR_46:
  3503                           
  3504                           ; BSR set to: 57
  3505  00FEB6  50                 	db	80	;'P'
  3506  00FEB7  56                 	db	86	;'V'
  3507  00FEB8  20                 	db	32
  3508  00FEB9  61                 	db	97	;'a'
  3509  00FEBA  6E                 	db	110	;'n'
  3510  00FEBB  64                 	db	100	;'d'
  3511  00FEBC  20                 	db	32
  3512  00FEBD  42                 	db	66	;'B'
  3513  00FEBE  41                 	db	65	;'A'
  3514  00FEBF  54                 	db	84	;'T'
  3515  00FEC0  54                 	db	84	;'T'
  3516  00FEC1  45                 	db	69	;'E'
  3517  00FEC2  52                 	db	82	;'R'
  3518  00FEC3  59                 	db	89	;'Y'
  3519  00FEC4  20                 	db	32
  3520  00FEC5  20                 	db	32
  3521  00FEC6  20                 	db	32
  3522  00FEC7  20                 	db	32
  3523  00FEC8  20                 	db	32
  3524  00FEC9  20                 	db	32
  3525  00FECA  00                 	db	0
  3526  00FECB                     STR_18:
  3527                           
  3528                           ; BSR set to: 57
  3529  00FECB  43                 	db	67	;'C'
  3530  00FECC  68                 	db	104	;'h'
  3531  00FECD  65                 	db	101	;'e'
  3532  00FECE  63                 	db	99	;'c'
  3533  00FECF  6B                 	db	107	;'k'
  3534  00FED0  69                 	db	105	;'i'
  3535  00FED1  6E                 	db	110	;'n'
  3536  00FED2  67                 	db	103	;'g'
  3537  00FED3  20                 	db	32
  3538  00FED4  25                 	db	37
  3539  00FED5  63                 	db	99	;'c'
  3540  00FED6  20                 	db	32
  3541  00FED7  25                 	db	37
  3542  00FED8  63                 	db	99	;'c'
  3543  00FED9  20                 	db	32
  3544  00FEDA  20                 	db	32
  3545  00FEDB  20                 	db	32
  3546  00FEDC  20                 	db	32
  3547  00FEDD  20                 	db	32
  3548  00FEDE  20                 	db	32
  3549  00FEDF  00                 	db	0
  3550  00FEE0                     STR_51:
  3551                           
  3552                           ; BSR set to: 57
  3553  00FEE0  53                 	db	83	;'S'
  3554  00FEE1  65                 	db	101	;'e'
  3555  00FEE2  6E                 	db	110	;'n'
  3556  00FEE3  73                 	db	115	;'s'
  3557  00FEE4  6F                 	db	111	;'o'
  3558  00FEE5  72                 	db	114	;'r'
  3559  00FEE6  20                 	db	32
  3560  00FEE7  52                 	db	82	;'R'
  3561  00FEE8  65                 	db	101	;'e'
  3562  00FEE9  61                 	db	97	;'a'
  3563  00FEEA  64                 	db	100	;'d'
  3564  00FEEB  69                 	db	105	;'i'
  3565  00FEEC  6E                 	db	110	;'n'
  3566  00FEED  67                 	db	103	;'g'
  3567  00FEEE  73                 	db	115	;'s'
  3568  00FEEF  20                 	db	32
  3569  00FEF0  20                 	db	32
  3570  00FEF1  20                 	db	32
  3571  00FEF2  20                 	db	32
  3572  00FEF3  20                 	db	32
  3573  00FEF4  00                 	db	0
  3574  00FEF5                     STR_8:
  3575                           
  3576                           ; BSR set to: 57
  3577  00FEF5  52                 	db	82	;'R'
  3578  00FEF6  65                 	db	101	;'e'
  3579  00FEF7  61                 	db	97	;'a'
  3580  00FEF8  64                 	db	100	;'d'
  3581  00FEF9  20                 	db	32
  3582  00FEFA  45                 	db	69	;'E'
  3583  00FEFB  45                 	db	69	;'E'
  3584  00FEFC  50                 	db	80	;'P'
  3585  00FEFD  52                 	db	82	;'R'
  3586  00FEFE  4F                 	db	79	;'O'
  3587  00FEFF  4D                 	db	77	;'M'
  3588  00FF00  20                 	db	32
  3589  00FF01  44                 	db	68	;'D'
  3590  00FF02  41                 	db	65	;'A'
  3591  00FF03  54                 	db	84	;'T'
  3592  00FF04  41                 	db	65	;'A'
  3593  00FF05  20                 	db	32
  3594  00FF06  20                 	db	32
  3595  00FF07  20                 	db	32
  3596  00FF08  20                 	db	32
  3597  00FF09  00                 	db	0
  3598  00FF0A                     STR_17:
  3599                           
  3600                           ; BSR set to: 57
  3601  00FF0A  43                 	db	67	;'C'
  3602  00FF0B  68                 	db	104	;'h'
  3603  00FF0C  65                 	db	101	;'e'
  3604  00FF0D  63                 	db	99	;'c'
  3605  00FF0E  6B                 	db	107	;'k'
  3606  00FF0F  20                 	db	32
  3607  00FF10  33                 	db	51	;'3'
  3608  00FF11  30                 	db	48	;'0'
  3609  00FF12  20                 	db	32
  3610  00FF13  73                 	db	115	;'s'
  3611  00FF14  65                 	db	101	;'e'
  3612  00FF15  63                 	db	99	;'c'
  3613  00FF16  6F                 	db	111	;'o'
  3614  00FF17  6E                 	db	110	;'n'
  3615  00FF18  64                 	db	100	;'d'
  3616  00FF19  73                 	db	115	;'s'
  3617  00FF1A  20                 	db	32
  3618  00FF1B  20                 	db	32
  3619  00FF1C  20                 	db	32
  3620  00FF1D  20                 	db	32
  3621  00FF1E  00                 	db	0
  3622  00FF1F                     STR_53:
  3623                           
  3624                           ; BSR set to: 57
  3625  00FF1F  53                 	db	83	;'S'
  3626  00FF20  74                 	db	116	;'t'
  3627  00FF21  61                 	db	97	;'a'
  3628  00FF22  62                 	db	98	;'b'
  3629  00FF23  69                 	db	105	;'i'
  3630  00FF24  6C                 	db	108	;'l'
  3631  00FF25  69                 	db	105	;'i'
  3632  00FF26  74                 	db	116	;'t'
  3633  00FF27  79                 	db	121	;'y'
  3634  00FF28  20                 	db	32
  3635  00FF29  63                 	db	99	;'c'
  3636  00FF2A  6C                 	db	108	;'l'
  3637  00FF2B  6F                 	db	111	;'o'
  3638  00FF2C  63                 	db	99	;'c'
  3639  00FF2D  6B                 	db	107	;'k'
  3640  00FF2E  20                 	db	32
  3641  00FF2F  25                 	db	37
  3642  00FF30  64                 	db	100	;'d'
  3643  00FF31  20                 	db	32
  3644  00FF32  20                 	db	32
  3645  00FF33  00                 	db	0
  3646  00FF34                     STR_9:
  3647                           
  3648                           ; BSR set to: 57
  3649  00FF34  49                 	db	73	;'I'
  3650  00FF35  6E                 	db	110	;'n'
  3651  00FF36  76                 	db	118	;'v'
  3652  00FF37  61                 	db	97	;'a'
  3653  00FF38  6C                 	db	108	;'l'
  3654  00FF39  69                 	db	105	;'i'
  3655  00FF3A  64                 	db	100	;'d'
  3656  00FF3B  20                 	db	32
  3657  00FF3C  45                 	db	69	;'E'
  3658  00FF3D  45                 	db	69	;'E'
  3659  00FF3E  50                 	db	80	;'P'
  3660  00FF3F  52                 	db	82	;'R'
  3661  00FF40  4F                 	db	79	;'O'
  3662  00FF41  4D                 	db	77	;'M'
  3663  00FF42  20                 	db	32
  3664  00FF43  44                 	db	68	;'D'
  3665  00FF44  41                 	db	65	;'A'
  3666  00FF45  54                 	db	84	;'T'
  3667  00FF46  41                 	db	65	;'A'
  3668  00FF47  20                 	db	32
  3669  00FF48  00                 	db	0
  3670  00FF49                     STR_49:
  3671                           
  3672                           ; BSR set to: 57
  3673  00FF49  52                 	db	82	;'R'
  3674  00FF4A  65                 	db	101	;'e'
  3675  00FF4B  6C                 	db	108	;'l'
  3676  00FF4C  65                 	db	101	;'e'
  3677  00FF4D  61                 	db	97	;'a'
  3678  00FF4E  73                 	db	115	;'s'
  3679  00FF4F  65                 	db	101	;'e'
  3680  00FF50  20                 	db	32
  3681  00FF51  62                 	db	98	;'b'
  3682  00FF52  75                 	db	117	;'u'
  3683  00FF53  74                 	db	116	;'t'
  3684  00FF54  74                 	db	116	;'t'
  3685  00FF55  6F                 	db	111	;'o'
  3686  00FF56  6E                 	db	110	;'n'
  3687  00FF57  20                 	db	32
  3688  00FF58  25                 	db	37
  3689  00FF59  63                 	db	99	;'c'
  3690  00FF5A  20                 	db	32
  3691  00FF5B  20                 	db	32
  3692  00FF5C  00                 	db	0
  3693  00FF5D                     STR_64:
  3694                           
  3695                           ; BSR set to: 57
  3696  00FF5D  48                 	db	72	;'H'
  3697  00FF5E  45                 	db	69	;'E'
  3698  00FF5F  4C                 	db	76	;'L'
  3699  00FF60  50                 	db	80	;'P'
  3700  00FF61  20                 	db	32
  3701  00FF62  25                 	db	37
  3702  00FF63  73                 	db	115	;'s'
  3703  00FF64  20                 	db	32
  3704  00FF65  20                 	db	32
  3705  00FF66  20                 	db	32
  3706  00FF67  20                 	db	32
  3707  00FF68  20                 	db	32
  3708  00FF69  20                 	db	32
  3709  00FF6A  20                 	db	32
  3710  00FF6B  20                 	db	32
  3711  00FF6C  20                 	db	32
  3712  00FF6D  20                 	db	32
  3713  00FF6E  20                 	db	32
  3714  00FF6F  00                 	db	0
  3715  00FF70                     
  3716                           ; BSR set to: 57
  3717  00FF70  44                 	db	68	;'D'
  3718  00FF71  49                 	db	73	;'I'
  3719  00FF72  53                 	db	83	;'S'
  3720  00FF73  50                 	db	80	;'P'
  3721  00FF74  4C                 	db	76	;'L'
  3722  00FF75  41                 	db	65	;'A'
  3723  00FF76  59                 	db	89	;'Y'
  3724  00FF77  20                 	db	32
  3725  00FF78  25                 	db	37
  3726  00FF79  73                 	db	115	;'s'
  3727  00FF7A  20                 	db	32
  3728  00FF7B  20                 	db	32
  3729  00FF7C  20                 	db	32
  3730  00FF7D  20                 	db	32
  3731  00FF7E  20                 	db	32
  3732  00FF7F  20                 	db	32
  3733  00FF80  20                 	db	32
  3734  00FF81  20                 	db	32
  3735  00FF82  00                 	db	0
  3736  00FF83                     
  3737                           ; BSR set to: 57
  3738  00FF83  25                 	db	37
  3739  00FF84  64                 	db	100	;'d'
  3740  00FF85  20                 	db	32
  3741  00FF86  25                 	db	37
  3742  00FF87  32                 	db	50	;'2'
  3743  00FF88  2E                 	db	46
  3744  00FF89  34                 	db	52	;'4'
  3745  00FF8A  66                 	db	102	;'f'
  3746  00FF8B  2C                 	db	44
  3747  00FF8C  20                 	db	32
  3748  00FF8D  25                 	db	37
  3749  00FF8E  64                 	db	100	;'d'
  3750  00FF8F  20                 	db	32
  3751  00FF90  20                 	db	32
  3752  00FF91  20                 	db	32
  3753  00FF92  23                 	db	35
  3754  00FF93  00                 	db	0
  3755  00FF94                     STR_22:
  3756                           
  3757                           ; BSR set to: 57
  3758  00FF94  25                 	db	37
  3759  00FF95  64                 	db	100	;'d'
  3760  00FF96  20                 	db	32
  3761  00FF97  25                 	db	37
  3762  00FF98  32                 	db	50	;'2'
  3763  00FF99  2E                 	db	46
  3764  00FF9A  34                 	db	52	;'4'
  3765  00FF9B  66                 	db	102	;'f'
  3766  00FF9C  20                 	db	32
  3767  00FF9D  20                 	db	32
  3768  00FF9E  20                 	db	32
  3769  00FF9F  25                 	db	37
  3770  00FFA0  64                 	db	100	;'d'
  3771  00FFA1  20                 	db	32
  3772  00FFA2  20                 	db	32
  3773  00FFA3  00                 	db	0
  3774  00FFA4                     STR_68:
  3775                           
  3776                           ; BSR set to: 57
  3777  00FFA4  76                 	db	118	;'v'
  3778  00FFA5  74                 	db	116	;'t'
  3779  00FFA6  65                 	db	101	;'e'
  3780  00FFA7  72                 	db	114	;'r'
  3781  00FFA8  6D                 	db	109	;'m'
  3782  00FFA9  20                 	db	32
  3783  00FFAA  25                 	db	37
  3784  00FFAB  78                 	db	120	;'x'
  3785  00FFAC  3A                 	db	58	;':'
  3786  00FFAD  25                 	db	37
  3787  00FFAE  78                 	db	120	;'x'
  3788  00FFAF  20                 	db	32
  3789  00FFB0  20                 	db	32
  3790  00FFB1  20                 	db	32
  3791  00FFB2  00                 	db	0
  3792  00FFB3                     STR_62:
  3793                           
  3794                           ; BSR set to: 57
  3795  00FFB3  46                 	db	70	;'F'
  3796  00FFB4  65                 	db	101	;'e'
  3797  00FFB5  62                 	db	98	;'b'
  3798  00FFB6  20                 	db	32
  3799  00FFB7  31                 	db	49	;'1'
  3800  00FFB8  30                 	db	48	;'0'
  3801  00FFB9  20                 	db	32
  3802  00FFBA  32                 	db	50	;'2'
  3803  00FFBB  30                 	db	48	;'0'
  3804  00FFBC  32                 	db	50	;'2'
  3805  00FFBD  30                 	db	48	;'0'
  3806  00FFBE  00                 	db	0
  3807  00FFBF                     STR_66:
  3808                           
  3809                           ; BSR set to: 57
  3810  00FFBF  25                 	db	37
  3811  00FFC0  73                 	db	115	;'s'
  3812  00FFC1  20                 	db	32
  3813  00FFC2  20                 	db	32
  3814  00FFC3  20                 	db	32
  3815  00FFC4  20                 	db	32
  3816  00FFC5  20                 	db	32
  3817  00FFC6  20                 	db	32
  3818  00FFC7  20                 	db	32
  3819  00FFC8  00                 	db	0
  3820  00FFC9                     STR_63:
  3821                           
  3822                           ; BSR set to: 57
  3823  00FFC9  30                 	db	48	;'0'
  3824  00FFCA  38                 	db	56	;'8'
  3825  00FFCB  3A                 	db	58	;':'
  3826  00FFCC  33                 	db	51	;'3'
  3827  00FFCD  36                 	db	54	;'6'
  3828  00FFCE  3A                 	db	58	;':'
  3829  00FFCF  30                 	db	48	;'0'
  3830  00FFD0  37                 	db	55	;'7'
  3831  00FFD1  00                 	db	0
  3832  00FFD2                     STR_3:
  3833                           
  3834                           ; BSR set to: 57
  3835  00FFD2  31                 	db	49	;'1'
  3836  00FFD3  2E                 	db	46
  3837  00FFD4  31                 	db	49	;'1'
  3838  00FFD5  39                 	db	57	;'9'
  3839  00FFD6  00                 	db	0
  3840  00FFD7                     STR_82:
  3841                           
  3842                           ; BSR set to: 57
  3843  00FFD7  49                 	db	73	;'I'
  3844  00FFD8  4E                 	db	78	;'N'
  3845  00FFD9  46                 	db	70	;'F'
  3846  00FFDA  00                 	db	0
  3847  00FFDB                     STR_86:
  3848                           
  3849                           ; BSR set to: 57
  3850  00FFDB  4E                 	db	78	;'N'
  3851  00FFDC  41                 	db	65	;'A'
  3852  00FFDD  4E                 	db	78	;'N'
  3853  00FFDE  00                 	db	0
  3854  00FFDF                     STR_83:
  3855                           
  3856                           ; BSR set to: 57
  3857  00FFDF  69                 	db	105	;'i'
  3858  00FFE0  6E                 	db	110	;'n'
  3859  00FFE1  66                 	db	102	;'f'
  3860  00FFE2  00                 	db	0
  3861  00FFE3                     STR_87:
  3862                           
  3863                           ; BSR set to: 57
  3864  00FFE3  6E                 	db	110	;'n'
  3865  00FFE4  61                 	db	97	;'a'
  3866  00FFE5  6E                 	db	110	;'n'
  3867  00FFE6  00                 	db	0
  3868  00FFE7                     STR_113:
  3869                           
  3870                           ; BSR set to: 57
  3871  00FFE7  6C                 	db	108	;'l'
  3872  00FFE8  58                 	db	88	;'X'
  3873  00FFE9  00                 	db	0
  3874  00FFEA                     STR_90:
  3875                           
  3876                           ; BSR set to: 57
  3877  00FFEA  6C                 	db	108	;'l'
  3878  00FFEB  64                 	db	100	;'d'
  3879  00FFEC  00                 	db	0
  3880  00FFED                     STR_99:
  3881                           
  3882                           ; BSR set to: 57
  3883  00FFED  6C                 	db	108	;'l'
  3884  00FFEE  66                 	db	102	;'f'
  3885  00FFEF  00                 	db	0
  3886  00FFF0                     STR_94:
  3887                           
  3888                           ; BSR set to: 57
  3889  00FFF0  6C                 	db	108	;'l'
  3890  00FFF1  69                 	db	105	;'i'
  3891  00FFF2  00                 	db	0
  3892  00FFF3                     STR_104:
  3893                           
  3894                           ; BSR set to: 57
  3895  00FFF3  6C                 	db	108	;'l'
  3896  00FFF4  75                 	db	117	;'u'
  3897  00FFF5  00                 	db	0
  3898  00FFF6                     STR_109:
  3899                           
  3900                           ; BSR set to: 57
  3901  00FFF6  6C                 	db	108	;'l'
  3902  00FFF7  78                 	db	120	;'x'
  3903  00FFF8  00                 	db	0
  3904  00FFF9                     STR_61:
  3905                           
  3906                           ; BSR set to: 57
  3907  00FFF9  25                 	db	37
  3908  00FFFA  63                 	db	99	;'c'
  3909  00FFFB  00                 	db	0
  3910  00FFFC                     STR_60:
  3911                           
  3912                           ; BSR set to: 57
  3913  00FFFC  25                 	db	37
  3914  00FFFD  73                 	db	115	;'s'
  3915  00FFFE  00                 	db	0
  3916  0000                     
  3917                           ; #config settings
  3918  00FFFF  00                 	db	0	; dummy byte at the end
  3919  0000                     
  3920                           	psect	cinit
  3921  01AC8C                     __pcinit:
  3922                           	opt callstack 0
  3923  01AC8C                     start_initialization:
  3924                           	opt callstack 0
  3925  01AC8C                     __initialization:
  3926                           	opt callstack 0
  3927                           
  3928                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3929                           ; load TBLPTR registers with __pidataBIGRAM
  3930  01AC8C  0EE2               	movlw	low __pidataBIGRAM
  3931  01AC8E  6EF6               	movwf	tblptrl,c
  3932  01AC90  0E70               	movlw	high __pidataBIGRAM
  3933  01AC92  6EF7               	movwf	tblptrh,c
  3934  01AC94  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3935  01AC96  6EF8               	movwf	tblptru,c
  3936  01AC98  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3937  01AC9C  EE20 F32B          	lfsr	2,811
  3938  01ACA0                     copy_data0:
  3939  01ACA0  0009               	tblrd		*+
  3940  01ACA2  006F FFD7 FFEE     	movff	tablat,postinc0
  3941  01ACA8  50DD               	movf	postdec2,w,c
  3942  01ACAA  50D9               	movf	fsr2l,w,c
  3943  01ACAC  E1F9               	bnz	copy_data0
  3944  01ACAE  50DA               	movf	fsr2h,w,c
  3945  01ACB0  E1F7               	bnz	copy_data0
  3946                           
  3947                           ; Initialize objects allocated to BANK1 (208 bytes)
  3948                           ; load TBLPTR registers with __pidataBANK1
  3949  01ACB2  0E1A               	movlw	low __pidataBANK1
  3950  01ACB4  6EF6               	movwf	tblptrl,c
  3951  01ACB6  0EB0               	movlw	high __pidataBANK1
  3952  01ACB8  6EF7               	movwf	tblptrh,c
  3953  01ACBA  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3954  01ACBC  6EF8               	movwf	tblptru,c
  3955  01ACBE  EE00  F100         	lfsr	0,__pdataBANK1
  3956  01ACC2  EE20 F0D0          	lfsr	2,208
  3957  01ACC6                     copy_data1:
  3958  01ACC6  0009               	tblrd		*+
  3959  01ACC8  006F FFD7 FFEE     	movff	tablat,postinc0
  3960  01ACCE  50DD               	movf	postdec2,w,c
  3961  01ACD0  50D9               	movf	fsr2l,w,c
  3962  01ACD2  E1F9               	bnz	copy_data1
  3963                           
  3964                           ; Initialize objects allocated to BANK0 (57 bytes)
  3965                           ; load TBLPTR registers with __pidataBANK0
  3966  01ACD4  0EE4               	movlw	low __pidataBANK0
  3967  01ACD6  6EF6               	movwf	tblptrl,c
  3968  01ACD8  0EC9               	movlw	high __pidataBANK0
  3969  01ACDA  6EF7               	movwf	tblptrh,c
  3970  01ACDC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3971  01ACDE  6EF8               	movwf	tblptru,c
  3972  01ACE0  EE00  F0AE         	lfsr	0,__pdataBANK0
  3973  01ACE4  EE20 F039          	lfsr	2,57
  3974  01ACE8                     copy_data2:
  3975  01ACE8  0009               	tblrd		*+
  3976  01ACEA  006F FFD7 FFEE     	movff	tablat,postinc0
  3977  01ACF0  50DD               	movf	postdec2,w,c
  3978  01ACF2  50D9               	movf	fsr2l,w,c
  3979  01ACF4  E1F9               	bnz	copy_data2
  3980                           
  3981                           ; Clear objects allocated to BIGRAM (482 bytes)
  3982  01ACF6  EE02  F12A         	lfsr	0,__pbssBIGRAM
  3983  01ACFA  EE20 F1E2          	lfsr	2,482
  3984  01ACFE                     clear_0:
  3985  01ACFE  6AEE               	clrf	postinc0,c
  3986  01AD00  50DD               	movf	postdec2,w,c
  3987  01AD02  50D9               	movf	fsr2l,w,c
  3988  01AD04  E1FC               	bnz	clear_0
  3989  01AD06  50DA               	movf	fsr2h,w,c
  3990  01AD08  E1FA               	bnz	clear_0
  3991                           
  3992                           ; Clear objects allocated to BANK5 (255 bytes)
  3993  01AD0A  EE01  F100         	lfsr	0,__pbssBANK5
  3994  01AD0E  EE20 F0FF          	lfsr	2,255
  3995  01AD12                     clear_1:
  3996  01AD12  6AEE               	clrf	postinc0,c
  3997  01AD14  50DD               	movf	postdec2,w,c
  3998  01AD16  50D9               	movf	fsr2l,w,c
  3999  01AD18  E1FC               	bnz	clear_1
  4000  01AD1A  50DA               	movf	fsr2h,w,c
  4001  01AD1C  E1FA               	bnz	clear_1
  4002                           
  4003                           ; Clear objects allocated to BANK4 (67 bytes)
  4004  01AD1E  EE01  F000         	lfsr	0,__pbssBANK4
  4005  01AD22  0E43               	movlw	67
  4006  01AD24                     clear_2:
  4007  01AD24  6AEE               	clrf	postinc0,c
  4008  01AD26  06E8               	decf	wreg,f,c
  4009  01AD28  E1FD               	bnz	clear_2
  4010                           
  4011                           ; Clear objects allocated to BANK3 (215 bytes)
  4012  01AD2A  EE00  F300         	lfsr	0,__pbssBANK3
  4013  01AD2E  0ED7               	movlw	215
  4014  01AD30                     clear_3:
  4015  01AD30  6AEE               	clrf	postinc0,c
  4016  01AD32  06E8               	decf	wreg,f,c
  4017  01AD34  E1FD               	bnz	clear_3
  4018                           
  4019                           ; Clear objects allocated to BANK2 (212 bytes)
  4020  01AD36  EE00  F200         	lfsr	0,__pbssBANK2
  4021  01AD3A  0ED4               	movlw	212
  4022  01AD3C                     clear_4:
  4023  01AD3C  6AEE               	clrf	postinc0,c
  4024  01AD3E  06E8               	decf	wreg,f,c
  4025  01AD40  E1FD               	bnz	clear_4
  4026                           
  4027                           ; Clear objects allocated to BANK1 (42 bytes)
  4028  01AD42  EE00  F1D0         	lfsr	0,__pbssBANK1
  4029  01AD46  0E2A               	movlw	42
  4030  01AD48                     clear_5:
  4031  01AD48  6AEE               	clrf	postinc0,c
  4032  01AD4A  06E8               	decf	wreg,f,c
  4033  01AD4C  E1FD               	bnz	clear_5
  4034                           
  4035                           ; Clear objects allocated to BANK0 (78 bytes)
  4036  01AD4E  EE00  F060         	lfsr	0,__pbssBANK0
  4037  01AD52  0E4E               	movlw	78
  4038  01AD54                     clear_6:
  4039  01AD54  6AEE               	clrf	postinc0,c
  4040  01AD56  06E8               	decf	wreg,f,c
  4041  01AD58  E1FD               	bnz	clear_6
  4042                           
  4043                           ; Clear objects allocated to COMRAM (14 bytes)
  4044  01AD5A  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4045  01AD5E  0E0E               	movlw	14
  4046  01AD60                     clear_7:
  4047  01AD60  6AEE               	clrf	postinc0,c
  4048  01AD62  06E8               	decf	wreg,f,c
  4049  01AD64  E1FD               	bnz	clear_7
  4050                           
  4051                           ;
  4052                           ; Setup IVTBASE
  4053                           ;
  4054  01AD66  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4055  01AD68  6ED5               	movwf	213,c
  4056  01AD6A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4057  01AD6C  6ED6               	movwf	214,c
  4058  01AD6E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4059  01AD70  6ED7               	movwf	215,c
  4060  01AD72                     end_of_initialization:
  4061                           	opt callstack 0
  4062  01AD72                     __end_of__initialization:
  4063                           	opt callstack 0
  4064  01AD72  0100               	movlb	0
  4065  01AD74  EF00  F080         	goto	_main	;jump to C main() function
  4066                           
  4067                           	psect	bssCOMRAM
  4068  00003A                     __pbssCOMRAM:
  4069                           	opt callstack 0
  4070  00003A                     _width:
  4071                           	opt callstack 0
  4072  00003A                     	ds	2
  4073  00003C                     _prec:
  4074                           	opt callstack 0
  4075  00003C                     	ds	2
  4076  00003E                     _flags:
  4077                           	opt callstack 0
  4078  00003E                     	ds	2
  4079  000040                     calc_bsoc@log_update_wait:
  4080                           	opt callstack 0
  4081  000040                     	ds	1
  4082  000041                     check_day_time@day_delay:
  4083                           	opt callstack 0
  4084  000041                     	ds	1
  4085  000042                     dac_spi_control@S0:
  4086                           	opt callstack 0
  4087  000042                     	ds	1
  4088  000043                     dac_spi_control@init:
  4089                           	opt callstack 0
  4090  000043                     	ds	1
  4091  000044                     _uart2RxHead:
  4092                           	opt callstack 0
  4093  000044                     	ds	1
  4094  000045                     _uart2TxBufferRemaining:
  4095                           	opt callstack 0
  4096  000045                     	ds	1
  4097  000046                     _uart2TxTail:
  4098                           	opt callstack 0
  4099  000046                     	ds	1
  4100  000047                     _uart1RxHead:
  4101                           	opt callstack 0
  4102  000047                     	ds	1
  4103                           
  4104                           	psect	bssBANK0
  4105  000060                     __pbssBANK0:
  4106                           	opt callstack 0
  4107  000060                     ___fpclassifyf@F463:
  4108                           	opt callstack 0
  4109  000060                     	ds	4
  4110  000064                     calc_ror_data@bcror:
  4111                           	opt callstack 0
  4112  000064                     	ds	4
  4113  000068                     calc_ror_data@bvror:
  4114                           	opt callstack 0
  4115  000068                     	ds	4
  4116  00006C                     calc_model_data@bcror:
  4117                           	opt callstack 0
  4118  00006C                     	ds	4
  4119  000070                     calc_model_data@bvror:
  4120                           	opt callstack 0
  4121  000070                     	ds	4
  4122  000074                     wdtdelay@dcount:
  4123                           	opt callstack 0
  4124  000074                     	ds	4
  4125  000078                     _TMR3_InterruptHandler:
  4126                           	opt callstack 0
  4127  000078                     	ds	3
  4128  00007B                     _TMR5_InterruptHandler:
  4129                           	opt callstack 0
  4130  00007B                     	ds	3
  4131  00007E                     _TMR6_InterruptHandler:
  4132                           	opt callstack 0
  4133  00007E                     	ds	3
  4134  000081                     _ADCC_ADTI_InterruptHandler:
  4135                           	opt callstack 0
  4136  000081                     	ds	3
  4137  000084                     _ADCC_ADI_InterruptHandler:
  4138                           	opt callstack 0
  4139  000084                     	ds	3
  4140  000087                     _UART1_RxInterruptHandler:
  4141                           	opt callstack 0
  4142  000087                     	ds	3
  4143  00008A                     _UART2_TxInterruptHandler:
  4144                           	opt callstack 0
  4145  00008A                     	ds	3
  4146  00008D                     _UART2_RxInterruptHandler:
  4147                           	opt callstack 0
  4148  00008D                     	ds	3
  4149  000090                     _INT1_InterruptHandler:
  4150                           	opt callstack 0
  4151  000090                     	ds	3
  4152  000093                     _INT0_InterruptHandler:
  4153                           	opt callstack 0
  4154  000093                     	ds	3
  4155  000096                     _nout:
  4156                           	opt callstack 0
  4157  000096                     	ds	2
  4158  000098                     TMR3_ISR@CountCallBack:
  4159                           	opt callstack 0
  4160  000098                     	ds	2
  4161  00009A                     _timer3ReloadVal:
  4162                           	opt callstack 0
  4163  00009A                     	ds	2
  4164  00009C                     TMR5_ISR@CountCallBack:
  4165                           	opt callstack 0
  4166  00009C                     	ds	2
  4167  00009E                     _timer5ReloadVal:
  4168                           	opt callstack 0
  4169  00009E                     	ds	2
  4170  0000A0                     esr_check@esr_state:
  4171                           	opt callstack 0
  4172  0000A0                     	ds	1
  4173  0000A1                     dac_spi_control@SB:
  4174                           	opt callstack 0
  4175  0000A1                     	ds	1
  4176  0000A2                     dac_spi_control@SC:
  4177                           	opt callstack 0
  4178  0000A2                     	ds	1
  4179  0000A3                     dac_spi_control@S2:
  4180                           	opt callstack 0
  4181  0000A3                     	ds	1
  4182  0000A4                     dac_spi_control@S1:
  4183                           	opt callstack 0
  4184  0000A4                     	ds	1
  4185  0000A5                     _mode_sw:
  4186                           	opt callstack 0
  4187  0000A5                     	ds	1
  4188  0000A6                     _uart2RxCount:
  4189                           	opt callstack 0
  4190  0000A6                     	ds	1
  4191  0000A7                     _uart2RxTail:
  4192                           	opt callstack 0
  4193  0000A7                     	ds	1
  4194  0000A8                     _uart2TxHead:
  4195                           	opt callstack 0
  4196  0000A8                     	ds	1
  4197  0000A9                     _uart1RxCount:
  4198                           	opt callstack 0
  4199  0000A9                     	ds	1
  4200  0000AA                     _uart1RxTail:
  4201                           	opt callstack 0
  4202  0000AA                     	ds	1
  4203  0000AB                     _crcObj:
  4204                           	opt callstack 0
  4205  0000AB                     	ds	3
  4206                           
  4207                           	psect	dataBANK0
  4208  0000AE                     __pdataBANK0:
  4209                           	opt callstack 0
  4210  0000AE                     _R:
  4211                           	opt callstack 0
  4212  0000AE                     	ds	57
  4213                           
  4214                           	psect	bssBANK1
  4215  0001D0                     __pbssBANK1:
  4216                           	opt callstack 0
  4217  0001D0                     _spi_link:
  4218                           	opt callstack 0
  4219  0001D0                     	ds	12
  4220  0001DC                     _uart1RxBuffer:
  4221                           	opt callstack 0
  4222  0001DC                     	ds	8
  4223  0001E4                     spinners@s:
  4224                           	opt callstack 0
  4225  0001E4                     	ds	6
  4226  0001EA                     floorf@F524:
  4227                           	opt callstack 0
  4228  0001EA                     	ds	4
  4229  0001EE                     fabsf@F463:
  4230                           	opt callstack 0
  4231  0001EE                     	ds	4
  4232  0001F2                     _utctime:
  4233                           	opt callstack 0
  4234  0001F2                     	ds	4
  4235  0001F6                     _P:
  4236                           	opt callstack 0
  4237  0001F6                     	ds	4
  4238                           
  4239                           	psect	dataBANK1
  4240  000100                     __pdataBANK1:
  4241                           	opt callstack 0
  4242  000100                     stoa@F1166:
  4243                           	opt callstack 0
  4244  000100                     	ds	7
  4245  000107                     _V:
  4246                           	opt callstack 0
  4247  000107                     	ds	192
  4248  0001C7                     _H:
  4249                           	opt callstack 0
  4250  0001C7                     	ds	9
  4251                           
  4252                           	psect	bssBANK2
  4253  000200                     __pbssBANK2:
  4254                           	opt callstack 0
  4255  000200                     _S:
  4256                           	opt callstack 0
  4257  000200                     	ds	41
  4258  000229                     _tickCount:
  4259                           	opt callstack 0
  4260  000229                     	ds	26
  4261  000243                     _dbuf:
  4262                           	opt callstack 0
  4263  000243                     	ds	80
  4264  000293                     _r_cal:
  4265                           	opt callstack 0
  4266  000293                     	ds	57
  4267  0002CC                     _seed:
  4268                           	opt callstack 0
  4269  0002CC                     	ds	8
  4270                           
  4271                           	psect	bssBANK3
  4272  000300                     __pbssBANK3:
  4273                           	opt callstack 0
  4274  000300                     lp_filter@smooth:
  4275                           	opt callstack 0
  4276  000300                     	ds	84
  4277  000354                     _uart2TxBuffer:
  4278                           	opt callstack 0
  4279  000354                     	ds	64
  4280  000394                     _ring_buf1:
  4281                           	opt callstack 0
  4282  000394                     	ds	67
  4283                           
  4284                           	psect	bssBANK4
  4285  000400                     __pbssBANK4:
  4286                           	opt callstack 0
  4287  000400                     _ring_buf2:
  4288                           	opt callstack 0
  4289  000400                     	ds	67
  4290                           
  4291                           	psect	bssBANK5
  4292  000500                     __pbssBANK5:
  4293                           	opt callstack 0
  4294  000500                     _uart2RxBuffer:
  4295                           	opt callstack 0
  4296  000500                     	ds	255
  4297                           
  4298                           	psect	bssBIGRAM
  4299  00092A                     __pbssBIGRAM:
  4300                           	opt callstack 0
  4301  00092A                     _D:
  4302                           	opt callstack 0
  4303  00092A                     	ds	482
  4304                           
  4305                           	psect	dataBIGRAM
  4306  0005FF                     __pdataBIGRAM:
  4307                           	opt callstack 0
  4308  0005FF                     _port_data:
  4309                           	opt callstack 0
  4310  0005FF                     	ds	512
  4311  0007FF                     _C:
  4312                           	opt callstack 0
  4313  0007FF                     	ds	299
  4314                           
  4315                           	psect	cstackBANK0
  4316  0000E7                     __pcstackBANK0:
  4317                           	opt callstack 0
  4318  0000E7                     ??_TMR3_ISR:
  4319                           
  4320                           ; 1 bytes @ 0x0
  4321  0000E7                     	ds	25
  4322                           
  4323                           	psect	cstackCOMRAM
  4324  000021                     __pcstackCOMRAM:
  4325                           	opt callstack 0
  4326  000021                     ??_ADCC_ThresholdISR:
  4327  000021                     
  4328                           ; 1 bytes @ 0x0
  4329  000021                     	ds	5
  4330  000026                     ??_TMR6_ISR:
  4331                           
  4332                           ; 1 bytes @ 0x5
  4333  000026                     	ds	1
  4334  000027                     ??_INT1_ISR:
  4335  000027                     
  4336                           ; 1 bytes @ 0x6
  4337  000027                     	ds	4
  4338  00002B                     ??_TMR5_ISR:
  4339                           
  4340                           ; 1 bytes @ 0xA
  4341  00002B                     	ds	15
  4342                           
  4343 ;;
  4344 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4345 ;;
  4346 ;; *************** function _main *****************
  4347 ;; Defined at:
  4348 ;;		line 189 in file "main.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  esr_temp        4  [STACK] float 
  4353 ;;  i_esr           2  [STACK] unsigned short 
  4354 ;;  shape           1  [STACK] unsigned char 
  4355 ;;  inp_index       1  [STACK] unsigned char 
  4356 ;;  k               1  [STACK] unsigned char 
  4357 ;;  j               1  [STACK] unsigned char 
  4358 ;;  i               1  [STACK] unsigned char 
  4359 ;;  mode            1  [STACK] enum E17028
  4360 ;;  i_ror           1  [STACK] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1  [STACK] void 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels required when called:   29
  4376 ;; This function calls:
  4377 ;;		_SYSTEM_Initialize
  4378 ;;		_StartTimer
  4379 ;;		_TimerDone
  4380 ;;		_WaitMs
  4381 ;;		___fladd
  4382 ;;		___flge
  4383 ;;		___fltol
  4384 ;;		_calc_model_data
  4385 ;;		_calc_ror_data
  4386 ;;		_check_adc_scan
  4387 ;;		_check_enter_button
  4388 ;;		_check_help
  4389 ;;		_clear_adc_scan
  4390 ;;		_clear_hid_pflags
  4391 ;;		_conv_raw_result
  4392 ;;		_convert_adc_data
  4393 ;;		_current_sensor_cal
  4394 ;;		_eaDogM_WriteCommand
  4395 ;;		_esr_check
  4396 ;;		_fabsf
  4397 ;;		_get_raw_result
  4398 ;;		_get_switch
  4399 ;;		_get_vterm_ptr
  4400 ;;		_hid_display
  4401 ;;		_init_bsoc
  4402 ;;		_init_display
  4403 ;;		_init_port_dma
  4404 ;;		_lp_filter
  4405 ;;		_mode_lamp_dim
  4406 ;;		_read_cal_data
  4407 ;;		_set_dac
  4408 ;;		_set_dac_a
  4409 ;;		_set_dac_b
  4410 ;;		_set_display_info
  4411 ;;		_set_load_relay_one
  4412 ;;		_set_load_relay_two
  4413 ;;		_set_vterm
  4414 ;;		_spinners
  4415 ;;		_sprintf
  4416 ;;		_srand
  4417 ;;		_start_adc_scan
  4418 ;;		_start_switch_handler
  4419 ;;		_static_soc
  4420 ;;		_update_cal_data
  4421 ;;		_update_lcd
  4422 ;;		_wait_lcd_done
  4423 ;; This function is called by:
  4424 ;;		Startup code after reset
  4425 ;; This function uses a reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text0
  4429  010000                     __ptext0:
  4430                           	opt callstack 0
  4431  010000                     _main:
  4432                           	opt callstack 0
  4433                           
  4434                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4435  010000  0E11               	movlw	17
  4436  010002  26E1               	addwf	fsr1l,f,c
  4437  010004  0E00               	movlw	0
  4438  010006  22E2               	addwfc	fsr1h,f,c
  4439                           
  4440                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4441                           ;stkvar	_inp_index @ sp[(-17)+11]
  4442                           
  4443                           ;incstack = 0
  4444  010008  0EFA               	movlw	-6
  4445  01000A  6AE3               	clrf	plusw1,c
  4446                           
  4447                           ;stkvar	_i @ sp[(-17)+14]
  4448  01000C  0EFD               	movlw	-3
  4449  01000E  6AE3               	clrf	plusw1,c
  4450                           
  4451                           ;stkvar	_j @ sp[(-17)+13]
  4452  010010  0EFC               	movlw	-4
  4453  010012  6AE3               	clrf	plusw1,c
  4454  010014  2AE3               	incf	plusw1,f,c
  4455                           
  4456                           ;stkvar	_k @ sp[(-17)+12]
  4457  010016  0EFB               	movlw	-5
  4458  010018  6AE3               	clrf	plusw1,c
  4459  01001A  82E3               	bsf	plusw1,1,c
  4460                           
  4461                           ;main.c: 195:  SYSTEM_Initialize();
  4462  01001C  EC8A  F0E2         	call	_SYSTEM_Initialize	;wreg free
  4463                           
  4464                           ; BSR set to: 60
  4465                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4466  010020  8ED2               	bsf	210,7,c	;volatile
  4467                           
  4468                           ; BSR set to: 60
  4469                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4470  010022  8CD2               	bsf	210,6,c	;volatile
  4471                           
  4472                           ; BSR set to: 60
  4473                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4474  010024  0101               	movlb	1	; () banked
  4475  010026  6B07               	clrf	_V& (0+255),b	;volatile
  4476                           
  4477                           ; BSR set to: 1
  4478                           ;main.c: 208:  WaitMs(300);
  4479  010028  0E2C               	movlw	44
  4480  01002A  6EE6               	movwf	postinc1,c
  4481  01002C  0E01               	movlw	1
  4482  01002E  6EE6               	movwf	postinc1,c
  4483  010030  EC47  F0E5         	call	_WaitMs	;wreg free
  4484                           
  4485                           ;main.c: 209:  if (PORTBbits.RB0) {
  4486  010034  A0CB               	btfss	203,0,c	;volatile
  4487  010036  D004               	goto	l14388
  4488                           
  4489                           ;main.c: 210:   mode = UI_STATE_HOST;
  4490                           ;stkvar	_mode @ sp[(-17)+15]
  4491  010038  0EFE               	movlw	-2
  4492  01003A  6AE3               	clrf	plusw1,c
  4493  01003C  2AE3               	incf	plusw1,f,c
  4494                           
  4495                           ;main.c: 211:  } else {
  4496  01003E  D004               	goto	l14390
  4497  010040                     l14388:
  4498                           
  4499                           ;main.c: 212:   mode = UI_STATE_LOG;
  4500                           ;stkvar	_mode @ sp[(-17)+15]
  4501  010040  0EFE               	movlw	-2
  4502  010042  6AE3               	clrf	plusw1,c
  4503  010044  80E3               	bsf	plusw1,0,c
  4504  010046  82E3               	bsf	plusw1,1,c	;indir
  4505  010048                     l14390:
  4506                           
  4507                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4508                           ;stkvar	_mode @ sp[(-17)+15]
  4509  010048  0EFE               	movlw	-2
  4510  01004A  04E3               	decf	plusw1,w,c
  4511  01004C  A4D8               	btfss	status,2,c
  4512  01004E  D007               	goto	l1435
  4513                           
  4514                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4515  010050  80BD               	bsf	189,0,c	;volatile
  4516                           
  4517                           ;main.c: 217:   V.mode_pwm = 70;
  4518  010052  0E00               	movlw	0
  4519  010054  0101               	movlb	1	; () banked
  4520  010056  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4521  010058  0E46               	movlw	70
  4522  01005A  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4523                           
  4524                           ;main.c: 218:  } else {
  4525  01005C  D004               	goto	l14394
  4526  01005E                     l1435:
  4527  01005E  90BD               	bcf	189,0,c	;volatile
  4528                           
  4529                           ;main.c: 220:   V.mode_pwm = 0;
  4530  010060  0101               	movlb	1	; () banked
  4531  010062  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4532  010064  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4533  010066                     l14394:
  4534                           
  4535                           ; BSR set to: 1
  4536                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4537  010066  0060  F673  FFE6   	movff	_V+149,postinc1
  4538  01006C  0060  F677  FFE6   	movff	_V+150,postinc1
  4539  010072  EC03  F0E9         	call	_mode_lamp_dim	;wreg free
  4540  010076  D39B               	goto	l14542
  4541  010078                     l14396:
  4542                           
  4543                           ; BSR set to: 1
  4544                           ;main.c: 230:    init_port_dma();
  4545  010078  ECE3  F0E5         	call	_init_port_dma	;wreg free
  4546                           
  4547                           ; BSR set to: 59
  4548                           ;main.c: 232:    init_display();
  4549  01007C  ECBC  F0D6         	call	_init_display	;wreg free
  4550                           
  4551                           ; BSR set to: 61
  4552                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4553  010080  0E0C               	movlw	12
  4554  010082  6EE6               	movwf	postinc1,c
  4555  010084  EC8B  F0E9         	call	_eaDogM_WriteCommand	;wreg free
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;main.c: 234:    set_dac();
  4559  010088  ECF7  F0D9         	call	_set_dac	;wreg free
  4560                           
  4561                           ;main.c: 238:    set_load_relay_one(1);
  4562  01008C  0E01               	movlw	1
  4563  01008E  6EE6               	movwf	postinc1,c
  4564  010090  EC6B  F0E9         	call	_set_load_relay_one	;wreg free
  4565                           
  4566                           ;main.c: 239:    set_load_relay_two(1);
  4567  010094  0E01               	movlw	1
  4568  010096  6EE6               	movwf	postinc1,c
  4569  010098  EC63  F0E9         	call	_set_load_relay_two	;wreg free
  4570                           
  4571                           ;main.c: 241:    V.ui_state = mode;
  4572                           ;stkvar	_mode @ sp[(-17)+15]
  4573  01009C  0EFE               	movlw	-2
  4574  01009E  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4575                           
  4576                           ;main.c: 242:    srand(1957);
  4577  0100A4  0EA5               	movlw	165
  4578  0100A6  6EE6               	movwf	postinc1,c
  4579  0100A8  0E07               	movlw	7
  4580  0100AA  6EE6               	movwf	postinc1,c
  4581  0100AC  EC62  F0E5         	call	_srand	;wreg free
  4582                           
  4583                           ; BSR set to: 2
  4584                           ;main.c: 243:    set_vterm(0);
  4585  0100B0  0E00               	movlw	0
  4586  0100B2  6EE6               	movwf	postinc1,c
  4587  0100B4  ECBB  F0E8         	call	_set_vterm	;wreg free
  4588                           
  4589                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4590  0100B8  0EA1               	movlw	low STR_1
  4591  0100BA  6EE6               	movwf	postinc1,c
  4592  0100BC  0EFE               	movlw	high STR_1
  4593  0100BE  6EE6               	movwf	postinc1,c
  4594  0100C0  0E00               	movlw	0
  4595  0100C2  6EE6               	movwf	postinc1,c
  4596  0100C4  0E00               	movlw	0
  4597  0100C6  6EE6               	movwf	postinc1,c
  4598  0100C8  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4599  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  4600  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4601  0100D8  0E04               	movlw	4
  4602  0100DA  6EE6               	movwf	postinc1,c
  4603  0100DC  EC46  F0D5         	call	_sprintf	;wreg free
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.19");
  4607  0100E0  0ED2               	movlw	low STR_3
  4608  0100E2  6EE6               	movwf	postinc1,c
  4609  0100E4  0EFF               	movlw	high STR_3
  4610  0100E6  6EE6               	movwf	postinc1,c
  4611  0100E8  0E62               	movlw	low STR_2
  4612  0100EA  6EE6               	movwf	postinc1,c
  4613  0100EC  0EFE               	movlw	high STR_2
  4614  0100EE  6EE6               	movwf	postinc1,c
  4615  0100F0  0E00               	movlw	0
  4616  0100F2  6EE6               	movwf	postinc1,c
  4617  0100F4  0E01               	movlw	1
  4618  0100F6  6EE6               	movwf	postinc1,c
  4619  0100F8  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4620  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  4621  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4622  010108  0E06               	movlw	6
  4623  01010A  6EE6               	movwf	postinc1,c
  4624  01010C  EC46  F0D5         	call	_sprintf	;wreg free
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4628  010110  0E0E               	movlw	low STR_4
  4629  010112  6EE6               	movwf	postinc1,c
  4630  010114  0EFE               	movlw	high STR_4
  4631  010116  6EE6               	movwf	postinc1,c
  4632  010118  0E00               	movlw	0
  4633  01011A  6EE6               	movwf	postinc1,c
  4634  01011C  0E02               	movlw	2
  4635  01011E  6EE6               	movwf	postinc1,c
  4636  010120  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4637  010124  0060  F007  FFE6   	movff	btemp,postinc1
  4638  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4639  010130  0E04               	movlw	4
  4640  010132  6EE6               	movwf	postinc1,c
  4641  010134  EC46  F0D5         	call	_sprintf	;wreg free
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4645  010138  0E45               	movlw	low (STR_14+1)
  4646  01013A  6EE6               	movwf	postinc1,c
  4647  01013C  0EFC               	movlw	high (STR_14+1)
  4648  01013E  6EE6               	movwf	postinc1,c
  4649  010140  0E02               	movlw	2
  4650  010142  6EE6               	movwf	postinc1,c
  4651  010144  0E00               	movlw	0
  4652  010146  6EE6               	movwf	postinc1,c
  4653  010148  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4654  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  4655  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4656  010158  0E04               	movlw	4
  4657  01015A  6EE6               	movwf	postinc1,c
  4658  01015C  EC46  F0D5         	call	_sprintf	;wreg free
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4662  010160  0E45               	movlw	low (STR_14+1)
  4663  010162  6EE6               	movwf	postinc1,c
  4664  010164  0EFC               	movlw	high (STR_14+1)
  4665  010166  6EE6               	movwf	postinc1,c
  4666  010168  0E02               	movlw	2
  4667  01016A  6EE6               	movwf	postinc1,c
  4668  01016C  0E01               	movlw	1
  4669  01016E  6EE6               	movwf	postinc1,c
  4670  010170  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4671  010174  0060  F007  FFE6   	movff	btemp,postinc1
  4672  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4673  010180  0E04               	movlw	4
  4674  010182  6EE6               	movwf	postinc1,c
  4675  010184  EC46  F0D5         	call	_sprintf	;wreg free
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4679  010188  0E45               	movlw	low (STR_14+1)
  4680  01018A  6EE6               	movwf	postinc1,c
  4681  01018C  0EFC               	movlw	high (STR_14+1)
  4682  01018E  6EE6               	movwf	postinc1,c
  4683  010190  0E02               	movlw	2
  4684  010192  6EE6               	movwf	postinc1,c
  4685  010194  0E02               	movlw	2
  4686  010196  6EE6               	movwf	postinc1,c
  4687  010198  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4688  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  4689  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4690  0101A8  0E04               	movlw	4
  4691  0101AA  6EE6               	movwf	postinc1,c
  4692  0101AC  EC46  F0D5         	call	_sprintf	;wreg free
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;main.c: 250:    update_lcd(0);
  4696  0101B0  0E00               	movlw	0
  4697  0101B2  6EE6               	movwf	postinc1,c
  4698  0101B4  ECBE  F0D4         	call	_update_lcd	;wreg free
  4699                           
  4700                           ;main.c: 251:    WaitMs(1000);
  4701  0101B8  0EE8               	movlw	232
  4702  0101BA  6EE6               	movwf	postinc1,c
  4703  0101BC  0E03               	movlw	3
  4704  0101BE  6EE6               	movwf	postinc1,c
  4705  0101C0  EC47  F0E5         	call	_WaitMs	;wreg free
  4706                           
  4707                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4708  0101C4  0EFA               	movlw	250
  4709  0101C6  6EE6               	movwf	postinc1,c
  4710  0101C8  0E00               	movlw	0
  4711  0101CA  6EE6               	movwf	postinc1,c
  4712  0101CC  0E0A               	movlw	10
  4713  0101CE  6EE6               	movwf	postinc1,c
  4714  0101D0  EC56  F0E4         	call	_StartTimer	;wreg free
  4715                           
  4716                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4717  0101D4  0EC8               	movlw	200
  4718  0101D6  6EE6               	movwf	postinc1,c
  4719  0101D8  0E00               	movlw	0
  4720  0101DA  6EE6               	movwf	postinc1,c
  4721  0101DC  0E01               	movlw	1
  4722  0101DE  6EE6               	movwf	postinc1,c
  4723  0101E0  EC56  F0E4         	call	_StartTimer	;wreg free
  4724                           
  4725                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4726  0101E4  0EB8               	movlw	184
  4727  0101E6  6EE6               	movwf	postinc1,c
  4728  0101E8  0E0B               	movlw	11
  4729  0101EA  6EE6               	movwf	postinc1,c
  4730  0101EC  0E07               	movlw	7
  4731  0101EE  6EE6               	movwf	postinc1,c
  4732  0101F0  EC56  F0E4         	call	_StartTimer	;wreg free
  4733                           
  4734                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4735  0101F4  0EDC               	movlw	220
  4736  0101F6  6EE6               	movwf	postinc1,c
  4737  0101F8  0E05               	movlw	5
  4738  0101FA  6EE6               	movwf	postinc1,c
  4739  0101FC  0E0B               	movlw	11
  4740  0101FE  6EE6               	movwf	postinc1,c
  4741  010200  EC56  F0E4         	call	_StartTimer	;wreg free
  4742                           
  4743                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4744  010204  0EB8               	movlw	184
  4745  010206  6EE6               	movwf	postinc1,c
  4746  010208  0E0B               	movlw	11
  4747  01020A  6EE6               	movwf	postinc1,c
  4748  01020C  0E09               	movlw	9
  4749  01020E  6EE6               	movwf	postinc1,c
  4750  010210  EC56  F0E4         	call	_StartTimer	;wreg free
  4751                           
  4752                           ;main.c: 258:    start_adc_scan();
  4753  010214  ECED  F0E0         	call	_start_adc_scan	;wreg free
  4754                           
  4755                           ;main.c: 259:    start_switch_handler();
  4756  010218  EC7D  F0E8         	call	_start_switch_handler	;wreg free
  4757                           
  4758                           ; BSR set to: 57
  4759                           ;main.c: 260:    WaitMs(1000);
  4760  01021C  0EE8               	movlw	232
  4761  01021E  6EE6               	movwf	postinc1,c
  4762  010220  0E03               	movlw	3
  4763  010222  6EE6               	movwf	postinc1,c
  4764  010224  EC47  F0E5         	call	_WaitMs	;wreg free
  4765                           
  4766                           ;main.c: 265:    if (read_cal_data()) {
  4767  010228  EC2E  F0C7         	call	_read_cal_data	;wreg free
  4768  01022C  5001               	movf	btemp^0,w,c
  4769  01022E  B4D8               	btfsc	status,2,c
  4770  010230  D017               	goto	l14452
  4771                           
  4772                           ;main.c: 266:     update_cal_data();
  4773  010232  EC1B  F0E9         	call	_update_cal_data	;wreg free
  4774                           
  4775                           ;main.c: 267:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  4776  010236  0EF5               	movlw	low STR_8
  4777  010238  6EE6               	movwf	postinc1,c
  4778  01023A  0EFE               	movlw	high STR_8
  4779  01023C  6EE6               	movwf	postinc1,c
  4780  01023E  0E00               	movlw	0
  4781  010240  6EE6               	movwf	postinc1,c
  4782  010242  0E02               	movlw	2
  4783  010244  6EE6               	movwf	postinc1,c
  4784  010246  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4785  01024A  0060  F007  FFE6   	movff	btemp,postinc1
  4786  010250  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4787  010256  0E04               	movlw	4
  4788  010258  6EE6               	movwf	postinc1,c
  4789  01025A  EC46  F0D5         	call	_sprintf	;wreg free
  4790                           
  4791                           ;main.c: 268:    } else {
  4792  01025E  D014               	goto	l1441
  4793  010260                     l14452:
  4794                           
  4795                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  4796  010260  0E34               	movlw	low STR_9
  4797  010262  6EE6               	movwf	postinc1,c
  4798  010264  0EFF               	movlw	high STR_9
  4799  010266  6EE6               	movwf	postinc1,c
  4800  010268  0E00               	movlw	0
  4801  01026A  6EE6               	movwf	postinc1,c
  4802  01026C  0E02               	movlw	2
  4803  01026E  6EE6               	movwf	postinc1,c
  4804  010270  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4805  010274  0060  F007  FFE6   	movff	btemp,postinc1
  4806  01027A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4807  010280  0E04               	movlw	4
  4808  010282  6EE6               	movwf	postinc1,c
  4809  010284  EC46  F0D5         	call	_sprintf	;wreg free
  4810  010288                     l1441:
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;main.c: 271:    update_lcd(0);
  4814  010288  0E00               	movlw	0
  4815  01028A  6EE6               	movwf	postinc1,c
  4816  01028C  ECBE  F0D4         	call	_update_lcd	;wreg free
  4817                           
  4818                           ;main.c: 272:    WaitMs(2000);
  4819  010290  0ED0               	movlw	208
  4820  010292  6EE6               	movwf	postinc1,c
  4821  010294  0E07               	movlw	7
  4822  010296  6EE6               	movwf	postinc1,c
  4823  010298  EC47  F0E5         	call	_WaitMs	;wreg free
  4824                           
  4825                           ;main.c: 274:    i_ror = 1;
  4826                           ;stkvar	_i_ror @ sp[(-17)+16]
  4827  01029C  0EFF               	movlw	-1
  4828  01029E  6AE3               	clrf	plusw1,c
  4829  0102A0  2AE3               	incf	plusw1,f,c
  4830  0102A2                     l14458:
  4831                           
  4832                           ;main.c: 276:     calc_ror_data();
  4833  0102A2  EC8C  F0CA         	call	_calc_ror_data	;wreg free
  4834                           
  4835                           ;main.c: 277:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4836  0102A6  0E00               	movlw	0
  4837  0102A8  6EE6               	movwf	postinc1,c
  4838  0102AA  0E04               	movlw	4
  4839  0102AC  6EE6               	movwf	postinc1,c
  4840  0102AE  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  4841  0102B2  0060  F007  FFE6   	movff	btemp,postinc1
  4842  0102B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4843  0102BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4844  0102C4  0060  F013  FFE6   	movff	btemp+3,postinc1
  4845  0102CA  0EF9               	movlw	low STR_10
  4846  0102CC  6EE6               	movwf	postinc1,c
  4847  0102CE  0EFD               	movlw	high STR_10
  4848  0102D0  6EE6               	movwf	postinc1,c
  4849  0102D2  0E00               	movlw	0
  4850  0102D4  6EE6               	movwf	postinc1,c
  4851  0102D6  0E01               	movlw	1
  4852  0102D8  6EE6               	movwf	postinc1,c
  4853  0102DA  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4854  0102DE  0060  F007  FFE6   	movff	btemp,postinc1
  4855  0102E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4856  0102EA  0E08               	movlw	8
  4857  0102EC  6EE6               	movwf	postinc1,c
  4858  0102EE  EC46  F0D5         	call	_sprintf	;wreg free
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;main.c: 278:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4862  0102F2  EE22  F06B         	lfsr	2,_C+108	;volatile
  4863  0102F6  006F FF7B FFE6     	movff	postinc2,postinc1
  4864  0102FC  006F FF7B FFE6     	movff	postinc2,postinc1
  4865  010302  006F FF7B FFE6     	movff	postinc2,postinc1
  4866  010308  006F FF7B FFE6     	movff	postinc2,postinc1
  4867                           
  4868                           ;stkvar	_i_ror @ sp[(-21)+16]
  4869  01030E  0EFB               	movlw	-5
  4870  010310  50E3               	movf	plusw1,w,c
  4871  010312  6EE6               	movwf	postinc1,c
  4872  010314  0E00               	movlw	0
  4873  010316  6EE6               	movwf	postinc1,c
  4874  010318  0E00               	movlw	0
  4875  01031A  6EE6               	movwf	postinc1,c
  4876  01031C  0E05               	movlw	5
  4877  01031E  6EE6               	movwf	postinc1,c
  4878  010320  ECCB  F0D5         	call	_spinners	;wreg free
  4879  010324  5001               	movf	btemp^0,w,c
  4880  010326  6EE6               	movwf	postinc1,c
  4881  010328  0E00               	movlw	0
  4882  01032A  6EE6               	movwf	postinc1,c
  4883  01032C  0E9F               	movlw	low STR_11
  4884  01032E  6EE6               	movwf	postinc1,c
  4885  010330  0EFB               	movlw	high STR_11
  4886  010332  6EE6               	movwf	postinc1,c
  4887  010334  0E00               	movlw	0
  4888  010336  6EE6               	movwf	postinc1,c
  4889  010338  0E02               	movlw	2
  4890  01033A  6EE6               	movwf	postinc1,c
  4891  01033C  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4892  010340  0060  F007  FFE6   	movff	btemp,postinc1
  4893  010346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4894  01034C  0E0C               	movlw	12
  4895  01034E  6EE6               	movwf	postinc1,c
  4896  010350  EC46  F0D5         	call	_sprintf	;wreg free
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;main.c: 279:     update_lcd(0);
  4900  010354  0E00               	movlw	0
  4901  010356  6EE6               	movwf	postinc1,c
  4902  010358  ECBE  F0D4         	call	_update_lcd	;wreg free
  4903                           
  4904                           ;main.c: 280:     clear_adc_scan();
  4905  01035C  ECE2  F0E9         	call	_clear_adc_scan	;wreg free
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;main.c: 281:     start_adc_scan();
  4909  010360  ECED  F0E0         	call	_start_adc_scan	;wreg free
  4910                           
  4911                           ;main.c: 282:     WaitMs(2000);
  4912  010364  0ED0               	movlw	208
  4913  010366  6EE6               	movwf	postinc1,c
  4914  010368  0E07               	movlw	7
  4915  01036A  6EE6               	movwf	postinc1,c
  4916  01036C  EC47  F0E5         	call	_WaitMs	;wreg free
  4917                           
  4918                           ;main.c: 285:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4919                           ;stkvar	_i_ror @ sp[(-17)+16]
  4920  010370  0EFF               	movlw	-1
  4921  010372  006F FF8C  F00C    	movff	plusw1,btemp+11
  4922  010378  2A0C               	incf	(btemp+11)^0,f,c
  4923  01037A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4924  010380  060C               	decf	(btemp+11)^0,f,c
  4925  010382  0E1E               	movlw	30
  4926  010384  600C               	cpfslt	(btemp+11)^0,c
  4927  010386  D01A               	goto	u13740
  4928  010388  EE22  F06B         	lfsr	2,_C+108	;volatile
  4929  01038C  006F FF7B FFE6     	movff	postinc2,postinc1
  4930  010392  006F FF7B FFE6     	movff	postinc2,postinc1
  4931  010398  006F FF7B FFE6     	movff	postinc2,postinc1
  4932  01039E  006F FF7B FFE6     	movff	postinc2,postinc1
  4933  0103A4  0E42               	movlw	66
  4934  0103A6  6EE6               	movwf	postinc1,c
  4935  0103A8  0E60               	movlw	96
  4936  0103AA  6EE6               	movwf	postinc1,c
  4937  0103AC  0E65               	movlw	101
  4938  0103AE  6EE6               	movwf	postinc1,c
  4939  0103B0  0E3C               	movlw	60
  4940  0103B2  6EE6               	movwf	postinc1,c
  4941  0103B4  EC81  F0CD         	call	___flge	;wreg free
  4942  0103B8  A001               	btfss	btemp& (0+255),0,c
  4943  0103BA  D773               	goto	l14458
  4944  0103BC                     u13740:
  4945                           
  4946                           ;main.c: 287:    static_soc();
  4947  0103BC  ECB1  F0E1         	call	_static_soc	;wreg free
  4948                           
  4949                           ;main.c: 288:    init_bsoc();
  4950  0103C0  ECC2  F0C0         	call	_init_bsoc	;wreg free
  4951                           
  4952                           ;main.c: 289:    set_load_relay_one(0);
  4953  0103C4  0E00               	movlw	0
  4954  0103C6  6EE6               	movwf	postinc1,c
  4955  0103C8  EC6B  F0E9         	call	_set_load_relay_one	;wreg free
  4956                           
  4957                           ;main.c: 290:    set_load_relay_two(0);
  4958  0103CC  0E00               	movlw	0
  4959  0103CE  6EE6               	movwf	postinc1,c
  4960  0103D0  EC63  F0E9         	call	_set_load_relay_two	;wreg free
  4961                           
  4962                           ;main.c: 291:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4963  0103D4  EE22  F0B5         	lfsr	2,_C+182	;volatile
  4964  0103D8  006F FF78  F00B    	movff	postinc2,btemp+10
  4965  0103DE  006F FF74  F00C    	movff	postdec2,btemp+11
  4966  0103E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4967  0103EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4968  0103F0  0E70               	movlw	low STR_12
  4969  0103F2  6EE6               	movwf	postinc1,c
  4970  0103F4  0EFC               	movlw	high STR_12
  4971  0103F6  6EE6               	movwf	postinc1,c
  4972  0103F8  0E00               	movlw	0
  4973  0103FA  6EE6               	movwf	postinc1,c
  4974  0103FC  0E00               	movlw	0
  4975  0103FE  6EE6               	movwf	postinc1,c
  4976  010400  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4977  010404  0060  F007  FFE6   	movff	btemp,postinc1
  4978  01040A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4979  010410  0E06               	movlw	6
  4980  010412  6EE6               	movwf	postinc1,c
  4981  010414  EC46  F0D5         	call	_sprintf	;wreg free
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;main.c: 292:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4985  010418  EE22  F08F         	lfsr	2,_C+144	;volatile
  4986  01041C  006F FF7B FFE6     	movff	postinc2,postinc1
  4987  010422  006F FF7B FFE6     	movff	postinc2,postinc1
  4988  010428  006F FF7B FFE6     	movff	postinc2,postinc1
  4989  01042E  006F FF7B FFE6     	movff	postinc2,postinc1
  4990  010434  0E4C               	movlw	low STR_13
  4991  010436  6EE6               	movwf	postinc1,c
  4992  010438  0EFD               	movlw	high STR_13
  4993  01043A  6EE6               	movwf	postinc1,c
  4994  01043C  0E00               	movlw	0
  4995  01043E  6EE6               	movwf	postinc1,c
  4996  010440  0E01               	movlw	1
  4997  010442  6EE6               	movwf	postinc1,c
  4998  010444  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  4999  010448  0060  F007  FFE6   	movff	btemp,postinc1
  5000  01044E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5001  010454  0E08               	movlw	8
  5002  010456  6EE6               	movwf	postinc1,c
  5003  010458  EC46  F0D5         	call	_sprintf	;wreg free
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;main.c: 293:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5007  01045C  0E44               	movlw	low STR_14
  5008  01045E  6EE6               	movwf	postinc1,c
  5009  010460  0EFC               	movlw	high STR_14
  5010  010462  6EE6               	movwf	postinc1,c
  5011  010464  0E00               	movlw	0
  5012  010466  6EE6               	movwf	postinc1,c
  5013  010468  0E02               	movlw	2
  5014  01046A  6EE6               	movwf	postinc1,c
  5015  01046C  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5016  010470  0060  F007  FFE6   	movff	btemp,postinc1
  5017  010476  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5018  01047C  0E04               	movlw	4
  5019  01047E  6EE6               	movwf	postinc1,c
  5020  010480  EC46  F0D5         	call	_sprintf	;wreg free
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;main.c: 294:    update_lcd(0);
  5024  010484  0E00               	movlw	0
  5025  010486  6EE6               	movwf	postinc1,c
  5026  010488  ECBE  F0D4         	call	_update_lcd	;wreg free
  5027                           
  5028                           ;main.c: 295:    WaitMs(2000);
  5029  01048C  0ED0               	movlw	208
  5030  01048E  6EE6               	movwf	postinc1,c
  5031  010490  0E07               	movlw	7
  5032  010492  6EE6               	movwf	postinc1,c
  5033  010494  EC47  F0E5         	call	_WaitMs	;wreg free
  5034                           
  5035                           ;main.c: 296:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5036  010498  0E23               	movlw	low STR_15
  5037  01049A  6EE6               	movwf	postinc1,c
  5038  01049C  0EFE               	movlw	high STR_15
  5039  01049E  6EE6               	movwf	postinc1,c
  5040  0104A0  0E00               	movlw	0
  5041  0104A2  6EE6               	movwf	postinc1,c
  5042  0104A4  0E00               	movlw	0
  5043  0104A6  6EE6               	movwf	postinc1,c
  5044  0104A8  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5045  0104AC  0060  F007  FFE6   	movff	btemp,postinc1
  5046  0104B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5047  0104B8  0E04               	movlw	4
  5048  0104BA  6EE6               	movwf	postinc1,c
  5049  0104BC  EC46  F0D5         	call	_sprintf	;wreg free
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;main.c: 297:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5053  0104C0  0E38               	movlw	low STR_16
  5054  0104C2  6EE6               	movwf	postinc1,c
  5055  0104C4  0EFE               	movlw	high STR_16
  5056  0104C6  6EE6               	movwf	postinc1,c
  5057  0104C8  0E00               	movlw	0
  5058  0104CA  6EE6               	movwf	postinc1,c
  5059  0104CC  0E01               	movlw	1
  5060  0104CE  6EE6               	movwf	postinc1,c
  5061  0104D0  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5062  0104D4  0060  F007  FFE6   	movff	btemp,postinc1
  5063  0104DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5064  0104E0  0E04               	movlw	4
  5065  0104E2  6EE6               	movwf	postinc1,c
  5066  0104E4  EC46  F0D5         	call	_sprintf	;wreg free
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;main.c: 298:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5070  0104E8  0E0A               	movlw	low STR_17
  5071  0104EA  6EE6               	movwf	postinc1,c
  5072  0104EC  0EFF               	movlw	high STR_17
  5073  0104EE  6EE6               	movwf	postinc1,c
  5074  0104F0  0E00               	movlw	0
  5075  0104F2  6EE6               	movwf	postinc1,c
  5076  0104F4  0E02               	movlw	2
  5077  0104F6  6EE6               	movwf	postinc1,c
  5078  0104F8  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5079  0104FC  0060  F007  FFE6   	movff	btemp,postinc1
  5080  010502  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5081  010508  0E04               	movlw	4
  5082  01050A  6EE6               	movwf	postinc1,c
  5083  01050C  EC46  F0D5         	call	_sprintf	;wreg free
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;main.c: 299:    update_lcd(0);
  5087  010510  0E00               	movlw	0
  5088  010512  6EE6               	movwf	postinc1,c
  5089  010514  ECBE  F0D4         	call	_update_lcd	;wreg free
  5090                           
  5091                           ;main.c: 300:    uint16_t i_esr = 1;
  5092  010518  0E01               	movlw	1
  5093  01051A  6E0B               	movwf	(btemp+10)^0,c
  5094  01051C  0E00               	movlw	0
  5095  01051E  6E0C               	movwf	(btemp+11)^0,c
  5096                           
  5097                           ;stkvar	_i_esr @ sp[(-17)+8]
  5098  010520  0EF7               	movlw	-9
  5099  010522  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5100  010528  0EF8               	movlw	-8
  5101  01052A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5102                           
  5103                           ;main.c: 302:    float esr_temp;;main.c: 303:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5104  010530  D06D               	goto	l14518
  5105  010532                     l14506:
  5106                           
  5107                           ;main.c: 304:     WaitMs(110);
  5108  010532  0E6E               	movlw	110
  5109  010534  6EE6               	movwf	postinc1,c
  5110  010536  0E00               	movlw	0
  5111  010538  6EE6               	movwf	postinc1,c
  5112  01053A  EC47  F0E5         	call	_WaitMs	;wreg free
  5113                           
  5114                           ;main.c: 305:     shape = (uint8_t) fabsf(esr_temp);
  5115                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5116  01053E  0EF3               	movlw	-13
  5117  010540  006F FF8F FFE6     	movff	plusw1,postinc1
  5118  010546  006F FF8F FFE6     	movff	plusw1,postinc1
  5119  01054C  006F FF8F FFE6     	movff	plusw1,postinc1
  5120  010552  006F FF8F FFE6     	movff	plusw1,postinc1
  5121  010558  EC52  F0DA         	call	_fabsf	;wreg free
  5122  01055C  0060  F007  FFE6   	movff	btemp,postinc1
  5123  010562  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5124  010568  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5125  01056E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5126  010574  ECC8  F0CC         	call	___fltol	;wreg free
  5127  010578  0060  F004  F00C   	movff	btemp,btemp+11
  5128                           
  5129                           ;stkvar	_shape @ sp[(-17)+10]
  5130  01057E  0EF9               	movlw	-7
  5131  010580  0060  F033  FFE3   	movff	btemp+11,plusw1
  5132                           
  5133                           ;main.c: 306:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5134  010586  0E00               	movlw	0
  5135  010588  6EE6               	movwf	postinc1,c
  5136                           
  5137                           ;stkvar	_shape @ sp[(-18)+10]
  5138  01058A  0EF8               	movlw	-8
  5139  01058C  50E3               	movf	plusw1,w,c
  5140  01058E  6EE6               	movwf	postinc1,c
  5141  010590  ECCB  F0D5         	call	_spinners	;wreg free
  5142  010594  5001               	movf	btemp^0,w,c
  5143  010596  6EE6               	movwf	postinc1,c
  5144  010598  0E00               	movlw	0
  5145  01059A  6EE6               	movwf	postinc1,c
  5146  01059C  0E00               	movlw	0
  5147  01059E  6EE6               	movwf	postinc1,c
  5148  0105A0  0E00               	movlw	0
  5149  0105A2  6EE6               	movwf	postinc1,c
  5150  0105A4  ECCB  F0D5         	call	_spinners	;wreg free
  5151  0105A8  5001               	movf	btemp^0,w,c
  5152  0105AA  6EE6               	movwf	postinc1,c
  5153  0105AC  0E00               	movlw	0
  5154  0105AE  6EE6               	movwf	postinc1,c
  5155  0105B0  0ECB               	movlw	low STR_18
  5156  0105B2  6EE6               	movwf	postinc1,c
  5157  0105B4  0EFE               	movlw	high STR_18
  5158  0105B6  6EE6               	movwf	postinc1,c
  5159  0105B8  0E00               	movlw	0
  5160  0105BA  6EE6               	movwf	postinc1,c
  5161  0105BC  0E02               	movlw	2
  5162  0105BE  6EE6               	movwf	postinc1,c
  5163  0105C0  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5164  0105C4  0060  F007  FFE6   	movff	btemp,postinc1
  5165  0105CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5166  0105D0  0E08               	movlw	8
  5167  0105D2  6EE6               	movwf	postinc1,c
  5168  0105D4  EC46  F0D5         	call	_sprintf	;wreg free
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;main.c: 307:     update_lcd(0);
  5172  0105D8  0E00               	movlw	0
  5173  0105DA  6EE6               	movwf	postinc1,c
  5174  0105DC  ECBE  F0D4         	call	_update_lcd	;wreg free
  5175                           
  5176                           ;main.c: 309:     if (i_esr++ > 512)
  5177                           ;stkvar	_i_esr @ sp[(-17)+8]
  5178  0105E0  50E1               	movf	fsr1l,w,c
  5179  0105E2  0FF7               	addlw	-9
  5180  0105E4  6ED9               	movwf	fsr2l,c
  5181  0105E6  50E2               	movf	fsr1h,w,c
  5182  0105E8  6EDA               	movwf	fsr2h,c
  5183  0105EA  0EFF               	movlw	255
  5184  0105EC  22DA               	addwfc	fsr2h,f,c
  5185  0105EE  006F FF7C  F00B    	movff	indf2,btemp+10
  5186  0105F4  0E01               	movlw	1
  5187  0105F6  26DE               	addwf	postinc2,f,c
  5188  0105F8  006F FF7C  F00C    	movff	indf2,btemp+11
  5189  0105FE  0E00               	movlw	0
  5190  010600  22DD               	addwfc	postdec2,f,c
  5191  010602  040B               	decf	(btemp+10)^0,w,c
  5192  010604  0E02               	movlw	2
  5193  010606  580C               	subwfb	(btemp+11)^0,w,c
  5194  010608  B0D8               	btfsc	status,0,c
  5195  01060A  D017               	goto	u13760
  5196  01060C                     l14518:
  5197                           
  5198                           ;main.c: 303:    while ((esr_temp = esr_check(0)) < 0.0) {
  5199  01060C  0E00               	movlw	0
  5200  01060E  6EE6               	movwf	postinc1,c
  5201  010610  EC7D  F0BB         	call	_esr_check	;wreg free
  5202                           
  5203                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5204  010614  0EF3               	movlw	-13
  5205  010616  0060  F007  FFE3   	movff	btemp,plusw1
  5206  01061C  0EF4               	movlw	-12
  5207  01061E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5208  010624  0EF5               	movlw	-11
  5209  010626  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5210  01062C  0EF6               	movlw	-10
  5211  01062E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5212  010634  0EF6               	movlw	-10
  5213  010636  BEE3               	btfsc	plusw1,7,c
  5214  010638  D77C               	goto	l14506
  5215  01063A                     u13760:
  5216                           
  5217                           ;main.c: 312:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5218  01063A  EE22  F087         	lfsr	2,_C+136	;volatile
  5219  01063E  006F FF7B FFE6     	movff	postinc2,postinc1
  5220  010644  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  01064A  006F FF7B FFE6     	movff	postinc2,postinc1
  5222  010650  006F FF7B FFE6     	movff	postinc2,postinc1
  5223  010656  0E5A               	movlw	low STR_19
  5224  010658  6EE6               	movwf	postinc1,c
  5225  01065A  0EFC               	movlw	high STR_19
  5226  01065C  6EE6               	movwf	postinc1,c
  5227  01065E  0E00               	movlw	0
  5228  010660  6EE6               	movwf	postinc1,c
  5229  010662  0E00               	movlw	0
  5230  010664  6EE6               	movwf	postinc1,c
  5231  010666  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5232  01066A  0060  F007  FFE6   	movff	btemp,postinc1
  5233  010670  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5234  010676  0E08               	movlw	8
  5235  010678  6EE6               	movwf	postinc1,c
  5236  01067A  EC46  F0D5         	call	_sprintf	;wreg free
  5237                           
  5238                           ;main.c: 313:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5239  01067E  EE22  F10D         	lfsr	2,_C+270	;volatile
  5240  010682  006F FF7B FFE6     	movff	postinc2,postinc1
  5241  010688  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  01068E  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  010694  006F FF7B FFE6     	movff	postinc2,postinc1
  5244  01069A  EE22  F119         	lfsr	2,_C+282	;volatile
  5245  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5246  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5247  0106AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5248  0106B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5249  0106B6  0E6B               	movlw	low STR_20
  5250  0106B8  6EE6               	movwf	postinc1,c
  5251  0106BA  0EFB               	movlw	high STR_20
  5252  0106BC  6EE6               	movwf	postinc1,c
  5253  0106BE  0E00               	movlw	0
  5254  0106C0  6EE6               	movwf	postinc1,c
  5255  0106C2  0E01               	movlw	1
  5256  0106C4  6EE6               	movwf	postinc1,c
  5257  0106C6  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5258  0106CA  0060  F007  FFE6   	movff	btemp,postinc1
  5259  0106D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5260  0106D6  0E0C               	movlw	12
  5261  0106D8  6EE6               	movwf	postinc1,c
  5262  0106DA  EC46  F0D5         	call	_sprintf	;wreg free
  5263                           
  5264                           ;main.c: 314:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5265  0106DE  EE22  F111         	lfsr	2,_C+274	;volatile
  5266  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5267  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5268  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5269  0106F4  006F FF7B FFE6     	movff	postinc2,postinc1
  5270  0106FA  EE22  F11D         	lfsr	2,_C+286	;volatile
  5271  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5272  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5273  01070A  006F FF7B FFE6     	movff	postinc2,postinc1
  5274  010710  006F FF7B FFE6     	movff	postinc2,postinc1
  5275  010716  0E85               	movlw	low STR_21
  5276  010718  6EE6               	movwf	postinc1,c
  5277  01071A  0EFB               	movlw	high STR_21
  5278  01071C  6EE6               	movwf	postinc1,c
  5279  01071E  0E00               	movlw	0
  5280  010720  6EE6               	movwf	postinc1,c
  5281  010722  0E02               	movlw	2
  5282  010724  6EE6               	movwf	postinc1,c
  5283  010726  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5284  01072A  0060  F007  FFE6   	movff	btemp,postinc1
  5285  010730  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5286  010736  0E0C               	movlw	12
  5287  010738  6EE6               	movwf	postinc1,c
  5288  01073A  EC46  F0D5         	call	_sprintf	;wreg free
  5289                           
  5290                           ;main.c: 315:    update_lcd(0);
  5291  01073E  0E00               	movlw	0
  5292  010740  6EE6               	movwf	postinc1,c
  5293  010742  ECBE  F0D4         	call	_update_lcd	;wreg free
  5294                           
  5295                           ;main.c: 316:    WaitMs(4000);
  5296  010746  0EA0               	movlw	160
  5297  010748  6EE6               	movwf	postinc1,c
  5298  01074A  0E0F               	movlw	15
  5299  01074C  6EE6               	movwf	postinc1,c
  5300  01074E  EC47  F0E5         	call	_WaitMs	;wreg free
  5301                           
  5302                           ;main.c: 317:    V.sensor_set = get_switch(SCALIB);
  5303  010752  0E04               	movlw	4
  5304  010754  6EE6               	movwf	postinc1,c
  5305  010756  EC5A  F0E6         	call	_get_switch	;wreg free
  5306  01075A  5001               	movf	btemp^0,w,c
  5307  01075C  B4D8               	btfsc	status,2,c
  5308  01075E  D002               	goto	u13770
  5309  010760  0E01               	movlw	1
  5310  010762  D001               	goto	u13780
  5311  010764                     u13770:
  5312  010764  0E00               	movlw	0
  5313  010766                     u13780:
  5314  010766  0101               	movlb	1	; () banked
  5315  010768  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5316                           
  5317                           ; BSR set to: 1
  5318                           ;main.c: 318:    WaitMs(1000);
  5319  01076A  0EE8               	movlw	232
  5320  01076C  6EE6               	movwf	postinc1,c
  5321  01076E  0E03               	movlw	3
  5322  010770  6EE6               	movwf	postinc1,c
  5323  010772  EC47  F0E5         	call	_WaitMs	;wreg free
  5324                           
  5325                           ;main.c: 319:    if (V.sensor_set && get_switch(SCALIB)) {
  5326  010776  0101               	movlb	1	; () banked
  5327  010778  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5328  01077A  B4D8               	btfsc	status,2,c
  5329  01077C  D00F               	goto	l14536
  5330                           
  5331                           ; BSR set to: 1
  5332  01077E  0E04               	movlw	4
  5333  010780  6EE6               	movwf	postinc1,c
  5334  010782  EC5A  F0E6         	call	_get_switch	;wreg free
  5335  010786  5001               	movf	btemp^0,w,c
  5336  010788  B4D8               	btfsc	status,2,c
  5337  01078A  D008               	goto	l14536
  5338                           
  5339                           ;main.c: 320:     current_sensor_cal();
  5340  01078C  EC7C  F0AC         	call	_current_sensor_cal	;wreg free
  5341                           
  5342                           ;main.c: 321:     WaitMs(4000);
  5343  010790  0EA0               	movlw	160
  5344  010792  6EE6               	movwf	postinc1,c
  5345  010794  0E0F               	movlw	15
  5346  010796  6EE6               	movwf	postinc1,c
  5347  010798  EC47  F0E5         	call	_WaitMs	;wreg free
  5348  01079C                     l14536:
  5349                           
  5350                           ;main.c: 323:    V.sensor_set = 0;
  5351  01079C  0101               	movlb	1	; () banked
  5352  01079E  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5353                           
  5354                           ; BSR set to: 1
  5355                           ;main.c: 324:    V.system_stable = 1;
  5356  0107A0  0E01               	movlw	1
  5357  0107A2  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5358                           
  5359                           ;main.c: 325:    break;
  5360  0107A4  D01B               	goto	l14544
  5361  0107A6                     l1454:
  5362                           
  5363                           ; BSR set to: 1
  5364                           ;main.c: 331:    P.SYSTEM_STABLE = 1;
  5365  0107A6  81F7               	bsf	(_P+1)& (0+255),0,b	;volatile
  5366                           
  5367                           ;main.c: 332:    break;
  5368  0107A8  D019               	goto	l14544
  5369  0107AA                     l1456:
  5370                           
  5371                           ; BSR set to: 1
  5372                           ;main.c: 335:    V.ui_state = UI_STATE_INIT;
  5373  0107AA  6B07               	clrf	_V& (0+255),b	;volatile
  5374                           
  5375                           ;main.c: 336:    break;
  5376  0107AC  D017               	goto	l14544
  5377  0107AE                     l14542:
  5378  0107AE  0101               	movlb	1	; () banked
  5379  0107B0  5107               	movf	_V& (0+255),w,b	;volatile
  5380  0107B2  6E0B               	movwf	(btemp+10)^0,c
  5381  0107B4  6A0C               	clrf	(btemp+11)^0,c
  5382                           
  5383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5384                           ; Switch size 1, requested type "simple"
  5385                           ; Number of cases is 1, Range of values is 0 to 0
  5386                           ; switch strategies available:
  5387                           ; Name         Instructions Cycles
  5388                           ; simple_byte            4     3 (average)
  5389                           ;	Chosen strategy is simple_byte
  5390  0107B6  500C               	movf	(btemp+11)^0,w,c
  5391  0107B8  0A00               	xorlw	0	; case 0
  5392  0107BA  A4D8               	btfss	status,2,c
  5393  0107BC  D7F6               	goto	l1456
  5394                           
  5395                           ; BSR set to: 1
  5396                           ; Switch size 1, requested type "simple"
  5397                           ; Number of cases is 5, Range of values is 0 to 5
  5398                           ; switch strategies available:
  5399                           ; Name         Instructions Cycles
  5400                           ; simple_byte           16     9 (average)
  5401                           ;	Chosen strategy is simple_byte
  5402  0107BE  500B               	movf	(btemp+10)^0,w,c
  5403  0107C0  0A00               	xorlw	0	; case 0
  5404  0107C2  B4D8               	btfsc	status,2,c
  5405  0107C4  D459               	goto	l14396
  5406  0107C6  0A01               	xorlw	1	; case 1
  5407  0107C8  B4D8               	btfsc	status,2,c
  5408  0107CA  D008               	goto	l14544
  5409  0107CC  0A02               	xorlw	2	; case 3
  5410  0107CE  B4D8               	btfsc	status,2,c
  5411  0107D0  D005               	goto	l14544
  5412  0107D2  0A07               	xorlw	7	; case 4
  5413  0107D4  B4D8               	btfsc	status,2,c
  5414  0107D6  D7E7               	goto	l1454
  5415  0107D8  0A01               	xorlw	1	; case 5
  5416  0107DA  D7E7               	goto	l1456
  5417  0107DC                     l14544:
  5418                           
  5419                           ; BSR set to: 1
  5420                           ;main.c: 339:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5421  0107DC  0E01               	movlw	1
  5422  0107DE  6EE6               	movwf	postinc1,c
  5423  0107E0  ECC5  F0E6         	call	_TimerDone	;wreg free
  5424  0107E4  5001               	movf	btemp^0,w,c
  5425  0107E6  B4D8               	btfsc	status,2,c
  5426  0107E8  D013               	goto	l14556
  5427  0107EA  ECCB  F0E9         	call	_check_adc_scan	;wreg free
  5428  0107EE  5001               	movf	btemp^0,w,c
  5429  0107F0  B4D8               	btfsc	status,2,c
  5430  0107F2  D00E               	goto	l14556
  5431                           
  5432                           ;main.c: 343:    convert_adc_data();
  5433  0107F4  EC9B  F0D9         	call	_convert_adc_data	;wreg free
  5434                           
  5435                           ;main.c: 347:    clear_adc_scan();
  5436  0107F8  ECE2  F0E9         	call	_clear_adc_scan	;wreg free
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;main.c: 348:    start_adc_scan();
  5440  0107FC  ECED  F0E0         	call	_start_adc_scan	;wreg free
  5441                           
  5442                           ;main.c: 349:    StartTimer(TMR_ADC, 200);
  5443  010800  0EC8               	movlw	200
  5444  010802  6EE6               	movwf	postinc1,c
  5445  010804  0E00               	movlw	0
  5446  010806  6EE6               	movwf	postinc1,c
  5447  010808  0E01               	movlw	1
  5448  01080A  6EE6               	movwf	postinc1,c
  5449  01080C  EC56  F0E4         	call	_StartTimer	;wreg free
  5450  010810                     l14556:
  5451                           
  5452                           ;main.c: 356:   if (TimerDone(TMR_DISPLAY)) {
  5453                           
  5454                           ;main.c: 352:   if (V.ticks) {
  5455  010810  0E0A               	movlw	10
  5456  010812  6EE6               	movwf	postinc1,c
  5457  010814  ECC5  F0E6         	call	_TimerDone	;wreg free
  5458  010818  5001               	movf	btemp^0,w,c
  5459  01081A  B4D8               	btfsc	status,2,c
  5460  01081C  EFB4  F088         	goto	l14640
  5461                           
  5462                           ;main.c: 357:    if (TimerDone(TMR_HELPDIS)) {
  5463  010820  0E09               	movlw	9
  5464  010822  6EE6               	movwf	postinc1,c
  5465  010824  ECC5  F0E6         	call	_TimerDone	;wreg free
  5466  010828  5001               	movf	btemp^0,w,c
  5467  01082A  B4D8               	btfsc	status,2,c
  5468  01082C  D004               	goto	l14564
  5469                           
  5470                           ;main.c: 358:     set_display_info(DIS_STR);
  5471  01082E  0E00               	movlw	0
  5472  010830  6EE6               	movwf	postinc1,c
  5473  010832  ECCA  F0E8         	call	_set_display_info	;wreg free
  5474  010836                     l14564:
  5475                           
  5476                           ;main.c: 360:    calc_model_data();
  5477  010836  EC18  F0B1         	call	_calc_model_data	;wreg free
  5478                           
  5479                           ; BSR set to: 57
  5480                           ;main.c: 367:     hid_display(&H);
  5481                           
  5482                           ;main.c: 362:    if (0) {
  5483  01083A  0EC7               	movlw	low _H
  5484  01083C  6EE6               	movwf	postinc1,c
  5485  01083E  0E01               	movlw	high _H
  5486  010840  6EE6               	movwf	postinc1,c
  5487  010842  EC15  F0C4         	call	_hid_display	;wreg free
  5488                           
  5489                           ;main.c: 368:     switch (H.hid_display) {
  5490  010846  EF4A  F088         	goto	l14612
  5491  01084A                     l1464:
  5492                           
  5493                           ; BSR set to: 1
  5494                           ;main.c: 370:      V.calib = 0;
  5495  01084A  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5496                           
  5497                           ; BSR set to: 1
  5498                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5499  01084C  EE22  F121         	lfsr	2,_C+290	;volatile
  5500  010850  50DF               	movf	indf2,w,c
  5501  010852  A4D8               	btfss	status,2,c
  5502  010854  D002               	goto	l14574
  5503                           
  5504                           ; BSR set to: 1
  5505  010856  0E20               	movlw	32
  5506  010858  D001               	goto	L1
  5507  01085A                     l14574:
  5508                           
  5509                           ; BSR set to: 1
  5510  01085A  0E44               	movlw	68
  5511  01085C                     L1:
  5512  01085C  6E0B               	movwf	(btemp+10)^0,c
  5513  01085E  0E00               	movlw	0
  5514  010860  6E0C               	movwf	(btemp+11)^0,c
  5515                           
  5516                           ;stkvar	_main$3958 @ sp[(-17)+2]
  5517  010862  0EF1               	movlw	-15
  5518  010864  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5519  01086A  0EF2               	movlw	-14
  5520  01086C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5521                           
  5522                           ; BSR set to: 1
  5523  010872  EE22  F07B         	lfsr	2,_C+124	;volatile
  5524  010876  006F FF7B FFE6     	movff	postinc2,postinc1
  5525  01087C  006F FF7B FFE6     	movff	postinc2,postinc1
  5526  010882  006F FF7B FFE6     	movff	postinc2,postinc1
  5527  010888  006F FF7B FFE6     	movff	postinc2,postinc1
  5528                           
  5529                           ;stkvar	_main$3958 @ sp[(-21)+2]
  5530  01088E  0EED               	movlw	-19
  5531  010890  006F FF8F FFE6     	movff	plusw1,postinc1
  5532  010896  006F FF8F FFE6     	movff	plusw1,postinc1
  5533  01089C  0E36               	movlw	low STR_25
  5534  01089E  6EE6               	movwf	postinc1,c
  5535  0108A0  0EFD               	movlw	high STR_25
  5536  0108A2  6EE6               	movwf	postinc1,c
  5537  0108A4  0E00               	movlw	0
  5538  0108A6  6EE6               	movwf	postinc1,c
  5539  0108A8  0E00               	movlw	0
  5540  0108AA  6EE6               	movwf	postinc1,c
  5541  0108AC  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5542  0108B0  0060  F007  FFE6   	movff	btemp,postinc1
  5543  0108B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5544  0108BC  0E0A               	movlw	10
  5545  0108BE  6EE6               	movwf	postinc1,c
  5546  0108C0  EC46  F0D5         	call	_sprintf	;wreg free
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5550  0108C4  EE22  F073         	lfsr	2,_C+116	;volatile
  5551  0108C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5552  0108CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5553  0108D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5554  0108DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5555  0108E0  0E20               	movlw	low STR_26
  5556  0108E2  6EE6               	movwf	postinc1,c
  5557  0108E4  0EFD               	movlw	high STR_26
  5558  0108E6  6EE6               	movwf	postinc1,c
  5559  0108E8  0E00               	movlw	0
  5560  0108EA  6EE6               	movwf	postinc1,c
  5561  0108EC  0E01               	movlw	1
  5562  0108EE  6EE6               	movwf	postinc1,c
  5563  0108F0  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5564  0108F4  0060  F007  FFE6   	movff	btemp,postinc1
  5565  0108FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5566  010900  0E08               	movlw	8
  5567  010902  6EE6               	movwf	postinc1,c
  5568  010904  EC46  F0D5         	call	_sprintf	;wreg free
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5572  010908  EE22  F077         	lfsr	2,_C+120	;volatile
  5573  01090C  006F FF7B FFE6     	movff	postinc2,postinc1
  5574  010912  006F FF7B FFE6     	movff	postinc2,postinc1
  5575  010918  006F FF7B FFE6     	movff	postinc2,postinc1
  5576  01091E  006F FF7B FFE6     	movff	postinc2,postinc1
  5577  010924  0E0A               	movlw	low STR_27
  5578  010926  6EE6               	movwf	postinc1,c
  5579  010928  0EFD               	movlw	high STR_27
  5580  01092A  6EE6               	movwf	postinc1,c
  5581  01092C  0E00               	movlw	0
  5582  01092E  6EE6               	movwf	postinc1,c
  5583  010930  0E02               	movlw	2
  5584  010932  6EE6               	movwf	postinc1,c
  5585  010934  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5586  010938  0060  F007  FFE6   	movff	btemp,postinc1
  5587  01093E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5588  010944  0E08               	movlw	8
  5589  010946  6EE6               	movwf	postinc1,c
  5590  010948  EC46  F0D5         	call	_sprintf	;wreg free
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5594  01094C  EE22  F121         	lfsr	2,_C+290	;volatile
  5595  010950  50DF               	movf	indf2,w,c
  5596  010952  A4D8               	btfss	status,2,c
  5597  010954  D002               	goto	l14586
  5598                           
  5599                           ; BSR set to: 0
  5600  010956  0E20               	movlw	32
  5601  010958  D001               	goto	L2
  5602  01095A                     l14586:
  5603                           
  5604                           ; BSR set to: 0
  5605  01095A  0E44               	movlw	68
  5606  01095C                     L2:
  5607  01095C  6E0B               	movwf	(btemp+10)^0,c
  5608  01095E  0E00               	movlw	0
  5609  010960  6E0C               	movwf	(btemp+11)^0,c
  5610                           
  5611                           ;stkvar	_main$3962 @ sp[(-17)+0]
  5612  010962  0EEF               	movlw	-17
  5613  010964  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5614  01096A  0EF0               	movlw	-16
  5615  01096C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5616                           
  5617                           ; BSR set to: 0
  5618  010972  EE22  F0A7         	lfsr	2,_C+168	;volatile
  5619  010976  006F FF7B FFE6     	movff	postinc2,postinc1
  5620  01097C  006F FF7B FFE6     	movff	postinc2,postinc1
  5621  010982  006F FF7B FFE6     	movff	postinc2,postinc1
  5622  010988  006F FF7B FFE6     	movff	postinc2,postinc1
  5623                           
  5624                           ;stkvar	_main$3962 @ sp[(-21)+0]
  5625  01098E  0EEB               	movlw	-21
  5626  010990  006F FF8F FFE6     	movff	plusw1,postinc1
  5627  010996  006F FF8F FFE6     	movff	plusw1,postinc1
  5628  01099C  0EF4               	movlw	low STR_28
  5629  01099E  6EE6               	movwf	postinc1,c
  5630  0109A0  0EFC               	movlw	high STR_28
  5631  0109A2  6EE6               	movwf	postinc1,c
  5632  0109A4  0E01               	movlw	1
  5633  0109A6  6EE6               	movwf	postinc1,c
  5634  0109A8  0E00               	movlw	0
  5635  0109AA  6EE6               	movwf	postinc1,c
  5636  0109AC  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5637  0109B0  0060  F007  FFE6   	movff	btemp,postinc1
  5638  0109B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5639  0109BC  0E0A               	movlw	10
  5640  0109BE  6EE6               	movwf	postinc1,c
  5641  0109C0  EC46  F0D5         	call	_sprintf	;wreg free
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5645  0109C4  EE22  F0AF         	lfsr	2,_C+176	;volatile
  5646  0109C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5647  0109CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5648  0109D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5649  0109DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5650  0109E0  0EDE               	movlw	low STR_29
  5651  0109E2  6EE6               	movwf	postinc1,c
  5652  0109E4  0EFC               	movlw	high STR_29
  5653  0109E6  6EE6               	movwf	postinc1,c
  5654  0109E8  0E01               	movlw	1
  5655  0109EA  6EE6               	movwf	postinc1,c
  5656  0109EC  0E01               	movlw	1
  5657  0109EE  6EE6               	movwf	postinc1,c
  5658  0109F0  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5659  0109F4  0060  F007  FFE6   	movff	btemp,postinc1
  5660  0109FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5661  010A00  0E08               	movlw	8
  5662  010A02  6EE6               	movwf	postinc1,c
  5663  010A04  EC46  F0D5         	call	_sprintf	;wreg free
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5667  010A08  EE22  F0AB         	lfsr	2,_C+172	;volatile
  5668  010A0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5669  010A12  006F FF7B FFE6     	movff	postinc2,postinc1
  5670  010A18  006F FF7B FFE6     	movff	postinc2,postinc1
  5671  010A1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5672  010A24  0EC8               	movlw	low STR_30
  5673  010A26  6EE6               	movwf	postinc1,c
  5674  010A28  0EFC               	movlw	high STR_30
  5675  010A2A  6EE6               	movwf	postinc1,c
  5676  010A2C  0E01               	movlw	1
  5677  010A2E  6EE6               	movwf	postinc1,c
  5678  010A30  0E02               	movlw	2
  5679  010A32  6EE6               	movwf	postinc1,c
  5680  010A34  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5681  010A38  0060  F007  FFE6   	movff	btemp,postinc1
  5682  010A3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5683  010A44  0E08               	movlw	8
  5684  010A46  6EE6               	movwf	postinc1,c
  5685  010A48  EC46  F0D5         	call	_sprintf	;wreg free
  5686                           
  5687                           ;main.c: 378:      break;
  5688  010A4C  D339               	goto	l14614
  5689  010A4E                     l1474:
  5690                           
  5691                           ; BSR set to: 1
  5692                           ;main.c: 380:      V.calib = 0;
  5693  010A4E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5694                           
  5695                           ; BSR set to: 1
  5696                           ;main.c: 381:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5697  010A50  EE22  F003         	lfsr	2,_C+4	;volatile
  5698  010A54  006F FF7B FFE6     	movff	postinc2,postinc1
  5699  010A5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5700  010A60  006F FF7B FFE6     	movff	postinc2,postinc1
  5701  010A66  006F FF7B FFE6     	movff	postinc2,postinc1
  5702  010A6C  EE22  F013         	lfsr	2,_C+20	;volatile
  5703  010A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5704  010A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5705  010A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5706  010A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5707  010A88  0E8E               	movlw	low STR_31
  5708  010A8A  6EE6               	movwf	postinc1,c
  5709  010A8C  0EFD               	movlw	high STR_31
  5710  010A8E  6EE6               	movwf	postinc1,c
  5711  010A90  0E00               	movlw	0
  5712  010A92  6EE6               	movwf	postinc1,c
  5713  010A94  0E00               	movlw	0
  5714  010A96  6EE6               	movwf	postinc1,c
  5715  010A98  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5716  010A9C  0060  F007  FFE6   	movff	btemp,postinc1
  5717  010AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5718  010AA8  0E0C               	movlw	12
  5719  010AAA  6EE6               	movwf	postinc1,c
  5720  010AAC  EC46  F0D5         	call	_sprintf	;wreg free
  5721                           
  5722                           ;main.c: 382:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5723  010AB0  EE21  F3FF         	lfsr	2,_C
  5724  010AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5725  010ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5726  010AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5727  010AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5728  010ACC  EE22  F00F         	lfsr	2,_C+16	;volatile
  5729  010AD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5730  010AD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5731  010ADC  006F FF7B FFE6     	movff	postinc2,postinc1
  5732  010AE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5733  010AE8  0E62               	movlw	low STR_32
  5734  010AEA  6EE6               	movwf	postinc1,c
  5735  010AEC  0EFD               	movlw	high STR_32
  5736  010AEE  6EE6               	movwf	postinc1,c
  5737  010AF0  0E00               	movlw	0
  5738  010AF2  6EE6               	movwf	postinc1,c
  5739  010AF4  0E01               	movlw	1
  5740  010AF6  6EE6               	movwf	postinc1,c
  5741  010AF8  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5742  010AFC  0060  F007  FFE6   	movff	btemp,postinc1
  5743  010B02  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5744  010B08  0E0C               	movlw	12
  5745  010B0A  6EE6               	movwf	postinc1,c
  5746  010B0C  EC46  F0D5         	call	_sprintf	;wreg free
  5747                           
  5748                           ;main.c: 383:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5749  010B10  EE22  F03F         	lfsr	2,_C+64	;volatile
  5750  010B14  006F FF7B FFE6     	movff	postinc2,postinc1
  5751  010B1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5752  010B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5753  010B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5754  010B2C  EE22  F007         	lfsr	2,_C+8	;volatile
  5755  010B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5756  010B36  006F FF7B FFE6     	movff	postinc2,postinc1
  5757  010B3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5758  010B42  006F FF7B FFE6     	movff	postinc2,postinc1
  5759  010B48  0E78               	movlw	low STR_33
  5760  010B4A  6EE6               	movwf	postinc1,c
  5761  010B4C  0EFD               	movlw	high STR_33
  5762  010B4E  6EE6               	movwf	postinc1,c
  5763  010B50  0E00               	movlw	0
  5764  010B52  6EE6               	movwf	postinc1,c
  5765  010B54  0E02               	movlw	2
  5766  010B56  6EE6               	movwf	postinc1,c
  5767  010B58  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5768  010B5C  0060  F007  FFE6   	movff	btemp,postinc1
  5769  010B62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5770  010B68  0E0C               	movlw	12
  5771  010B6A  6EE6               	movwf	postinc1,c
  5772  010B6C  EC46  F0D5         	call	_sprintf	;wreg free
  5773                           
  5774                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5775  010B70  EE22  F09F         	lfsr	2,_C+160	;volatile
  5776  010B74  006F FF7B FFE6     	movff	postinc2,postinc1
  5777  010B7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5778  010B80  006F FF7B FFE6     	movff	postinc2,postinc1
  5779  010B86  006F FF7B FFE6     	movff	postinc2,postinc1
  5780  010B8C  0E86               	movlw	low STR_34
  5781  010B8E  6EE6               	movwf	postinc1,c
  5782  010B90  0EFC               	movlw	high STR_34
  5783  010B92  6EE6               	movwf	postinc1,c
  5784  010B94  0E01               	movlw	1
  5785  010B96  6EE6               	movwf	postinc1,c
  5786  010B98  0E00               	movlw	0
  5787  010B9A  6EE6               	movwf	postinc1,c
  5788  010B9C  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5789  010BA0  0060  F007  FFE6   	movff	btemp,postinc1
  5790  010BA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5791  010BAC  0E08               	movlw	8
  5792  010BAE  6EE6               	movwf	postinc1,c
  5793  010BB0  EC46  F0D5         	call	_sprintf	;wreg free
  5794                           
  5795                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5796  010BB4  EE22  F0A3         	lfsr	2,_C+164	;volatile
  5797  010BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5798  010BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5799  010BC4  006F FF7B FFE6     	movff	postinc2,postinc1
  5800  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5801  010BD0  0E9C               	movlw	low STR_35
  5802  010BD2  6EE6               	movwf	postinc1,c
  5803  010BD4  0EFC               	movlw	high STR_35
  5804  010BD6  6EE6               	movwf	postinc1,c
  5805  010BD8  0E01               	movlw	1
  5806  010BDA  6EE6               	movwf	postinc1,c
  5807  010BDC  0E01               	movlw	1
  5808  010BDE  6EE6               	movwf	postinc1,c
  5809  010BE0  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5810  010BE4  0060  F007  FFE6   	movff	btemp,postinc1
  5811  010BEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5812  010BF0  0E08               	movlw	8
  5813  010BF2  6EE6               	movwf	postinc1,c
  5814  010BF4  EC46  F0D5         	call	_sprintf	;wreg free
  5815                           
  5816                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5817  010BF8  EE22  F0A3         	lfsr	2,_C+164	;volatile
  5818  010BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5819  010C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5820  010C08  006F FF7B FFE6     	movff	postinc2,postinc1
  5821  010C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5822  010C14  EE22  F09F         	lfsr	2,_C+160	;volatile
  5823  010C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5824  010C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5825  010C24  006F FF7B FFE6     	movff	postinc2,postinc1
  5826  010C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5827  010C30  EC83  F0A3         	call	___fladd	;wreg free
  5828  010C34  0060  F007  FFE6   	movff	btemp,postinc1
  5829  010C3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5830  010C40  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5831  010C46  0060  F013  FFE6   	movff	btemp+3,postinc1
  5832  010C4C  0EB2               	movlw	low STR_36
  5833  010C4E  6EE6               	movwf	postinc1,c
  5834  010C50  0EFC               	movlw	high STR_36
  5835  010C52  6EE6               	movwf	postinc1,c
  5836  010C54  0E01               	movlw	1
  5837  010C56  6EE6               	movwf	postinc1,c
  5838  010C58  0E02               	movlw	2
  5839  010C5A  6EE6               	movwf	postinc1,c
  5840  010C5C  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5841  010C60  0060  F007  FFE6   	movff	btemp,postinc1
  5842  010C66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5843  010C6C  0E08               	movlw	8
  5844  010C6E  6EE6               	movwf	postinc1,c
  5845  010C70  EC46  F0D5         	call	_sprintf	;wreg free
  5846                           
  5847                           ;main.c: 388:      break;
  5848  010C74  D225               	goto	l14614
  5849  010C76                     l1475:
  5850                           
  5851                           ; BSR set to: 1
  5852                           ;main.c: 390:      V.calib = 0;
  5853  010C76  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5854                           
  5855                           ; BSR set to: 1
  5856                           ;main.c: 391:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5857  010C78  EE22  F07F         	lfsr	2,_C+128	;volatile
  5858  010C7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5859  010C82  006F FF7B FFE6     	movff	postinc2,postinc1
  5860  010C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5861  010C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5862  010C94  0EE8               	movlw	low STR_37
  5863  010C96  6EE6               	movwf	postinc1,c
  5864  010C98  0EFB               	movlw	high STR_37
  5865  010C9A  6EE6               	movwf	postinc1,c
  5866  010C9C  0E00               	movlw	0
  5867  010C9E  6EE6               	movwf	postinc1,c
  5868  010CA0  0E00               	movlw	0
  5869  010CA2  6EE6               	movwf	postinc1,c
  5870  010CA4  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5871  010CA8  0060  F007  FFE6   	movff	btemp,postinc1
  5872  010CAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5873  010CB4  0E08               	movlw	8
  5874  010CB6  6EE6               	movwf	postinc1,c
  5875  010CB8  EC46  F0D5         	call	_sprintf	;wreg free
  5876                           
  5877                           ;main.c: 392:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5878  010CBC  EE22  F093         	lfsr	2,_C+148	;volatile
  5879  010CC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5880  010CC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5881  010CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5882  010CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5883  010CD8  EE22  F08F         	lfsr	2,_C+144	;volatile
  5884  010CDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5885  010CE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5886  010CE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5887  010CEE  006F FF7B FFE6     	movff	postinc2,postinc1
  5888  010CF4  0E2D               	movlw	low STR_38
  5889  010CF6  6EE6               	movwf	postinc1,c
  5890  010CF8  0EFC               	movlw	high STR_38
  5891  010CFA  6EE6               	movwf	postinc1,c
  5892  010CFC  0E00               	movlw	0
  5893  010CFE  6EE6               	movwf	postinc1,c
  5894  010D00  0E01               	movlw	1
  5895  010D02  6EE6               	movwf	postinc1,c
  5896  010D04  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5897  010D08  0060  F007  FFE6   	movff	btemp,postinc1
  5898  010D0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5899  010D14  0E0C               	movlw	12
  5900  010D16  6EE6               	movwf	postinc1,c
  5901  010D18  EC46  F0D5         	call	_sprintf	;wreg free
  5902                           
  5903                           ;main.c: 393:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5904  010D1C  EE22  F00F         	lfsr	2,_C+16	;volatile
  5905  010D20  006F FF7B FFE6     	movff	postinc2,postinc1
  5906  010D26  006F FF7B FFE6     	movff	postinc2,postinc1
  5907  010D2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5908  010D32  006F FF7B FFE6     	movff	postinc2,postinc1
  5909  010D38  EE22  F0B3         	lfsr	2,_C+180	;volatile
  5910  010D3C  006F FF78  F00B    	movff	postinc2,btemp+10
  5911  010D42  006F FF74  F00C    	movff	postdec2,btemp+11
  5912  010D48  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5913  010D4E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5914  010D54  EE22  F0B5         	lfsr	2,_C+182	;volatile
  5915  010D58  006F FF78  F00B    	movff	postinc2,btemp+10
  5916  010D5E  006F FF74  F00C    	movff	postdec2,btemp+11
  5917  010D64  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5918  010D6A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5919  010D70  0E00               	movlw	0
  5920  010D72  6EE6               	movwf	postinc1,c
  5921  010D74  0E05               	movlw	5
  5922  010D76  6EE6               	movwf	postinc1,c
  5923  010D78  ECCB  F0D5         	call	_spinners	;wreg free
  5924  010D7C  5001               	movf	btemp^0,w,c
  5925  010D7E  6EE6               	movwf	postinc1,c
  5926  010D80  0E00               	movlw	0
  5927  010D82  6EE6               	movwf	postinc1,c
  5928  010D84  0E4E               	movlw	low STR_39
  5929  010D86  6EE6               	movwf	postinc1,c
  5930  010D88  0EFB               	movlw	high STR_39
  5931  010D8A  6EE6               	movwf	postinc1,c
  5932  010D8C  0E00               	movlw	0
  5933  010D8E  6EE6               	movwf	postinc1,c
  5934  010D90  0E02               	movlw	2
  5935  010D92  6EE6               	movwf	postinc1,c
  5936  010D94  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5937  010D98  0060  F007  FFE6   	movff	btemp,postinc1
  5938  010D9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5939  010DA4  0E0E               	movlw	14
  5940  010DA6  6EE6               	movwf	postinc1,c
  5941  010DA8  EC46  F0D5         	call	_sprintf	;wreg free
  5942                           
  5943                           ;main.c: 395:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5944  010DAC  EE22  F087         	lfsr	2,_C+136	;volatile
  5945  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  010DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5947  010DBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5948  010DC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5949  010DC8  0ED1               	movlw	low STR_40
  5950  010DCA  6EE6               	movwf	postinc1,c
  5951  010DCC  0EFB               	movlw	high STR_40
  5952  010DCE  6EE6               	movwf	postinc1,c
  5953  010DD0  0E01               	movlw	1
  5954  010DD2  6EE6               	movwf	postinc1,c
  5955  010DD4  0E00               	movlw	0
  5956  010DD6  6EE6               	movwf	postinc1,c
  5957  010DD8  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5958  010DDC  0060  F007  FFE6   	movff	btemp,postinc1
  5959  010DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5960  010DE8  0E08               	movlw	8
  5961  010DEA  6EE6               	movwf	postinc1,c
  5962  010DEC  EC46  F0D5         	call	_sprintf	;wreg free
  5963                           
  5964                           ;main.c: 396:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5965  010DF0  EE22  F10D         	lfsr	2,_C+270	;volatile
  5966  010DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  5967  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  5968  010E00  006F FF7B FFE6     	movff	postinc2,postinc1
  5969  010E06  006F FF7B FFE6     	movff	postinc2,postinc1
  5970  010E0C  EE22  F119         	lfsr	2,_C+282	;volatile
  5971  010E10  006F FF7B FFE6     	movff	postinc2,postinc1
  5972  010E16  006F FF7B FFE6     	movff	postinc2,postinc1
  5973  010E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5974  010E22  006F FF7B FFE6     	movff	postinc2,postinc1
  5975  010E28  0EFF               	movlw	low STR_41
  5976  010E2A  6EE6               	movwf	postinc1,c
  5977  010E2C  0EFB               	movlw	high STR_41
  5978  010E2E  6EE6               	movwf	postinc1,c
  5979  010E30  0E01               	movlw	1
  5980  010E32  6EE6               	movwf	postinc1,c
  5981  010E34  0E01               	movlw	1
  5982  010E36  6EE6               	movwf	postinc1,c
  5983  010E38  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  5984  010E3C  0060  F007  FFE6   	movff	btemp,postinc1
  5985  010E42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5986  010E48  0E0C               	movlw	12
  5987  010E4A  6EE6               	movwf	postinc1,c
  5988  010E4C  EC46  F0D5         	call	_sprintf	;wreg free
  5989                           
  5990                           ;main.c: 397:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5991  010E50  EE22  F111         	lfsr	2,_C+274	;volatile
  5992  010E54  006F FF7B FFE6     	movff	postinc2,postinc1
  5993  010E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5994  010E60  006F FF7B FFE6     	movff	postinc2,postinc1
  5995  010E66  006F FF7B FFE6     	movff	postinc2,postinc1
  5996  010E6C  EE22  F11D         	lfsr	2,_C+286	;volatile
  5997  010E70  006F FF7B FFE6     	movff	postinc2,postinc1
  5998  010E76  006F FF7B FFE6     	movff	postinc2,postinc1
  5999  010E7C  006F FF7B FFE6     	movff	postinc2,postinc1
  6000  010E82  006F FF7B FFE6     	movff	postinc2,postinc1
  6001  010E88  0E16               	movlw	low STR_42
  6002  010E8A  6EE6               	movwf	postinc1,c
  6003  010E8C  0EFC               	movlw	high STR_42
  6004  010E8E  6EE6               	movwf	postinc1,c
  6005  010E90  0E01               	movlw	1
  6006  010E92  6EE6               	movwf	postinc1,c
  6007  010E94  0E02               	movlw	2
  6008  010E96  6EE6               	movwf	postinc1,c
  6009  010E98  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  6010  010E9C  0060  F007  FFE6   	movff	btemp,postinc1
  6011  010EA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6012  010EA8  0E0C               	movlw	12
  6013  010EAA  6EE6               	movwf	postinc1,c
  6014  010EAC  EC46  F0D5         	call	_sprintf	;wreg free
  6015                           
  6016                           ;main.c: 398:      break;
  6017  010EB0  D107               	goto	l14614
  6018  010EB2                     l14598:
  6019                           
  6020                           ; BSR set to: 1
  6021                           ;main.c: 400:      if (!V.calib) {
  6022  010EB2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  6023  010EB4  A4D8               	btfss	status,2,c
  6024  010EB6  D02D               	goto	l14602
  6025                           
  6026                           ; BSR set to: 1
  6027                           ;main.c: 401:       lp_filter(0.0, i, -1);
  6028  010EB8  0EFF               	movlw	255
  6029  010EBA  6EE6               	movwf	postinc1,c
  6030                           
  6031                           ;stkvar	_i @ sp[(-18)+14]
  6032  010EBC  0EFC               	movlw	-4
  6033  010EBE  50E3               	movf	plusw1,w,c
  6034  010EC0  6EE6               	movwf	postinc1,c
  6035  010EC2  0E00               	movlw	0
  6036  010EC4  6EE6               	movwf	postinc1,c
  6037  010EC6  0E00               	movlw	0
  6038  010EC8  6EE6               	movwf	postinc1,c
  6039  010ECA  0E00               	movlw	0
  6040  010ECC  6EE6               	movwf	postinc1,c
  6041  010ECE  0E00               	movlw	0
  6042  010ED0  6EE6               	movwf	postinc1,c
  6043  010ED2  EC13  F0C8         	call	_lp_filter	;wreg free
  6044                           
  6045                           ;main.c: 402:       lp_filter(0.0, j, -1);
  6046  010ED6  0EFF               	movlw	255
  6047  010ED8  6EE6               	movwf	postinc1,c
  6048                           
  6049                           ;stkvar	_j @ sp[(-18)+13]
  6050  010EDA  0EFB               	movlw	-5
  6051  010EDC  50E3               	movf	plusw1,w,c
  6052  010EDE  6EE6               	movwf	postinc1,c
  6053  010EE0  0E00               	movlw	0
  6054  010EE2  6EE6               	movwf	postinc1,c
  6055  010EE4  0E00               	movlw	0
  6056  010EE6  6EE6               	movwf	postinc1,c
  6057  010EE8  0E00               	movlw	0
  6058  010EEA  6EE6               	movwf	postinc1,c
  6059  010EEC  0E00               	movlw	0
  6060  010EEE  6EE6               	movwf	postinc1,c
  6061  010EF0  EC13  F0C8         	call	_lp_filter	;wreg free
  6062                           
  6063                           ;main.c: 403:       lp_filter(0.0, k, -1);
  6064  010EF4  0EFF               	movlw	255
  6065  010EF6  6EE6               	movwf	postinc1,c
  6066                           
  6067                           ;stkvar	_k @ sp[(-18)+12]
  6068  010EF8  0EFA               	movlw	-6
  6069  010EFA  50E3               	movf	plusw1,w,c
  6070  010EFC  6EE6               	movwf	postinc1,c
  6071  010EFE  0E00               	movlw	0
  6072  010F00  6EE6               	movwf	postinc1,c
  6073  010F02  0E00               	movlw	0
  6074  010F04  6EE6               	movwf	postinc1,c
  6075  010F06  0E00               	movlw	0
  6076  010F08  6EE6               	movwf	postinc1,c
  6077  010F0A  0E00               	movlw	0
  6078  010F0C  6EE6               	movwf	postinc1,c
  6079  010F0E  EC13  F0C8         	call	_lp_filter	;wreg free
  6080  010F12                     l14602:
  6081                           
  6082                           ;main.c: 405:      V.calib = 1;
  6083  010F12  0E01               	movlw	1
  6084  010F14  0101               	movlb	1	; () banked
  6085  010F16  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6086                           
  6087                           ; BSR set to: 1
  6088                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6089                           ;stkvar	_inp_index @ sp[(-17)+11]
  6090  010F18  0EFA               	movlw	-6
  6091  010F1A  50E3               	movf	plusw1,w,c
  6092  010F1C  6EE6               	movwf	postinc1,c
  6093  010F1E  0E00               	movlw	0
  6094  010F20  6EE6               	movwf	postinc1,c
  6095                           
  6096                           ;stkvar	_i @ sp[(-19)+14]
  6097  010F22  0EFB               	movlw	-5
  6098  010F24  50E3               	movf	plusw1,w,c
  6099  010F26  0D04               	mullw	4
  6100  010F28  0EFF               	movlw	low _C
  6101  010F2A  24F3               	addwf	243,w,c
  6102  010F2C  6ED9               	movwf	fsr2l,c
  6103  010F2E  0E07               	movlw	high _C
  6104  010F30  20F4               	addwfc	prodh,w,c
  6105  010F32  6EDA               	movwf	fsr2h,c
  6106  010F34  006F FF7B FFE6     	movff	postinc2,postinc1
  6107  010F3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6108  010F40  006F FF7B FFE6     	movff	postinc2,postinc1
  6109  010F46  006F FF7B FFE6     	movff	postinc2,postinc1
  6110                           
  6111                           ;stkvar	_i @ sp[(-23)+14]
  6112  010F4C  0EF7               	movlw	-9
  6113  010F4E  50E3               	movf	plusw1,w,c
  6114  010F50  6EE6               	movwf	postinc1,c
  6115  010F52  ECD9  F0E8         	call	_get_raw_result	;wreg free
  6116  010F56  0060  F007  FFE6   	movff	btemp,postinc1
  6117  010F5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6118  010F62  0EA4               	movlw	low STR_43
  6119  010F64  6EE6               	movwf	postinc1,c
  6120  010F66  0EFD               	movlw	high STR_43
  6121  010F68  6EE6               	movwf	postinc1,c
  6122  010F6A  0E00               	movlw	0
  6123  010F6C  6EE6               	movwf	postinc1,c
  6124  010F6E  0E00               	movlw	0
  6125  010F70  6EE6               	movwf	postinc1,c
  6126  010F72  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  6127  010F76  0060  F007  FFE6   	movff	btemp,postinc1
  6128  010F7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6129  010F82  0E0C               	movlw	12
  6130  010F84  6EE6               	movwf	postinc1,c
  6131  010F86  EC46  F0D5         	call	_sprintf	;wreg free
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6135                           ;stkvar	_inp_index @ sp[(-17)+11]
  6136  010F8A  0EFA               	movlw	-6
  6137  010F8C  50E3               	movf	plusw1,w,c
  6138  010F8E  6E0B               	movwf	(btemp+10)^0,c
  6139  010F90  6A0C               	clrf	(btemp+11)^0,c
  6140  010F92  0E01               	movlw	1
  6141  010F94  260B               	addwf	(btemp+10)^0,f,c
  6142  010F96  0E00               	movlw	0
  6143  010F98  220C               	addwfc	(btemp+11)^0,f,c
  6144  010F9A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6145  010FA0  0060  F033  FFE6   	movff	btemp+11,postinc1
  6146                           
  6147                           ;stkvar	_j @ sp[(-19)+13]
  6148  010FA6  0EFA               	movlw	-6
  6149  010FA8  50E3               	movf	plusw1,w,c
  6150  010FAA  0D04               	mullw	4
  6151  010FAC  0EFF               	movlw	low _C
  6152  010FAE  24F3               	addwf	243,w,c
  6153  010FB0  6ED9               	movwf	fsr2l,c
  6154  010FB2  0E07               	movlw	high _C
  6155  010FB4  20F4               	addwfc	prodh,w,c
  6156  010FB6  6EDA               	movwf	fsr2h,c
  6157  010FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  6158  010FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6159  010FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6160  010FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6161                           
  6162                           ;stkvar	_j @ sp[(-23)+13]
  6163  010FD0  0EF6               	movlw	-10
  6164  010FD2  50E3               	movf	plusw1,w,c
  6165  010FD4  6EE6               	movwf	postinc1,c
  6166  010FD6  ECD9  F0E8         	call	_get_raw_result	;wreg free
  6167  010FDA  0060  F007  FFE6   	movff	btemp,postinc1
  6168  010FE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6169  010FE6  0EA4               	movlw	low STR_43
  6170  010FE8  6EE6               	movwf	postinc1,c
  6171  010FEA  0EFD               	movlw	high STR_43
  6172  010FEC  6EE6               	movwf	postinc1,c
  6173  010FEE  0E00               	movlw	0
  6174  010FF0  6EE6               	movwf	postinc1,c
  6175  010FF2  0E01               	movlw	1
  6176  010FF4  6EE6               	movwf	postinc1,c
  6177  010FF6  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  6178  010FFA  0060  F007  FFE6   	movff	btemp,postinc1
  6179  011000  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6180  011006  0E0C               	movlw	12
  6181  011008  6EE6               	movwf	postinc1,c
  6182  01100A  EC46  F0D5         	call	_sprintf	;wreg free
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6186                           ;stkvar	_inp_index @ sp[(-17)+11]
  6187  01100E  0EFA               	movlw	-6
  6188  011010  50E3               	movf	plusw1,w,c
  6189  011012  6E0B               	movwf	(btemp+10)^0,c
  6190  011014  6A0C               	clrf	(btemp+11)^0,c
  6191  011016  0E02               	movlw	2
  6192  011018  260B               	addwf	(btemp+10)^0,f,c
  6193  01101A  0E00               	movlw	0
  6194  01101C  220C               	addwfc	(btemp+11)^0,f,c
  6195  01101E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6196  011024  0060  F033  FFE6   	movff	btemp+11,postinc1
  6197                           
  6198                           ;stkvar	_k @ sp[(-19)+12]
  6199  01102A  0EF9               	movlw	-7
  6200  01102C  50E3               	movf	plusw1,w,c
  6201  01102E  0D04               	mullw	4
  6202  011030  0EFF               	movlw	low _C
  6203  011032  24F3               	addwf	243,w,c
  6204  011034  6ED9               	movwf	fsr2l,c
  6205  011036  0E07               	movlw	high _C
  6206  011038  20F4               	addwfc	prodh,w,c
  6207  01103A  6EDA               	movwf	fsr2h,c
  6208  01103C  006F FF7B FFE6     	movff	postinc2,postinc1
  6209  011042  006F FF7B FFE6     	movff	postinc2,postinc1
  6210  011048  006F FF7B FFE6     	movff	postinc2,postinc1
  6211  01104E  006F FF7B FFE6     	movff	postinc2,postinc1
  6212                           
  6213                           ;stkvar	_k @ sp[(-23)+12]
  6214  011054  0EF5               	movlw	-11
  6215  011056  50E3               	movf	plusw1,w,c
  6216  011058  6EE6               	movwf	postinc1,c
  6217  01105A  ECD9  F0E8         	call	_get_raw_result	;wreg free
  6218  01105E  0060  F007  FFE6   	movff	btemp,postinc1
  6219  011064  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6220  01106A  0EA4               	movlw	low STR_43
  6221  01106C  6EE6               	movwf	postinc1,c
  6222  01106E  0EFD               	movlw	high STR_43
  6223  011070  6EE6               	movwf	postinc1,c
  6224  011072  0E00               	movlw	0
  6225  011074  6EE6               	movwf	postinc1,c
  6226  011076  0E02               	movlw	2
  6227  011078  6EE6               	movwf	postinc1,c
  6228  01107A  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
  6229  01107E  0060  F007  FFE6   	movff	btemp,postinc1
  6230  011084  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6231  01108A  0E0C               	movlw	12
  6232  01108C  6EE6               	movwf	postinc1,c
  6233  01108E  EC46  F0D5         	call	_sprintf	;wreg free
  6234                           
  6235                           ;main.c: 409:      break;
  6236  011092  D016               	goto	l14614
  6237  011094                     l14612:
  6238  011094  0101               	movlb	1	; () banked
  6239  011096  51C7               	movf	_H& (0+255),w,b
  6240  011098  6E0B               	movwf	(btemp+10)^0,c
  6241  01109A  6A0C               	clrf	(btemp+11)^0,c
  6242                           
  6243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6244                           ; Switch size 1, requested type "simple"
  6245                           ; Number of cases is 1, Range of values is 0 to 0
  6246                           ; switch strategies available:
  6247                           ; Name         Instructions Cycles
  6248                           ; simple_byte            4     3 (average)
  6249                           ;	Chosen strategy is simple_byte
  6250  01109C  500C               	movf	(btemp+11)^0,w,c
  6251  01109E  0A00               	xorlw	0	; case 0
  6252  0110A0  A4D8               	btfss	status,2,c
  6253  0110A2  D00E               	goto	l14614
  6254                           
  6255                           ; BSR set to: 1
  6256                           ; Switch size 1, requested type "simple"
  6257                           ; Number of cases is 4, Range of values is 0 to 3
  6258                           ; switch strategies available:
  6259                           ; Name         Instructions Cycles
  6260                           ; simple_byte           13     7 (average)
  6261                           ;	Chosen strategy is simple_byte
  6262  0110A4  500B               	movf	(btemp+10)^0,w,c
  6263  0110A6  0A00               	xorlw	0	; case 0
  6264  0110A8  B4D8               	btfsc	status,2,c
  6265  0110AA  D4D1               	goto	l1474
  6266  0110AC  0A01               	xorlw	1	; case 1
  6267  0110AE  B4D8               	btfsc	status,2,c
  6268  0110B0  EF25  F084         	goto	l1464
  6269  0110B4  0A03               	xorlw	3	; case 2
  6270  0110B6  B4D8               	btfsc	status,2,c
  6271  0110B8  D5DE               	goto	l1475
  6272  0110BA  0A01               	xorlw	1	; case 3
  6273  0110BC  B4D8               	btfsc	status,2,c
  6274  0110BE  D6F9               	goto	l14598
  6275  0110C0                     l14614:
  6276                           
  6277                           ;main.c: 413:     clear_hid_pflags(&H);
  6278  0110C0  0EC7               	movlw	low _H
  6279  0110C2  6EE6               	movwf	postinc1,c
  6280  0110C4  0E01               	movlw	high _H
  6281  0110C6  6EE6               	movwf	postinc1,c
  6282  0110C8  EC87  F0E0         	call	_clear_hid_pflags	;wreg free
  6283                           
  6284                           ;main.c: 415:    StartTimer(TMR_DISPLAY, 250);
  6285  0110CC  0EFA               	movlw	250
  6286  0110CE  6EE6               	movwf	postinc1,c
  6287  0110D0  0E00               	movlw	0
  6288  0110D2  6EE6               	movwf	postinc1,c
  6289  0110D4  0E0A               	movlw	10
  6290  0110D6  6EE6               	movwf	postinc1,c
  6291  0110D8  EC56  F0E4         	call	_StartTimer	;wreg free
  6292                           
  6293                           ;main.c: 416:    V.enter = check_enter_button(&H);
  6294  0110DC  0EC7               	movlw	low _H
  6295  0110DE  6EE6               	movwf	postinc1,c
  6296  0110E0  0E01               	movlw	high _H
  6297  0110E2  6EE6               	movwf	postinc1,c
  6298  0110E4  EC7A  F0DF         	call	_check_enter_button	;wreg free
  6299  0110E8  5001               	movf	btemp^0,w,c
  6300  0110EA  0101               	movlb	1	; () banked
  6301  0110EC  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6302                           
  6303                           ; BSR set to: 1
  6304                           ;main.c: 417:    if (V.enter && (H.hid_display != HID_AUX)) {
  6305  0110EE  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6306  0110F0  B4D8               	btfsc	status,2,c
  6307  0110F2  D011               	goto	l14628
  6308                           
  6309                           ; BSR set to: 1
  6310  0110F4  0E03               	movlw	3
  6311  0110F6  19C7               	xorwf	_H& (0+255),w,b
  6312  0110F8  B4D8               	btfsc	status,2,c
  6313  0110FA  D00D               	goto	l14628
  6314                           
  6315                           ; BSR set to: 1
  6316                           ;main.c: 418:     V.enter = 0;
  6317  0110FC  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6318                           
  6319                           ; BSR set to: 1
  6320                           ;main.c: 419:     V.screen = ~V.screen;
  6321  0110FE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6322  011100  D002               	goto	u13900
  6323  011102  0E01               	movlw	1
  6324  011104  D001               	goto	u13906
  6325  011106                     u13900:
  6326  011106  0E00               	movlw	0
  6327  011108                     u13906:
  6328  011108  0AFF               	xorlw	255
  6329  01110A  6E0C               	movwf	(btemp+11)^0,c
  6330  01110C  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6331  01110E  180C               	xorwf	(btemp+11)^0,w,c
  6332  011110  0BFE               	andlw	-2
  6333  011112  180C               	xorwf	(btemp+11)^0,w,c
  6334  011114  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6335  011116                     l14628:
  6336                           
  6337                           ; BSR set to: 1
  6338                           ;main.c: 421:    set_vterm(V.screen);
  6339  011116  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6340  011118  D002               	goto	u13910
  6341  01111A  0E01               	movlw	1
  6342  01111C  D001               	goto	u13916
  6343  01111E                     u13910:
  6344  01111E  0E00               	movlw	0
  6345  011120                     u13916:
  6346  011120  6EE6               	movwf	postinc1,c
  6347  011122  ECBB  F0E8         	call	_set_vterm	;wreg free
  6348                           
  6349                           ;main.c: 422:    update_lcd(V.screen);
  6350  011126  0101               	movlb	1	; () banked
  6351  011128  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6352  01112A  D002               	goto	u13920
  6353  01112C  0E01               	movlw	1
  6354  01112E  D001               	goto	u13926
  6355  011130                     u13920:
  6356  011130  0E00               	movlw	0
  6357  011132                     u13926:
  6358  011132  6EE6               	movwf	postinc1,c
  6359  011134  ECBE  F0D4         	call	_update_lcd	;wreg free
  6360                           
  6361                           ;main.c: 424:    wait_lcd_done();
  6362  011138  EC4A  F0E8         	call	_wait_lcd_done	;wreg free
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;main.c: 425:    set_dac_a(3.333);
  6366  01113C  0EDF               	movlw	223
  6367  01113E  6EE6               	movwf	postinc1,c
  6368  011140  0E4F               	movlw	79
  6369  011142  6EE6               	movwf	postinc1,c
  6370  011144  0E55               	movlw	85
  6371  011146  6EE6               	movwf	postinc1,c
  6372  011148  0E40               	movlw	64
  6373  01114A  6EE6               	movwf	postinc1,c
  6374  01114C  EC96  F0E5         	call	_set_dac_a	;wreg free
  6375                           
  6376                           ;main.c: 426:    set_dac_b(6.666);
  6377  011150  0EDF               	movlw	223
  6378  011152  6EE6               	movwf	postinc1,c
  6379  011154  0E4F               	movlw	79
  6380  011156  6EE6               	movwf	postinc1,c
  6381  011158  0ED5               	movlw	213
  6382  01115A  6EE6               	movwf	postinc1,c
  6383  01115C  0E40               	movlw	64
  6384  01115E  6EE6               	movwf	postinc1,c
  6385  011160  EC7C  F0E5         	call	_set_dac_b	;wreg free
  6386                           
  6387                           ;main.c: 427:    set_dac();
  6388  011164  ECF7  F0D9         	call	_set_dac	;wreg free
  6389  011168                     l14640:
  6390                           
  6391                           ;main.c: 433:   check_help(V.flipper);
  6392  011168  0101               	movlb	1	; () banked
  6393  01116A  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6394  01116C  6EE6               	movwf	postinc1,c
  6395  01116E  EC23  F0C5         	call	_check_help	;wreg free
  6396                           
  6397                           ;main.c: 435:   if (V.enter) {
  6398  011172  0101               	movlb	1	; () banked
  6399  011174  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6400  011176  B4D8               	btfsc	status,2,c
  6401  011178  D062               	goto	l1480
  6402                           
  6403                           ; BSR set to: 1
  6404                           ;main.c: 436:    V.enter = 0;
  6405  01117A  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6406                           
  6407                           ;main.c: 437:    V.calib = 0;
  6408  01117C  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6409                           
  6410                           ; BSR set to: 1
  6411                           ;main.c: 438:    inp_index += 3;
  6412                           ;stkvar	_inp_index @ sp[(-17)+11]
  6413  01117E  0EFA               	movlw	-6
  6414  011180  006F FF8C  F001    	movff	plusw1,btemp
  6415  011186  0E03               	movlw	3
  6416  011188  2601               	addwf	btemp^0,f,c
  6417  01118A  0EFA               	movlw	-6
  6418  01118C  0060  F007  FFE3   	movff	btemp,plusw1
  6419                           
  6420                           ;main.c: 439:    if (inp_index > 9)
  6421                           ;stkvar	_inp_index @ sp[(-17)+11]
  6422  011192  0EFA               	movlw	-6
  6423  011194  006F FF8C  F001    	movff	plusw1,btemp
  6424  01119A  0E09               	movlw	9
  6425  01119C  6401               	cpfsgt	btemp^0,c
  6426  01119E  D03A               	goto	l14668
  6427                           
  6428                           ; BSR set to: 1
  6429                           ;main.c: 440:     inp_index = 0;
  6430                           ;stkvar	_inp_index @ sp[(-17)+11]
  6431  0111A0  0EFA               	movlw	-6
  6432  0111A2  6AE3               	clrf	plusw1,c
  6433  0111A4  D037               	goto	l14668
  6434  0111A6                     l14650:
  6435                           
  6436                           ; BSR set to: 1
  6437                           ;main.c: 443:     i = C_BATT;
  6438                           ;stkvar	_i @ sp[(-17)+14]
  6439  0111A6  0EFD               	movlw	-3
  6440  0111A8  6AE3               	clrf	plusw1,c
  6441                           
  6442                           ; BSR set to: 1
  6443                           ;main.c: 444:     j = C_PV;
  6444                           ;stkvar	_j @ sp[(-17)+13]
  6445  0111AA  0EFC               	movlw	-4
  6446  0111AC  6AE3               	clrf	plusw1,c
  6447  0111AE  2AE3               	incf	plusw1,f,c
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;main.c: 445:     k = V_CC;
  6451                           ;stkvar	_k @ sp[(-17)+12]
  6452  0111B0  0EFB               	movlw	-5
  6453  0111B2  6AE3               	clrf	plusw1,c
  6454  0111B4  82E3               	bsf	plusw1,1,c
  6455                           
  6456                           ;main.c: 446:     break;
  6457  0111B6  D043               	goto	l1480
  6458  0111B8                     l14656:
  6459                           
  6460                           ; BSR set to: 1
  6461                           ;main.c: 448:     i = V_BAT;
  6462                           ;stkvar	_i @ sp[(-17)+14]
  6463  0111B8  0EFD               	movlw	-3
  6464  0111BA  6AE3               	clrf	plusw1,c
  6465  0111BC  84E3               	bsf	plusw1,2,c
  6466                           
  6467                           ;main.c: 449:     j = V_PV;
  6468                           ;stkvar	_j @ sp[(-17)+13]
  6469  0111BE  0EFC               	movlw	-4
  6470  0111C0  6AE3               	clrf	plusw1,c
  6471  0111C2  80E3               	bsf	plusw1,0,c
  6472  0111C4  84E3               	bsf	plusw1,2,c	;indir
  6473                           
  6474                           ;main.c: 450:     k = V_CBUS;
  6475                           ;stkvar	_k @ sp[(-17)+12]
  6476  0111C6  0EFB               	movlw	-5
  6477  0111C8  6AE3               	clrf	plusw1,c
  6478  0111CA  82E3               	bsf	plusw1,1,c
  6479  0111CC  84E3               	bsf	plusw1,2,c	;indir
  6480                           
  6481                           ;main.c: 451:     break;
  6482  0111CE  D037               	goto	l1480
  6483  0111D0                     l14658:
  6484                           
  6485                           ; BSR set to: 1
  6486                           ;main.c: 453:     i = V_BBAT;
  6487                           ;stkvar	_i @ sp[(-17)+14]
  6488  0111D0  0EFD               	movlw	-3
  6489  0111D2  6AE3               	clrf	plusw1,c
  6490  0111D4  82E3               	bsf	plusw1,1,c
  6491  0111D6  86E3               	bsf	plusw1,3,c	;indir
  6492                           
  6493                           ; BSR set to: 1
  6494                           ;main.c: 454:     j = V_TEMP;
  6495  0111D8  0E0B               	movlw	11
  6496  0111DA  6E0C               	movwf	(btemp+11)^0,c
  6497                           
  6498                           ;stkvar	_j @ sp[(-17)+13]
  6499  0111DC  0EFC               	movlw	-4
  6500  0111DE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6501                           
  6502                           ; BSR set to: 1
  6503                           ;main.c: 455:     k = V_INVERTER;
  6504                           ;stkvar	_k @ sp[(-17)+12]
  6505  0111E4  0EFB               	movlw	-5
  6506  0111E6  6AE3               	clrf	plusw1,c
  6507  0111E8  84E3               	bsf	plusw1,2,c
  6508  0111EA  86E3               	bsf	plusw1,3,c	;indir
  6509                           
  6510                           ;main.c: 456:     break;
  6511  0111EC  D028               	goto	l1480
  6512  0111EE                     l14664:
  6513                           
  6514                           ; BSR set to: 1
  6515                           ;main.c: 458:     i = V_LIGHT_SENSOR;
  6516  0111EE  0E0D               	movlw	13
  6517  0111F0  6E0C               	movwf	(btemp+11)^0,c
  6518                           
  6519                           ;stkvar	_i @ sp[(-17)+14]
  6520  0111F2  0EFD               	movlw	-3
  6521  0111F4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6522                           
  6523                           ;main.c: 459:     j = V_LIGHT_SENSOR;
  6524  0111FA  0E0D               	movlw	13
  6525  0111FC  6E0C               	movwf	(btemp+11)^0,c
  6526                           
  6527                           ;stkvar	_j @ sp[(-17)+13]
  6528  0111FE  0EFC               	movlw	-4
  6529  011200  0060  F033  FFE3   	movff	btemp+11,plusw1
  6530                           
  6531                           ;main.c: 460:     k = V_LIGHT_SENSOR;
  6532  011206  0E0D               	movlw	13
  6533  011208  6E0C               	movwf	(btemp+11)^0,c
  6534                           
  6535                           ;stkvar	_k @ sp[(-17)+12]
  6536  01120A  0EFB               	movlw	-5
  6537  01120C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6538                           
  6539                           ;main.c: 461:     break;
  6540  011212  D015               	goto	l1480
  6541  011214                     l14668:
  6542                           
  6543                           ; BSR set to: 1
  6544                           ;stkvar	_inp_index @ sp[(-17)+11]
  6545  011214  0EFA               	movlw	-6
  6546  011216  50E3               	movf	plusw1,w,c
  6547  011218  6E0B               	movwf	(btemp+10)^0,c
  6548  01121A  6A0C               	clrf	(btemp+11)^0,c
  6549                           
  6550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6551                           ; Switch size 1, requested type "simple"
  6552                           ; Number of cases is 1, Range of values is 0 to 0
  6553                           ; switch strategies available:
  6554                           ; Name         Instructions Cycles
  6555                           ; simple_byte            4     3 (average)
  6556                           ;	Chosen strategy is simple_byte
  6557  01121C  500C               	movf	(btemp+11)^0,w,c
  6558  01121E  0A00               	xorlw	0	; case 0
  6559  011220  A4D8               	btfss	status,2,c
  6560  011222  D00D               	goto	l1480
  6561                           
  6562                           ; BSR set to: 1
  6563                           ; Switch size 1, requested type "simple"
  6564                           ; Number of cases is 4, Range of values is 0 to 9
  6565                           ; switch strategies available:
  6566                           ; Name         Instructions Cycles
  6567                           ; simple_byte           13     7 (average)
  6568                           ;	Chosen strategy is simple_byte
  6569  011224  500B               	movf	(btemp+10)^0,w,c
  6570  011226  0A00               	xorlw	0	; case 0
  6571  011228  B4D8               	btfsc	status,2,c
  6572  01122A  D7BD               	goto	l14650
  6573  01122C  0A03               	xorlw	3	; case 3
  6574  01122E  B4D8               	btfsc	status,2,c
  6575  011230  D7C3               	goto	l14656
  6576  011232  0A05               	xorlw	5	; case 6
  6577  011234  B4D8               	btfsc	status,2,c
  6578  011236  D7CC               	goto	l14658
  6579  011238  0A0F               	xorlw	15	; case 9
  6580  01123A  B4D8               	btfsc	status,2,c
  6581  01123C  D7D8               	goto	l14664
  6582  01123E                     l1480:
  6583                           
  6584                           ; BSR set to: 1
  6585                           ;main.c: 470:   if (V.set_sequ) {
  6586  01123E  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6587  011240  EFD7  F083         	goto	l14542
  6588                           
  6589                           ; BSR set to: 1
  6590                           ;main.c: 471:    if (TimerDone(TMR_INFO)) {
  6591  011244  0E07               	movlw	7
  6592  011246  6EE6               	movwf	postinc1,c
  6593  011248  ECC5  F0E6         	call	_TimerDone	;wreg free
  6594  01124C  5001               	movf	btemp^0,w,c
  6595  01124E  B4D8               	btfsc	status,2,c
  6596  011250  D00C               	goto	l14678
  6597                           
  6598                           ;main.c: 472:     V.set_sequ = 0;
  6599  011252  0101               	movlb	1	; () banked
  6600  011254  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6601                           
  6602                           ; BSR set to: 1
  6603                           ;main.c: 473:     set_vterm(0);
  6604  011256  0E00               	movlw	0
  6605  011258  6EE6               	movwf	postinc1,c
  6606  01125A  ECBB  F0E8         	call	_set_vterm	;wreg free
  6607                           
  6608                           ;main.c: 474:     update_lcd(0);
  6609  01125E  0E00               	movlw	0
  6610  011260  6EE6               	movwf	postinc1,c
  6611  011262  ECBE  F0D4         	call	_update_lcd	;wreg free
  6612                           
  6613                           ;main.c: 475:    } else {
  6614  011266  EFD7  F083         	goto	l14542
  6615  01126A                     l14678:
  6616                           
  6617                           ;main.c: 476:     set_vterm(2);
  6618  01126A  0E02               	movlw	2
  6619  01126C  6EE6               	movwf	postinc1,c
  6620  01126E  ECBB  F0E8         	call	_set_vterm	;wreg free
  6621                           
  6622                           ;main.c: 477:     update_lcd(2);
  6623  011272  0E02               	movlw	2
  6624  011274  6EE6               	movwf	postinc1,c
  6625  011276  ECBE  F0D4         	call	_update_lcd	;wreg free
  6626  01127A  EFD7  F083         	goto	l14542
  6627  01127E                     __end_of_main:
  6628                           	opt callstack 0
  6629                           
  6630 ;; *************** function _update_cal_data *****************
  6631 ;; Defined at:
  6632 ;;		line 418 in file "daq.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;		None
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1  [STACK] void 
  6639 ;; Registers used:
  6640 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/39
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6650 ;;Total ram usage:        0 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:   15
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_main
  6657 ;; This function uses a reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text1
  6661  01D236                     __ptext1:
  6662                           	opt callstack 0
  6663  01D236                     _update_cal_data:
  6664                           	opt callstack 15
  6665                           
  6666                           ;daq.c: 420:  R = r_cal;
  6667                           
  6668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6669                           ;incstack = 0
  6670  01D236  EE20  F293         	lfsr	2,_r_cal
  6671  01D23A  EE00  F0AE         	lfsr	0,_R	;volatile
  6672  01D23E  0E38               	movlw	56
  6673  01D240                     u10971:
  6674  01D240  006F FF6F FFEB     	movff	plusw2,plusw0
  6675  01D246  06E8               	decf	wreg,f,c
  6676  01D248  E2FB               	bc	u10971
  6677                           
  6678                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  6679  01D24A  0012               	return		;funcret
  6680  01D24C                     __end_of_update_cal_data:
  6681                           	opt callstack 0
  6682                           
  6683 ;; *************** function _static_soc *****************
  6684 ;; Defined at:
  6685 ;;		line 117 in file "mbmc.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;		None
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1  [STACK] void 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr2l, fsr2h
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6703 ;;Total ram usage:        0 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:   15
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_main
  6710 ;; This function uses a reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text2
  6714  01C362                     __ptext2:
  6715                           	opt callstack 0
  6716  01C362                     _static_soc:
  6717                           	opt callstack 15
  6718                           
  6719                           ;mbmc.c: 119:  C.runtime = 120;
  6720                           
  6721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6722                           ;incstack = 0
  6723  01C362  0E78               	movlw	120
  6724  01C364  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
  6725  01C36A  0E00               	movlw	0
  6726  01C36C  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
  6727                           
  6728                           ;mbmc.c: 120:  C.soc = 100;
  6729  01C372  0E64               	movlw	100
  6730  01C374  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
  6731  01C37A  0E00               	movlw	0
  6732  01C37C  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
  6733                           
  6734                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6735  01C382  EE22  F08B         	lfsr	2,_C+140	;volatile
  6736  01C386  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
  6737  01C38C  006F FF78  F890    	movff	postinc2,_C+145	;volatile
  6738  01C392  006F FF78  F891    	movff	postinc2,_C+146	;volatile
  6739  01C398  006F FF74  F892    	movff	postdec2,_C+147	;volatile
  6740                           
  6741                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6742  01C39E  EE22  F08F         	lfsr	2,_C+144	;volatile
  6743  01C3A2  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  6744  01C3A8  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  6745  01C3AE  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  6746  01C3B4  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  6747                           
  6748                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6749  01C3BA  0012               	return		;funcret
  6750  01C3BC                     __end_of_static_soc:
  6751                           	opt callstack 0
  6752                           
  6753 ;; *************** function _start_switch_handler *****************
  6754 ;; Defined at:
  6755 ;;		line 125 in file "dio.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;		None
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;		None
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  1  [STACK] void 
  6762 ;; Registers used:
  6763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6764 ;; Tracked objects:
  6765 ;;		On entry : 1/0
  6766 ;;		On exit  : 3F/39
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6773 ;;Total ram usage:        0 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:   16
  6776 ;; This function calls:
  6777 ;;		_INT1_SetInterruptHandler
  6778 ;; This function is called by:
  6779 ;;		_main
  6780 ;; This function uses a reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text3
  6784  01D0FA                     __ptext3:
  6785                           	opt callstack 0
  6786  01D0FA                     _start_switch_handler:
  6787                           	opt callstack 14
  6788                           
  6789                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6790                           
  6791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6792                           ;incstack = 0
  6793  01D0FA  0139               	movlb	57	; () banked
  6794  01D0FC  9195               	bcf	149,0,b	;volatile
  6795                           
  6796                           ; BSR set to: 57
  6797                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6798  01D0FE  0E14               	movlw	low _switch_handler
  6799  01D100  6EE6               	movwf	postinc1,c
  6800  01D102  0E9F               	movlw	high _switch_handler
  6801  01D104  6EE6               	movwf	postinc1,c
  6802  01D106  0E01               	movlw	low (_switch_handler shr (0+16))
  6803  01D108  6EE6               	movwf	postinc1,c
  6804  01D10A  EC51  F0E7         	call	_INT1_SetInterruptHandler	;wreg free
  6805                           
  6806                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6807  01D10E  0E02               	movlw	2
  6808  01D110  0102               	movlb	2	; () banked
  6809  01D112  6F23               	movwf	(_S+35)& (0+255),b	;volatile
  6810                           
  6811                           ; BSR set to: 2
  6812                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6813  01D114  0139               	movlb	57	; () banked
  6814  01D116  8195               	bsf	149,0,b	;volatile
  6815                           
  6816                           ; BSR set to: 57
  6817                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6818  01D118  0012               	return		;funcret
  6819  01D11A                     __end_of_start_switch_handler:
  6820                           	opt callstack 0
  6821                           
  6822 ;; *************** function _srand *****************
  6823 ;; Defined at:
  6824 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  s               2  [STACK] unsigned int 
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;		None
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1  [STACK] void 
  6831 ;; Registers used:
  6832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 3F/2
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6842 ;;Total ram usage:        0 bytes
  6843 ;; Hardware stack levels used:    1
  6844 ;; Hardware stack levels required when called:   15
  6845 ;; This function calls:
  6846 ;;		Nothing
  6847 ;; This function is called by:
  6848 ;;		_main
  6849 ;; This function uses a reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text4
  6853  01CAC4                     __ptext4:
  6854                           	opt callstack 0
  6855  01CAC4                     _srand:
  6856                           	opt callstack 15
  6857                           
  6858                           ;stkvar	_s @ sp[(0)+-2]
  6859                           
  6860                           ; BSR set to: 57
  6861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6862                           ;incstack = 0
  6863  01CAC4  0EFE               	movlw	-2
  6864  01CAC6  50E3               	movf	plusw1,w,c
  6865  01CAC8  0FFF               	addlw	255
  6866  01CACA  6E0B               	movwf	(btemp+10)^0,c
  6867  01CACC  0EFF               	movlw	-1
  6868  01CACE  006F FF8C  F00C    	movff	plusw1,btemp+11
  6869  01CAD4  0EFF               	movlw	255
  6870  01CAD6  220C               	addwfc	(btemp+11)^0,f,c
  6871  01CAD8  0060  F02C  F2CC   	movff	btemp+10,_seed
  6872  01CADE  0060  F030  F2CD   	movff	btemp+11,_seed+1
  6873  01CAE4  0102               	movlb	2	; () banked
  6874  01CAE6  6BCE               	clrf	(_seed+2)& (0+255),b
  6875  01CAE8  6BCF               	clrf	(_seed+3)& (0+255),b
  6876  01CAEA  6BD0               	clrf	(_seed+4)& (0+255),b
  6877  01CAEC  6BD1               	clrf	(_seed+5)& (0+255),b
  6878  01CAEE  6BD2               	clrf	(_seed+6)& (0+255),b
  6879  01CAF0  6BD3               	clrf	(_seed+7)& (0+255),b
  6880                           
  6881                           ; BSR set to: 2
  6882                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6883  01CAF2  52E5               	movf	postdec1,f,c
  6884  01CAF4  52E5               	movf	postdec1,f,c
  6885  01CAF6  0012               	return		;funcret
  6886  01CAF8                     __end_of_srand:
  6887                           	opt callstack 0
  6888                           
  6889 ;; *************** function _set_dac_b *****************
  6890 ;; Defined at:
  6891 ;;		line 301 in file "daq.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  voltage         4  [STACK] const float 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  2  [STACK] unsigned short 
  6898 ;; Registers used:
  6899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6909 ;;Total ram usage:        0 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; Hardware stack levels required when called:   17
  6912 ;; This function calls:
  6913 ;;		_convert_dac_raw
  6914 ;; This function is called by:
  6915 ;;		_main
  6916 ;; This function uses a reentrant model
  6917 ;;
  6918                           
  6919                           	psect	text5
  6920  01CAF8                     __ptext5:
  6921                           	opt callstack 0
  6922  01CAF8                     _set_dac_b:
  6923                           	opt callstack 13
  6924                           
  6925                           ;daq.c: 301: uint16_t set_dac_b(const float voltage);daq.c: 302: {;daq.c: 303:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6926                           ;stkvar	_voltage @ sp[(0)+-4]
  6927                           
  6928                           ; BSR set to: 2
  6929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6930                           ;incstack = 0
  6931  01CAF8  0EFC               	movlw	-4
  6932  01CAFA  006F FF8F FFE6     	movff	plusw1,postinc1
  6933  01CB00  006F FF8F FFE6     	movff	plusw1,postinc1
  6934  01CB06  006F FF8F FFE6     	movff	plusw1,postinc1
  6935  01CB0C  006F FF8F FFE6     	movff	plusw1,postinc1
  6936  01CB12  EC90  F0D2         	call	_convert_dac_raw	;wreg free
  6937  01CB16  0060  F004  F0D0   	movff	btemp,_R+34	;volatile
  6938  01CB1C  0060  F008  F0D1   	movff	btemp+1,_R+35	;volatile
  6939                           
  6940                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6941                           
  6942                           ;daq.c: 304:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6943  01CB22  52E5               	movf	postdec1,f,c
  6944  01CB24  52E5               	movf	postdec1,f,c
  6945  01CB26  52E5               	movf	postdec1,f,c
  6946  01CB28  52E5               	movf	postdec1,f,c
  6947  01CB2A  0012               	return		;funcret
  6948  01CB2C                     __end_of_set_dac_b:
  6949                           	opt callstack 0
  6950                           
  6951 ;; *************** function _set_dac_a *****************
  6952 ;; Defined at:
  6953 ;;		line 292 in file "daq.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  voltage         4  [STACK] const float 
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;		None
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  2  [STACK] unsigned short 
  6960 ;; Registers used:
  6961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6962 ;; Tracked objects:
  6963 ;;		On entry : 3F/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6971 ;;Total ram usage:        0 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:   17
  6974 ;; This function calls:
  6975 ;;		_convert_dac_raw
  6976 ;; This function is called by:
  6977 ;;		_main
  6978 ;; This function uses a reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text6
  6982  01CB2C                     __ptext6:
  6983                           	opt callstack 0
  6984  01CB2C                     _set_dac_a:
  6985                           	opt callstack 13
  6986                           
  6987                           ;daq.c: 292: uint16_t set_dac_a(const float voltage);daq.c: 293: {;daq.c: 294:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6988                           ;stkvar	_voltage @ sp[(0)+-4]
  6989                           
  6990                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6991                           ;incstack = 0
  6992  01CB2C  0EFC               	movlw	-4
  6993  01CB2E  006F FF8F FFE6     	movff	plusw1,postinc1
  6994  01CB34  006F FF8F FFE6     	movff	plusw1,postinc1
  6995  01CB3A  006F FF8F FFE6     	movff	plusw1,postinc1
  6996  01CB40  006F FF8F FFE6     	movff	plusw1,postinc1
  6997  01CB46  EC90  F0D2         	call	_convert_dac_raw	;wreg free
  6998  01CB4A  0060  F004  F0CE   	movff	btemp,_R+32	;volatile
  6999  01CB50  0060  F008  F0CF   	movff	btemp+1,_R+33	;volatile
  7000                           
  7001                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7002                           
  7003                           ;daq.c: 295:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7004  01CB56  52E5               	movf	postdec1,f,c
  7005  01CB58  52E5               	movf	postdec1,f,c
  7006  01CB5A  52E5               	movf	postdec1,f,c
  7007  01CB5C  52E5               	movf	postdec1,f,c
  7008  01CB5E  0012               	return		;funcret
  7009  01CB60                     __end_of_set_dac_a:
  7010                           	opt callstack 0
  7011                           
  7012 ;; *************** function _convert_dac_raw *****************
  7013 ;; Defined at:
  7014 ;;		line 274 in file "daq.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  voltage         4  [STACK] float 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  2  [STACK] unsigned short 
  7021 ;; Registers used:
  7022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7032 ;;Total ram usage:        0 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; Hardware stack levels required when called:   16
  7035 ;; This function calls:
  7036 ;;		___fldiv
  7037 ;;		___flge
  7038 ;;		___fltol
  7039 ;; This function is called by:
  7040 ;;		_set_dac_a
  7041 ;;		_set_dac_b
  7042 ;; This function uses a reentrant model
  7043 ;;
  7044                           
  7045                           	psect	text7
  7046  01A520                     __ptext7:
  7047                           	opt callstack 0
  7048  01A520                     _convert_dac_raw:
  7049                           	opt callstack 13
  7050                           
  7051                           ;daq.c: 274: static uint16_t convert_dac_raw(float voltage);daq.c: 275: {;daq.c: 279:  i
      +                          f (voltage < 0.001)
  7052                           
  7053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7054                           ;incstack = 0
  7055  01A520  0E6F               	movlw	111
  7056  01A522  6EE6               	movwf	postinc1,c
  7057  01A524  0E12               	movlw	18
  7058  01A526  6EE6               	movwf	postinc1,c
  7059  01A528  0E83               	movlw	131
  7060  01A52A  6EE6               	movwf	postinc1,c
  7061  01A52C  0E3A               	movlw	58
  7062  01A52E  6EE6               	movwf	postinc1,c
  7063                           
  7064                           ;stkvar	_voltage @ sp[(-4)+-4]
  7065  01A530  0EF8               	movlw	-8
  7066  01A532  006F FF8F FFE6     	movff	plusw1,postinc1
  7067  01A538  006F FF8F FFE6     	movff	plusw1,postinc1
  7068  01A53E  006F FF8F FFE6     	movff	plusw1,postinc1
  7069  01A544  006F FF8F FFE6     	movff	plusw1,postinc1
  7070  01A54A  EC81  F0CD         	call	___flge	;wreg free
  7071  01A54E  B001               	btfsc	btemp& (0+255),0,c
  7072  01A550  D018               	goto	l11498
  7073                           
  7074                           ;daq.c: 280:   voltage = 0.001;
  7075  01A552  0E6F               	movlw	111
  7076  01A554  6E09               	movwf	(btemp+8)^0,c
  7077  01A556  0E12               	movlw	18
  7078  01A558  6E0A               	movwf	(btemp+9)^0,c
  7079  01A55A  0E83               	movlw	131
  7080  01A55C  6E0B               	movwf	(btemp+10)^0,c
  7081  01A55E  0E3A               	movlw	58
  7082  01A560  6E0C               	movwf	(btemp+11)^0,c
  7083                           
  7084                           ;stkvar	_voltage @ sp[(0)+-4]
  7085  01A562  0EFC               	movlw	-4
  7086  01A564  0060  F027  FFE3   	movff	btemp+8,plusw1
  7087  01A56A  0EFD               	movlw	-3
  7088  01A56C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7089  01A572  0EFE               	movlw	-2
  7090  01A574  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7091  01A57A  0EFF               	movlw	-1
  7092  01A57C  0060  F033  FFE3   	movff	btemp+11,plusw1
  7093  01A582                     l11498:
  7094                           
  7095                           ;daq.c: 281:  if (voltage > 10.0)
  7096                           ;stkvar	_voltage @ sp[(0)+-4]
  7097  01A582  0EFC               	movlw	-4
  7098  01A584  006F FF8F FFE6     	movff	plusw1,postinc1
  7099  01A58A  006F FF8F FFE6     	movff	plusw1,postinc1
  7100  01A590  006F FF8F FFE6     	movff	plusw1,postinc1
  7101  01A596  006F FF8F FFE6     	movff	plusw1,postinc1
  7102  01A59C  0E00               	movlw	0
  7103  01A59E  6EE6               	movwf	postinc1,c
  7104  01A5A0  0E00               	movlw	0
  7105  01A5A2  6EE6               	movwf	postinc1,c
  7106  01A5A4  0E20               	movlw	32
  7107  01A5A6  6EE6               	movwf	postinc1,c
  7108  01A5A8  0E41               	movlw	65
  7109  01A5AA  6EE6               	movwf	postinc1,c
  7110  01A5AC  EC81  F0CD         	call	___flge	;wreg free
  7111  01A5B0  B001               	btfsc	btemp& (0+255),0,c
  7112  01A5B2  D018               	goto	l11502
  7113                           
  7114                           ;daq.c: 282:   voltage = 10.0;
  7115  01A5B4  0E00               	movlw	0
  7116  01A5B6  6E09               	movwf	(btemp+8)^0,c
  7117  01A5B8  0E00               	movlw	0
  7118  01A5BA  6E0A               	movwf	(btemp+9)^0,c
  7119  01A5BC  0E20               	movlw	32
  7120  01A5BE  6E0B               	movwf	(btemp+10)^0,c
  7121  01A5C0  0E41               	movlw	65
  7122  01A5C2  6E0C               	movwf	(btemp+11)^0,c
  7123                           
  7124                           ;stkvar	_voltage @ sp[(0)+-4]
  7125  01A5C4  0EFC               	movlw	-4
  7126  01A5C6  0060  F027  FFE3   	movff	btemp+8,plusw1
  7127  01A5CC  0EFD               	movlw	-3
  7128  01A5CE  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7129  01A5D4  0EFE               	movlw	-2
  7130  01A5D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7131  01A5DC  0EFF               	movlw	-1
  7132  01A5DE  0060  F033  FFE3   	movff	btemp+11,plusw1
  7133  01A5E4                     l11502:
  7134                           
  7135                           ;daq.c: 286:  return(uint16_t) (voltage / 0.002442);
  7136  01A5E4  0EF6               	movlw	246
  7137  01A5E6  6EE6               	movwf	postinc1,c
  7138  01A5E8  0E09               	movlw	9
  7139  01A5EA  6EE6               	movwf	postinc1,c
  7140  01A5EC  0E20               	movlw	32
  7141  01A5EE  6EE6               	movwf	postinc1,c
  7142  01A5F0  0E3B               	movlw	59
  7143  01A5F2  6EE6               	movwf	postinc1,c
  7144                           
  7145                           ;stkvar	_voltage @ sp[(-4)+-4]
  7146  01A5F4  0EF8               	movlw	-8
  7147  01A5F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7148  01A5FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7149  01A602  006F FF8F FFE6     	movff	plusw1,postinc1
  7150  01A608  006F FF8F FFE6     	movff	plusw1,postinc1
  7151  01A60E  EC61  F0A7         	call	___fldiv	;wreg free
  7152  01A612  0060  F007  FFE6   	movff	btemp,postinc1
  7153  01A618  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7154  01A61E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7155  01A624  0060  F013  FFE6   	movff	btemp+3,postinc1
  7156  01A62A  ECC8  F0CC         	call	___fltol	;wreg free
  7157                           
  7158                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7159  01A62E  52E5               	movf	postdec1,f,c
  7160  01A630  52E5               	movf	postdec1,f,c
  7161  01A632  52E5               	movf	postdec1,f,c
  7162  01A634  52E5               	movf	postdec1,f,c
  7163  01A636  0012               	return		;funcret
  7164  01A638                     __end_of_convert_dac_raw:
  7165                           	opt callstack 0
  7166                           
  7167 ;; *************** function _set_dac *****************
  7168 ;; Defined at:
  7169 ;;		line 250 in file "daq.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1  [STACK] void 
  7176 ;; Registers used:
  7177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7187 ;;Total ram usage:        0 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:   16
  7190 ;; This function calls:
  7191 ;;		_SPI1_Exchange8bit
  7192 ;;		_dac_spi_control
  7193 ;; This function is called by:
  7194 ;;		_main
  7195 ;; This function uses a reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text8
  7199  01B3EE                     __ptext8:
  7200                           	opt callstack 0
  7201  01B3EE                     _set_dac:
  7202                           	opt callstack 14
  7203                           
  7204                           ;daq.c: 252:  while (!SPI1STATUSbits.TXBE);
  7205                           
  7206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7207                           ;incstack = 0
  7208  01B3EE  013D               	movlb	61	; () banked
  7209  01B3F0  AB17               	btfss	23,5,b	;volatile
  7210  01B3F2  D7FD               	goto	_set_dac
  7211                           
  7212                           ; BSR set to: 61
  7213                           
  7214                           ;daq.c: 253:  do { LATCbits.LATC2 = 1; } while(0);
  7215  01B3F4  84BC               	bsf	188,2,c	;volatile
  7216                           
  7217                           ; BSR set to: 61
  7218                           
  7219                           ;daq.c: 254:  do { LATCbits.LATC0 = 1; } while(0);
  7220  01B3F6  80BC               	bsf	188,0,c	;volatile
  7221                           
  7222                           ; BSR set to: 61
  7223                           ;daq.c: 255:  dac_spi_control(1);
  7224  01B3F8  0E01               	movlw	1
  7225  01B3FA  6EE6               	movwf	postinc1,c
  7226  01B3FC  EC01  F0DF         	call	_dac_spi_control	;wreg free
  7227                           
  7228                           ;daq.c: 256:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7229  01B400  C0CE  F0D2         	movff	_R+32,_R+36	;volatile
  7230                           
  7231                           ;daq.c: 257:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7232  01B404  EE20  F0CE         	lfsr	2,_R+32	;volatile
  7233  01B408  006F FF78  F00B    	movff	postinc2,btemp+10
  7234  01B40E  006F FF74  F00C    	movff	postdec2,btemp+11
  7235  01B414  0060  F030  F00B   	movff	btemp+11,btemp+10
  7236  01B41A  6A0C               	clrf	(btemp+11)^0,c
  7237  01B41C  0E0F               	movlw	15
  7238  01B41E  160B               	andwf	(btemp+10)^0,f,c
  7239  01B420  0100               	movlb	0	; () banked
  7240  01B422  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7241  01B424  180B               	xorwf	(btemp+10)^0,w,c
  7242  01B426  0BF0               	andlw	-16
  7243  01B428  180B               	xorwf	(btemp+10)^0,w,c
  7244  01B42A  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;daq.c: 258:  R.max5322_cmd.map.cont = 0b0100;
  7248  01B42C  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7249  01B42E  0B0F               	andlw	-241
  7250  01B430  0940               	iorlw	64
  7251  01B432  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7252                           
  7253                           ; BSR set to: 0
  7254  01B434  90BF               	bcf	191,0,c	;volatile
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;daq.c: 260:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7258  01B436  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7259  01B438  6EE6               	movwf	postinc1,c
  7260  01B43A  EC9D  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7261                           
  7262                           ; BSR set to: 57
  7263                           ;daq.c: 261:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7264  01B43E  0100               	movlb	0	; () banked
  7265  01B440  51D2               	movf	(_R+36)& (0+255),w,b	;volatile
  7266  01B442  6EE6               	movwf	postinc1,c
  7267  01B444  EC9D  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7268                           
  7269                           ; BSR set to: 57
  7270  01B448  80BF               	bsf	191,0,c	;volatile
  7271                           
  7272                           ; BSR set to: 57
  7273                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7274  01B44A  C0D0  F0D2         	movff	_R+34,_R+36	;volatile
  7275                           
  7276                           ; BSR set to: 57
  7277                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7278  01B44E  EE20  F0D0         	lfsr	2,_R+34	;volatile
  7279  01B452  006F FF78  F00B    	movff	postinc2,btemp+10
  7280  01B458  006F FF74  F00C    	movff	postdec2,btemp+11
  7281  01B45E  0060  F030  F00B   	movff	btemp+11,btemp+10
  7282  01B464  6A0C               	clrf	(btemp+11)^0,c
  7283  01B466  0E0F               	movlw	15
  7284  01B468  160B               	andwf	(btemp+10)^0,f,c
  7285  01B46A  0100               	movlb	0	; () banked
  7286  01B46C  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7287  01B46E  180B               	xorwf	(btemp+10)^0,w,c
  7288  01B470  0BF0               	andlw	-16
  7289  01B472  180B               	xorwf	(btemp+10)^0,w,c
  7290  01B474  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0101;
  7294  01B476  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7295  01B478  0B0F               	andlw	-241
  7296  01B47A  0950               	iorlw	80
  7297  01B47C  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7298                           
  7299                           ; BSR set to: 0
  7300  01B47E  90BF               	bcf	191,0,c	;volatile
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7304  01B480  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7305  01B482  6EE6               	movwf	postinc1,c
  7306  01B484  EC9D  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7307                           
  7308                           ; BSR set to: 57
  7309                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7310  01B488  0100               	movlb	0	; () banked
  7311  01B48A  51D2               	movf	(_R+36)& (0+255),w,b	;volatile
  7312  01B48C  6EE6               	movwf	postinc1,c
  7313  01B48E  EC9D  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7314  01B492                     l2004:
  7315  01B492  013D               	movlb	61	; () banked
  7316  01B494  AB17               	btfss	23,5,b	;volatile
  7317  01B496  D7FD               	goto	l2004
  7318                           
  7319                           ; BSR set to: 61
  7320                           
  7321                           ;daq.c: 270:  do { LATFbits.LATF0 = 1; } while(0);
  7322  01B498  80BF               	bsf	191,0,c	;volatile
  7323                           
  7324                           ; BSR set to: 61
  7325                           ;daq.c: 271:  dac_spi_control(0);
  7326  01B49A  0E00               	movlw	0
  7327  01B49C  6EE6               	movwf	postinc1,c
  7328  01B49E  EC01  F0DF         	call	_dac_spi_control	;wreg free
  7329                           
  7330                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7331  01B4A2  0012               	return		;funcret
  7332  01B4A4                     __end_of_set_dac:
  7333                           	opt callstack 0
  7334                           
  7335 ;; *************** function _dac_spi_control *****************
  7336 ;; Defined at:
  7337 ;;		line 202 in file "daq.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  set             1  [STACK] _Bool 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;		None
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1  [STACK] void 
  7344 ;; Registers used:
  7345 ;;		wreg, fsr1l, fsr1h, status,2
  7346 ;; Tracked objects:
  7347 ;;		On entry : 3F/3D
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7355 ;;Total ram usage:        0 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:   15
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_set_dac
  7362 ;; This function uses a reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text9
  7366  01BE02                     __ptext9:
  7367                           	opt callstack 0
  7368  01BE02                     _dac_spi_control:
  7369                           	opt callstack 14
  7370                           
  7371                           ;daq.c: 202: void dac_spi_control(_Bool set);daq.c: 203: {;daq.c: 204:  static _Bool ini
      +                          t = 0;;daq.c: 205:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 207:  if (set) {
  7372                           ;stkvar	_set @ sp[(0)+-1]
  7373                           
  7374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7375                           ;incstack = 0
  7376  01BE02  0EFF               	movlw	-1
  7377  01BE04  50E3               	movf	plusw1,w,c
  7378  01BE06  B4D8               	btfsc	status,2,c
  7379  01BE08  D022               	goto	l11490
  7380                           
  7381                           ;daq.c: 208:   SPI1CON0bits.EN = 0;
  7382  01BE0A  013D               	movlb	61	; () banked
  7383  01BE0C  9F14               	bcf	20,7,b	;volatile
  7384                           
  7385                           ; BSR set to: 61
  7386                           ;daq.c: 209:   if (!init) {
  7387  01BE0E  5043               	movf	dac_spi_control@init^0,w,c
  7388  01BE10  A4D8               	btfss	status,2,c
  7389  01BE12  D011               	goto	l11478
  7390                           
  7391                           ; BSR set to: 61
  7392                           ;daq.c: 210:    init = 1;
  7393  01BE14  0E01               	movlw	1
  7394  01BE16  6E43               	movwf	dac_spi_control@init^0,c
  7395                           
  7396                           ; BSR set to: 61
  7397                           ;daq.c: 211:    S0 = SPI1CON0;
  7398  01BE18  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7399                           
  7400                           ; BSR set to: 61
  7401                           ;daq.c: 212:    S1 = SPI1CON1;
  7402  01BE1E  006F F454  F0A4    	movff	15637,dac_spi_control@S1	;volatile
  7403                           
  7404                           ; BSR set to: 61
  7405                           ;daq.c: 213:    S2 = SPI1CON2;
  7406  01BE24  006F F458  F0A3    	movff	15638,dac_spi_control@S2	;volatile
  7407                           
  7408                           ; BSR set to: 61
  7409                           ;daq.c: 214:    SC = SPI1CLK;
  7410  01BE2A  006F F470  F0A2    	movff	15644,dac_spi_control@SC	;volatile
  7411                           
  7412                           ; BSR set to: 61
  7413                           ;daq.c: 215:    SB = SPI1BAUD;
  7414  01BE30  006F F464  F0A1    	movff	15641,dac_spi_control@SB	;volatile
  7415  01BE36                     l11478:
  7416                           
  7417                           ; BSR set to: 61
  7418                           ;daq.c: 221:   SPI1CON1 = 0x00;
  7419  01BE36  6B15               	clrf	21,b	;volatile
  7420                           
  7421                           ; BSR set to: 61
  7422                           ;daq.c: 222:   SPI1CON1bits.CKE = 1;
  7423  01BE38  8D15               	bsf	21,6,b	;volatile
  7424                           
  7425                           ; BSR set to: 61
  7426                           ;daq.c: 223:   SPI1CON1bits.CKP = 0;
  7427  01BE3A  9B15               	bcf	21,5,b	;volatile
  7428                           
  7429                           ; BSR set to: 61
  7430                           ;daq.c: 224:   SPI1CON1bits.SMP = 0;
  7431  01BE3C  9F15               	bcf	21,7,b	;volatile
  7432                           
  7433                           ;daq.c: 226:   SPI1CON2 = 0x03;
  7434  01BE3E  0E03               	movlw	3
  7435  01BE40  6F16               	movwf	22,b	;volatile
  7436                           
  7437                           ;daq.c: 228:   SPI1BAUD = 0x0f;
  7438  01BE42  0E0F               	movlw	15
  7439  01BE44  6F19               	movwf	25,b	;volatile
  7440                           
  7441                           ; BSR set to: 61
  7442                           ;daq.c: 230:   SPI1CLK = 0x00;
  7443  01BE46  6B1C               	clrf	28,b	;volatile
  7444                           
  7445                           ;daq.c: 232:   SPI1CON0 = 0x83;
  7446  01BE48  0E83               	movlw	131
  7447  01BE4A  6F14               	movwf	20,b	;volatile
  7448  01BE4C  D014               	goto	L3
  7449  01BE4E                     l11490:
  7450                           
  7451                           ;daq.c: 235:   if (init) {
  7452  01BE4E  5043               	movf	dac_spi_control@init^0,w,c
  7453  01BE50  B4D8               	btfsc	status,2,c
  7454  01BE52  D012               	goto	l1988
  7455                           
  7456                           ;daq.c: 239:    SPI1CON0bits.EN = 0;
  7457  01BE54  013D               	movlb	61	; () banked
  7458  01BE56  9F14               	bcf	20,7,b	;volatile
  7459                           
  7460                           ;daq.c: 240:    SPI1CON1 = S1;
  7461  01BE58  0060  F293  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7462                           
  7463                           ;daq.c: 241:    SPI1CON2 = S2;
  7464  01BE5E  0060  F28F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7465                           
  7466                           ;daq.c: 242:    SPI1CLK = SC;
  7467  01BE64  0060  F28B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7468                           
  7469                           ;daq.c: 243:    SPI1BAUD = SB;
  7470  01BE6A  0060  F287  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7471                           
  7472                           ;daq.c: 244:    SPI1CON0 = S0;
  7473  01BE70  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7474  01BE76                     L3:
  7475                           
  7476                           ;daq.c: 245:    SPI1CON0bits.EN = 1;
  7477  01BE76  8F14               	bsf	20,7,b	;volatile
  7478  01BE78                     l1988:
  7479                           
  7480                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7481  01BE78  52E5               	movf	postdec1,f,c
  7482  01BE7A  0012               	return		;funcret
  7483  01BE7C                     __end_of_dac_spi_control:
  7484                           	opt callstack 0
  7485                           
  7486 ;; *************** function _read_cal_data *****************
  7487 ;; Defined at:
  7488 ;;		line 351 in file "daq.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;		None
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  x               2  [STACK] unsigned short 
  7493 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  7494 ;;		 -> r_cal(57), 
  7495 ;;  y               2  [STACK] unsigned short 
  7496 ;;  crcVal_save     1  [STACK] unsigned char 
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1  [STACK] _Bool 
  7499 ;; Registers used:
  7500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/39
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7510 ;;Total ram usage:        0 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:   17
  7513 ;; This function calls:
  7514 ;;		_CRC_8BitDataWrite
  7515 ;;		_CRC_CalculatedResultGet
  7516 ;;		_CRC_Initialize
  7517 ;;		_CRC_IsBusy
  7518 ;;		_CRC_Start
  7519 ;;		_DATAEE_ReadByte
  7520 ;; This function is called by:
  7521 ;;		_main
  7522 ;; This function uses a reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text10
  7526  018E5C                     __ptext10:
  7527                           	opt callstack 0
  7528  018E5C                     _read_cal_data:
  7529                           	opt callstack 0
  7530                           
  7531                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7532  018E5C  0E07               	movlw	7
  7533  018E5E  26E1               	addwf	fsr1l,f,c
  7534  018E60  0E00               	movlw	0
  7535  018E62  22E2               	addwfc	fsr1h,f,c
  7536                           
  7537                           ;daq.c: 353:  uint16_t x = 0, y;
  7538                           ;stkvar	_x @ sp[(-7)+0]
  7539                           
  7540                           ;incstack = 0
  7541  018E64  0EF9               	movlw	-7
  7542  018E66  6AE3               	clrf	plusw1,c
  7543  018E68  0EFA               	movlw	-6
  7544  018E6A  6AE3               	clrf	plusw1,c
  7545                           
  7546                           ;daq.c: 354:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 356:  y = sizeof(r_cal);
  7547  018E6C  0E39               	movlw	57
  7548  018E6E  6E0B               	movwf	(btemp+10)^0,c
  7549  018E70  0E00               	movlw	0
  7550  018E72  6E0C               	movwf	(btemp+11)^0,c
  7551                           
  7552                           ;stkvar	_y @ sp[(-7)+4]
  7553  018E74  0EFD               	movlw	-3
  7554  018E76  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7555  018E7C  0EFE               	movlw	-2
  7556  018E7E  0060  F033  FFE3   	movff	btemp+11,plusw1
  7557                           
  7558                           ;daq.c: 357:  r_cal_ptr = (uint8_t*) & r_cal;
  7559                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7560  018E84  0E02               	movlw	high _r_cal
  7561  018E86  6E01               	movwf	btemp^0,c
  7562  018E88  0EFC               	movlw	-4
  7563  018E8A  0060  F007  FFE3   	movff	btemp,plusw1
  7564  018E90  0E93               	movlw	low _r_cal
  7565  018E92  6E01               	movwf	btemp^0,c
  7566  018E94  0EFB               	movlw	-5
  7567  018E96  0060  F007  FFE3   	movff	btemp,plusw1
  7568                           
  7569                           ;daq.c: 359:  CRC_Initialize();
  7570  018E9C  EC2A  F0DD         	call	_CRC_Initialize	;wreg free
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;daq.c: 362:  CRC_Start();
  7574  018EA0  ECDF  F0E9         	call	_CRC_Start	;wreg free
  7575  018EA4                     l11924:
  7576                           
  7577                           ;daq.c: 365:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  7578                           ;stkvar	_x @ sp[(-7)+0]
  7579  018EA4  0EF9               	movlw	-7
  7580  018EA6  006F FF8F FFE6     	movff	plusw1,postinc1
  7581  018EAC  006F FF8F FFE6     	movff	plusw1,postinc1
  7582  018EB2  ECCA  F0E5         	call	_DATAEE_ReadByte	;wreg free
  7583                           
  7584                           ;stkvar	_x @ sp[(-7)+0]
  7585  018EB6  0EF9               	movlw	-7
  7586  018EB8  006F FF8C  F00B    	movff	plusw1,btemp+10
  7587  018EBE  0EFA               	movlw	-6
  7588  018EC0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7589                           
  7590                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7591  018EC6  0EFB               	movlw	-5
  7592  018EC8  006F FF8C  F009    	movff	plusw1,btemp+8
  7593  018ECE  0EFC               	movlw	-4
  7594  018ED0  006F FF8C  F00A    	movff	plusw1,btemp+9
  7595  018ED6  500B               	movf	(btemp+10)^0,w,c
  7596  018ED8  2409               	addwf	(btemp+8)^0,w,c
  7597  018EDA  6ED9               	movwf	fsr2l,c
  7598  018EDC  500C               	movf	(btemp+11)^0,w,c
  7599  018EDE  200A               	addwfc	(btemp+9)^0,w,c
  7600  018EE0  6EDA               	movwf	fsr2h,c
  7601  018EE2  0060  F007  FFDF   	movff	btemp,indf2
  7602                           
  7603                           ;daq.c: 366:  } while (++x < y);
  7604                           ;stkvar	_y @ sp[(-7)+4]
  7605  018EE8  0EFD               	movlw	-3
  7606  018EEA  006F FF8C  F00B    	movff	plusw1,btemp+10
  7607  018EF0  0EFE               	movlw	-2
  7608  018EF2  006F FF8C  F00C    	movff	plusw1,btemp+11
  7609                           
  7610                           ;stkvar	_x @ sp[(-7)+0]
  7611  018EF8  0EF9               	movlw	-7
  7612  018EFA  50E3               	movf	plusw1,w,c
  7613  018EFC  0F01               	addlw	1
  7614  018EFE  6E01               	movwf	btemp^0,c
  7615  018F00  0EF9               	movlw	-7
  7616  018F02  0060  F007  FFE3   	movff	btemp,plusw1
  7617  018F08  6A01               	clrf	btemp^0,c
  7618  018F0A  0EFA               	movlw	-6
  7619  018F0C  50E3               	movf	plusw1,w,c
  7620  018F0E  2001               	addwfc	btemp^0,w,c
  7621  018F10  6E01               	movwf	btemp^0,c
  7622  018F12  0EFA               	movlw	-6
  7623  018F14  0060  F007  FFE3   	movff	btemp,plusw1
  7624  018F1A  0EF9               	movlw	-7
  7625  018F1C  006F FF8C  F009    	movff	plusw1,btemp+8
  7626  018F22  0EFA               	movlw	-6
  7627  018F24  006F FF8C  F00A    	movff	plusw1,btemp+9
  7628  018F2A  500B               	movf	(btemp+10)^0,w,c
  7629  018F2C  5C09               	subwf	(btemp+8)^0,w,c
  7630  018F2E  500C               	movf	(btemp+11)^0,w,c
  7631  018F30  580A               	subwfb	(btemp+9)^0,w,c
  7632  018F32  A0D8               	btfss	status,0,c
  7633  018F34  D7B7               	goto	l11924
  7634                           
  7635                           ;daq.c: 367:  crcVal_save = r_cal.crc;
  7636                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7637  018F36  0EFF               	movlw	-1
  7638  018F38  0060  FB2F  FFE3   	movff	_r_cal+56,plusw1
  7639                           
  7640                           ;daq.c: 369:  if (r_cal.checkmark == 0x1957) {
  7641  018F3E  0E57               	movlw	87
  7642  018F40  0102               	movlb	2	; () banked
  7643  018F42  19C9               	xorwf	(_r_cal+54)& (0+255),w,b
  7644  018F44  E163               	bnz	l11944
  7645  018F46  0E19               	movlw	25
  7646  018F48  19CA               	xorwf	(_r_cal+55)& (0+255),w,b
  7647  018F4A  A4D8               	btfss	status,2,c
  7648  018F4C  D05F               	goto	u10960
  7649                           
  7650                           ; BSR set to: 2
  7651                           ;daq.c: 370:   r_cal.crc = 0x42;
  7652  018F4E  0E42               	movlw	66
  7653  018F50  6FCB               	movwf	(_r_cal+56)& (0+255),b
  7654                           
  7655                           ; BSR set to: 2
  7656                           ;daq.c: 371:   x = 0;
  7657                           ;stkvar	_x @ sp[(-7)+0]
  7658  018F52  0EF9               	movlw	-7
  7659  018F54  6AE3               	clrf	plusw1,c
  7660  018F56  0EFA               	movlw	-6
  7661  018F58  6AE3               	clrf	plusw1,c
  7662  018F5A                     l11936:
  7663                           
  7664                           ;daq.c: 374:    CRC_8BitDataWrite(r_cal_ptr[x]);
  7665                           ;stkvar	_x @ sp[(-7)+0]
  7666  018F5A  0EF9               	movlw	-7
  7667  018F5C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7668  018F62  0EFA               	movlw	-6
  7669  018F64  006F FF8C  F00C    	movff	plusw1,btemp+11
  7670                           
  7671                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7672  018F6A  0EFB               	movlw	-5
  7673  018F6C  006F FF8C  F009    	movff	plusw1,btemp+8
  7674  018F72  0EFC               	movlw	-4
  7675  018F74  006F FF8C  F00A    	movff	plusw1,btemp+9
  7676  018F7A  500B               	movf	(btemp+10)^0,w,c
  7677  018F7C  2409               	addwf	(btemp+8)^0,w,c
  7678  018F7E  6ED9               	movwf	fsr2l,c
  7679  018F80  500C               	movf	(btemp+11)^0,w,c
  7680  018F82  200A               	addwfc	(btemp+9)^0,w,c
  7681  018F84  6EDA               	movwf	fsr2h,c
  7682  018F86  50DF               	movf	indf2,w,c
  7683  018F88  6EE6               	movwf	postinc1,c
  7684  018F8A  EC51  F0E9         	call	_CRC_8BitDataWrite	;wreg free
  7685  018F8E                     l11938:
  7686  018F8E  EC73  F0E9         	call	_CRC_IsBusy	;wreg free
  7687  018F92  5001               	movf	btemp^0,w,c
  7688  018F94  A4D8               	btfss	status,2,c
  7689  018F96  D7FB               	goto	l11938
  7690                           
  7691                           ;daq.c: 376:   } while (++x < y);
  7692                           ;stkvar	_y @ sp[(-7)+4]
  7693  018F98  0EFD               	movlw	-3
  7694  018F9A  006F FF8C  F00B    	movff	plusw1,btemp+10
  7695  018FA0  0EFE               	movlw	-2
  7696  018FA2  006F FF8C  F00C    	movff	plusw1,btemp+11
  7697                           
  7698                           ;stkvar	_x @ sp[(-7)+0]
  7699  018FA8  0EF9               	movlw	-7
  7700  018FAA  50E3               	movf	plusw1,w,c
  7701  018FAC  0F01               	addlw	1
  7702  018FAE  6E01               	movwf	btemp^0,c
  7703  018FB0  0EF9               	movlw	-7
  7704  018FB2  0060  F007  FFE3   	movff	btemp,plusw1
  7705  018FB8  6A01               	clrf	btemp^0,c
  7706  018FBA  0EFA               	movlw	-6
  7707  018FBC  50E3               	movf	plusw1,w,c
  7708  018FBE  2001               	addwfc	btemp^0,w,c
  7709  018FC0  6E01               	movwf	btemp^0,c
  7710  018FC2  0EFA               	movlw	-6
  7711  018FC4  0060  F007  FFE3   	movff	btemp,plusw1
  7712  018FCA  0EF9               	movlw	-7
  7713  018FCC  006F FF8C  F009    	movff	plusw1,btemp+8
  7714  018FD2  0EFA               	movlw	-6
  7715  018FD4  006F FF8C  F00A    	movff	plusw1,btemp+9
  7716  018FDA  500B               	movf	(btemp+10)^0,w,c
  7717  018FDC  5C09               	subwf	(btemp+8)^0,w,c
  7718  018FDE  500C               	movf	(btemp+11)^0,w,c
  7719  018FE0  580A               	subwfb	(btemp+9)^0,w,c
  7720  018FE2  A0D8               	btfss	status,0,c
  7721  018FE4  D7BA               	goto	l11936
  7722                           
  7723                           ;daq.c: 377:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  7724  018FE6  0E00               	movlw	0
  7725  018FE8  6EE6               	movwf	postinc1,c
  7726  018FEA  0E00               	movlw	0
  7727  018FEC  6EE6               	movwf	postinc1,c
  7728  018FEE  0E00               	movlw	0
  7729  018FF0  6EE6               	movwf	postinc1,c
  7730  018FF2  EC0F  F0CC         	call	_CRC_CalculatedResultGet	;wreg free
  7731                           
  7732                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7733  018FF6  0EFF               	movlw	-1
  7734  018FF8  50E3               	movf	plusw1,w,c
  7735  018FFA  6E0B               	movwf	(btemp+10)^0,c
  7736  018FFC  6A0C               	clrf	(btemp+11)^0,c
  7737  018FFE  500B               	movf	(btemp+10)^0,w,c
  7738  019000  1801               	xorwf	btemp^0,w,c
  7739  019002  E104               	bnz	u10960
  7740  019004  500C               	movf	(btemp+11)^0,w,c
  7741  019006  1802               	xorwf	(btemp+1)^0,w,c
  7742  019008  B4D8               	btfsc	status,2,c
  7743  01900A  D002               	goto	l11952
  7744  01900C                     u10960:
  7745  01900C                     l11944:
  7746                           
  7747                           ;daq.c: 378:    return 0;
  7748  01900C  0E00               	movlw	0
  7749  01900E  D005               	goto	L4
  7750  019010                     l11952:
  7751                           
  7752                           ;daq.c: 382:  r_cal.crc = crcVal_save;
  7753                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7754  019010  0EFF               	movlw	-1
  7755  019012  006F FF8C  F2CB    	movff	plusw1,_r_cal+56
  7756                           
  7757                           ;daq.c: 383:  return 1;
  7758  019018  0E01               	movlw	1
  7759  01901A                     L4:
  7760  01901A  6E01               	movwf	btemp^0,c
  7761                           
  7762                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7763  01901C  0EF9               	movlw	249
  7764  01901E  26E1               	addwf	fsr1l,f,c
  7765  019020  0EFF               	movlw	255
  7766  019022  22E2               	addwfc	fsr1h,f,c
  7767  019024  0012               	return		;funcret
  7768  019026                     __end_of_read_cal_data:
  7769                           	opt callstack 0
  7770                           
  7771 ;; *************** function _DATAEE_ReadByte *****************
  7772 ;; Defined at:
  7773 ;;		line 194 in file "mcc_generated_files/memory.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  bAdd            2  [STACK] unsigned short 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;		None
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1  [STACK] unsigned char 
  7780 ;; Registers used:
  7781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/39
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7791 ;;Total ram usage:        0 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:   15
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_read_cal_data
  7798 ;; This function uses a reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text11
  7802  01CB94                     __ptext11:
  7803                           	opt callstack 0
  7804  01CB94                     _DATAEE_ReadByte:
  7805                           	opt callstack 14
  7806                           
  7807                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  7808                           ;stkvar	_bAdd @ sp[(0)+-2]
  7809                           
  7810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7811                           ;incstack = 0
  7812  01CB94  0EFF               	movlw	255
  7813  01CB96  24E1               	addwf	fsr1l,w,c
  7814  01CB98  6ED9               	movwf	fsr2l,c
  7815  01CB9A  0EFF               	movlw	255
  7816  01CB9C  20E2               	addwfc	fsr1h,w,c
  7817  01CB9E  6EDA               	movwf	fsr2h,c
  7818  01CBA0  50DF               	movf	indf2,w,c
  7819  01CBA2  0B03               	andlw	3
  7820  01CBA4  0139               	movlb	57	; () banked
  7821  01CBA6  6FE1               	movwf	225,b	;volatile
  7822                           
  7823                           ; BSR set to: 57
  7824                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  7825                           ;stkvar	_bAdd @ sp[(0)+-2]
  7826  01CBA8  0EFE               	movlw	-2
  7827  01CBAA  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  7828                           
  7829                           ; BSR set to: 57
  7830                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  7831  01CBB0  0E3F               	movlw	-193
  7832  01CBB2  17E5               	andwf	229,f,b	;volsfr
  7833                           
  7834                           ; BSR set to: 57
  7835                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  7836  01CBB4  81E5               	bsf	229,0,b	;volsfr
  7837                           
  7838                           ; BSR set to: 57
  7839                           ;mcc_generated_files/memory.c: 200:     __nop();
  7840  01CBB6  F000               	nop	
  7841                           
  7842                           ;mcc_generated_files/memory.c: 201:     __nop();
  7843  01CBB8  F000               	nop	
  7844                           
  7845                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  7846  01CBBA  006E F78C  F001    	movff	14819,btemp	;volatile
  7847                           
  7848                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  7849  01CBC0  52E5               	movf	postdec1,f,c
  7850  01CBC2  52E5               	movf	postdec1,f,c
  7851  01CBC4  0012               	return		;funcret
  7852  01CBC6                     __end_of_DATAEE_ReadByte:
  7853                           	opt callstack 0
  7854                           
  7855 ;; *************** function _init_port_dma *****************
  7856 ;; Defined at:
  7857 ;;		line 104 in file "eadog.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;		None
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1  [STACK] void 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/1
  7868 ;;		On exit  : 3F/3B
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7875 ;;Total ram usage:        0 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:   15
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_main
  7882 ;; This function uses a reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text12
  7886  01CBC6                     __ptext12:
  7887                           	opt callstack 0
  7888  01CBC6                     _init_port_dma:
  7889                           	opt callstack 15
  7890                           
  7891                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7892                           
  7893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7894                           ;incstack = 0
  7895  01CBC6  0E3F               	movlw	-193
  7896  01CBC8  013B               	movlb	59	; () banked
  7897  01CBCA  17DD               	andwf	221,f,b	;volatile
  7898                           
  7899                           ; BSR set to: 59
  7900                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7901  01CBCC  9BDD               	bcf	221,5,b	;volatile
  7902                           
  7903                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7904  01CBCE  51DD               	movf	221,w,b	;volatile
  7905  01CBD0  0BF9               	andlw	-7
  7906  01CBD2  0902               	iorlw	2
  7907  01CBD4  6FDD               	movwf	221,b	;volatile
  7908                           
  7909                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7910  01CBD6  0EE7               	movlw	-25
  7911  01CBD8  17DD               	andwf	221,f,b	;volatile
  7912                           
  7913                           ; BSR set to: 59
  7914                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7915  01CBDA  81DD               	bsf	221,0,b	;volatile
  7916                           
  7917                           ; BSR set to: 59
  7918                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7919  01CBDC  9DDC               	bcf	220,6,b	;volatile
  7920                           
  7921                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7922  01CBDE  0E3D               	movlw	61
  7923  01CBE0  6FD1               	movwf	209,b	;volatile
  7924  01CBE2  0EEA               	movlw	234
  7925  01CBE4  6FD0               	movwf	208,b	;volatile
  7926                           
  7927                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7928  01CBE6  0EFF               	movlw	low _port_data
  7929  01CBE8  6FD9               	movwf	217,b	;volatile
  7930  01CBEA  0E05               	movlw	high _port_data
  7931  01CBEC  6FDA               	movwf	218,b	;volatile
  7932  01CBEE  0E00               	movlw	low (_port_data shr (0+16))
  7933  01CBF0  6FDB               	movwf	219,b	;volatile
  7934                           
  7935                           ; BSR set to: 59
  7936                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7937  01CBF2  9BDC               	bcf	220,5,b	;volatile
  7938                           
  7939                           ; BSR set to: 59
  7940                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7941  01CBF4  0012               	return		;funcret
  7942  01CBF6                     __end_of_init_port_dma:
  7943                           	opt callstack 0
  7944                           
  7945 ;; *************** function _init_display *****************
  7946 ;; Defined at:
  7947 ;;		line 38 in file "eadog.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;		None
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;		None
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1  [STACK] void 
  7954 ;; Registers used:
  7955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7956 ;; Tracked objects:
  7957 ;;		On entry : 3F/3B
  7958 ;;		On exit  : 3F/3D
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7965 ;;Total ram usage:        0 bytes
  7966 ;; Hardware stack levels used:    1
  7967 ;; Hardware stack levels required when called:   17
  7968 ;; This function calls:
  7969 ;;		_ringBufS_init
  7970 ;;		_send_lcd_cmd
  7971 ;;		_send_lcd_cmd_long
  7972 ;;		_send_lcd_data
  7973 ;;		_wdtdelay
  7974 ;; This function is called by:
  7975 ;;		_main
  7976 ;; This function uses a reentrant model
  7977 ;;
  7978                           
  7979                           	psect	text13
  7980  01AD78                     __ptext13:
  7981                           	opt callstack 0
  7982  01AD78                     _init_display:
  7983                           	opt callstack 13
  7984                           
  7985                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7986                           
  7987                           ; BSR set to: 59
  7988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7989                           ;incstack = 0
  7990  01AD78  0E94               	movlw	low _ring_buf1
  7991  01AD7A  0101               	movlb	1	; () banked
  7992  01AD7C  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7993  01AD7E  0E03               	movlw	high _ring_buf1
  7994  01AD80  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7995                           
  7996                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7997  01AD82  0E00               	movlw	low _ring_buf2
  7998  01AD84  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7999  01AD86  0E04               	movlw	high _ring_buf2
  8000  01AD88  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8001                           
  8002                           ; BSR set to: 1
  8003                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  8004  01AD8A  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  8005  01AD90  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  8006  01AD96  ECB1  F0E6         	call	_ringBufS_init	;wreg free
  8007                           
  8008                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  8009  01AD9A  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  8010  01ADA0  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  8011  01ADA6  ECB1  F0E6         	call	_ringBufS_init	;wreg free
  8012                           
  8013                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  8014  01ADAA  84BE               	bsf	190,2,c	;volatile
  8015                           
  8016                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8017  01ADAC  013D               	movlb	61	; () banked
  8018  01ADAE  9F14               	bcf	20,7,b	;volatile
  8019                           
  8020                           ; BSR set to: 61
  8021                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8022  01ADB0  0E20               	movlw	32
  8023  01ADB2  6F15               	movwf	21,b	;volatile
  8024                           
  8025                           ; BSR set to: 61
  8026                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8027  01ADB4  0E03               	movlw	3
  8028  01ADB6  6F16               	movwf	22,b	;volatile
  8029                           
  8030                           ; BSR set to: 61
  8031                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8032  01ADB8  0E04               	movlw	4
  8033  01ADBA  6F19               	movwf	25,b	;volatile
  8034                           
  8035                           ; BSR set to: 61
  8036                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8037  01ADBC  0E02               	movlw	2
  8038  01ADBE  6F1C               	movwf	28,b	;volatile
  8039                           
  8040                           ; BSR set to: 61
  8041                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8042  01ADC0  0E83               	movlw	131
  8043  01ADC2  6F14               	movwf	20,b	;volatile
  8044                           
  8045                           ; BSR set to: 61
  8046                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8047  01ADC4  8F14               	bsf	20,7,b	;volatile
  8048                           
  8049                           ; BSR set to: 61
  8050                           ;eadog.c: 60:  wdtdelay(350000);
  8051  01ADC6  0E30               	movlw	48
  8052  01ADC8  6EE6               	movwf	postinc1,c
  8053  01ADCA  0E57               	movlw	87
  8054  01ADCC  6EE6               	movwf	postinc1,c
  8055  01ADCE  0E05               	movlw	5
  8056  01ADD0  6EE6               	movwf	postinc1,c
  8057  01ADD2  0E00               	movlw	0
  8058  01ADD4  6EE6               	movwf	postinc1,c
  8059  01ADD6  ECDE  F0E1         	call	_wdtdelay	;wreg free
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8063  01ADDA  0E46               	movlw	70
  8064  01ADDC  6EE6               	movwf	postinc1,c
  8065  01ADDE  EC16  F0E4         	call	_send_lcd_cmd_long	;wreg free
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8069  01ADE2  0E41               	movlw	65
  8070  01ADE4  6EE6               	movwf	postinc1,c
  8071  01ADE6  EC36  F0E4         	call	_send_lcd_cmd	;wreg free
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;eadog.c: 63:  wdtdelay(80);
  8075  01ADEA  0E50               	movlw	80
  8076  01ADEC  6EE6               	movwf	postinc1,c
  8077  01ADEE  0E00               	movlw	0
  8078  01ADF0  6EE6               	movwf	postinc1,c
  8079  01ADF2  0E00               	movlw	0
  8080  01ADF4  6EE6               	movwf	postinc1,c
  8081  01ADF6  0E00               	movlw	0
  8082  01ADF8  6EE6               	movwf	postinc1,c
  8083  01ADFA  ECDE  F0E1         	call	_wdtdelay	;wreg free
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8087  01ADFE  0E53               	movlw	83
  8088  01AE00  6EE6               	movwf	postinc1,c
  8089  01AE02  EC36  F0E4         	call	_send_lcd_cmd	;wreg free
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;eadog.c: 65:  send_lcd_data(2);
  8093  01AE06  0E02               	movlw	2
  8094  01AE08  6EE6               	movwf	postinc1,c
  8095  01AE0A  ECDE  F0E7         	call	_send_lcd_data	;wreg free
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;eadog.c: 66:  wdtdelay(80);
  8099  01AE0E  0E50               	movlw	80
  8100  01AE10  6EE6               	movwf	postinc1,c
  8101  01AE12  0E00               	movlw	0
  8102  01AE14  6EE6               	movwf	postinc1,c
  8103  01AE16  0E00               	movlw	0
  8104  01AE18  6EE6               	movwf	postinc1,c
  8105  01AE1A  0E00               	movlw	0
  8106  01AE1C  6EE6               	movwf	postinc1,c
  8107  01AE1E  ECDE  F0E1         	call	_wdtdelay	;wreg free
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8111  01AE22  0E51               	movlw	81
  8112  01AE24  6EE6               	movwf	postinc1,c
  8113  01AE26  EC16  F0E4         	call	_send_lcd_cmd_long	;wreg free
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  8117  01AE2A  013D               	movlb	61	; () banked
  8118  01AE2C  9F14               	bcf	20,7,b	;volatile
  8119                           
  8120                           ; BSR set to: 61
  8121                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  8122  01AE2E  0E02               	movlw	2
  8123  01AE30  6F16               	movwf	22,b	;volatile
  8124                           
  8125                           ; BSR set to: 61
  8126                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  8127  01AE32  8F14               	bsf	20,7,b	;volatile
  8128                           
  8129                           ; BSR set to: 61
  8130                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  8131  01AE34  931A               	bcf	26,1,b	;volatile
  8132                           
  8133                           ; BSR set to: 61
  8134                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  8135  01AE36  0E3F               	movlw	-193
  8136  01AE38  013B               	movlb	59	; () banked
  8137  01AE3A  17FD               	andwf	253,f,b	;volatile
  8138                           
  8139                           ; BSR set to: 59
  8140                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  8141  01AE3C  9BFD               	bcf	253,5,b	;volatile
  8142                           
  8143                           ; BSR set to: 59
  8144                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  8145  01AE3E  51FD               	movf	253,w,b	;volatile
  8146  01AE40  0BF9               	andlw	-7
  8147  01AE42  0902               	iorlw	2
  8148  01AE44  6FFD               	movwf	253,b	;volatile
  8149                           
  8150                           ; BSR set to: 59
  8151                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  8152  01AE46  0EE7               	movlw	-25
  8153  01AE48  17FD               	andwf	253,f,b	;volatile
  8154                           
  8155                           ; BSR set to: 59
  8156                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  8157  01AE4A  81FD               	bsf	253,0,b	;volatile
  8158                           
  8159                           ; BSR set to: 59
  8160                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  8161  01AE4C  0E94               	movlw	low _ring_buf1
  8162  01AE4E  6FF9               	movwf	249,b	;volatile
  8163  01AE50  0E03               	movlw	high _ring_buf1
  8164  01AE52  6FFA               	movwf	250,b	;volatile
  8165  01AE54  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8166  01AE56  6FFB               	movwf	251,b	;volatile
  8167                           
  8168                           ; BSR set to: 59
  8169                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8170  01AE58  9BFC               	bcf	252,5,b	;volatile
  8171                           
  8172                           ; BSR set to: 59
  8173                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  8174  01AE5A  013D               	movlb	61	; () banked
  8175  01AE5C  831A               	bsf	26,1,b	;volatile
  8176                           
  8177                           ; BSR set to: 61
  8178                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  8179  01AE5E  94BE               	bcf	190,2,c	;volatile
  8180                           
  8181                           ; BSR set to: 61
  8182                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8183  01AE60  0012               	return		;funcret
  8184  01AE62                     __end_of_init_display:
  8185                           	opt callstack 0
  8186                           
  8187 ;; *************** function _send_lcd_data *****************
  8188 ;; Defined at:
  8189 ;;		line 123 in file "eadog.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  data            1  [STACK] const unsigned char 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1  [STACK] void 
  8196 ;; Registers used:
  8197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8198 ;; Tracked objects:
  8199 ;;		On entry : 3F/0
  8200 ;;		On exit  : 3F/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8207 ;;Total ram usage:        0 bytes
  8208 ;; Hardware stack levels used:    1
  8209 ;; Hardware stack levels required when called:   16
  8210 ;; This function calls:
  8211 ;;		_SPI1_Exchange8bit
  8212 ;;		_wdtdelay
  8213 ;; This function is called by:
  8214 ;;		_init_display
  8215 ;; This function uses a reentrant model
  8216 ;;
  8217                           
  8218                           	psect	text14
  8219  01CFBC                     __ptext14:
  8220                           	opt callstack 0
  8221  01CFBC                     _send_lcd_data:
  8222                           	opt callstack 13
  8223                           
  8224                           ; BSR set to: 61
  8225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8226                           ;incstack = 0
  8227                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  8228  01CFBC  94BC               	bcf	188,2,c	;volatile
  8229                           
  8230                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  8231                           ;stkvar	_data @ sp[(0)+-1]
  8232  01CFBE  0EFF               	movlw	-1
  8233  01CFC0  50E3               	movf	plusw1,w,c
  8234  01CFC2  6EE6               	movwf	postinc1,c
  8235  01CFC4  EC9D  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8236                           
  8237                           ; BSR set to: 57
  8238                           ;eadog.c: 127:  wdtdelay(8);
  8239  01CFC8  0E08               	movlw	8
  8240  01CFCA  6EE6               	movwf	postinc1,c
  8241  01CFCC  0E00               	movlw	0
  8242  01CFCE  6EE6               	movwf	postinc1,c
  8243  01CFD0  0E00               	movlw	0
  8244  01CFD2  6EE6               	movwf	postinc1,c
  8245  01CFD4  0E00               	movlw	0
  8246  01CFD6  6EE6               	movwf	postinc1,c
  8247  01CFD8  ECDE  F0E1         	call	_wdtdelay	;wreg free
  8248                           
  8249                           ; BSR set to: 0
  8250                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  8251  01CFDC  52E5               	movf	postdec1,f,c
  8252  01CFDE  0012               	return		;funcret
  8253  01CFE0                     __end_of_send_lcd_data:
  8254                           	opt callstack 0
  8255                           
  8256 ;; *************** function _send_lcd_cmd_long *****************
  8257 ;; Defined at:
  8258 ;;		line 139 in file "eadog.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  cmd             1  [STACK] const unsigned char 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;		None
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  1  [STACK] void 
  8265 ;; Registers used:
  8266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8267 ;; Tracked objects:
  8268 ;;		On entry : 3F/0
  8269 ;;		On exit  : 3F/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8276 ;;Total ram usage:        0 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:   16
  8279 ;; This function calls:
  8280 ;;		_SPI1_Exchange8bit
  8281 ;;		_wdtdelay
  8282 ;; This function is called by:
  8283 ;;		_init_display
  8284 ;; This function uses a reentrant model
  8285 ;;
  8286                           
  8287                           	psect	text15
  8288  01C82C                     __ptext15:
  8289                           	opt callstack 0
  8290  01C82C                     _send_lcd_cmd_long:
  8291                           	opt callstack 13
  8292                           
  8293                           ; BSR set to: 0
  8294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8295                           ;incstack = 0
  8296                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  8297  01C82C  94BC               	bcf	188,2,c	;volatile
  8298                           
  8299                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  8300  01C82E  0EFE               	movlw	254
  8301  01C830  6EE6               	movwf	postinc1,c
  8302  01C832  EC9D  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8303                           
  8304                           ; BSR set to: 57
  8305                           ;eadog.c: 143:  wdtdelay(8);
  8306  01C836  0E08               	movlw	8
  8307  01C838  6EE6               	movwf	postinc1,c
  8308  01C83A  0E00               	movlw	0
  8309  01C83C  6EE6               	movwf	postinc1,c
  8310  01C83E  0E00               	movlw	0
  8311  01C840  6EE6               	movwf	postinc1,c
  8312  01C842  0E00               	movlw	0
  8313  01C844  6EE6               	movwf	postinc1,c
  8314  01C846  ECDE  F0E1         	call	_wdtdelay	;wreg free
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  8318                           ;stkvar	_cmd @ sp[(0)+-1]
  8319  01C84A  0EFF               	movlw	-1
  8320  01C84C  50E3               	movf	plusw1,w,c
  8321  01C84E  6EE6               	movwf	postinc1,c
  8322  01C850  EC9D  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8323                           
  8324                           ;eadog.c: 145:  wdtdelay(800);
  8325  01C854  0E20               	movlw	32
  8326  01C856  6EE6               	movwf	postinc1,c
  8327  01C858  0E03               	movlw	3
  8328  01C85A  6EE6               	movwf	postinc1,c
  8329  01C85C  0E00               	movlw	0
  8330  01C85E  6EE6               	movwf	postinc1,c
  8331  01C860  0E00               	movlw	0
  8332  01C862  6EE6               	movwf	postinc1,c
  8333  01C864  ECDE  F0E1         	call	_wdtdelay	;wreg free
  8334                           
  8335                           ; BSR set to: 0
  8336                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8337  01C868  52E5               	movf	postdec1,f,c
  8338  01C86A  0012               	return		;funcret
  8339  01C86C                     __end_of_send_lcd_cmd_long:
  8340                           	opt callstack 0
  8341                           
  8342 ;; *************** function _send_lcd_cmd *****************
  8343 ;; Defined at:
  8344 ;;		line 130 in file "eadog.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  cmd             1  [STACK] const unsigned char 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1  [STACK] void 
  8351 ;; Registers used:
  8352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8353 ;; Tracked objects:
  8354 ;;		On entry : 3F/0
  8355 ;;		On exit  : 3F/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8362 ;;Total ram usage:        0 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; Hardware stack levels required when called:   16
  8365 ;; This function calls:
  8366 ;;		_SPI1_Exchange8bit
  8367 ;;		_wdtdelay
  8368 ;; This function is called by:
  8369 ;;		_init_display
  8370 ;; This function uses a reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text16
  8374  01C86C                     __ptext16:
  8375                           	opt callstack 0
  8376  01C86C                     _send_lcd_cmd:
  8377                           	opt callstack 13
  8378                           
  8379                           ; BSR set to: 0
  8380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8381                           ;incstack = 0
  8382                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  8383  01C86C  94BC               	bcf	188,2,c	;volatile
  8384                           
  8385                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  8386  01C86E  0EFE               	movlw	254
  8387  01C870  6EE6               	movwf	postinc1,c
  8388  01C872  EC9D  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8389                           
  8390                           ; BSR set to: 57
  8391                           ;eadog.c: 134:  wdtdelay(8);
  8392  01C876  0E08               	movlw	8
  8393  01C878  6EE6               	movwf	postinc1,c
  8394  01C87A  0E00               	movlw	0
  8395  01C87C  6EE6               	movwf	postinc1,c
  8396  01C87E  0E00               	movlw	0
  8397  01C880  6EE6               	movwf	postinc1,c
  8398  01C882  0E00               	movlw	0
  8399  01C884  6EE6               	movwf	postinc1,c
  8400  01C886  ECDE  F0E1         	call	_wdtdelay	;wreg free
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  8404                           ;stkvar	_cmd @ sp[(0)+-1]
  8405  01C88A  0EFF               	movlw	-1
  8406  01C88C  50E3               	movf	plusw1,w,c
  8407  01C88E  6EE6               	movwf	postinc1,c
  8408  01C890  EC9D  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8409                           
  8410                           ;eadog.c: 136:  wdtdelay(8);
  8411  01C894  0E08               	movlw	8
  8412  01C896  6EE6               	movwf	postinc1,c
  8413  01C898  0E00               	movlw	0
  8414  01C89A  6EE6               	movwf	postinc1,c
  8415  01C89C  0E00               	movlw	0
  8416  01C89E  6EE6               	movwf	postinc1,c
  8417  01C8A0  0E00               	movlw	0
  8418  01C8A2  6EE6               	movwf	postinc1,c
  8419  01C8A4  ECDE  F0E1         	call	_wdtdelay	;wreg free
  8420                           
  8421                           ; BSR set to: 0
  8422                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8423  01C8A8  52E5               	movf	postdec1,f,c
  8424  01C8AA  0012               	return		;funcret
  8425  01C8AC                     __end_of_send_lcd_cmd:
  8426                           	opt callstack 0
  8427                           
  8428 ;; *************** function _SPI1_Exchange8bit *****************
  8429 ;; Defined at:
  8430 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  data            1  [STACK] unsigned char 
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1  [STACK] unsigned char 
  8437 ;; Registers used:
  8438 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 3F/39
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8448 ;;Total ram usage:        0 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:   15
  8451 ;; This function calls:
  8452 ;;		Nothing
  8453 ;; This function is called by:
  8454 ;;		_send_lcd_data
  8455 ;;		_send_lcd_cmd
  8456 ;;		_send_lcd_cmd_long
  8457 ;;		_set_dac
  8458 ;; This function uses a reentrant model
  8459 ;;
  8460                           
  8461                           	psect	text17
  8462  01D13A                     __ptext17:
  8463                           	opt callstack 0
  8464  01D13A                     _SPI1_Exchange8bit:
  8465                           	opt callstack 14
  8466                           
  8467                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8468                           
  8469                           ; BSR set to: 0
  8470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8471                           ;incstack = 0
  8472  01D13A  0E01               	movlw	1
  8473  01D13C  013D               	movlb	61	; () banked
  8474  01D13E  6F12               	movwf	18,b	;volatile
  8475                           
  8476                           ; BSR set to: 61
  8477                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8478                           ;stkvar	_data @ sp[(0)+-1]
  8479  01D140  0EFF               	movlw	-1
  8480  01D142  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8481  01D148                     l809:
  8482                           
  8483                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8484  01D148  0139               	movlb	57	; () banked
  8485  01D14A  A9A2               	btfss	162,4,b	;volatile
  8486  01D14C  D7FD               	goto	l809
  8487                           
  8488                           ; BSR set to: 57
  8489                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8490  01D14E  006F F440  F001    	movff	15632,btemp	;volatile
  8491                           
  8492                           ; BSR set to: 57
  8493                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8494  01D154  52E5               	movf	postdec1,f,c
  8495  01D156  0012               	return		;funcret
  8496  01D158                     __end_of_SPI1_Exchange8bit:
  8497                           	opt callstack 0
  8498                           
  8499 ;; *************** function _ringBufS_init *****************
  8500 ;; Defined at:
  8501 ;;		line 22 in file "ringbufs.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  _this           2  [STACK] PTR volatile struct ring
  8504 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;		None
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  1  [STACK] void 
  8509 ;; Registers used:
  8510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/1
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8520 ;;Total ram usage:        0 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; Hardware stack levels required when called:   16
  8523 ;; This function calls:
  8524 ;;		_memset
  8525 ;; This function is called by:
  8526 ;;		_init_display
  8527 ;; This function uses a reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text18
  8531  01CD62                     __ptext18:
  8532                           	opt callstack 0
  8533  01CD62                     _ringBufS_init:
  8534                           	opt callstack 13
  8535                           
  8536                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8537                           
  8538                           ; BSR set to: 57
  8539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8540                           ;incstack = 0
  8541  01CD62  0E43               	movlw	67
  8542  01CD64  6EE6               	movwf	postinc1,c
  8543  01CD66  0E00               	movlw	0
  8544  01CD68  6EE6               	movwf	postinc1,c
  8545  01CD6A  0E00               	movlw	0
  8546  01CD6C  6EE6               	movwf	postinc1,c
  8547  01CD6E  0E00               	movlw	0
  8548  01CD70  6EE6               	movwf	postinc1,c
  8549                           
  8550                           ;stkvar	__this @ sp[(-4)+-2]
  8551  01CD72  0EFA               	movlw	-6
  8552  01CD74  006F FF8F FFE6     	movff	plusw1,postinc1
  8553  01CD7A  006F FF8F FFE6     	movff	plusw1,postinc1
  8554  01CD80  EC07  F0BA         	call	_memset	;wreg free
  8555                           
  8556                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8557  01CD84  52E5               	movf	postdec1,f,c
  8558  01CD86  52E5               	movf	postdec1,f,c
  8559  01CD88  0012               	return		;funcret
  8560  01CD8A                     __end_of_ringBufS_init:
  8561                           	opt callstack 0
  8562                           
  8563 ;; *************** function _init_bsoc *****************
  8564 ;; Defined at:
  8565 ;;		line 110 in file "bsoc.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;		None
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;		None
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  1  [STACK] void 
  8572 ;; Registers used:
  8573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8583 ;;Total ram usage:        0 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:   18
  8586 ;; This function calls:
  8587 ;;		_TMR3_SetInterruptHandler
  8588 ;;		_Volts_to_SOC
  8589 ;;		___fldiv
  8590 ;;		___flmul
  8591 ;;		___fltol
  8592 ;;		___xxtofl
  8593 ;;		_conv_raw_result
  8594 ;; This function is called by:
  8595 ;;		_main
  8596 ;; This function uses a reentrant model
  8597 ;;
  8598                           
  8599                           	psect	text19
  8600  018184                     __ptext19:
  8601                           	opt callstack 0
  8602  018184                     _init_bsoc:
  8603                           	opt callstack 12
  8604                           
  8605                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  8606                           
  8607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8608                           ;incstack = 0
  8609  018184  0E00               	movlw	0
  8610  018186  6EE6               	movwf	postinc1,c
  8611  018188  0E00               	movlw	0
  8612  01818A  6EE6               	movwf	postinc1,c
  8613  01818C  0E7A               	movlw	122
  8614  01818E  6EE6               	movwf	postinc1,c
  8615  018190  0E44               	movlw	68
  8616  018192  6EE6               	movwf	postinc1,c
  8617  018194  0E00               	movlw	0
  8618  018196  6EE6               	movwf	postinc1,c
  8619  018198  0E04               	movlw	4
  8620  01819A  6EE6               	movwf	postinc1,c
  8621  01819C  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  8622  0181A0  0060  F007  FFE6   	movff	btemp,postinc1
  8623  0181A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8624  0181AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8625  0181B2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8626  0181B8  ECC8  F0CC         	call	___fltol	;wreg free
  8627  0181BC  0060  F007  FFE6   	movff	btemp,postinc1
  8628  0181C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8629  0181C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8630  0181CE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8631  0181D4  0E00               	movlw	0
  8632  0181D6  6EE6               	movwf	postinc1,c
  8633  0181D8  EC2C  F0C6         	call	___xxtofl	;wreg free
  8634  0181DC  0060  F007  FFE6   	movff	btemp,postinc1
  8635  0181E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8636  0181E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8637  0181EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8638  0181F4  EC6E  F09F         	call	___flmul	;wreg free
  8639  0181F8  0060  F007  FFE6   	movff	btemp,postinc1
  8640  0181FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8641  018204  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8642  01820A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8643  018210  ECC8  F0CC         	call	___fltol	;wreg free
  8644  018214  0060  F007  FFE6   	movff	btemp,postinc1
  8645  01821A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8646  018220  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8647  018226  0060  F013  FFE6   	movff	btemp+3,postinc1
  8648  01822C  EC3E  F0D9         	call	_Volts_to_SOC	;wreg free
  8649  018230  0060  F004  F8B5   	movff	btemp,_C+182	;volatile
  8650  018236  0060  F008  F8B6   	movff	btemp+1,_C+183	;volatile
  8651                           
  8652                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  8653  01823C  EE22  F08B         	lfsr	2,_C+140	;volatile
  8654  018240  006F FF7B FFE6     	movff	postinc2,postinc1
  8655  018246  006F FF7B FFE6     	movff	postinc2,postinc1
  8656  01824C  006F FF7B FFE6     	movff	postinc2,postinc1
  8657  018252  006F FF7B FFE6     	movff	postinc2,postinc1
  8658  018258  0E00               	movlw	0
  8659  01825A  6EE6               	movwf	postinc1,c
  8660  01825C  0E00               	movlw	0
  8661  01825E  6EE6               	movwf	postinc1,c
  8662  018260  0EC8               	movlw	200
  8663  018262  6EE6               	movwf	postinc1,c
  8664  018264  0E42               	movlw	66
  8665  018266  6EE6               	movwf	postinc1,c
  8666  018268  0E00               	movlw	0
  8667  01826A  6EE6               	movwf	postinc1,c
  8668  01826C  0E00               	movlw	0
  8669  01826E  6EE6               	movwf	postinc1,c
  8670  018270  0E7A               	movlw	122
  8671  018272  6EE6               	movwf	postinc1,c
  8672  018274  0E44               	movlw	68
  8673  018276  6EE6               	movwf	postinc1,c
  8674  018278  0E00               	movlw	0
  8675  01827A  6EE6               	movwf	postinc1,c
  8676  01827C  0E04               	movlw	4
  8677  01827E  6EE6               	movwf	postinc1,c
  8678  018280  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  8679  018284  0060  F007  FFE6   	movff	btemp,postinc1
  8680  01828A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8681  018290  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8682  018296  0060  F013  FFE6   	movff	btemp+3,postinc1
  8683  01829C  ECC8  F0CC         	call	___fltol	;wreg free
  8684  0182A0  0060  F007  FFE6   	movff	btemp,postinc1
  8685  0182A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8686  0182AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8687  0182B2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8688  0182B8  0E00               	movlw	0
  8689  0182BA  6EE6               	movwf	postinc1,c
  8690  0182BC  EC2C  F0C6         	call	___xxtofl	;wreg free
  8691  0182C0  0060  F007  FFE6   	movff	btemp,postinc1
  8692  0182C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8693  0182CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8694  0182D2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8695  0182D8  EC6E  F09F         	call	___flmul	;wreg free
  8696  0182DC  0060  F007  FFE6   	movff	btemp,postinc1
  8697  0182E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8698  0182E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8699  0182EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8700  0182F4  ECC8  F0CC         	call	___fltol	;wreg free
  8701  0182F8  0060  F007  FFE6   	movff	btemp,postinc1
  8702  0182FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8703  018304  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8704  01830A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8705  018310  EC3E  F0D9         	call	_Volts_to_SOC	;wreg free
  8706  018314  0060  F004  F00B   	movff	btemp,btemp+10
  8707  01831A  0060  F008  F00C   	movff	btemp+1,btemp+11
  8708  018320  500B               	movf	(btemp+10)^0,w,c
  8709  018322  6E05               	movwf	(btemp+4)^0,c
  8710  018324  500C               	movf	(btemp+11)^0,w,c
  8711  018326  6E06               	movwf	(btemp+5)^0,c
  8712  018328  6A07               	clrf	(btemp+6)^0,c
  8713  01832A  6A08               	clrf	(btemp+7)^0,c
  8714  01832C  0060  F017  FFE6   	movff	btemp+4,postinc1
  8715  018332  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8716  018338  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8717  01833E  0060  F023  FFE6   	movff	btemp+7,postinc1
  8718  018344  0E00               	movlw	0
  8719  018346  6EE6               	movwf	postinc1,c
  8720  018348  EC2C  F0C6         	call	___xxtofl	;wreg free
  8721  01834C  0060  F007  FFE6   	movff	btemp,postinc1
  8722  018352  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8723  018358  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8724  01835E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8725  018364  EC61  F0A7         	call	___fldiv	;wreg free
  8726  018368  0060  F007  FFE6   	movff	btemp,postinc1
  8727  01836E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8728  018374  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8729  01837A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8730  018380  EC6E  F09F         	call	___flmul	;wreg free
  8731  018384  0060  F004  F88F   	movff	btemp,_C+144	;volatile
  8732  01838A  0060  F008  F890   	movff	btemp+1,_C+145	;volatile
  8733  018390  0060  F00C  F891   	movff	btemp+2,_C+146	;volatile
  8734  018396  0060  F010  F892   	movff	btemp+3,_C+147	;volatile
  8735                           
  8736                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8737  01839C  EE22  F08F         	lfsr	2,_C+144	;volatile
  8738  0183A0  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  8739  0183A6  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  8740  0183AC  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  8741  0183B2  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  8742                           
  8743                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8744  0183B8  0E6E               	movlw	low _calc_bsoc
  8745  0183BA  6EE6               	movwf	postinc1,c
  8746  0183BC  0E34               	movlw	high _calc_bsoc
  8747  0183BE  6EE6               	movwf	postinc1,c
  8748  0183C0  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8749  0183C2  6EE6               	movwf	postinc1,c
  8750  0183C4  EC3D  F0E7         	call	_TMR3_SetInterruptHandler	;wreg free
  8751                           
  8752                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8753  0183C8  0012               	return		;funcret
  8754  0183CA                     __end_of_init_bsoc:
  8755                           	opt callstack 0
  8756                           
  8757 ;; *************** function _Volts_to_SOC *****************
  8758 ;; Defined at:
  8759 ;;		line 175 in file "bsoc.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  cvoltage        4  [STACK] const unsigned long 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  soc             2  [STACK] unsigned short 
  8764 ;;  slot            1  [STACK] unsigned char 
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  2  [STACK] unsigned short 
  8767 ;; Registers used:
  8768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8778 ;;Total ram usage:        0 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; Hardware stack levels required when called:   15
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_init_bsoc
  8785 ;; This function uses a reentrant model
  8786 ;;
  8787                           
  8788                           	psect	text20
  8789  01B27C                     __ptext20:
  8790                           	opt callstack 0
  8791  01B27C                     _Volts_to_SOC:
  8792                           	opt callstack 0
  8793                           
  8794                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8795  01B27C  52E6               	movf	postinc1,f,c
  8796  01B27E  52E6               	movf	postinc1,f,c
  8797  01B280  52E6               	movf	postinc1,f,c
  8798                           
  8799                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8800                           ;stkvar	_soc @ sp[(-3)+0]
  8801                           
  8802                           ;incstack = 0
  8803  01B282  0EFD               	movlw	-3
  8804  01B284  6AE3               	clrf	plusw1,c
  8805  01B286  0EFE               	movlw	-2
  8806  01B288  6AE3               	clrf	plusw1,c
  8807                           
  8808                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8809                           ;stkvar	_slot @ sp[(-3)+2]
  8810  01B28A  0EFF               	movlw	-1
  8811  01B28C  6AE3               	clrf	plusw1,c
  8812  01B28E                     l11666:
  8813                           
  8814                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8815                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8816                           ;stkvar	_slot @ sp[(-3)+2]
  8817  01B28E  0EFF               	movlw	-1
  8818  01B290  50E3               	movf	plusw1,w,c
  8819  01B292  0D08               	mullw	8
  8820  01B294  0EE3               	movlw	low _BVSOC_TABLE
  8821  01B296  24F3               	addwf	243,w,c
  8822  01B298  6EF6               	movwf	tblptrl,c
  8823  01B29A  0EF8               	movlw	high _BVSOC_TABLE
  8824  01B29C  20F4               	addwfc	244,w,c
  8825  01B29E  6EF7               	movwf	tblptrh,c
  8826  01B2A0                     	if	1	;There are 3 active tblptr bytes
  8827  01B2A0  6AF8               	clrf	tblptru,c
  8828  01B2A2  0E00               	movlw	low (__mediumconst shr (0+16))
  8829  01B2A4  22F8               	addwfc	tblptru,f,c
  8830  01B2A6                     	endif
  8831  01B2A6  0EF9               	movlw	-7
  8832  01B2A8  50E3               	movf	plusw1,w,c
  8833  01B2AA  0009               	tblrd		*+
  8834  01B2AC  5CF5               	subwf	tablat,w,c
  8835  01B2AE  0EFA               	movlw	-6
  8836  01B2B0  50E3               	movf	plusw1,w,c
  8837  01B2B2  0009               	tblrd		*+
  8838  01B2B4  58F5               	subwfb	tablat,w,c
  8839  01B2B6  0EFB               	movlw	-5
  8840  01B2B8  50E3               	movf	plusw1,w,c
  8841  01B2BA  0009               	tblrd		*+
  8842  01B2BC  58F5               	subwfb	tablat,w,c
  8843  01B2BE  0EFC               	movlw	-4
  8844  01B2C0  50E3               	movf	plusw1,w,c
  8845  01B2C2  0009               	tblrd		*+
  8846  01B2C4  58F5               	subwfb	tablat,w,c
  8847  01B2C6  B0D8               	btfsc	status,0,c
  8848  01B2C8  D020               	goto	l11670
  8849                           
  8850                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8851                           ;stkvar	_slot @ sp[(-3)+2]
  8852  01B2CA  0EFF               	movlw	-1
  8853  01B2CC  50E3               	movf	plusw1,w,c
  8854  01B2CE  0D08               	mullw	8
  8855  01B2D0  0E04               	movlw	4
  8856  01B2D2  26F3               	addwf	243,f,c
  8857  01B2D4  0E00               	movlw	0
  8858  01B2D6  22F4               	addwfc	244,f,c
  8859  01B2D8  0EE3               	movlw	low _BVSOC_TABLE
  8860  01B2DA  24F3               	addwf	243,w,c
  8861  01B2DC  6EF6               	movwf	tblptrl,c
  8862  01B2DE  0EF8               	movlw	high _BVSOC_TABLE
  8863  01B2E0  20F4               	addwfc	244,w,c
  8864  01B2E2  6EF7               	movwf	tblptrh,c
  8865  01B2E4                     	if	1	;There are 3 active tblptr bytes
  8866  01B2E4  6AF8               	clrf	tblptru,c
  8867  01B2E6  0E00               	movlw	low (__mediumconst shr (0+16))
  8868  01B2E8  22F8               	addwfc	tblptru,f,c
  8869  01B2EA                     	endif
  8870  01B2EA  0009               	tblrd		*+
  8871  01B2EC  006F FFD4  F00B    	movff	tablat,btemp+10
  8872  01B2F2  0009               	tblrd		*+
  8873  01B2F4  006F FFD4  F00C    	movff	tablat,btemp+11
  8874                           
  8875                           ;stkvar	_soc @ sp[(-3)+0]
  8876  01B2FA  0EFD               	movlw	-3
  8877  01B2FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8878  01B302  0EFE               	movlw	-2
  8879  01B304  0060  F033  FFE3   	movff	btemp+11,plusw1
  8880  01B30A                     l11670:
  8881                           
  8882                           ;bsoc.c: 187:  }
  8883                           ;stkvar	_slot @ sp[(-3)+2]
  8884  01B30A  0EFF               	movlw	-1
  8885  01B30C  2AE3               	incf	plusw1,f,c
  8886                           
  8887                           ;stkvar	_slot @ sp[(-3)+2]
  8888  01B30E  0EFF               	movlw	-1
  8889  01B310  006F FF8C  F001    	movff	plusw1,btemp
  8890  01B316  0E19               	movlw	25
  8891  01B318  6401               	cpfsgt	btemp^0,c
  8892  01B31A  D7B9               	goto	l11666
  8893                           
  8894                           ;bsoc.c: 188:  return soc;
  8895                           ;stkvar	_soc @ sp[(-3)+0]
  8896  01B31C  0EFD               	movlw	-3
  8897  01B31E  006F FF8C  F001    	movff	plusw1,btemp
  8898  01B324  0EFE               	movlw	-2
  8899  01B326  006F FF8C  F002    	movff	plusw1,btemp+1
  8900                           
  8901                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8902  01B32C  0EF9               	movlw	249
  8903  01B32E  26E1               	addwf	fsr1l,f,c
  8904  01B330  0EFF               	movlw	255
  8905  01B332  22E2               	addwfc	fsr1h,f,c
  8906  01B334  0012               	return		;funcret
  8907  01B336                     __end_of_Volts_to_SOC:
  8908                           	opt callstack 0
  8909                           
  8910 ;; *************** function _hid_display *****************
  8911 ;; Defined at:
  8912 ;;		line 22 in file "hid.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  h               2  [STACK] PTR struct H_data
  8915 ;;		 -> H(9), 
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;		None
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  2  [STACK] PTR struct H_data
  8920 ;; Registers used:
  8921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8922 ;; Tracked objects:
  8923 ;;		On entry : 3F/39
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8931 ;;Total ram usage:        0 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; Hardware stack levels required when called:   17
  8934 ;; This function calls:
  8935 ;;		_hid_input
  8936 ;; This function is called by:
  8937 ;;		_main
  8938 ;; This function uses a reentrant model
  8939 ;;
  8940                           
  8941                           	psect	text21
  8942  01882A                     __ptext21:
  8943                           	opt callstack 0
  8944  01882A                     _hid_display:
  8945                           	opt callstack 13
  8946                           
  8947                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8948                           ;stkvar	_h @ sp[(0)+-2]
  8949                           
  8950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8951                           ;incstack = 0
  8952  01882A  0EFE               	movlw	-2
  8953  01882C  006F FF8F FFE6     	movff	plusw1,postinc1
  8954  018832  006F FF8F FFE6     	movff	plusw1,postinc1
  8955  018838  ECCB  F0D0         	call	_hid_input	;wreg free
  8956                           
  8957                           ;hid.c: 26:  switch (h->h_state) {
  8958  01883C  D0E6               	goto	l14282
  8959  01883E                     l14256:
  8960                           
  8961                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8962                           ;stkvar	_h @ sp[(0)+-2]
  8963  01883E  0EFE               	movlw	-2
  8964  018840  006F FF8C  F00B    	movff	plusw1,btemp+10
  8965  018846  0EFF               	movlw	-1
  8966  018848  006F FF8C  F00C    	movff	plusw1,btemp+11
  8967  01884E  0E01               	movlw	1
  8968  018850  240B               	addwf	(btemp+10)^0,w,c
  8969  018852  6ED9               	movwf	fsr2l,c
  8970  018854  0E00               	movlw	0
  8971  018856  200C               	addwfc	(btemp+11)^0,w,c
  8972  018858  6EDA               	movwf	fsr2h,c
  8973  01885A  0E01               	movlw	1
  8974  01885C  6EDF               	movwf	indf2,c
  8975                           
  8976                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8977                           ;stkvar	_h @ sp[(0)+-2]
  8978  01885E  0EFE               	movlw	-2
  8979  018860  006F FF8F FFD9     	movff	plusw1,fsr2l
  8980  018866  0EFF               	movlw	-1
  8981  018868  006F FF8F FFDA     	movff	plusw1,fsr2h
  8982  01886E  0E00               	movlw	0
  8983  018870  6EDF               	movwf	indf2,c
  8984                           
  8985                           ;hid.c: 30:   h->wait_enter = 1;
  8986                           ;stkvar	_h @ sp[(0)+-2]
  8987  018872  0EFE               	movlw	-2
  8988  018874  006F FF8C  F00B    	movff	plusw1,btemp+10
  8989  01887A  0EFF               	movlw	-1
  8990  01887C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8991  018882  0E04               	movlw	4
  8992  018884  240B               	addwf	(btemp+10)^0,w,c
  8993  018886  6ED9               	movwf	fsr2l,c
  8994  018888  0E00               	movlw	0
  8995  01888A  200C               	addwfc	(btemp+11)^0,w,c
  8996  01888C  6EDA               	movwf	fsr2h,c
  8997  01888E  0E01               	movlw	1
  8998  018890  6EDF               	movwf	indf2,c
  8999                           
  9000                           ;hid.c: 31:   h->wait_select = 1;
  9001                           ;stkvar	_h @ sp[(0)+-2]
  9002  018892  0EFE               	movlw	-2
  9003  018894  006F FF8C  F00B    	movff	plusw1,btemp+10
  9004  01889A  0EFF               	movlw	-1
  9005  01889C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9006  0188A2  0E02               	movlw	2
  9007  0188A4  240B               	addwf	(btemp+10)^0,w,c
  9008  0188A6  6ED9               	movwf	fsr2l,c
  9009  0188A8  0E00               	movlw	0
  9010  0188AA  200C               	addwfc	(btemp+11)^0,w,c
  9011  0188AC  6EDA               	movwf	fsr2h,c
  9012  0188AE  0E01               	movlw	1
  9013  0188B0  6EDF               	movwf	indf2,c
  9014                           
  9015                           ;hid.c: 32:   h->wait_calib = 1;
  9016                           ;stkvar	_h @ sp[(0)+-2]
  9017  0188B2  0EFE               	movlw	-2
  9018  0188B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9019  0188BA  0EFF               	movlw	-1
  9020  0188BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9021  0188C2  0E06               	movlw	6
  9022  0188C4  240B               	addwf	(btemp+10)^0,w,c
  9023  0188C6  6ED9               	movwf	fsr2l,c
  9024  0188C8  0E00               	movlw	0
  9025  0188CA  200C               	addwfc	(btemp+11)^0,w,c
  9026  0188CC  6EDA               	movwf	fsr2h,c
  9027  0188CE  0E01               	movlw	1
  9028  0188D0  6EDF               	movwf	indf2,c
  9029                           
  9030                           ;hid.c: 33:   h->select_p = SW_OFF;
  9031                           ;stkvar	_h @ sp[(0)+-2]
  9032  0188D2  0EFE               	movlw	-2
  9033  0188D4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9034  0188DA  0EFF               	movlw	-1
  9035  0188DC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9036  0188E2  0E03               	movlw	3
  9037  0188E4  240B               	addwf	(btemp+10)^0,w,c
  9038  0188E6  6ED9               	movwf	fsr2l,c
  9039  0188E8  0E00               	movlw	0
  9040  0188EA  200C               	addwfc	(btemp+11)^0,w,c
  9041  0188EC  6EDA               	movwf	fsr2h,c
  9042  0188EE  0E00               	movlw	0
  9043  0188F0  6EDF               	movwf	indf2,c
  9044                           
  9045                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9046                           ;stkvar	_h @ sp[(0)+-2]
  9047  0188F2  0EFE               	movlw	-2
  9048  0188F4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9049  0188FA  0EFF               	movlw	-1
  9050  0188FC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9051  018902  0E05               	movlw	5
  9052  018904  240B               	addwf	(btemp+10)^0,w,c
  9053  018906  6ED9               	movwf	fsr2l,c
  9054  018908  0E00               	movlw	0
  9055  01890A  200C               	addwfc	(btemp+11)^0,w,c
  9056  01890C  6EDA               	movwf	fsr2h,c
  9057  01890E  0E00               	movlw	0
  9058  018910  6EDF               	movwf	indf2,c
  9059                           
  9060                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9061                           ;stkvar	_h @ sp[(0)+-2]
  9062  018912  0EFE               	movlw	-2
  9063  018914  006F FF8C  F00B    	movff	plusw1,btemp+10
  9064  01891A  0EFF               	movlw	-1
  9065  01891C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9066  018922  0E07               	movlw	7
  9067  018924  240B               	addwf	(btemp+10)^0,w,c
  9068  018926  6ED9               	movwf	fsr2l,c
  9069  018928  0E00               	movlw	0
  9070  01892A  200C               	addwfc	(btemp+11)^0,w,c
  9071  01892C  6EDA               	movwf	fsr2h,c
  9072  01892E  0E00               	movlw	0
  9073  018930  D06A               	goto	L5
  9074  018932                     l14272:
  9075                           
  9076                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9077                           ;stkvar	_h @ sp[(0)+-2]
  9078  018932  0EFE               	movlw	-2
  9079  018934  006F FF8C  F00B    	movff	plusw1,btemp+10
  9080  01893A  0EFF               	movlw	-1
  9081  01893C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9082  018942  0E02               	movlw	2
  9083  018944  240B               	addwf	(btemp+10)^0,w,c
  9084  018946  6ED9               	movwf	fsr2l,c
  9085  018948  0E00               	movlw	0
  9086  01894A  200C               	addwfc	(btemp+11)^0,w,c
  9087  01894C  6EDA               	movwf	fsr2h,c
  9088  01894E  50DF               	movf	indf2,w,c
  9089  018950  A4D8               	btfss	status,2,c
  9090  018952  D076               	goto	l2227
  9091                           
  9092                           ;stkvar	_h @ sp[(0)+-2]
  9093  018954  0EFE               	movlw	-2
  9094  018956  006F FF8C  F00B    	movff	plusw1,btemp+10
  9095  01895C  0EFF               	movlw	-1
  9096  01895E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9097  018964  0E03               	movlw	3
  9098  018966  240B               	addwf	(btemp+10)^0,w,c
  9099  018968  6ED9               	movwf	fsr2l,c
  9100  01896A  0E00               	movlw	0
  9101  01896C  200C               	addwfc	(btemp+11)^0,w,c
  9102  01896E  6EDA               	movwf	fsr2h,c
  9103  018970  50DF               	movf	indf2,w,c
  9104  018972  A4D8               	btfss	status,2,c
  9105  018974  D065               	goto	l2227
  9106                           
  9107                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9108                           ;stkvar	_h @ sp[(0)+-2]
  9109  018976  0EFE               	movlw	-2
  9110  018978  006F FF8C  F00B    	movff	plusw1,btemp+10
  9111  01897E  0EFF               	movlw	-1
  9112  018980  006F FF8C  F00C    	movff	plusw1,btemp+11
  9113  018986  0E08               	movlw	8
  9114  018988  240B               	addwf	(btemp+10)^0,w,c
  9115  01898A  6ED9               	movwf	fsr2l,c
  9116  01898C  0E00               	movlw	0
  9117  01898E  200C               	addwfc	(btemp+11)^0,w,c
  9118  018990  6EDA               	movwf	fsr2h,c
  9119                           
  9120                           ;stkvar	_h @ sp[(0)+-2]
  9121  018992  0EFE               	movlw	-2
  9122  018994  006F FF8C  F00B    	movff	plusw1,btemp+10
  9123  01899A  0EFF               	movlw	-1
  9124  01899C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9125  0189A2  0E08               	movlw	8
  9126  0189A4  240B               	addwf	(btemp+10)^0,w,c
  9127  0189A6  6EE9               	movwf	fsr0l,c
  9128  0189A8  0E00               	movlw	0
  9129  0189AA  200C               	addwfc	(btemp+11)^0,w,c
  9130  0189AC  6EEA               	movwf	fsr0h,c
  9131  0189AE  2AEF               	incf	indf0,f,c
  9132  0189B0  50EF               	movf	indf0,w,c
  9133  0189B2  0B03               	andlw	3
  9134  0189B4  6EDF               	movwf	indf2,c
  9135                           
  9136                           ;hid.c: 41:    h->hid_display = h->sequence;
  9137                           ;stkvar	_h @ sp[(0)+-2]
  9138  0189B6  0EFE               	movlw	-2
  9139  0189B8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9140  0189BE  0EFF               	movlw	-1
  9141  0189C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9142  0189C6  0E08               	movlw	8
  9143  0189C8  240B               	addwf	(btemp+10)^0,w,c
  9144  0189CA  6ED9               	movwf	fsr2l,c
  9145  0189CC  0E00               	movlw	0
  9146  0189CE  200C               	addwfc	(btemp+11)^0,w,c
  9147  0189D0  6EDA               	movwf	fsr2h,c
  9148                           
  9149                           ;stkvar	_h @ sp[(0)+-2]
  9150  0189D2  0EFE               	movlw	-2
  9151  0189D4  006F FF8F FFE9     	movff	plusw1,fsr0l
  9152  0189DA  0EFF               	movlw	-1
  9153  0189DC  006F FF8F FFEA     	movff	plusw1,fsr0h
  9154  0189E2  006F FF7F FFEF     	movff	indf2,indf0
  9155                           
  9156                           ;hid.c: 42:    h->wait_select = 1;
  9157                           ;stkvar	_h @ sp[(0)+-2]
  9158  0189E8  0EFE               	movlw	-2
  9159  0189EA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9160  0189F0  0EFF               	movlw	-1
  9161  0189F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9162  0189F8  0E02               	movlw	2
  9163  0189FA  240B               	addwf	(btemp+10)^0,w,c
  9164  0189FC  6ED9               	movwf	fsr2l,c
  9165  0189FE  0E00               	movlw	0
  9166  018A00  200C               	addwfc	(btemp+11)^0,w,c
  9167  018A02  6EDA               	movwf	fsr2h,c
  9168  018A04  0E01               	movlw	1
  9169  018A06                     L5:
  9170  018A06  6EDF               	movwf	indf2,c
  9171  018A08  D01B               	goto	l2227
  9172  018A0A                     l14282:
  9173                           
  9174                           ;stkvar	_h @ sp[(0)+-2]
  9175  018A0A  0EFE               	movlw	-2
  9176  018A0C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9177  018A12  0EFF               	movlw	-1
  9178  018A14  006F FF8C  F00C    	movff	plusw1,btemp+11
  9179  018A1A  0E01               	movlw	1
  9180  018A1C  240B               	addwf	(btemp+10)^0,w,c
  9181  018A1E  6ED9               	movwf	fsr2l,c
  9182  018A20  0E00               	movlw	0
  9183  018A22  200C               	addwfc	(btemp+11)^0,w,c
  9184  018A24  6EDA               	movwf	fsr2h,c
  9185  018A26  50DF               	movf	indf2,w,c
  9186  018A28  6E0B               	movwf	(btemp+10)^0,c
  9187  018A2A  6A0C               	clrf	(btemp+11)^0,c
  9188                           
  9189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9190                           ; Switch size 1, requested type "simple"
  9191                           ; Number of cases is 1, Range of values is 0 to 0
  9192                           ; switch strategies available:
  9193                           ; Name         Instructions Cycles
  9194                           ; simple_byte            4     3 (average)
  9195                           ;	Chosen strategy is simple_byte
  9196  018A2C  500C               	movf	(btemp+11)^0,w,c
  9197  018A2E  0A00               	xorlw	0	; case 0
  9198  018A30  A4D8               	btfss	status,2,c
  9199  018A32  D77F               	goto	l14272
  9200                           
  9201                           ; Switch size 1, requested type "simple"
  9202                           ; Number of cases is 2, Range of values is 0 to 1
  9203                           ; switch strategies available:
  9204                           ; Name         Instructions Cycles
  9205                           ; simple_byte            7     4 (average)
  9206                           ;	Chosen strategy is simple_byte
  9207  018A34  500B               	movf	(btemp+10)^0,w,c
  9208  018A36  0A00               	xorlw	0	; case 0
  9209  018A38  B4D8               	btfsc	status,2,c
  9210  018A3A  D701               	goto	l14256
  9211  018A3C  0A01               	xorlw	1	; case 1
  9212  018A3E  D779               	goto	l14272
  9213  018A40                     l2227:
  9214                           
  9215                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  9216  018A40  52E5               	movf	postdec1,f,c
  9217  018A42  52E5               	movf	postdec1,f,c
  9218  018A44  0012               	return		;funcret
  9219  018A46                     __end_of_hid_display:
  9220                           	opt callstack 0
  9221                           
  9222 ;; *************** function _hid_input *****************
  9223 ;; Defined at:
  9224 ;;		line 3 in file "hid.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  h               2  [STACK] PTR struct H_data
  9227 ;;		 -> H(9), 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;		None
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  2  [STACK] PTR struct H_data
  9232 ;; Registers used:
  9233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/39
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9243 ;;Total ram usage:        0 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:   16
  9246 ;; This function calls:
  9247 ;;		_get_switch
  9248 ;; This function is called by:
  9249 ;;		_hid_display
  9250 ;; This function uses a reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text22
  9254  01A196                     __ptext22:
  9255                           	opt callstack 0
  9256  01A196                     _hid_input:
  9257                           	opt callstack 13
  9258                           
  9259                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  9260                           
  9261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9262                           ;incstack = 0
  9263  01A196  0E02               	movlw	2
  9264  01A198  6EE6               	movwf	postinc1,c
  9265  01A19A  EC5A  F0E6         	call	_get_switch	;wreg free
  9266  01A19E  5001               	movf	btemp^0,w,c
  9267  01A1A0  B4D8               	btfsc	status,2,c
  9268  01A1A2  D02C               	goto	l14012
  9269                           
  9270                           ;hid.c: 6:   h->wait_select = 0;
  9271                           ;stkvar	_h @ sp[(0)+-2]
  9272  01A1A4  0EFE               	movlw	-2
  9273  01A1A6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9274  01A1AC  0EFF               	movlw	-1
  9275  01A1AE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9276  01A1B4  0E02               	movlw	2
  9277  01A1B6  240B               	addwf	(btemp+10)^0,w,c
  9278  01A1B8  6ED9               	movwf	fsr2l,c
  9279  01A1BA  0E00               	movlw	0
  9280  01A1BC  200C               	addwfc	(btemp+11)^0,w,c
  9281  01A1BE  6EDA               	movwf	fsr2h,c
  9282  01A1C0  0E00               	movlw	0
  9283  01A1C2  6EDF               	movwf	indf2,c
  9284                           
  9285                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  9286  01A1C4  0E02               	movlw	2
  9287  01A1C6  6EE6               	movwf	postinc1,c
  9288  01A1C8  EC5A  F0E6         	call	_get_switch	;wreg free
  9289  01A1CC  5001               	movf	btemp^0,w,c
  9290  01A1CE  B4D8               	btfsc	status,2,c
  9291  01A1D0  D003               	goto	u13270
  9292  01A1D2  6A0C               	clrf	(btemp+11)^0,c
  9293  01A1D4  2A0C               	incf	(btemp+11)^0,f,c
  9294  01A1D6  D001               	goto	u13288
  9295  01A1D8                     u13270:
  9296  01A1D8  6A0C               	clrf	(btemp+11)^0,c
  9297  01A1DA                     u13288:
  9298                           
  9299                           ;stkvar	_h @ sp[(0)+-2]
  9300  01A1DA  0EFE               	movlw	-2
  9301  01A1DC  006F FF8C  F009    	movff	plusw1,btemp+8
  9302  01A1E2  0EFF               	movlw	-1
  9303  01A1E4  006F FF8C  F00A    	movff	plusw1,btemp+9
  9304  01A1EA  0E03               	movlw	3
  9305  01A1EC  2409               	addwf	(btemp+8)^0,w,c
  9306  01A1EE  6ED9               	movwf	fsr2l,c
  9307  01A1F0  0E00               	movlw	0
  9308  01A1F2  200A               	addwfc	(btemp+9)^0,w,c
  9309  01A1F4  6EDA               	movwf	fsr2h,c
  9310  01A1F6  0060  F033  FFDF   	movff	btemp+11,indf2
  9311  01A1FC                     l14012:
  9312                           
  9313                           ;hid.c: 10:  if (get_switch(SENTER)) {
  9314  01A1FC  0E03               	movlw	3
  9315  01A1FE  6EE6               	movwf	postinc1,c
  9316  01A200  EC5A  F0E6         	call	_get_switch	;wreg free
  9317  01A204  5001               	movf	btemp^0,w,c
  9318  01A206  B4D8               	btfsc	status,2,c
  9319  01A208  D02C               	goto	l14018
  9320                           
  9321                           ;hid.c: 11:   h->wait_enter = 0;
  9322                           ;stkvar	_h @ sp[(0)+-2]
  9323  01A20A  0EFE               	movlw	-2
  9324  01A20C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9325  01A212  0EFF               	movlw	-1
  9326  01A214  006F FF8C  F00C    	movff	plusw1,btemp+11
  9327  01A21A  0E04               	movlw	4
  9328  01A21C  240B               	addwf	(btemp+10)^0,w,c
  9329  01A21E  6ED9               	movwf	fsr2l,c
  9330  01A220  0E00               	movlw	0
  9331  01A222  200C               	addwfc	(btemp+11)^0,w,c
  9332  01A224  6EDA               	movwf	fsr2h,c
  9333  01A226  0E00               	movlw	0
  9334  01A228  6EDF               	movwf	indf2,c
  9335                           
  9336                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  9337  01A22A  0E03               	movlw	3
  9338  01A22C  6EE6               	movwf	postinc1,c
  9339  01A22E  EC5A  F0E6         	call	_get_switch	;wreg free
  9340  01A232  5001               	movf	btemp^0,w,c
  9341  01A234  B4D8               	btfsc	status,2,c
  9342  01A236  D003               	goto	u13300
  9343  01A238  6A0C               	clrf	(btemp+11)^0,c
  9344  01A23A  2A0C               	incf	(btemp+11)^0,f,c
  9345  01A23C  D001               	goto	u13318
  9346  01A23E                     u13300:
  9347  01A23E  6A0C               	clrf	(btemp+11)^0,c
  9348  01A240                     u13318:
  9349                           
  9350                           ;stkvar	_h @ sp[(0)+-2]
  9351  01A240  0EFE               	movlw	-2
  9352  01A242  006F FF8C  F009    	movff	plusw1,btemp+8
  9353  01A248  0EFF               	movlw	-1
  9354  01A24A  006F FF8C  F00A    	movff	plusw1,btemp+9
  9355  01A250  0E05               	movlw	5
  9356  01A252  2409               	addwf	(btemp+8)^0,w,c
  9357  01A254  6ED9               	movwf	fsr2l,c
  9358  01A256  0E00               	movlw	0
  9359  01A258  200A               	addwfc	(btemp+9)^0,w,c
  9360  01A25A  6EDA               	movwf	fsr2h,c
  9361  01A25C  0060  F033  FFDF   	movff	btemp+11,indf2
  9362  01A262                     l14018:
  9363                           
  9364                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  9365  01A262  0E04               	movlw	4
  9366  01A264  6EE6               	movwf	postinc1,c
  9367  01A266  EC5A  F0E6         	call	_get_switch	;wreg free
  9368  01A26A  5001               	movf	btemp^0,w,c
  9369  01A26C  B4D8               	btfsc	status,2,c
  9370  01A26E  D02C               	goto	l2218
  9371                           
  9372                           ;hid.c: 16:   h->wait_calib = 0;
  9373                           ;stkvar	_h @ sp[(0)+-2]
  9374  01A270  0EFE               	movlw	-2
  9375  01A272  006F FF8C  F00B    	movff	plusw1,btemp+10
  9376  01A278  0EFF               	movlw	-1
  9377  01A27A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9378  01A280  0E06               	movlw	6
  9379  01A282  240B               	addwf	(btemp+10)^0,w,c
  9380  01A284  6ED9               	movwf	fsr2l,c
  9381  01A286  0E00               	movlw	0
  9382  01A288  200C               	addwfc	(btemp+11)^0,w,c
  9383  01A28A  6EDA               	movwf	fsr2h,c
  9384  01A28C  0E00               	movlw	0
  9385  01A28E  6EDF               	movwf	indf2,c
  9386                           
  9387                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  9388  01A290  0E04               	movlw	4
  9389  01A292  6EE6               	movwf	postinc1,c
  9390  01A294  EC5A  F0E6         	call	_get_switch	;wreg free
  9391  01A298  5001               	movf	btemp^0,w,c
  9392  01A29A  B4D8               	btfsc	status,2,c
  9393  01A29C  D003               	goto	u13330
  9394  01A29E  6A0C               	clrf	(btemp+11)^0,c
  9395  01A2A0  2A0C               	incf	(btemp+11)^0,f,c
  9396  01A2A2  D001               	goto	u13348
  9397  01A2A4                     u13330:
  9398  01A2A4  6A0C               	clrf	(btemp+11)^0,c
  9399  01A2A6                     u13348:
  9400                           
  9401                           ;stkvar	_h @ sp[(0)+-2]
  9402  01A2A6  0EFE               	movlw	-2
  9403  01A2A8  006F FF8C  F009    	movff	plusw1,btemp+8
  9404  01A2AE  0EFF               	movlw	-1
  9405  01A2B0  006F FF8C  F00A    	movff	plusw1,btemp+9
  9406  01A2B6  0E07               	movlw	7
  9407  01A2B8  2409               	addwf	(btemp+8)^0,w,c
  9408  01A2BA  6ED9               	movwf	fsr2l,c
  9409  01A2BC  0E00               	movlw	0
  9410  01A2BE  200A               	addwfc	(btemp+9)^0,w,c
  9411  01A2C0  6EDA               	movwf	fsr2h,c
  9412  01A2C2  0060  F033  FFDF   	movff	btemp+11,indf2
  9413  01A2C8                     l2218:
  9414                           
  9415                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  9416  01A2C8  52E5               	movf	postdec1,f,c
  9417  01A2CA  52E5               	movf	postdec1,f,c
  9418  01A2CC  0012               	return		;funcret
  9419  01A2CE                     __end_of_hid_input:
  9420                           	opt callstack 0
  9421                           
  9422 ;; *************** function _esr_check *****************
  9423 ;; Defined at:
  9424 ;;		line 197 in file "bsoc.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  fsm             1  [STACK] const unsigned char 
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;		None
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  4  [STACK] float 
  9431 ;; Registers used:
  9432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9442 ;;Total ram usage:        0 bytes
  9443 ;; Hardware stack levels used:    1
  9444 ;; Hardware stack levels required when called:   18
  9445 ;; This function calls:
  9446 ;;		_StartTimer
  9447 ;;		_TimerDone
  9448 ;;		___fldiv
  9449 ;;		___flsub
  9450 ;;		_conv_raw_result
  9451 ;;		_fabsf
  9452 ;;		_set_load_relay_one
  9453 ;;		_set_load_relay_two
  9454 ;;		_update_adc_result
  9455 ;; This function is called by:
  9456 ;;		_main
  9457 ;; This function uses a reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text23
  9461  0176FA                     __ptext23:
  9462                           	opt callstack 0
  9463  0176FA                     _esr_check:
  9464                           	opt callstack 12
  9465                           
  9466                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  9467                           ;stkvar	_fsm @ sp[(0)+-1]
  9468                           
  9469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9470                           ;incstack = 0
  9471  0176FA  0EFF               	movlw	-1
  9472  0176FC  50E3               	movf	plusw1,w,c
  9473  0176FE  B4D8               	btfsc	status,2,c
  9474  017700  D149               	goto	l12054
  9475                           
  9476                           ;bsoc.c: 202:   esr_state = 0;
  9477  017702  0100               	movlb	0	; () banked
  9478  017704  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;bsoc.c: 203:   return -10.0;
  9482  017706  0E00               	movlw	0
  9483  017708  6E01               	movwf	btemp^0,c
  9484  01770A  0E00               	movlw	0
  9485  01770C  6E02               	movwf	(btemp+1)^0,c
  9486  01770E  0E20               	movlw	32
  9487  017710  6E03               	movwf	(btemp+2)^0,c
  9488  017712  0EC1               	movlw	193
  9489  017714  D15B               	goto	L6
  9490  017716                     l11986:
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  9494  017716  0E10               	movlw	16
  9495  017718  6EE6               	movwf	postinc1,c
  9496  01771A  0E27               	movlw	39
  9497  01771C  6EE6               	movwf	postinc1,c
  9498  01771E  0E0C               	movlw	12
  9499  017720  6EE6               	movwf	postinc1,c
  9500  017722  EC56  F0E4         	call	_StartTimer	;wreg free
  9501  017726                     l11988:
  9502                           
  9503                           ;bsoc.c: 209:   esr_state++;
  9504  017726  0100               	movlb	0	; () banked
  9505  017728  2BA0               	incf	esr_check@esr_state& (0+255),f,b
  9506                           
  9507                           ;bsoc.c: 210:   break;
  9508  01772A  D149               	goto	l12056
  9509  01772C                     l11990:
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;bsoc.c: 215:   set_load_relay_one(0);
  9513  01772C  0E00               	movlw	0
  9514  01772E  6EE6               	movwf	postinc1,c
  9515  017730  EC6B  F0E9         	call	_set_load_relay_one	;wreg free
  9516                           
  9517                           ;bsoc.c: 216:   set_load_relay_two(0);
  9518  017734  0E00               	movlw	0
  9519  017736  6EE6               	movwf	postinc1,c
  9520  017738  EC63  F0E9         	call	_set_load_relay_two	;wreg free
  9521                           
  9522                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  9523  01773C  0E0C               	movlw	12
  9524  01773E  6EE6               	movwf	postinc1,c
  9525  017740  ECC5  F0E6         	call	_TimerDone	;wreg free
  9526  017744  5001               	movf	btemp^0,w,c
  9527  017746  B4D8               	btfsc	status,2,c
  9528  017748  D009               	goto	l11996
  9529                           
  9530                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  9531  01774A  0E10               	movlw	16
  9532  01774C  6EE6               	movwf	postinc1,c
  9533  01774E  0E27               	movlw	39
  9534  017750  6EE6               	movwf	postinc1,c
  9535  017752  0E0C               	movlw	12
  9536  017754  6EE6               	movwf	postinc1,c
  9537  017756  EC56  F0E4         	call	_StartTimer	;wreg free
  9538                           
  9539                           ;bsoc.c: 219:   } else {
  9540  01775A  D006               	goto	l12000
  9541  01775C                     l11996:
  9542                           
  9543                           ;bsoc.c: 220:    return -2.0;
  9544  01775C  0E00               	movlw	0
  9545  01775E  6E01               	movwf	btemp^0,c
  9546  017760  0E00               	movlw	0
  9547  017762  6E02               	movwf	(btemp+1)^0,c
  9548  017764  0E00               	movlw	0
  9549  017766  D066               	goto	L8
  9550  017768                     l12000:
  9551                           
  9552                           ;bsoc.c: 225:   update_adc_result();
  9553  017768  ECD5  F0E4         	call	_update_adc_result	;wreg free
  9554                           
  9555                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9556  01776C  0E00               	movlw	0
  9557  01776E  6EE6               	movwf	postinc1,c
  9558  017770  0E04               	movlw	4
  9559  017772  6EE6               	movwf	postinc1,c
  9560  017774  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9561  017778  0060  F004  F915   	movff	btemp,_C+278	;volatile
  9562  01777E  0060  F008  F916   	movff	btemp+1,_C+279	;volatile
  9563  017784  0060  F00C  F917   	movff	btemp+2,_C+280	;volatile
  9564  01778A  0060  F010  F918   	movff	btemp+3,_C+281	;volatile
  9565  017790  D7CA               	goto	l11988
  9566  017792                     l12006:
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;bsoc.c: 230:   set_load_relay_one(1);
  9570  017792  0E01               	movlw	1
  9571  017794  6EE6               	movwf	postinc1,c
  9572  017796  EC6B  F0E9         	call	_set_load_relay_one	;wreg free
  9573                           
  9574                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  9575  01779A  0E0C               	movlw	12
  9576  01779C  6EE6               	movwf	postinc1,c
  9577  01779E  ECC5  F0E6         	call	_TimerDone	;wreg free
  9578  0177A2  5001               	movf	btemp^0,w,c
  9579  0177A4  B4D8               	btfsc	status,2,c
  9580  0177A6  D009               	goto	l12012
  9581                           
  9582                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  9583  0177A8  0E10               	movlw	16
  9584  0177AA  6EE6               	movwf	postinc1,c
  9585  0177AC  0E27               	movlw	39
  9586  0177AE  6EE6               	movwf	postinc1,c
  9587  0177B0  0E0C               	movlw	12
  9588  0177B2  6EE6               	movwf	postinc1,c
  9589  0177B4  EC56  F0E4         	call	_StartTimer	;wreg free
  9590                           
  9591                           ;bsoc.c: 233:   } else {
  9592  0177B8  D006               	goto	l12016
  9593  0177BA                     l12012:
  9594                           
  9595                           ;bsoc.c: 234:    return -3.0;
  9596  0177BA  0E00               	movlw	0
  9597  0177BC  6E01               	movwf	btemp^0,c
  9598  0177BE  0E00               	movlw	0
  9599  0177C0  6E02               	movwf	(btemp+1)^0,c
  9600  0177C2  0E40               	movlw	64
  9601  0177C4  D037               	goto	L8
  9602  0177C6                     l12016:
  9603                           
  9604                           ;bsoc.c: 237:   update_adc_result();
  9605  0177C6  ECD5  F0E4         	call	_update_adc_result	;wreg free
  9606                           
  9607                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  9608  0177CA  0E00               	movlw	0
  9609  0177CC  6EE6               	movwf	postinc1,c
  9610  0177CE  0E04               	movlw	4
  9611  0177D0  6EE6               	movwf	postinc1,c
  9612  0177D2  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9613  0177D6  0060  F004  F919   	movff	btemp,_C+282	;volatile
  9614  0177DC  0060  F008  F91A   	movff	btemp+1,_C+283	;volatile
  9615  0177E2  0060  F00C  F91B   	movff	btemp+2,_C+284	;volatile
  9616  0177E8  0060  F010  F91C   	movff	btemp+3,_C+285	;volatile
  9617                           
  9618                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  9619  0177EE  0E00               	movlw	0
  9620  0177F0  6EE6               	movwf	postinc1,c
  9621  0177F2  0E00               	movlw	0
  9622  0177F4  6EE6               	movwf	postinc1,c
  9623  0177F6  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9624  0177FA  0060  F004  F90D   	movff	btemp,_C+270	;volatile
  9625  017800  0060  F008  F90E   	movff	btemp+1,_C+271	;volatile
  9626  017806  0060  F00C  F90F   	movff	btemp+2,_C+272	;volatile
  9627  01780C  0060  F010  F910   	movff	btemp+3,_C+273	;volatile
  9628  017812  D789               	goto	l11988
  9629  017814                     l12024:
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;bsoc.c: 243:   set_load_relay_two(1);
  9633  017814  0E01               	movlw	1
  9634  017816  6EE6               	movwf	postinc1,c
  9635  017818  EC63  F0E9         	call	_set_load_relay_two	;wreg free
  9636                           
  9637                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9638  01781C  0E0C               	movlw	12
  9639  01781E  6EE6               	movwf	postinc1,c
  9640  017820  ECC5  F0E6         	call	_TimerDone	;wreg free
  9641  017824  5001               	movf	btemp^0,w,c
  9642  017826  A4D8               	btfss	status,2,c
  9643  017828  D008               	goto	l12032
  9644                           
  9645                           ;bsoc.c: 245:    return -4.0;
  9646  01782A  0E00               	movlw	0
  9647  01782C  6E01               	movwf	btemp^0,c
  9648  01782E  0E00               	movlw	0
  9649  017830  6E02               	movwf	(btemp+1)^0,c
  9650  017832  0E80               	movlw	128
  9651  017834                     L8:
  9652  017834  6E03               	movwf	(btemp+2)^0,c
  9653  017836  0EC0               	movlw	192
  9654  017838  D0C9               	goto	L6
  9655  01783A                     l12032:
  9656                           
  9657                           ;bsoc.c: 247:   update_adc_result();
  9658  01783A  ECD5  F0E4         	call	_update_adc_result	;wreg free
  9659                           
  9660                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9661  01783E  0E00               	movlw	0
  9662  017840  6EE6               	movwf	postinc1,c
  9663  017842  0E04               	movlw	4
  9664  017844  6EE6               	movwf	postinc1,c
  9665  017846  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9666  01784A  0060  F004  F91D   	movff	btemp,_C+286	;volatile
  9667  017850  0060  F008  F91E   	movff	btemp+1,_C+287	;volatile
  9668  017856  0060  F00C  F91F   	movff	btemp+2,_C+288	;volatile
  9669  01785C  0060  F010  F920   	movff	btemp+3,_C+289	;volatile
  9670                           
  9671                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9672  017862  0E00               	movlw	0
  9673  017864  6EE6               	movwf	postinc1,c
  9674  017866  0E00               	movlw	0
  9675  017868  6EE6               	movwf	postinc1,c
  9676  01786A  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9677  01786E  0060  F004  F911   	movff	btemp,_C+274	;volatile
  9678  017874  0060  F008  F912   	movff	btemp+1,_C+275	;volatile
  9679  01787A  0060  F00C  F913   	movff	btemp+2,_C+276	;volatile
  9680  017880  0060  F010  F914   	movff	btemp+3,_C+277	;volatile
  9681                           
  9682                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9683  017886  EE22  F111         	lfsr	2,_C+274	;volatile
  9684  01788A  006F FF7B FFE6     	movff	postinc2,postinc1
  9685  017890  006F FF7B FFE6     	movff	postinc2,postinc1
  9686  017896  006F FF7B FFE6     	movff	postinc2,postinc1
  9687  01789C  006F FF7B FFE6     	movff	postinc2,postinc1
  9688  0178A2  EE22  F10D         	lfsr	2,_C+270	;volatile
  9689  0178A6  006F FF7B FFE6     	movff	postinc2,postinc1
  9690  0178AC  006F FF7B FFE6     	movff	postinc2,postinc1
  9691  0178B2  006F FF7B FFE6     	movff	postinc2,postinc1
  9692  0178B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9693  0178BE  ECB0  F0E3         	call	___flsub	;wreg free
  9694  0178C2  0060  F007  FFE6   	movff	btemp,postinc1
  9695  0178C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9696  0178CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9697  0178D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  9698  0178DA  EE22  F11D         	lfsr	2,_C+286	;volatile
  9699  0178DE  006F FF7B FFE6     	movff	postinc2,postinc1
  9700  0178E4  006F FF7B FFE6     	movff	postinc2,postinc1
  9701  0178EA  006F FF7B FFE6     	movff	postinc2,postinc1
  9702  0178F0  006F FF7B FFE6     	movff	postinc2,postinc1
  9703  0178F6  EE22  F119         	lfsr	2,_C+282	;volatile
  9704  0178FA  006F FF7B FFE6     	movff	postinc2,postinc1
  9705  017900  006F FF7B FFE6     	movff	postinc2,postinc1
  9706  017906  006F FF7B FFE6     	movff	postinc2,postinc1
  9707  01790C  006F FF7B FFE6     	movff	postinc2,postinc1
  9708  017912  ECB0  F0E3         	call	___flsub	;wreg free
  9709  017916  0060  F007  FFE6   	movff	btemp,postinc1
  9710  01791C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9711  017922  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9712  017928  0060  F013  FFE6   	movff	btemp+3,postinc1
  9713  01792E  EC61  F0A7         	call	___fldiv	;wreg free
  9714  017932  0060  F007  FFE6   	movff	btemp,postinc1
  9715  017938  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9716  01793E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9717  017944  0060  F013  FFE6   	movff	btemp+3,postinc1
  9718  01794A  EC52  F0DA         	call	_fabsf	;wreg free
  9719  01794E  0060  F004  F887   	movff	btemp,_C+136	;volatile
  9720  017954  0060  F008  F888   	movff	btemp+1,_C+137	;volatile
  9721  01795A  0060  F00C  F889   	movff	btemp+2,_C+138	;volatile
  9722  017960  0060  F010  F88A   	movff	btemp+3,_C+139	;volatile
  9723                           
  9724                           ;bsoc.c: 252:   set_load_relay_one(0);
  9725  017966  0E00               	movlw	0
  9726  017968  6EE6               	movwf	postinc1,c
  9727  01796A  EC6B  F0E9         	call	_set_load_relay_one	;wreg free
  9728                           
  9729                           ;bsoc.c: 253:   set_load_relay_two(0);
  9730  01796E  0E00               	movlw	0
  9731  017970  6EE6               	movwf	postinc1,c
  9732  017972  EC63  F0E9         	call	_set_load_relay_two	;wreg free
  9733                           
  9734                           ;bsoc.c: 254:   esr_state = 0;
  9735  017976  0100               	movlb	0	; () banked
  9736  017978  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;bsoc.c: 255:   return C.esr;
  9740  01797A  0062  F21C  F001   	movff	_C+136,btemp	;volatile
  9741  017980  0062  F220  F002   	movff	_C+137,btemp+1	;volatile
  9742  017986  0062  F224  F003   	movff	_C+138,btemp+2	;volatile
  9743  01798C  0062  F228  F004   	movff	_C+139,btemp+3	;volatile
  9744  017992  D01D               	goto	l2343
  9745  017994                     l12054:
  9746  017994  0100               	movlb	0	; () banked
  9747  017996  51A0               	movf	esr_check@esr_state& (0+255),w,b
  9748  017998  6E0B               	movwf	(btemp+10)^0,c
  9749  01799A  6A0C               	clrf	(btemp+11)^0,c
  9750                           
  9751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9752                           ; Switch size 1, requested type "simple"
  9753                           ; Number of cases is 1, Range of values is 0 to 0
  9754                           ; switch strategies available:
  9755                           ; Name         Instructions Cycles
  9756                           ; simple_byte            4     3 (average)
  9757                           ;	Chosen strategy is simple_byte
  9758  01799C  500C               	movf	(btemp+11)^0,w,c
  9759  01799E  0A00               	xorlw	0	; case 0
  9760  0179A0  A4D8               	btfss	status,2,c
  9761  0179A2  D00D               	goto	l12056
  9762                           
  9763                           ; BSR set to: 0
  9764                           ; Switch size 1, requested type "simple"
  9765                           ; Number of cases is 4, Range of values is 0 to 3
  9766                           ; switch strategies available:
  9767                           ; Name         Instructions Cycles
  9768                           ; simple_byte           13     7 (average)
  9769                           ;	Chosen strategy is simple_byte
  9770  0179A4  500B               	movf	(btemp+10)^0,w,c
  9771  0179A6  0A00               	xorlw	0	; case 0
  9772  0179A8  B4D8               	btfsc	status,2,c
  9773  0179AA  D6B5               	goto	l11986
  9774  0179AC  0A01               	xorlw	1	; case 1
  9775  0179AE  B4D8               	btfsc	status,2,c
  9776  0179B0  D6BD               	goto	l11990
  9777  0179B2  0A03               	xorlw	3	; case 2
  9778  0179B4  B4D8               	btfsc	status,2,c
  9779  0179B6  D6ED               	goto	l12006
  9780  0179B8  0A01               	xorlw	1	; case 3
  9781  0179BA  B4D8               	btfsc	status,2,c
  9782  0179BC  D72B               	goto	l12024
  9783  0179BE                     l12056:
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;bsoc.c: 260:  return -1.0;
  9787  0179BE  0E00               	movlw	0
  9788  0179C0  6E01               	movwf	btemp^0,c
  9789  0179C2  0E00               	movlw	0
  9790  0179C4  6E02               	movwf	(btemp+1)^0,c
  9791  0179C6  0E80               	movlw	128
  9792  0179C8  6E03               	movwf	(btemp+2)^0,c
  9793  0179CA  0EBF               	movlw	191
  9794  0179CC                     L6:
  9795  0179CC  6E04               	movwf	(btemp+3)^0,c
  9796  0179CE                     l2343:
  9797                           
  9798                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9799  0179CE  52E5               	movf	postdec1,f,c
  9800  0179D0  0012               	return		;funcret
  9801  0179D2                     __end_of_esr_check:
  9802                           	opt callstack 0
  9803                           
  9804 ;; *************** function _update_adc_result *****************
  9805 ;; Defined at:
  9806 ;;		line 104 in file "daq.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;		None
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;		None
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  1  [STACK] _Bool 
  9813 ;; Registers used:
  9814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9824 ;;Total ram usage:        0 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; Hardware stack levels required when called:   17
  9827 ;; This function calls:
  9828 ;;		_StartTimer
  9829 ;;		_TimerDone
  9830 ;;		_check_adc_scan
  9831 ;;		_clear_adc_scan
  9832 ;;		_start_adc_scan
  9833 ;; This function is called by:
  9834 ;;		_esr_check
  9835 ;; This function uses a reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text24
  9839  01C9AA                     __ptext24:
  9840                           	opt callstack 0
  9841  01C9AA                     _update_adc_result:
  9842                           	opt callstack 12
  9843                           
  9844                           ;daq.c: 106:  if (R.done) {
  9845                           
  9846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9847                           ;incstack = 0
  9848  01C9AA  0100               	movlb	0	; () banked
  9849  01C9AC  51E3               	movf	(_R+53)& (0+255),w,b	;volatile
  9850  01C9AE  B4D8               	btfsc	status,2,c
  9851  01C9B0  0012               	return	
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;daq.c: 107:   clear_adc_scan();
  9855  01C9B2  ECE2  F0E9         	call	_clear_adc_scan	;wreg free
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;daq.c: 108:   start_adc_scan();
  9859  01C9B6  ECED  F0E0         	call	_start_adc_scan	;wreg free
  9860                           
  9861                           ;daq.c: 109:   StartTimer(TMR_ADC, 200);
  9862  01C9BA  0EC8               	movlw	200
  9863  01C9BC  6EE6               	movwf	postinc1,c
  9864  01C9BE  0E00               	movlw	0
  9865  01C9C0  6EE6               	movwf	postinc1,c
  9866  01C9C2  0E01               	movlw	1
  9867  01C9C4  6EE6               	movwf	postinc1,c
  9868  01C9C6  EC56  F0E4         	call	_StartTimer	;wreg free
  9869  01C9CA                     l11454:
  9870  01C9CA  0E01               	movlw	1
  9871  01C9CC  6EE6               	movwf	postinc1,c
  9872  01C9CE  ECC5  F0E6         	call	_TimerDone	;wreg free
  9873  01C9D2  5001               	movf	btemp^0,w,c
  9874  01C9D4  A4D8               	btfss	status,2,c
  9875  01C9D6  0012               	return	
  9876  01C9D8  ECCB  F0E9         	call	_check_adc_scan	;wreg free
  9877  01C9DC  5001               	movf	btemp^0,w,c
  9878  01C9DE  A4D8               	btfss	status,2,c
  9879  01C9E0  0012               	return	
  9880  01C9E2  D7F3               	goto	l11454
  9881  01C9E4                     __end_of_update_adc_result:
  9882                           	opt callstack 0
  9883                           
  9884 ;; *************** function _check_adc_scan *****************
  9885 ;; Defined at:
  9886 ;;		line 88 in file "daq.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;		None
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1  [STACK] _Bool 
  9893 ;; Registers used:
  9894 ;;		btemp
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/1
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9904 ;;Total ram usage:        0 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:   15
  9907 ;; This function calls:
  9908 ;;		Nothing
  9909 ;; This function is called by:
  9910 ;;		_main
  9911 ;;		_update_adc_result
  9912 ;; This function uses a reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text25
  9916  01D396                     __ptext25:
  9917                           	opt callstack 0
  9918  01D396                     _check_adc_scan:
  9919                           	opt callstack 13
  9920                           
  9921                           ;daq.c: 90:  return R.done;
  9922                           
  9923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9924                           ;incstack = 0
  9925  01D396  0060  F38C  F001   	movff	_R+53,btemp	;volatile
  9926                           
  9927                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9928  01D39C  0012               	return		;funcret
  9929  01D39E                     __end_of_check_adc_scan:
  9930                           	opt callstack 0
  9931                           
  9932 ;; *************** function _set_load_relay_two *****************
  9933 ;; Defined at:
  9934 ;;		line 130 in file "mbmc.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;  mode            1  [STACK] const _Bool 
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1  [STACK] void 
  9941 ;; Registers used:
  9942 ;;		wreg, fsr1l, fsr1h
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9952 ;;Total ram usage:        0 bytes
  9953 ;; Hardware stack levels used:    1
  9954 ;; Hardware stack levels required when called:   15
  9955 ;; This function calls:
  9956 ;;		Nothing
  9957 ;; This function is called by:
  9958 ;;		_main
  9959 ;;		_esr_check
  9960 ;; This function uses a reentrant model
  9961 ;;
  9962                           
  9963                           	psect	text26
  9964  01D2C6                     __ptext26:
  9965                           	opt callstack 0
  9966  01D2C6                     _set_load_relay_two:
  9967                           	opt callstack 15
  9968                           
  9969                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9970                           ;stkvar	_mode @ sp[(0)+-1]
  9971                           
  9972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9973                           ;incstack = 0
  9974  01D2C6  0EFF               	movlw	-1
  9975  01D2C8  B0E3               	btfsc	plusw1,0,c
  9976  01D2CA  D002               	bra	u10145
  9977  01D2CC  9ABD               	bcf	189,5,c	;volatile
  9978  01D2CE  D001               	bra	u10146
  9979  01D2D0                     u10145:
  9980  01D2D0  8ABD               	bsf	189,5,c	;volatile
  9981  01D2D2                     u10146:
  9982                           
  9983                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9984  01D2D2  52E5               	movf	postdec1,f,c
  9985  01D2D4  0012               	return		;funcret
  9986  01D2D6                     __end_of_set_load_relay_two:
  9987                           	opt callstack 0
  9988                           
  9989 ;; *************** function _set_load_relay_one *****************
  9990 ;; Defined at:
  9991 ;;		line 125 in file "mbmc.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;  mode            1  [STACK] const _Bool 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1  [STACK] void 
  9998 ;; Registers used:
  9999 ;;		wreg, fsr1l, fsr1h
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10009 ;;Total ram usage:        0 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:   15
 10012 ;; This function calls:
 10013 ;;		Nothing
 10014 ;; This function is called by:
 10015 ;;		_main
 10016 ;;		_esr_check
 10017 ;; This function uses a reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text27
 10021  01D2D6                     __ptext27:
 10022                           	opt callstack 0
 10023  01D2D6                     _set_load_relay_one:
 10024                           	opt callstack 15
 10025                           
 10026                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
 10027                           ;stkvar	_mode @ sp[(0)+-1]
 10028                           
 10029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10030                           ;incstack = 0
 10031  01D2D6  0EFF               	movlw	-1
 10032  01D2D8  B0E3               	btfsc	plusw1,0,c
 10033  01D2DA  D002               	bra	u10135
 10034  01D2DC  98BD               	bcf	189,4,c	;volatile
 10035  01D2DE  D001               	bra	u10136
 10036  01D2E0                     u10135:
 10037  01D2E0  88BD               	bsf	189,4,c	;volatile
 10038  01D2E2                     u10136:
 10039                           
 10040                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10041  01D2E2  52E5               	movf	postdec1,f,c
 10042  01D2E4  0012               	return		;funcret
 10043  01D2E6                     __end_of_set_load_relay_one:
 10044                           	opt callstack 0
 10045                           
 10046 ;; *************** function _eaDogM_WriteCommand *****************
 10047 ;; Defined at:
 10048 ;;		line 385 in file "eadog.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;  cmd             1  [STACK] const unsigned char 
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;		None
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1  [STACK] void 
 10055 ;; Registers used:
 10056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10057 ;; Tracked objects:
 10058 ;;		On entry : 3F/3D
 10059 ;;		On exit  : 3F/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10066 ;;Total ram usage:        0 bytes
 10067 ;; Hardware stack levels used:    1
 10068 ;; Hardware stack levels required when called:   26
 10069 ;; This function calls:
 10070 ;;		_send_lcd_cmd_dma
 10071 ;; This function is called by:
 10072 ;;		_main
 10073 ;; This function uses a reentrant model
 10074 ;;
 10075                           
 10076                           	psect	text28
 10077  01D316                     __ptext28:
 10078                           	opt callstack 0
 10079  01D316                     _eaDogM_WriteCommand:
 10080                           	opt callstack 4
 10081                           
 10082                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10083                           ;stkvar	_cmd @ sp[(0)+-1]
 10084                           
 10085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10086                           ;incstack = 0
 10087  01D316  0EFF               	movlw	-1
 10088  01D318  50E3               	movf	plusw1,w,c
 10089  01D31A  6EE6               	movwf	postinc1,c
 10090  01D31C  ECAC  F0E8         	call	_send_lcd_cmd_dma	;wreg free
 10091                           
 10092                           ; BSR set to: 0
 10093                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10094  01D320  52E5               	movf	postdec1,f,c
 10095  01D322  0012               	return		;funcret
 10096  01D324                     __end_of_eaDogM_WriteCommand:
 10097                           	opt callstack 0
 10098                           
 10099 ;; *************** function _current_sensor_cal *****************
 10100 ;; Defined at:
 10101 ;;		line 483 in file "main.c"
 10102 ;; Parameters:    Size  Location     Type
 10103 ;;		None
 10104 ;; Auto vars:     Size  Location     Type
 10105 ;;  cp              4  [STACK] unsigned long 
 10106 ;;  cb              4  [STACK] unsigned long 
 10107 ;;  x               1  [STACK] unsigned char 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1  [STACK] _Bool 
 10110 ;; Registers used:
 10111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/1
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10121 ;;Total ram usage:        0 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:   28
 10124 ;; This function calls:
 10125 ;;		_WaitMs
 10126 ;;		_cal_current_zero
 10127 ;;		_clear_adc_scan
 10128 ;;		_get_raw_result
 10129 ;;		_get_switch
 10130 ;;		_get_vterm_ptr
 10131 ;;		_spinners
 10132 ;;		_sprintf
 10133 ;;		_start_adc_scan
 10134 ;;		_update_lcd
 10135 ;;		_write_cal_data
 10136 ;; This function is called by:
 10137 ;;		_main
 10138 ;; This function uses a reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text29
 10142  0158F8                     __ptext29:
 10143                           	opt callstack 0
 10144  0158F8                     _current_sensor_cal:
 10145                           	opt callstack 0
 10146                           
 10147                           ; BSR set to: 0
 10148                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10149  0158F8  0E09               	movlw	9
 10150  0158FA  26E1               	addwf	fsr1l,f,c
 10151  0158FC  0E00               	movlw	0
 10152  0158FE  22E2               	addwfc	fsr1h,f,c
 10153                           
 10154                           ;main.c: 485:  uint8_t x = 0;
 10155                           ;stkvar	_x @ sp[(-9)+8]
 10156                           
 10157                           ;incstack = 0
 10158  015900  0EFF               	movlw	-1
 10159  015902  6AE3               	clrf	plusw1,c
 10160                           
 10161                           ;main.c: 486:  uint32_t cb = 0, cp = 0;
 10162                           ;stkvar	_cb @ sp[(-9)+4]
 10163  015904  0EFB               	movlw	-5
 10164  015906  6AE3               	clrf	plusw1,c
 10165  015908  0EFC               	movlw	-4
 10166  01590A  6AE3               	clrf	plusw1,c
 10167  01590C  0EFD               	movlw	-3
 10168  01590E  6AE3               	clrf	plusw1,c
 10169  015910  0EFE               	movlw	-2
 10170  015912  6AE3               	clrf	plusw1,c
 10171                           
 10172                           ;stkvar	_cp @ sp[(-9)+0]
 10173  015914  0EF7               	movlw	-9
 10174  015916  6AE3               	clrf	plusw1,c
 10175  015918  0EF8               	movlw	-8
 10176  01591A  6AE3               	clrf	plusw1,c
 10177  01591C  0EF9               	movlw	-7
 10178  01591E  6AE3               	clrf	plusw1,c
 10179  015920  0EFA               	movlw	-6
 10180  015922  6AE3               	clrf	plusw1,c
 10181                           
 10182                           ;main.c: 488:  sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10183  015924  0EB6               	movlw	low STR_46
 10184  015926  6EE6               	movwf	postinc1,c
 10185  015928  0EFE               	movlw	high STR_46
 10186  01592A  6EE6               	movwf	postinc1,c
 10187  01592C  0E00               	movlw	0
 10188  01592E  6EE6               	movwf	postinc1,c
 10189  015930  0E00               	movlw	0
 10190  015932  6EE6               	movwf	postinc1,c
 10191  015934  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10192  015938  0060  F007  FFE6   	movff	btemp,postinc1
 10193  01593E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10194  015944  0E04               	movlw	4
 10195  015946  6EE6               	movwf	postinc1,c
 10196  015948  EC46  F0D5         	call	_sprintf	;wreg free
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;main.c: 489:  sprintf(get_vterm_ptr(1, 0), "Sensor              ");
 10200  01594C  0ECF               	movlw	low STR_47
 10201  01594E  6EE6               	movwf	postinc1,c
 10202  015950  0EFD               	movlw	high STR_47
 10203  015952  6EE6               	movwf	postinc1,c
 10204  015954  0E00               	movlw	0
 10205  015956  6EE6               	movwf	postinc1,c
 10206  015958  0E01               	movlw	1
 10207  01595A  6EE6               	movwf	postinc1,c
 10208  01595C  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10209  015960  0060  F007  FFE6   	movff	btemp,postinc1
 10210  015966  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10211  01596C  0E04               	movlw	4
 10212  01596E  6EE6               	movwf	postinc1,c
 10213  015970  EC46  F0D5         	call	_sprintf	;wreg free
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;main.c: 490:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10217  015974  0E4D               	movlw	low STR_48
 10218  015976  6EE6               	movwf	postinc1,c
 10219  015978  0EFE               	movlw	high STR_48
 10220  01597A  6EE6               	movwf	postinc1,c
 10221  01597C  0E00               	movlw	0
 10222  01597E  6EE6               	movwf	postinc1,c
 10223  015980  0E02               	movlw	2
 10224  015982  6EE6               	movwf	postinc1,c
 10225  015984  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10226  015988  0060  F007  FFE6   	movff	btemp,postinc1
 10227  01598E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10228  015994  0E04               	movlw	4
 10229  015996  6EE6               	movwf	postinc1,c
 10230  015998  EC46  F0D5         	call	_sprintf	;wreg free
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;main.c: 491:  update_lcd(0);
 10234  01599C  0E00               	movlw	0
 10235  01599E  6EE6               	movwf	postinc1,c
 10236  0159A0  ECBE  F0D4         	call	_update_lcd	;wreg free
 10237                           
 10238                           ;main.c: 492:  WaitMs(2000);
 10239  0159A4  0ED0               	movlw	208
 10240  0159A6  6EE6               	movwf	postinc1,c
 10241  0159A8  0E07               	movlw	7
 10242  0159AA  6EE6               	movwf	postinc1,c
 10243  0159AC  EC47  F0E5         	call	_WaitMs	;wreg free
 10244                           
 10245                           ;main.c: 493:  sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10246  0159B0  0E00               	movlw	0
 10247  0159B2  6EE6               	movwf	postinc1,c
 10248  0159B4  0E04               	movlw	4
 10249  0159B6  6EE6               	movwf	postinc1,c
 10250  0159B8  ECCB  F0D5         	call	_spinners	;wreg free
 10251  0159BC  5001               	movf	btemp^0,w,c
 10252  0159BE  6EE6               	movwf	postinc1,c
 10253  0159C0  0E00               	movlw	0
 10254  0159C2  6EE6               	movwf	postinc1,c
 10255  0159C4  0E49               	movlw	low STR_49
 10256  0159C6  6EE6               	movwf	postinc1,c
 10257  0159C8  0EFF               	movlw	high STR_49
 10258  0159CA  6EE6               	movwf	postinc1,c
 10259  0159CC  0E00               	movlw	0
 10260  0159CE  6EE6               	movwf	postinc1,c
 10261  0159D0  0E02               	movlw	2
 10262  0159D2  6EE6               	movwf	postinc1,c
 10263  0159D4  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10264  0159D8  0060  F007  FFE6   	movff	btemp,postinc1
 10265  0159DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10266  0159E4  0E06               	movlw	6
 10267  0159E6  6EE6               	movwf	postinc1,c
 10268  0159E8  EC46  F0D5         	call	_sprintf	;wreg free
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;main.c: 494:  update_lcd(0);
 10272  0159EC  0E00               	movlw	0
 10273  0159EE  6EE6               	movwf	postinc1,c
 10274  0159F0  ECBE  F0D4         	call	_update_lcd	;wreg free
 10275  0159F4                     l14198:
 10276                           
 10277                           ;main.c: 496:   if (++x > 64)
 10278                           ;stkvar	_x @ sp[(-9)+8]
 10279  0159F4  0EFF               	movlw	-1
 10280  0159F6  2AE3               	incf	plusw1,f,c
 10281  0159F8  0EFF               	movlw	-1
 10282  0159FA  006F FF8C  F001    	movff	plusw1,btemp
 10283  015A00  0E40               	movlw	64
 10284  015A02  6401               	cpfsgt	btemp^0,c
 10285  015A04  D001               	goto	l14202
 10286  015A06  D1CF               	goto	l1499
 10287  015A08                     l14202:
 10288                           
 10289                           ;main.c: 498:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10290  015A08  0E00               	movlw	0
 10291  015A0A  6EE6               	movwf	postinc1,c
 10292  015A0C  0E04               	movlw	4
 10293  015A0E  6EE6               	movwf	postinc1,c
 10294  015A10  ECCB  F0D5         	call	_spinners	;wreg free
 10295  015A14  5001               	movf	btemp^0,w,c
 10296  015A16  6EE6               	movwf	postinc1,c
 10297  015A18  0E00               	movlw	0
 10298  015A1A  6EE6               	movwf	postinc1,c
 10299  015A1C  0E49               	movlw	low STR_49
 10300  015A1E  6EE6               	movwf	postinc1,c
 10301  015A20  0EFF               	movlw	high STR_49
 10302  015A22  6EE6               	movwf	postinc1,c
 10303  015A24  0E00               	movlw	0
 10304  015A26  6EE6               	movwf	postinc1,c
 10305  015A28  0E02               	movlw	2
 10306  015A2A  6EE6               	movwf	postinc1,c
 10307  015A2C  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10308  015A30  0060  F007  FFE6   	movff	btemp,postinc1
 10309  015A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10310  015A3C  0E06               	movlw	6
 10311  015A3E  6EE6               	movwf	postinc1,c
 10312  015A40  EC46  F0D5         	call	_sprintf	;wreg free
 10313                           
 10314                           ;main.c: 499:   update_lcd(0);
 10315  015A44  0E00               	movlw	0
 10316  015A46  6EE6               	movwf	postinc1,c
 10317  015A48  ECBE  F0D4         	call	_update_lcd	;wreg free
 10318                           
 10319                           ;main.c: 500:   WaitMs(100);
 10320  015A4C  0E64               	movlw	100
 10321  015A4E  6EE6               	movwf	postinc1,c
 10322  015A50  0E00               	movlw	0
 10323  015A52  6EE6               	movwf	postinc1,c
 10324  015A54  EC47  F0E5         	call	_WaitMs	;wreg free
 10325                           
 10326                           ;main.c: 501:  } while (get_switch(SCALIB));
 10327  015A58  0E04               	movlw	4
 10328  015A5A  6EE6               	movwf	postinc1,c
 10329  015A5C  EC5A  F0E6         	call	_get_switch	;wreg free
 10330  015A60  5001               	movf	btemp^0,w,c
 10331  015A62  A4D8               	btfss	status,2,c
 10332  015A64  D7C7               	goto	l14198
 10333                           
 10334                           ;main.c: 503:  x = 0;
 10335                           ;stkvar	_x @ sp[(-9)+8]
 10336  015A66  0EFF               	movlw	-1
 10337  015A68  6AE3               	clrf	plusw1,c
 10338  015A6A                     l14210:
 10339                           
 10340                           ;main.c: 505:   cb += get_raw_result(C_BATT);
 10341  015A6A  0E00               	movlw	0
 10342  015A6C  6EE6               	movwf	postinc1,c
 10343  015A6E  ECD9  F0E8         	call	_get_raw_result	;wreg free
 10344                           
 10345                           ;stkvar	_cb @ sp[(-9)+4]
 10346  015A72  50E1               	movf	fsr1l,w,c
 10347  015A74  0FFB               	addlw	-5
 10348  015A76  6ED9               	movwf	fsr2l,c
 10349  015A78  50E2               	movf	fsr1h,w,c
 10350  015A7A  6EDA               	movwf	fsr2h,c
 10351  015A7C  0EFF               	movlw	255
 10352  015A7E  22DA               	addwfc	fsr2h,f,c
 10353  015A80  5001               	movf	btemp^0,w,c
 10354  015A82  26DE               	addwf	postinc2,f,c
 10355  015A84  5002               	movf	(btemp+1)^0,w,c
 10356  015A86  22DE               	addwfc	postinc2,f,c
 10357  015A88  0E00               	movlw	0
 10358  015A8A  22DE               	addwfc	postinc2,f,c
 10359  015A8C  22DE               	addwfc	postinc2,f,c
 10360                           
 10361                           ;main.c: 506:   cp += get_raw_result(C_PV);
 10362  015A8E  0E01               	movlw	1
 10363  015A90  6EE6               	movwf	postinc1,c
 10364  015A92  ECD9  F0E8         	call	_get_raw_result	;wreg free
 10365                           
 10366                           ;stkvar	_cp @ sp[(-9)+0]
 10367  015A96  50E1               	movf	fsr1l,w,c
 10368  015A98  0FF7               	addlw	-9
 10369  015A9A  6ED9               	movwf	fsr2l,c
 10370  015A9C  50E2               	movf	fsr1h,w,c
 10371  015A9E  6EDA               	movwf	fsr2h,c
 10372  015AA0  0EFF               	movlw	255
 10373  015AA2  22DA               	addwfc	fsr2h,f,c
 10374  015AA4  5001               	movf	btemp^0,w,c
 10375  015AA6  26DE               	addwf	postinc2,f,c
 10376  015AA8  5002               	movf	(btemp+1)^0,w,c
 10377  015AAA  22DE               	addwfc	postinc2,f,c
 10378  015AAC  0E00               	movlw	0
 10379  015AAE  22DE               	addwfc	postinc2,f,c
 10380  015AB0  22DE               	addwfc	postinc2,f,c
 10381                           
 10382                           ;main.c: 507:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 10383  015AB2  0EE0               	movlw	low STR_51
 10384  015AB4  6EE6               	movwf	postinc1,c
 10385  015AB6  0EFE               	movlw	high STR_51
 10386  015AB8  6EE6               	movwf	postinc1,c
 10387  015ABA  0E00               	movlw	0
 10388  015ABC  6EE6               	movwf	postinc1,c
 10389  015ABE  0E00               	movlw	0
 10390  015AC0  6EE6               	movwf	postinc1,c
 10391  015AC2  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10392  015AC6  0060  F007  FFE6   	movff	btemp,postinc1
 10393  015ACC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10394  015AD2  0E04               	movlw	4
 10395  015AD4  6EE6               	movwf	postinc1,c
 10396  015AD6  EC46  F0D5         	call	_sprintf	;wreg free
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;main.c: 508:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10400  015ADA  0E01               	movlw	1
 10401  015ADC  6EE6               	movwf	postinc1,c
 10402  015ADE  ECD9  F0E8         	call	_get_raw_result	;wreg free
 10403  015AE2  0060  F007  FFE6   	movff	btemp,postinc1
 10404  015AE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10405  015AEE  0E00               	movlw	0
 10406  015AF0  6EE6               	movwf	postinc1,c
 10407  015AF2  ECD9  F0E8         	call	_get_raw_result	;wreg free
 10408  015AF6  0060  F007  FFE6   	movff	btemp,postinc1
 10409  015AFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10410  015B02  0EBA               	movlw	low STR_52
 10411  015B04  6EE6               	movwf	postinc1,c
 10412  015B06  0EFD               	movlw	high STR_52
 10413  015B08  6EE6               	movwf	postinc1,c
 10414  015B0A  0E00               	movlw	0
 10415  015B0C  6EE6               	movwf	postinc1,c
 10416  015B0E  0E01               	movlw	1
 10417  015B10  6EE6               	movwf	postinc1,c
 10418  015B12  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10419  015B16  0060  F007  FFE6   	movff	btemp,postinc1
 10420  015B1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10421  015B22  0E08               	movlw	8
 10422  015B24  6EE6               	movwf	postinc1,c
 10423  015B26  EC46  F0D5         	call	_sprintf	;wreg free
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;main.c: 509:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 10427                           ;stkvar	_x @ sp[(-9)+8]
 10428  015B2A  0EFF               	movlw	-1
 10429  015B2C  50E3               	movf	plusw1,w,c
 10430  015B2E  6EE6               	movwf	postinc1,c
 10431  015B30  0E00               	movlw	0
 10432  015B32  6EE6               	movwf	postinc1,c
 10433  015B34  0E1F               	movlw	low STR_53
 10434  015B36  6EE6               	movwf	postinc1,c
 10435  015B38  0EFF               	movlw	high STR_53
 10436  015B3A  6EE6               	movwf	postinc1,c
 10437  015B3C  0E00               	movlw	0
 10438  015B3E  6EE6               	movwf	postinc1,c
 10439  015B40  0E02               	movlw	2
 10440  015B42  6EE6               	movwf	postinc1,c
 10441  015B44  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10442  015B48  0060  F007  FFE6   	movff	btemp,postinc1
 10443  015B4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10444  015B54  0E06               	movlw	6
 10445  015B56  6EE6               	movwf	postinc1,c
 10446  015B58  EC46  F0D5         	call	_sprintf	;wreg free
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;main.c: 510:   update_lcd(0);
 10450  015B5C  0E00               	movlw	0
 10451  015B5E  6EE6               	movwf	postinc1,c
 10452  015B60  ECBE  F0D4         	call	_update_lcd	;wreg free
 10453                           
 10454                           ;main.c: 511:   clear_adc_scan();
 10455  015B64  ECE2  F0E9         	call	_clear_adc_scan	;wreg free
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;main.c: 512:   start_adc_scan();
 10459  015B68  ECED  F0E0         	call	_start_adc_scan	;wreg free
 10460                           
 10461                           ;main.c: 513:   WaitMs(100);
 10462  015B6C  0E64               	movlw	100
 10463  015B6E  6EE6               	movwf	postinc1,c
 10464  015B70  0E00               	movlw	0
 10465  015B72  6EE6               	movwf	postinc1,c
 10466  015B74  EC47  F0E5         	call	_WaitMs	;wreg free
 10467                           
 10468                           ;main.c: 514:  } while (++x < 64);
 10469                           ;stkvar	_x @ sp[(-9)+8]
 10470  015B78  0EFF               	movlw	-1
 10471  015B7A  2AE3               	incf	plusw1,f,c
 10472  015B7C  0EFF               	movlw	-1
 10473  015B7E  006F FF8C  F001    	movff	plusw1,btemp
 10474  015B84  0E3F               	movlw	63
 10475  015B86  6401               	cpfsgt	btemp^0,c
 10476  015B88  D770               	goto	l14210
 10477                           
 10478                           ;main.c: 515:  cb = cb >> 6;
 10479  015B8A  0E06               	movlw	6
 10480  015B8C  6E0C               	movwf	(btemp+11)^0,c
 10481                           
 10482                           ;stkvar	_cb @ sp[(-9)+4]
 10483  015B8E  50E1               	movf	fsr1l,w,c
 10484  015B90  0FFB               	addlw	-5
 10485  015B92  6ED9               	movwf	fsr2l,c
 10486  015B94  50E2               	movf	fsr1h,w,c
 10487  015B96  6EDA               	movwf	fsr2h,c
 10488  015B98  0EFF               	movlw	255
 10489  015B9A  22DA               	addwfc	fsr2h,f,c
 10490  015B9C  280C               	incf	(btemp+11)^0,w,c
 10491  015B9E  52DE               	movf	postinc2,f,c
 10492  015BA0  D007               	goto	u13540
 10493  015BA2                     u13545:
 10494  015BA2  52DE               	movf	postinc2,f,c
 10495  015BA4  52DE               	movf	postinc2,f,c
 10496  015BA6  90D8               	bcf	status,0,c
 10497  015BA8  32DD               	rrcf	postdec2,f,c
 10498  015BAA  32DD               	rrcf	postdec2,f,c
 10499  015BAC  32DD               	rrcf	postdec2,f,c
 10500  015BAE  32DE               	rrcf	postinc2,f,c
 10501  015BB0                     u13540:
 10502  015BB0  2EE8               	decfsz	wreg,f,c
 10503  015BB2  D7F7               	goto	u13545
 10504                           
 10505                           ;main.c: 516:  cp = cp >> 6;
 10506  015BB4  0E06               	movlw	6
 10507  015BB6  6E0C               	movwf	(btemp+11)^0,c
 10508                           
 10509                           ;stkvar	_cp @ sp[(-9)+0]
 10510  015BB8  50E1               	movf	fsr1l,w,c
 10511  015BBA  0FF7               	addlw	-9
 10512  015BBC  6ED9               	movwf	fsr2l,c
 10513  015BBE  50E2               	movf	fsr1h,w,c
 10514  015BC0  6EDA               	movwf	fsr2h,c
 10515  015BC2  0EFF               	movlw	255
 10516  015BC4  22DA               	addwfc	fsr2h,f,c
 10517  015BC6  280C               	incf	(btemp+11)^0,w,c
 10518  015BC8  52DE               	movf	postinc2,f,c
 10519  015BCA  D007               	goto	u13550
 10520  015BCC                     u13555:
 10521  015BCC  52DE               	movf	postinc2,f,c
 10522  015BCE  52DE               	movf	postinc2,f,c
 10523  015BD0  90D8               	bcf	status,0,c
 10524  015BD2  32DD               	rrcf	postdec2,f,c
 10525  015BD4  32DD               	rrcf	postdec2,f,c
 10526  015BD6  32DD               	rrcf	postdec2,f,c
 10527  015BD8  32DE               	rrcf	postinc2,f,c
 10528  015BDA                     u13550:
 10529  015BDA  2EE8               	decfsz	wreg,f,c
 10530  015BDC  D7F7               	goto	u13555
 10531                           
 10532                           ;main.c: 518:  if (cal_current_zero(0, cb, cp)) {
 10533                           ;stkvar	_cp @ sp[(-9)+0]
 10534  015BDE  0EF7               	movlw	-9
 10535  015BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 10536  015BE6  006F FF8F FFE6     	movff	plusw1,postinc1
 10537                           
 10538                           ;stkvar	_cb @ sp[(-11)+4]
 10539  015BEC  0EF9               	movlw	-7
 10540  015BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10541  015BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10542  015BFA  0E00               	movlw	0
 10543  015BFC  6EE6               	movwf	postinc1,c
 10544  015BFE  EC73  F0DD         	call	_cal_current_zero	;wreg free
 10545  015C02  5001               	movf	btemp^0,w,c
 10546  015C04  B4D8               	btfsc	status,2,c
 10547  015C06  D075               	goto	l14248
 10548                           
 10549                           ;main.c: 519:   cal_current_zero(1, cb, cp);
 10550                           ;stkvar	_cp @ sp[(-9)+0]
 10551  015C08  0EF7               	movlw	-9
 10552  015C0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10553  015C10  006F FF8F FFE6     	movff	plusw1,postinc1
 10554                           
 10555                           ;stkvar	_cb @ sp[(-11)+4]
 10556  015C16  0EF9               	movlw	-7
 10557  015C18  006F FF8F FFE6     	movff	plusw1,postinc1
 10558  015C1E  006F FF8F FFE6     	movff	plusw1,postinc1
 10559  015C24  0E01               	movlw	1
 10560  015C26  6EE6               	movwf	postinc1,c
 10561  015C28  EC73  F0DD         	call	_cal_current_zero	;wreg free
 10562                           
 10563                           ;main.c: 520:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10564  015C2C  0EB6               	movlw	low STR_46
 10565  015C2E  6EE6               	movwf	postinc1,c
 10566  015C30  0EFE               	movlw	high STR_46
 10567  015C32  6EE6               	movwf	postinc1,c
 10568  015C34  0E00               	movlw	0
 10569  015C36  6EE6               	movwf	postinc1,c
 10570  015C38  0E00               	movlw	0
 10571  015C3A  6EE6               	movwf	postinc1,c
 10572  015C3C  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10573  015C40  0060  F007  FFE6   	movff	btemp,postinc1
 10574  015C46  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10575  015C4C  0E04               	movlw	4
 10576  015C4E  6EE6               	movwf	postinc1,c
 10577  015C50  EC46  F0D5         	call	_sprintf	;wreg free
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;main.c: 521:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 10581                           ;stkvar	_cp @ sp[(-9)+0]
 10582  015C54  0EF7               	movlw	-9
 10583  015C56  006F FF8F FFE6     	movff	plusw1,postinc1
 10584  015C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10585  015C62  006F FF8F FFE6     	movff	plusw1,postinc1
 10586  015C68  006F FF8F FFE6     	movff	plusw1,postinc1
 10587                           
 10588                           ;stkvar	_cb @ sp[(-13)+4]
 10589  015C6E  0EF7               	movlw	-9
 10590  015C70  006F FF8F FFE6     	movff	plusw1,postinc1
 10591  015C76  006F FF8F FFE6     	movff	plusw1,postinc1
 10592  015C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 10593  015C82  006F FF8F FFE6     	movff	plusw1,postinc1
 10594  015C88  0EE4               	movlw	low STR_55
 10595  015C8A  6EE6               	movwf	postinc1,c
 10596  015C8C  0EFD               	movlw	high STR_55
 10597  015C8E  6EE6               	movwf	postinc1,c
 10598  015C90  0E00               	movlw	0
 10599  015C92  6EE6               	movwf	postinc1,c
 10600  015C94  0E01               	movlw	1
 10601  015C96  6EE6               	movwf	postinc1,c
 10602  015C98  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10603  015C9C  0060  F007  FFE6   	movff	btemp,postinc1
 10604  015CA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10605  015CA8  0E0C               	movlw	12
 10606  015CAA  6EE6               	movwf	postinc1,c
 10607  015CAC  EC46  F0D5         	call	_sprintf	;wreg free
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;main.c: 522:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 10611  015CB0  0E8C               	movlw	low STR_56
 10612  015CB2  6EE6               	movwf	postinc1,c
 10613  015CB4  0EFE               	movlw	high STR_56
 10614  015CB6  6EE6               	movwf	postinc1,c
 10615  015CB8  0E00               	movlw	0
 10616  015CBA  6EE6               	movwf	postinc1,c
 10617  015CBC  0E02               	movlw	2
 10618  015CBE  6EE6               	movwf	postinc1,c
 10619  015CC0  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10620  015CC4  0060  F007  FFE6   	movff	btemp,postinc1
 10621  015CCA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10622  015CD0  0E04               	movlw	4
 10623  015CD2  6EE6               	movwf	postinc1,c
 10624  015CD4  EC46  F0D5         	call	_sprintf	;wreg free
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;main.c: 523:   update_lcd(0);
 10628  015CD8  0E00               	movlw	0
 10629  015CDA  6EE6               	movwf	postinc1,c
 10630  015CDC  ECBE  F0D4         	call	_update_lcd	;wreg free
 10631                           
 10632                           ;main.c: 524:   WaitMs(2000);
 10633  015CE0  0ED0               	movlw	208
 10634  015CE2  6EE6               	movwf	postinc1,c
 10635  015CE4  0E07               	movlw	7
 10636  015CE6  6EE6               	movwf	postinc1,c
 10637  015CE8  EC47  F0E5         	call	_WaitMs	;wreg free
 10638                           
 10639                           ;main.c: 525:   write_cal_data();
 10640  015CEC  EC1C  F0D3         	call	_write_cal_data	;wreg free
 10641                           
 10642                           ;main.c: 526:  } else {
 10643  015CF0  D05A               	goto	l1499
 10644  015CF2                     l14248:
 10645                           
 10646                           ;main.c: 527:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10647  015CF2  0EB6               	movlw	low STR_46
 10648  015CF4  6EE6               	movwf	postinc1,c
 10649  015CF6  0EFE               	movlw	high STR_46
 10650  015CF8  6EE6               	movwf	postinc1,c
 10651  015CFA  0E00               	movlw	0
 10652  015CFC  6EE6               	movwf	postinc1,c
 10653  015CFE  0E00               	movlw	0
 10654  015D00  6EE6               	movwf	postinc1,c
 10655  015D02  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10656  015D06  0060  F007  FFE6   	movff	btemp,postinc1
 10657  015D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10658  015D12  0E04               	movlw	4
 10659  015D14  6EE6               	movwf	postinc1,c
 10660  015D16  EC46  F0D5         	call	_sprintf	;wreg free
 10661                           
 10662                           ;main.c: 528:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10663  015D1A  0E01               	movlw	1
 10664  015D1C  6EE6               	movwf	postinc1,c
 10665  015D1E  ECD9  F0E8         	call	_get_raw_result	;wreg free
 10666  015D22  0060  F007  FFE6   	movff	btemp,postinc1
 10667  015D28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10668  015D2E  0E00               	movlw	0
 10669  015D30  6EE6               	movwf	postinc1,c
 10670  015D32  ECD9  F0E8         	call	_get_raw_result	;wreg free
 10671  015D36  0060  F007  FFE6   	movff	btemp,postinc1
 10672  015D3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10673  015D42  0EE4               	movlw	low STR_55
 10674  015D44  6EE6               	movwf	postinc1,c
 10675  015D46  0EFD               	movlw	high STR_55
 10676  015D48  6EE6               	movwf	postinc1,c
 10677  015D4A  0E00               	movlw	0
 10678  015D4C  6EE6               	movwf	postinc1,c
 10679  015D4E  0E01               	movlw	1
 10680  015D50  6EE6               	movwf	postinc1,c
 10681  015D52  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10682  015D56  0060  F007  FFE6   	movff	btemp,postinc1
 10683  015D5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10684  015D62  0E08               	movlw	8
 10685  015D64  6EE6               	movwf	postinc1,c
 10686  015D66  EC46  F0D5         	call	_sprintf	;wreg free
 10687                           
 10688                           ;main.c: 529:   sprintf(get_vterm_ptr(2, 0), "Out Of Range        ");
 10689  015D6A  0E77               	movlw	low STR_59
 10690  015D6C  6EE6               	movwf	postinc1,c
 10691  015D6E  0EFE               	movlw	high STR_59
 10692  015D70  6EE6               	movwf	postinc1,c
 10693  015D72  0E00               	movlw	0
 10694  015D74  6EE6               	movwf	postinc1,c
 10695  015D76  0E02               	movlw	2
 10696  015D78  6EE6               	movwf	postinc1,c
 10697  015D7A  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 10698  015D7E  0060  F007  FFE6   	movff	btemp,postinc1
 10699  015D84  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10700  015D8A  0E04               	movlw	4
 10701  015D8C  6EE6               	movwf	postinc1,c
 10702  015D8E  EC46  F0D5         	call	_sprintf	;wreg free
 10703                           
 10704                           ;main.c: 530:   update_lcd(0);
 10705  015D92  0E00               	movlw	0
 10706  015D94  6EE6               	movwf	postinc1,c
 10707  015D96  ECBE  F0D4         	call	_update_lcd	;wreg free
 10708                           
 10709                           ;main.c: 531:   WaitMs(2000);
 10710  015D9A  0ED0               	movlw	208
 10711  015D9C  6EE6               	movwf	postinc1,c
 10712  015D9E  0E07               	movlw	7
 10713  015DA0  6EE6               	movwf	postinc1,c
 10714  015DA2  EC47  F0E5         	call	_WaitMs	;wreg free
 10715  015DA6                     l1499:
 10716                           
 10717                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 10718  015DA6  0EF7               	movlw	247
 10719  015DA8  26E1               	addwf	fsr1l,f,c
 10720  015DAA  0EFF               	movlw	255
 10721  015DAC  22E2               	addwfc	fsr1h,f,c
 10722  015DAE  0012               	return		;funcret
 10723  015DB0                     __end_of_current_sensor_cal:
 10724                           	opt callstack 0
 10725                           
 10726 ;; *************** function _write_cal_data *****************
 10727 ;; Defined at:
 10728 ;;		line 389 in file "daq.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;		None
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;  x               2  [STACK] unsigned short 
 10733 ;;  y               2  [STACK] unsigned short 
 10734 ;;  r_cal_ptr       1  [STACK] PTR unsigned char 
 10735 ;;		 -> R(57), 
 10736 ;;  crcVal          1  [STACK] unsigned char 
 10737 ;; Return value:  Size  Location     Type
 10738 ;;                  1  [STACK] void 
 10739 ;; Registers used:
 10740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 10741 ;; Tracked objects:
 10742 ;;		On entry : 0/0
 10743 ;;		On exit  : 0/0
 10744 ;;		Unchanged: 0/0
 10745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10750 ;;Total ram usage:        0 bytes
 10751 ;; Hardware stack levels used:    1
 10752 ;; Hardware stack levels required when called:   17
 10753 ;; This function calls:
 10754 ;;		_CRC_8BitDataWrite
 10755 ;;		_CRC_CalculatedResultGet
 10756 ;;		_CRC_Initialize
 10757 ;;		_CRC_IsBusy
 10758 ;;		_CRC_Start
 10759 ;;		_DATAEE_WriteByte
 10760 ;; This function is called by:
 10761 ;;		_current_sensor_cal
 10762 ;; This function uses a reentrant model
 10763 ;;
 10764                           
 10765                           	psect	text30
 10766  01A638                     __ptext30:
 10767                           	opt callstack 0
 10768  01A638                     _write_cal_data:
 10769                           	opt callstack 0
 10770                           
 10771                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10772  01A638  0E06               	movlw	6
 10773  01A63A  26E1               	addwf	fsr1l,f,c
 10774  01A63C  0E00               	movlw	0
 10775  01A63E  22E2               	addwfc	fsr1h,f,c
 10776                           
 10777                           ;daq.c: 391:  uint16_t x = 0, y;
 10778                           ;stkvar	_x @ sp[(-6)+0]
 10779                           
 10780                           ;incstack = 0
 10781  01A640  0EFA               	movlw	-6
 10782  01A642  6AE3               	clrf	plusw1,c
 10783  01A644  0EFB               	movlw	-5
 10784  01A646  6AE3               	clrf	plusw1,c
 10785                           
 10786                           ;daq.c: 392:  uint8_t *r_cal_ptr, crcVal;;daq.c: 394:  y = sizeof(R);
 10787  01A648  0E39               	movlw	57
 10788  01A64A  6E0B               	movwf	(btemp+10)^0,c
 10789  01A64C  0E00               	movlw	0
 10790  01A64E  6E0C               	movwf	(btemp+11)^0,c
 10791                           
 10792                           ;stkvar	_y @ sp[(-6)+2]
 10793  01A650  0EFC               	movlw	-4
 10794  01A652  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10795  01A658  0EFD               	movlw	-3
 10796  01A65A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10797                           
 10798                           ;daq.c: 395:  R.crc = 0x42;
 10799  01A660  0E42               	movlw	66
 10800  01A662  0100               	movlb	0	; () banked
 10801  01A664  6FE6               	movwf	(_R+56)& (0+255),b	;volatile
 10802                           
 10803                           ; BSR set to: 0
 10804                           ;daq.c: 396:  r_cal_ptr = (uint8_t*) & R;
 10805                           ;stkvar	_r_cal_ptr @ sp[(-6)+4]
 10806  01A666  0EAE               	movlw	low _R
 10807  01A668  6E01               	movwf	btemp^0,c
 10808  01A66A  0EFE               	movlw	-2
 10809  01A66C  0060  F007  FFE3   	movff	btemp,plusw1
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;daq.c: 397:  R.checkmark = 0x1957;
 10813  01A672  0E19               	movlw	25
 10814  01A674  6FE5               	movwf	(_R+55)& (0+255),b	;volatile
 10815  01A676  0E57               	movlw	87
 10816  01A678  6FE4               	movwf	(_R+54)& (0+255),b	;volatile
 10817                           
 10818                           ; BSR set to: 0
 10819                           ;daq.c: 399:  CRC_Initialize();
 10820  01A67A  EC2A  F0DD         	call	_CRC_Initialize	;wreg free
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;daq.c: 402:  CRC_Start();
 10824  01A67E  ECDF  F0E9         	call	_CRC_Start	;wreg free
 10825  01A682                     l11368:
 10826                           
 10827                           ;daq.c: 405:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 10828                           ;stkvar	_x @ sp[(-6)+0]
 10829  01A682  0EFA               	movlw	-6
 10830  01A684  006F FF8C  F00C    	movff	plusw1,btemp+11
 10831                           
 10832                           ;stkvar	_r_cal_ptr @ sp[(-6)+4]
 10833  01A68A  0EFE               	movlw	-2
 10834  01A68C  50E3               	movf	plusw1,w,c
 10835  01A68E  240C               	addwf	(btemp+11)^0,w,c
 10836  01A690  6ED9               	movwf	fsr2l,c
 10837  01A692  6ADA               	clrf	fsr2h,c
 10838  01A694  50DF               	movf	indf2,w,c
 10839  01A696  6EE6               	movwf	postinc1,c
 10840                           
 10841                           ;stkvar	_x @ sp[(-7)+0]
 10842  01A698  0EF9               	movlw	-7
 10843  01A69A  006F FF8F FFE6     	movff	plusw1,postinc1
 10844  01A6A0  006F FF8F FFE6     	movff	plusw1,postinc1
 10845  01A6A6  EC53  F0E0         	call	_DATAEE_WriteByte	;wreg free
 10846                           
 10847                           ;daq.c: 406:   CRC_8BitDataWrite(r_cal_ptr[x]);
 10848                           ;stkvar	_x @ sp[(-6)+0]
 10849  01A6AA  0EFA               	movlw	-6
 10850  01A6AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 10851                           
 10852                           ;stkvar	_r_cal_ptr @ sp[(-6)+4]
 10853  01A6B2  0EFE               	movlw	-2
 10854  01A6B4  50E3               	movf	plusw1,w,c
 10855  01A6B6  240C               	addwf	(btemp+11)^0,w,c
 10856  01A6B8  6ED9               	movwf	fsr2l,c
 10857  01A6BA  6ADA               	clrf	fsr2h,c
 10858  01A6BC  50DF               	movf	indf2,w,c
 10859  01A6BE  6EE6               	movwf	postinc1,c
 10860  01A6C0  EC51  F0E9         	call	_CRC_8BitDataWrite	;wreg free
 10861  01A6C4                     l11372:
 10862  01A6C4  EC73  F0E9         	call	_CRC_IsBusy	;wreg free
 10863  01A6C8  5001               	movf	btemp^0,w,c
 10864  01A6CA  A4D8               	btfss	status,2,c
 10865  01A6CC  D7FB               	goto	l11372
 10866                           
 10867                           ;daq.c: 408:  } while (++x < y);
 10868                           ;stkvar	_y @ sp[(-6)+2]
 10869  01A6CE  0EFC               	movlw	-4
 10870  01A6D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 10871  01A6D6  0EFD               	movlw	-3
 10872  01A6D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 10873                           
 10874                           ;stkvar	_x @ sp[(-6)+0]
 10875  01A6DE  0EFA               	movlw	-6
 10876  01A6E0  50E3               	movf	plusw1,w,c
 10877  01A6E2  0F01               	addlw	1
 10878  01A6E4  6E01               	movwf	btemp^0,c
 10879  01A6E6  0EFA               	movlw	-6
 10880  01A6E8  0060  F007  FFE3   	movff	btemp,plusw1
 10881  01A6EE  6A01               	clrf	btemp^0,c
 10882  01A6F0  0EFB               	movlw	-5
 10883  01A6F2  50E3               	movf	plusw1,w,c
 10884  01A6F4  2001               	addwfc	btemp^0,w,c
 10885  01A6F6  6E01               	movwf	btemp^0,c
 10886  01A6F8  0EFB               	movlw	-5
 10887  01A6FA  0060  F007  FFE3   	movff	btemp,plusw1
 10888  01A700  0EFA               	movlw	-6
 10889  01A702  006F FF8C  F009    	movff	plusw1,btemp+8
 10890  01A708  0EFB               	movlw	-5
 10891  01A70A  006F FF8C  F00A    	movff	plusw1,btemp+9
 10892  01A710  500B               	movf	(btemp+10)^0,w,c
 10893  01A712  5C09               	subwf	(btemp+8)^0,w,c
 10894  01A714  500C               	movf	(btemp+11)^0,w,c
 10895  01A716  580A               	subwfb	(btemp+9)^0,w,c
 10896  01A718  A0D8               	btfss	status,0,c
 10897  01A71A  D7B3               	goto	l11368
 10898                           
 10899                           ;daq.c: 410:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 10900  01A71C  0E00               	movlw	0
 10901  01A71E  6EE6               	movwf	postinc1,c
 10902  01A720  0E00               	movlw	0
 10903  01A722  6EE6               	movwf	postinc1,c
 10904  01A724  0E00               	movlw	0
 10905  01A726  6EE6               	movwf	postinc1,c
 10906  01A728  EC0F  F0CC         	call	_CRC_CalculatedResultGet	;wreg free
 10907                           
 10908                           ;stkvar	_crcVal @ sp[(-6)+5]
 10909  01A72C  0EFF               	movlw	-1
 10910  01A72E  0060  F007  FFE3   	movff	btemp,plusw1
 10911                           
 10912                           ;daq.c: 412:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 10913                           ;stkvar	_crcVal @ sp[(-6)+5]
 10914  01A734  0EFF               	movlw	-1
 10915  01A736  50E3               	movf	plusw1,w,c
 10916  01A738  6EE6               	movwf	postinc1,c
 10917  01A73A  0E38               	movlw	56
 10918  01A73C  6EE6               	movwf	postinc1,c
 10919  01A73E  0E00               	movlw	0
 10920  01A740  6EE6               	movwf	postinc1,c
 10921  01A742  EC53  F0E0         	call	_DATAEE_WriteByte	;wreg free
 10922                           
 10923                           ; _write_cal_data: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10924  01A746  0EFA               	movlw	250
 10925  01A748  26E1               	addwf	fsr1l,f,c
 10926  01A74A  0EFF               	movlw	255
 10927  01A74C  22E2               	addwfc	fsr1h,f,c
 10928  01A74E  0012               	return		;funcret
 10929  01A750                     __end_of_write_cal_data:
 10930                           	opt callstack 0
 10931                           
 10932 ;; *************** function _DATAEE_WriteByte *****************
 10933 ;; Defined at:
 10934 ;;		line 172 in file "mcc_generated_files/memory.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;  bAdd            2  [STACK] unsigned short 
 10937 ;;  bData           1  [STACK] unsigned char 
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;  GIEBitValue     1  [STACK] unsigned char 
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1  [STACK] void 
 10942 ;; Registers used:
 10943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/39
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10953 ;;Total ram usage:        0 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:   15
 10956 ;; This function calls:
 10957 ;;		Nothing
 10958 ;; This function is called by:
 10959 ;;		_write_cal_data
 10960 ;; This function uses a reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text31
 10964  01C0A6                     __ptext31:
 10965                           	opt callstack 0
 10966  01C0A6                     _DATAEE_WriteByte:
 10967                           	opt callstack 0
 10968                           
 10969                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10970  01C0A6  52E6               	movf	postinc1,f,c
 10971                           
 10972                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 10973                           
 10974                           ;incstack = 0
 10975  01C0A8  AED2               	btfss	210,7,c	;volatile
 10976  01C0AA  D003               	goto	u9770
 10977  01C0AC  6A0C               	clrf	(btemp+11)^0,c
 10978  01C0AE  2A0C               	incf	(btemp+11)^0,f,c
 10979  01C0B0  D001               	goto	u9778
 10980  01C0B2                     u9770:
 10981  01C0B2  6A0C               	clrf	(btemp+11)^0,c
 10982  01C0B4                     u9778:
 10983                           
 10984                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 10985  01C0B4  0EFF               	movlw	-1
 10986  01C0B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 10987                           
 10988                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 10989                           ;stkvar	_bAdd @ sp[(-1)+-2]
 10990  01C0BC  0EFE               	movlw	254
 10991  01C0BE  24E1               	addwf	fsr1l,w,c
 10992  01C0C0  6ED9               	movwf	fsr2l,c
 10993  01C0C2  0EFF               	movlw	255
 10994  01C0C4  20E2               	addwfc	fsr1h,w,c
 10995  01C0C6  6EDA               	movwf	fsr2h,c
 10996  01C0C8  50DF               	movf	indf2,w,c
 10997  01C0CA  0B03               	andlw	3
 10998  01C0CC  0139               	movlb	57	; () banked
 10999  01C0CE  6FE1               	movwf	225,b	;volatile
 11000                           
 11001                           ; BSR set to: 57
 11002                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 11003                           ;stkvar	_bAdd @ sp[(-1)+-2]
 11004  01C0D0  0EFD               	movlw	-3
 11005  01C0D2  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 11006                           
 11007                           ; BSR set to: 57
 11008                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 11009                           ;stkvar	_bData @ sp[(-1)+-3]
 11010  01C0D8  0EFC               	movlw	-4
 11011  01C0DA  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 11012                           
 11013                           ; BSR set to: 57
 11014                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 11015  01C0E0  0E3F               	movlw	-193
 11016  01C0E2  17E5               	andwf	229,f,b	;volsfr
 11017                           
 11018                           ; BSR set to: 57
 11019                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 11020  01C0E4  85E5               	bsf	229,2,b	;volsfr
 11021                           
 11022                           ; BSR set to: 57
 11023                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 11024  01C0E6  9ED2               	bcf	210,7,c	;volatile
 11025                           
 11026                           ; BSR set to: 57
 11027                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 11028  01C0E8  0E55               	movlw	85
 11029  01C0EA  6FE6               	movwf	230,b	;volsfr
 11030                           
 11031                           ; BSR set to: 57
 11032                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 11033  01C0EC  0EAA               	movlw	170
 11034  01C0EE  6FE6               	movwf	230,b	;volsfr
 11035                           
 11036                           ; BSR set to: 57
 11037                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 11038  01C0F0  83E5               	bsf	229,1,b	;volsfr
 11039  01C0F2                     l942:
 11040                           
 11041                           ; BSR set to: 57
 11042                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 11043  01C0F2  B3E5               	btfsc	229,1,b	;volsfr
 11044  01C0F4  D7FE               	goto	l942
 11045                           
 11046                           ; BSR set to: 57
 11047                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 11048  01C0F6  95E5               	bcf	229,2,b	;volsfr
 11049                           
 11050                           ; BSR set to: 57
 11051                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 11052                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 11053  01C0F8  0EFF               	movlw	-1
 11054  01C0FA  B0E3               	btfsc	plusw1,0,c
 11055  01C0FC  D002               	bra	u9795
 11056  01C0FE  9ED2               	bcf	210,7,c	;volatile
 11057  01C100  D001               	bra	u9796
 11058  01C102                     u9795:
 11059  01C102  8ED2               	bsf	210,7,c	;volatile
 11060  01C104                     u9796:
 11061                           
 11062                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 11063  01C104  52E5               	movf	postdec1,f,c
 11064  01C106  52E5               	movf	postdec1,f,c
 11065  01C108  52E5               	movf	postdec1,f,c
 11066  01C10A  52E5               	movf	postdec1,f,c
 11067  01C10C  0012               	return		;funcret
 11068  01C10E                     __end_of_DATAEE_WriteByte:
 11069                           	opt callstack 0
 11070                           
 11071 ;; *************** function _CRC_Start *****************
 11072 ;; Defined at:
 11073 ;;		line 119 in file "mcc_generated_files/crc.c"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;		None
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;		None
 11078 ;; Return value:  Size  Location     Type
 11079 ;;                  1  [STACK] void 
 11080 ;; Registers used:
 11081 ;;		None
 11082 ;; Tracked objects:
 11083 ;;		On entry : 3F/0
 11084 ;;		On exit  : 3F/39
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11091 ;;Total ram usage:        0 bytes
 11092 ;; Hardware stack levels used:    1
 11093 ;; Hardware stack levels required when called:   15
 11094 ;; This function calls:
 11095 ;;		Nothing
 11096 ;; This function is called by:
 11097 ;;		_read_cal_data
 11098 ;;		_write_cal_data
 11099 ;; This function uses a reentrant model
 11100 ;;
 11101                           
 11102                           	psect	text32
 11103  01D3BE                     __ptext32:
 11104                           	opt callstack 0
 11105  01D3BE                     _CRC_Start:
 11106                           	opt callstack 14
 11107                           
 11108                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 11109                           
 11110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11111                           ;incstack = 0
 11112  01D3BE  0139               	movlb	57	; () banked
 11113  01D3C0  8D68               	bsf	104,6,b	;volatile
 11114                           
 11115                           ; BSR set to: 57
 11116                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11117  01D3C2  0012               	return		;funcret
 11118  01D3C4                     __end_of_CRC_Start:
 11119                           	opt callstack 0
 11120                           
 11121 ;; *************** function _CRC_IsBusy *****************
 11122 ;; Defined at:
 11123 ;;		line 201 in file "mcc_generated_files/crc.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;		None
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;		None
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  1  [STACK] _Bool 
 11130 ;; Registers used:
 11131 ;;		btemp
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/39
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11141 ;;Total ram usage:        0 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; Hardware stack levels required when called:   15
 11144 ;; This function calls:
 11145 ;;		Nothing
 11146 ;; This function is called by:
 11147 ;;		_read_cal_data
 11148 ;;		_write_cal_data
 11149 ;; This function uses a reentrant model
 11150 ;;
 11151                           
 11152                           	psect	text33
 11153  01D2E6                     __ptext33:
 11154                           	opt callstack 0
 11155  01D2E6                     _CRC_IsBusy:
 11156                           	opt callstack 14
 11157                           
 11158                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 11159                           
 11160                           ; BSR set to: 57
 11161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11162                           ;incstack = 0
 11163  01D2E6  0139               	movlb	57	; () banked
 11164  01D2E8  AB68               	btfss	104,5,b	;volatile
 11165  01D2EA  D003               	goto	u9980
 11166  01D2EC  6A01               	clrf	btemp^0,c
 11167  01D2EE  2A01               	incf	btemp^0,f,c
 11168  01D2F0  0012               	return	
 11169  01D2F2                     u9980:
 11170  01D2F2  6A01               	clrf	btemp^0,c
 11171                           
 11172                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 11173  01D2F4  0012               	return		;funcret
 11174  01D2F6                     __end_of_CRC_IsBusy:
 11175                           	opt callstack 0
 11176                           
 11177 ;; *************** function _CRC_CalculatedResultGet *****************
 11178 ;; Defined at:
 11179 ;;		line 159 in file "mcc_generated_files/crc.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;  reverse         1  [STACK] _Bool 
 11182 ;;  xorValue        2  [STACK] unsigned short 
 11183 ;; Auto vars:     Size  Location     Type
 11184 ;;  result          2  [STACK] unsigned short 
 11185 ;;  mask            2  [STACK] unsigned short 
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  2  [STACK] unsigned short 
 11188 ;; Registers used:
 11189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/39
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11199 ;;Total ram usage:        0 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; Hardware stack levels required when called:   16
 11202 ;; This function calls:
 11203 ;;		_CRC_ReverseValue
 11204 ;; This function is called by:
 11205 ;;		_read_cal_data
 11206 ;;		_write_cal_data
 11207 ;; This function uses a reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text34
 11211  01981E                     __ptext34:
 11212                           	opt callstack 0
 11213  01981E                     _CRC_CalculatedResultGet:
 11214                           	opt callstack 0
 11215                           
 11216                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11217  01981E  52E6               	movf	postinc1,f,c
 11218  019820  52E6               	movf	postinc1,f,c
 11219  019822  52E6               	movf	postinc1,f,c
 11220  019824  52E6               	movf	postinc1,f,c
 11221                           
 11222                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 11223                           
 11224                           ;incstack = 0
 11225  019826  0139               	movlb	57	; () banked
 11226  019828  9D68               	bcf	104,6,b	;volatile
 11227                           
 11228                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 11229  01982A  9DA0               	bcf	160,6,b	;volatile
 11230                           
 11231                           ; BSR set to: 57
 11232                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 11233  01982C  5169               	movf	105,w,b	;volatile
 11234  01982E  0B0F               	andlw	15
 11235  019830  6E0C               	movwf	(btemp+11)^0,c
 11236  019832  3A0C               	swapf	(btemp+11)^0,f,c
 11237  019834  5169               	movf	105,w,b	;volatile
 11238  019836  180C               	xorwf	(btemp+11)^0,w,c
 11239  019838  0B0F               	andlw	-241
 11240  01983A  180C               	xorwf	(btemp+11)^0,w,c
 11241  01983C  6F69               	movwf	105,b	;volatile
 11242                           
 11243                           ; BSR set to: 57
 11244                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 11245  01983E  0E08               	movlw	8
 11246  019840  0100               	movlb	0	; () banked
 11247  019842  65AC               	cpfsgt	(_crcObj+1)& (0+255),b
 11248  019844  D003               	goto	l1282
 11249                           
 11250                           ; BSR set to: 0
 11251                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 11252  019846  0139               	movlb	57	; () banked
 11253  019848  6B61               	clrf	97,b	;volatile
 11254  01984A  D001               	goto	L9
 11255  01984C                     l1282:
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 11259  01984C  0139               	movlb	57	; () banked
 11260  01984E                     L9:
 11261  01984E  6B60               	clrf	96,b	;volatile
 11262                           
 11263                           ; BSR set to: 57
 11264                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 11265                           
 11266                           ;mcc_generated_files/crc.c: 176:      }
 11267  019850  8D68               	bsf	104,6,b	;volatile
 11268  019852                     l1284:
 11269                           
 11270                           ; BSR set to: 57
 11271  019852  ADA0               	btfss	160,6,b	;volatile
 11272  019854  D7FE               	goto	l1284
 11273                           
 11274                           ; BSR set to: 57
 11275                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 11276  019856  9DA0               	bcf	160,6,b	;volatile
 11277                           
 11278                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 11279  019858  9D68               	bcf	104,6,b	;volatile
 11280                           
 11281                           ; BSR set to: 57
 11282                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11283  01985A  0060  F2AC  F00C   	movff	_crcObj,btemp+11
 11284  019860  0EFF               	movlw	255
 11285  019862  260C               	addwf	(btemp+11)^0,f,c
 11286  019864  3A0C               	swapf	(btemp+11)^0,f,c
 11287  019866  5169               	movf	105,w,b	;volatile
 11288  019868  180C               	xorwf	(btemp+11)^0,w,c
 11289  01986A  0B0F               	andlw	-241
 11290  01986C  180C               	xorwf	(btemp+11)^0,w,c
 11291  01986E  6F69               	movwf	105,b	;volatile
 11292                           
 11293                           ; BSR set to: 57
 11294                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11295  019870  5162               	movf	98,w,b	;volatile
 11296  019872  006E F58C  F001    	movff	14691,btemp	;volatile
 11297  019878  6A02               	clrf	(btemp+1)^0,c
 11298  01987A  0060  F004  F002   	movff	btemp,btemp+1
 11299  019880  6A01               	clrf	btemp^0,c
 11300  019882  1201               	iorwf	btemp^0,f,c
 11301  019884  0E00               	movlw	0
 11302  019886  1202               	iorwf	(btemp+1)^0,f,c
 11303                           
 11304                           ;stkvar	_result @ sp[(-4)+0]
 11305  019888  0EFC               	movlw	-4
 11306  01988A  0060  F007  FFE3   	movff	btemp,plusw1
 11307  019890  0EFD               	movlw	-3
 11308  019892  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11309                           
 11310                           ; BSR set to: 57
 11311                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 11312  019898  0E10               	movlw	16
 11313  01989A  0100               	movlb	0	; () banked
 11314  01989C  61AC               	cpfslt	(_crcObj+1)& (0+255),b
 11315  01989E  D03A               	goto	l10702
 11316                           
 11317                           ; BSR set to: 0
 11318                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11319  0198A0  0EFF               	movlw	255
 11320  0198A2  6E0B               	movwf	(btemp+10)^0,c
 11321  0198A4  0EFF               	movlw	255
 11322  0198A6  6E0C               	movwf	(btemp+11)^0,c
 11323  0198A8  0060  F2B0  F00A   	movff	_crcObj+1,btemp+9
 11324  0198AE  0E01               	movlw	1
 11325  0198B0  6E07               	movwf	(btemp+6)^0,c
 11326  0198B2  0E00               	movlw	0
 11327  0198B4  6E08               	movwf	(btemp+7)^0,c
 11328  0198B6  2A0A               	incf	(btemp+9)^0,f,c
 11329  0198B8  D003               	goto	u9964
 11330  0198BA                     u9965:
 11331  0198BA  90D8               	bcf	status,0,c
 11332  0198BC  3607               	rlcf	(btemp+6)^0,f,c
 11333  0198BE  3608               	rlcf	(btemp+7)^0,f,c
 11334  0198C0                     u9964:
 11335  0198C0  2E0A               	decfsz	(btemp+9)^0,f,c
 11336  0198C2  D7FB               	goto	u9965
 11337  0198C4  500B               	movf	(btemp+10)^0,w,c
 11338  0198C6  2607               	addwf	(btemp+6)^0,f,c
 11339  0198C8  500C               	movf	(btemp+11)^0,w,c
 11340  0198CA  2208               	addwfc	(btemp+7)^0,f,c
 11341                           
 11342                           ;stkvar	_mask @ sp[(-4)+2]
 11343  0198CC  0EFE               	movlw	-2
 11344  0198CE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 11345  0198D4  0EFF               	movlw	-1
 11346  0198D6  0060  F023  FFE3   	movff	btemp+7,plusw1
 11347                           
 11348                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 11349                           ;stkvar	_mask @ sp[(-4)+2]
 11350  0198DC  0EFE               	movlw	-2
 11351  0198DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11352  0198E4  0EFF               	movlw	-1
 11353  0198E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11354                           
 11355                           ;stkvar	_result @ sp[(-4)+0]
 11356  0198EC  0EFC               	movlw	-4
 11357  0198EE  006F FF8C  F001    	movff	plusw1,btemp
 11358  0198F4  500B               	movf	(btemp+10)^0,w,c
 11359  0198F6  1601               	andwf	btemp^0,f,c
 11360  0198F8  0EFC               	movlw	-4
 11361  0198FA  0060  F007  FFE3   	movff	btemp,plusw1
 11362  019900  0EFD               	movlw	-3
 11363  019902  006F FF8C  F001    	movff	plusw1,btemp
 11364  019908  500C               	movf	(btemp+11)^0,w,c
 11365  01990A  1601               	andwf	btemp^0,f,c
 11366  01990C  0EFD               	movlw	-3
 11367  01990E  0060  F007  FFE3   	movff	btemp,plusw1
 11368  019914                     l10702:
 11369                           
 11370                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 11371                           ;stkvar	_reverse @ sp[(-4)+-1]
 11372  019914  0EFB               	movlw	-5
 11373  019916  50E3               	movf	plusw1,w,c
 11374  019918  B4D8               	btfsc	status,2,c
 11375  01991A  D011               	goto	l10706
 11376                           
 11377                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 11378                           ;stkvar	_result @ sp[(-4)+0]
 11379  01991C  0EFC               	movlw	-4
 11380  01991E  006F FF8F FFE6     	movff	plusw1,postinc1
 11381  019924  006F FF8F FFE6     	movff	plusw1,postinc1
 11382  01992A  EC75  F0D8         	call	_CRC_ReverseValue	;wreg free
 11383                           
 11384                           ;stkvar	_result @ sp[(-4)+0]
 11385  01992E  0EFC               	movlw	-4
 11386  019930  0060  F007  FFE3   	movff	btemp,plusw1
 11387  019936  0EFD               	movlw	-3
 11388  019938  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11389  01993E                     l10706:
 11390                           
 11391                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 11392                           ;stkvar	_xorValue @ sp[(-4)+-3]
 11393  01993E  0EF9               	movlw	-7
 11394  019940  006F FF8C  F00B    	movff	plusw1,btemp+10
 11395  019946  0EFA               	movlw	-6
 11396  019948  006F FF8C  F00C    	movff	plusw1,btemp+11
 11397                           
 11398                           ;stkvar	_result @ sp[(-4)+0]
 11399  01994E  0EFC               	movlw	-4
 11400  019950  006F FF8C  F001    	movff	plusw1,btemp
 11401  019956  500B               	movf	(btemp+10)^0,w,c
 11402  019958  1A01               	xorwf	btemp^0,f,c
 11403  01995A  0EFC               	movlw	-4
 11404  01995C  0060  F007  FFE3   	movff	btemp,plusw1
 11405  019962  0EFD               	movlw	-3
 11406  019964  006F FF8C  F001    	movff	plusw1,btemp
 11407  01996A  500C               	movf	(btemp+11)^0,w,c
 11408  01996C  1A01               	xorwf	btemp^0,f,c
 11409  01996E  0EFD               	movlw	-3
 11410  019970  0060  F007  FFE3   	movff	btemp,plusw1
 11411                           
 11412                           ;mcc_generated_files/crc.c: 198:     return result;
 11413                           ;stkvar	_result @ sp[(-4)+0]
 11414  019976  0EFC               	movlw	-4
 11415  019978  006F FF8C  F001    	movff	plusw1,btemp
 11416  01997E  0EFD               	movlw	-3
 11417  019980  006F FF8C  F002    	movff	plusw1,btemp+1
 11418                           
 11419                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 11420  019986  0EF9               	movlw	249
 11421  019988  26E1               	addwf	fsr1l,f,c
 11422  01998A  0EFF               	movlw	255
 11423  01998C  22E2               	addwfc	fsr1h,f,c
 11424  01998E  0012               	return		;funcret
 11425  019990                     __end_of_CRC_CalculatedResultGet:
 11426                           	opt callstack 0
 11427                           
 11428 ;; *************** function _CRC_ReverseValue *****************
 11429 ;; Defined at:
 11430 ;;		line 138 in file "mcc_generated_files/crc.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  crc             2  [STACK] unsigned short 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;  mask            2  [STACK] unsigned short 
 11435 ;;  reverse         2  [STACK] unsigned short 
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  2  [STACK] unsigned short 
 11438 ;; Registers used:
 11439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11449 ;;Total ram usage:        0 bytes
 11450 ;; Hardware stack levels used:    1
 11451 ;; Hardware stack levels required when called:   15
 11452 ;; This function calls:
 11453 ;;		Nothing
 11454 ;; This function is called by:
 11455 ;;		_CRC_CalculatedResultGet
 11456 ;; This function uses a reentrant model
 11457 ;;
 11458                           
 11459                           	psect	text35
 11460  01B0EA                     __ptext35:
 11461                           	opt callstack 0
 11462  01B0EA                     _CRC_ReverseValue:
 11463                           	opt callstack 0
 11464                           
 11465                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11466  01B0EA  52E6               	movf	postinc1,f,c
 11467  01B0EC  52E6               	movf	postinc1,f,c
 11468  01B0EE  52E6               	movf	postinc1,f,c
 11469  01B0F0  52E6               	movf	postinc1,f,c
 11470                           
 11471                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 11472                           
 11473                           ;incstack = 0
 11474  01B0F2  0E01               	movlw	1
 11475  01B0F4  6E0B               	movwf	(btemp+10)^0,c
 11476  01B0F6  0E00               	movlw	0
 11477  01B0F8  6E0C               	movwf	(btemp+11)^0,c
 11478                           
 11479                           ;stkvar	_mask @ sp[(-4)+0]
 11480  01B0FA  0EFC               	movlw	-4
 11481  01B0FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11482  01B102  0EFD               	movlw	-3
 11483  01B104  0060  F033  FFE3   	movff	btemp+11,plusw1
 11484                           
 11485                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 11486  01B10A  0060  F2B0  F00C   	movff	_crcObj+1,btemp+11
 11487  01B110  0EFF               	movlw	255
 11488  01B112  260C               	addwf	(btemp+11)^0,f,c
 11489                           
 11490                           ;stkvar	_mask @ sp[(-4)+0]
 11491  01B114  50E1               	movf	fsr1l,w,c
 11492  01B116  0FFC               	addlw	-4
 11493  01B118  6ED9               	movwf	fsr2l,c
 11494  01B11A  50E2               	movf	fsr1h,w,c
 11495  01B11C  6EDA               	movwf	fsr2h,c
 11496  01B11E  0EFF               	movlw	255
 11497  01B120  22DA               	addwfc	fsr2h,f,c
 11498  01B122  280C               	incf	(btemp+11)^0,w,c
 11499  01B124  D003               	goto	u9570
 11500  01B126                     u9575:
 11501  01B126  90D8               	bcf	status,0,c
 11502  01B128  36DE               	rlcf	postinc2,f,c
 11503  01B12A  36DD               	rlcf	postdec2,f,c
 11504  01B12C                     u9570:
 11505  01B12C  2EE8               	decfsz	wreg,f,c
 11506  01B12E  D7FB               	goto	u9575
 11507                           
 11508                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 11509                           ;stkvar	_reverse @ sp[(-4)+2]
 11510  01B130  0EFE               	movlw	-2
 11511  01B132  6AE3               	clrf	plusw1,c
 11512  01B134  0EFF               	movlw	-1
 11513  01B136  6AE3               	clrf	plusw1,c
 11514                           
 11515                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11516  01B138  D029               	goto	l10420
 11517  01B13A                     l10412:
 11518                           
 11519                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 11520                           ;stkvar	_crc @ sp[(-4)+-2]
 11521  01B13A  0EFA               	movlw	-6
 11522  01B13C  A0E3               	btfss	plusw1,0,c
 11523  01B13E  D01C               	goto	l10416
 11524                           
 11525                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 11526                           ;stkvar	_mask @ sp[(-4)+0]
 11527  01B140  0EFC               	movlw	-4
 11528  01B142  006F FF8C  F00B    	movff	plusw1,btemp+10
 11529  01B148  0EFD               	movlw	-3
 11530  01B14A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11531                           
 11532                           ;stkvar	_reverse @ sp[(-4)+2]
 11533  01B150  0EFE               	movlw	-2
 11534  01B152  006F FF8C  F001    	movff	plusw1,btemp
 11535  01B158  500B               	movf	(btemp+10)^0,w,c
 11536  01B15A  1201               	iorwf	btemp^0,f,c
 11537  01B15C  0EFE               	movlw	-2
 11538  01B15E  0060  F007  FFE3   	movff	btemp,plusw1
 11539  01B164  0EFF               	movlw	-1
 11540  01B166  006F FF8C  F001    	movff	plusw1,btemp
 11541  01B16C  500C               	movf	(btemp+11)^0,w,c
 11542  01B16E  1201               	iorwf	btemp^0,f,c
 11543  01B170  0EFF               	movlw	-1
 11544  01B172  0060  F007  FFE3   	movff	btemp,plusw1
 11545  01B178                     l10416:
 11546                           
 11547                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 11548                           ;stkvar	_mask @ sp[(-4)+0]
 11549  01B178  90D8               	bcf	status,0,c
 11550  01B17A  0EFD               	movlw	-3
 11551  01B17C  32E3               	rrcf	plusw1,f,c
 11552  01B17E  0EFC               	movlw	-4
 11553  01B180  32E3               	rrcf	plusw1,f,c
 11554                           
 11555                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 11556                           ;stkvar	_crc @ sp[(-4)+-2]
 11557  01B182  90D8               	bcf	status,0,c
 11558  01B184  0EFB               	movlw	-5
 11559  01B186  32E3               	rrcf	plusw1,f,c
 11560  01B188  0EFA               	movlw	-6
 11561  01B18A  32E3               	rrcf	plusw1,f,c
 11562  01B18C                     l10420:
 11563                           
 11564                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11565                           ;stkvar	_crc @ sp[(-4)+-2]
 11566  01B18C  0EFA               	movlw	-6
 11567  01B18E  006F FF8C  F001    	movff	plusw1,btemp
 11568  01B194  0EFB               	movlw	-5
 11569  01B196  50E3               	movf	plusw1,w,c
 11570  01B198  1001               	iorwf	btemp^0,w,c
 11571  01B19A  A4D8               	btfss	status,2,c
 11572  01B19C  D7CE               	goto	l10412
 11573                           
 11574                           ;mcc_generated_files/crc.c: 156:     return reverse;
 11575                           ;stkvar	_reverse @ sp[(-4)+2]
 11576  01B19E  0EFE               	movlw	-2
 11577  01B1A0  006F FF8C  F001    	movff	plusw1,btemp
 11578  01B1A6  0EFF               	movlw	-1
 11579  01B1A8  006F FF8C  F002    	movff	plusw1,btemp+1
 11580                           
 11581                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 11582  01B1AE  0EFA               	movlw	250
 11583  01B1B0  26E1               	addwf	fsr1l,f,c
 11584  01B1B2  0EFF               	movlw	255
 11585  01B1B4  22E2               	addwfc	fsr1h,f,c
 11586  01B1B6  0012               	return		;funcret
 11587  01B1B8                     __end_of_CRC_ReverseValue:
 11588                           	opt callstack 0
 11589                           
 11590 ;; *************** function _CRC_8BitDataWrite *****************
 11591 ;; Defined at:
 11592 ;;		line 125 in file "mcc_generated_files/crc.c"
 11593 ;; Parameters:    Size  Location     Type
 11594 ;;  data            1  [STACK] unsigned char 
 11595 ;; Auto vars:     Size  Location     Type
 11596 ;;		None
 11597 ;; Return value:  Size  Location     Type
 11598 ;;                  1  [STACK] _Bool 
 11599 ;; Registers used:
 11600 ;;		fsr1l, fsr1h
 11601 ;; Tracked objects:
 11602 ;;		On entry : 0/2
 11603 ;;		On exit  : 3F/39
 11604 ;;		Unchanged: 0/0
 11605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11610 ;;Total ram usage:        0 bytes
 11611 ;; Hardware stack levels used:    1
 11612 ;; Hardware stack levels required when called:   15
 11613 ;; This function calls:
 11614 ;;		Nothing
 11615 ;; This function is called by:
 11616 ;;		_read_cal_data
 11617 ;;		_write_cal_data
 11618 ;; This function uses a reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text36
 11622  01D2A2                     __ptext36:
 11623                           	opt callstack 0
 11624  01D2A2                     _CRC_8BitDataWrite:
 11625                           	opt callstack 14
 11626                           
 11627                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 11628                           
 11629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11630                           ;incstack = 0
 11631  01D2A2  0139               	movlb	57	; () banked
 11632  01D2A4  B168               	btfsc	104,0,b	;volatile
 11633  01D2A6  D004               	goto	l1271
 11634                           
 11635                           ; BSR set to: 57
 11636                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 11637                           ;stkvar	_data @ sp[(0)+-1]
 11638  01D2A8  0EFF               	movlw	-1
 11639  01D2AA  006F FF8F F960     	movff	plusw1,14688	;volatile
 11640  01D2B0                     l1271:
 11641                           
 11642                           ; BSR set to: 57
 11643                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11644  01D2B0  52E5               	movf	postdec1,f,c
 11645  01D2B2  0012               	return		;funcret
 11646  01D2B4                     __end_of_CRC_8BitDataWrite:
 11647                           	opt callstack 0
 11648                           
 11649 ;; *************** function _start_adc_scan *****************
 11650 ;; Defined at:
 11651 ;;		line 65 in file "daq.c"
 11652 ;; Parameters:    Size  Location     Type
 11653 ;;		None
 11654 ;; Auto vars:     Size  Location     Type
 11655 ;;		None
 11656 ;; Return value:  Size  Location     Type
 11657 ;;                  1  [STACK] _Bool 
 11658 ;; Registers used:
 11659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11660 ;; Tracked objects:
 11661 ;;		On entry : 0/0
 11662 ;;		On exit  : 1/0
 11663 ;;		Unchanged: 0/0
 11664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11669 ;;Total ram usage:        0 bytes
 11670 ;; Hardware stack levels used:    1
 11671 ;; Hardware stack levels required when called:   16
 11672 ;; This function calls:
 11673 ;;		_ADCC_DischargeSampleCapacitor
 11674 ;;		_ADCC_SetADIInterruptHandler
 11675 ;;		_ADCC_SetADTIInterruptHandler
 11676 ;;		_ADCC_StartConversion
 11677 ;; This function is called by:
 11678 ;;		_main
 11679 ;;		_current_sensor_cal
 11680 ;;		_update_adc_result
 11681 ;; This function uses a reentrant model
 11682 ;;
 11683                           
 11684                           	psect	text37
 11685  01C1DA                     __ptext37:
 11686                           	opt callstack 0
 11687  01C1DA                     _start_adc_scan:
 11688                           	opt callstack 14
 11689                           
 11690                           ;daq.c: 67:  if (R.done)
 11691                           
 11692                           ; BSR set to: 57
 11693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11694                           ;incstack = 0
 11695  01C1DA  0100               	movlb	0	; () banked
 11696  01C1DC  51E3               	movf	(_R+53)& (0+255),w,b	;volatile
 11697  01C1DE  A4D8               	btfss	status,2,c
 11698  01C1E0  0012               	return	
 11699                           
 11700                           ; BSR set to: 0
 11701                           ;daq.c: 70:  R.scan_index = 0;
 11702  01C1E2  6BE0               	clrf	(_R+50)& (0+255),b	;volatile
 11703                           
 11704                           ; BSR set to: 0
 11705                           ;daq.c: 71:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 11706  01C1E4  013A               	movlb	58	; () banked
 11707  01C1E6  5140               	movf	64,w,b	;volatile
 11708  01C1E8  006E F940  F001    	movff	14928,btemp	;volatile
 11709  01C1EE  6A02               	clrf	(btemp+1)^0,c
 11710  01C1F0  0060  F004  F002   	movff	btemp,btemp+1
 11711  01C1F6  6A01               	clrf	btemp^0,c
 11712  01C1F8  2601               	addwf	btemp^0,f,c
 11713  01C1FA  0E00               	movlw	0
 11714  01C1FC  2202               	addwfc	(btemp+1)^0,f,c
 11715  01C1FE  0E77               	movlw	119
 11716  01C200  1401               	andwf	btemp^0,w,c
 11717  01C202  0100               	movlb	0	; () banked
 11718  01C204  6FE1               	movwf	(_R+51)& (0+255),b	;volatile
 11719  01C206  0E3C               	movlw	60
 11720  01C208  1402               	andwf	(btemp+1)^0,w,c
 11721  01C20A  6FE2               	movwf	(_R+52)& (0+255),b	;volatile
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;daq.c: 72:  ADCC_SetADIInterruptHandler(adc_int_handler);
 11725  01C20C  0EEA               	movlw	low _adc_int_handler
 11726  01C20E  6EE6               	movwf	postinc1,c
 11727  01C210  0ED3               	movlw	high _adc_int_handler
 11728  01C212  6EE6               	movwf	postinc1,c
 11729  01C214  0E01               	movlw	low (_adc_int_handler shr (0+16))
 11730  01C216  6EE6               	movwf	postinc1,c
 11731  01C218  EC8D  F0E7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 11732                           
 11733                           ;daq.c: 73:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 11734  01C21C  0E84               	movlw	low _adc_int_t_handler
 11735  01C21E  6EE6               	movwf	postinc1,c
 11736  01C220  0EBD               	movlw	high _adc_int_t_handler
 11737  01C222  6EE6               	movwf	postinc1,c
 11738  01C224  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 11739  01C226  6EE6               	movwf	postinc1,c
 11740  01C228  EC79  F0E7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 11741                           
 11742                           ;daq.c: 74:  ADCC_DischargeSampleCapacitor();
 11743  01C22C  ECCF  F0E9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 11744                           
 11745                           ; BSR set to: 62
 11746                           ;daq.c: 75:  ADCC_StartConversion(R.scan_index & 0xf);
 11747  01C230  0100               	movlb	0	; () banked
 11748  01C232  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 11749  01C234  0B0F               	andlw	15
 11750  01C236  6EE6               	movwf	postinc1,c
 11751  01C238  EC5A  F0E9         	call	_ADCC_StartConversion	;wreg free
 11752                           
 11753                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11754  01C23C  0012               	return		;funcret
 11755  01C23E                     __end_of_start_adc_scan:
 11756                           	opt callstack 0
 11757                           
 11758 ;; *************** function _ADCC_StartConversion *****************
 11759 ;; Defined at:
 11760 ;;		line 128 in file "mcc_generated_files/adcc.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  channel         1  [STACK] enum E16136
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1  [STACK] void 
 11767 ;; Registers used:
 11768 ;;		fsr1l, fsr1h
 11769 ;; Tracked objects:
 11770 ;;		On entry : 3F/0
 11771 ;;		On exit  : 3F/3E
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11778 ;;Total ram usage:        0 bytes
 11779 ;; Hardware stack levels used:    1
 11780 ;; Hardware stack levels required when called:   15
 11781 ;; This function calls:
 11782 ;;		Nothing
 11783 ;; This function is called by:
 11784 ;;		_start_adc_scan
 11785 ;;		_adc_int_t_handler
 11786 ;; This function uses a reentrant model
 11787 ;;
 11788                           
 11789                           	psect	text38
 11790  01D2B4                     __ptext38:
 11791                           	opt callstack 0
 11792  01D2B4                     _ADCC_StartConversion:
 11793                           	opt callstack 0
 11794                           
 11795                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 11796                           ;stkvar	_channel @ sp[(0)+-1]
 11797                           
 11798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11799                           ;incstack = 0
 11800 ;; hardware stack exceeded
 11801  01D2B4  0EFF               	movlw	-1
 11802  01D2B6  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 11803                           
 11804                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 11805  01D2BC  013E               	movlb	62	; () banked
 11806  01D2BE  8FF8               	bsf	248,7,b	;volatile
 11807                           
 11808                           ; BSR set to: 62
 11809                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 11810  01D2C0  81F8               	bsf	248,0,b	;volatile
 11811                           
 11812                           ; BSR set to: 62
 11813                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 11814  01D2C2  52E5               	movf	postdec1,f,c
 11815  01D2C4  0012               	return		;funcret
 11816  01D2C6                     __end_of_ADCC_StartConversion:
 11817                           	opt callstack 0
 11818                           
 11819 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 11820 ;; Defined at:
 11821 ;;		line 189 in file "mcc_generated_files/adcc.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;		None
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;		None
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  1  [STACK] void 
 11828 ;; Registers used:
 11829 ;;		wreg, status,2
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 3F/3E
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11839 ;;Total ram usage:        0 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; Hardware stack levels required when called:   15
 11842 ;; This function calls:
 11843 ;;		Nothing
 11844 ;; This function is called by:
 11845 ;;		_start_adc_scan
 11846 ;;		_adc_int_t_handler
 11847 ;; This function uses a reentrant model
 11848 ;;
 11849                           
 11850                           	psect	text39
 11851  01D39E                     __ptext39:
 11852                           	opt callstack 0
 11853  01D39E                     _ADCC_DischargeSampleCapacitor:
 11854                           	opt callstack 0
 11855                           
 11856                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 11857                           
 11858                           ; BSR set to: 62
 11859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11860                           ;incstack = 0
 11861 ;; hardware stack exceeded
 11862  01D39E  0E3B               	movlw	59
 11863  01D3A0  013E               	movlb	62	; () banked
 11864  01D3A2  6FF1               	movwf	241,b	;volatile
 11865                           
 11866                           ; BSR set to: 62
 11867                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 11868  01D3A4  0012               	return		;funcret
 11869  01D3A6                     __end_of_ADCC_DischargeSampleCapacitor:
 11870                           	opt callstack 0
 11871                           
 11872 ;; *************** function _spinners *****************
 11873 ;; Defined at:
 11874 ;;		line 146 in file "mbmc.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;  shape           1  [STACK] unsigned char 
 11877 ;;  reset           1  [STACK] const unsigned char 
 11878 ;; Auto vars:     Size  Location     Type
 11879 ;;  c               1  [STACK] unsigned char 
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  1  [STACK] unsigned char 
 11882 ;; Registers used:
 11883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11884 ;; Tracked objects:
 11885 ;;		On entry : 0/0
 11886 ;;		On exit  : 0/0
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11893 ;;Total ram usage:        0 bytes
 11894 ;; Hardware stack levels used:    1
 11895 ;; Hardware stack levels required when called:   16
 11896 ;; This function calls:
 11897 ;;		_strlen
 11898 ;; This function is called by:
 11899 ;;		_main
 11900 ;;		_current_sensor_cal
 11901 ;; This function uses a reentrant model
 11902 ;;
 11903                           
 11904                           	psect	text40
 11905  01AB96                     __ptext40:
 11906                           	opt callstack 0
 11907  01AB96                     _spinners:
 11908                           	opt callstack 0
 11909                           
 11910                           ; BSR set to: 62
 11911                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11912  01AB96  52E6               	movf	postinc1,f,c
 11913                           
 11914                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 11915                           ;stkvar	_shape @ sp[(-1)+-1]
 11916                           
 11917                           ;incstack = 0
 11918  01AB98  0EFE               	movlw	-2
 11919  01AB9A  006F FF8C  F001    	movff	plusw1,btemp
 11920  01ABA0  0E05               	movlw	5
 11921  01ABA2  6401               	cpfsgt	btemp^0,c
 11922  01ABA4  D002               	goto	l2135
 11923                           
 11924                           ;mbmc.c: 152:   shape = 0;
 11925                           ;stkvar	_shape @ sp[(-1)+-1]
 11926  01ABA6  0EFE               	movlw	-2
 11927  01ABA8  6AE3               	clrf	plusw1,c
 11928  01ABAA                     l2135:
 11929                           
 11930                           ;mbmc.c: 153:  if (reset)
 11931                           ;stkvar	_reset @ sp[(-1)+-2]
 11932  01ABAA  0EFD               	movlw	-3
 11933  01ABAC  50E3               	movf	plusw1,w,c
 11934  01ABAE  B4D8               	btfsc	status,2,c
 11935  01ABB0  D00C               	goto	l11288
 11936                           
 11937                           ;mbmc.c: 154:   s[shape] = 0;
 11938                           ;stkvar	_shape @ sp[(-1)+-1]
 11939  01ABB2  0EFE               	movlw	-2
 11940  01ABB4  50E3               	movf	plusw1,w,c
 11941  01ABB6  6E0B               	movwf	(btemp+10)^0,c
 11942  01ABB8  6A0C               	clrf	(btemp+11)^0,c
 11943  01ABBA  0EE4               	movlw	low spinners@s
 11944  01ABBC  240B               	addwf	(btemp+10)^0,w,c
 11945  01ABBE  6ED9               	movwf	fsr2l,c
 11946  01ABC0  0E01               	movlw	high spinners@s
 11947  01ABC2  200C               	addwfc	(btemp+11)^0,w,c
 11948  01ABC4  6EDA               	movwf	fsr2h,c
 11949  01ABC6  0E00               	movlw	0
 11950  01ABC8  6EDF               	movwf	indf2,c
 11951  01ABCA                     l11288:
 11952                           
 11953                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 11954                           ;stkvar	_shape @ sp[(-1)+-1]
 11955  01ABCA  0EFE               	movlw	-2
 11956  01ABCC  50E3               	movf	plusw1,w,c
 11957  01ABCE  0D14               	mullw	20
 11958  01ABD0  0E43               	movlw	low _spin
 11959  01ABD2  6E0B               	movwf	(btemp+10)^0,c
 11960  01ABD4  0EFA               	movlw	high _spin
 11961  01ABD6  6E0C               	movwf	(btemp+11)^0,c
 11962  01ABD8  50F3               	movf	243,w,c
 11963  01ABDA  260B               	addwf	(btemp+10)^0,f,c
 11964  01ABDC  50F4               	movf	244,w,c
 11965  01ABDE  220C               	addwfc	(btemp+11)^0,f,c
 11966                           
 11967                           ;stkvar	_shape @ sp[(-1)+-1]
 11968  01ABE0  0EFE               	movlw	-2
 11969  01ABE2  50E3               	movf	plusw1,w,c
 11970  01ABE4  6E09               	movwf	(btemp+8)^0,c
 11971  01ABE6  6A0A               	clrf	(btemp+9)^0,c
 11972  01ABE8  0EE4               	movlw	low spinners@s
 11973  01ABEA  2409               	addwf	(btemp+8)^0,w,c
 11974  01ABEC  6ED9               	movwf	fsr2l,c
 11975  01ABEE  0E01               	movlw	high spinners@s
 11976  01ABF0  200A               	addwfc	(btemp+9)^0,w,c
 11977  01ABF2  6EDA               	movwf	fsr2h,c
 11978  01ABF4  50DF               	movf	indf2,w,c
 11979  01ABF6  260B               	addwf	(btemp+10)^0,f,c
 11980  01ABF8  0E00               	movlw	0
 11981  01ABFA  220C               	addwfc	(btemp+11)^0,f,c
 11982  01ABFC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11983  01AC02  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11984  01AC08                     	if	0	;tblptru may be non-zero
 11985  01AC08                     	endif
 11986  01AC08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11987  01AC08  0E00               	movlw	low (__mediumconst shr (0+16))
 11988  01AC0A  6EF8               	movwf	tblptru,c
 11989  01AC0C                     	endif
 11990                           
 11991                           ;stkvar	_c @ sp[(-1)+0]
 11992  01AC0C  0008               	tblrd		*
 11993  01AC0E  0EFF               	movlw	-1
 11994  01AC10  006F FFD7 FFE3     	movff	tablat,plusw1
 11995                           
 11996                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 11997                           ;stkvar	_shape @ sp[(-1)+-1]
 11998  01AC16  0EFE               	movlw	-2
 11999  01AC18  50E3               	movf	plusw1,w,c
 12000  01AC1A  0D14               	mullw	20
 12001  01AC1C  0E43               	movlw	low _spin
 12002  01AC1E  6E0B               	movwf	(btemp+10)^0,c
 12003  01AC20  0EFA               	movlw	high _spin
 12004  01AC22  6E0C               	movwf	(btemp+11)^0,c
 12005  01AC24  50F3               	movf	243,w,c
 12006  01AC26  260B               	addwf	(btemp+10)^0,f,c
 12007  01AC28  50F4               	movf	244,w,c
 12008  01AC2A  220C               	addwfc	(btemp+11)^0,f,c
 12009  01AC2C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12010  01AC32  0060  F033  FFE6   	movff	btemp+11,postinc1
 12011  01AC38  ECFB  F0DB         	call	_strlen	;wreg free
 12012                           
 12013                           ;stkvar	_shape @ sp[(-1)+-1]
 12014  01AC3C  0EFE               	movlw	-2
 12015  01AC3E  50E3               	movf	plusw1,w,c
 12016  01AC40  6E0B               	movwf	(btemp+10)^0,c
 12017  01AC42  6A0C               	clrf	(btemp+11)^0,c
 12018  01AC44  0EE4               	movlw	low spinners@s
 12019  01AC46  240B               	addwf	(btemp+10)^0,w,c
 12020  01AC48  6ED9               	movwf	fsr2l,c
 12021  01AC4A  0E01               	movlw	high spinners@s
 12022  01AC4C  200C               	addwfc	(btemp+11)^0,w,c
 12023  01AC4E  6EDA               	movwf	fsr2h,c
 12024  01AC50  2ADF               	incf	indf2,f,c
 12025  01AC52  50DF               	movf	indf2,w,c
 12026  01AC54  6E0B               	movwf	(btemp+10)^0,c
 12027  01AC56  6A0C               	clrf	(btemp+11)^0,c
 12028  01AC58  5001               	movf	btemp^0,w,c
 12029  01AC5A  5C0B               	subwf	(btemp+10)^0,w,c
 12030  01AC5C  5002               	movf	(btemp+1)^0,w,c
 12031  01AC5E  580C               	subwfb	(btemp+11)^0,w,c
 12032  01AC60  A0D8               	btfss	status,0,c
 12033  01AC62  D00C               	goto	l11294
 12034                           
 12035                           ;mbmc.c: 157:   s[shape] = 0;
 12036                           ;stkvar	_shape @ sp[(-1)+-1]
 12037  01AC64  0EFE               	movlw	-2
 12038  01AC66  50E3               	movf	plusw1,w,c
 12039  01AC68  6E0B               	movwf	(btemp+10)^0,c
 12040  01AC6A  6A0C               	clrf	(btemp+11)^0,c
 12041  01AC6C  0EE4               	movlw	low spinners@s
 12042  01AC6E  240B               	addwf	(btemp+10)^0,w,c
 12043  01AC70  6ED9               	movwf	fsr2l,c
 12044  01AC72  0E01               	movlw	high spinners@s
 12045  01AC74  200C               	addwfc	(btemp+11)^0,w,c
 12046  01AC76  6EDA               	movwf	fsr2h,c
 12047  01AC78  0E00               	movlw	0
 12048  01AC7A  6EDF               	movwf	indf2,c
 12049  01AC7C                     l11294:
 12050                           
 12051                           ;mbmc.c: 158:  return c;
 12052                           ;stkvar	_c @ sp[(-1)+0]
 12053  01AC7C  0EFF               	movlw	-1
 12054  01AC7E  006F FF8C  F001    	movff	plusw1,btemp
 12055                           
 12056                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 12057  01AC84  52E5               	movf	postdec1,f,c
 12058  01AC86  52E5               	movf	postdec1,f,c
 12059  01AC88  52E5               	movf	postdec1,f,c
 12060  01AC8A  0012               	return		;funcret
 12061  01AC8C                     __end_of_spinners:
 12062                           	opt callstack 0
 12063                           
 12064 ;; *************** function _get_switch *****************
 12065 ;; Defined at:
 12066 ;;		line 18 in file "dio.c"
 12067 ;; Parameters:    Size  Location     Type
 12068 ;;  i               1  [STACK] const unsigned char 
 12069 ;; Auto vars:     Size  Location     Type
 12070 ;;		None
 12071 ;; Return value:  Size  Location     Type
 12072 ;;                  1  [STACK] enum E17036
 12073 ;; Registers used:
 12074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 12075 ;; Tracked objects:
 12076 ;;		On entry : 0/0
 12077 ;;		On exit  : 0/0
 12078 ;;		Unchanged: 0/0
 12079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12084 ;;Total ram usage:        0 bytes
 12085 ;; Hardware stack levels used:    1
 12086 ;; Hardware stack levels required when called:   15
 12087 ;; This function calls:
 12088 ;;		Nothing
 12089 ;; This function is called by:
 12090 ;;		_main
 12091 ;;		_current_sensor_cal
 12092 ;;		_hid_input
 12093 ;; This function uses a reentrant model
 12094 ;;
 12095                           
 12096                           	psect	text41
 12097  01CCB4                     __ptext41:
 12098                           	opt callstack 0
 12099  01CCB4                     _get_switch:
 12100                           	opt callstack 13
 12101                           
 12102                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 12103                           ;stkvar	_i @ sp[(0)+-1]
 12104                           
 12105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12106                           ;incstack = 0
 12107  01CCB4  0EFF               	movlw	-1
 12108  01CCB6  006F FF8C  F001    	movff	plusw1,btemp
 12109  01CCBC  0E05               	movlw	5
 12110  01CCBE  6401               	cpfsgt	btemp^0,c
 12111  01CCC0  D002               	goto	l10772
 12112                           
 12113                           ;dio.c: 21:   return SW_OFF;
 12114  01CCC2  0E00               	movlw	0
 12115  01CCC4  D00A               	goto	L10
 12116  01CCC6                     l10772:
 12117                           
 12118                           ;dio.c: 23:  return S.button[i].sw;
 12119                           ;stkvar	_i @ sp[(0)+-1]
 12120  01CCC6  0EFF               	movlw	-1
 12121  01CCC8  50E3               	movf	plusw1,w,c
 12122  01CCCA  0D05               	mullw	5
 12123  01CCCC  0E00               	movlw	low _S
 12124  01CCCE  24F3               	addwf	243,w,c
 12125  01CCD0  6ED9               	movwf	fsr2l,c
 12126  01CCD2  0E02               	movlw	high _S
 12127  01CCD4  20F4               	addwfc	prodh,w,c
 12128  01CCD6  6EDA               	movwf	fsr2h,c
 12129  01CCD8  50DF               	movf	indf2,w,c
 12130  01CCDA                     L10:
 12131  01CCDA  6E01               	movwf	btemp^0,c
 12132                           
 12133                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12134  01CCDC  52E5               	movf	postdec1,f,c
 12135  01CCDE  0012               	return		;funcret
 12136  01CCE0                     __end_of_get_switch:
 12137                           	opt callstack 0
 12138                           
 12139 ;; *************** function _clear_adc_scan *****************
 12140 ;; Defined at:
 12141 ;;		line 96 in file "daq.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;		None
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;		None
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  1  [STACK] void 
 12148 ;; Registers used:
 12149 ;;		None
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 3F/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12159 ;;Total ram usage:        0 bytes
 12160 ;; Hardware stack levels used:    1
 12161 ;; Hardware stack levels required when called:   15
 12162 ;; This function calls:
 12163 ;;		Nothing
 12164 ;; This function is called by:
 12165 ;;		_main
 12166 ;;		_current_sensor_cal
 12167 ;;		_update_adc_result
 12168 ;; This function uses a reentrant model
 12169 ;;
 12170                           
 12171                           	psect	text42
 12172  01D3C4                     __ptext42:
 12173                           	opt callstack 0
 12174  01D3C4                     _clear_adc_scan:
 12175                           	opt callstack 13
 12176                           
 12177                           ;daq.c: 98:  R.done = 0;
 12178                           
 12179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12180                           ;incstack = 0
 12181  01D3C4  0100               	movlb	0	; () banked
 12182  01D3C6  6BE3               	clrf	(_R+53)& (0+255),b	;volatile
 12183                           
 12184                           ; BSR set to: 0
 12185                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12186  01D3C8  0012               	return		;funcret
 12187  01D3CA                     __end_of_clear_adc_scan:
 12188                           	opt callstack 0
 12189                           
 12190 ;; *************** function _cal_current_zero *****************
 12191 ;; Defined at:
 12192 ;;		line 322 in file "daq.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;  mode            1  [STACK] _Bool 
 12195 ;;  cb              2  [STACK] short 
 12196 ;;  cp              2  [STACK] short 
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;		None
 12199 ;; Return value:  Size  Location     Type
 12200 ;;                  1  [STACK] _Bool 
 12201 ;; Registers used:
 12202 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 12203 ;; Tracked objects:
 12204 ;;		On entry : 0/0
 12205 ;;		On exit  : 0/0
 12206 ;;		Unchanged: 0/0
 12207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12212 ;;Total ram usage:        0 bytes
 12213 ;; Hardware stack levels used:    1
 12214 ;; Hardware stack levels required when called:   16
 12215 ;; This function calls:
 12216 ;;		_check_range
 12217 ;; This function is called by:
 12218 ;;		_current_sensor_cal
 12219 ;; This function uses a reentrant model
 12220 ;;
 12221                           
 12222                           	psect	text43
 12223  01BAE6                     __ptext43:
 12224                           	opt callstack 0
 12225  01BAE6                     _cal_current_zero:
 12226                           	opt callstack 13
 12227                           
 12228                           ;daq.c: 322: _Bool cal_current_zero(_Bool mode, int16_t cb, int16_t cp);daq.c: 323: {;da
      +                          q.c: 325:  if (!check_range(cb, 100, 4000))
 12229                           
 12230                           ; BSR set to: 0
 12231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12232                           ;incstack = 0
 12233  01BAE6  0EA0               	movlw	160
 12234  01BAE8  6EE6               	movwf	postinc1,c
 12235  01BAEA  0E0F               	movlw	15
 12236  01BAEC  6EE6               	movwf	postinc1,c
 12237  01BAEE  0E64               	movlw	100
 12238  01BAF0  6EE6               	movwf	postinc1,c
 12239  01BAF2  0E00               	movlw	0
 12240  01BAF4  6EE6               	movwf	postinc1,c
 12241                           
 12242                           ;stkvar	_cb @ sp[(-4)+-3]
 12243  01BAF6  0EF9               	movlw	-7
 12244  01BAF8  006F FF8F FFE6     	movff	plusw1,postinc1
 12245  01BAFE  006F FF8F FFE6     	movff	plusw1,postinc1
 12246  01BB04  EC82  F0DE         	call	_check_range	;wreg free
 12247  01BB08  5001               	movf	btemp^0,w,c
 12248  01BB0A  A4D8               	btfss	status,2,c
 12249  01BB0C  D002               	goto	l11336
 12250  01BB0E                     u10240:
 12251                           
 12252                           ;daq.c: 326:   return 0;
 12253  01BB0E  0E00               	movlw	0
 12254  01BB10  D019               	goto	L11
 12255  01BB12                     l11336:
 12256                           
 12257                           ;daq.c: 328:  if (!check_range(cp, 100, 4000))
 12258  01BB12  0EA0               	movlw	160
 12259  01BB14  6EE6               	movwf	postinc1,c
 12260  01BB16  0E0F               	movlw	15
 12261  01BB18  6EE6               	movwf	postinc1,c
 12262  01BB1A  0E64               	movlw	100
 12263  01BB1C  6EE6               	movwf	postinc1,c
 12264  01BB1E  0E00               	movlw	0
 12265  01BB20  6EE6               	movwf	postinc1,c
 12266                           
 12267                           ;stkvar	_cp @ sp[(-4)+-5]
 12268  01BB22  0EF7               	movlw	-9
 12269  01BB24  006F FF8F FFE6     	movff	plusw1,postinc1
 12270  01BB2A  006F FF8F FFE6     	movff	plusw1,postinc1
 12271  01BB30  EC82  F0DE         	call	_check_range	;wreg free
 12272  01BB34  5001               	movf	btemp^0,w,c
 12273  01BB36  B4D8               	btfsc	status,2,c
 12274  01BB38  D7EA               	goto	u10240
 12275                           
 12276                           ;daq.c: 331:  if (!mode)
 12277                           ;stkvar	_mode @ sp[(0)+-1]
 12278  01BB3A  0EFF               	movlw	-1
 12279  01BB3C  50E3               	movf	plusw1,w,c
 12280  01BB3E  A4D8               	btfss	status,2,c
 12281  01BB40  D003               	goto	l11348
 12282  01BB42                     u10260:
 12283                           
 12284                           ;daq.c: 332:   return 1;
 12285  01BB42  0E01               	movlw	1
 12286  01BB44                     L11:
 12287  01BB44  6E01               	movwf	btemp^0,c
 12288  01BB46  D011               	goto	l2029
 12289  01BB48                     l11348:
 12290                           
 12291                           ;daq.c: 334:  R.n_offset[0] = cb;
 12292                           ;stkvar	_cb @ sp[(0)+-3]
 12293  01BB48  0EFD               	movlw	-3
 12294  01BB4A  006F FF8C  F0D4    	movff	plusw1,_R+38	;volatile
 12295  01BB50  0EFE               	movlw	-2
 12296  01BB52  006F FF8C  F0D5    	movff	plusw1,_R+39	;volatile
 12297                           
 12298                           ;daq.c: 335:  R.n_offset[1] = cp;
 12299                           ;stkvar	_cp @ sp[(0)+-5]
 12300  01BB58  0EFB               	movlw	-5
 12301  01BB5A  006F FF8C  F0D6    	movff	plusw1,_R+40	;volatile
 12302  01BB60  0EFC               	movlw	-4
 12303  01BB62  006F FF8C  F0D7    	movff	plusw1,_R+41	;volatile
 12304  01BB68  D7EC               	goto	u10260
 12305  01BB6A                     l2029:
 12306                           
 12307                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 12308  01BB6A  0EFB               	movlw	251
 12309  01BB6C  26E1               	addwf	fsr1l,f,c
 12310  01BB6E  0EFF               	movlw	255
 12311  01BB70  22E2               	addwfc	fsr1h,f,c
 12312  01BB72  0012               	return		;funcret
 12313  01BB74                     __end_of_cal_current_zero:
 12314                           	opt callstack 0
 12315                           
 12316 ;; *************** function _check_range *****************
 12317 ;; Defined at:
 12318 ;;		line 310 in file "daq.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;  value           2  [STACK] short 
 12321 ;;  window          2  [STACK] short 
 12322 ;;  standard        2  [STACK] short 
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;		None
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  1  [STACK] _Bool 
 12327 ;; Registers used:
 12328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12338 ;;Total ram usage:        0 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:   15
 12341 ;; This function calls:
 12342 ;;		Nothing
 12343 ;; This function is called by:
 12344 ;;		_cal_current_zero
 12345 ;; This function uses a reentrant model
 12346 ;;
 12347                           
 12348                           	psect	text44
 12349  01BD04                     __ptext44:
 12350                           	opt callstack 0
 12351  01BD04                     _check_range:
 12352                           	opt callstack 13
 12353                           
 12354                           ;daq.c: 310: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 311: {;daq.c: 312:  if (value > (standard + window))
 12355                           ;stkvar	_value @ sp[(0)+-2]
 12356                           ;stkvar	_window @ sp[(0)+-4]
 12357                           ;stkvar	_standard @ sp[(0)+-6]
 12358                           
 12359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12360                           ;incstack = 0
 12361  01BD04  0EFA               	movlw	-6
 12362  01BD06  006F FF8C  F00B    	movff	plusw1,btemp+10
 12363  01BD0C  0EFB               	movlw	-5
 12364  01BD0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12365  01BD14  0EFC               	movlw	-4
 12366  01BD16  50E3               	movf	plusw1,w,c
 12367  01BD18  260B               	addwf	(btemp+10)^0,f,c
 12368  01BD1A  0EFD               	movlw	-3
 12369  01BD1C  50E3               	movf	plusw1,w,c
 12370  01BD1E  220C               	addwfc	(btemp+11)^0,f,c
 12371  01BD20  0EFE               	movlw	-2
 12372  01BD22  50E3               	movf	plusw1,w,c
 12373  01BD24  5C0B               	subwf	(btemp+10)^0,w,c
 12374  01BD26  500C               	movf	(btemp+11)^0,w,c
 12375  01BD28  0A80               	xorlw	128
 12376  01BD2A  6E01               	movwf	btemp^0,c
 12377  01BD2C  0EFF               	movlw	-1
 12378  01BD2E  50E3               	movf	plusw1,w,c
 12379  01BD30  0A80               	xorlw	128
 12380  01BD32  5801               	subwfb	btemp^0,w,c
 12381  01BD34  B0D8               	btfsc	status,0,c
 12382  01BD36  D002               	goto	l10830
 12383  01BD38                     u10030:
 12384                           
 12385                           ;daq.c: 313:   return 0;
 12386  01BD38  0E00               	movlw	0
 12387  01BD3A  D01E               	goto	L12
 12388  01BD3C                     l10830:
 12389                           
 12390                           ;daq.c: 314:  if (value < (standard - window))
 12391                           ;stkvar	_window @ sp[(0)+-4]
 12392                           ;stkvar	_standard @ sp[(0)+-6]
 12393  01BD3C  0EFA               	movlw	-6
 12394  01BD3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12395  01BD44  0EFB               	movlw	-5
 12396  01BD46  006F FF8C  F00C    	movff	plusw1,btemp+11
 12397  01BD4C  0EFC               	movlw	-4
 12398  01BD4E  50E3               	movf	plusw1,w,c
 12399  01BD50  5E0B               	subwf	(btemp+10)^0,f,c
 12400  01BD52  0EFD               	movlw	-3
 12401  01BD54  50E3               	movf	plusw1,w,c
 12402  01BD56  5A0C               	subwfb	(btemp+11)^0,f,c
 12403                           
 12404                           ;stkvar	_value @ sp[(0)+-2]
 12405  01BD58  0EFE               	movlw	-2
 12406  01BD5A  006F FF8C  F001    	movff	plusw1,btemp
 12407  01BD60  500B               	movf	(btemp+10)^0,w,c
 12408  01BD62  5C01               	subwf	btemp^0,w,c
 12409  01BD64  0EFF               	movlw	-1
 12410  01BD66  50E3               	movf	plusw1,w,c
 12411  01BD68  0A80               	xorlw	128
 12412  01BD6A  6E01               	movwf	btemp^0,c
 12413  01BD6C  500C               	movf	(btemp+11)^0,w,c
 12414  01BD6E  0A80               	xorlw	128
 12415  01BD70  5801               	subwfb	btemp^0,w,c
 12416  01BD72  A0D8               	btfss	status,0,c
 12417  01BD74  D7E1               	goto	u10030
 12418                           
 12419                           ;daq.c: 316:  return 1;
 12420  01BD76  0E01               	movlw	1
 12421  01BD78                     L12:
 12422  01BD78  6E01               	movwf	btemp^0,c
 12423                           
 12424                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 12425  01BD7A  0EFA               	movlw	250
 12426  01BD7C  26E1               	addwf	fsr1l,f,c
 12427  01BD7E  0EFF               	movlw	255
 12428  01BD80  22E2               	addwfc	fsr1h,f,c
 12429  01BD82  0012               	return		;funcret
 12430  01BD84                     __end_of_check_range:
 12431                           	opt callstack 0
 12432                           
 12433 ;; *************** function _convert_adc_data *****************
 12434 ;; Defined at:
 12435 ;;		line 51 in file "mbmc.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;		None
 12438 ;; Auto vars:     Size  Location     Type
 12439 ;;  i               1  [STACK] unsigned char 
 12440 ;; Return value:  Size  Location     Type
 12441 ;;                  1  [STACK] void 
 12442 ;; Registers used:
 12443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 12444 ;; Tracked objects:
 12445 ;;		On entry : 0/1
 12446 ;;		On exit  : 0/0
 12447 ;;		Unchanged: 0/0
 12448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12453 ;;Total ram usage:        0 bytes
 12454 ;; Hardware stack levels used:    1
 12455 ;; Hardware stack levels required when called:   18
 12456 ;; This function calls:
 12457 ;;		_conv_raw_result
 12458 ;;		_lp_filter
 12459 ;; This function is called by:
 12460 ;;		_main
 12461 ;; This function uses a reentrant model
 12462 ;;
 12463                           
 12464                           	psect	text45
 12465  01B336                     __ptext45:
 12466                           	opt callstack 0
 12467  01B336                     _convert_adc_data:
 12468                           	opt callstack 0
 12469                           
 12470                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12471  01B336  52E6               	movf	postinc1,f,c
 12472                           
 12473                           ;mbmc.c: 53:  uint8_t i = 0;
 12474                           ;stkvar	_i @ sp[(-1)+0]
 12475                           
 12476                           ;incstack = 0
 12477  01B338  0EFF               	movlw	-1
 12478  01B33A  6AE3               	clrf	plusw1,c
 12479  01B33C                     l12144:
 12480                           
 12481                           ;mbmc.c: 56:   if (V.calib) {
 12482  01B33C  0101               	movlb	1	; () banked
 12483  01B33E  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 12484  01B340  B4D8               	btfsc	status,2,c
 12485  01B342  D01B               	goto	l12148
 12486                           
 12487                           ; BSR set to: 1
 12488                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 12489  01B344  0E01               	movlw	1
 12490  01B346  6EE6               	movwf	postinc1,c
 12491                           
 12492                           ;stkvar	_i @ sp[(-2)+0]
 12493  01B348  0EFE               	movlw	-2
 12494  01B34A  50E3               	movf	plusw1,w,c
 12495  01B34C  6EE6               	movwf	postinc1,c
 12496  01B34E  0E01               	movlw	1
 12497  01B350  6EE6               	movwf	postinc1,c
 12498                           
 12499                           ;stkvar	_i @ sp[(-4)+0]
 12500  01B352  0EFC               	movlw	-4
 12501  01B354  50E3               	movf	plusw1,w,c
 12502  01B356  6EE6               	movwf	postinc1,c
 12503  01B358  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 12504  01B35C  0060  F007  FFE6   	movff	btemp,postinc1
 12505  01B362  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12506  01B368  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12507  01B36E  0060  F013  FFE6   	movff	btemp+3,postinc1
 12508  01B374  EC13  F0C8         	call	_lp_filter	;wreg free
 12509  01B378  D01A               	goto	L13
 12510  01B37A                     l12148:
 12511                           
 12512                           ; BSR set to: 1
 12513                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 12514  01B37A  0E00               	movlw	0
 12515  01B37C  6EE6               	movwf	postinc1,c
 12516                           
 12517                           ;stkvar	_i @ sp[(-2)+0]
 12518  01B37E  0EFE               	movlw	-2
 12519  01B380  50E3               	movf	plusw1,w,c
 12520  01B382  6EE6               	movwf	postinc1,c
 12521  01B384  0E00               	movlw	0
 12522  01B386  6EE6               	movwf	postinc1,c
 12523                           
 12524                           ;stkvar	_i @ sp[(-4)+0]
 12525  01B388  0EFC               	movlw	-4
 12526  01B38A  50E3               	movf	plusw1,w,c
 12527  01B38C  6EE6               	movwf	postinc1,c
 12528  01B38E  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 12529  01B392  0060  F007  FFE6   	movff	btemp,postinc1
 12530  01B398  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12531  01B39E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12532  01B3A4  0060  F013  FFE6   	movff	btemp+3,postinc1
 12533  01B3AA  EC13  F0C8         	call	_lp_filter	;wreg free
 12534  01B3AE                     L13:
 12535                           
 12536                           ;stkvar	_i @ sp[(-1)+0]
 12537  01B3AE  0EFF               	movlw	-1
 12538  01B3B0  50E3               	movf	plusw1,w,c
 12539  01B3B2  0D04               	mullw	4
 12540  01B3B4  0EFF               	movlw	low _C
 12541  01B3B6  24F3               	addwf	243,w,c
 12542  01B3B8  6ED9               	movwf	fsr2l,c
 12543  01B3BA  0E07               	movlw	high _C
 12544  01B3BC  20F4               	addwfc	prodh,w,c
 12545  01B3BE  6EDA               	movwf	fsr2h,c
 12546  01B3C0  0060  F007  FFDE   	movff	btemp,postinc2
 12547  01B3C6  0060  F00B  FFDE   	movff	btemp+1,postinc2
 12548  01B3CC  0060  F00F  FFDE   	movff	btemp+2,postinc2
 12549  01B3D2  0060  F013  FFDE   	movff	btemp+3,postinc2
 12550                           
 12551                           ;mbmc.c: 61:  } while (++i < 16);
 12552                           ;stkvar	_i @ sp[(-1)+0]
 12553  01B3D8  0EFF               	movlw	-1
 12554  01B3DA  2AE3               	incf	plusw1,f,c
 12555  01B3DC  0EFF               	movlw	-1
 12556  01B3DE  006F FF8C  F001    	movff	plusw1,btemp
 12557  01B3E4  0E0F               	movlw	15
 12558  01B3E6  6401               	cpfsgt	btemp^0,c
 12559  01B3E8  D7A9               	goto	l12144
 12560                           
 12561                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12562  01B3EA  52E5               	movf	postdec1,f,c
 12563  01B3EC  0012               	return		;funcret
 12564  01B3EE                     __end_of_convert_adc_data:
 12565                           	opt callstack 0
 12566                           
 12567 ;; *************** function _clear_hid_pflags *****************
 12568 ;; Defined at:
 12569 ;;		line 67 in file "hid.c"
 12570 ;; Parameters:    Size  Location     Type
 12571 ;;  h               2  [STACK] PTR struct H_data
 12572 ;;		 -> H(9), 
 12573 ;; Auto vars:     Size  Location     Type
 12574 ;;		None
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  1  [STACK] void 
 12577 ;; Registers used:
 12578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 12579 ;; Tracked objects:
 12580 ;;		On entry : 3E/0
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12588 ;;Total ram usage:        0 bytes
 12589 ;; Hardware stack levels used:    1
 12590 ;; Hardware stack levels required when called:   15
 12591 ;; This function calls:
 12592 ;;		Nothing
 12593 ;; This function is called by:
 12594 ;;		_main
 12595 ;; This function uses a reentrant model
 12596 ;;
 12597                           
 12598                           	psect	text46
 12599  01C10E                     __ptext46:
 12600                           	opt callstack 0
 12601  01C10E                     _clear_hid_pflags:
 12602                           	opt callstack 15
 12603                           
 12604                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 12605                           ;stkvar	_h @ sp[(0)+-2]
 12606                           
 12607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12608                           ;incstack = 0
 12609  01C10E  0EFE               	movlw	-2
 12610  01C110  006F FF8C  F00B    	movff	plusw1,btemp+10
 12611  01C116  0EFF               	movlw	-1
 12612  01C118  006F FF8C  F00C    	movff	plusw1,btemp+11
 12613  01C11E  0E03               	movlw	3
 12614  01C120  240B               	addwf	(btemp+10)^0,w,c
 12615  01C122  6ED9               	movwf	fsr2l,c
 12616  01C124  0E00               	movlw	0
 12617  01C126  200C               	addwfc	(btemp+11)^0,w,c
 12618  01C128  6EDA               	movwf	fsr2h,c
 12619  01C12A  0E00               	movlw	0
 12620  01C12C  6EDF               	movwf	indf2,c
 12621                           
 12622                           ;hid.c: 70:  h->enter_p = SW_OFF;
 12623                           ;stkvar	_h @ sp[(0)+-2]
 12624  01C12E  0EFE               	movlw	-2
 12625  01C130  006F FF8C  F00B    	movff	plusw1,btemp+10
 12626  01C136  0EFF               	movlw	-1
 12627  01C138  006F FF8C  F00C    	movff	plusw1,btemp+11
 12628  01C13E  0E05               	movlw	5
 12629  01C140  240B               	addwf	(btemp+10)^0,w,c
 12630  01C142  6ED9               	movwf	fsr2l,c
 12631  01C144  0E00               	movlw	0
 12632  01C146  200C               	addwfc	(btemp+11)^0,w,c
 12633  01C148  6EDA               	movwf	fsr2h,c
 12634  01C14A  0E00               	movlw	0
 12635  01C14C  6EDF               	movwf	indf2,c
 12636                           
 12637                           ;hid.c: 71:  h->calib_p = SW_OFF;
 12638                           ;stkvar	_h @ sp[(0)+-2]
 12639  01C14E  0EFE               	movlw	-2
 12640  01C150  006F FF8C  F00B    	movff	plusw1,btemp+10
 12641  01C156  0EFF               	movlw	-1
 12642  01C158  006F FF8C  F00C    	movff	plusw1,btemp+11
 12643  01C15E  0E07               	movlw	7
 12644  01C160  240B               	addwf	(btemp+10)^0,w,c
 12645  01C162  6ED9               	movwf	fsr2l,c
 12646  01C164  0E00               	movlw	0
 12647  01C166  200C               	addwfc	(btemp+11)^0,w,c
 12648  01C168  6EDA               	movwf	fsr2h,c
 12649  01C16A  0E00               	movlw	0
 12650  01C16C  6EDF               	movwf	indf2,c
 12651                           
 12652                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 12653  01C16E  52E5               	movf	postdec1,f,c
 12654  01C170  52E5               	movf	postdec1,f,c
 12655  01C172  0012               	return		;funcret
 12656  01C174                     __end_of_clear_hid_pflags:
 12657                           	opt callstack 0
 12658                           
 12659 ;; *************** function _check_help *****************
 12660 ;; Defined at:
 12661 ;;		line 40 in file "mconfig.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;  flipper         1  [STACK] const _Bool 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;  estatus         1    0        _Bool 
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  1  [STACK] _Bool 
 12668 ;; Registers used:
 12669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12670 ;; Tracked objects:
 12671 ;;		On entry : 3F/1
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12679 ;;Total ram usage:        0 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; Hardware stack levels required when called:   28
 12682 ;; This function calls:
 12683 ;;		_StartTimer
 12684 ;;		_TimerDone
 12685 ;;		_display_help
 12686 ;;		_display_info
 12687 ;;		_get_vterm_ptr
 12688 ;;		_help_button
 12689 ;;		_mode_lamp_bright
 12690 ;;		_mode_lamp_dim
 12691 ;;		_set_display_info
 12692 ;;		_set_temp_display_help
 12693 ;;		_set_vterm
 12694 ;;		_sprintf
 12695 ;;		_update_lcd
 12696 ;;		_vterm_dump
 12697 ;; This function is called by:
 12698 ;;		_main
 12699 ;; This function uses a reentrant model
 12700 ;;
 12701                           
 12702                           	psect	text47
 12703  018A46                     __ptext47:
 12704                           	opt callstack 0
 12705  018A46                     _check_help:
 12706                           	opt callstack 2
 12707                           
 12708                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 12709                           
 12710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12711                           ;incstack = 0
 12712  018A46  EC0F  F0E5         	call	_help_button	;wreg free
 12713  018A4A  5001               	movf	btemp^0,w,c
 12714  018A4C  B4D8               	btfsc	status,2,c
 12715  018A4E  D0D0               	goto	l14340
 12716  018A50  ECD3  F0E9         	call	_display_info	;wreg free
 12717  018A54  0401               	decf	btemp^0,w,c
 12718  018A56  B4D8               	btfsc	status,2,c
 12719  018A58  D0CB               	goto	l14340
 12720                           
 12721                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 12722  018A5A  0EDC               	movlw	220
 12723  018A5C  6EE6               	movwf	postinc1,c
 12724  018A5E  0E05               	movlw	5
 12725  018A60  6EE6               	movwf	postinc1,c
 12726  018A62  0E0B               	movlw	11
 12727  018A64  6EE6               	movwf	postinc1,c
 12728  018A66  EC56  F0E4         	call	_StartTimer	;wreg free
 12729                           
 12730                           ;mconfig.c: 48:   if (V.debug)
 12731  018A6A  0101               	movlb	1	; () banked
 12732  018A6C  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 12733                           
 12734                           ; BSR set to: 1
 12735                           ;mconfig.c: 49:    vterm_dump();
 12736  018A6E  EC67  F0D1         	call	_vterm_dump	;wreg free
 12737                           
 12738                           ;mconfig.c: 51:   set_vterm(1);
 12739  018A72  0E01               	movlw	1
 12740  018A74  6EE6               	movwf	postinc1,c
 12741  018A76  ECBB  F0E8         	call	_set_vterm	;wreg free
 12742                           
 12743                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 12744  018A7A  ECD3  F0E9         	call	_display_info	;wreg free
 12745  018A7E  5001               	movf	btemp^0,w,c
 12746  018A80  6EE6               	movwf	postinc1,c
 12747  018A82  EC7B  F0E9         	call	_set_temp_display_help	;wreg free
 12748                           
 12749                           ; BSR set to: 1
 12750                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 12751  018A86  0E01               	movlw	1
 12752  018A88  6EE6               	movwf	postinc1,c
 12753  018A8A  ECCA  F0E8         	call	_set_display_info	;wreg free
 12754                           
 12755                           ;mconfig.c: 54:   if (flipper) {
 12756                           ;stkvar	_flipper @ sp[(0)+-1]
 12757  018A8E  0EFF               	movlw	-1
 12758  018A90  50E3               	movf	plusw1,w,c
 12759  018A92  B4D8               	btfsc	status,2,c
 12760  018A94  D019               	goto	l14326
 12761                           
 12762                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 12763  018A96  0EB3               	movlw	low STR_62
 12764  018A98  6EE6               	movwf	postinc1,c
 12765  018A9A  0EFF               	movlw	high STR_62
 12766  018A9C  6EE6               	movwf	postinc1,c
 12767  018A9E  0E5D               	movlw	low STR_64
 12768  018AA0  6EE6               	movwf	postinc1,c
 12769  018AA2  0EFF               	movlw	high STR_64
 12770  018AA4  6EE6               	movwf	postinc1,c
 12771  018AA6  0E01               	movlw	1
 12772  018AA8  6EE6               	movwf	postinc1,c
 12773  018AAA  0E00               	movlw	0
 12774  018AAC  6EE6               	movwf	postinc1,c
 12775  018AAE  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 12776  018AB2  0060  F007  FFE6   	movff	btemp,postinc1
 12777  018AB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12778  018ABE  0E06               	movlw	6
 12779  018AC0  6EE6               	movwf	postinc1,c
 12780  018AC2  EC46  F0D5         	call	_sprintf	;wreg free
 12781                           
 12782                           ;mconfig.c: 56:   } else {
 12783  018AC6  D018               	goto	l1800
 12784  018AC8                     l14326:
 12785                           
 12786                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 12787  018AC8  0EC9               	movlw	low STR_63
 12788  018ACA  6EE6               	movwf	postinc1,c
 12789  018ACC  0EFF               	movlw	high STR_63
 12790  018ACE  6EE6               	movwf	postinc1,c
 12791  018AD0  0E5D               	movlw	low STR_64
 12792  018AD2  6EE6               	movwf	postinc1,c
 12793  018AD4  0EFF               	movlw	high STR_64
 12794  018AD6  6EE6               	movwf	postinc1,c
 12795  018AD8  0E01               	movlw	1
 12796  018ADA  6EE6               	movwf	postinc1,c
 12797  018ADC  0E00               	movlw	0
 12798  018ADE  6EE6               	movwf	postinc1,c
 12799  018AE0  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 12800  018AE4  0060  F007  FFE6   	movff	btemp,postinc1
 12801  018AEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12802  018AF0  0E06               	movlw	6
 12803  018AF2  6EE6               	movwf	postinc1,c
 12804  018AF4  EC46  F0D5         	call	_sprintf	;wreg free
 12805  018AF8                     l1800:
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 12809  018AF8  0101               	movlb	1	; () banked
 12810  018AFA  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 12811  018AFC  32E8               	rrcf	wreg,f,c
 12812  018AFE  32E8               	rrcf	wreg,f,c
 12813  018B00  0B03               	andlw	3
 12814  018B02  0D24               	mullw	36
 12815  018B04  0E12               	movlw	18
 12816  018B06  26F3               	addwf	243,f,c
 12817  018B08  0E00               	movlw	0
 12818  018B0A  22F4               	addwfc	244,f,c
 12819  018B0C  0EB3               	movlw	low _T
 12820  018B0E  6E0B               	movwf	(btemp+10)^0,c
 12821  018B10  0EF9               	movlw	high _T
 12822  018B12  6E0C               	movwf	(btemp+11)^0,c
 12823  018B14  50F3               	movf	243,w,c
 12824  018B16  260B               	addwf	(btemp+10)^0,f,c
 12825  018B18  50F4               	movf	244,w,c
 12826  018B1A  220C               	addwfc	(btemp+11)^0,f,c
 12827  018B1C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12828  018B22  0060  F033  FFE6   	movff	btemp+11,postinc1
 12829  018B28  0EBF               	movlw	low STR_66
 12830  018B2A  6EE6               	movwf	postinc1,c
 12831  018B2C  0EFF               	movlw	high STR_66
 12832  018B2E  6EE6               	movwf	postinc1,c
 12833  018B30  0E01               	movlw	1
 12834  018B32  6EE6               	movwf	postinc1,c
 12835  018B34  0E01               	movlw	1
 12836  018B36  6EE6               	movwf	postinc1,c
 12837  018B38  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 12838  018B3C  0060  F007  FFE6   	movff	btemp,postinc1
 12839  018B42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12840  018B48  0E06               	movlw	6
 12841  018B4A  6EE6               	movwf	postinc1,c
 12842  018B4C  EC46  F0D5         	call	_sprintf	;wreg free
 12843                           
 12844                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 12845  018B50  0101               	movlb	1	; () banked
 12846  018B52  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 12847  018B54  32E8               	rrcf	wreg,f,c
 12848  018B56  32E8               	rrcf	wreg,f,c
 12849  018B58  0B03               	andlw	3
 12850  018B5A  0D24               	mullw	36
 12851  018B5C  0EB3               	movlw	low _T
 12852  018B5E  6E0B               	movwf	(btemp+10)^0,c
 12853  018B60  0EF9               	movlw	high _T
 12854  018B62  6E0C               	movwf	(btemp+11)^0,c
 12855  018B64  50F3               	movf	243,w,c
 12856  018B66  260B               	addwf	(btemp+10)^0,f,c
 12857  018B68  50F4               	movf	244,w,c
 12858  018B6A  220C               	addwfc	(btemp+11)^0,f,c
 12859  018B6C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12860  018B72  0060  F033  FFE6   	movff	btemp+11,postinc1
 12861  018B78  0EBF               	movlw	low STR_66
 12862  018B7A  6EE6               	movwf	postinc1,c
 12863  018B7C  0EFF               	movlw	high STR_66
 12864  018B7E  6EE6               	movwf	postinc1,c
 12865  018B80  0E01               	movlw	1
 12866  018B82  6EE6               	movwf	postinc1,c
 12867  018B84  0E02               	movlw	2
 12868  018B86  6EE6               	movwf	postinc1,c
 12869  018B88  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 12870  018B8C  0060  F007  FFE6   	movff	btemp,postinc1
 12871  018B92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12872  018B98  0E06               	movlw	6
 12873  018B9A  6EE6               	movwf	postinc1,c
 12874  018B9C  EC46  F0D5         	call	_sprintf	;wreg free
 12875                           
 12876                           ; BSR set to: 0
 12877                           ;mconfig.c: 61:   V.help_id++;
 12878  018BA0  EE20  F1A2         	lfsr	2,_V+155	;volatile
 12879  018BA4  38DF               	swapf	223,w,c
 12880  018BA6  6E0C               	movwf	(btemp+11)^0,c
 12881  018BA8  320C               	rrcf	(btemp+11)^0,f,c
 12882  018BAA  300C               	rrcf	(btemp+11)^0,w,c
 12883  018BAC  0B03               	andlw	3
 12884  018BAE  6E0C               	movwf	(btemp+11)^0,c
 12885  018BB0  2A0C               	incf	(btemp+11)^0,f,c
 12886  018BB2  3A0C               	swapf	(btemp+11)^0,f,c
 12887  018BB4  360C               	rlcf	(btemp+11)^0,f,c
 12888  018BB6  360C               	rlcf	(btemp+11)^0,f,c
 12889  018BB8  50DF               	movf	223,w,c
 12890  018BBA  180C               	xorwf	(btemp+11)^0,w,c
 12891  018BBC  0B3F               	andlw	-193
 12892  018BBE  180C               	xorwf	(btemp+11)^0,w,c
 12893  018BC0  6EDF               	movwf	223,c
 12894                           
 12895                           ; BSR set to: 0
 12896                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 12897  018BC2  0EB8               	movlw	184
 12898  018BC4  6EE6               	movwf	postinc1,c
 12899  018BC6  0E0B               	movlw	11
 12900  018BC8  6EE6               	movwf	postinc1,c
 12901  018BCA  0E09               	movlw	9
 12902  018BCC  6EE6               	movwf	postinc1,c
 12903  018BCE  EC56  F0E4         	call	_StartTimer	;wreg free
 12904                           
 12905                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 12906  018BD2  0EB8               	movlw	184
 12907  018BD4  6EE6               	movwf	postinc1,c
 12908  018BD6  0E0B               	movlw	11
 12909  018BD8  6EE6               	movwf	postinc1,c
 12910  018BDA  0E07               	movlw	7
 12911  018BDC  6EE6               	movwf	postinc1,c
 12912  018BDE  EC56  F0E4         	call	_StartTimer	;wreg free
 12913                           
 12914                           ;mconfig.c: 64:   mode_lamp_bright();
 12915  018BE2  EC92  F0E9         	call	_mode_lamp_bright	;wreg free
 12916                           
 12917                           ;mconfig.c: 65:   update_lcd(1);
 12918  018BE6  0E01               	movlw	1
 12919  018BE8  6EE6               	movwf	postinc1,c
 12920  018BEA  ECBE  F0D4         	call	_update_lcd	;wreg free
 12921                           
 12922                           ;mconfig.c: 67:  } else {
 12923  018BEE  D032               	goto	l1801
 12924  018BF0                     l14340:
 12925                           
 12926                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 12927  018BF0  0E09               	movlw	9
 12928  018BF2  6EE6               	movwf	postinc1,c
 12929  018BF4  ECC5  F0E6         	call	_TimerDone	;wreg free
 12930  018BF8  5001               	movf	btemp^0,w,c
 12931  018BFA  B4D8               	btfsc	status,2,c
 12932  018BFC  D02B               	goto	l1801
 12933                           
 12934                           ;mconfig.c: 69:    set_vterm(0);
 12935  018BFE  0E00               	movlw	0
 12936  018C00  6EE6               	movwf	postinc1,c
 12937  018C02  ECBB  F0E8         	call	_set_vterm	;wreg free
 12938                           
 12939                           ;mconfig.c: 70:    V.help = 0;
 12940  018C06  0101               	movlb	1	; () banked
 12941  018C08  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 12942                           
 12943                           ; BSR set to: 1
 12944                           ;mconfig.c: 71:    set_display_info(display_help());
 12945  018C0A  ECD7  F0E9         	call	_display_help	;wreg free
 12946  018C0E  5001               	movf	btemp^0,w,c
 12947  018C10  6EE6               	movwf	postinc1,c
 12948  018C12  ECCA  F0E8         	call	_set_display_info	;wreg free
 12949                           
 12950                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 12951  018C16  0060  F673  FFE6   	movff	_V+149,postinc1
 12952  018C1C  0060  F677  FFE6   	movff	_V+150,postinc1
 12953  018C22  EC03  F0E9         	call	_mode_lamp_dim	;wreg free
 12954                           
 12955                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 12956  018C26  0E0B               	movlw	11
 12957  018C28  6EE6               	movwf	postinc1,c
 12958  018C2A  ECC5  F0E6         	call	_TimerDone	;wreg free
 12959  018C2E  5001               	movf	btemp^0,w,c
 12960  018C30  B4D8               	btfsc	status,2,c
 12961  018C32  D010               	goto	l1801
 12962                           
 12963                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 12964  018C34  0101               	movlb	1	; () banked
 12965  018C36  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 12966  018C38  A4D8               	btfss	status,2,c
 12967  018C3A  D002               	goto	u13670
 12968  018C3C  0E01               	movlw	1
 12969  018C3E  D001               	goto	u13680
 12970  018C40                     u13670:
 12971  018C40  0E00               	movlw	0
 12972  018C42                     u13680:
 12973  018C42  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 12974                           
 12975                           ; BSR set to: 1
 12976                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 12977  018C44  0EDC               	movlw	220
 12978  018C46  6EE6               	movwf	postinc1,c
 12979  018C48  0E05               	movlw	5
 12980  018C4A  6EE6               	movwf	postinc1,c
 12981  018C4C  0E0B               	movlw	11
 12982  018C4E  6EE6               	movwf	postinc1,c
 12983  018C50  EC56  F0E4         	call	_StartTimer	;wreg free
 12984  018C54                     l1801:
 12985                           
 12986                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12987  018C54  52E5               	movf	postdec1,f,c
 12988  018C56  0012               	return		;funcret
 12989  018C58                     __end_of_check_help:
 12990                           	opt callstack 0
 12991                           
 12992 ;; *************** function _vterm_dump *****************
 12993 ;; Defined at:
 12994 ;;		line 121 in file "mconfig.c"
 12995 ;; Parameters:    Size  Location     Type
 12996 ;;		None
 12997 ;; Auto vars:     Size  Location     Type
 12998 ;;		None
 12999 ;; Return value:  Size  Location     Type
 13000 ;;                  1  [STACK] void 
 13001 ;; Registers used:
 13002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13003 ;; Tracked objects:
 13004 ;;		On entry : 3F/1
 13005 ;;		On exit  : 0/0
 13006 ;;		Unchanged: 0/0
 13007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13012 ;;Total ram usage:        0 bytes
 13013 ;; Hardware stack levels used:    1
 13014 ;; Hardware stack levels required when called:   27
 13015 ;; This function calls:
 13016 ;;		_WaitMs
 13017 ;;		_eaDogM_WriteStringAtPos
 13018 ;;		_get_vterm_ptr
 13019 ;;		_sprintf
 13020 ;;		_wait_lcd_done
 13021 ;; This function is called by:
 13022 ;;		_check_help
 13023 ;; This function uses a reentrant model
 13024 ;;
 13025                           
 13026                           	psect	text48
 13027  01A2CE                     __ptext48:
 13028                           	opt callstack 0
 13029  01A2CE                     _vterm_dump:
 13030                           	opt callstack 2
 13031                           
 13032                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 13033                           
 13034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13035                           ;incstack = 0
 13036  01A2CE  0E01               	movlw	1
 13037  01A2D0  6EE6               	movwf	postinc1,c
 13038  01A2D2  0E00               	movlw	0
 13039  01A2D4  6EE6               	movwf	postinc1,c
 13040  01A2D6  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 13041  01A2DA  0060  F007  FFE6   	movff	btemp,postinc1
 13042  01A2E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13043  01A2E6  0E00               	movlw	0
 13044  01A2E8  6EE6               	movwf	postinc1,c
 13045  01A2EA  0E00               	movlw	0
 13046  01A2EC  6EE6               	movwf	postinc1,c
 13047  01A2EE  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 13048  01A2F2  0060  F007  FFE6   	movff	btemp,postinc1
 13049  01A2F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13050  01A2FE  0EA4               	movlw	low STR_68
 13051  01A300  6EE6               	movwf	postinc1,c
 13052  01A302  0EFF               	movlw	high STR_68
 13053  01A304  6EE6               	movwf	postinc1,c
 13054  01A306  0E08               	movlw	low (_V+1)
 13055  01A308  6EE6               	movwf	postinc1,c
 13056  01A30A  0E01               	movlw	high (_V+1)
 13057  01A30C  6EE6               	movwf	postinc1,c
 13058  01A30E  0E08               	movlw	8
 13059  01A310  6EE6               	movwf	postinc1,c
 13060  01A312  EC46  F0D5         	call	_sprintf	;wreg free
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;mconfig.c: 124:  wait_lcd_done();
 13064  01A316  EC4A  F0E8         	call	_wait_lcd_done	;wreg free
 13065                           
 13066                           ; BSR set to: 0
 13067                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 13068  01A31A  0E08               	movlw	low (_V+1)
 13069  01A31C  6EE6               	movwf	postinc1,c
 13070  01A31E  0E01               	movlw	high (_V+1)
 13071  01A320  6EE6               	movwf	postinc1,c
 13072  01A322  0E00               	movlw	0
 13073  01A324  6EE6               	movwf	postinc1,c
 13074  01A326  0E00               	movlw	0
 13075  01A328  6EE6               	movwf	postinc1,c
 13076  01A32A  EC54  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13077                           
 13078                           ; BSR set to: 59
 13079                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 13080  01A32E  0E01               	movlw	1
 13081  01A330  6EE6               	movwf	postinc1,c
 13082  01A332  0E01               	movlw	1
 13083  01A334  6EE6               	movwf	postinc1,c
 13084  01A336  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 13085  01A33A  0060  F007  FFE6   	movff	btemp,postinc1
 13086  01A340  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13087  01A346  0E00               	movlw	0
 13088  01A348  6EE6               	movwf	postinc1,c
 13089  01A34A  0E01               	movlw	1
 13090  01A34C  6EE6               	movwf	postinc1,c
 13091  01A34E  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 13092  01A352  0060  F007  FFE6   	movff	btemp,postinc1
 13093  01A358  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13094  01A35E  0EA4               	movlw	low STR_68
 13095  01A360  6EE6               	movwf	postinc1,c
 13096  01A362  0EFF               	movlw	high STR_68
 13097  01A364  6EE6               	movwf	postinc1,c
 13098  01A366  0E08               	movlw	low (_V+1)
 13099  01A368  6EE6               	movwf	postinc1,c
 13100  01A36A  0E01               	movlw	high (_V+1)
 13101  01A36C  6EE6               	movwf	postinc1,c
 13102  01A36E  0E08               	movlw	8
 13103  01A370  6EE6               	movwf	postinc1,c
 13104  01A372  EC46  F0D5         	call	_sprintf	;wreg free
 13105                           
 13106                           ; BSR set to: 0
 13107                           ;mconfig.c: 127:  wait_lcd_done();
 13108  01A376  EC4A  F0E8         	call	_wait_lcd_done	;wreg free
 13109                           
 13110                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 13111  01A37A  0E08               	movlw	low (_V+1)
 13112  01A37C  6EE6               	movwf	postinc1,c
 13113  01A37E  0E01               	movlw	high (_V+1)
 13114  01A380  6EE6               	movwf	postinc1,c
 13115  01A382  0E00               	movlw	0
 13116  01A384  6EE6               	movwf	postinc1,c
 13117  01A386  0E01               	movlw	1
 13118  01A388  6EE6               	movwf	postinc1,c
 13119  01A38A  EC54  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13120                           
 13121                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 13122  01A38E  0E01               	movlw	1
 13123  01A390  6EE6               	movwf	postinc1,c
 13124  01A392  0E02               	movlw	2
 13125  01A394  6EE6               	movwf	postinc1,c
 13126  01A396  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 13127  01A39A  0060  F007  FFE6   	movff	btemp,postinc1
 13128  01A3A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13129  01A3A6  0E00               	movlw	0
 13130  01A3A8  6EE6               	movwf	postinc1,c
 13131  01A3AA  0E02               	movlw	2
 13132  01A3AC  6EE6               	movwf	postinc1,c
 13133  01A3AE  EC43  F0E6         	call	_get_vterm_ptr	;wreg free
 13134  01A3B2  0060  F007  FFE6   	movff	btemp,postinc1
 13135  01A3B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13136  01A3BE  0EA4               	movlw	low STR_68
 13137  01A3C0  6EE6               	movwf	postinc1,c
 13138  01A3C2  0EFF               	movlw	high STR_68
 13139  01A3C4  6EE6               	movwf	postinc1,c
 13140  01A3C6  0E08               	movlw	low (_V+1)
 13141  01A3C8  6EE6               	movwf	postinc1,c
 13142  01A3CA  0E01               	movlw	high (_V+1)
 13143  01A3CC  6EE6               	movwf	postinc1,c
 13144  01A3CE  0E08               	movlw	8
 13145  01A3D0  6EE6               	movwf	postinc1,c
 13146  01A3D2  EC46  F0D5         	call	_sprintf	;wreg free
 13147                           
 13148                           ; BSR set to: 0
 13149                           ;mconfig.c: 130:  wait_lcd_done();
 13150  01A3D6  EC4A  F0E8         	call	_wait_lcd_done	;wreg free
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 13154  01A3DA  0E08               	movlw	low (_V+1)
 13155  01A3DC  6EE6               	movwf	postinc1,c
 13156  01A3DE  0E01               	movlw	high (_V+1)
 13157  01A3E0  6EE6               	movwf	postinc1,c
 13158  01A3E2  0E00               	movlw	0
 13159  01A3E4  6EE6               	movwf	postinc1,c
 13160  01A3E6  0E02               	movlw	2
 13161  01A3E8  6EE6               	movwf	postinc1,c
 13162  01A3EA  EC54  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13163                           
 13164                           ; BSR set to: 59
 13165                           ;mconfig.c: 132:  WaitMs(3000);
 13166  01A3EE  0EB8               	movlw	184
 13167  01A3F0  6EE6               	movwf	postinc1,c
 13168  01A3F2  0E0B               	movlw	11
 13169  01A3F4  6EE6               	movwf	postinc1,c
 13170  01A3F6  EC47  F0E5         	call	_WaitMs	;wreg free
 13171                           
 13172                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 13173  01A3FA  0012               	return		;funcret
 13174  01A3FC                     __end_of_vterm_dump:
 13175                           	opt callstack 0
 13176                           
 13177 ;; *************** function _sprintf *****************
 13178 ;; Defined at:
 13179 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 13180 ;; Parameters:    Size  Location     Type
 13181 ;;  s               2  [STACK] PTR unsigned char 
 13182 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 13183 ;;  fmt             2  [STACK] PTR const unsigned char 
 13184 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 13185 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 13186 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 13187 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 13188 ;;		 -> STR_64(19), STR_59(21), STR_58(21), STR_57(21), 
 13189 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 13190 ;;		 -> STR_52(21), STR_51(21), STR_50(20), STR_49(20), 
 13191 ;;		 -> STR_48(21), STR_47(21), STR_46(21), STR_45(22), 
 13192 ;;		 -> STR_44(22), STR_43(22), STR_42(23), STR_41(23), 
 13193 ;;		 -> STR_40(23), STR_39(29), STR_38(23), STR_37(23), 
 13194 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 13195 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 13196 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 13197 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(26), 
 13198 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 13199 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 13200 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 13201 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 13202 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 13203 ;; Auto vars:     Size  Location     Type
 13204 ;;  f               6  [STACK] struct _IO_FILE
 13205 ;;  ap              2  [STACK] PTR void [1]
 13206 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13207 ;;  ret             2    0        int 
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  2  [STACK] int 
 13210 ;; Registers used:
 13211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/2
 13214 ;;		On exit  : 3F/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13221 ;;Total ram usage:        0 bytes
 13222 ;; Hardware stack levels used:    1
 13223 ;; Hardware stack levels required when called:   23
 13224 ;; This function calls:
 13225 ;;		_vfprintf
 13226 ;; This function is called by:
 13227 ;;		_main
 13228 ;;		_current_sensor_cal
 13229 ;;		_check_help
 13230 ;;		_vterm_dump
 13231 ;;		_calc_bsoc
 13232 ;; This function uses a reentrant model
 13233 ;;
 13234                           
 13235                           	psect	text49
 13236  01AA8C                     __ptext49:
 13237                           	opt callstack 0
 13238  01AA8C                     _sprintf:
 13239                           	opt callstack 0
 13240                           
 13241                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13242  01AA8C  0E08               	movlw	8
 13243  01AA8E  26E1               	addwf	fsr1l,f,c
 13244  01AA90  0E00               	movlw	0
 13245  01AA92  22E2               	addwfc	fsr1h,f,c
 13246                           
 13247                           ;incstack = 0
 13248 ;; hardware stack exceeded
 13249  01AA94  0EFE               	movlw	254
 13250  01AA96  6E0B               	movwf	(btemp+10)^0,c
 13251  01AA98  0EFF               	movlw	255
 13252  01AA9A  6E0C               	movwf	(btemp+11)^0,c
 13253                           
 13254                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 13255  01AA9C  0EF5               	movlw	245
 13256  01AA9E  24E1               	addwf	fsr1l,w,c
 13257  01AAA0  6E09               	movwf	(btemp+8)^0,c
 13258  01AAA2  0EFF               	movlw	255
 13259  01AAA4  20E2               	addwfc	fsr1h,w,c
 13260  01AAA6  6E0A               	movwf	(btemp+9)^0,c
 13261  01AAA8  500B               	movf	(btemp+10)^0,w,c
 13262  01AAAA  2609               	addwf	(btemp+8)^0,f,c
 13263  01AAAC  500C               	movf	(btemp+11)^0,w,c
 13264  01AAAE  220A               	addwfc	(btemp+9)^0,f,c
 13265                           
 13266                           ;stkvar	_ap @ sp[(-8)+6]
 13267  01AAB0  0EFF               	movlw	-1
 13268  01AAB2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13269  01AAB8  0EFE               	movlw	-2
 13270  01AABA  0060  F027  FFE3   	movff	btemp+8,plusw1
 13271                           
 13272                           ;stkvar	_s @ sp[(-8)+-3]
 13273  01AAC0  0EF5               	movlw	-11
 13274  01AAC2  006F FF8C  F00B    	movff	plusw1,btemp+10
 13275  01AAC8  0EF6               	movlw	-10
 13276  01AACA  006F FF8C  F00C    	movff	plusw1,btemp+11
 13277                           
 13278                           ;stkvar	_f @ sp[(-8)+0]
 13279  01AAD0  0EF9               	movlw	-7
 13280  01AAD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13281  01AAD8  0EF8               	movlw	-8
 13282  01AADA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13283                           
 13284                           ;stkvar	_f @ sp[(-8)+0]
 13285  01AAE0  0EFA               	movlw	250
 13286  01AAE2  24E1               	addwf	fsr1l,w,c
 13287  01AAE4  6ED9               	movwf	fsr2l,c
 13288  01AAE6  0EFF               	movlw	255
 13289  01AAE8  20E2               	addwfc	fsr1h,w,c
 13290  01AAEA  6EDA               	movwf	fsr2h,c
 13291  01AAEC  0E00               	movlw	0
 13292  01AAEE  6EDE               	movwf	postinc2,c
 13293  01AAF0  0E00               	movlw	0
 13294  01AAF2  6EDD               	movwf	postdec2,c
 13295                           
 13296                           ;stkvar	_f @ sp[(-8)+0]
 13297  01AAF4  0EFC               	movlw	252
 13298  01AAF6  24E1               	addwf	fsr1l,w,c
 13299  01AAF8  6ED9               	movwf	fsr2l,c
 13300  01AAFA  0EFF               	movlw	255
 13301  01AAFC  20E2               	addwfc	fsr1h,w,c
 13302  01AAFE  6EDA               	movwf	fsr2h,c
 13303  01AB00  0E00               	movlw	0
 13304  01AB02  6EDE               	movwf	postinc2,c
 13305  01AB04  0E00               	movlw	0
 13306  01AB06  6EDD               	movwf	postdec2,c
 13307                           
 13308                           ;stkvar	_ap @ sp[(-8)+6]
 13309  01AB08  0EFE               	movlw	254
 13310  01AB0A  24E1               	addwf	fsr1l,w,c
 13311  01AB0C  6E01               	movwf	btemp^0,c
 13312  01AB0E  0EFF               	movlw	255
 13313  01AB10  20E2               	addwfc	fsr1h,w,c
 13314  01AB12  6E02               	movwf	(btemp+1)^0,c
 13315  01AB14  0060  F007  FFE6   	movff	btemp,postinc1
 13316  01AB1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13317                           
 13318                           ;stkvar	_fmt @ sp[(-10)+-5]
 13319  01AB20  0EF1               	movlw	-15
 13320  01AB22  006F FF8F FFE6     	movff	plusw1,postinc1
 13321  01AB28  006F FF8F FFE6     	movff	plusw1,postinc1
 13322                           
 13323                           ;stkvar	_f @ sp[(-12)+0]
 13324  01AB2E  0EF4               	movlw	244
 13325  01AB30  24E1               	addwf	fsr1l,w,c
 13326  01AB32  6E01               	movwf	btemp^0,c
 13327  01AB34  0EFF               	movlw	255
 13328  01AB36  20E2               	addwfc	fsr1h,w,c
 13329  01AB38  6E02               	movwf	(btemp+1)^0,c
 13330  01AB3A  0060  F007  FFE6   	movff	btemp,postinc1
 13331  01AB40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13332  01AB46  ECA9  F0DA         	call	_vfprintf	;wreg free
 13333                           
 13334                           ; BSR set to: 0
 13335                           ;stkvar	_f @ sp[(-8)+0]
 13336  01AB4A  0EFA               	movlw	250
 13337  01AB4C  24E1               	addwf	fsr1l,w,c
 13338  01AB4E  6ED9               	movwf	fsr2l,c
 13339  01AB50  0EFF               	movlw	255
 13340  01AB52  20E2               	addwfc	fsr1h,w,c
 13341  01AB54  6EDA               	movwf	fsr2h,c
 13342  01AB56  006F FF78  F00B    	movff	postinc2,btemp+10
 13343  01AB5C  006F FF74  F00C    	movff	postdec2,btemp+11
 13344                           
 13345                           ;stkvar	_s @ sp[(-8)+-3]
 13346  01AB62  0EF5               	movlw	-11
 13347  01AB64  006F FF8C  F009    	movff	plusw1,btemp+8
 13348  01AB6A  0EF6               	movlw	-10
 13349  01AB6C  006F FF8C  F00A    	movff	plusw1,btemp+9
 13350  01AB72  500B               	movf	(btemp+10)^0,w,c
 13351  01AB74  2409               	addwf	(btemp+8)^0,w,c
 13352  01AB76  6ED9               	movwf	fsr2l,c
 13353  01AB78  500C               	movf	(btemp+11)^0,w,c
 13354  01AB7A  200A               	addwfc	(btemp+9)^0,w,c
 13355  01AB7C  6EDA               	movwf	fsr2h,c
 13356  01AB7E  0E00               	movlw	0
 13357  01AB80  6EDF               	movwf	indf2,c
 13358                           
 13359                           ; BSR set to: 0
 13360                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 13361  01AB82  0EF8               	movlw	248
 13362  01AB84  26E1               	addwf	fsr1l,f,c
 13363  01AB86  0EFF               	movlw	255
 13364  01AB88  22E2               	addwfc	fsr1h,f,c
 13365  01AB8A  52E5               	movf	postdec1,f,c
 13366  01AB8C  50E7               	movf	indf1,w,c
 13367  01AB8E  5EE1               	subwf	fsr1l,f,c
 13368  01AB90  0E00               	movlw	0
 13369  01AB92  5AE2               	subwfb	fsr1h,f,c
 13370  01AB94  0012               	return		;funcret
 13371  01AB96                     __end_of_sprintf:
 13372                           	opt callstack 0
 13373                           
 13374 ;; *************** function _get_vterm_ptr *****************
 13375 ;; Defined at:
 13376 ;;		line 116 in file "mconfig.c"
 13377 ;; Parameters:    Size  Location     Type
 13378 ;;  line            1  [STACK] const unsigned char 
 13379 ;;  vterm           1  [STACK] const unsigned char 
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;		None
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  2  [STACK] PTR unsigned char 
 13384 ;; Registers used:
 13385 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/2
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13395 ;;Total ram usage:        0 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:   15
 13398 ;; This function calls:
 13399 ;;		Nothing
 13400 ;; This function is called by:
 13401 ;;		_main
 13402 ;;		_current_sensor_cal
 13403 ;;		_check_help
 13404 ;;		_vterm_dump
 13405 ;; This function uses a reentrant model
 13406 ;;
 13407                           
 13408                           	psect	text50
 13409  01CC86                     __ptext50:
 13410                           	opt callstack 0
 13411  01CC86                     _get_vterm_ptr:
 13412                           	opt callstack 15
 13413                           
 13414                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 13415                           ;stkvar	_vterm @ sp[(0)+-2]
 13416                           
 13417                           ; BSR set to: 0
 13418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13419                           ;incstack = 0
 13420  01CC86  0EFE               	movlw	-2
 13421  01CC88  50E3               	movf	plusw1,w,c
 13422  01CC8A  0B03               	andlw	3
 13423  01CC8C  0D78               	mullw	120
 13424  01CC8E  0E2A               	movlw	low _D
 13425  01CC90  6E01               	movwf	btemp^0,c
 13426  01CC92  0E09               	movlw	high _D
 13427  01CC94  6E02               	movwf	(btemp+1)^0,c
 13428  01CC96  50F3               	movf	243,w,c
 13429  01CC98  2601               	addwf	btemp^0,f,c
 13430  01CC9A  50F4               	movf	244,w,c
 13431  01CC9C  2202               	addwfc	(btemp+1)^0,f,c
 13432                           
 13433                           ;stkvar	_line @ sp[(0)+-1]
 13434  01CC9E  0EFF               	movlw	-1
 13435  01CCA0  50E3               	movf	plusw1,w,c
 13436  01CCA2  0B03               	andlw	3
 13437  01CCA4  0D28               	mullw	40
 13438  01CCA6  50F3               	movf	243,w,c
 13439  01CCA8  2601               	addwf	btemp^0,f,c
 13440  01CCAA  50F4               	movf	244,w,c
 13441  01CCAC  2202               	addwfc	(btemp+1)^0,f,c
 13442                           
 13443                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 13444  01CCAE  52E5               	movf	postdec1,f,c
 13445  01CCB0  52E5               	movf	postdec1,f,c
 13446  01CCB2  0012               	return		;funcret
 13447  01CCB4                     __end_of_get_vterm_ptr:
 13448                           	opt callstack 0
 13449                           
 13450 ;; *************** function _WaitMs *****************
 13451 ;; Defined at:
 13452 ;;		line 32 in file "timers.c"
 13453 ;; Parameters:    Size  Location     Type
 13454 ;;  numMilliseco    2  [STACK] const unsigned short 
 13455 ;; Auto vars:     Size  Location     Type
 13456 ;;		None
 13457 ;; Return value:  Size  Location     Type
 13458 ;;                  1  [STACK] void 
 13459 ;; Registers used:
 13460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13461 ;; Tracked objects:
 13462 ;;		On entry : 0/1
 13463 ;;		On exit  : 0/0
 13464 ;;		Unchanged: 0/0
 13465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13470 ;;Total ram usage:        0 bytes
 13471 ;; Hardware stack levels used:    1
 13472 ;; Hardware stack levels required when called:   16
 13473 ;; This function calls:
 13474 ;;		_StartTimer
 13475 ;;		_TimerDone
 13476 ;; This function is called by:
 13477 ;;		_main
 13478 ;;		_current_sensor_cal
 13479 ;;		_vterm_dump
 13480 ;; This function uses a reentrant model
 13481 ;;
 13482                           
 13483                           	psect	text51
 13484  01CA8E                     __ptext51:
 13485                           	opt callstack 0
 13486  01CA8E                     _WaitMs:
 13487                           	opt callstack 13
 13488                           
 13489                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 13490                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 13491                           
 13492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13493                           ;incstack = 0
 13494  01CA8E  0EFE               	movlw	-2
 13495  01CA90  006F FF8F FFE6     	movff	plusw1,postinc1
 13496  01CA96  006F FF8F FFE6     	movff	plusw1,postinc1
 13497  01CA9C  0E00               	movlw	0
 13498  01CA9E  6EE6               	movwf	postinc1,c
 13499  01CAA0  EC56  F0E4         	call	_StartTimer	;wreg free
 13500                           
 13501                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13502  01CAA4  D005               	goto	l10718
 13503  01CAA6                     l1732:
 13504                           
 13505                           ;timers.c: 36:   __nop();
 13506  01CAA6  F000               	nop	
 13507                           
 13508                           ;timers.c: 37:   __nop();
 13509  01CAA8  F000               	nop	
 13510                           
 13511                           ;timers.c: 38:   __nop();
 13512  01CAAA  F000               	nop	
 13513                           
 13514                           ;timers.c: 39:   __nop();
 13515  01CAAC  F000               	nop	
 13516  01CAAE  0004               	clrwdt		;# 
 13517  01CAB0                     l10718:
 13518                           
 13519                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13520  01CAB0  0E00               	movlw	0
 13521  01CAB2  6EE6               	movwf	postinc1,c
 13522  01CAB4  ECC5  F0E6         	call	_TimerDone	;wreg free
 13523  01CAB8  5001               	movf	btemp^0,w,c
 13524  01CABA  B4D8               	btfsc	status,2,c
 13525  01CABC  D7F4               	goto	l1732
 13526                           
 13527                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 13528  01CABE  52E5               	movf	postdec1,f,c
 13529  01CAC0  52E5               	movf	postdec1,f,c
 13530  01CAC2  0012               	return		;funcret
 13531  01CAC4                     __end_of_WaitMs:
 13532                           	opt callstack 0
 13533                           
 13534 ;; *************** function _update_lcd *****************
 13535 ;; Defined at:
 13536 ;;		line 85 in file "mconfig.c"
 13537 ;; Parameters:    Size  Location     Type
 13538 ;;  vterm           1  [STACK] unsigned char 
 13539 ;; Auto vars:     Size  Location     Type
 13540 ;;		None
 13541 ;; Return value:  Size  Location     Type
 13542 ;;                  1  [STACK] unsigned char 
 13543 ;; Registers used:
 13544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13545 ;; Tracked objects:
 13546 ;;		On entry : 0/0
 13547 ;;		On exit  : 0/0
 13548 ;;		Unchanged: 0/0
 13549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13554 ;;Total ram usage:        0 bytes
 13555 ;; Hardware stack levels used:    1
 13556 ;; Hardware stack levels required when called:   27
 13557 ;; This function calls:
 13558 ;;		_eaDogM_WriteStringAtPos
 13559 ;;		_wait_lcd_done
 13560 ;; This function is called by:
 13561 ;;		_main
 13562 ;;		_current_sensor_cal
 13563 ;;		_check_help
 13564 ;; This function uses a reentrant model
 13565 ;;
 13566                           
 13567                           	psect	text52
 13568  01A97C                     __ptext52:
 13569                           	opt callstack 0
 13570  01A97C                     _update_lcd:
 13571                           	opt callstack 3
 13572                           
 13573                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 13574                           ;stkvar	_vterm @ sp[(0)+-1]
 13575                           
 13576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13577                           ;incstack = 0
 13578  01A97C  0EFF               	movlw	-1
 13579  01A97E  006F FF8C  F001    	movff	plusw1,btemp
 13580  01A984  0E03               	movlw	3
 13581  01A986  1601               	andwf	btemp^0,f,c
 13582  01A988  0EFF               	movlw	-1
 13583  01A98A  0060  F007  FFE3   	movff	btemp,plusw1
 13584                           
 13585                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 13586  01A990  EE22  F30A         	lfsr	2,_D+480
 13587  01A994  A0DF               	btfss	indf2,0,c
 13588  01A996  D004               	goto	l13972
 13589                           
 13590                           ;stkvar	_vterm @ sp[(0)+-1]
 13591  01A998  0EFF               	movlw	-1
 13592  01A99A  50E3               	movf	plusw1,w,c
 13593  01A99C  B4D8               	btfsc	status,2,c
 13594  01A99E  D074               	goto	l1808
 13595  01A9A0                     l13972:
 13596                           
 13597                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 13598                           ;stkvar	_vterm @ sp[(0)+-1]
 13599  01A9A0  0EFF               	movlw	-1
 13600  01A9A2  50E3               	movf	plusw1,w,c
 13601  01A9A4  0D78               	mullw	120
 13602  01A9A6  0E3E               	movlw	low (_D+20)
 13603  01A9A8  24F3               	addwf	243,w,c
 13604  01A9AA  6ED9               	movwf	fsr2l,c
 13605  01A9AC  0E09               	movlw	high (_D+20)
 13606  01A9AE  20F4               	addwfc	prodh,w,c
 13607  01A9B0  6EDA               	movwf	fsr2h,c
 13608  01A9B2  0E00               	movlw	0
 13609  01A9B4  6EDF               	movwf	indf2,c
 13610                           
 13611                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 13612                           ;stkvar	_vterm @ sp[(0)+-1]
 13613  01A9B6  0EFF               	movlw	-1
 13614  01A9B8  50E3               	movf	plusw1,w,c
 13615  01A9BA  0D78               	mullw	120
 13616  01A9BC  0E66               	movlw	low (_D+60)
 13617  01A9BE  24F3               	addwf	243,w,c
 13618  01A9C0  6ED9               	movwf	fsr2l,c
 13619  01A9C2  0E09               	movlw	high (_D+60)
 13620  01A9C4  20F4               	addwfc	prodh,w,c
 13621  01A9C6  6EDA               	movwf	fsr2h,c
 13622  01A9C8  0E00               	movlw	0
 13623  01A9CA  6EDF               	movwf	indf2,c
 13624                           
 13625                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 13626                           ;stkvar	_vterm @ sp[(0)+-1]
 13627  01A9CC  0EFF               	movlw	-1
 13628  01A9CE  50E3               	movf	plusw1,w,c
 13629  01A9D0  0D78               	mullw	120
 13630  01A9D2  0E8E               	movlw	low (_D+100)
 13631  01A9D4  24F3               	addwf	243,w,c
 13632  01A9D6  6ED9               	movwf	fsr2l,c
 13633  01A9D8  0E09               	movlw	high (_D+100)
 13634  01A9DA  20F4               	addwfc	prodh,w,c
 13635  01A9DC  6EDA               	movwf	fsr2h,c
 13636  01A9DE  0E00               	movlw	0
 13637  01A9E0  6EDF               	movwf	indf2,c
 13638                           
 13639                           ;mconfig.c: 95:  wait_lcd_done();
 13640  01A9E2  EC4A  F0E8         	call	_wait_lcd_done	;wreg free
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 13644                           ;stkvar	_vterm @ sp[(0)+-1]
 13645  01A9E6  0EFF               	movlw	-1
 13646  01A9E8  50E3               	movf	plusw1,w,c
 13647  01A9EA  0D78               	mullw	120
 13648  01A9EC  0E2A               	movlw	low _D
 13649  01A9EE  6E0B               	movwf	(btemp+10)^0,c
 13650  01A9F0  0E09               	movlw	high _D
 13651  01A9F2  6E0C               	movwf	(btemp+11)^0,c
 13652  01A9F4  50F3               	movf	243,w,c
 13653  01A9F6  260B               	addwf	(btemp+10)^0,f,c
 13654  01A9F8  50F4               	movf	244,w,c
 13655  01A9FA  220C               	addwfc	(btemp+11)^0,f,c
 13656  01A9FC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13657  01AA02  0060  F033  FFE6   	movff	btemp+11,postinc1
 13658  01AA08  0E00               	movlw	0
 13659  01AA0A  6EE6               	movwf	postinc1,c
 13660  01AA0C  0E00               	movlw	0
 13661  01AA0E  6EE6               	movwf	postinc1,c
 13662  01AA10  EC54  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13663                           
 13664                           ; BSR set to: 59
 13665                           ;mconfig.c: 97:  wait_lcd_done();
 13666  01AA14  EC4A  F0E8         	call	_wait_lcd_done	;wreg free
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 13670                           ;stkvar	_vterm @ sp[(0)+-1]
 13671  01AA18  0EFF               	movlw	-1
 13672  01AA1A  50E3               	movf	plusw1,w,c
 13673  01AA1C  0D78               	mullw	120
 13674  01AA1E  0E2A               	movlw	low _D
 13675  01AA20  6E0B               	movwf	(btemp+10)^0,c
 13676  01AA22  0E09               	movlw	high _D
 13677  01AA24  6E0C               	movwf	(btemp+11)^0,c
 13678  01AA26  0E28               	movlw	40
 13679  01AA28  260B               	addwf	(btemp+10)^0,f,c
 13680  01AA2A  0E00               	movlw	0
 13681  01AA2C  220C               	addwfc	(btemp+11)^0,f,c
 13682  01AA2E  50F3               	movf	243,w,c
 13683  01AA30  260B               	addwf	(btemp+10)^0,f,c
 13684  01AA32  50F4               	movf	244,w,c
 13685  01AA34  220C               	addwfc	(btemp+11)^0,f,c
 13686  01AA36  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13687  01AA3C  0060  F033  FFE6   	movff	btemp+11,postinc1
 13688  01AA42  0E00               	movlw	0
 13689  01AA44  6EE6               	movwf	postinc1,c
 13690  01AA46  0E01               	movlw	1
 13691  01AA48  6EE6               	movwf	postinc1,c
 13692  01AA4A  EC54  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13693                           
 13694                           ; BSR set to: 59
 13695                           ;mconfig.c: 99:  wait_lcd_done();
 13696  01AA4E  EC4A  F0E8         	call	_wait_lcd_done	;wreg free
 13697                           
 13698                           ; BSR set to: 0
 13699                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 13700                           ;stkvar	_vterm @ sp[(0)+-1]
 13701  01AA52  0EFF               	movlw	-1
 13702  01AA54  50E3               	movf	plusw1,w,c
 13703  01AA56  0D78               	mullw	120
 13704  01AA58  0E2A               	movlw	low _D
 13705  01AA5A  6E0B               	movwf	(btemp+10)^0,c
 13706  01AA5C  0E09               	movlw	high _D
 13707  01AA5E  6E0C               	movwf	(btemp+11)^0,c
 13708  01AA60  0E50               	movlw	80
 13709  01AA62  260B               	addwf	(btemp+10)^0,f,c
 13710  01AA64  0E00               	movlw	0
 13711  01AA66  220C               	addwfc	(btemp+11)^0,f,c
 13712  01AA68  50F3               	movf	243,w,c
 13713  01AA6A  260B               	addwf	(btemp+10)^0,f,c
 13714  01AA6C  50F4               	movf	244,w,c
 13715  01AA6E  220C               	addwfc	(btemp+11)^0,f,c
 13716  01AA70  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13717  01AA76  0060  F033  FFE6   	movff	btemp+11,postinc1
 13718  01AA7C  0E00               	movlw	0
 13719  01AA7E  6EE6               	movwf	postinc1,c
 13720  01AA80  0E02               	movlw	2
 13721  01AA82  6EE6               	movwf	postinc1,c
 13722  01AA84  EC54  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13723  01AA88                     l1808:
 13724                           
 13725                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 13726  01AA88  52E5               	movf	postdec1,f,c
 13727  01AA8A  0012               	return		;funcret
 13728  01AA8C                     __end_of_update_lcd:
 13729                           	opt callstack 0
 13730                           
 13731 ;; *************** function _eaDogM_WriteStringAtPos *****************
 13732 ;; Defined at:
 13733 ;;		line 195 in file "eadog.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;  r               1  [STACK] const unsigned char 
 13736 ;;  c               1  [STACK] const unsigned char 
 13737 ;;  strPtr          2  [STACK] PTR unsigned char 
 13738 ;;		 -> D.lcd(480), D(482), V(192), 
 13739 ;; Auto vars:     Size  Location     Type
 13740 ;;  row             1  [STACK] unsigned char 
 13741 ;; Return value:  Size  Location     Type
 13742 ;;                  1  [STACK] void 
 13743 ;; Registers used:
 13744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13745 ;; Tracked objects:
 13746 ;;		On entry : 3F/0
 13747 ;;		On exit  : 3F/3B
 13748 ;;		Unchanged: 0/0
 13749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13754 ;;Total ram usage:        0 bytes
 13755 ;; Hardware stack levels used:    1
 13756 ;; Hardware stack levels required when called:   26
 13757 ;; This function calls:
 13758 ;;		_eaDogM_WriteString
 13759 ;;		_send_lcd_cmd_dma
 13760 ;;		_send_lcd_data_dma
 13761 ;;		_wait_lcd_done
 13762 ;;		_wdtdelay
 13763 ;; This function is called by:
 13764 ;;		_update_lcd
 13765 ;;		_vterm_dump
 13766 ;; This function uses a reentrant model
 13767 ;;
 13768                           
 13769                           	psect	text53
 13770  01B6A8                     __ptext53:
 13771                           	opt callstack 0
 13772  01B6A8                     _eaDogM_WriteStringAtPos:
 13773                           	opt callstack 0
 13774                           
 13775                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13776  01B6A8  52E6               	movf	postinc1,f,c
 13777                           
 13778                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 13779                           
 13780                           ;incstack = 0
 13781  01B6AA  D014               	goto	l13948
 13782  01B6AC                     l13936:
 13783                           
 13784                           ;eadog.c: 201:   row = 0x40;
 13785                           ;stkvar	_row @ sp[(-1)+0]
 13786  01B6AC  0EFF               	movlw	-1
 13787  01B6AE  6AE3               	clrf	plusw1,c
 13788  01B6B0  8CE3               	bsf	plusw1,6,c
 13789                           
 13790                           ;eadog.c: 202:   break;
 13791  01B6B2  D026               	goto	l13950
 13792  01B6B4                     l13938:
 13793                           
 13794                           ;eadog.c: 204:   row = 0x14;
 13795                           ;stkvar	_row @ sp[(-1)+0]
 13796  01B6B4  0EFF               	movlw	-1
 13797  01B6B6  6AE3               	clrf	plusw1,c
 13798  01B6B8  84E3               	bsf	plusw1,2,c
 13799  01B6BA  88E3               	bsf	plusw1,4,c	;indir
 13800                           
 13801                           ;eadog.c: 205:   break;
 13802  01B6BC  D021               	goto	l13950
 13803  01B6BE                     l13940:
 13804                           
 13805                           ;eadog.c: 207:   row = 0x54;
 13806  01B6BE  0E54               	movlw	84
 13807  01B6C0  6E0C               	movwf	(btemp+11)^0,c
 13808                           
 13809                           ;stkvar	_row @ sp[(-1)+0]
 13810  01B6C2  0EFF               	movlw	-1
 13811  01B6C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13812                           
 13813                           ;eadog.c: 208:   break;
 13814  01B6CA  D01A               	goto	l13950
 13815  01B6CC                     l13942:
 13816                           
 13817                           ;eadog.c: 210:   row = 0x1;
 13818                           ;stkvar	_row @ sp[(-1)+0]
 13819  01B6CC  0EFF               	movlw	-1
 13820  01B6CE  6AE3               	clrf	plusw1,c
 13821  01B6D0  2AE3               	incf	plusw1,f,c
 13822                           
 13823                           ;eadog.c: 211:   break;
 13824  01B6D2  D016               	goto	l13950
 13825  01B6D4                     l13948:
 13826                           
 13827                           ;stkvar	_r @ sp[(-1)+-1]
 13828  01B6D4  0EFE               	movlw	-2
 13829  01B6D6  50E3               	movf	plusw1,w,c
 13830  01B6D8  6E0B               	movwf	(btemp+10)^0,c
 13831  01B6DA  6A0C               	clrf	(btemp+11)^0,c
 13832                           
 13833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13834                           ; Switch size 1, requested type "simple"
 13835                           ; Number of cases is 1, Range of values is 0 to 0
 13836                           ; switch strategies available:
 13837                           ; Name         Instructions Cycles
 13838                           ; simple_byte            4     3 (average)
 13839                           ;	Chosen strategy is simple_byte
 13840  01B6DC  500C               	movf	(btemp+11)^0,w,c
 13841  01B6DE  0A00               	xorlw	0	; case 0
 13842  01B6E0  A4D8               	btfss	status,2,c
 13843  01B6E2  D7E4               	goto	l13936
 13844                           
 13845                           ; Switch size 1, requested type "simple"
 13846                           ; Number of cases is 4, Range of values is 0 to 3
 13847                           ; switch strategies available:
 13848                           ; Name         Instructions Cycles
 13849                           ; simple_byte           13     7 (average)
 13850                           ;	Chosen strategy is simple_byte
 13851  01B6E4  500B               	movf	(btemp+10)^0,w,c
 13852  01B6E6  0A00               	xorlw	0	; case 0
 13853  01B6E8  B4D8               	btfsc	status,2,c
 13854  01B6EA  D7E0               	goto	l13936
 13855  01B6EC  0A01               	xorlw	1	; case 1
 13856  01B6EE  B4D8               	btfsc	status,2,c
 13857  01B6F0  D7E1               	goto	l13938
 13858  01B6F2  0A03               	xorlw	3	; case 2
 13859  01B6F4  B4D8               	btfsc	status,2,c
 13860  01B6F6  D7E3               	goto	l13940
 13861  01B6F8  0A01               	xorlw	1	; case 3
 13862  01B6FA  B4D8               	btfsc	status,2,c
 13863  01B6FC  D7E7               	goto	l13942
 13864  01B6FE  D7D6               	goto	l13936
 13865  01B700                     l13950:
 13866                           
 13867                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 13868  01B700  0E45               	movlw	69
 13869  01B702  6EE6               	movwf	postinc1,c
 13870  01B704  ECAC  F0E8         	call	_send_lcd_cmd_dma	;wreg free
 13871                           
 13872                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 13873                           ;stkvar	_c @ sp[(-1)+-2]
 13874  01B708  0EFD               	movlw	-3
 13875  01B70A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13876                           
 13877                           ;stkvar	_row @ sp[(-1)+0]
 13878  01B710  0EFF               	movlw	-1
 13879  01B712  50E3               	movf	plusw1,w,c
 13880  01B714  240C               	addwf	(btemp+11)^0,w,c
 13881  01B716  6EE6               	movwf	postinc1,c
 13882  01B718  ECD8  F0E2         	call	_send_lcd_data_dma	;wreg free
 13883                           
 13884                           ; BSR set to: 59
 13885                           ;eadog.c: 218:  wait_lcd_done();
 13886  01B71C  EC4A  F0E8         	call	_wait_lcd_done	;wreg free
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;eadog.c: 219:  wdtdelay(8);
 13890  01B720  0E08               	movlw	8
 13891  01B722  6EE6               	movwf	postinc1,c
 13892  01B724  0E00               	movlw	0
 13893  01B726  6EE6               	movwf	postinc1,c
 13894  01B728  0E00               	movlw	0
 13895  01B72A  6EE6               	movwf	postinc1,c
 13896  01B72C  0E00               	movlw	0
 13897  01B72E  6EE6               	movwf	postinc1,c
 13898  01B730  ECDE  F0E1         	call	_wdtdelay	;wreg free
 13899                           
 13900                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 13901                           ;stkvar	_strPtr @ sp[(-1)+-4]
 13902  01B734  0EFB               	movlw	-5
 13903  01B736  006F FF8F FFE6     	movff	plusw1,postinc1
 13904  01B73C  006F FF8F FFE6     	movff	plusw1,postinc1
 13905  01B742  ECA8  F0DB         	call	_eaDogM_WriteString	;wreg free
 13906                           
 13907                           ; BSR set to: 59
 13908                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 13909  01B746  0EFB               	movlw	251
 13910  01B748  26E1               	addwf	fsr1l,f,c
 13911  01B74A  0EFF               	movlw	255
 13912  01B74C  22E2               	addwfc	fsr1h,f,c
 13913  01B74E  0012               	return		;funcret
 13914  01B750                     __end_of_eaDogM_WriteStringAtPos:
 13915                           	opt callstack 0
 13916                           
 13917 ;; *************** function _send_lcd_cmd_dma *****************
 13918 ;; Defined at:
 13919 ;;		line 171 in file "eadog.c"
 13920 ;; Parameters:    Size  Location     Type
 13921 ;;  strPtr          1  [STACK] const unsigned char 
 13922 ;; Auto vars:     Size  Location     Type
 13923 ;;		None
 13924 ;; Return value:  Size  Location     Type
 13925 ;;                  1  [STACK] void 
 13926 ;; Registers used:
 13927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13928 ;; Tracked objects:
 13929 ;;		On entry : 0/3D
 13930 ;;		On exit  : 3F/0
 13931 ;;		Unchanged: 0/0
 13932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13937 ;;Total ram usage:        0 bytes
 13938 ;; Hardware stack levels used:    1
 13939 ;; Hardware stack levels required when called:   25
 13940 ;; This function calls:
 13941 ;;		_send_lcd_data_dma
 13942 ;;		_wait_lcd_done
 13943 ;; This function is called by:
 13944 ;;		_eaDogM_WriteStringAtPos
 13945 ;;		_eaDogM_WriteCommand
 13946 ;; This function uses a reentrant model
 13947 ;;
 13948                           
 13949                           	psect	text54
 13950  01D158                     __ptext54:
 13951                           	opt callstack 0
 13952  01D158                     _send_lcd_cmd_dma:
 13953                           	opt callstack 3
 13954                           
 13955                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 13956                           
 13957                           ; BSR set to: 59
 13958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13959                           ;incstack = 0
 13960  01D158  0EFE               	movlw	254
 13961  01D15A  6EE6               	movwf	postinc1,c
 13962  01D15C  ECD8  F0E2         	call	_send_lcd_data_dma	;wreg free
 13963                           
 13964                           ; BSR set to: 59
 13965                           ;eadog.c: 174:  wait_lcd_done();
 13966  01D160  EC4A  F0E8         	call	_wait_lcd_done	;wreg free
 13967                           
 13968                           ; BSR set to: 0
 13969                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 13970                           ;stkvar	_strPtr @ sp[(0)+-1]
 13971  01D164  0EFF               	movlw	-1
 13972  01D166  50E3               	movf	plusw1,w,c
 13973  01D168  6EE6               	movwf	postinc1,c
 13974  01D16A  ECD8  F0E2         	call	_send_lcd_data_dma	;wreg free
 13975                           
 13976                           ;eadog.c: 176:  wait_lcd_done();
 13977  01D16E  EC4A  F0E8         	call	_wait_lcd_done	;wreg free
 13978                           
 13979                           ; BSR set to: 0
 13980                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 13981  01D172  52E5               	movf	postdec1,f,c
 13982  01D174  0012               	return		;funcret
 13983  01D176                     __end_of_send_lcd_cmd_dma:
 13984                           	opt callstack 0
 13985                           
 13986 ;; *************** function _wait_lcd_done *****************
 13987 ;; Defined at:
 13988 ;;		line 444 in file "eadog.c"
 13989 ;; Parameters:    Size  Location     Type
 13990 ;;		None
 13991 ;; Auto vars:     Size  Location     Type
 13992 ;;		None
 13993 ;; Return value:  Size  Location     Type
 13994 ;;                  1  [STACK] void 
 13995 ;; Registers used:
 13996 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 13997 ;; Tracked objects:
 13998 ;;		On entry : 0/1
 13999 ;;		On exit  : 3F/0
 14000 ;;		Unchanged: 0/0
 14001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14006 ;;Total ram usage:        0 bytes
 14007 ;; Hardware stack levels used:    1
 14008 ;; Hardware stack levels required when called:   16
 14009 ;; This function calls:
 14010 ;;		_wdtdelay
 14011 ;; This function is called by:
 14012 ;;		_main
 14013 ;;		_send_lcd_cmd_dma
 14014 ;;		_eaDogM_WriteStringAtPos
 14015 ;;		_update_lcd
 14016 ;;		_vterm_dump
 14017 ;; This function uses a reentrant model
 14018 ;;
 14019                           
 14020                           	psect	text55
 14021  01D094                     __ptext55:
 14022                           	opt callstack 0
 14023  01D094                     _wait_lcd_done:
 14024                           	opt callstack 14
 14025                           
 14026                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 14027                           
 14028                           ; BSR set to: 0
 14029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14030                           ;incstack = 0
 14031  01D094  0101               	movlb	1	; () banked
 14032  01D096  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 14033  01D098  D7FD               	goto	_wait_lcd_done
 14034  01D09A                     u9140:
 14035  01D09A  013D               	movlb	61	; () banked
 14036  01D09C  AB17               	btfss	23,5,b	;volatile
 14037  01D09E  D7FD               	goto	u9140
 14038                           
 14039                           ; BSR set to: 61
 14040                           ;eadog.c: 448:  wdtdelay(50);
 14041  01D0A0  0E32               	movlw	50
 14042  01D0A2  6EE6               	movwf	postinc1,c
 14043  01D0A4  0E00               	movlw	0
 14044  01D0A6  6EE6               	movwf	postinc1,c
 14045  01D0A8  0E00               	movlw	0
 14046  01D0AA  6EE6               	movwf	postinc1,c
 14047  01D0AC  0E00               	movlw	0
 14048  01D0AE  6EE6               	movwf	postinc1,c
 14049  01D0B0  ECDE  F0E1         	call	_wdtdelay	;wreg free
 14050                           
 14051                           ; BSR set to: 0
 14052                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 14053  01D0B4  0012               	return		;funcret
 14054  01D0B6                     __end_of_wait_lcd_done:
 14055                           	opt callstack 0
 14056                           
 14057 ;; *************** function _wdtdelay *****************
 14058 ;; Defined at:
 14059 ;;		line 23 in file "eadog.c"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;  delay           4  [STACK] const unsigned long 
 14062 ;; Auto vars:     Size  Location     Type
 14063 ;;		None
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  1  [STACK] void 
 14066 ;; Registers used:
 14067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14068 ;; Tracked objects:
 14069 ;;		On entry : 2/3D
 14070 ;;		On exit  : 3F/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14077 ;;Total ram usage:        0 bytes
 14078 ;; Hardware stack levels used:    1
 14079 ;; Hardware stack levels required when called:   15
 14080 ;; This function calls:
 14081 ;;		Nothing
 14082 ;; This function is called by:
 14083 ;;		_init_display
 14084 ;;		_send_lcd_data
 14085 ;;		_send_lcd_cmd
 14086 ;;		_send_lcd_cmd_long
 14087 ;;		_eaDogM_WriteStringAtPos
 14088 ;;		_wait_lcd_done
 14089 ;; This function uses a reentrant model
 14090 ;;
 14091                           
 14092                           	psect	text56
 14093  01C3BC                     __ptext56:
 14094                           	opt callstack 0
 14095  01C3BC                     _wdtdelay:
 14096                           	opt callstack 14
 14097                           
 14098                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 14099                           
 14100                           ; BSR set to: 0
 14101                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14102                           ;incstack = 0
 14103  01C3BC  0100               	movlb	0	; () banked
 14104  01C3BE  6B74               	clrf	wdtdelay@dcount& (0+255),b
 14105  01C3C0  6B75               	clrf	(wdtdelay@dcount+1)& (0+255),b
 14106  01C3C2  6B76               	clrf	(wdtdelay@dcount+2)& (0+255),b
 14107  01C3C4  6B77               	clrf	(wdtdelay@dcount+3)& (0+255),b
 14108  01C3C6                     l1585:
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;eadog.c: 28:   __nop();
 14112  01C3C6  F000               	nop	
 14113  01C3C8  0004               	clrwdt		;# 
 14114                           
 14115                           ;eadog.c: 30:  };
 14116  01C3CA  0E01               	movlw	1
 14117  01C3CC  0100               	movlb	0	; () banked
 14118  01C3CE  2774               	addwf	wdtdelay@dcount& (0+255),f,b
 14119  01C3D0  0E00               	movlw	0
 14120  01C3D2  2375               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 14121  01C3D4  2376               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 14122  01C3D6  2377               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 14123                           
 14124                           ; BSR set to: 0
 14125                           ;stkvar	_delay @ sp[(0)+-4]
 14126  01C3D8  0EFC               	movlw	-4
 14127  01C3DA  006F FF8C  F001    	movff	plusw1,btemp
 14128  01C3E0  5174               	movf	wdtdelay@dcount& (0+255),w,b
 14129  01C3E2  5C01               	subwf	btemp^0,w,c
 14130  01C3E4  0EFD               	movlw	-3
 14131  01C3E6  006F FF8C  F001    	movff	plusw1,btemp
 14132  01C3EC  5175               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 14133  01C3EE  5801               	subwfb	btemp^0,w,c
 14134  01C3F0  0EFE               	movlw	-2
 14135  01C3F2  006F FF8C  F001    	movff	plusw1,btemp
 14136  01C3F8  5176               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 14137  01C3FA  5801               	subwfb	btemp^0,w,c
 14138  01C3FC  0EFF               	movlw	-1
 14139  01C3FE  006F FF8C  F001    	movff	plusw1,btemp
 14140  01C404  5177               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 14141  01C406  5801               	subwfb	btemp^0,w,c
 14142  01C408  B0D8               	btfsc	status,0,c
 14143  01C40A  D7DD               	goto	l1585
 14144                           
 14145                           ; BSR set to: 0
 14146                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 14147  01C40C  52E5               	movf	postdec1,f,c
 14148  01C40E  52E5               	movf	postdec1,f,c
 14149  01C410  52E5               	movf	postdec1,f,c
 14150  01C412  52E5               	movf	postdec1,f,c
 14151  01C414  0012               	return		;funcret
 14152  01C416                     __end_of_wdtdelay:
 14153                           	opt callstack 0
 14154                           
 14155 ;; *************** function _send_lcd_data_dma *****************
 14156 ;; Defined at:
 14157 ;;		line 182 in file "eadog.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;  strPtr          1  [STACK] const unsigned char 
 14160 ;; Auto vars:     Size  Location     Type
 14161 ;;		None
 14162 ;; Return value:  Size  Location     Type
 14163 ;;                  1  [STACK] void 
 14164 ;; Registers used:
 14165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14166 ;; Tracked objects:
 14167 ;;		On entry : 0/0
 14168 ;;		On exit  : 3F/3B
 14169 ;;		Unchanged: 0/0
 14170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14175 ;;Total ram usage:        0 bytes
 14176 ;; Hardware stack levels used:    1
 14177 ;; Hardware stack levels required when called:   24
 14178 ;; This function calls:
 14179 ;;		_printf
 14180 ;;		_ringBufS_flush
 14181 ;;		_start_lcd
 14182 ;;		_wait_lcd_set
 14183 ;; This function is called by:
 14184 ;;		_send_lcd_cmd_dma
 14185 ;;		_eaDogM_WriteStringAtPos
 14186 ;; This function uses a reentrant model
 14187 ;;
 14188                           
 14189                           	psect	text57
 14190  01C5B0                     __ptext57:
 14191                           	opt callstack 0
 14192  01C5B0                     _send_lcd_data_dma:
 14193                           	opt callstack 4
 14194                           
 14195                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 14196                           
 14197                           ; BSR set to: 0
 14198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14199                           ;incstack = 0
 14200  01C5B0  ECE5  F0E9         	call	_wait_lcd_set	;wreg free
 14201                           
 14202                           ; BSR set to: 1
 14203                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 14204  01C5B4  0E00               	movlw	0
 14205  01C5B6  6EE6               	movwf	postinc1,c
 14206  01C5B8  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 14207  01C5BE  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 14208  01C5C4  EC98  F0DC         	call	_ringBufS_flush	;wreg free
 14209  01C5C8  94BC               	bcf	188,2,c	;volatile
 14210                           
 14211                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 14212  01C5CA  013B               	movlb	59	; () banked
 14213  01C5CC  9FFC               	bcf	252,7,b	;volatile
 14214                           
 14215                           ; BSR set to: 59
 14216                           ;eadog.c: 189:  DMA1SSZ = 1;
 14217  01C5CE  0E00               	movlw	0
 14218  01C5D0  6FF8               	movwf	248,b	;volatile
 14219  01C5D2  0E01               	movlw	1
 14220  01C5D4  6FF7               	movwf	247,b	;volatile
 14221                           
 14222                           ; BSR set to: 59
 14223                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 14224  01C5D6  8FFC               	bsf	252,7,b	;volatile
 14225                           
 14226                           ; BSR set to: 59
 14227                           ;eadog.c: 191:  printf("%c", strPtr);
 14228                           ;stkvar	_strPtr @ sp[(0)+-1]
 14229  01C5D8  0EFF               	movlw	-1
 14230  01C5DA  50E3               	movf	plusw1,w,c
 14231  01C5DC  6EE6               	movwf	postinc1,c
 14232  01C5DE  0E00               	movlw	0
 14233  01C5E0  6EE6               	movwf	postinc1,c
 14234  01C5E2  0EF9               	movlw	low STR_61
 14235  01C5E4  6EE6               	movwf	postinc1,c
 14236  01C5E6  0EFF               	movlw	high STR_61
 14237  01C5E8  6EE6               	movwf	postinc1,c
 14238  01C5EA  0E04               	movlw	4
 14239  01C5EC  6EE6               	movwf	postinc1,c
 14240  01C5EE  EC1F  F0E1         	call	_printf	;wreg free
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;eadog.c: 192:  start_lcd();
 14244  01C5F2  ECE8  F0E9         	call	_start_lcd	;wreg free
 14245                           
 14246                           ; BSR set to: 59
 14247                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 14248  01C5F6  52E5               	movf	postdec1,f,c
 14249  01C5F8  0012               	return		;funcret
 14250  01C5FA                     __end_of_send_lcd_data_dma:
 14251                           	opt callstack 0
 14252                           
 14253 ;; *************** function _eaDogM_WriteString *****************
 14254 ;; Defined at:
 14255 ;;		line 151 in file "eadog.c"
 14256 ;; Parameters:    Size  Location     Type
 14257 ;;  strPtr          2  [STACK] PTR unsigned char 
 14258 ;;		 -> D.lcd(480), D(482), V(192), 
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;		None
 14261 ;; Return value:  Size  Location     Type
 14262 ;;                  1  [STACK] void 
 14263 ;; Registers used:
 14264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14265 ;; Tracked objects:
 14266 ;;		On entry : 3F/0
 14267 ;;		On exit  : 3F/3B
 14268 ;;		Unchanged: 0/0
 14269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14274 ;;Total ram usage:        0 bytes
 14275 ;; Hardware stack levels used:    1
 14276 ;; Hardware stack levels required when called:   24
 14277 ;; This function calls:
 14278 ;;		_printf
 14279 ;;		_ringBufS_flush
 14280 ;;		_start_lcd
 14281 ;;		_strlen
 14282 ;;		_wait_lcd_set
 14283 ;; This function is called by:
 14284 ;;		_eaDogM_WriteStringAtPos
 14285 ;; This function uses a reentrant model
 14286 ;;
 14287                           
 14288                           	psect	text58
 14289  01B750                     __ptext58:
 14290                           	opt callstack 0
 14291  01B750                     _eaDogM_WriteString:
 14292                           	opt callstack 4
 14293                           
 14294                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 14295                           
 14296                           ; BSR set to: 59
 14297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14298                           ;incstack = 0
 14299  01B750  ECE5  F0E9         	call	_wait_lcd_set	;wreg free
 14300                           
 14301                           ; BSR set to: 1
 14302                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 14303  01B754  0E00               	movlw	0
 14304  01B756  6EE6               	movwf	postinc1,c
 14305  01B758  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 14306  01B75E  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 14307  01B764  EC98  F0DC         	call	_ringBufS_flush	;wreg free
 14308  01B768  94BC               	bcf	188,2,c	;volatile
 14309                           
 14310                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 14311                           ;stkvar	_strPtr @ sp[(0)+-2]
 14312  01B76A  0EFE               	movlw	-2
 14313  01B76C  006F FF8F FFE6     	movff	plusw1,postinc1
 14314  01B772  006F FF8F FFE6     	movff	plusw1,postinc1
 14315  01B778  ECFB  F0DB         	call	_strlen	;wreg free
 14316  01B77C  5002               	movf	(btemp+1)^0,w,c
 14317  01B77E  E104               	bnz	u13220
 14318  01B780  0E41               	movlw	65
 14319  01B782  5C01               	subwf	btemp^0,w,c
 14320  01B784  A0D8               	btfss	status,0,c
 14321  01B786  D010               	goto	l13892
 14322  01B788                     u13220:
 14323                           
 14324                           ;stkvar	_strPtr @ sp[(0)+-2]
 14325  01B788  0EFE               	movlw	-2
 14326  01B78A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14327  01B790  0EFF               	movlw	-1
 14328  01B792  006F FF8C  F00C    	movff	plusw1,btemp+11
 14329  01B798  0E40               	movlw	64
 14330  01B79A  240B               	addwf	(btemp+10)^0,w,c
 14331  01B79C  6ED9               	movwf	fsr2l,c
 14332  01B79E  0E00               	movlw	0
 14333  01B7A0  200C               	addwfc	(btemp+11)^0,w,c
 14334  01B7A2  6EDA               	movwf	fsr2h,c
 14335  01B7A4  0E00               	movlw	0
 14336  01B7A6  6EDF               	movwf	indf2,c
 14337  01B7A8                     l13892:
 14338                           
 14339                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 14340  01B7A8  013B               	movlb	59	; () banked
 14341  01B7AA  9FFC               	bcf	252,7,b	;volatile
 14342                           
 14343                           ; BSR set to: 59
 14344                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 14345                           ;stkvar	_strPtr @ sp[(0)+-2]
 14346  01B7AC  0EFE               	movlw	-2
 14347  01B7AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14348  01B7B4  006F FF8F FFE6     	movff	plusw1,postinc1
 14349  01B7BA  ECFB  F0DB         	call	_strlen	;wreg free
 14350  01B7BE  0060  F007  FBF7   	movff	btemp,15351	;volatile
 14351  01B7C4  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 14352                           
 14353                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 14354  01B7CA  013B               	movlb	59	; () banked
 14355  01B7CC  8FFC               	bsf	252,7,b	;volatile
 14356                           
 14357                           ; BSR set to: 59
 14358                           ;eadog.c: 161:  printf("%s", strPtr);
 14359                           ;stkvar	_strPtr @ sp[(0)+-2]
 14360  01B7CE  0EFE               	movlw	-2
 14361  01B7D0  006F FF8F FFE6     	movff	plusw1,postinc1
 14362  01B7D6  006F FF8F FFE6     	movff	plusw1,postinc1
 14363  01B7DC  0EFC               	movlw	low STR_60
 14364  01B7DE  6EE6               	movwf	postinc1,c
 14365  01B7E0  0EFF               	movlw	high STR_60
 14366  01B7E2  6EE6               	movwf	postinc1,c
 14367  01B7E4  0E04               	movlw	4
 14368  01B7E6  6EE6               	movwf	postinc1,c
 14369  01B7E8  EC1F  F0E1         	call	_printf	;wreg free
 14370                           
 14371                           ; BSR set to: 0
 14372                           ;eadog.c: 162:  start_lcd();
 14373  01B7EC  ECE8  F0E9         	call	_start_lcd	;wreg free
 14374                           
 14375                           ; BSR set to: 59
 14376                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 14377  01B7F0  52E5               	movf	postdec1,f,c
 14378  01B7F2  52E5               	movf	postdec1,f,c
 14379  01B7F4  0012               	return		;funcret
 14380  01B7F6                     __end_of_eaDogM_WriteString:
 14381                           	opt callstack 0
 14382                           
 14383 ;; *************** function _wait_lcd_set *****************
 14384 ;; Defined at:
 14385 ;;		line 434 in file "eadog.c"
 14386 ;; Parameters:    Size  Location     Type
 14387 ;;		None
 14388 ;; Auto vars:     Size  Location     Type
 14389 ;;		None
 14390 ;; Return value:  Size  Location     Type
 14391 ;;                  1  [STACK] void 
 14392 ;; Registers used:
 14393 ;;		None
 14394 ;; Tracked objects:
 14395 ;;		On entry : 0/0
 14396 ;;		On exit  : 3F/1
 14397 ;;		Unchanged: 0/0
 14398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14403 ;;Total ram usage:        0 bytes
 14404 ;; Hardware stack levels used:    1
 14405 ;; Hardware stack levels required when called:   15
 14406 ;; This function calls:
 14407 ;;		Nothing
 14408 ;; This function is called by:
 14409 ;;		_eaDogM_WriteString
 14410 ;;		_send_lcd_data_dma
 14411 ;; This function uses a reentrant model
 14412 ;;
 14413                           
 14414                           	psect	text59
 14415  01D3CA                     __ptext59:
 14416                           	opt callstack 0
 14417  01D3CA                     _wait_lcd_set:
 14418                           	opt callstack 12
 14419                           
 14420                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 14421                           
 14422                           ; BSR set to: 59
 14423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14424                           ;incstack = 0
 14425  01D3CA  0101               	movlb	1	; () banked
 14426  01D3CC  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 14427                           
 14428                           ; BSR set to: 1
 14429                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 14430  01D3CE  0012               	return		;funcret
 14431  01D3D0                     __end_of_wait_lcd_set:
 14432                           	opt callstack 0
 14433                           
 14434 ;; *************** function _start_lcd *****************
 14435 ;; Defined at:
 14436 ;;		line 429 in file "eadog.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;		None
 14439 ;; Auto vars:     Size  Location     Type
 14440 ;;		None
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  1  [STACK] void 
 14443 ;; Registers used:
 14444 ;;		None
 14445 ;; Tracked objects:
 14446 ;;		On entry : 3F/0
 14447 ;;		On exit  : 3F/3B
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14454 ;;Total ram usage:        0 bytes
 14455 ;; Hardware stack levels used:    1
 14456 ;; Hardware stack levels required when called:   15
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		_eaDogM_WriteString
 14461 ;;		_send_lcd_data_dma
 14462 ;; This function uses a reentrant model
 14463 ;;
 14464                           
 14465                           	psect	text60
 14466  01D3D0                     __ptext60:
 14467                           	opt callstack 0
 14468  01D3D0                     _start_lcd:
 14469                           	opt callstack 12
 14470                           
 14471                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 14472                           
 14473                           ; BSR set to: 1
 14474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14475                           ;incstack = 0
 14476  01D3D0  013B               	movlb	59	; () banked
 14477  01D3D2  8DFC               	bsf	252,6,b	;volatile
 14478                           
 14479                           ; BSR set to: 59
 14480                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 14481  01D3D4  0012               	return		;funcret
 14482  01D3D6                     __end_of_start_lcd:
 14483                           	opt callstack 0
 14484                           
 14485 ;; *************** function _ringBufS_flush *****************
 14486 ;; Defined at:
 14487 ;;		line 76 in file "ringbufs.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;  _this           2  [STACK] PTR struct ringBufS_t
 14490 ;;		 -> ring_buf1(67), 
 14491 ;;  clearBuffer     1  [STACK] const char 
 14492 ;; Auto vars:     Size  Location     Type
 14493 ;;		None
 14494 ;; Return value:  Size  Location     Type
 14495 ;;                  1  [STACK] void 
 14496 ;; Registers used:
 14497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14498 ;; Tracked objects:
 14499 ;;		On entry : 3F/1
 14500 ;;		On exit  : 0/0
 14501 ;;		Unchanged: 0/0
 14502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14507 ;;Total ram usage:        0 bytes
 14508 ;; Hardware stack levels used:    1
 14509 ;; Hardware stack levels required when called:   16
 14510 ;; This function calls:
 14511 ;;		_memset
 14512 ;; This function is called by:
 14513 ;;		_eaDogM_WriteString
 14514 ;;		_send_lcd_data_dma
 14515 ;; This function uses a reentrant model
 14516 ;;
 14517                           
 14518                           	psect	text61
 14519  01B930                     __ptext61:
 14520                           	opt callstack 0
 14521  01B930                     _ringBufS_flush:
 14522                           	opt callstack 11
 14523                           
 14524                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 14525                           ;stkvar	__this @ sp[(0)+-2]
 14526                           
 14527                           ; BSR set to: 59
 14528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14529                           ;incstack = 0
 14530  01B930  0EFE               	movlw	-2
 14531  01B932  006F FF8C  F00B    	movff	plusw1,btemp+10
 14532  01B938  0EFF               	movlw	-1
 14533  01B93A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14534  01B940  0E42               	movlw	66
 14535  01B942  240B               	addwf	(btemp+10)^0,w,c
 14536  01B944  6ED9               	movwf	fsr2l,c
 14537  01B946  0E00               	movlw	0
 14538  01B948  200C               	addwfc	(btemp+11)^0,w,c
 14539  01B94A  6EDA               	movwf	fsr2h,c
 14540  01B94C  0E00               	movlw	0
 14541  01B94E  6EDF               	movwf	indf2,c
 14542                           
 14543                           ;ringbufs.c: 79:  _this->head = 0;
 14544                           ;stkvar	__this @ sp[(0)+-2]
 14545  01B950  0EFE               	movlw	-2
 14546  01B952  006F FF8C  F00B    	movff	plusw1,btemp+10
 14547  01B958  0EFF               	movlw	-1
 14548  01B95A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14549  01B960  0E40               	movlw	64
 14550  01B962  240B               	addwf	(btemp+10)^0,w,c
 14551  01B964  6ED9               	movwf	fsr2l,c
 14552  01B966  0E00               	movlw	0
 14553  01B968  200C               	addwfc	(btemp+11)^0,w,c
 14554  01B96A  6EDA               	movwf	fsr2h,c
 14555  01B96C  0E00               	movlw	0
 14556  01B96E  6EDF               	movwf	indf2,c
 14557                           
 14558                           ;ringbufs.c: 80:  _this->tail = 0;
 14559                           ;stkvar	__this @ sp[(0)+-2]
 14560  01B970  0EFE               	movlw	-2
 14561  01B972  006F FF8C  F00B    	movff	plusw1,btemp+10
 14562  01B978  0EFF               	movlw	-1
 14563  01B97A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14564  01B980  0E41               	movlw	65
 14565  01B982  240B               	addwf	(btemp+10)^0,w,c
 14566  01B984  6ED9               	movwf	fsr2l,c
 14567  01B986  0E00               	movlw	0
 14568  01B988  200C               	addwfc	(btemp+11)^0,w,c
 14569  01B98A  6EDA               	movwf	fsr2h,c
 14570  01B98C  0E00               	movlw	0
 14571  01B98E  6EDF               	movwf	indf2,c
 14572                           
 14573                           ;ringbufs.c: 81:  if (clearBuffer) {
 14574                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 14575  01B990  0EFD               	movlw	-3
 14576  01B992  50E3               	movf	plusw1,w,c
 14577  01B994  B4D8               	btfsc	status,2,c
 14578  01B996  D011               	goto	l1717
 14579                           
 14580                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 14581  01B998  0E40               	movlw	64
 14582  01B99A  6EE6               	movwf	postinc1,c
 14583  01B99C  0E00               	movlw	0
 14584  01B99E  6EE6               	movwf	postinc1,c
 14585  01B9A0  0E00               	movlw	0
 14586  01B9A2  6EE6               	movwf	postinc1,c
 14587  01B9A4  0E00               	movlw	0
 14588  01B9A6  6EE6               	movwf	postinc1,c
 14589                           
 14590                           ;stkvar	__this @ sp[(-4)+-2]
 14591  01B9A8  0EFA               	movlw	-6
 14592  01B9AA  006F FF8F FFE6     	movff	plusw1,postinc1
 14593  01B9B0  006F FF8F FFE6     	movff	plusw1,postinc1
 14594  01B9B6  EC07  F0BA         	call	_memset	;wreg free
 14595  01B9BA                     l1717:
 14596                           
 14597                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 14598  01B9BA  52E5               	movf	postdec1,f,c
 14599  01B9BC  52E5               	movf	postdec1,f,c
 14600  01B9BE  52E5               	movf	postdec1,f,c
 14601  01B9C0  0012               	return		;funcret
 14602  01B9C2                     __end_of_ringBufS_flush:
 14603                           	opt callstack 0
 14604                           
 14605 ;; *************** function _memset *****************
 14606 ;; Defined at:
 14607 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 14608 ;; Parameters:    Size  Location     Type
 14609 ;;  dest            2  [STACK] PTR void 
 14610 ;;		 -> ring_buf2(67), ring_buf1(67), 
 14611 ;;  c               2  [STACK] int 
 14612 ;;  n               2  [STACK] unsigned int 
 14613 ;; Auto vars:     Size  Location     Type
 14614 ;;  s               2  [STACK] PTR unsigned char 
 14615 ;;		 -> ring_buf2(67), ring_buf1(67), 
 14616 ;;  k               2  [STACK] unsigned int 
 14617 ;; Return value:  Size  Location     Type
 14618 ;;                  2  [STACK] PTR void 
 14619 ;; Registers used:
 14620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14621 ;; Tracked objects:
 14622 ;;		On entry : 0/1
 14623 ;;		On exit  : 0/0
 14624 ;;		Unchanged: 0/0
 14625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14630 ;;Total ram usage:        0 bytes
 14631 ;; Hardware stack levels used:    1
 14632 ;; Hardware stack levels required when called:   15
 14633 ;; This function calls:
 14634 ;;		Nothing
 14635 ;; This function is called by:
 14636 ;;		_ringBufS_init
 14637 ;;		_ringBufS_flush
 14638 ;; This function uses a reentrant model
 14639 ;;
 14640                           
 14641                           	psect	text62
 14642  01740E                     __ptext62:
 14643                           	opt callstack 0
 14644  01740E                     _memset:
 14645                           	opt callstack 0
 14646                           
 14647                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14648  01740E  52E6               	movf	postinc1,f,c
 14649  017410  52E6               	movf	postinc1,f,c
 14650  017412  52E6               	movf	postinc1,f,c
 14651  017414  52E6               	movf	postinc1,f,c
 14652                           
 14653                           ;stkvar	_dest @ sp[(-4)+-2]
 14654                           
 14655                           ;incstack = 0
 14656  017416  0EFA               	movlw	-6
 14657  017418  006F FF8C  F00B    	movff	plusw1,btemp+10
 14658  01741E  0EFB               	movlw	-5
 14659  017420  006F FF8C  F00C    	movff	plusw1,btemp+11
 14660                           
 14661                           ;stkvar	_s @ sp[(-4)+0]
 14662  017426  0EFD               	movlw	-3
 14663  017428  0060  F033  FFE3   	movff	btemp+11,plusw1
 14664  01742E  0EFC               	movlw	-4
 14665  017430  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14666                           
 14667                           ;stkvar	_n @ sp[(-4)+-6]
 14668  017436  0EF6               	movlw	-10
 14669  017438  006F FF8C  F001    	movff	plusw1,btemp
 14670  01743E  0EF7               	movlw	-9
 14671  017440  50E3               	movf	plusw1,w,c
 14672  017442  1001               	iorwf	btemp^0,w,c
 14673  017444  B4D8               	btfsc	status,2,c
 14674  017446  D154               	goto	u11770
 14675                           
 14676                           ;stkvar	_c @ sp[(-4)+-4]
 14677                           ;stkvar	_s @ sp[(-4)+0]
 14678  017448  0EFC               	movlw	-4
 14679  01744A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14680  017450  0EFD               	movlw	-3
 14681  017452  006F FF8F FFDA     	movff	plusw1,fsr2h
 14682  017458  0EF8               	movlw	-8
 14683  01745A  006F FF8F FFDF     	movff	plusw1,indf2
 14684                           
 14685                           ;stkvar	_c @ sp[(-4)+-4]
 14686                           ;stkvar	_n @ sp[(-4)+-6]
 14687                           ;stkvar	_s @ sp[(-4)+0]
 14688  017460  0EFC               	movlw	-4
 14689  017462  006F FF8C  F00B    	movff	plusw1,btemp+10
 14690  017468  0EFD               	movlw	-3
 14691  01746A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14692  017470  0EF6               	movlw	-10
 14693  017472  50E3               	movf	plusw1,w,c
 14694  017474  260B               	addwf	(btemp+10)^0,f,c
 14695  017476  0EF7               	movlw	-9
 14696  017478  50E3               	movf	plusw1,w,c
 14697  01747A  220C               	addwfc	(btemp+11)^0,f,c
 14698  01747C  0EFF               	movlw	255
 14699  01747E  240B               	addwf	(btemp+10)^0,w,c
 14700  017480  6ED9               	movwf	fsr2l,c
 14701  017482  0EFF               	movlw	255
 14702  017484  200C               	addwfc	(btemp+11)^0,w,c
 14703  017486  6EDA               	movwf	fsr2h,c
 14704  017488  0EF8               	movlw	-8
 14705  01748A  006F FF8F FFDF     	movff	plusw1,indf2
 14706                           
 14707                           ;stkvar	_n @ sp[(-4)+-6]
 14708  017490  0EF7               	movlw	-9
 14709  017492  50E3               	movf	plusw1,w,c
 14710  017494  E108               	bnz	l13044
 14711  017496  0EF6               	movlw	-10
 14712  017498  006F FF8C  F001    	movff	plusw1,btemp
 14713  01749E  0E03               	movlw	3
 14714  0174A0  5E01               	subwf	btemp^0,f,c
 14715  0174A2  A0D8               	btfss	status,0,c
 14716  0174A4  D125               	goto	u11770
 14717  0174A6                     l13044:
 14718                           
 14719                           ;stkvar	_c @ sp[(-4)+-4]
 14720                           ;stkvar	_s @ sp[(-4)+0]
 14721  0174A6  0EFC               	movlw	-4
 14722  0174A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 14723  0174AE  0EFD               	movlw	-3
 14724  0174B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14725  0174B6  0E01               	movlw	1
 14726  0174B8  240B               	addwf	(btemp+10)^0,w,c
 14727  0174BA  6ED9               	movwf	fsr2l,c
 14728  0174BC  0E00               	movlw	0
 14729  0174BE  200C               	addwfc	(btemp+11)^0,w,c
 14730  0174C0  6EDA               	movwf	fsr2h,c
 14731  0174C2  0EF8               	movlw	-8
 14732  0174C4  006F FF8F FFDF     	movff	plusw1,indf2
 14733                           
 14734                           ;stkvar	_c @ sp[(-4)+-4]
 14735                           ;stkvar	_s @ sp[(-4)+0]
 14736  0174CA  0EFC               	movlw	-4
 14737  0174CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14738  0174D2  0EFD               	movlw	-3
 14739  0174D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14740  0174DA  0E02               	movlw	2
 14741  0174DC  240B               	addwf	(btemp+10)^0,w,c
 14742  0174DE  6ED9               	movwf	fsr2l,c
 14743  0174E0  0E00               	movlw	0
 14744  0174E2  200C               	addwfc	(btemp+11)^0,w,c
 14745  0174E4  6EDA               	movwf	fsr2h,c
 14746  0174E6  0EF8               	movlw	-8
 14747  0174E8  006F FF8F FFDF     	movff	plusw1,indf2
 14748                           
 14749                           ;stkvar	_c @ sp[(-4)+-4]
 14750                           ;stkvar	_n @ sp[(-4)+-6]
 14751                           ;stkvar	_s @ sp[(-4)+0]
 14752  0174EE  0EFC               	movlw	-4
 14753  0174F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14754  0174F6  0EFD               	movlw	-3
 14755  0174F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14756  0174FE  0EF6               	movlw	-10
 14757  017500  50E3               	movf	plusw1,w,c
 14758  017502  260B               	addwf	(btemp+10)^0,f,c
 14759  017504  0EF7               	movlw	-9
 14760  017506  50E3               	movf	plusw1,w,c
 14761  017508  220C               	addwfc	(btemp+11)^0,f,c
 14762  01750A  0EFE               	movlw	254
 14763  01750C  240B               	addwf	(btemp+10)^0,w,c
 14764  01750E  6ED9               	movwf	fsr2l,c
 14765  017510  0EFF               	movlw	255
 14766  017512  200C               	addwfc	(btemp+11)^0,w,c
 14767  017514  6EDA               	movwf	fsr2h,c
 14768  017516  0EF8               	movlw	-8
 14769  017518  006F FF8F FFDF     	movff	plusw1,indf2
 14770                           
 14771                           ;stkvar	_c @ sp[(-4)+-4]
 14772                           ;stkvar	_n @ sp[(-4)+-6]
 14773                           ;stkvar	_s @ sp[(-4)+0]
 14774  01751E  0EFC               	movlw	-4
 14775  017520  006F FF8C  F00B    	movff	plusw1,btemp+10
 14776  017526  0EFD               	movlw	-3
 14777  017528  006F FF8C  F00C    	movff	plusw1,btemp+11
 14778  01752E  0EF6               	movlw	-10
 14779  017530  50E3               	movf	plusw1,w,c
 14780  017532  260B               	addwf	(btemp+10)^0,f,c
 14781  017534  0EF7               	movlw	-9
 14782  017536  50E3               	movf	plusw1,w,c
 14783  017538  220C               	addwfc	(btemp+11)^0,f,c
 14784  01753A  0EFD               	movlw	253
 14785  01753C  240B               	addwf	(btemp+10)^0,w,c
 14786  01753E  6ED9               	movwf	fsr2l,c
 14787  017540  0EFF               	movlw	255
 14788  017542  200C               	addwfc	(btemp+11)^0,w,c
 14789  017544  6EDA               	movwf	fsr2h,c
 14790  017546  0EF8               	movlw	-8
 14791  017548  006F FF8F FFDF     	movff	plusw1,indf2
 14792                           
 14793                           ;stkvar	_n @ sp[(-4)+-6]
 14794  01754E  0EF7               	movlw	-9
 14795  017550  50E3               	movf	plusw1,w,c
 14796  017552  E108               	bnz	l13050
 14797  017554  0EF6               	movlw	-10
 14798  017556  006F FF8C  F001    	movff	plusw1,btemp
 14799  01755C  0E07               	movlw	7
 14800  01755E  5E01               	subwf	btemp^0,f,c
 14801  017560  A0D8               	btfss	status,0,c
 14802  017562  D0C6               	goto	u11770
 14803  017564                     l13050:
 14804                           
 14805                           ;stkvar	_c @ sp[(-4)+-4]
 14806                           ;stkvar	_s @ sp[(-4)+0]
 14807  017564  0EFC               	movlw	-4
 14808  017566  006F FF8C  F00B    	movff	plusw1,btemp+10
 14809  01756C  0EFD               	movlw	-3
 14810  01756E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14811  017574  0E03               	movlw	3
 14812  017576  240B               	addwf	(btemp+10)^0,w,c
 14813  017578  6ED9               	movwf	fsr2l,c
 14814  01757A  0E00               	movlw	0
 14815  01757C  200C               	addwfc	(btemp+11)^0,w,c
 14816  01757E  6EDA               	movwf	fsr2h,c
 14817  017580  0EF8               	movlw	-8
 14818  017582  006F FF8F FFDF     	movff	plusw1,indf2
 14819                           
 14820                           ;stkvar	_c @ sp[(-4)+-4]
 14821                           ;stkvar	_n @ sp[(-4)+-6]
 14822                           ;stkvar	_s @ sp[(-4)+0]
 14823  017588  0EFC               	movlw	-4
 14824  01758A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14825  017590  0EFD               	movlw	-3
 14826  017592  006F FF8C  F00C    	movff	plusw1,btemp+11
 14827  017598  0EF6               	movlw	-10
 14828  01759A  50E3               	movf	plusw1,w,c
 14829  01759C  260B               	addwf	(btemp+10)^0,f,c
 14830  01759E  0EF7               	movlw	-9
 14831  0175A0  50E3               	movf	plusw1,w,c
 14832  0175A2  220C               	addwfc	(btemp+11)^0,f,c
 14833  0175A4  0EFC               	movlw	252
 14834  0175A6  240B               	addwf	(btemp+10)^0,w,c
 14835  0175A8  6ED9               	movwf	fsr2l,c
 14836  0175AA  0EFF               	movlw	255
 14837  0175AC  200C               	addwfc	(btemp+11)^0,w,c
 14838  0175AE  6EDA               	movwf	fsr2h,c
 14839  0175B0  0EF8               	movlw	-8
 14840  0175B2  006F FF8F FFDF     	movff	plusw1,indf2
 14841                           
 14842                           ;stkvar	_n @ sp[(-4)+-6]
 14843  0175B8  0EF7               	movlw	-9
 14844  0175BA  50E3               	movf	plusw1,w,c
 14845  0175BC  E108               	bnz	l13056
 14846  0175BE  0EF6               	movlw	-10
 14847  0175C0  006F FF8C  F001    	movff	plusw1,btemp
 14848  0175C6  0E09               	movlw	9
 14849  0175C8  5E01               	subwf	btemp^0,f,c
 14850  0175CA  A0D8               	btfss	status,0,c
 14851  0175CC  D091               	goto	u11770
 14852  0175CE                     l13056:
 14853                           
 14854                           ;stkvar	_s @ sp[(-4)+0]
 14855  0175CE  0EFC               	movlw	-4
 14856  0175D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14857  0175D6  1E0B               	comf	(btemp+10)^0,f,c
 14858  0175D8  0EFD               	movlw	-3
 14859  0175DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 14860  0175E0  1E0C               	comf	(btemp+11)^0,f,c
 14861  0175E2  2A0B               	incf	(btemp+10)^0,f,c
 14862  0175E4  B4D8               	btfsc	status,2,c
 14863  0175E6  2A0C               	incf	(btemp+11)^0,f,c
 14864  0175E8  0E03               	movlw	3
 14865  0175EA  160B               	andwf	(btemp+10)^0,f,c
 14866  0175EC  0E00               	movlw	0
 14867  0175EE  160C               	andwf	(btemp+11)^0,f,c
 14868                           
 14869                           ;stkvar	_k @ sp[(-4)+2]
 14870  0175F0  0EFE               	movlw	-2
 14871  0175F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14872  0175F8  0EFF               	movlw	-1
 14873  0175FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14874                           
 14875                           ;stkvar	_k @ sp[(-4)+2]
 14876                           ;stkvar	_s @ sp[(-4)+0]
 14877  017600  0EFC               	movlw	-4
 14878  017602  50E3               	movf	plusw1,w,c
 14879  017604  6E01               	movwf	btemp^0,c
 14880  017606  0EFE               	movlw	-2
 14881  017608  50E3               	movf	plusw1,w,c
 14882  01760A  2601               	addwf	btemp^0,f,c
 14883  01760C  0EFC               	movlw	-4
 14884  01760E  0060  F007  FFE3   	movff	btemp,plusw1
 14885  017614  0EFD               	movlw	-3
 14886  017616  50E3               	movf	plusw1,w,c
 14887  017618  6E01               	movwf	btemp^0,c
 14888  01761A  0EFF               	movlw	-1
 14889  01761C  50E3               	movf	plusw1,w,c
 14890  01761E  2201               	addwfc	btemp^0,f,c
 14891  017620  0EFD               	movlw	-3
 14892  017622  0060  F007  FFE3   	movff	btemp,plusw1
 14893                           
 14894                           ;stkvar	_k @ sp[(-4)+2]
 14895                           ;stkvar	_n @ sp[(-4)+-6]
 14896  017628  0EF6               	movlw	-10
 14897  01762A  50E3               	movf	plusw1,w,c
 14898  01762C  6E01               	movwf	btemp^0,c
 14899  01762E  0EFE               	movlw	-2
 14900  017630  50E3               	movf	plusw1,w,c
 14901  017632  5E01               	subwf	btemp^0,f,c
 14902  017634  0EF6               	movlw	-10
 14903  017636  0060  F007  FFE3   	movff	btemp,plusw1
 14904  01763C  0EF7               	movlw	-9
 14905  01763E  50E3               	movf	plusw1,w,c
 14906  017640  6E01               	movwf	btemp^0,c
 14907  017642  0EFF               	movlw	-1
 14908  017644  50E3               	movf	plusw1,w,c
 14909  017646  5A01               	subwfb	btemp^0,f,c
 14910  017648  0EF7               	movlw	-9
 14911  01764A  0060  F007  FFE3   	movff	btemp,plusw1
 14912  017650  0EFC               	movlw	252
 14913  017652  6E0B               	movwf	(btemp+10)^0,c
 14914  017654  0EFF               	movlw	255
 14915  017656  6E0C               	movwf	(btemp+11)^0,c
 14916                           
 14917                           ;stkvar	_n @ sp[(-4)+-6]
 14918  017658  0EF6               	movlw	-10
 14919  01765A  006F FF8C  F001    	movff	plusw1,btemp
 14920  017660  500B               	movf	(btemp+10)^0,w,c
 14921  017662  1601               	andwf	btemp^0,f,c
 14922  017664  0EF6               	movlw	-10
 14923  017666  0060  F007  FFE3   	movff	btemp,plusw1
 14924  01766C  0EF7               	movlw	-9
 14925  01766E  006F FF8C  F001    	movff	plusw1,btemp
 14926  017674  500C               	movf	(btemp+11)^0,w,c
 14927  017676  1601               	andwf	btemp^0,f,c
 14928  017678  0EF7               	movlw	-9
 14929  01767A  D02E               	goto	L14
 14930  01767C                     l13064:
 14931                           
 14932                           ;stkvar	_c @ sp[(-4)+-4]
 14933                           ;stkvar	_s @ sp[(-4)+0]
 14934  01767C  0EFC               	movlw	-4
 14935  01767E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14936  017684  0EFD               	movlw	-3
 14937  017686  006F FF8F FFDA     	movff	plusw1,fsr2h
 14938  01768C  0EF8               	movlw	-8
 14939  01768E  006F FF8F FFDF     	movff	plusw1,indf2
 14940                           
 14941                           ;stkvar	_n @ sp[(-4)+-6]
 14942  017694  0EF6               	movlw	-10
 14943  017696  006F FF8C  F001    	movff	plusw1,btemp
 14944  01769C  0E01               	movlw	1
 14945  01769E  5E01               	subwf	btemp^0,f,c
 14946  0176A0  0EF6               	movlw	-10
 14947  0176A2  0060  F007  FFE3   	movff	btemp,plusw1
 14948  0176A8  0EF7               	movlw	-9
 14949  0176AA  006F FF8C  F001    	movff	plusw1,btemp
 14950  0176B0  0E00               	movlw	0
 14951  0176B2  5A01               	subwfb	btemp^0,f,c
 14952  0176B4  0EF7               	movlw	-9
 14953  0176B6  0060  F007  FFE3   	movff	btemp,plusw1
 14954                           
 14955                           ;stkvar	_s @ sp[(-4)+0]
 14956  0176BC  0EFC               	movlw	-4
 14957  0176BE  50E3               	movf	plusw1,w,c
 14958  0176C0  0F01               	addlw	1
 14959  0176C2  6E01               	movwf	btemp^0,c
 14960  0176C4  0EFC               	movlw	-4
 14961  0176C6  0060  F007  FFE3   	movff	btemp,plusw1
 14962  0176CC  6A01               	clrf	btemp^0,c
 14963  0176CE  0EFD               	movlw	-3
 14964  0176D0  50E3               	movf	plusw1,w,c
 14965  0176D2  2001               	addwfc	btemp^0,w,c
 14966  0176D4  6E01               	movwf	btemp^0,c
 14967  0176D6  0EFD               	movlw	-3
 14968  0176D8                     L14:
 14969  0176D8  0060  F007  FFE3   	movff	btemp,plusw1
 14970                           
 14971                           ;stkvar	_n @ sp[(-4)+-6]
 14972  0176DE  0EF6               	movlw	-10
 14973  0176E0  006F FF8C  F001    	movff	plusw1,btemp
 14974  0176E6  0EF7               	movlw	-9
 14975  0176E8  50E3               	movf	plusw1,w,c
 14976  0176EA  1001               	iorwf	btemp^0,w,c
 14977  0176EC  A4D8               	btfss	status,2,c
 14978  0176EE  D7C6               	goto	l13064
 14979  0176F0                     u11770:
 14980                           
 14981                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 14982  0176F0  0EF6               	movlw	246
 14983  0176F2  26E1               	addwf	fsr1l,f,c
 14984  0176F4  0EFF               	movlw	255
 14985  0176F6  22E2               	addwfc	fsr1h,f,c
 14986  0176F8  0012               	return		;funcret
 14987  0176FA                     __end_of_memset:
 14988                           	opt callstack 0
 14989                           
 14990 ;; *************** function _printf *****************
 14991 ;; Defined at:
 14992 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 14993 ;; Parameters:    Size  Location     Type
 14994 ;;  fmt             2  [STACK] PTR const unsigned char 
 14995 ;;		 -> STR_61(3), STR_60(3), 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;  ap              2  [STACK] PTR void [1]
 14998 ;;		 -> ?_printf(2), ?_sprintf(2), 
 14999 ;;  ret             2    0        int 
 15000 ;; Return value:  Size  Location     Type
 15001 ;;                  2  [STACK] int 
 15002 ;; Registers used:
 15003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15004 ;; Tracked objects:
 15005 ;;		On entry : 3F/3B
 15006 ;;		On exit  : 3F/0
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15013 ;;Total ram usage:        0 bytes
 15014 ;; Hardware stack levels used:    1
 15015 ;; Hardware stack levels required when called:   23
 15016 ;; This function calls:
 15017 ;;		_vfprintf
 15018 ;; This function is called by:
 15019 ;;		_eaDogM_WriteString
 15020 ;;		_send_lcd_data_dma
 15021 ;; This function uses a reentrant model
 15022 ;;
 15023                           
 15024                           	psect	text63
 15025  01C23E                     __ptext63:
 15026                           	opt callstack 0
 15027  01C23E                     _printf:
 15028                           	opt callstack 0
 15029                           
 15030                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15031  01C23E  52E6               	movf	postinc1,f,c
 15032  01C240  52E6               	movf	postinc1,f,c
 15033                           
 15034                           ;stkvar	?_printf @ sp[(-2)+-3]
 15035                           
 15036                           ;incstack = 0
 15037  01C242  0EFB               	movlw	251
 15038  01C244  24E1               	addwf	fsr1l,w,c
 15039  01C246  6E0B               	movwf	(btemp+10)^0,c
 15040  01C248  0EFF               	movlw	255
 15041  01C24A  20E2               	addwfc	fsr1h,w,c
 15042  01C24C  6E0C               	movwf	(btemp+11)^0,c
 15043                           
 15044                           ;stkvar	_ap @ sp[(-2)+0]
 15045  01C24E  0EFF               	movlw	-1
 15046  01C250  0060  F033  FFE3   	movff	btemp+11,plusw1
 15047  01C256  0EFE               	movlw	-2
 15048  01C258  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15049                           
 15050                           ;stkvar	_ap @ sp[(-2)+0]
 15051  01C25E  0EFE               	movlw	254
 15052  01C260  24E1               	addwf	fsr1l,w,c
 15053  01C262  6E01               	movwf	btemp^0,c
 15054  01C264  0EFF               	movlw	255
 15055  01C266  20E2               	addwfc	fsr1h,w,c
 15056  01C268  6E02               	movwf	(btemp+1)^0,c
 15057  01C26A  0060  F007  FFE6   	movff	btemp,postinc1
 15058  01C270  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15059                           
 15060                           ;stkvar	_fmt @ sp[(-4)+-3]
 15061  01C276  0EF9               	movlw	-7
 15062  01C278  006F FF8F FFE6     	movff	plusw1,postinc1
 15063  01C27E  006F FF8F FFE6     	movff	plusw1,postinc1
 15064  01C284  0E00               	movlw	0
 15065  01C286  6EE6               	movwf	postinc1,c
 15066  01C288  0E00               	movlw	0
 15067  01C28A  6EE6               	movwf	postinc1,c
 15068  01C28C  ECA9  F0DA         	call	_vfprintf	;wreg free
 15069                           
 15070                           ; BSR set to: 0
 15071                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 15072  01C290  52E5               	movf	postdec1,f,c
 15073  01C292  52E5               	movf	postdec1,f,c
 15074  01C294  52E5               	movf	postdec1,f,c
 15075  01C296  50E7               	movf	indf1,w,c
 15076  01C298  5EE1               	subwf	fsr1l,f,c
 15077  01C29A  0E00               	movlw	0
 15078  01C29C  5AE2               	subwfb	fsr1h,f,c
 15079  01C29E  0012               	return		;funcret
 15080  01C2A0                     __end_of_printf:
 15081                           	opt callstack 0
 15082                           
 15083 ;; *************** function _vfprintf *****************
 15084 ;; Defined at:
 15085 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15086 ;; Parameters:    Size  Location     Type
 15087 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15088 ;;		 -> f(6), NULL(0), 
 15089 ;;  fmt             2  [STACK] PTR const unsigned char 
 15090 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 15091 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 15092 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 15093 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 15094 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 15095 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 15096 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 15097 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 15098 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 15099 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 15100 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 15101 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 15102 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15103 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 15104 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 15105 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 15106 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 15107 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 15108 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15109 ;;		 -> STR_1(21), 
 15110 ;;  ap              2  [STACK] PTR PTR void 
 15111 ;;		 -> ap(2), ap(2), 
 15112 ;; Auto vars:     Size  Location     Type
 15113 ;;  cfmt            2  [STACK] PTR unsigned char 
 15114 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 15115 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 15116 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 15117 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 15118 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 15119 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 15120 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 15121 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 15122 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 15123 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 15124 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 15125 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 15126 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15127 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 15128 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 15129 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 15130 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 15131 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 15132 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15133 ;;		 -> STR_1(21), 
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  2  [STACK] int 
 15136 ;; Registers used:
 15137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/2
 15140 ;;		On exit  : 3F/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15147 ;;Total ram usage:        0 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; Hardware stack levels required when called:   22
 15150 ;; This function calls:
 15151 ;;		_vfpfcnvrt
 15152 ;; This function is called by:
 15153 ;;		_sprintf
 15154 ;;		_printf
 15155 ;; This function uses a reentrant model
 15156 ;;
 15157                           
 15158                           	psect	text64
 15159  01B552                     __ptext64:
 15160                           	opt callstack 0
 15161  01B552                     _vfprintf:
 15162                           	opt callstack 0
 15163                           
 15164                           ; BSR set to: 0
 15165                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15166  01B552  52E6               	movf	postinc1,f,c
 15167  01B554  52E6               	movf	postinc1,f,c
 15168                           
 15169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 15170                           ;stkvar	_fmt @ sp[(-2)+-4]
 15171                           
 15172                           ;incstack = 0
 15173 ;; hardware stack exceeded
 15174  01B556  0EFA               	movlw	-6
 15175  01B558  006F FF8C  F00B    	movff	plusw1,btemp+10
 15176  01B55E  0EFB               	movlw	-5
 15177  01B560  006F FF8C  F00C    	movff	plusw1,btemp+11
 15178                           
 15179                           ;stkvar	_cfmt @ sp[(-2)+0]
 15180  01B566  0EFF               	movlw	-1
 15181  01B568  0060  F033  FFE3   	movff	btemp+11,plusw1
 15182  01B56E  0EFE               	movlw	-2
 15183  01B570  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15184                           
 15185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 15186  01B576  0100               	movlb	0	; () banked
 15187  01B578  6B96               	clrf	_nout& (0+255),b
 15188  01B57A  6B97               	clrf	(_nout+1)& (0+255),b
 15189                           
 15190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15191  01B57C  D021               	goto	l13914
 15192  01B57E                     l13912:
 15193                           
 15194                           ; BSR set to: 0
 15195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 15196                           ;stkvar	_ap @ sp[(-2)+-6]
 15197  01B57E  0EF8               	movlw	-8
 15198  01B580  006F FF8F FFE6     	movff	plusw1,postinc1
 15199  01B586  006F FF8F FFE6     	movff	plusw1,postinc1
 15200                           
 15201                           ;stkvar	_cfmt @ sp[(-4)+0]
 15202  01B58C  0EFC               	movlw	252
 15203  01B58E  24E1               	addwf	fsr1l,w,c
 15204  01B590  6E01               	movwf	btemp^0,c
 15205  01B592  0EFF               	movlw	255
 15206  01B594  20E2               	addwfc	fsr1h,w,c
 15207  01B596  6E02               	movwf	(btemp+1)^0,c
 15208  01B598  0060  F007  FFE6   	movff	btemp,postinc1
 15209  01B59E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15210                           
 15211                           ;stkvar	_fp @ sp[(-6)+-2]
 15212  01B5A4  0EF8               	movlw	-8
 15213  01B5A6  006F FF8F FFE6     	movff	plusw1,postinc1
 15214  01B5AC  006F FF8F FFE6     	movff	plusw1,postinc1
 15215  01B5B2  EC61  F092         	call	_vfpfcnvrt	;wreg free
 15216  01B5B6  5001               	movf	btemp^0,w,c
 15217  01B5B8  0100               	movlb	0	; () banked
 15218  01B5BA  2796               	addwf	_nout& (0+255),f,b
 15219  01B5BC  5002               	movf	(btemp+1)^0,w,c
 15220  01B5BE  2397               	addwfc	(_nout+1)& (0+255),f,b
 15221  01B5C0                     l13914:
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15225                           ;stkvar	_cfmt @ sp[(-2)+0]
 15226  01B5C0  50E1               	movf	fsr1l,w,c
 15227  01B5C2  0FFE               	addlw	-2
 15228  01B5C4  6ED9               	movwf	fsr2l,c
 15229  01B5C6  50E2               	movf	fsr1h,w,c
 15230  01B5C8  6EDA               	movwf	fsr2h,c
 15231  01B5CA  0EFF               	movlw	255
 15232  01B5CC  22DA               	addwfc	fsr2h,f,c
 15233  01B5CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15234  01B5D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15235  01B5DA                     	if	0	;tblptru may be non-zero
 15236  01B5DA                     	endif
 15237  01B5DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15238  01B5DA  0E00               	movlw	low (__mediumconst shr (0+16))
 15239  01B5DC  6EF8               	movwf	tblptru,c
 15240  01B5DE                     	endif
 15241  01B5DE  0008               	tblrd		*
 15242  01B5E0  50F5               	movf	tablat,w,c
 15243  01B5E2  0900               	iorlw	0
 15244  01B5E4  A4D8               	btfss	status,2,c
 15245  01B5E6  D7CB               	goto	l13912
 15246                           
 15247                           ; BSR set to: 0
 15248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 15249  01B5E8  0060  F258  F001   	movff	_nout,btemp
 15250  01B5EE  0060  F25C  F002   	movff	_nout+1,btemp+1
 15251                           
 15252                           ; BSR set to: 0
 15253                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 15254  01B5F4  0EF8               	movlw	248
 15255  01B5F6  26E1               	addwf	fsr1l,f,c
 15256  01B5F8  0EFF               	movlw	255
 15257  01B5FA  22E2               	addwfc	fsr1h,f,c
 15258  01B5FC  0012               	return		;funcret
 15259  01B5FE                     __end_of_vfprintf:
 15260                           	opt callstack 0
 15261                           
 15262 ;; *************** function _vfpfcnvrt *****************
 15263 ;; Defined at:
 15264 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15265 ;; Parameters:    Size  Location     Type
 15266 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15267 ;;		 -> f(6), NULL(0), 
 15268 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 15269 ;;		 -> cfmt(2), 
 15270 ;;  ap              2  [STACK] PTR PTR void 
 15271 ;;		 -> ap(2), ap(2), 
 15272 ;; Auto vars:     Size  Location     Type
 15273 ;;  llu             8  [STACK] unsigned long long 
 15274 ;;  ll              8  [STACK] long long 
 15275 ;;  f               4  [STACK] long long 
 15276 ;;  ct              3  [STACK] unsigned char [3]
 15277 ;;  vp              3    0        PTR void 
 15278 ;;  cp              2  [STACK] PTR unsigned char 
 15279 ;;		 -> ?_printf(2), ?_sprintf(2), STR_63(9), STR_62(12), 
 15280 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15281 ;;		 -> V(192), 
 15282 ;;  i               2    0        int 
 15283 ;;  done            2    0        int 
 15284 ;;  c               1  [STACK] unsigned char 
 15285 ;; Return value:  Size  Location     Type
 15286 ;;                  2  [STACK] int 
 15287 ;; Registers used:
 15288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15289 ;; Tracked objects:
 15290 ;;		On entry : 0/0
 15291 ;;		On exit  : 0/0
 15292 ;;		Unchanged: 0/0
 15293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15298 ;;Total ram usage:        0 bytes
 15299 ;; Hardware stack levels used:    1
 15300 ;; Hardware stack levels required when called:   21
 15301 ;; This function calls:
 15302 ;;		_atoi
 15303 ;;		_ctoa
 15304 ;;		_dtoa
 15305 ;;		_efgtoa
 15306 ;;		_fputc
 15307 ;;		_isdigit
 15308 ;;		_isupper
 15309 ;;		_stoa
 15310 ;;		_strncmp
 15311 ;;		_tolower
 15312 ;;		_utoa
 15313 ;;		_xtoa
 15314 ;; This function is called by:
 15315 ;;		_vfprintf
 15316 ;; This function uses a reentrant model
 15317 ;;
 15318                           
 15319                           	psect	text65
 15320  0124C2                     __ptext65:
 15321                           	opt callstack 0
 15322  0124C2                     _vfpfcnvrt:
 15323                           	opt callstack 0
 15324                           
 15325                           ; BSR set to: 0
 15326                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15327  0124C2  0E20               	movlw	32
 15328  0124C4  26E1               	addwf	fsr1l,f,c
 15329  0124C6  0E00               	movlw	0
 15330  0124C8  22E2               	addwfc	fsr1h,f,c
 15331                           
 15332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 15333                           ;stkvar	_fmt @ sp[(-32)+-4]
 15334                           
 15335                           ;incstack = 0
 15336 ;; hardware stack exceeded
 15337  0124CA  0EDC               	movlw	-36
 15338  0124CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15339  0124D2  0EDD               	movlw	-35
 15340  0124D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15341  0124DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15342  0124E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15343  0124E6                     	if	0	;tblptru may be non-zero
 15344  0124E6                     	endif
 15345  0124E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15346  0124E6  0E00               	movlw	low (__mediumconst shr (0+16))
 15347  0124E8  6EF8               	movwf	tblptru,c
 15348  0124EA                     	endif
 15349  0124EA  0008               	tblrd		*
 15350  0124EC  50F5               	movf	tablat,w,c
 15351  0124EE  0A25               	xorlw	37
 15352  0124F0  A4D8               	btfss	status,2,c
 15353  0124F2  EF08  F09A         	goto	l13874
 15354                           
 15355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 15356                           ;stkvar	_fmt @ sp[(-32)+-4]
 15357  0124F6  0EDC               	movlw	-36
 15358  0124F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15359  0124FE  0EDD               	movlw	-35
 15360  012500  006F FF8F FFDA     	movff	plusw1,fsr2h
 15361  012506  2ADE               	incf	postinc2,f,c
 15362  012508  0E00               	movlw	0
 15363  01250A  22DD               	addwfc	postdec2,f,c
 15364                           
 15365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 15366  01250C  6A3A               	clrf	_width^0,c
 15367  01250E  6A3B               	clrf	(_width+1)^0,c
 15368  012510  6A3E               	clrf	_flags^0,c
 15369  012512  6A3F               	clrf	(_flags+1)^0,c
 15370                           
 15371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 15372  012514  683C               	setf	_prec^0,c
 15373  012516  683D               	setf	(_prec+1)^0,c
 15374                           
 15375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 15376                           ;stkvar	_fmt @ sp[(-32)+-4]
 15377  012518  0EDC               	movlw	-36
 15378  01251A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15379  012520  0EDD               	movlw	-35
 15380  012522  006F FF8F FFDA     	movff	plusw1,fsr2h
 15381  012528  006F FF7B FFF6     	movff	postinc2,tblptrl
 15382  01252E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15383  012534                     	if	0	;tblptru may be non-zero
 15384  012534                     	endif
 15385  012534                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15386  012534  0E00               	movlw	low (__mediumconst shr (0+16))
 15387  012536  6EF8               	movwf	tblptru,c
 15388  012538                     	endif
 15389  012538  0008               	tblrd		*
 15390  01253A  50F5               	movf	tablat,w,c
 15391  01253C  0A2A               	xorlw	42
 15392  01253E  A4D8               	btfss	status,2,c
 15393  012540  D031               	goto	l13692
 15394                           
 15395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 15396                           ;stkvar	_fmt @ sp[(-32)+-4]
 15397  012542  0EDC               	movlw	-36
 15398  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 15399  01254A  0EDD               	movlw	-35
 15400  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15401  012552  2ADE               	incf	postinc2,f,c
 15402  012554  0E00               	movlw	0
 15403  012556  22DD               	addwfc	postdec2,f,c
 15404                           
 15405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 15406                           ;stkvar	_ap @ sp[(-32)+-6]
 15407  012558  0EDA               	movlw	-38
 15408  01255A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15409  012560  0EDB               	movlw	-37
 15410  012562  006F FF8F FFDA     	movff	plusw1,fsr2h
 15411  012568  0E02               	movlw	2
 15412  01256A  5EDE               	subwf	postinc2,f,c
 15413  01256C  0E00               	movlw	0
 15414  01256E  5ADD               	subwfb	postdec2,f,c
 15415  012570  006F FF78  F00B    	movff	postinc2,btemp+10
 15416  012576  006F FF74  F00C    	movff	postdec2,btemp+11
 15417  01257C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15418  012582  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15419  012588  006F FF78  F03A    	movff	postinc2,_width
 15420  01258E  006F FF74  F03B    	movff	postdec2,_width+1
 15421                           
 15422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 15423  012594  AE3B               	btfss	(_width+1)^0,7,c
 15424  012596  D066               	goto	u12960
 15425                           
 15426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 15427  012598  803E               	bsf	_flags^0,0,c
 15428                           
 15429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 15430  01259A  6C3A               	negf	_width^0,c
 15431  01259C  1E3B               	comf	(_width+1)^0,f,c
 15432  01259E  B0D8               	btfsc	status,0,c
 15433  0125A0  2A3B               	incf	(_width+1)^0,f,c
 15434  0125A2  D060               	goto	u12960
 15435  0125A4                     l13692:
 15436                           
 15437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 15438                           ;stkvar	_fmt @ sp[(-32)+-4]
 15439  0125A4  0EDC               	movlw	-36
 15440  0125A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15441  0125AC  0EDD               	movlw	-35
 15442  0125AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15443  0125B4  006F FF78  F00B    	movff	postinc2,btemp+10
 15444  0125BA  006F FF74  F00C    	movff	postdec2,btemp+11
 15445  0125C0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15446  0125C6  0060  F033  FFE6   	movff	btemp+11,postinc1
 15447  0125CC  EC88  F0BF         	call	_atoi	;wreg free
 15448  0125D0  0060  F004  F03A   	movff	btemp,_width
 15449  0125D6  0060  F008  F03B   	movff	btemp+1,_width+1
 15450                           
 15451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15452  0125DC  D00B               	goto	l13696
 15453  0125DE                     l13694:
 15454                           
 15455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 15456                           ;stkvar	_fmt @ sp[(-32)+-4]
 15457  0125DE  0EDC               	movlw	-36
 15458  0125E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15459  0125E6  0EDD               	movlw	-35
 15460  0125E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15461  0125EE  2ADE               	incf	postinc2,f,c
 15462  0125F0  0E00               	movlw	0
 15463  0125F2  22DD               	addwfc	postdec2,f,c
 15464  0125F4                     l13696:
 15465  0125F4  0ED0               	movlw	208
 15466  0125F6  6E0B               	movwf	(btemp+10)^0,c
 15467  0125F8  0EFF               	movlw	255
 15468  0125FA  6E0C               	movwf	(btemp+11)^0,c
 15469                           
 15470                           ;stkvar	_fmt @ sp[(-32)+-4]
 15471  0125FC  0EDC               	movlw	-36
 15472  0125FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15473  012604  0EDD               	movlw	-35
 15474  012606  006F FF8F FFDA     	movff	plusw1,fsr2h
 15475  01260C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15476  012612  006F FF77 FFF7     	movff	postdec2,tblptrh
 15477  012618                     	if	0	;tblptru may be non-zero
 15478  012618                     	endif
 15479  012618                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15480  012618  0E00               	movlw	low (__mediumconst shr (0+16))
 15481  01261A  6EF8               	movwf	tblptru,c
 15482  01261C                     	endif
 15483  01261C  0008               	tblrd		*
 15484  01261E  50F5               	movf	tablat,w,c
 15485  012620  6E09               	movwf	(btemp+8)^0,c
 15486  012622  6A0A               	clrf	(btemp+9)^0,c
 15487  012624  500B               	movf	(btemp+10)^0,w,c
 15488  012626  2609               	addwf	(btemp+8)^0,f,c
 15489  012628  500C               	movf	(btemp+11)^0,w,c
 15490  01262A  220A               	addwfc	(btemp+9)^0,f,c
 15491  01262C  500A               	movf	(btemp+9)^0,w,c
 15492  01262E  E106               	bnz	u12940
 15493  012630  0E0A               	movlw	10
 15494  012632  5C09               	subwf	(btemp+8)^0,w,c
 15495  012634  B0D8               	btfsc	status,0,c
 15496  012636  D002               	goto	u12940
 15497  012638  0E01               	movlw	1
 15498  01263A  D001               	goto	u12950
 15499  01263C                     u12940:
 15500  01263C  0E00               	movlw	0
 15501  01263E                     u12950:
 15502  01263E  6E0B               	movwf	(btemp+10)^0,c
 15503  012640  6A0C               	clrf	(btemp+11)^0,c
 15504                           
 15505                           ;stkvar	_vfpfcnvrt$6208 @ sp[(-32)+4]
 15506  012642  0EE4               	movlw	-28
 15507  012644  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15508  01264A  0EE5               	movlw	-27
 15509  01264C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15510                           
 15511                           ;stkvar	_vfpfcnvrt$6208 @ sp[(-32)+4]
 15512  012652  0EE4               	movlw	-28
 15513  012654  006F FF8C  F001    	movff	plusw1,btemp
 15514  01265A  0EE5               	movlw	-27
 15515  01265C  50E3               	movf	plusw1,w,c
 15516  01265E  1001               	iorwf	btemp^0,w,c
 15517  012660  A4D8               	btfss	status,2,c
 15518  012662  D7BD               	goto	l13694
 15519  012664                     u12960:
 15520                           
 15521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 15522                           ;stkvar	_fmt @ sp[(-32)+-4]
 15523  012664  0EDC               	movlw	-36
 15524  012666  006F FF8F FFD9     	movff	plusw1,fsr2l
 15525  01266C  0EDD               	movlw	-35
 15526  01266E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15527  012674  006F FF7B FFF6     	movff	postinc2,tblptrl
 15528  01267A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15529  012680                     	if	0	;tblptru may be non-zero
 15530  012680                     	endif
 15531  012680                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15532  012680  0E00               	movlw	low (__mediumconst shr (0+16))
 15533  012682  6EF8               	movwf	tblptru,c
 15534  012684                     	endif
 15535  012684  0008               	tblrd		*
 15536  012686  50F5               	movf	tablat,w,c
 15537  012688  0A2E               	xorlw	46
 15538  01268A  A4D8               	btfss	status,2,c
 15539  01268C  D0AC               	goto	u13010
 15540                           
 15541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 15542  01268E  6A3C               	clrf	_prec^0,c
 15543  012690  6A3D               	clrf	(_prec+1)^0,c
 15544                           
 15545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 15546                           ;stkvar	_fmt @ sp[(-32)+-4]
 15547  012692  0EDC               	movlw	-36
 15548  012694  006F FF8F FFD9     	movff	plusw1,fsr2l
 15549  01269A  0EDD               	movlw	-35
 15550  01269C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15551  0126A2  2ADE               	incf	postinc2,f,c
 15552  0126A4  0E00               	movlw	0
 15553  0126A6  22DD               	addwfc	postdec2,f,c
 15554                           
 15555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 15556                           ;stkvar	_fmt @ sp[(-32)+-4]
 15557  0126A8  0EDC               	movlw	-36
 15558  0126AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15559  0126B0  0EDD               	movlw	-35
 15560  0126B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15561  0126B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15562  0126BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15563  0126C4                     	if	0	;tblptru may be non-zero
 15564  0126C4                     	endif
 15565  0126C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15566  0126C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15567  0126C6  6EF8               	movwf	tblptru,c
 15568  0126C8                     	endif
 15569  0126C8  0008               	tblrd		*
 15570  0126CA  50F5               	movf	tablat,w,c
 15571  0126CC  0A2A               	xorlw	42
 15572  0126CE  A4D8               	btfss	status,2,c
 15573  0126D0  D02A               	goto	l13714
 15574                           
 15575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 15576                           ;stkvar	_fmt @ sp[(-32)+-4]
 15577  0126D2  0EDC               	movlw	-36
 15578  0126D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15579  0126DA  0EDD               	movlw	-35
 15580  0126DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15581  0126E2  2ADE               	incf	postinc2,f,c
 15582  0126E4  0E00               	movlw	0
 15583  0126E6  22DD               	addwfc	postdec2,f,c
 15584                           
 15585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 15586                           ;stkvar	_ap @ sp[(-32)+-6]
 15587  0126E8  0EDA               	movlw	-38
 15588  0126EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15589  0126F0  0EDB               	movlw	-37
 15590  0126F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15591  0126F8  0E02               	movlw	2
 15592  0126FA  5EDE               	subwf	postinc2,f,c
 15593  0126FC  0E00               	movlw	0
 15594  0126FE  5ADD               	subwfb	postdec2,f,c
 15595  012700  006F FF78  F00B    	movff	postinc2,btemp+10
 15596  012706  006F FF74  F00C    	movff	postdec2,btemp+11
 15597  01270C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15598  012712  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15599  012718  006F FF78  F03C    	movff	postinc2,_prec
 15600  01271E  006F FF74  F03D    	movff	postdec2,_prec+1
 15601                           
 15602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 15603  012724  D060               	goto	u13010
 15604  012726                     l13714:
 15605                           
 15606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 15607                           ;stkvar	_fmt @ sp[(-32)+-4]
 15608  012726  0EDC               	movlw	-36
 15609  012728  006F FF8F FFD9     	movff	plusw1,fsr2l
 15610  01272E  0EDD               	movlw	-35
 15611  012730  006F FF8F FFDA     	movff	plusw1,fsr2h
 15612  012736  006F FF78  F00B    	movff	postinc2,btemp+10
 15613  01273C  006F FF74  F00C    	movff	postdec2,btemp+11
 15614  012742  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15615  012748  0060  F033  FFE6   	movff	btemp+11,postinc1
 15616  01274E  EC88  F0BF         	call	_atoi	;wreg free
 15617  012752  0060  F004  F03C   	movff	btemp,_prec
 15618  012758  0060  F008  F03D   	movff	btemp+1,_prec+1
 15619                           
 15620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15621  01275E  D00B               	goto	l13718
 15622  012760                     l13716:
 15623                           
 15624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 15625                           ;stkvar	_fmt @ sp[(-32)+-4]
 15626  012760  0EDC               	movlw	-36
 15627  012762  006F FF8F FFD9     	movff	plusw1,fsr2l
 15628  012768  0EDD               	movlw	-35
 15629  01276A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15630  012770  2ADE               	incf	postinc2,f,c
 15631  012772  0E00               	movlw	0
 15632  012774  22DD               	addwfc	postdec2,f,c
 15633  012776                     l13718:
 15634  012776  0ED0               	movlw	208
 15635  012778  6E0B               	movwf	(btemp+10)^0,c
 15636  01277A  0EFF               	movlw	255
 15637  01277C  6E0C               	movwf	(btemp+11)^0,c
 15638                           
 15639                           ;stkvar	_fmt @ sp[(-32)+-4]
 15640  01277E  0EDC               	movlw	-36
 15641  012780  006F FF8F FFD9     	movff	plusw1,fsr2l
 15642  012786  0EDD               	movlw	-35
 15643  012788  006F FF8F FFDA     	movff	plusw1,fsr2h
 15644  01278E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15645  012794  006F FF77 FFF7     	movff	postdec2,tblptrh
 15646  01279A                     	if	0	;tblptru may be non-zero
 15647  01279A                     	endif
 15648  01279A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15649  01279A  0E00               	movlw	low (__mediumconst shr (0+16))
 15650  01279C  6EF8               	movwf	tblptru,c
 15651  01279E                     	endif
 15652  01279E  0008               	tblrd		*
 15653  0127A0  50F5               	movf	tablat,w,c
 15654  0127A2  6E09               	movwf	(btemp+8)^0,c
 15655  0127A4  6A0A               	clrf	(btemp+9)^0,c
 15656  0127A6  500B               	movf	(btemp+10)^0,w,c
 15657  0127A8  2609               	addwf	(btemp+8)^0,f,c
 15658  0127AA  500C               	movf	(btemp+11)^0,w,c
 15659  0127AC  220A               	addwfc	(btemp+9)^0,f,c
 15660  0127AE  500A               	movf	(btemp+9)^0,w,c
 15661  0127B0  E106               	bnz	u12990
 15662  0127B2  0E0A               	movlw	10
 15663  0127B4  5C09               	subwf	(btemp+8)^0,w,c
 15664  0127B6  B0D8               	btfsc	status,0,c
 15665  0127B8  D002               	goto	u12990
 15666  0127BA  0E01               	movlw	1
 15667  0127BC  D001               	goto	u13000
 15668  0127BE                     u12990:
 15669  0127BE  0E00               	movlw	0
 15670  0127C0                     u13000:
 15671  0127C0  6E0B               	movwf	(btemp+10)^0,c
 15672  0127C2  6A0C               	clrf	(btemp+11)^0,c
 15673                           
 15674                           ;stkvar	_vfpfcnvrt$6209 @ sp[(-32)+0]
 15675  0127C4  0EE0               	movlw	-32
 15676  0127C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15677  0127CC  0EE1               	movlw	-31
 15678  0127CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15679                           
 15680                           ;stkvar	_vfpfcnvrt$6209 @ sp[(-32)+0]
 15681  0127D4  0EE0               	movlw	-32
 15682  0127D6  006F FF8C  F001    	movff	plusw1,btemp
 15683  0127DC  0EE1               	movlw	-31
 15684  0127DE  50E3               	movf	plusw1,w,c
 15685  0127E0  1001               	iorwf	btemp^0,w,c
 15686  0127E2  A4D8               	btfss	status,2,c
 15687  0127E4  D7BD               	goto	l13716
 15688  0127E6                     u13010:
 15689                           
 15690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 15691                           ;stkvar	_fmt @ sp[(-32)+-4]
 15692  0127E6  0EDC               	movlw	-36
 15693  0127E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15694  0127EE  0EDD               	movlw	-35
 15695  0127F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15696  0127F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 15697  0127FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 15698  012802                     	if	0	;tblptru may be non-zero
 15699  012802                     	endif
 15700  012802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15701  012802  0E00               	movlw	low (__mediumconst shr (0+16))
 15702  012804  6EF8               	movwf	tblptru,c
 15703  012806                     	endif
 15704  012806  0008               	tblrd		*
 15705  012808  50F5               	movf	tablat,w,c
 15706  01280A  6EE6               	movwf	postinc1,c
 15707  01280C  0E00               	movlw	0
 15708  01280E  6EE6               	movwf	postinc1,c
 15709  012810  EC40  F0DE         	call	_tolower	;wreg free
 15710                           
 15711                           ;stkvar	_ct @ sp[(-32)+26]
 15712  012814  0EFA               	movlw	-6
 15713  012816  0060  F007  FFE3   	movff	btemp,plusw1
 15714                           
 15715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 15716                           ;stkvar	_ct @ sp[(-32)+26]
 15717  01281C  0EFA               	movlw	-6
 15718  01281E  50E3               	movf	plusw1,w,c
 15719  012820  B4D8               	btfsc	status,2,c
 15720  012822  D05B               	goto	l13734
 15721                           
 15722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 15723                           ;stkvar	_ct @ sp[(-32)+26]
 15724  012824  0EFB               	movlw	251
 15725  012826  24E1               	addwf	fsr1l,w,c
 15726  012828  6ED9               	movwf	fsr2l,c
 15727  01282A  0EFF               	movlw	255
 15728  01282C  20E2               	addwfc	fsr1h,w,c
 15729  01282E  6EDA               	movwf	fsr2h,c
 15730                           
 15731                           ;stkvar	_fmt @ sp[(-32)+-4]
 15732  012830  0EDC               	movlw	-36
 15733  012832  006F FF8F FFE9     	movff	plusw1,fsr0l
 15734  012838  0EDD               	movlw	-35
 15735  01283A  006F FF8F FFEA     	movff	plusw1,fsr0h
 15736  012840  006F FFB8  F00B    	movff	postinc0,btemp+10
 15737  012846  006F FFB4  F00C    	movff	postdec0,btemp+11
 15738  01284C  0E01               	movlw	1
 15739  01284E  260B               	addwf	(btemp+10)^0,f,c
 15740  012850  0E00               	movlw	0
 15741  012852  220C               	addwfc	(btemp+11)^0,f,c
 15742  012854  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15743  01285A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15744  012860                     	if	0	;tblptru may be non-zero
 15745  012860                     	endif
 15746  012860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15747  012860  0E00               	movlw	low (__mediumconst shr (0+16))
 15748  012862  6EF8               	movwf	tblptru,c
 15749  012864                     	endif
 15750  012864  0008               	tblrd		*
 15751  012866  50F5               	movf	tablat,w,c
 15752  012868  6EE6               	movwf	postinc1,c
 15753  01286A  0E00               	movlw	0
 15754  01286C  6EE6               	movwf	postinc1,c
 15755  01286E  EC40  F0DE         	call	_tolower	;wreg free
 15756  012872  5001               	movf	btemp^0,w,c
 15757  012874  6EDF               	movwf	indf2,c
 15758                           
 15759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 15760                           ;stkvar	_ct @ sp[(-32)+26]
 15761  012876  0EFB               	movlw	251
 15762  012878  24E1               	addwf	fsr1l,w,c
 15763  01287A  6ED9               	movwf	fsr2l,c
 15764  01287C  0EFF               	movlw	255
 15765  01287E  20E2               	addwfc	fsr1h,w,c
 15766  012880  6EDA               	movwf	fsr2h,c
 15767  012882  50DF               	movf	indf2,w,c
 15768  012884  B4D8               	btfsc	status,2,c
 15769  012886  D029               	goto	l13734
 15770                           
 15771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 15772                           ;stkvar	_ct @ sp[(-32)+26]
 15773  012888  0EFC               	movlw	252
 15774  01288A  24E1               	addwf	fsr1l,w,c
 15775  01288C  6ED9               	movwf	fsr2l,c
 15776  01288E  0EFF               	movlw	255
 15777  012890  20E2               	addwfc	fsr1h,w,c
 15778  012892  6EDA               	movwf	fsr2h,c
 15779                           
 15780                           ;stkvar	_fmt @ sp[(-32)+-4]
 15781  012894  0EDC               	movlw	-36
 15782  012896  006F FF8F FFE9     	movff	plusw1,fsr0l
 15783  01289C  0EDD               	movlw	-35
 15784  01289E  006F FF8F FFEA     	movff	plusw1,fsr0h
 15785  0128A4  006F FFB8  F00B    	movff	postinc0,btemp+10
 15786  0128AA  006F FFB4  F00C    	movff	postdec0,btemp+11
 15787  0128B0  0E02               	movlw	2
 15788  0128B2  260B               	addwf	(btemp+10)^0,f,c
 15789  0128B4  0E00               	movlw	0
 15790  0128B6  220C               	addwfc	(btemp+11)^0,f,c
 15791  0128B8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15792  0128BE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15793  0128C4                     	if	0	;tblptru may be non-zero
 15794  0128C4                     	endif
 15795  0128C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15796  0128C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15797  0128C6  6EF8               	movwf	tblptru,c
 15798  0128C8                     	endif
 15799  0128C8  0008               	tblrd		*
 15800  0128CA  50F5               	movf	tablat,w,c
 15801  0128CC  6EE6               	movwf	postinc1,c
 15802  0128CE  0E00               	movlw	0
 15803  0128D0  6EE6               	movwf	postinc1,c
 15804  0128D2  EC40  F0DE         	call	_tolower	;wreg free
 15805  0128D6  5001               	movf	btemp^0,w,c
 15806  0128D8  6EDF               	movwf	indf2,c
 15807  0128DA                     l13734:
 15808                           
 15809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 15810                           ;stkvar	_fmt @ sp[(-32)+-4]
 15811  0128DA  0EDC               	movlw	-36
 15812  0128DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15813  0128E2  0EDD               	movlw	-35
 15814  0128E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15815  0128EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15816  0128F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15817  0128F6                     	if	0	;tblptru may be non-zero
 15818  0128F6                     	endif
 15819  0128F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15820  0128F6  0E00               	movlw	low (__mediumconst shr (0+16))
 15821  0128F8  6EF8               	movwf	tblptru,c
 15822  0128FA                     	endif
 15823  0128FA  0008               	tblrd		*
 15824  0128FC  50F5               	movf	tablat,w,c
 15825  0128FE  0A63               	xorlw	99
 15826  012900  A4D8               	btfss	status,2,c
 15827  012902  D037               	goto	l13744
 15828                           
 15829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 15830                           ;stkvar	_fmt @ sp[(-32)+-4]
 15831  012904  0EDC               	movlw	-36
 15832  012906  006F FF8F FFD9     	movff	plusw1,fsr2l
 15833  01290C  0EDD               	movlw	-35
 15834  01290E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15835  012914  2ADE               	incf	postinc2,f,c
 15836  012916  0E00               	movlw	0
 15837  012918  22DD               	addwfc	postdec2,f,c
 15838                           
 15839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15840                           ;stkvar	_ap @ sp[(-32)+-6]
 15841  01291A  0EDA               	movlw	-38
 15842  01291C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15843  012922  0EDB               	movlw	-37
 15844  012924  006F FF8F FFDA     	movff	plusw1,fsr2h
 15845  01292A  0E02               	movlw	2
 15846  01292C  5EDE               	subwf	postinc2,f,c
 15847  01292E  0E00               	movlw	0
 15848  012930  5ADD               	subwfb	postdec2,f,c
 15849  012932  006F FF78  F00B    	movff	postinc2,btemp+10
 15850  012938  006F FF74  F00C    	movff	postdec2,btemp+11
 15851  01293E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15852  012944  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15853  01294A  50DF               	movf	indf2,w,c
 15854  01294C  6E0C               	movwf	(btemp+11)^0,c
 15855                           
 15856                           ;stkvar	_c @ sp[(-32)+31]
 15857  01294E  0EFF               	movlw	-1
 15858  012950  0060  F033  FFE3   	movff	btemp+11,plusw1
 15859                           
 15860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 15861                           ;stkvar	_c @ sp[(-32)+31]
 15862  012956  0EFF               	movlw	-1
 15863  012958  50E3               	movf	plusw1,w,c
 15864  01295A  6EE6               	movwf	postinc1,c
 15865                           
 15866                           ;stkvar	_fp @ sp[(-33)+-2]
 15867  01295C  0EDD               	movlw	-35
 15868  01295E  006F FF8F FFE6     	movff	plusw1,postinc1
 15869  012964  006F FF8F FFE6     	movff	plusw1,postinc1
 15870  01296A  ECBA  F0DD         	call	_ctoa	;wreg free
 15871  01296E  EF32  F09A         	goto	l2626
 15872  012972                     l13744:
 15873                           
 15874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 15875                           ;stkvar	_fmt @ sp[(-32)+-4]
 15876  012972  0EDC               	movlw	-36
 15877  012974  006F FF8F FFD9     	movff	plusw1,fsr2l
 15878  01297A  0EDD               	movlw	-35
 15879  01297C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15880  012982  006F FF7B FFF6     	movff	postinc2,tblptrl
 15881  012988  006F FF77 FFF7     	movff	postdec2,tblptrh
 15882  01298E                     	if	0	;tblptru may be non-zero
 15883  01298E                     	endif
 15884  01298E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15885  01298E  0E00               	movlw	low (__mediumconst shr (0+16))
 15886  012990  6EF8               	movwf	tblptru,c
 15887  012992                     	endif
 15888  012992  0008               	tblrd		*
 15889  012994  50F5               	movf	tablat,w,c
 15890  012996  0A64               	xorlw	100
 15891  012998  B4D8               	btfsc	status,2,c
 15892  01299A  D015               	goto	u13060
 15893                           
 15894                           ;stkvar	_fmt @ sp[(-32)+-4]
 15895  01299C  0EDC               	movlw	-36
 15896  01299E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15897  0129A4  0EDD               	movlw	-35
 15898  0129A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15899  0129AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15900  0129B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15901  0129B8                     	if	0	;tblptru may be non-zero
 15902  0129B8                     	endif
 15903  0129B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15904  0129B8  0E00               	movlw	low (__mediumconst shr (0+16))
 15905  0129BA  6EF8               	movwf	tblptru,c
 15906  0129BC                     	endif
 15907  0129BC  0008               	tblrd		*
 15908  0129BE  50F5               	movf	tablat,w,c
 15909  0129C0  0A69               	xorlw	105
 15910  0129C2  A4D8               	btfss	status,2,c
 15911  0129C4  D076               	goto	l13756
 15912  0129C6                     u13060:
 15913                           
 15914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 15915                           ;stkvar	_fmt @ sp[(-32)+-4]
 15916  0129C6  0EDC               	movlw	-36
 15917  0129C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15918  0129CE  0EDD               	movlw	-35
 15919  0129D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15920  0129D6  2ADE               	incf	postinc2,f,c
 15921  0129D8  0E00               	movlw	0
 15922  0129DA  22DD               	addwfc	postdec2,f,c
 15923                           
 15924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 15925                           ;stkvar	_ap @ sp[(-32)+-6]
 15926  0129DC  0EDA               	movlw	-38
 15927  0129DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15928  0129E4  0EDB               	movlw	-37
 15929  0129E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15930  0129EC  0E02               	movlw	2
 15931  0129EE  5EDE               	subwf	postinc2,f,c
 15932  0129F0  0E00               	movlw	0
 15933  0129F2  5ADD               	subwfb	postdec2,f,c
 15934  0129F4  006F FF78  F00B    	movff	postinc2,btemp+10
 15935  0129FA  006F FF74  F00C    	movff	postdec2,btemp+11
 15936  012A00  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15937  012A06  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15938  012A0C  006F FF78  F00B    	movff	postinc2,btemp+10
 15939  012A12  006F FF74  F00C    	movff	postdec2,btemp+11
 15940                           
 15941                           ;stkvar	_ll @ sp[(-32)+14]
 15942  012A18  0EEE               	movlw	-18
 15943  012A1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15944  012A20  0EEF               	movlw	-17
 15945  012A22  0060  F033  FFE3   	movff	btemp+11,plusw1
 15946  012A28  6A01               	clrf	btemp^0,c
 15947  012A2A  BEE3               	btfsc	plusw1,7,c
 15948  012A2C  6801               	setf	btemp^0,c
 15949  012A2E  0EF0               	movlw	-16
 15950  012A30  0060  F007  FFE3   	movff	btemp,plusw1
 15951  012A36  0EF1               	movlw	-15
 15952  012A38  0060  F007  FFE3   	movff	btemp,plusw1
 15953  012A3E  0EF2               	movlw	-14
 15954  012A40  0060  F007  FFE3   	movff	btemp,plusw1
 15955  012A46  0EF3               	movlw	-13
 15956  012A48  0060  F007  FFE3   	movff	btemp,plusw1
 15957  012A4E  0EF4               	movlw	-12
 15958  012A50  0060  F007  FFE3   	movff	btemp,plusw1
 15959  012A56  0EF5               	movlw	-11
 15960  012A58  0060  F007  FFE3   	movff	btemp,plusw1
 15961  012A5E                     l13752:
 15962                           
 15963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 15964                           ;stkvar	_ll @ sp[(-32)+14]
 15965  012A5E  50E1               	movf	fsr1l,w,c
 15966  012A60  0FEE               	addlw	-18
 15967  012A62  6ED9               	movwf	fsr2l,c
 15968  012A64  50E2               	movf	fsr1h,w,c
 15969  012A66  6EDA               	movwf	fsr2h,c
 15970  012A68  0EFF               	movlw	255
 15971  012A6A  22DA               	addwfc	fsr2h,f,c
 15972  012A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 15973  012A72  006F FF7B FFE6     	movff	postinc2,postinc1
 15974  012A78  006F FF7B FFE6     	movff	postinc2,postinc1
 15975  012A7E  006F FF7B FFE6     	movff	postinc2,postinc1
 15976  012A84  006F FF7B FFE6     	movff	postinc2,postinc1
 15977  012A8A  006F FF7B FFE6     	movff	postinc2,postinc1
 15978  012A90  006F FF7B FFE6     	movff	postinc2,postinc1
 15979  012A96  006F FF7B FFE6     	movff	postinc2,postinc1
 15980                           
 15981                           ;stkvar	_fp @ sp[(-40)+-2]
 15982  012A9C  0ED6               	movlw	-42
 15983  012A9E  006F FF8F FFE6     	movff	plusw1,postinc1
 15984  012AA4  006F FF8F FFE6     	movff	plusw1,postinc1
 15985  012AAA  ECD8  F0AE         	call	_dtoa	;wreg free
 15986  012AAE  EF32  F09A         	goto	l2626
 15987  012AB2                     l13756:
 15988                           
 15989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 15990  012AB2  0E02               	movlw	2
 15991  012AB4  6EE6               	movwf	postinc1,c
 15992  012AB6  0E00               	movlw	0
 15993  012AB8  6EE6               	movwf	postinc1,c
 15994  012ABA  0EEA               	movlw	low STR_90
 15995  012ABC  6EE6               	movwf	postinc1,c
 15996  012ABE  0EFF               	movlw	high STR_90
 15997  012AC0  6EE6               	movwf	postinc1,c
 15998                           
 15999                           ;stkvar	_fmt @ sp[(-36)+-4]
 16000  012AC2  0ED8               	movlw	-40
 16001  012AC4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16002  012ACA  0ED9               	movlw	-39
 16003  012ACC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16004  012AD2  006F FF78  F00B    	movff	postinc2,btemp+10
 16005  012AD8  006F FF74  F00C    	movff	postdec2,btemp+11
 16006  012ADE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16007  012AE4  0060  F033  FFE6   	movff	btemp+11,postinc1
 16008  012AEA  EC05  F0C3         	call	_strncmp	;wreg free
 16009  012AEE  5001               	movf	btemp^0,w,c
 16010  012AF0  1002               	iorwf	(btemp+1)^0,w,c
 16011  012AF2  B4D8               	btfsc	status,2,c
 16012  012AF4  D022               	goto	u13080
 16013  012AF6  0E02               	movlw	2
 16014  012AF8  6EE6               	movwf	postinc1,c
 16015  012AFA  0E00               	movlw	0
 16016  012AFC  6EE6               	movwf	postinc1,c
 16017  012AFE  0EF0               	movlw	low STR_94
 16018  012B00  6EE6               	movwf	postinc1,c
 16019  012B02  0EFF               	movlw	high STR_94
 16020  012B04  6EE6               	movwf	postinc1,c
 16021                           
 16022                           ;stkvar	_fmt @ sp[(-36)+-4]
 16023  012B06  0ED8               	movlw	-40
 16024  012B08  006F FF8F FFD9     	movff	plusw1,fsr2l
 16025  012B0E  0ED9               	movlw	-39
 16026  012B10  006F FF8F FFDA     	movff	plusw1,fsr2h
 16027  012B16  006F FF78  F00B    	movff	postinc2,btemp+10
 16028  012B1C  006F FF74  F00C    	movff	postdec2,btemp+11
 16029  012B22  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16030  012B28  0060  F033  FFE6   	movff	btemp+11,postinc1
 16031  012B2E  EC05  F0C3         	call	_strncmp	;wreg free
 16032  012B32  5001               	movf	btemp^0,w,c
 16033  012B34  1002               	iorwf	(btemp+1)^0,w,c
 16034  012B36  A4D8               	btfss	status,2,c
 16035  012B38  D069               	goto	l13768
 16036  012B3A                     u13080:
 16037                           
 16038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 16039                           ;stkvar	_fmt @ sp[(-32)+-4]
 16040  012B3A  0EDC               	movlw	-36
 16041  012B3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16042  012B42  0EDD               	movlw	-35
 16043  012B44  006F FF8F FFDA     	movff	plusw1,fsr2h
 16044  012B4A  0E02               	movlw	2
 16045  012B4C  26DE               	addwf	postinc2,f,c
 16046  012B4E  0E00               	movlw	0
 16047  012B50  22DD               	addwfc	postdec2,f,c
 16048                           
 16049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 16050                           ;stkvar	_ap @ sp[(-32)+-6]
 16051  012B52  0EDA               	movlw	-38
 16052  012B54  006F FF8F FFD9     	movff	plusw1,fsr2l
 16053  012B5A  0EDB               	movlw	-37
 16054  012B5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16055  012B62  0E04               	movlw	4
 16056  012B64  5EDE               	subwf	postinc2,f,c
 16057  012B66  0E00               	movlw	0
 16058  012B68  5ADD               	subwfb	postdec2,f,c
 16059  012B6A  006F FF78  F00B    	movff	postinc2,btemp+10
 16060  012B70  006F FF74  F00C    	movff	postdec2,btemp+11
 16061  012B76  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16062  012B7C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16063  012B82  006F FF78  F009    	movff	postinc2,btemp+8
 16064  012B88  006F FF78  F00A    	movff	postinc2,btemp+9
 16065  012B8E  006F FF78  F00B    	movff	postinc2,btemp+10
 16066  012B94  006F FF78  F00C    	movff	postinc2,btemp+11
 16067  012B9A  0060  F024  F011   	movff	btemp+8,btemp+16
 16068  012BA0  0060  F028  F012   	movff	btemp+9,btemp+17
 16069  012BA6  0060  F02C  F013   	movff	btemp+10,btemp+18
 16070  012BAC  0060  F030  F014   	movff	btemp+11,btemp+19
 16071  012BB2  6A15               	clrf	(btemp+20)^0,c
 16072  012BB4  BE14               	btfsc	(btemp+19)^0,7,c
 16073  012BB6  6815               	setf	(btemp+20)^0,c
 16074  012BB8  0060  F054  F016   	movff	btemp+20,btemp+21
 16075  012BBE  0060  F054  F017   	movff	btemp+20,btemp+22
 16076  012BC4  0060  F054  F018   	movff	btemp+20,btemp+23
 16077                           
 16078                           ;stkvar	_ll @ sp[(-32)+14]
 16079  012BCA  0EEE               	movlw	-18
 16080  012BCC  0060  F047  FFE3   	movff	btemp+16,plusw1
 16081  012BD2  0EEF               	movlw	-17
 16082  012BD4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16083  012BDA  0EF0               	movlw	-16
 16084  012BDC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16085  012BE2  0EF1               	movlw	-15
 16086  012BE4  0060  F053  FFE3   	movff	btemp+19,plusw1
 16087  012BEA  0EF2               	movlw	-14
 16088  012BEC  0060  F057  FFE3   	movff	btemp+20,plusw1
 16089  012BF2  0EF3               	movlw	-13
 16090  012BF4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16091  012BFA  0EF4               	movlw	-12
 16092  012BFC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16093  012C02  0EF5               	movlw	-11
 16094  012C04  0060  F063  FFE3   	movff	btemp+23,plusw1
 16095  012C0A  D729               	goto	l13752
 16096  012C0C                     l13768:
 16097                           
 16098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 16099                           ;stkvar	_ct @ sp[(-32)+26]
 16100  012C0C  0EFA               	movlw	-6
 16101  012C0E  006F FF8C  F001    	movff	plusw1,btemp
 16102  012C14  0E66               	movlw	102
 16103  012C16  1801               	xorwf	btemp^0,w,c
 16104  012C18  A4D8               	btfss	status,2,c
 16105  012C1A  D06E               	goto	l13780
 16106                           
 16107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 16108                           ;stkvar	_fmt @ sp[(-32)+-4]
 16109  012C1C  0EDC               	movlw	-36
 16110  012C1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16111  012C24  0EDD               	movlw	-35
 16112  012C26  006F FF8F FFDA     	movff	plusw1,fsr2h
 16113  012C2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16114  012C32  006F FF77 FFF7     	movff	postdec2,tblptrh
 16115  012C38                     	if	0	;tblptru may be non-zero
 16116  012C38                     	endif
 16117  012C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16118  012C38  0E00               	movlw	low (__mediumconst shr (0+16))
 16119  012C3A  6EF8               	movwf	tblptru,c
 16120  012C3C                     	endif
 16121                           
 16122                           ;stkvar	_c @ sp[(-32)+31]
 16123  012C3C  0008               	tblrd		*
 16124  012C3E  0EFF               	movlw	-1
 16125  012C40  006F FFD7 FFE3     	movff	tablat,plusw1
 16126                           
 16127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 16128                           ;stkvar	_fmt @ sp[(-32)+-4]
 16129  012C46  0EDC               	movlw	-36
 16130  012C48  006F FF8F FFD9     	movff	plusw1,fsr2l
 16131  012C4E  0EDD               	movlw	-35
 16132  012C50  006F FF8F FFDA     	movff	plusw1,fsr2h
 16133  012C56  2ADE               	incf	postinc2,f,c
 16134  012C58  0E00               	movlw	0
 16135  012C5A  22DD               	addwfc	postdec2,f,c
 16136                           
 16137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 16138                           ;stkvar	_ap @ sp[(-32)+-6]
 16139  012C5C  0EDA               	movlw	-38
 16140  012C5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16141  012C64  0EDB               	movlw	-37
 16142  012C66  006F FF8F FFDA     	movff	plusw1,fsr2h
 16143  012C6C  0E04               	movlw	4
 16144  012C6E  5EDE               	subwf	postinc2,f,c
 16145  012C70  0E00               	movlw	0
 16146  012C72  5ADD               	subwfb	postdec2,f,c
 16147  012C74  006F FF78  F00B    	movff	postinc2,btemp+10
 16148  012C7A  006F FF74  F00C    	movff	postdec2,btemp+11
 16149  012C80  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16150  012C86  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16151  012C8C  006F FF78  F009    	movff	postinc2,btemp+8
 16152  012C92  006F FF78  F00A    	movff	postinc2,btemp+9
 16153  012C98  006F FF78  F00B    	movff	postinc2,btemp+10
 16154  012C9E  006F FF78  F00C    	movff	postinc2,btemp+11
 16155                           
 16156                           ;stkvar	_f @ sp[(-32)+22]
 16157  012CA4  0EF6               	movlw	-10
 16158  012CA6  0060  F027  FFE3   	movff	btemp+8,plusw1
 16159  012CAC  0EF7               	movlw	-9
 16160  012CAE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16161  012CB4  0EF8               	movlw	-8
 16162  012CB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16163  012CBC  0EF9               	movlw	-7
 16164  012CBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16165  012CC4                     l13776:
 16166                           
 16167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 16168                           ;stkvar	_c @ sp[(-32)+31]
 16169  012CC4  0EFF               	movlw	-1
 16170  012CC6  50E3               	movf	plusw1,w,c
 16171  012CC8  6EE6               	movwf	postinc1,c
 16172                           
 16173                           ;stkvar	_f @ sp[(-33)+22]
 16174  012CCA  0EF5               	movlw	-11
 16175  012CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 16176  012CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 16177  012CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 16178  012CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 16179                           
 16180                           ;stkvar	_fp @ sp[(-37)+-2]
 16181  012CE4  0ED9               	movlw	-39
 16182  012CE6  006F FF8F FFE6     	movff	plusw1,postinc1
 16183  012CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 16184  012CF2  EC3F  F089         	call	_efgtoa	;wreg free
 16185  012CF6  D3B6               	goto	l2626
 16186  012CF8                     l13780:
 16187                           
 16188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 16189  012CF8  0E02               	movlw	2
 16190  012CFA  6EE6               	movwf	postinc1,c
 16191  012CFC  0E00               	movlw	0
 16192  012CFE  6EE6               	movwf	postinc1,c
 16193  012D00  0EED               	movlw	low STR_99
 16194  012D02  6EE6               	movwf	postinc1,c
 16195  012D04  0EFF               	movlw	high STR_99
 16196  012D06  6EE6               	movwf	postinc1,c
 16197                           
 16198                           ;stkvar	_ct @ sp[(-36)+26]
 16199  012D08  0EF6               	movlw	246
 16200  012D0A  24E1               	addwf	fsr1l,w,c
 16201  012D0C  6E01               	movwf	btemp^0,c
 16202  012D0E  0EFF               	movlw	255
 16203  012D10  20E2               	addwfc	fsr1h,w,c
 16204  012D12  6E02               	movwf	(btemp+1)^0,c
 16205  012D14  0060  F007  FFE6   	movff	btemp,postinc1
 16206  012D1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16207  012D20  EC05  F0C3         	call	_strncmp	;wreg free
 16208  012D24  5001               	movf	btemp^0,w,c
 16209  012D26  1002               	iorwf	(btemp+1)^0,w,c
 16210  012D28  A4D8               	btfss	status,2,c
 16211  012D2A  D096               	goto	l13800
 16212                           
 16213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 16214                           ;stkvar	_fmt @ sp[(-32)+-4]
 16215  012D2C  0EDC               	movlw	-36
 16216  012D2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16217  012D34  0EDD               	movlw	-35
 16218  012D36  006F FF8F FFDA     	movff	plusw1,fsr2h
 16219  012D3C  006F FF78  F00B    	movff	postinc2,btemp+10
 16220  012D42  006F FF74  F00C    	movff	postdec2,btemp+11
 16221  012D48  0E01               	movlw	1
 16222  012D4A  260B               	addwf	(btemp+10)^0,f,c
 16223  012D4C  0E00               	movlw	0
 16224  012D4E  220C               	addwfc	(btemp+11)^0,f,c
 16225  012D50  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16226  012D56  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16227  012D5C                     	if	0	;tblptru may be non-zero
 16228  012D5C                     	endif
 16229  012D5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16230  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 16231  012D5E  6EF8               	movwf	tblptru,c
 16232  012D60                     	endif
 16233                           
 16234                           ;stkvar	_c @ sp[(-32)+31]
 16235  012D60  0008               	tblrd		*
 16236  012D62  0EFF               	movlw	-1
 16237  012D64  006F FFD7 FFE3     	movff	tablat,plusw1
 16238  012D6A  0EBF               	movlw	191
 16239  012D6C  6E0B               	movwf	(btemp+10)^0,c
 16240  012D6E  0EFF               	movlw	255
 16241  012D70  6E0C               	movwf	(btemp+11)^0,c
 16242                           
 16243                           ;stkvar	_fmt @ sp[(-32)+-4]
 16244  012D72  0EDC               	movlw	-36
 16245  012D74  006F FF8F FFD9     	movff	plusw1,fsr2l
 16246  012D7A  0EDD               	movlw	-35
 16247  012D7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16248  012D82  006F FF7B FFF6     	movff	postinc2,tblptrl
 16249  012D88  006F FF77 FFF7     	movff	postdec2,tblptrh
 16250  012D8E                     	if	0	;tblptru may be non-zero
 16251  012D8E                     	endif
 16252  012D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16253  012D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 16254  012D90  6EF8               	movwf	tblptru,c
 16255  012D92                     	endif
 16256  012D92  0008               	tblrd		*
 16257  012D94  50F5               	movf	tablat,w,c
 16258  012D96  6E09               	movwf	(btemp+8)^0,c
 16259  012D98  6A0A               	clrf	(btemp+9)^0,c
 16260  012D9A  500B               	movf	(btemp+10)^0,w,c
 16261  012D9C  2609               	addwf	(btemp+8)^0,f,c
 16262  012D9E  500C               	movf	(btemp+11)^0,w,c
 16263  012DA0  220A               	addwfc	(btemp+9)^0,f,c
 16264  012DA2  500A               	movf	(btemp+9)^0,w,c
 16265  012DA4  E106               	bnz	u13110
 16266  012DA6  0E1A               	movlw	26
 16267  012DA8  5C09               	subwf	(btemp+8)^0,w,c
 16268  012DAA  B0D8               	btfsc	status,0,c
 16269  012DAC  D002               	goto	u13110
 16270  012DAE  0E01               	movlw	1
 16271  012DB0  D001               	goto	u13120
 16272  012DB2                     u13110:
 16273  012DB2  0E00               	movlw	0
 16274  012DB4                     u13120:
 16275  012DB4  6E0B               	movwf	(btemp+10)^0,c
 16276  012DB6  6A0C               	clrf	(btemp+11)^0,c
 16277                           
 16278                           ;stkvar	_vfpfcnvrt$6220 @ sp[(-32)+2]
 16279  012DB8  0EE2               	movlw	-30
 16280  012DBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16281  012DC0  0EE3               	movlw	-29
 16282  012DC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16283                           
 16284                           ;stkvar	_vfpfcnvrt$6220 @ sp[(-32)+2]
 16285  012DC8  0EE2               	movlw	-30
 16286  012DCA  006F FF8C  F001    	movff	plusw1,btemp
 16287  012DD0  0EE3               	movlw	-29
 16288  012DD2  50E3               	movf	plusw1,w,c
 16289  012DD4  1001               	iorwf	btemp^0,w,c
 16290                           
 16291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 16292                           ;stkvar	_ap @ sp[(-32)+-6]
 16293                           
 16294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 16295                           
 16296                           ;stkvar	_f @ sp[(-32)+22]
 16297                           
 16298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 16299                           ;stkvar	_ap @ sp[(-32)+-6]
 16300  012DD6  0EDA               	movlw	-38
 16301  012DD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16302  012DDE  0EDB               	movlw	-37
 16303  012DE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16304  012DE6  0E04               	movlw	4
 16305  012DE8  5EDE               	subwf	postinc2,f,c
 16306  012DEA  0E00               	movlw	0
 16307  012DEC  5ADD               	subwfb	postdec2,f,c
 16308  012DEE  006F FF78  F00B    	movff	postinc2,btemp+10
 16309  012DF4  006F FF74  F00C    	movff	postdec2,btemp+11
 16310  012DFA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16311  012E00  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16312  012E06  006F FF78  F009    	movff	postinc2,btemp+8
 16313  012E0C  006F FF78  F00A    	movff	postinc2,btemp+9
 16314  012E12  006F FF78  F00B    	movff	postinc2,btemp+10
 16315  012E18  006F FF78  F00C    	movff	postinc2,btemp+11
 16316                           
 16317                           ;stkvar	_f @ sp[(-32)+22]
 16318  012E1E  0EF6               	movlw	-10
 16319  012E20  0060  F027  FFE3   	movff	btemp+8,plusw1
 16320  012E26  0EF7               	movlw	-9
 16321  012E28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16322  012E2E  0EF8               	movlw	-8
 16323  012E30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16324  012E36  0EF9               	movlw	-7
 16325  012E38  0060  F033  FFE3   	movff	btemp+11,plusw1
 16326                           
 16327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 16328                           ;stkvar	_fmt @ sp[(-32)+-4]
 16329  012E3E  0EDC               	movlw	-36
 16330  012E40  006F FF8F FFD9     	movff	plusw1,fsr2l
 16331  012E46  0EDD               	movlw	-35
 16332  012E48  006F FF8F FFDA     	movff	plusw1,fsr2h
 16333  012E4E  0E02               	movlw	2
 16334  012E50  26DE               	addwf	postinc2,f,c
 16335  012E52  0E00               	movlw	0
 16336  012E54  22DD               	addwfc	postdec2,f,c
 16337  012E56  D736               	goto	l13776
 16338  012E58                     l13800:
 16339                           
 16340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 16341                           ;stkvar	_fmt @ sp[(-32)+-4]
 16342  012E58  0EDC               	movlw	-36
 16343  012E5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16344  012E60  0EDD               	movlw	-35
 16345  012E62  006F FF8F FFDA     	movff	plusw1,fsr2h
 16346  012E68  006F FF7B FFF6     	movff	postinc2,tblptrl
 16347  012E6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16348  012E74                     	if	0	;tblptru may be non-zero
 16349  012E74                     	endif
 16350  012E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16351  012E74  0E00               	movlw	low (__mediumconst shr (0+16))
 16352  012E76  6EF8               	movwf	tblptru,c
 16353  012E78                     	endif
 16354  012E78  0008               	tblrd		*
 16355  012E7A  50F5               	movf	tablat,w,c
 16356  012E7C  0A73               	xorlw	115
 16357  012E7E  A4D8               	btfss	status,2,c
 16358  012E80  D042               	goto	l13810
 16359                           
 16360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 16361                           ;stkvar	_fmt @ sp[(-32)+-4]
 16362  012E82  0EDC               	movlw	-36
 16363  012E84  006F FF8F FFD9     	movff	plusw1,fsr2l
 16364  012E8A  0EDD               	movlw	-35
 16365  012E8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16366  012E92  2ADE               	incf	postinc2,f,c
 16367  012E94  0E00               	movlw	0
 16368  012E96  22DD               	addwfc	postdec2,f,c
 16369                           
 16370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 16371                           ;stkvar	_ap @ sp[(-32)+-6]
 16372  012E98  0EDA               	movlw	-38
 16373  012E9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16374  012EA0  0EDB               	movlw	-37
 16375  012EA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16376  012EA8  0E02               	movlw	2
 16377  012EAA  5EDE               	subwf	postinc2,f,c
 16378  012EAC  0E00               	movlw	0
 16379  012EAE  5ADD               	subwfb	postdec2,f,c
 16380  012EB0  006F FF78  F00B    	movff	postinc2,btemp+10
 16381  012EB6  006F FF74  F00C    	movff	postdec2,btemp+11
 16382  012EBC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16383  012EC2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16384  012EC8  006F FF78  F00B    	movff	postinc2,btemp+10
 16385  012ECE  006F FF74  F00C    	movff	postdec2,btemp+11
 16386                           
 16387                           ;stkvar	_cp @ sp[(-32)+29]
 16388  012ED4  0EFE               	movlw	-2
 16389  012ED6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16390  012EDC  0EFD               	movlw	-3
 16391  012EDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16392                           
 16393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 16394                           ;stkvar	_cp @ sp[(-32)+29]
 16395  012EE4  0EFD               	movlw	-3
 16396  012EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 16397  012EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 16398                           
 16399                           ;stkvar	_fp @ sp[(-34)+-2]
 16400  012EF2  0EDC               	movlw	-36
 16401  012EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16402  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 16403  012F00  ECE9  F0BC         	call	_stoa	;wreg free
 16404  012F04  D2AF               	goto	l2626
 16405  012F06                     l13810:
 16406                           
 16407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 16408                           ;stkvar	_fmt @ sp[(-32)+-4]
 16409  012F06  0EDC               	movlw	-36
 16410  012F08  006F FF8F FFD9     	movff	plusw1,fsr2l
 16411  012F0E  0EDD               	movlw	-35
 16412  012F10  006F FF8F FFDA     	movff	plusw1,fsr2h
 16413  012F16  006F FF7B FFF6     	movff	postinc2,tblptrl
 16414  012F1C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16415  012F22                     	if	0	;tblptru may be non-zero
 16416  012F22                     	endif
 16417  012F22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16418  012F22  0E00               	movlw	low (__mediumconst shr (0+16))
 16419  012F24  6EF8               	movwf	tblptru,c
 16420  012F26                     	endif
 16421  012F26  0008               	tblrd		*
 16422  012F28  50F5               	movf	tablat,w,c
 16423  012F2A  0A75               	xorlw	117
 16424  012F2C  A4D8               	btfss	status,2,c
 16425  012F2E  D07C               	goto	l13820
 16426                           
 16427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 16428                           ;stkvar	_fmt @ sp[(-32)+-4]
 16429  012F30  0EDC               	movlw	-36
 16430  012F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 16431  012F38  0EDD               	movlw	-35
 16432  012F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16433  012F40  2ADE               	incf	postinc2,f,c
 16434  012F42  0E00               	movlw	0
 16435  012F44  22DD               	addwfc	postdec2,f,c
 16436                           
 16437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16438                           ;stkvar	_ap @ sp[(-32)+-6]
 16439  012F46  0EDA               	movlw	-38
 16440  012F48  006F FF8F FFD9     	movff	plusw1,fsr2l
 16441  012F4E  0EDB               	movlw	-37
 16442  012F50  006F FF8F FFDA     	movff	plusw1,fsr2h
 16443  012F56  0E02               	movlw	2
 16444  012F58  5EDE               	subwf	postinc2,f,c
 16445  012F5A  0E00               	movlw	0
 16446  012F5C  5ADD               	subwfb	postdec2,f,c
 16447  012F5E  006F FF78  F00B    	movff	postinc2,btemp+10
 16448  012F64  006F FF74  F00C    	movff	postdec2,btemp+11
 16449  012F6A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16450  012F70  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16451  012F76  006F FF78  F00B    	movff	postinc2,btemp+10
 16452  012F7C  006F FF74  F00C    	movff	postdec2,btemp+11
 16453  012F82  500B               	movf	(btemp+10)^0,w,c
 16454  012F84  6E11               	movwf	(btemp+16)^0,c
 16455  012F86  500C               	movf	(btemp+11)^0,w,c
 16456  012F88  6E12               	movwf	(btemp+17)^0,c
 16457  012F8A  6A13               	clrf	(btemp+18)^0,c
 16458  012F8C  6A14               	clrf	(btemp+19)^0,c
 16459  012F8E  6A15               	clrf	(btemp+20)^0,c
 16460  012F90  6A16               	clrf	(btemp+21)^0,c
 16461  012F92  6A17               	clrf	(btemp+22)^0,c
 16462  012F94  6A18               	clrf	(btemp+23)^0,c
 16463                           
 16464                           ;stkvar	_llu @ sp[(-32)+6]
 16465  012F96  0EE6               	movlw	-26
 16466  012F98  0060  F047  FFE3   	movff	btemp+16,plusw1
 16467  012F9E  0EE7               	movlw	-25
 16468  012FA0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16469  012FA6  0EE8               	movlw	-24
 16470  012FA8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16471  012FAE  0EE9               	movlw	-23
 16472  012FB0  0060  F053  FFE3   	movff	btemp+19,plusw1
 16473  012FB6  0EEA               	movlw	-22
 16474  012FB8  0060  F057  FFE3   	movff	btemp+20,plusw1
 16475  012FBE  0EEB               	movlw	-21
 16476  012FC0  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16477  012FC6  0EEC               	movlw	-20
 16478  012FC8  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16479  012FCE  0EED               	movlw	-19
 16480  012FD0  0060  F063  FFE3   	movff	btemp+23,plusw1
 16481                           
 16482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 16483                           ;stkvar	_llu @ sp[(-32)+6]
 16484  012FD6  50E1               	movf	fsr1l,w,c
 16485  012FD8  0FE6               	addlw	-26
 16486  012FDA  6ED9               	movwf	fsr2l,c
 16487  012FDC  50E2               	movf	fsr1h,w,c
 16488  012FDE  6EDA               	movwf	fsr2h,c
 16489  012FE0  0EFF               	movlw	255
 16490  012FE2  22DA               	addwfc	fsr2h,f,c
 16491  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 16492  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 16493  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 16494  012FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 16495  012FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 16496  013002  006F FF7B FFE6     	movff	postinc2,postinc1
 16497  013008  006F FF7B FFE6     	movff	postinc2,postinc1
 16498  01300E  006F FF7B FFE6     	movff	postinc2,postinc1
 16499                           
 16500                           ;stkvar	_fp @ sp[(-40)+-2]
 16501  013014  0ED6               	movlw	-42
 16502  013016  006F FF8F FFE6     	movff	plusw1,postinc1
 16503  01301C  006F FF8F FFE6     	movff	plusw1,postinc1
 16504  013022  ECD1  F0B6         	call	_utoa	;wreg free
 16505  013026  D21E               	goto	l2626
 16506  013028                     l13820:
 16507                           
 16508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 16509  013028  0E02               	movlw	2
 16510  01302A  6EE6               	movwf	postinc1,c
 16511  01302C  0E00               	movlw	0
 16512  01302E  6EE6               	movwf	postinc1,c
 16513  013030  0EF3               	movlw	low STR_104
 16514  013032  6EE6               	movwf	postinc1,c
 16515  013034  0EFF               	movlw	high STR_104
 16516  013036  6EE6               	movwf	postinc1,c
 16517                           
 16518                           ;stkvar	_fmt @ sp[(-36)+-4]
 16519  013038  0ED8               	movlw	-40
 16520  01303A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16521  013040  0ED9               	movlw	-39
 16522  013042  006F FF8F FFDA     	movff	plusw1,fsr2h
 16523  013048  006F FF78  F00B    	movff	postinc2,btemp+10
 16524  01304E  006F FF74  F00C    	movff	postdec2,btemp+11
 16525  013054  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16526  01305A  0060  F033  FFE6   	movff	btemp+11,postinc1
 16527  013060  EC05  F0C3         	call	_strncmp	;wreg free
 16528  013064  5001               	movf	btemp^0,w,c
 16529  013066  1002               	iorwf	(btemp+1)^0,w,c
 16530  013068  A4D8               	btfss	status,2,c
 16531  01306A  D039               	goto	l13830
 16532                           
 16533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 16534                           ;stkvar	_fmt @ sp[(-32)+-4]
 16535  01306C  0EDC               	movlw	-36
 16536  01306E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16537  013074  0EDD               	movlw	-35
 16538  013076  006F FF8F FFDA     	movff	plusw1,fsr2h
 16539  01307C  0E02               	movlw	2
 16540  01307E  26DE               	addwf	postinc2,f,c
 16541  013080  0E00               	movlw	0
 16542  013082  22DD               	addwfc	postdec2,f,c
 16543                           
 16544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16545                           ;stkvar	_ap @ sp[(-32)+-6]
 16546  013084  0EDA               	movlw	-38
 16547  013086  006F FF8F FFD9     	movff	plusw1,fsr2l
 16548  01308C  0EDB               	movlw	-37
 16549  01308E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16550  013094  0E04               	movlw	4
 16551  013096  5EDE               	subwf	postinc2,f,c
 16552  013098  0E00               	movlw	0
 16553  01309A  5ADD               	subwfb	postdec2,f,c
 16554  01309C  006F FF78  F00B    	movff	postinc2,btemp+10
 16555  0130A2  006F FF74  F00C    	movff	postdec2,btemp+11
 16556  0130A8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16557  0130AE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16558  0130B4  006F FF78  F009    	movff	postinc2,btemp+8
 16559  0130BA  006F FF78  F00A    	movff	postinc2,btemp+9
 16560  0130C0  006F FF78  F00B    	movff	postinc2,btemp+10
 16561  0130C6  006F FF78  F00C    	movff	postinc2,btemp+11
 16562  0130CC  5009               	movf	(btemp+8)^0,w,c
 16563  0130CE  6E11               	movwf	(btemp+16)^0,c
 16564  0130D0  500A               	movf	(btemp+9)^0,w,c
 16565  0130D2  6E12               	movwf	(btemp+17)^0,c
 16566  0130D4  500B               	movf	(btemp+10)^0,w,c
 16567  0130D6  6E13               	movwf	(btemp+18)^0,c
 16568  0130D8  500C               	movf	(btemp+11)^0,w,c
 16569  0130DA  6E14               	movwf	(btemp+19)^0,c
 16570  0130DC  D758               	goto	L15
 16571  0130DE                     l13830:
 16572                           
 16573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 16574                           ;stkvar	_fmt @ sp[(-32)+-4]
 16575  0130DE  0EDC               	movlw	-36
 16576  0130E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16577  0130E6  0EDD               	movlw	-35
 16578  0130E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16579  0130EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16580  0130F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16581  0130FA                     	if	0	;tblptru may be non-zero
 16582  0130FA                     	endif
 16583  0130FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16584  0130FA  0E00               	movlw	low (__mediumconst shr (0+16))
 16585  0130FC  6EF8               	movwf	tblptru,c
 16586  0130FE                     	endif
 16587  0130FE  0008               	tblrd		*
 16588  013100  50F5               	movf	tablat,w,c
 16589  013102  0A78               	xorlw	120
 16590  013104  B4D8               	btfsc	status,2,c
 16591  013106  D015               	goto	u13180
 16592                           
 16593                           ;stkvar	_fmt @ sp[(-32)+-4]
 16594  013108  0EDC               	movlw	-36
 16595  01310A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16596  013110  0EDD               	movlw	-35
 16597  013112  006F FF8F FFDA     	movff	plusw1,fsr2h
 16598  013118  006F FF7B FFF6     	movff	postinc2,tblptrl
 16599  01311E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16600  013124                     	if	0	;tblptru may be non-zero
 16601  013124                     	endif
 16602  013124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16603  013124  0E00               	movlw	low (__mediumconst shr (0+16))
 16604  013126  6EF8               	movwf	tblptru,c
 16605  013128                     	endif
 16606  013128  0008               	tblrd		*
 16607  01312A  50F5               	movf	tablat,w,c
 16608  01312C  0A58               	xorlw	88
 16609  01312E  A4D8               	btfss	status,2,c
 16610  013130  D094               	goto	l13844
 16611  013132                     u13180:
 16612                           
 16613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 16614                           ;stkvar	_fmt @ sp[(-32)+-4]
 16615  013132  0EDC               	movlw	-36
 16616  013134  006F FF8F FFD9     	movff	plusw1,fsr2l
 16617  01313A  0EDD               	movlw	-35
 16618  01313C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16619  013142  006F FF7B FFF6     	movff	postinc2,tblptrl
 16620  013148  006F FF77 FFF7     	movff	postdec2,tblptrh
 16621  01314E                     	if	0	;tblptru may be non-zero
 16622  01314E                     	endif
 16623  01314E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16624  01314E  0E00               	movlw	low (__mediumconst shr (0+16))
 16625  013150  6EF8               	movwf	tblptru,c
 16626  013152                     	endif
 16627                           
 16628                           ;stkvar	_c @ sp[(-32)+31]
 16629  013152  0008               	tblrd		*
 16630  013154  0EFF               	movlw	-1
 16631  013156  006F FFD7 FFE3     	movff	tablat,plusw1
 16632                           
 16633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 16634                           ;stkvar	_fmt @ sp[(-32)+-4]
 16635  01315C  0EDC               	movlw	-36
 16636  01315E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16637  013164  0EDD               	movlw	-35
 16638  013166  006F FF8F FFDA     	movff	plusw1,fsr2h
 16639  01316C  2ADE               	incf	postinc2,f,c
 16640  01316E  0E00               	movlw	0
 16641  013170  22DD               	addwfc	postdec2,f,c
 16642                           
 16643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16644                           ;stkvar	_ap @ sp[(-32)+-6]
 16645  013172  0EDA               	movlw	-38
 16646  013174  006F FF8F FFD9     	movff	plusw1,fsr2l
 16647  01317A  0EDB               	movlw	-37
 16648  01317C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16649  013182  0E02               	movlw	2
 16650  013184  5EDE               	subwf	postinc2,f,c
 16651  013186  0E00               	movlw	0
 16652  013188  5ADD               	subwfb	postdec2,f,c
 16653  01318A  006F FF78  F00B    	movff	postinc2,btemp+10
 16654  013190  006F FF74  F00C    	movff	postdec2,btemp+11
 16655  013196  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16656  01319C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16657  0131A2  006F FF78  F00B    	movff	postinc2,btemp+10
 16658  0131A8  006F FF74  F00C    	movff	postdec2,btemp+11
 16659  0131AE  500B               	movf	(btemp+10)^0,w,c
 16660  0131B0  6E11               	movwf	(btemp+16)^0,c
 16661  0131B2  500C               	movf	(btemp+11)^0,w,c
 16662  0131B4  6E12               	movwf	(btemp+17)^0,c
 16663  0131B6  6A13               	clrf	(btemp+18)^0,c
 16664  0131B8  6A14               	clrf	(btemp+19)^0,c
 16665  0131BA  6A15               	clrf	(btemp+20)^0,c
 16666  0131BC  6A16               	clrf	(btemp+21)^0,c
 16667  0131BE  6A17               	clrf	(btemp+22)^0,c
 16668  0131C0  6A18               	clrf	(btemp+23)^0,c
 16669                           
 16670                           ;stkvar	_llu @ sp[(-32)+6]
 16671  0131C2  0EE6               	movlw	-26
 16672  0131C4  0060  F047  FFE3   	movff	btemp+16,plusw1
 16673  0131CA  0EE7               	movlw	-25
 16674  0131CC  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16675  0131D2  0EE8               	movlw	-24
 16676  0131D4  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16677  0131DA  0EE9               	movlw	-23
 16678  0131DC  0060  F053  FFE3   	movff	btemp+19,plusw1
 16679  0131E2  0EEA               	movlw	-22
 16680  0131E4  0060  F057  FFE3   	movff	btemp+20,plusw1
 16681  0131EA  0EEB               	movlw	-21
 16682  0131EC  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16683  0131F2  0EEC               	movlw	-20
 16684  0131F4  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16685  0131FA  0EED               	movlw	-19
 16686  0131FC  0060  F063  FFE3   	movff	btemp+23,plusw1
 16687                           
 16688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 16689                           ;stkvar	_c @ sp[(-32)+31]
 16690  013202  0EFF               	movlw	-1
 16691  013204  50E3               	movf	plusw1,w,c
 16692  013206  6EE6               	movwf	postinc1,c
 16693                           
 16694                           ;stkvar	_llu @ sp[(-33)+6]
 16695  013208  50E1               	movf	fsr1l,w,c
 16696  01320A  0FE5               	addlw	-27
 16697  01320C  6ED9               	movwf	fsr2l,c
 16698  01320E  50E2               	movf	fsr1h,w,c
 16699  013210  6EDA               	movwf	fsr2h,c
 16700  013212  0EFF               	movlw	255
 16701  013214  22DA               	addwfc	fsr2h,f,c
 16702  013216  006F FF7B FFE6     	movff	postinc2,postinc1
 16703  01321C  006F FF7B FFE6     	movff	postinc2,postinc1
 16704  013222  006F FF7B FFE6     	movff	postinc2,postinc1
 16705  013228  006F FF7B FFE6     	movff	postinc2,postinc1
 16706  01322E  006F FF7B FFE6     	movff	postinc2,postinc1
 16707  013234  006F FF7B FFE6     	movff	postinc2,postinc1
 16708  01323A  006F FF7B FFE6     	movff	postinc2,postinc1
 16709  013240  006F FF7B FFE6     	movff	postinc2,postinc1
 16710                           
 16711                           ;stkvar	_fp @ sp[(-41)+-2]
 16712  013246  0ED5               	movlw	-43
 16713  013248  006F FF8F FFE6     	movff	plusw1,postinc1
 16714  01324E  006F FF8F FFE6     	movff	plusw1,postinc1
 16715  013254  EC3E  F0B3         	call	_xtoa	;wreg free
 16716  013258  D105               	goto	l2626
 16717  01325A                     l13844:
 16718                           
 16719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 16720  01325A  0E02               	movlw	2
 16721  01325C  6EE6               	movwf	postinc1,c
 16722  01325E  0E00               	movlw	0
 16723  013260  6EE6               	movwf	postinc1,c
 16724  013262  0EF6               	movlw	low STR_109
 16725  013264  6EE6               	movwf	postinc1,c
 16726  013266  0EFF               	movlw	high STR_109
 16727  013268  6EE6               	movwf	postinc1,c
 16728                           
 16729                           ;stkvar	_fmt @ sp[(-36)+-4]
 16730  01326A  0ED8               	movlw	-40
 16731  01326C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16732  013272  0ED9               	movlw	-39
 16733  013274  006F FF8F FFDA     	movff	plusw1,fsr2h
 16734  01327A  006F FF78  F00B    	movff	postinc2,btemp+10
 16735  013280  006F FF74  F00C    	movff	postdec2,btemp+11
 16736  013286  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16737  01328C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16738  013292  EC05  F0C3         	call	_strncmp	;wreg free
 16739  013296  5001               	movf	btemp^0,w,c
 16740  013298  1002               	iorwf	(btemp+1)^0,w,c
 16741  01329A  B4D8               	btfsc	status,2,c
 16742  01329C  D022               	goto	u13200
 16743  01329E  0E02               	movlw	2
 16744  0132A0  6EE6               	movwf	postinc1,c
 16745  0132A2  0E00               	movlw	0
 16746  0132A4  6EE6               	movwf	postinc1,c
 16747  0132A6  0EE7               	movlw	low STR_113
 16748  0132A8  6EE6               	movwf	postinc1,c
 16749  0132AA  0EFF               	movlw	high STR_113
 16750  0132AC  6EE6               	movwf	postinc1,c
 16751                           
 16752                           ;stkvar	_fmt @ sp[(-36)+-4]
 16753  0132AE  0ED8               	movlw	-40
 16754  0132B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16755  0132B6  0ED9               	movlw	-39
 16756  0132B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16757  0132BE  006F FF78  F00B    	movff	postinc2,btemp+10
 16758  0132C4  006F FF74  F00C    	movff	postdec2,btemp+11
 16759  0132CA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16760  0132D0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16761  0132D6  EC05  F0C3         	call	_strncmp	;wreg free
 16762  0132DA  5001               	movf	btemp^0,w,c
 16763  0132DC  1002               	iorwf	(btemp+1)^0,w,c
 16764  0132DE  A4D8               	btfss	status,2,c
 16765  0132E0  D058               	goto	l13858
 16766  0132E2                     u13200:
 16767                           
 16768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 16769                           ;stkvar	_fmt @ sp[(-32)+-4]
 16770  0132E2  0EDC               	movlw	-36
 16771  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16772  0132EA  0EDD               	movlw	-35
 16773  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16774  0132F2  006F FF78  F00B    	movff	postinc2,btemp+10
 16775  0132F8  006F FF74  F00C    	movff	postdec2,btemp+11
 16776  0132FE  0E01               	movlw	1
 16777  013300  260B               	addwf	(btemp+10)^0,f,c
 16778  013302  0E00               	movlw	0
 16779  013304  220C               	addwfc	(btemp+11)^0,f,c
 16780  013306  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16781  01330C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16782  013312                     	if	0	;tblptru may be non-zero
 16783  013312                     	endif
 16784  013312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16785  013312  0E00               	movlw	low (__mediumconst shr (0+16))
 16786  013314  6EF8               	movwf	tblptru,c
 16787  013316                     	endif
 16788                           
 16789                           ;stkvar	_c @ sp[(-32)+31]
 16790  013316  0008               	tblrd		*
 16791  013318  0EFF               	movlw	-1
 16792  01331A  006F FFD7 FFE3     	movff	tablat,plusw1
 16793                           
 16794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 16795                           ;stkvar	_fmt @ sp[(-32)+-4]
 16796  013320  0EDC               	movlw	-36
 16797  013322  006F FF8F FFD9     	movff	plusw1,fsr2l
 16798  013328  0EDD               	movlw	-35
 16799  01332A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16800  013330  0E02               	movlw	2
 16801  013332  26DE               	addwf	postinc2,f,c
 16802  013334  0E00               	movlw	0
 16803  013336  22DD               	addwfc	postdec2,f,c
 16804                           
 16805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16806                           ;stkvar	_ap @ sp[(-32)+-6]
 16807  013338  0EDA               	movlw	-38
 16808  01333A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16809  013340  0EDB               	movlw	-37
 16810  013342  006F FF8F FFDA     	movff	plusw1,fsr2h
 16811  013348  0E04               	movlw	4
 16812  01334A  5EDE               	subwf	postinc2,f,c
 16813  01334C  0E00               	movlw	0
 16814  01334E  5ADD               	subwfb	postdec2,f,c
 16815  013350  006F FF78  F00B    	movff	postinc2,btemp+10
 16816  013356  006F FF74  F00C    	movff	postdec2,btemp+11
 16817  01335C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16818  013362  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16819  013368  006F FF78  F009    	movff	postinc2,btemp+8
 16820  01336E  006F FF78  F00A    	movff	postinc2,btemp+9
 16821  013374  006F FF78  F00B    	movff	postinc2,btemp+10
 16822  01337A  006F FF78  F00C    	movff	postinc2,btemp+11
 16823  013380  5009               	movf	(btemp+8)^0,w,c
 16824  013382  6E11               	movwf	(btemp+16)^0,c
 16825  013384  500A               	movf	(btemp+9)^0,w,c
 16826  013386  6E12               	movwf	(btemp+17)^0,c
 16827  013388  500B               	movf	(btemp+10)^0,w,c
 16828  01338A  6E13               	movwf	(btemp+18)^0,c
 16829  01338C  500C               	movf	(btemp+11)^0,w,c
 16830  01338E  6E14               	movwf	(btemp+19)^0,c
 16831  013390  D714               	goto	L16
 16832  013392                     l13858:
 16833                           
 16834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 16835                           ;stkvar	_fmt @ sp[(-32)+-4]
 16836  013392  0EDC               	movlw	-36
 16837  013394  006F FF8F FFD9     	movff	plusw1,fsr2l
 16838  01339A  0EDD               	movlw	-35
 16839  01339C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16840  0133A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 16841  0133A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 16842  0133AE                     	if	0	;tblptru may be non-zero
 16843  0133AE                     	endif
 16844  0133AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16845  0133AE  0E00               	movlw	low (__mediumconst shr (0+16))
 16846  0133B0  6EF8               	movwf	tblptru,c
 16847  0133B2                     	endif
 16848  0133B2  0008               	tblrd		*
 16849  0133B4  50F5               	movf	tablat,w,c
 16850  0133B6  0A25               	xorlw	37
 16851  0133B8  A4D8               	btfss	status,2,c
 16852  0133BA  D01A               	goto	l13868
 16853                           
 16854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 16855                           ;stkvar	_fmt @ sp[(-32)+-4]
 16856  0133BC  0EDC               	movlw	-36
 16857  0133BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16858  0133C4  0EDD               	movlw	-35
 16859  0133C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16860  0133CC  2ADE               	incf	postinc2,f,c
 16861  0133CE  0E00               	movlw	0
 16862  0133D0  22DD               	addwfc	postdec2,f,c
 16863                           
 16864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 16865                           ;stkvar	_fp @ sp[(-32)+-2]
 16866  0133D2  0EDE               	movlw	-34
 16867  0133D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16868  0133DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16869  0133E0  0E25               	movlw	37
 16870  0133E2  6EE6               	movwf	postinc1,c
 16871  0133E4  0E00               	movlw	0
 16872  0133E6  6EE6               	movwf	postinc1,c
 16873  0133E8  ECFE  F0D1         	call	_fputc	;wreg free
 16874  0133EC                     l13864:
 16875                           
 16876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 16877  0133EC  0E01               	movlw	1
 16878  0133EE  D00C               	goto	L17
 16879  0133F0                     l13868:
 16880                           
 16881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 16882                           ;stkvar	_fmt @ sp[(-32)+-4]
 16883  0133F0  0EDC               	movlw	-36
 16884  0133F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16885  0133F8  0EDD               	movlw	-35
 16886  0133FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16887  013400  2ADE               	incf	postinc2,f,c
 16888  013402  0E00               	movlw	0
 16889  013404  22DD               	addwfc	postdec2,f,c
 16890                           
 16891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 16892  013406  0E00               	movlw	0
 16893  013408                     L17:
 16894  013408  6E01               	movwf	btemp^0,c
 16895  01340A  0E00               	movlw	0
 16896  01340C  6E02               	movwf	(btemp+1)^0,c
 16897  01340E  D02A               	goto	l2626
 16898  013410                     l13874:
 16899                           
 16900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 16901                           ;stkvar	_fp @ sp[(-32)+-2]
 16902  013410  0EDE               	movlw	-34
 16903  013412  006F FF8F FFE6     	movff	plusw1,postinc1
 16904  013418  006F FF8F FFE6     	movff	plusw1,postinc1
 16905                           
 16906                           ;stkvar	_fmt @ sp[(-34)+-4]
 16907  01341E  0EDA               	movlw	-38
 16908  013420  006F FF8F FFD9     	movff	plusw1,fsr2l
 16909  013426  0EDB               	movlw	-37
 16910  013428  006F FF8F FFDA     	movff	plusw1,fsr2h
 16911  01342E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16912  013434  006F FF77 FFF7     	movff	postdec2,tblptrh
 16913  01343A                     	if	0	;tblptru may be non-zero
 16914  01343A                     	endif
 16915  01343A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16916  01343A  0E00               	movlw	low (__mediumconst shr (0+16))
 16917  01343C  6EF8               	movwf	tblptru,c
 16918  01343E                     	endif
 16919  01343E  0008               	tblrd		*
 16920  013440  50F5               	movf	tablat,w,c
 16921  013442  6EE6               	movwf	postinc1,c
 16922  013444  0E00               	movlw	0
 16923  013446  6EE6               	movwf	postinc1,c
 16924  013448  ECFE  F0D1         	call	_fputc	;wreg free
 16925                           
 16926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 16927                           ;stkvar	_fmt @ sp[(-32)+-4]
 16928  01344C  0EDC               	movlw	-36
 16929  01344E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16930  013454  0EDD               	movlw	-35
 16931  013456  006F FF8F FFDA     	movff	plusw1,fsr2h
 16932  01345C  2ADE               	incf	postinc2,f,c
 16933  01345E  0E00               	movlw	0
 16934  013460  22DD               	addwfc	postdec2,f,c
 16935  013462  D7C4               	goto	l13864
 16936  013464                     l2626:
 16937                           
 16938                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 16939  013464  0EDA               	movlw	218
 16940  013466  26E1               	addwf	fsr1l,f,c
 16941  013468  0EFF               	movlw	255
 16942  01346A  22E2               	addwfc	fsr1h,f,c
 16943  01346C  0012               	return		;funcret
 16944  01346E                     __end_of_vfpfcnvrt:
 16945                           	opt callstack 0
 16946                           
 16947 ;; *************** function _xtoa *****************
 16948 ;; Defined at:
 16949 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16950 ;; Parameters:    Size  Location     Type
 16951 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16952 ;;		 -> f(6), NULL(0), 
 16953 ;;  d               8  [STACK] unsigned long long 
 16954 ;;  x               1  [STACK] unsigned char 
 16955 ;; Auto vars:     Size  Location     Type
 16956 ;;  n               8  [STACK] unsigned long long 
 16957 ;;  c               2  [STACK] int 
 16958 ;;  i               2  [STACK] int 
 16959 ;;  w               2  [STACK] int 
 16960 ;;  p               2  [STACK] int 
 16961 ;; Return value:  Size  Location     Type
 16962 ;;                  2  [STACK] int 
 16963 ;; Registers used:
 16964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16965 ;; Tracked objects:
 16966 ;;		On entry : 0/0
 16967 ;;		On exit  : 0/0
 16968 ;;		Unchanged: 0/0
 16969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16974 ;;Total ram usage:        0 bytes
 16975 ;; Hardware stack levels used:    1
 16976 ;; Hardware stack levels required when called:   20
 16977 ;; This function calls:
 16978 ;;		_isalpha
 16979 ;;		_isupper
 16980 ;;		_pad
 16981 ;;		_toupper
 16982 ;; This function is called by:
 16983 ;;		_vfpfcnvrt
 16984 ;; This function uses a reentrant model
 16985 ;;
 16986                           
 16987                           	psect	text66
 16988  01667C                     __ptext66:
 16989                           	opt callstack 0
 16990  01667C                     _xtoa:
 16991                           	opt callstack 0
 16992                           
 16993                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16994  01667C  0E14               	movlw	20
 16995  01667E  26E1               	addwf	fsr1l,f,c
 16996  016680  0E00               	movlw	0
 16997  016682  22E2               	addwfc	fsr1h,f,c
 16998                           
 16999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 17000                           
 17001                           ;incstack = 0
 17002 ;; hardware stack exceeded
 17003  016684  AE3D               	btfss	(_prec+1)^0,7,c
 17004                           
 17005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 17006  016686  923E               	bcf	_flags^0,1,c
 17007                           
 17008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 17009  016688  BE3D               	btfsc	(_prec+1)^0,7,c
 17010  01668A  D005               	goto	u12740
 17011  01668C  503D               	movf	(_prec+1)^0,w,c
 17012  01668E  E110               	bnz	l13594
 17013  016690  043C               	decf	_prec^0,w,c
 17014  016692  B0D8               	btfsc	status,0,c
 17015  016694  D00D               	goto	l13594
 17016  016696                     u12740:
 17017  016696  0E01               	movlw	1
 17018  016698  6E0B               	movwf	(btemp+10)^0,c
 17019  01669A  0E00               	movlw	0
 17020  01669C  6E0C               	movwf	(btemp+11)^0,c
 17021                           
 17022                           ;stkvar	_p @ sp[(-20)+18]
 17023  01669E  0EFE               	movlw	-2
 17024  0166A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17025  0166A6  0EFF               	movlw	-1
 17026  0166A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17027  0166AE  D008               	goto	l2576
 17028  0166B0                     l13594:
 17029                           
 17030                           ;stkvar	_p @ sp[(-20)+18]
 17031  0166B0  0EFE               	movlw	-2
 17032  0166B2  0060  F0F3  FFE3   	movff	_prec,plusw1
 17033  0166B8  0EFF               	movlw	-1
 17034  0166BA  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17035  0166C0                     l2576:
 17036                           
 17037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 17038                           ;stkvar	_w @ sp[(-20)+16]
 17039  0166C0  0EFC               	movlw	-4
 17040  0166C2  0060  F0EB  FFE3   	movff	_width,plusw1
 17041  0166C8  0EFD               	movlw	-3
 17042  0166CA  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17043                           
 17044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 17045  0166D0  A83E               	btfss	_flags^0,4,c
 17046  0166D2  D00B               	goto	l13600
 17047                           
 17048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 17049                           ;stkvar	_w @ sp[(-20)+16]
 17050  0166D4  50E1               	movf	fsr1l,w,c
 17051  0166D6  0FFC               	addlw	-4
 17052  0166D8  6ED9               	movwf	fsr2l,c
 17053  0166DA  50E2               	movf	fsr1h,w,c
 17054  0166DC  6EDA               	movwf	fsr2h,c
 17055  0166DE  0EFF               	movlw	255
 17056  0166E0  22DA               	addwfc	fsr2h,f,c
 17057  0166E2  0EFE               	movlw	254
 17058  0166E4  26DE               	addwf	postinc2,f,c
 17059  0166E6  0EFF               	movlw	255
 17060  0166E8  22DD               	addwfc	postdec2,f,c
 17061  0166EA                     l13600:
 17062                           
 17063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 17064                           ;stkvar	_d @ sp[(-20)+-10]
 17065  0166EA  0EE2               	movlw	226
 17066  0166EC  24E1               	addwf	fsr1l,w,c
 17067  0166EE  6ED9               	movwf	fsr2l,c
 17068  0166F0  0EFF               	movlw	255
 17069  0166F2  20E2               	addwfc	fsr1h,w,c
 17070  0166F4  6EDA               	movwf	fsr2h,c
 17071                           
 17072                           ;stkvar	_n @ sp[(-20)+4]
 17073  0166F6  0E08               	movlw	8
 17074  0166F8  6E01               	movwf	btemp^0,c
 17075  0166FA  0EF0               	movlw	-16
 17076  0166FC                     us1276999:
 17077  0166FC  006F FF7B FFE3     	movff	postinc2,plusw1
 17078  016702  28E8               	incf	wreg,w,c
 17079  016704  2E01               	decfsz	btemp^0,f,c
 17080  016706  D7FA               	bra	us1276999
 17081                           
 17082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 17083  016708  0E4F               	movlw	79
 17084  01670A  6E0B               	movwf	(btemp+10)^0,c
 17085  01670C  0E00               	movlw	0
 17086  01670E  6E0C               	movwf	(btemp+11)^0,c
 17087                           
 17088                           ;stkvar	_i @ sp[(-20)+14]
 17089  016710  0EFA               	movlw	-6
 17090  016712  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17091  016718  0EFB               	movlw	-5
 17092  01671A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17093                           
 17094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 17095  016720  0102               	movlb	2	; () banked
 17096  016722  6B92               	clrf	(_dbuf+79)& (0+255),b
 17097                           
 17098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17099  016724  D0EE               	goto	l13638
 17100  016726                     l13606:
 17101                           
 17102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 17103                           ;stkvar	_i @ sp[(-20)+14]
 17104  016726  50E1               	movf	fsr1l,w,c
 17105  016728  0FFA               	addlw	-6
 17106  01672A  6ED9               	movwf	fsr2l,c
 17107  01672C  50E2               	movf	fsr1h,w,c
 17108  01672E  6EDA               	movwf	fsr2h,c
 17109  016730  0EFF               	movlw	255
 17110  016732  22DA               	addwfc	fsr2h,f,c
 17111  016734  06DE               	decf	postinc2,f,c
 17112  016736  0E00               	movlw	0
 17113  016738  5ADD               	subwfb	postdec2,f,c
 17114                           
 17115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 17116                           ;stkvar	_n @ sp[(-20)+4]
 17117  01673A  0EF0               	movlw	-16
 17118  01673C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17119  016742  0EF1               	movlw	-15
 17120  016744  006F FF8C  F00C    	movff	plusw1,btemp+11
 17121  01674A  0E0F               	movlw	15
 17122  01674C  160B               	andwf	(btemp+10)^0,f,c
 17123  01674E  0E00               	movlw	0
 17124  016750  160C               	andwf	(btemp+11)^0,f,c
 17125                           
 17126                           ;stkvar	_c @ sp[(-20)+12]
 17127  016752  0EF8               	movlw	-8
 17128  016754  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17129  01675A  0EF9               	movlw	-7
 17130  01675C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17131                           
 17132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 17133                           ;stkvar	_c @ sp[(-20)+12]
 17134  016762  0EF9               	movlw	-7
 17135  016764  BEE3               	btfsc	plusw1,7,c
 17136  016766  D00F               	goto	l13614
 17137  016768  0EF9               	movlw	-7
 17138  01676A  50E3               	movf	plusw1,w,c
 17139  01676C  E108               	bnz	u12770
 17140  01676E  0EF8               	movlw	-8
 17141  016770  006F FF8C  F001    	movff	plusw1,btemp
 17142  016776  0E0A               	movlw	10
 17143  016778  5E01               	subwf	btemp^0,f,c
 17144  01677A  A0D8               	btfss	status,0,c
 17145  01677C  D004               	goto	l13614
 17146  01677E                     u12770:
 17147                           
 17148                           ;stkvar	_c @ sp[(-20)+12]
 17149  01677E  0EF8               	movlw	-8
 17150  016780  50E3               	movf	plusw1,w,c
 17151  016782  0F57               	addlw	87
 17152  016784  D003               	goto	L18
 17153  016786                     l13614:
 17154                           
 17155                           ;stkvar	_c @ sp[(-20)+12]
 17156  016786  0EF8               	movlw	-8
 17157  016788  50E3               	movf	plusw1,w,c
 17158  01678A  0F30               	addlw	48
 17159  01678C                     L18:
 17160  01678C  6E0B               	movwf	(btemp+10)^0,c
 17161  01678E  0EF9               	movlw	-7
 17162  016790  006F FF8C  F00C    	movff	plusw1,btemp+11
 17163  016796  0E00               	movlw	0
 17164  016798  220C               	addwfc	(btemp+11)^0,f,c
 17165                           
 17166                           ;stkvar	_c @ sp[(-20)+12]
 17167  01679A  0EF8               	movlw	-8
 17168  01679C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17169  0167A2  0EF9               	movlw	-7
 17170  0167A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17171  0167AA  0EBF               	movlw	191
 17172  0167AC  6E0B               	movwf	(btemp+10)^0,c
 17173  0167AE  0EFF               	movlw	255
 17174  0167B0  6E0C               	movwf	(btemp+11)^0,c
 17175                           
 17176                           ;stkvar	_x @ sp[(-20)+-11]
 17177  0167B2  0EE1               	movlw	-31
 17178  0167B4  50E3               	movf	plusw1,w,c
 17179  0167B6  6E09               	movwf	(btemp+8)^0,c
 17180  0167B8  6A0A               	clrf	(btemp+9)^0,c
 17181  0167BA  500B               	movf	(btemp+10)^0,w,c
 17182  0167BC  2609               	addwf	(btemp+8)^0,f,c
 17183  0167BE  500C               	movf	(btemp+11)^0,w,c
 17184  0167C0  220A               	addwfc	(btemp+9)^0,f,c
 17185  0167C2  500A               	movf	(btemp+9)^0,w,c
 17186  0167C4  E106               	bnz	u12780
 17187  0167C6  0E1A               	movlw	26
 17188  0167C8  5C09               	subwf	(btemp+8)^0,w,c
 17189  0167CA  B0D8               	btfsc	status,0,c
 17190  0167CC  D002               	goto	u12780
 17191  0167CE  0E01               	movlw	1
 17192  0167D0  D001               	goto	u12790
 17193  0167D2                     u12780:
 17194  0167D2  0E00               	movlw	0
 17195  0167D4                     u12790:
 17196  0167D4  6E0B               	movwf	(btemp+10)^0,c
 17197  0167D6  6A0C               	clrf	(btemp+11)^0,c
 17198                           
 17199                           ;stkvar	_xtoa$6193 @ sp[(-20)+2]
 17200  0167D8  0EEE               	movlw	-18
 17201  0167DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17202  0167E0  0EEF               	movlw	-17
 17203  0167E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17204                           
 17205                           ;stkvar	_xtoa$6193 @ sp[(-20)+2]
 17206  0167E8  0EEE               	movlw	-18
 17207  0167EA  006F FF8C  F001    	movff	plusw1,btemp
 17208  0167F0  0EEF               	movlw	-17
 17209  0167F2  50E3               	movf	plusw1,w,c
 17210  0167F4  1001               	iorwf	btemp^0,w,c
 17211  0167F6  B4D8               	btfsc	status,2,c
 17212  0167F8  D041               	goto	l13630
 17213  0167FA  0E9F               	movlw	159
 17214  0167FC  6E0B               	movwf	(btemp+10)^0,c
 17215  0167FE  0EFF               	movlw	255
 17216  016800  6E0C               	movwf	(btemp+11)^0,c
 17217                           
 17218                           ;stkvar	_c @ sp[(-20)+12]
 17219  016802  0EF8               	movlw	-8
 17220  016804  006F FF8C  F009    	movff	plusw1,btemp+8
 17221  01680A  0EF9               	movlw	-7
 17222  01680C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17223  016812  0E20               	movlw	32
 17224  016814  1209               	iorwf	(btemp+8)^0,f,c
 17225  016816  0E00               	movlw	0
 17226  016818  120A               	iorwf	(btemp+9)^0,f,c
 17227  01681A  500B               	movf	(btemp+10)^0,w,c
 17228  01681C  2609               	addwf	(btemp+8)^0,f,c
 17229  01681E  500C               	movf	(btemp+11)^0,w,c
 17230  016820  220A               	addwfc	(btemp+9)^0,f,c
 17231  016822  500A               	movf	(btemp+9)^0,w,c
 17232  016824  E106               	bnz	u12810
 17233  016826  0E1A               	movlw	26
 17234  016828  5C09               	subwf	(btemp+8)^0,w,c
 17235  01682A  B0D8               	btfsc	status,0,c
 17236  01682C  D002               	goto	u12810
 17237  01682E  0E01               	movlw	1
 17238  016830  D001               	goto	u12820
 17239  016832                     u12810:
 17240  016832  0E00               	movlw	0
 17241  016834                     u12820:
 17242  016834  6E0B               	movwf	(btemp+10)^0,c
 17243  016836  6A0C               	clrf	(btemp+11)^0,c
 17244                           
 17245                           ;stkvar	_xtoa$6194 @ sp[(-20)+0]
 17246  016838  0EEC               	movlw	-20
 17247  01683A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17248  016840  0EED               	movlw	-19
 17249  016842  0060  F033  FFE3   	movff	btemp+11,plusw1
 17250                           
 17251                           ;stkvar	_xtoa$6194 @ sp[(-20)+0]
 17252  016848  0EEC               	movlw	-20
 17253  01684A  006F FF8C  F001    	movff	plusw1,btemp
 17254  016850  0EED               	movlw	-19
 17255  016852  50E3               	movf	plusw1,w,c
 17256  016854  1001               	iorwf	btemp^0,w,c
 17257  016856  B4D8               	btfsc	status,2,c
 17258  016858  D011               	goto	l13630
 17259                           
 17260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 17261                           ;stkvar	_c @ sp[(-20)+12]
 17262  01685A  0EF8               	movlw	-8
 17263  01685C  006F FF8F FFE6     	movff	plusw1,postinc1
 17264  016862  006F FF8F FFE6     	movff	plusw1,postinc1
 17265  016868  ECFE  F0DD         	call	_toupper	;wreg free
 17266                           
 17267                           ;stkvar	_c @ sp[(-20)+12]
 17268  01686C  0EF8               	movlw	-8
 17269  01686E  0060  F007  FFE3   	movff	btemp,plusw1
 17270  016874  0EF9               	movlw	-7
 17271  016876  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17272  01687C                     l13630:
 17273                           
 17274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 17275                           ;stkvar	_c @ sp[(-20)+12]
 17276                           ;stkvar	_i @ sp[(-20)+14]
 17277  01687C  0EFA               	movlw	-6
 17278  01687E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17279  016884  0EFB               	movlw	-5
 17280  016886  006F FF8C  F00C    	movff	plusw1,btemp+11
 17281  01688C  0E43               	movlw	low _dbuf
 17282  01688E  240B               	addwf	(btemp+10)^0,w,c
 17283  016890  6ED9               	movwf	fsr2l,c
 17284  016892  0E02               	movlw	high _dbuf
 17285  016894  200C               	addwfc	(btemp+11)^0,w,c
 17286  016896  6EDA               	movwf	fsr2h,c
 17287  016898  0EF8               	movlw	-8
 17288  01689A  006F FF8F FFDF     	movff	plusw1,indf2
 17289                           
 17290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 17291                           ;stkvar	_p @ sp[(-20)+18]
 17292  0168A0  50E1               	movf	fsr1l,w,c
 17293  0168A2  0FFE               	addlw	-2
 17294  0168A4  6ED9               	movwf	fsr2l,c
 17295  0168A6  50E2               	movf	fsr1h,w,c
 17296  0168A8  6EDA               	movwf	fsr2h,c
 17297  0168AA  0EFF               	movlw	255
 17298  0168AC  22DA               	addwfc	fsr2h,f,c
 17299  0168AE  06DE               	decf	postinc2,f,c
 17300  0168B0  0E00               	movlw	0
 17301  0168B2  5ADD               	subwfb	postdec2,f,c
 17302                           
 17303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 17304                           ;stkvar	_w @ sp[(-20)+16]
 17305  0168B4  50E1               	movf	fsr1l,w,c
 17306  0168B6  0FFC               	addlw	-4
 17307  0168B8  6ED9               	movwf	fsr2l,c
 17308  0168BA  50E2               	movf	fsr1h,w,c
 17309  0168BC  6EDA               	movwf	fsr2h,c
 17310  0168BE  0EFF               	movlw	255
 17311  0168C0  22DA               	addwfc	fsr2h,f,c
 17312  0168C2  06DE               	decf	postinc2,f,c
 17313  0168C4  0E00               	movlw	0
 17314  0168C6  5ADD               	subwfb	postdec2,f,c
 17315                           
 17316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 17317  0168C8  0E04               	movlw	4
 17318  0168CA  6E0C               	movwf	(btemp+11)^0,c
 17319                           
 17320                           ;stkvar	_n @ sp[(-20)+4]
 17321  0168CC  50E1               	movf	fsr1l,w,c
 17322  0168CE  0FF0               	addlw	-16
 17323  0168D0  6ED9               	movwf	fsr2l,c
 17324  0168D2  50E2               	movf	fsr1h,w,c
 17325  0168D4  6EDA               	movwf	fsr2h,c
 17326  0168D6  0EFF               	movlw	255
 17327  0168D8  22DA               	addwfc	fsr2h,f,c
 17328  0168DA  280C               	incf	(btemp+11)^0,w,c
 17329  0168DC  52DE               	movf	postinc2,f,c
 17330  0168DE  D00F               	goto	u12840
 17331  0168E0                     u12845:
 17332  0168E0  52DE               	movf	postinc2,f,c
 17333  0168E2  52DE               	movf	postinc2,f,c
 17334  0168E4  52DE               	movf	postinc2,f,c
 17335  0168E6  52DE               	movf	postinc2,f,c
 17336  0168E8  52DE               	movf	postinc2,f,c
 17337  0168EA  52DE               	movf	postinc2,f,c
 17338  0168EC  90D8               	bcf	status,0,c
 17339  0168EE  32DD               	rrcf	postdec2,f,c
 17340  0168F0  32DD               	rrcf	postdec2,f,c
 17341  0168F2  32DD               	rrcf	postdec2,f,c
 17342  0168F4  32DD               	rrcf	postdec2,f,c
 17343  0168F6  32DD               	rrcf	postdec2,f,c
 17344  0168F8  32DD               	rrcf	postdec2,f,c
 17345  0168FA  32DD               	rrcf	postdec2,f,c
 17346  0168FC  32DE               	rrcf	postinc2,f,c
 17347  0168FE                     u12840:
 17348  0168FE  2EE8               	decfsz	wreg,f,c
 17349  016900  D7EF               	goto	u12845
 17350  016902                     l13638:
 17351                           
 17352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17353                           ;stkvar	_i @ sp[(-20)+14]
 17354  016902  0EFB               	movlw	-5
 17355  016904  BEE3               	btfsc	plusw1,7,c
 17356  016906  D03A               	goto	u12890
 17357  016908  0EFB               	movlw	-5
 17358  01690A  50E3               	movf	plusw1,w,c
 17359  01690C  E108               	bnz	u12850
 17360  01690E  0EFA               	movlw	-6
 17361  016910  006F FF8C  F001    	movff	plusw1,btemp
 17362  016916  0E02               	movlw	2
 17363  016918  5E01               	subwf	btemp^0,f,c
 17364  01691A  A0D8               	btfss	status,0,c
 17365  01691C  D02F               	goto	u12890
 17366  01691E                     u12850:
 17367                           
 17368                           ;stkvar	_n @ sp[(-20)+4]
 17369  01691E  0EF0               	movlw	-16
 17370  016920  50E3               	movf	plusw1,w,c
 17371  016922  E115               	bnz	u12861
 17372  016924  0EF1               	movlw	-15
 17373  016926  50E3               	movf	plusw1,w,c
 17374  016928  E112               	bnz	u12861
 17375  01692A  0EF2               	movlw	-14
 17376  01692C  50E3               	movf	plusw1,w,c
 17377  01692E  E10F               	bnz	u12861
 17378  016930  0EF3               	movlw	-13
 17379  016932  50E3               	movf	plusw1,w,c
 17380  016934  E10C               	bnz	u12861
 17381  016936  0EF4               	movlw	-12
 17382  016938  50E3               	movf	plusw1,w,c
 17383  01693A  E109               	bnz	u12861
 17384  01693C  0EF5               	movlw	-11
 17385  01693E  50E3               	movf	plusw1,w,c
 17386  016940  E106               	bnz	u12861
 17387  016942  0EF6               	movlw	-10
 17388  016944  50E3               	movf	plusw1,w,c
 17389  016946  E103               	bnz	u12861
 17390  016948  0EF7               	movlw	-9
 17391  01694A  50E3               	movf	plusw1,w,c
 17392  01694C  A4D8               	btfss	status,2,c
 17393  01694E                     u12861:
 17394  01694E  D6EB               	goto	l13606
 17395                           
 17396                           ;stkvar	_p @ sp[(-20)+18]
 17397  016950  0EFF               	movlw	-1
 17398  016952  BEE3               	btfsc	plusw1,7,c
 17399  016954  D007               	goto	u12870
 17400  016956  0EFF               	movlw	-1
 17401  016958  50E3               	movf	plusw1,w,c
 17402  01695A  E103               	bnz	u12871
 17403  01695C  0EFE               	movlw	-2
 17404  01695E  04E3               	decf	plusw1,w,c
 17405  016960  B0D8               	btfsc	status,0,c
 17406  016962                     u12871:
 17407  016962  D6E1               	goto	l13606
 17408  016964                     u12870:
 17409                           
 17410                           ;stkvar	_w @ sp[(-20)+16]
 17411  016964  0EFD               	movlw	-3
 17412  016966  BEE3               	btfsc	plusw1,7,c
 17413  016968  D009               	goto	u12890
 17414  01696A  0EFD               	movlw	-3
 17415  01696C  50E3               	movf	plusw1,w,c
 17416  01696E  E104               	bnz	u12880
 17417  016970  0EFC               	movlw	-4
 17418  016972  04E3               	decf	plusw1,w,c
 17419  016974  A0D8               	btfss	status,0,c
 17420  016976  D002               	goto	u12890
 17421  016978                     u12880:
 17422  016978  B23E               	btfsc	_flags^0,1,c
 17423  01697A  D6D5               	goto	l13606
 17424  01697C                     u12890:
 17425                           
 17426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 17427  01697C  A83E               	btfss	_flags^0,4,c
 17428  01697E  D036               	goto	l13654
 17429                           
 17430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 17431                           ;stkvar	_i @ sp[(-20)+14]
 17432  016980  50E1               	movf	fsr1l,w,c
 17433  016982  0FFA               	addlw	-6
 17434  016984  6ED9               	movwf	fsr2l,c
 17435  016986  50E2               	movf	fsr1h,w,c
 17436  016988  6EDA               	movwf	fsr2h,c
 17437  01698A  0EFF               	movlw	255
 17438  01698C  22DA               	addwfc	fsr2h,f,c
 17439  01698E  06DE               	decf	postinc2,f,c
 17440  016990  0E00               	movlw	0
 17441  016992  5ADD               	subwfb	postdec2,f,c
 17442                           
 17443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 17444                           ;stkvar	_x @ sp[(-20)+-11]
 17445                           ;stkvar	_i @ sp[(-20)+14]
 17446  016994  0EFA               	movlw	-6
 17447  016996  006F FF8C  F00B    	movff	plusw1,btemp+10
 17448  01699C  0EFB               	movlw	-5
 17449  01699E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17450  0169A4  0E43               	movlw	low _dbuf
 17451  0169A6  240B               	addwf	(btemp+10)^0,w,c
 17452  0169A8  6ED9               	movwf	fsr2l,c
 17453  0169AA  0E02               	movlw	high _dbuf
 17454  0169AC  200C               	addwfc	(btemp+11)^0,w,c
 17455  0169AE  6EDA               	movwf	fsr2h,c
 17456  0169B0  0EE1               	movlw	-31
 17457  0169B2  006F FF8F FFDF     	movff	plusw1,indf2
 17458                           
 17459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 17460                           ;stkvar	_i @ sp[(-20)+14]
 17461  0169B8  50E1               	movf	fsr1l,w,c
 17462  0169BA  0FFA               	addlw	-6
 17463  0169BC  6ED9               	movwf	fsr2l,c
 17464  0169BE  50E2               	movf	fsr1h,w,c
 17465  0169C0  6EDA               	movwf	fsr2h,c
 17466  0169C2  0EFF               	movlw	255
 17467  0169C4  22DA               	addwfc	fsr2h,f,c
 17468  0169C6  06DE               	decf	postinc2,f,c
 17469  0169C8  0E00               	movlw	0
 17470  0169CA  5ADD               	subwfb	postdec2,f,c
 17471                           
 17472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 17473                           ;stkvar	_i @ sp[(-20)+14]
 17474  0169CC  0EFA               	movlw	-6
 17475  0169CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 17476  0169D4  0EFB               	movlw	-5
 17477  0169D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17478  0169DC  0E43               	movlw	low _dbuf
 17479  0169DE  240B               	addwf	(btemp+10)^0,w,c
 17480  0169E0  6ED9               	movwf	fsr2l,c
 17481  0169E2  0E02               	movlw	high _dbuf
 17482  0169E4  200C               	addwfc	(btemp+11)^0,w,c
 17483  0169E6  6EDA               	movwf	fsr2h,c
 17484  0169E8  0E30               	movlw	48
 17485  0169EA  6EDF               	movwf	indf2,c
 17486  0169EC                     l13654:
 17487                           
 17488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 17489                           ;stkvar	_w @ sp[(-20)+16]
 17490  0169EC  0EFC               	movlw	-4
 17491  0169EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17492  0169F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17493                           
 17494                           ;stkvar	_i @ sp[(-22)+14]
 17495  0169FA  0E43               	movlw	low _dbuf
 17496  0169FC  6E0B               	movwf	(btemp+10)^0,c
 17497  0169FE  0E02               	movlw	high _dbuf
 17498  016A00  6E0C               	movwf	(btemp+11)^0,c
 17499  016A02  0EF8               	movlw	-8
 17500  016A04  50E3               	movf	plusw1,w,c
 17501  016A06  260B               	addwf	(btemp+10)^0,f,c
 17502  016A08  0EF9               	movlw	-7
 17503  016A0A  50E3               	movf	plusw1,w,c
 17504  016A0C  220C               	addwfc	(btemp+11)^0,f,c
 17505  016A0E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17506  016A14  0060  F033  FFE6   	movff	btemp+11,postinc1
 17507                           
 17508                           ;stkvar	_fp @ sp[(-24)+-2]
 17509  016A1A  0EE6               	movlw	-26
 17510  016A1C  006F FF8F FFE6     	movff	plusw1,postinc1
 17511  016A22  006F FF8F FFE6     	movff	plusw1,postinc1
 17512  016A28  EC34  F0D4         	call	_pad	;wreg free
 17513                           
 17514                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 17515  016A2C  0EE1               	movlw	225
 17516  016A2E  26E1               	addwf	fsr1l,f,c
 17517  016A30  0EFF               	movlw	255
 17518  016A32  22E2               	addwfc	fsr1h,f,c
 17519  016A34  0012               	return		;funcret
 17520  016A36                     __end_of_xtoa:
 17521                           	opt callstack 0
 17522                           
 17523 ;; *************** function _toupper *****************
 17524 ;; Defined at:
 17525 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 17526 ;; Parameters:    Size  Location     Type
 17527 ;;  c               2  [STACK] int 
 17528 ;; Auto vars:     Size  Location     Type
 17529 ;;		None
 17530 ;; Return value:  Size  Location     Type
 17531 ;;                  2  [STACK] int 
 17532 ;; Registers used:
 17533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17534 ;; Tracked objects:
 17535 ;;		On entry : 0/2
 17536 ;;		On exit  : 0/0
 17537 ;;		Unchanged: 0/0
 17538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17543 ;;Total ram usage:        0 bytes
 17544 ;; Hardware stack levels used:    1
 17545 ;; Hardware stack levels required when called:   16
 17546 ;; This function calls:
 17547 ;;		_islower
 17548 ;; This function is called by:
 17549 ;;		_xtoa
 17550 ;; This function uses a reentrant model
 17551 ;;
 17552                           
 17553                           	psect	text67
 17554  01BBFC                     __ptext67:
 17555                           	opt callstack 0
 17556  01BBFC                     _toupper:
 17557                           	opt callstack 0
 17558                           
 17559                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17560  01BBFC  52E6               	movf	postinc1,f,c
 17561  01BBFE  52E6               	movf	postinc1,f,c
 17562                           
 17563                           ;stkvar	_c @ sp[(-2)+-2]
 17564                           
 17565                           ;incstack = 0
 17566 ;; hardware stack exceeded
 17567  01BC00  0EFC               	movlw	-4
 17568  01BC02  50E3               	movf	plusw1,w,c
 17569  01BC04  0F9F               	addlw	159
 17570  01BC06  6E0B               	movwf	(btemp+10)^0,c
 17571  01BC08  0EFD               	movlw	-3
 17572  01BC0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17573  01BC10  0EFF               	movlw	255
 17574  01BC12  220C               	addwfc	(btemp+11)^0,f,c
 17575  01BC14  500C               	movf	(btemp+11)^0,w,c
 17576  01BC16  E106               	bnz	u6720
 17577  01BC18  0E1A               	movlw	26
 17578  01BC1A  5C0B               	subwf	(btemp+10)^0,w,c
 17579  01BC1C  B0D8               	btfsc	status,0,c
 17580  01BC1E  D002               	goto	u6720
 17581  01BC20  0E01               	movlw	1
 17582  01BC22  D001               	goto	u6730
 17583  01BC24                     u6720:
 17584  01BC24  0E00               	movlw	0
 17585  01BC26                     u6730:
 17586  01BC26  6E0B               	movwf	(btemp+10)^0,c
 17587  01BC28  6A0C               	clrf	(btemp+11)^0,c
 17588                           
 17589                           ;stkvar	_toupper$7000 @ sp[(-2)+0]
 17590  01BC2A  0EFE               	movlw	-2
 17591  01BC2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17592  01BC32  0EFF               	movlw	-1
 17593  01BC34  0060  F033  FFE3   	movff	btemp+11,plusw1
 17594                           
 17595                           ;stkvar	_toupper$7000 @ sp[(-2)+0]
 17596  01BC3A  0EFE               	movlw	-2
 17597  01BC3C  006F FF8C  F001    	movff	plusw1,btemp
 17598  01BC42  0EFF               	movlw	-1
 17599  01BC44  50E3               	movf	plusw1,w,c
 17600  01BC46  1001               	iorwf	btemp^0,w,c
 17601  01BC48  B4D8               	btfsc	status,2,c
 17602  01BC4A  D00D               	goto	l8832
 17603                           
 17604                           ;stkvar	_c @ sp[(-2)+-2]
 17605  01BC4C  0EFC               	movlw	-4
 17606  01BC4E  006F FF8C  F001    	movff	plusw1,btemp
 17607  01BC54  0EFD               	movlw	-3
 17608  01BC56  006F FF8C  F002    	movff	plusw1,btemp+1
 17609  01BC5C  0E5F               	movlw	95
 17610  01BC5E  1601               	andwf	btemp^0,f,c
 17611  01BC60  0E00               	movlw	0
 17612  01BC62  1602               	andwf	(btemp+1)^0,f,c
 17613  01BC64  D008               	goto	l3743
 17614  01BC66                     l8832:
 17615                           
 17616                           ;stkvar	_c @ sp[(-2)+-2]
 17617  01BC66  0EFC               	movlw	-4
 17618  01BC68  006F FF8C  F001    	movff	plusw1,btemp
 17619  01BC6E  0EFD               	movlw	-3
 17620  01BC70  006F FF8C  F002    	movff	plusw1,btemp+1
 17621  01BC76                     l3743:
 17622                           
 17623                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17624  01BC76  52E5               	movf	postdec1,f,c
 17625  01BC78  52E5               	movf	postdec1,f,c
 17626  01BC7A  52E5               	movf	postdec1,f,c
 17627  01BC7C  52E5               	movf	postdec1,f,c
 17628  01BC7E  0012               	return		;funcret
 17629  01BC80                     __end_of_toupper:
 17630                           	opt callstack 0
 17631                           
 17632 ;; *************** function _islower *****************
 17633 ;; Defined at:
 17634 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 17635 ;; Parameters:    Size  Location     Type
 17636 ;;  c               2  [STACK] int 
 17637 ;; Auto vars:     Size  Location     Type
 17638 ;;		None
 17639 ;; Return value:  Size  Location     Type
 17640 ;;                  2  [STACK] int 
 17641 ;; Registers used:
 17642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17643 ;; Tracked objects:
 17644 ;;		On entry : 0/0
 17645 ;;		On exit  : 0/0
 17646 ;;		Unchanged: 0/0
 17647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17652 ;;Total ram usage:        0 bytes
 17653 ;; Hardware stack levels used:    1
 17654 ;; Hardware stack levels required when called:   15
 17655 ;; This function calls:
 17656 ;;		Nothing
 17657 ;; This function is called by:
 17658 ;;		_toupper
 17659 ;; This function uses a reentrant model
 17660 ;;
 17661                           
 17662                           	psect	text68
 17663  01CBF6                     __ptext68:
 17664                           	opt callstack 0
 17665  01CBF6                     _islower:
 17666                           	opt callstack 0
 17667                           
 17668                           ;stkvar	_c @ sp[(0)+-2]
 17669                           
 17670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17671                           ;incstack = 0
 17672 ;; hardware stack exceeded
 17673  01CBF6  0EFE               	movlw	-2
 17674  01CBF8  50E3               	movf	plusw1,w,c
 17675  01CBFA  0F9F               	addlw	159
 17676  01CBFC  6E0B               	movwf	(btemp+10)^0,c
 17677  01CBFE  0EFF               	movlw	-1
 17678  01CC00  006F FF8C  F00C    	movff	plusw1,btemp+11
 17679  01CC06  0EFF               	movlw	255
 17680  01CC08  220C               	addwfc	(btemp+11)^0,f,c
 17681  01CC0A  500C               	movf	(btemp+11)^0,w,c
 17682  01CC0C  E106               	bnz	u6360
 17683  01CC0E  0E1A               	movlw	26
 17684  01CC10  5C0B               	subwf	(btemp+10)^0,w,c
 17685  01CC12  B0D8               	btfsc	status,0,c
 17686  01CC14  D002               	goto	u6360
 17687  01CC16  0E01               	movlw	1
 17688  01CC18  D001               	goto	u6370
 17689  01CC1A                     u6360:
 17690  01CC1A  0E00               	movlw	0
 17691  01CC1C                     u6370:
 17692  01CC1C  6E01               	movwf	btemp^0,c
 17693  01CC1E  6A02               	clrf	(btemp+1)^0,c
 17694                           
 17695                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17696  01CC20  52E5               	movf	postdec1,f,c
 17697  01CC22  52E5               	movf	postdec1,f,c
 17698  01CC24  0012               	return		;funcret
 17699  01CC26                     __end_of_islower:
 17700                           	opt callstack 0
 17701                           
 17702 ;; *************** function _isalpha *****************
 17703 ;; Defined at:
 17704 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 17705 ;; Parameters:    Size  Location     Type
 17706 ;;  c               2  [STACK] int 
 17707 ;; Auto vars:     Size  Location     Type
 17708 ;;		None
 17709 ;; Return value:  Size  Location     Type
 17710 ;;                  2  [STACK] int 
 17711 ;; Registers used:
 17712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 17713 ;; Tracked objects:
 17714 ;;		On entry : 0/0
 17715 ;;		On exit  : 0/0
 17716 ;;		Unchanged: 0/0
 17717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17722 ;;Total ram usage:        0 bytes
 17723 ;; Hardware stack levels used:    1
 17724 ;; Hardware stack levels required when called:   15
 17725 ;; This function calls:
 17726 ;;		Nothing
 17727 ;; This function is called by:
 17728 ;;		_xtoa
 17729 ;; This function uses a reentrant model
 17730 ;;
 17731                           
 17732                           	psect	text69
 17733  01C7A6                     __ptext69:
 17734                           	opt callstack 0
 17735  01C7A6                     _isalpha:
 17736                           	opt callstack 0
 17737                           
 17738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17739                           ;incstack = 0
 17740 ;; hardware stack exceeded
 17741  01C7A6  0E9F               	movlw	159
 17742  01C7A8  6E0B               	movwf	(btemp+10)^0,c
 17743  01C7AA  0EFF               	movlw	255
 17744  01C7AC  6E0C               	movwf	(btemp+11)^0,c
 17745                           
 17746                           ;stkvar	_c @ sp[(0)+-2]
 17747  01C7AE  0EFE               	movlw	-2
 17748  01C7B0  006F FF8C  F009    	movff	plusw1,btemp+8
 17749  01C7B6  0EFF               	movlw	-1
 17750  01C7B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 17751  01C7BE  0E20               	movlw	32
 17752  01C7C0  1209               	iorwf	(btemp+8)^0,f,c
 17753  01C7C2  0E00               	movlw	0
 17754  01C7C4  120A               	iorwf	(btemp+9)^0,f,c
 17755  01C7C6  500B               	movf	(btemp+10)^0,w,c
 17756  01C7C8  2609               	addwf	(btemp+8)^0,f,c
 17757  01C7CA  500C               	movf	(btemp+11)^0,w,c
 17758  01C7CC  220A               	addwfc	(btemp+9)^0,f,c
 17759  01C7CE  500A               	movf	(btemp+9)^0,w,c
 17760  01C7D0  E106               	bnz	u6700
 17761  01C7D2  0E1A               	movlw	26
 17762  01C7D4  5C09               	subwf	(btemp+8)^0,w,c
 17763  01C7D6  B0D8               	btfsc	status,0,c
 17764  01C7D8  D002               	goto	u6700
 17765  01C7DA  0E01               	movlw	1
 17766  01C7DC  D001               	goto	u6710
 17767  01C7DE                     u6700:
 17768  01C7DE  0E00               	movlw	0
 17769  01C7E0                     u6710:
 17770  01C7E0  6E01               	movwf	btemp^0,c
 17771  01C7E2  6A02               	clrf	(btemp+1)^0,c
 17772                           
 17773                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17774  01C7E4  52E5               	movf	postdec1,f,c
 17775  01C7E6  52E5               	movf	postdec1,f,c
 17776  01C7E8  0012               	return		;funcret
 17777  01C7EA                     __end_of_isalpha:
 17778                           	opt callstack 0
 17779                           
 17780 ;; *************** function _utoa *****************
 17781 ;; Defined at:
 17782 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17783 ;; Parameters:    Size  Location     Type
 17784 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17785 ;;		 -> f(6), NULL(0), 
 17786 ;;  d               8  [STACK] unsigned long long 
 17787 ;; Auto vars:     Size  Location     Type
 17788 ;;  n               8  [STACK] unsigned long long 
 17789 ;;  i               2  [STACK] int 
 17790 ;;  w               2  [STACK] int 
 17791 ;;  p               2  [STACK] int 
 17792 ;; Return value:  Size  Location     Type
 17793 ;;                  2  [STACK] int 
 17794 ;; Registers used:
 17795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17796 ;; Tracked objects:
 17797 ;;		On entry : 0/0
 17798 ;;		On exit  : 0/0
 17799 ;;		Unchanged: 0/0
 17800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17805 ;;Total ram usage:        0 bytes
 17806 ;; Hardware stack levels used:    1
 17807 ;; Hardware stack levels required when called:   20
 17808 ;; This function calls:
 17809 ;;		___lodiv
 17810 ;;		___lomod
 17811 ;;		_pad
 17812 ;; This function is called by:
 17813 ;;		_vfpfcnvrt
 17814 ;; This function uses a reentrant model
 17815 ;;
 17816                           
 17817                           	psect	text70
 17818  016DA2                     __ptext70:
 17819                           	opt callstack 0
 17820  016DA2                     _utoa:
 17821                           	opt callstack 0
 17822                           
 17823                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17824  016DA2  0E0E               	movlw	14
 17825  016DA4  26E1               	addwf	fsr1l,f,c
 17826  016DA6  0E00               	movlw	0
 17827  016DA8  22E2               	addwfc	fsr1h,f,c
 17828                           
 17829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 17830                           
 17831                           ;incstack = 0
 17832 ;; hardware stack exceeded
 17833  016DAA  AE3D               	btfss	(_prec+1)^0,7,c
 17834                           
 17835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 17836  016DAC  923E               	bcf	_flags^0,1,c
 17837                           
 17838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 17839  016DAE  BE3D               	btfsc	(_prec+1)^0,7,c
 17840  016DB0  D005               	goto	u12660
 17841  016DB2  503D               	movf	(_prec+1)^0,w,c
 17842  016DB4  E110               	bnz	l13554
 17843  016DB6  043C               	decf	_prec^0,w,c
 17844  016DB8  B0D8               	btfsc	status,0,c
 17845  016DBA  D00D               	goto	l13554
 17846  016DBC                     u12660:
 17847  016DBC  0E01               	movlw	1
 17848  016DBE  6E0B               	movwf	(btemp+10)^0,c
 17849  016DC0  0E00               	movlw	0
 17850  016DC2  6E0C               	movwf	(btemp+11)^0,c
 17851                           
 17852                           ;stkvar	_p @ sp[(-14)+12]
 17853  016DC4  0EFE               	movlw	-2
 17854  016DC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17855  016DCC  0EFF               	movlw	-1
 17856  016DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 17857  016DD4  D008               	goto	l2561
 17858  016DD6                     l13554:
 17859                           
 17860                           ;stkvar	_p @ sp[(-14)+12]
 17861  016DD6  0EFE               	movlw	-2
 17862  016DD8  0060  F0F3  FFE3   	movff	_prec,plusw1
 17863  016DDE  0EFF               	movlw	-1
 17864  016DE0  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17865  016DE6                     l2561:
 17866                           
 17867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 17868                           ;stkvar	_w @ sp[(-14)+10]
 17869  016DE6  0EFC               	movlw	-4
 17870  016DE8  0060  F0EB  FFE3   	movff	_width,plusw1
 17871  016DEE  0EFD               	movlw	-3
 17872  016DF0  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17873                           
 17874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 17875                           ;stkvar	_d @ sp[(-14)+-10]
 17876  016DF6  0EE8               	movlw	232
 17877  016DF8  24E1               	addwf	fsr1l,w,c
 17878  016DFA  6ED9               	movwf	fsr2l,c
 17879  016DFC  0EFF               	movlw	255
 17880  016DFE  20E2               	addwfc	fsr1h,w,c
 17881  016E00  6EDA               	movwf	fsr2h,c
 17882                           
 17883                           ;stkvar	_n @ sp[(-14)+0]
 17884  016E02  0E08               	movlw	8
 17885  016E04  6E01               	movwf	btemp^0,c
 17886  016E06  0EF2               	movlw	-14
 17887  016E08                     us1267999:
 17888  016E08  006F FF7B FFE3     	movff	postinc2,plusw1
 17889  016E0E  28E8               	incf	wreg,w,c
 17890  016E10  2E01               	decfsz	btemp^0,f,c
 17891  016E12  D7FA               	bra	us1267999
 17892                           
 17893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 17894  016E14  0E4F               	movlw	79
 17895  016E16  6E0B               	movwf	(btemp+10)^0,c
 17896  016E18  0E00               	movlw	0
 17897  016E1A  6E0C               	movwf	(btemp+11)^0,c
 17898                           
 17899                           ;stkvar	_i @ sp[(-14)+8]
 17900  016E1C  0EFA               	movlw	-6
 17901  016E1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17902  016E24  0EFB               	movlw	-5
 17903  016E26  0060  F033  FFE3   	movff	btemp+11,plusw1
 17904                           
 17905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 17906  016E2C  0102               	movlb	2	; () banked
 17907  016E2E  6B92               	clrf	(_dbuf+79)& (0+255),b
 17908                           
 17909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 17910  016E30  D0FB               	goto	l13572
 17911  016E32                     l13562:
 17912                           
 17913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 17914                           ;stkvar	_i @ sp[(-14)+8]
 17915  016E32  50E1               	movf	fsr1l,w,c
 17916  016E34  0FFA               	addlw	-6
 17917  016E36  6ED9               	movwf	fsr2l,c
 17918  016E38  50E2               	movf	fsr1h,w,c
 17919  016E3A  6EDA               	movwf	fsr2h,c
 17920  016E3C  0EFF               	movlw	255
 17921  016E3E  22DA               	addwfc	fsr2h,f,c
 17922  016E40  06DE               	decf	postinc2,f,c
 17923  016E42  0E00               	movlw	0
 17924  016E44  5ADD               	subwfb	postdec2,f,c
 17925                           
 17926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 17927  016E46  0E0A               	movlw	10
 17928  016E48  6EE6               	movwf	postinc1,c
 17929  016E4A  0E00               	movlw	0
 17930  016E4C  6EE6               	movwf	postinc1,c
 17931  016E4E  0E00               	movlw	0
 17932  016E50  6EE6               	movwf	postinc1,c
 17933  016E52  0E00               	movlw	0
 17934  016E54  6EE6               	movwf	postinc1,c
 17935  016E56  0E00               	movlw	0
 17936  016E58  6EE6               	movwf	postinc1,c
 17937  016E5A  0E00               	movlw	0
 17938  016E5C  6EE6               	movwf	postinc1,c
 17939  016E5E  0E00               	movlw	0
 17940  016E60  6EE6               	movwf	postinc1,c
 17941  016E62  0E00               	movlw	0
 17942  016E64  6EE6               	movwf	postinc1,c
 17943                           
 17944                           ;stkvar	_n @ sp[(-22)+0]
 17945  016E66  50E1               	movf	fsr1l,w,c
 17946  016E68  0FEA               	addlw	-22
 17947  016E6A  6ED9               	movwf	fsr2l,c
 17948  016E6C  50E2               	movf	fsr1h,w,c
 17949  016E6E  6EDA               	movwf	fsr2h,c
 17950  016E70  0EFF               	movlw	255
 17951  016E72  22DA               	addwfc	fsr2h,f,c
 17952  016E74  006F FF7B FFE6     	movff	postinc2,postinc1
 17953  016E7A  006F FF7B FFE6     	movff	postinc2,postinc1
 17954  016E80  006F FF7B FFE6     	movff	postinc2,postinc1
 17955  016E86  006F FF7B FFE6     	movff	postinc2,postinc1
 17956  016E8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17957  016E92  006F FF7B FFE6     	movff	postinc2,postinc1
 17958  016E98  006F FF7B FFE6     	movff	postinc2,postinc1
 17959  016E9E  006F FF7B FFE6     	movff	postinc2,postinc1
 17960  016EA4  EC2B  F0D0         	call	___lomod	;wreg free
 17961  016EA8  52E5               	movf	postdec1,f,c
 17962  016EAA  006F FF9C  F018    	movff	indf1,btemp+23
 17963  016EB0  52E5               	movf	postdec1,f,c
 17964  016EB2  006F FF9C  F017    	movff	indf1,btemp+22
 17965  016EB8  52E5               	movf	postdec1,f,c
 17966  016EBA  006F FF9C  F016    	movff	indf1,btemp+21
 17967  016EC0  52E5               	movf	postdec1,f,c
 17968  016EC2  006F FF9C  F015    	movff	indf1,btemp+20
 17969  016EC8  52E5               	movf	postdec1,f,c
 17970  016ECA  006F FF9C  F014    	movff	indf1,btemp+19
 17971  016ED0  52E5               	movf	postdec1,f,c
 17972  016ED2  006F FF9C  F013    	movff	indf1,btemp+18
 17973  016ED8  52E5               	movf	postdec1,f,c
 17974  016EDA  006F FF9C  F012    	movff	indf1,btemp+17
 17975  016EE0  52E5               	movf	postdec1,f,c
 17976  016EE2  006F FF9C  F011    	movff	indf1,btemp+16
 17977  016EE8  0EF8               	movlw	248
 17978  016EEA  26E1               	addwf	fsr1l,f,c
 17979  016EEC  0EFF               	movlw	255
 17980  016EEE  22E2               	addwfc	fsr1h,f,c
 17981  016EF0  0E30               	movlw	48
 17982  016EF2  2611               	addwf	(btemp+16)^0,f,c
 17983                           
 17984                           ;stkvar	_i @ sp[(-14)+8]
 17985  016EF4  0EFA               	movlw	-6
 17986  016EF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 17987  016EFC  0EFB               	movlw	-5
 17988  016EFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 17989  016F04  0E43               	movlw	low _dbuf
 17990  016F06  240B               	addwf	(btemp+10)^0,w,c
 17991  016F08  6ED9               	movwf	fsr2l,c
 17992  016F0A  0E02               	movlw	high _dbuf
 17993  016F0C  200C               	addwfc	(btemp+11)^0,w,c
 17994  016F0E  6EDA               	movwf	fsr2h,c
 17995  016F10  0060  F047  FFDF   	movff	btemp+16,indf2
 17996                           
 17997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 17998                           ;stkvar	_p @ sp[(-14)+12]
 17999  016F16  50E1               	movf	fsr1l,w,c
 18000  016F18  0FFE               	addlw	-2
 18001  016F1A  6ED9               	movwf	fsr2l,c
 18002  016F1C  50E2               	movf	fsr1h,w,c
 18003  016F1E  6EDA               	movwf	fsr2h,c
 18004  016F20  0EFF               	movlw	255
 18005  016F22  22DA               	addwfc	fsr2h,f,c
 18006  016F24  06DE               	decf	postinc2,f,c
 18007  016F26  0E00               	movlw	0
 18008  016F28  5ADD               	subwfb	postdec2,f,c
 18009                           
 18010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 18011                           ;stkvar	_w @ sp[(-14)+10]
 18012  016F2A  50E1               	movf	fsr1l,w,c
 18013  016F2C  0FFC               	addlw	-4
 18014  016F2E  6ED9               	movwf	fsr2l,c
 18015  016F30  50E2               	movf	fsr1h,w,c
 18016  016F32  6EDA               	movwf	fsr2h,c
 18017  016F34  0EFF               	movlw	255
 18018  016F36  22DA               	addwfc	fsr2h,f,c
 18019  016F38  06DE               	decf	postinc2,f,c
 18020  016F3A  0E00               	movlw	0
 18021  016F3C  5ADD               	subwfb	postdec2,f,c
 18022                           
 18023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 18024  016F3E  0E0A               	movlw	10
 18025  016F40  6EE6               	movwf	postinc1,c
 18026  016F42  0E00               	movlw	0
 18027  016F44  6EE6               	movwf	postinc1,c
 18028  016F46  0E00               	movlw	0
 18029  016F48  6EE6               	movwf	postinc1,c
 18030  016F4A  0E00               	movlw	0
 18031  016F4C  6EE6               	movwf	postinc1,c
 18032  016F4E  0E00               	movlw	0
 18033  016F50  6EE6               	movwf	postinc1,c
 18034  016F52  0E00               	movlw	0
 18035  016F54  6EE6               	movwf	postinc1,c
 18036  016F56  0E00               	movlw	0
 18037  016F58  6EE6               	movwf	postinc1,c
 18038  016F5A  0E00               	movlw	0
 18039  016F5C  6EE6               	movwf	postinc1,c
 18040                           
 18041                           ;stkvar	_n @ sp[(-22)+0]
 18042  016F5E  50E1               	movf	fsr1l,w,c
 18043  016F60  0FEA               	addlw	-22
 18044  016F62  6ED9               	movwf	fsr2l,c
 18045  016F64  50E2               	movf	fsr1h,w,c
 18046  016F66  6EDA               	movwf	fsr2h,c
 18047  016F68  0EFF               	movlw	255
 18048  016F6A  22DA               	addwfc	fsr2h,f,c
 18049  016F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 18050  016F72  006F FF7B FFE6     	movff	postinc2,postinc1
 18051  016F78  006F FF7B FFE6     	movff	postinc2,postinc1
 18052  016F7E  006F FF7B FFE6     	movff	postinc2,postinc1
 18053  016F84  006F FF7B FFE6     	movff	postinc2,postinc1
 18054  016F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 18055  016F90  006F FF7B FFE6     	movff	postinc2,postinc1
 18056  016F96  006F FF7B FFE6     	movff	postinc2,postinc1
 18057  016F9C  EC4F  F0CB         	call	___lodiv	;wreg free
 18058  016FA0  52E5               	movf	postdec1,f,c
 18059  016FA2  006F FF9C  F018    	movff	indf1,btemp+23
 18060  016FA8  52E5               	movf	postdec1,f,c
 18061  016FAA  006F FF9C  F017    	movff	indf1,btemp+22
 18062  016FB0  52E5               	movf	postdec1,f,c
 18063  016FB2  006F FF9C  F016    	movff	indf1,btemp+21
 18064  016FB8  52E5               	movf	postdec1,f,c
 18065  016FBA  006F FF9C  F015    	movff	indf1,btemp+20
 18066  016FC0  52E5               	movf	postdec1,f,c
 18067  016FC2  006F FF9C  F014    	movff	indf1,btemp+19
 18068  016FC8  52E5               	movf	postdec1,f,c
 18069  016FCA  006F FF9C  F013    	movff	indf1,btemp+18
 18070  016FD0  52E5               	movf	postdec1,f,c
 18071  016FD2  006F FF9C  F012    	movff	indf1,btemp+17
 18072  016FD8  52E5               	movf	postdec1,f,c
 18073  016FDA  006F FF9C  F011    	movff	indf1,btemp+16
 18074  016FE0  0EF8               	movlw	248
 18075  016FE2  26E1               	addwf	fsr1l,f,c
 18076  016FE4  0EFF               	movlw	255
 18077  016FE6  22E2               	addwfc	fsr1h,f,c
 18078                           
 18079                           ;stkvar	_n @ sp[(-14)+0]
 18080  016FE8  0EF2               	movlw	-14
 18081  016FEA  0060  F047  FFE3   	movff	btemp+16,plusw1
 18082  016FF0  0EF3               	movlw	-13
 18083  016FF2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18084  016FF8  0EF4               	movlw	-12
 18085  016FFA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18086  017000  0EF5               	movlw	-11
 18087  017002  0060  F053  FFE3   	movff	btemp+19,plusw1
 18088  017008  0EF6               	movlw	-10
 18089  01700A  0060  F057  FFE3   	movff	btemp+20,plusw1
 18090  017010  0EF7               	movlw	-9
 18091  017012  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18092  017018  0EF8               	movlw	-8
 18093  01701A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18094  017020  0EF9               	movlw	-7
 18095  017022  0060  F063  FFE3   	movff	btemp+23,plusw1
 18096  017028                     l13572:
 18097                           
 18098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 18099                           ;stkvar	_i @ sp[(-14)+8]
 18100  017028  0EFA               	movlw	-6
 18101  01702A  006F FF8C  F001    	movff	plusw1,btemp
 18102  017030  0EFB               	movlw	-5
 18103  017032  50E3               	movf	plusw1,w,c
 18104  017034  1001               	iorwf	btemp^0,w,c
 18105  017036  B4D8               	btfsc	status,2,c
 18106  017038  D02F               	goto	u12720
 18107                           
 18108                           ;stkvar	_n @ sp[(-14)+0]
 18109  01703A  0EF2               	movlw	-14
 18110  01703C  50E3               	movf	plusw1,w,c
 18111  01703E  E115               	bnz	u12691
 18112  017040  0EF3               	movlw	-13
 18113  017042  50E3               	movf	plusw1,w,c
 18114  017044  E112               	bnz	u12691
 18115  017046  0EF4               	movlw	-12
 18116  017048  50E3               	movf	plusw1,w,c
 18117  01704A  E10F               	bnz	u12691
 18118  01704C  0EF5               	movlw	-11
 18119  01704E  50E3               	movf	plusw1,w,c
 18120  017050  E10C               	bnz	u12691
 18121  017052  0EF6               	movlw	-10
 18122  017054  50E3               	movf	plusw1,w,c
 18123  017056  E109               	bnz	u12691
 18124  017058  0EF7               	movlw	-9
 18125  01705A  50E3               	movf	plusw1,w,c
 18126  01705C  E106               	bnz	u12691
 18127  01705E  0EF8               	movlw	-8
 18128  017060  50E3               	movf	plusw1,w,c
 18129  017062  E103               	bnz	u12691
 18130  017064  0EF9               	movlw	-7
 18131  017066  50E3               	movf	plusw1,w,c
 18132  017068  A4D8               	btfss	status,2,c
 18133  01706A                     u12691:
 18134  01706A  D6E3               	goto	l13562
 18135                           
 18136                           ;stkvar	_p @ sp[(-14)+12]
 18137  01706C  0EFF               	movlw	-1
 18138  01706E  BEE3               	btfsc	plusw1,7,c
 18139  017070  D007               	goto	u12700
 18140  017072  0EFF               	movlw	-1
 18141  017074  50E3               	movf	plusw1,w,c
 18142  017076  E103               	bnz	u12701
 18143  017078  0EFE               	movlw	-2
 18144  01707A  04E3               	decf	plusw1,w,c
 18145  01707C  B0D8               	btfsc	status,0,c
 18146  01707E                     u12701:
 18147  01707E  D6D9               	goto	l13562
 18148  017080                     u12700:
 18149                           
 18150                           ;stkvar	_w @ sp[(-14)+10]
 18151  017080  0EFD               	movlw	-3
 18152  017082  BEE3               	btfsc	plusw1,7,c
 18153  017084  D009               	goto	u12720
 18154  017086  0EFD               	movlw	-3
 18155  017088  50E3               	movf	plusw1,w,c
 18156  01708A  E104               	bnz	u12710
 18157  01708C  0EFC               	movlw	-4
 18158  01708E  04E3               	decf	plusw1,w,c
 18159  017090  A0D8               	btfss	status,0,c
 18160  017092  D002               	goto	u12720
 18161  017094                     u12710:
 18162  017094  B23E               	btfsc	_flags^0,1,c
 18163  017096  D6CD               	goto	l13562
 18164  017098                     u12720:
 18165                           
 18166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 18167                           ;stkvar	_w @ sp[(-14)+10]
 18168  017098  0EFC               	movlw	-4
 18169  01709A  006F FF8F FFE6     	movff	plusw1,postinc1
 18170  0170A0  006F FF8F FFE6     	movff	plusw1,postinc1
 18171                           
 18172                           ;stkvar	_i @ sp[(-16)+8]
 18173  0170A6  0E43               	movlw	low _dbuf
 18174  0170A8  6E0B               	movwf	(btemp+10)^0,c
 18175  0170AA  0E02               	movlw	high _dbuf
 18176  0170AC  6E0C               	movwf	(btemp+11)^0,c
 18177  0170AE  0EF8               	movlw	-8
 18178  0170B0  50E3               	movf	plusw1,w,c
 18179  0170B2  260B               	addwf	(btemp+10)^0,f,c
 18180  0170B4  0EF9               	movlw	-7
 18181  0170B6  50E3               	movf	plusw1,w,c
 18182  0170B8  220C               	addwfc	(btemp+11)^0,f,c
 18183  0170BA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18184  0170C0  0060  F033  FFE6   	movff	btemp+11,postinc1
 18185                           
 18186                           ;stkvar	_fp @ sp[(-18)+-2]
 18187  0170C6  0EEC               	movlw	-20
 18188  0170C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18189  0170CE  006F FF8F FFE6     	movff	plusw1,postinc1
 18190  0170D4  EC34  F0D4         	call	_pad	;wreg free
 18191                           
 18192                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18193  0170D8  0EE8               	movlw	232
 18194  0170DA  26E1               	addwf	fsr1l,f,c
 18195  0170DC  0EFF               	movlw	255
 18196  0170DE  22E2               	addwfc	fsr1h,f,c
 18197  0170E0  0012               	return		;funcret
 18198  0170E2                     __end_of_utoa:
 18199                           	opt callstack 0
 18200                           
 18201 ;; *************** function ___lomod *****************
 18202 ;; Defined at:
 18203 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 18204 ;; Parameters:    Size  Location     Type
 18205 ;;  dividend        8  [STACK] unsigned long long 
 18206 ;;  divisor         8  [STACK] unsigned long long 
 18207 ;; Auto vars:     Size  Location     Type
 18208 ;;  counter         1  [STACK] unsigned char 
 18209 ;; Return value:  Size  Location     Type
 18210 ;;                  8  [STACK] unsigned long long 
 18211 ;; Registers used:
 18212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18213 ;; Tracked objects:
 18214 ;;		On entry : 0/2
 18215 ;;		On exit  : 0/0
 18216 ;;		Unchanged: 0/0
 18217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18222 ;;Total ram usage:        0 bytes
 18223 ;; Hardware stack levels used:    1
 18224 ;; Hardware stack levels required when called:   15
 18225 ;; This function calls:
 18226 ;;		Nothing
 18227 ;; This function is called by:
 18228 ;;		_utoa
 18229 ;; This function uses a reentrant model
 18230 ;;
 18231                           
 18232                           	psect	text71
 18233  01A056                     __ptext71:
 18234                           	opt callstack 0
 18235  01A056                     ___lomod:
 18236                           	opt callstack 0
 18237                           
 18238                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18239  01A056  52E6               	movf	postinc1,f,c
 18240                           
 18241                           ;stkvar	_divisor @ sp[(-1)+-16]
 18242                           
 18243                           ;incstack = 0
 18244 ;; hardware stack exceeded
 18245  01A058  0EEF               	movlw	-17
 18246  01A05A  50E3               	movf	plusw1,w,c
 18247  01A05C  E116               	bnz	u7850
 18248  01A05E  0EF0               	movlw	-16
 18249  01A060  50E3               	movf	plusw1,w,c
 18250  01A062  E113               	bnz	u7850
 18251  01A064  0EF1               	movlw	-15
 18252  01A066  50E3               	movf	plusw1,w,c
 18253  01A068  E110               	bnz	u7850
 18254  01A06A  0EF2               	movlw	-14
 18255  01A06C  50E3               	movf	plusw1,w,c
 18256  01A06E  E10D               	bnz	u7850
 18257  01A070  0EF3               	movlw	-13
 18258  01A072  50E3               	movf	plusw1,w,c
 18259  01A074  E10A               	bnz	u7850
 18260  01A076  0EF4               	movlw	-12
 18261  01A078  50E3               	movf	plusw1,w,c
 18262  01A07A  E107               	bnz	u7850
 18263  01A07C  0EF5               	movlw	-11
 18264  01A07E  50E3               	movf	plusw1,w,c
 18265  01A080  E104               	bnz	u7850
 18266  01A082  0EF6               	movlw	-10
 18267  01A084  50E3               	movf	plusw1,w,c
 18268  01A086  B4D8               	btfsc	status,2,c
 18269  01A088  D075               	goto	u7880
 18270  01A08A                     u7850:
 18271                           
 18272                           ;stkvar	_counter @ sp[(-1)+0]
 18273  01A08A  0EFF               	movlw	-1
 18274  01A08C  6AE3               	clrf	plusw1,c
 18275  01A08E  D012               	goto	L19
 18276  01A090                     l9442:
 18277                           
 18278                           ;stkvar	_divisor @ sp[(-1)+-16]
 18279  01A090  90D8               	bcf	status,0,c
 18280  01A092  0EEF               	movlw	-17
 18281  01A094  36E3               	rlcf	plusw1,f,c
 18282  01A096  0EF0               	movlw	-16
 18283  01A098  36E3               	rlcf	plusw1,f,c
 18284  01A09A  0EF1               	movlw	-15
 18285  01A09C  36E3               	rlcf	plusw1,f,c
 18286  01A09E  0EF2               	movlw	-14
 18287  01A0A0  36E3               	rlcf	plusw1,f,c
 18288  01A0A2  0EF3               	movlw	-13
 18289  01A0A4  36E3               	rlcf	plusw1,f,c
 18290  01A0A6  0EF4               	movlw	-12
 18291  01A0A8  36E3               	rlcf	plusw1,f,c
 18292  01A0AA  0EF5               	movlw	-11
 18293  01A0AC  36E3               	rlcf	plusw1,f,c
 18294  01A0AE  0EF6               	movlw	-10
 18295  01A0B0  36E3               	rlcf	plusw1,f,c
 18296                           
 18297                           ;stkvar	_counter @ sp[(-1)+0]
 18298  01A0B2  0EFF               	movlw	-1
 18299  01A0B4                     L19:
 18300  01A0B4  2AE3               	incf	plusw1,f,c
 18301                           
 18302                           ;stkvar	_divisor @ sp[(-1)+-16]
 18303  01A0B6  0EF6               	movlw	-10
 18304  01A0B8  AEE3               	btfss	plusw1,7,c
 18305  01A0BA  D7EA               	goto	l9442
 18306  01A0BC                     u7860:
 18307                           
 18308                           ;stkvar	_divisor @ sp[(-1)+-16]
 18309                           ;stkvar	_dividend @ sp[(-1)+-8]
 18310  01A0BC  50E1               	movf	fsr1l,w,c
 18311  01A0BE  0FF7               	addlw	-9
 18312  01A0C0  6ED9               	movwf	fsr2l,c
 18313  01A0C2  50E2               	movf	fsr1h,w,c
 18314  01A0C4  6EDA               	movwf	fsr2h,c
 18315  01A0C6  0EFF               	movlw	255
 18316  01A0C8  22DA               	addwfc	fsr2h,f,c
 18317  01A0CA  0EEF               	movlw	-17
 18318  01A0CC  50E3               	movf	plusw1,w,c
 18319  01A0CE  5CDE               	subwf	postinc2,w,c
 18320  01A0D0  0EF0               	movlw	-16
 18321  01A0D2  50E3               	movf	plusw1,w,c
 18322  01A0D4  58DE               	subwfb	postinc2,w,c
 18323  01A0D6  0EF1               	movlw	-15
 18324  01A0D8  50E3               	movf	plusw1,w,c
 18325  01A0DA  58DE               	subwfb	postinc2,w,c
 18326  01A0DC  0EF2               	movlw	-14
 18327  01A0DE  50E3               	movf	plusw1,w,c
 18328  01A0E0  58DE               	subwfb	postinc2,w,c
 18329  01A0E2  0EF3               	movlw	-13
 18330  01A0E4  50E3               	movf	plusw1,w,c
 18331  01A0E6  58DE               	subwfb	postinc2,w,c
 18332  01A0E8  0EF4               	movlw	-12
 18333  01A0EA  50E3               	movf	plusw1,w,c
 18334  01A0EC  58DE               	subwfb	postinc2,w,c
 18335  01A0EE  0EF5               	movlw	-11
 18336  01A0F0  50E3               	movf	plusw1,w,c
 18337  01A0F2  58DE               	subwfb	postinc2,w,c
 18338  01A0F4  0EF6               	movlw	-10
 18339  01A0F6  50E3               	movf	plusw1,w,c
 18340  01A0F8  58DE               	subwfb	postinc2,w,c
 18341  01A0FA  A0D8               	btfss	status,0,c
 18342  01A0FC  D01F               	goto	l9450
 18343                           
 18344                           ;stkvar	_divisor @ sp[(-1)+-16]
 18345                           ;stkvar	_dividend @ sp[(-1)+-8]
 18346  01A0FE  50E1               	movf	fsr1l,w,c
 18347  01A100  0FF7               	addlw	-9
 18348  01A102  6ED9               	movwf	fsr2l,c
 18349  01A104  50E2               	movf	fsr1h,w,c
 18350  01A106  6EDA               	movwf	fsr2h,c
 18351  01A108  0EFF               	movlw	255
 18352  01A10A  22DA               	addwfc	fsr2h,f,c
 18353  01A10C  0EEF               	movlw	-17
 18354  01A10E  50E3               	movf	plusw1,w,c
 18355  01A110  5EDE               	subwf	postinc2,f,c
 18356  01A112  0EF0               	movlw	-16
 18357  01A114  50E3               	movf	plusw1,w,c
 18358  01A116  5ADE               	subwfb	postinc2,f,c
 18359  01A118  0EF1               	movlw	-15
 18360  01A11A  50E3               	movf	plusw1,w,c
 18361  01A11C  5ADE               	subwfb	postinc2,f,c
 18362  01A11E  0EF2               	movlw	-14
 18363  01A120  50E3               	movf	plusw1,w,c
 18364  01A122  5ADE               	subwfb	postinc2,f,c
 18365  01A124  0EF3               	movlw	-13
 18366  01A126  50E3               	movf	plusw1,w,c
 18367  01A128  5ADE               	subwfb	postinc2,f,c
 18368  01A12A  0EF4               	movlw	-12
 18369  01A12C  50E3               	movf	plusw1,w,c
 18370  01A12E  5ADE               	subwfb	postinc2,f,c
 18371  01A130  0EF5               	movlw	-11
 18372  01A132  50E3               	movf	plusw1,w,c
 18373  01A134  5ADE               	subwfb	postinc2,f,c
 18374  01A136  0EF6               	movlw	-10
 18375  01A138  50E3               	movf	plusw1,w,c
 18376  01A13A  5ADE               	subwfb	postinc2,f,c
 18377  01A13C                     l9450:
 18378                           
 18379                           ;stkvar	_divisor @ sp[(-1)+-16]
 18380  01A13C  90D8               	bcf	status,0,c
 18381  01A13E  0EF6               	movlw	-10
 18382  01A140  32E3               	rrcf	plusw1,f,c
 18383  01A142  0EF5               	movlw	-11
 18384  01A144  32E3               	rrcf	plusw1,f,c
 18385  01A146  0EF4               	movlw	-12
 18386  01A148  32E3               	rrcf	plusw1,f,c
 18387  01A14A  0EF3               	movlw	-13
 18388  01A14C  32E3               	rrcf	plusw1,f,c
 18389  01A14E  0EF2               	movlw	-14
 18390  01A150  32E3               	rrcf	plusw1,f,c
 18391  01A152  0EF1               	movlw	-15
 18392  01A154  32E3               	rrcf	plusw1,f,c
 18393  01A156  0EF0               	movlw	-16
 18394  01A158  32E3               	rrcf	plusw1,f,c
 18395  01A15A  0EEF               	movlw	-17
 18396  01A15C  32E3               	rrcf	plusw1,f,c
 18397                           
 18398                           ;stkvar	_counter @ sp[(-1)+0]
 18399  01A15E  0EFF               	movlw	-1
 18400  01A160  50E3               	movf	plusw1,w,c
 18401  01A162  6E01               	movwf	btemp^0,c
 18402  01A164  0E01               	movlw	1
 18403  01A166  5E01               	subwf	btemp^0,f,c
 18404  01A168  0EFF               	movlw	-1
 18405  01A16A  0060  F007  FFE3   	movff	btemp,plusw1
 18406  01A170  A4D8               	btfss	status,2,c
 18407  01A172  D7A4               	goto	u7860
 18408  01A174                     u7880:
 18409                           
 18410                           ;stkvar	_dividend @ sp[(-1)+-8]
 18411  01A174  0EF7               	movlw	247
 18412  01A176  24E1               	addwf	fsr1l,w,c
 18413  01A178  6ED9               	movwf	fsr2l,c
 18414  01A17A  0EFF               	movlw	255
 18415  01A17C  20E2               	addwfc	fsr1h,w,c
 18416  01A17E  6EDA               	movwf	fsr2h,c
 18417                           
 18418                           ;stkvar	?___lomod @ sp[(-1)+-8]
 18419  01A180  0E08               	movlw	8
 18420  01A182  6E01               	movwf	btemp^0,c
 18421  01A184  0EF7               	movlw	-9
 18422  01A186                     us789999:
 18423  01A186  006F FF7B FFE3     	movff	postinc2,plusw1
 18424  01A18C  28E8               	incf	wreg,w,c
 18425  01A18E  2E01               	decfsz	btemp^0,f,c
 18426  01A190  D7FA               	bra	us789999
 18427                           
 18428                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18429  01A192  52E5               	movf	postdec1,f,c
 18430  01A194  0012               	return		;funcret
 18431  01A196                     __end_of___lomod:
 18432                           	opt callstack 0
 18433                           
 18434 ;; *************** function ___lodiv *****************
 18435 ;; Defined at:
 18436 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 18437 ;; Parameters:    Size  Location     Type
 18438 ;;  dividend        8  [STACK] unsigned long long 
 18439 ;;  divisor         8  [STACK] unsigned long long 
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;  quotient        8  [STACK] unsigned long long 
 18442 ;;  counter         1  [STACK] unsigned char 
 18443 ;; Return value:  Size  Location     Type
 18444 ;;                  8  [STACK] unsigned long long 
 18445 ;; Registers used:
 18446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18447 ;; Tracked objects:
 18448 ;;		On entry : 0/2
 18449 ;;		On exit  : 0/0
 18450 ;;		Unchanged: 0/0
 18451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18456 ;;Total ram usage:        0 bytes
 18457 ;; Hardware stack levels used:    1
 18458 ;; Hardware stack levels required when called:   15
 18459 ;; This function calls:
 18460 ;;		Nothing
 18461 ;; This function is called by:
 18462 ;;		_utoa
 18463 ;; This function uses a reentrant model
 18464 ;;
 18465                           
 18466                           	psect	text72
 18467  01969E                     __ptext72:
 18468                           	opt callstack 0
 18469  01969E                     ___lodiv:
 18470                           	opt callstack 0
 18471                           
 18472                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18473  01969E  0E09               	movlw	9
 18474  0196A0  26E1               	addwf	fsr1l,f,c
 18475  0196A2  0E00               	movlw	0
 18476  0196A4  22E2               	addwfc	fsr1h,f,c
 18477                           
 18478                           ;stkvar	_quotient @ sp[(-9)+0]
 18479                           
 18480                           ;incstack = 0
 18481 ;; hardware stack exceeded
 18482  0196A6  0E07               	movlw	7
 18483  0196A8  6E01               	movwf	btemp^0,c
 18484  0196AA  0EF7               	movlw	-9
 18485  0196AC                     u7791:
 18486  0196AC  6AE3               	clrf	plusw1,c
 18487  0196AE  2AE8               	incf	wreg,f,c
 18488  0196B0  0601               	decf	btemp^0,f,c
 18489  0196B2  E2FC               	bc	u7791
 18490                           
 18491                           ;stkvar	_divisor @ sp[(-9)+-16]
 18492  0196B4  0EE7               	movlw	-25
 18493  0196B6  50E3               	movf	plusw1,w,c
 18494  0196B8  E116               	bnz	u7800
 18495  0196BA  0EE8               	movlw	-24
 18496  0196BC  50E3               	movf	plusw1,w,c
 18497  0196BE  E113               	bnz	u7800
 18498  0196C0  0EE9               	movlw	-23
 18499  0196C2  50E3               	movf	plusw1,w,c
 18500  0196C4  E110               	bnz	u7800
 18501  0196C6  0EEA               	movlw	-22
 18502  0196C8  50E3               	movf	plusw1,w,c
 18503  0196CA  E10D               	bnz	u7800
 18504  0196CC  0EEB               	movlw	-21
 18505  0196CE  50E3               	movf	plusw1,w,c
 18506  0196D0  E10A               	bnz	u7800
 18507  0196D2  0EEC               	movlw	-20
 18508  0196D4  50E3               	movf	plusw1,w,c
 18509  0196D6  E107               	bnz	u7800
 18510  0196D8  0EED               	movlw	-19
 18511  0196DA  50E3               	movf	plusw1,w,c
 18512  0196DC  E104               	bnz	u7800
 18513  0196DE  0EEE               	movlw	-18
 18514  0196E0  50E3               	movf	plusw1,w,c
 18515  0196E2  B4D8               	btfsc	status,2,c
 18516  0196E4  D088               	goto	u7830
 18517  0196E6                     u7800:
 18518                           
 18519                           ;stkvar	_counter @ sp[(-9)+8]
 18520  0196E6  0EFF               	movlw	-1
 18521  0196E8  6AE3               	clrf	plusw1,c
 18522  0196EA  D012               	goto	L20
 18523  0196EC                     l9418:
 18524                           
 18525                           ;stkvar	_divisor @ sp[(-9)+-16]
 18526  0196EC  90D8               	bcf	status,0,c
 18527  0196EE  0EE7               	movlw	-25
 18528  0196F0  36E3               	rlcf	plusw1,f,c
 18529  0196F2  0EE8               	movlw	-24
 18530  0196F4  36E3               	rlcf	plusw1,f,c
 18531  0196F6  0EE9               	movlw	-23
 18532  0196F8  36E3               	rlcf	plusw1,f,c
 18533  0196FA  0EEA               	movlw	-22
 18534  0196FC  36E3               	rlcf	plusw1,f,c
 18535  0196FE  0EEB               	movlw	-21
 18536  019700  36E3               	rlcf	plusw1,f,c
 18537  019702  0EEC               	movlw	-20
 18538  019704  36E3               	rlcf	plusw1,f,c
 18539  019706  0EED               	movlw	-19
 18540  019708  36E3               	rlcf	plusw1,f,c
 18541  01970A  0EEE               	movlw	-18
 18542  01970C  36E3               	rlcf	plusw1,f,c
 18543                           
 18544                           ;stkvar	_counter @ sp[(-9)+8]
 18545  01970E  0EFF               	movlw	-1
 18546  019710                     L20:
 18547  019710  2AE3               	incf	plusw1,f,c
 18548                           
 18549                           ;stkvar	_divisor @ sp[(-9)+-16]
 18550  019712  0EEE               	movlw	-18
 18551  019714  AEE3               	btfss	plusw1,7,c
 18552  019716  D7EA               	goto	l9418
 18553  019718                     u7810:
 18554                           
 18555                           ;stkvar	_quotient @ sp[(-9)+0]
 18556  019718  90D8               	bcf	status,0,c
 18557  01971A  0EF7               	movlw	-9
 18558  01971C  36E3               	rlcf	plusw1,f,c
 18559  01971E  0EF8               	movlw	-8
 18560  019720  36E3               	rlcf	plusw1,f,c
 18561  019722  0EF9               	movlw	-7
 18562  019724  36E3               	rlcf	plusw1,f,c
 18563  019726  0EFA               	movlw	-6
 18564  019728  36E3               	rlcf	plusw1,f,c
 18565  01972A  0EFB               	movlw	-5
 18566  01972C  36E3               	rlcf	plusw1,f,c
 18567  01972E  0EFC               	movlw	-4
 18568  019730  36E3               	rlcf	plusw1,f,c
 18569  019732  0EFD               	movlw	-3
 18570  019734  36E3               	rlcf	plusw1,f,c
 18571  019736  0EFE               	movlw	-2
 18572  019738  36E3               	rlcf	plusw1,f,c
 18573                           
 18574                           ;stkvar	_divisor @ sp[(-9)+-16]
 18575                           ;stkvar	_dividend @ sp[(-9)+-8]
 18576  01973A  50E1               	movf	fsr1l,w,c
 18577  01973C  0FEF               	addlw	-17
 18578  01973E  6ED9               	movwf	fsr2l,c
 18579  019740  50E2               	movf	fsr1h,w,c
 18580  019742  6EDA               	movwf	fsr2h,c
 18581  019744  0EFF               	movlw	255
 18582  019746  22DA               	addwfc	fsr2h,f,c
 18583  019748  0EE7               	movlw	-25
 18584  01974A  50E3               	movf	plusw1,w,c
 18585  01974C  5CDE               	subwf	postinc2,w,c
 18586  01974E  0EE8               	movlw	-24
 18587  019750  50E3               	movf	plusw1,w,c
 18588  019752  58DE               	subwfb	postinc2,w,c
 18589  019754  0EE9               	movlw	-23
 18590  019756  50E3               	movf	plusw1,w,c
 18591  019758  58DE               	subwfb	postinc2,w,c
 18592  01975A  0EEA               	movlw	-22
 18593  01975C  50E3               	movf	plusw1,w,c
 18594  01975E  58DE               	subwfb	postinc2,w,c
 18595  019760  0EEB               	movlw	-21
 18596  019762  50E3               	movf	plusw1,w,c
 18597  019764  58DE               	subwfb	postinc2,w,c
 18598  019766  0EEC               	movlw	-20
 18599  019768  50E3               	movf	plusw1,w,c
 18600  01976A  58DE               	subwfb	postinc2,w,c
 18601  01976C  0EED               	movlw	-19
 18602  01976E  50E3               	movf	plusw1,w,c
 18603  019770  58DE               	subwfb	postinc2,w,c
 18604  019772  0EEE               	movlw	-18
 18605  019774  50E3               	movf	plusw1,w,c
 18606  019776  58DE               	subwfb	postinc2,w,c
 18607  019778  A0D8               	btfss	status,0,c
 18608  01977A  D021               	goto	l9430
 18609                           
 18610                           ;stkvar	_divisor @ sp[(-9)+-16]
 18611                           ;stkvar	_dividend @ sp[(-9)+-8]
 18612  01977C  50E1               	movf	fsr1l,w,c
 18613  01977E  0FEF               	addlw	-17
 18614  019780  6ED9               	movwf	fsr2l,c
 18615  019782  50E2               	movf	fsr1h,w,c
 18616  019784  6EDA               	movwf	fsr2h,c
 18617  019786  0EFF               	movlw	255
 18618  019788  22DA               	addwfc	fsr2h,f,c
 18619  01978A  0EE7               	movlw	-25
 18620  01978C  50E3               	movf	plusw1,w,c
 18621  01978E  5EDE               	subwf	postinc2,f,c
 18622  019790  0EE8               	movlw	-24
 18623  019792  50E3               	movf	plusw1,w,c
 18624  019794  5ADE               	subwfb	postinc2,f,c
 18625  019796  0EE9               	movlw	-23
 18626  019798  50E3               	movf	plusw1,w,c
 18627  01979A  5ADE               	subwfb	postinc2,f,c
 18628  01979C  0EEA               	movlw	-22
 18629  01979E  50E3               	movf	plusw1,w,c
 18630  0197A0  5ADE               	subwfb	postinc2,f,c
 18631  0197A2  0EEB               	movlw	-21
 18632  0197A4  50E3               	movf	plusw1,w,c
 18633  0197A6  5ADE               	subwfb	postinc2,f,c
 18634  0197A8  0EEC               	movlw	-20
 18635  0197AA  50E3               	movf	plusw1,w,c
 18636  0197AC  5ADE               	subwfb	postinc2,f,c
 18637  0197AE  0EED               	movlw	-19
 18638  0197B0  50E3               	movf	plusw1,w,c
 18639  0197B2  5ADE               	subwfb	postinc2,f,c
 18640  0197B4  0EEE               	movlw	-18
 18641  0197B6  50E3               	movf	plusw1,w,c
 18642  0197B8  5ADE               	subwfb	postinc2,f,c
 18643                           
 18644                           ;stkvar	_quotient @ sp[(-9)+0]
 18645  0197BA  0EF7               	movlw	-9
 18646  0197BC  80E3               	bsf	plusw1,0,c
 18647  0197BE                     l9430:
 18648                           
 18649                           ;stkvar	_divisor @ sp[(-9)+-16]
 18650  0197BE  90D8               	bcf	status,0,c
 18651  0197C0  0EEE               	movlw	-18
 18652  0197C2  32E3               	rrcf	plusw1,f,c
 18653  0197C4  0EED               	movlw	-19
 18654  0197C6  32E3               	rrcf	plusw1,f,c
 18655  0197C8  0EEC               	movlw	-20
 18656  0197CA  32E3               	rrcf	plusw1,f,c
 18657  0197CC  0EEB               	movlw	-21
 18658  0197CE  32E3               	rrcf	plusw1,f,c
 18659  0197D0  0EEA               	movlw	-22
 18660  0197D2  32E3               	rrcf	plusw1,f,c
 18661  0197D4  0EE9               	movlw	-23
 18662  0197D6  32E3               	rrcf	plusw1,f,c
 18663  0197D8  0EE8               	movlw	-24
 18664  0197DA  32E3               	rrcf	plusw1,f,c
 18665  0197DC  0EE7               	movlw	-25
 18666  0197DE  32E3               	rrcf	plusw1,f,c
 18667                           
 18668                           ;stkvar	_counter @ sp[(-9)+8]
 18669  0197E0  0EFF               	movlw	-1
 18670  0197E2  50E3               	movf	plusw1,w,c
 18671  0197E4  6E01               	movwf	btemp^0,c
 18672  0197E6  0E01               	movlw	1
 18673  0197E8  5E01               	subwf	btemp^0,f,c
 18674  0197EA  0EFF               	movlw	-1
 18675  0197EC  0060  F007  FFE3   	movff	btemp,plusw1
 18676  0197F2  A4D8               	btfss	status,2,c
 18677  0197F4  D791               	goto	u7810
 18678  0197F6                     u7830:
 18679                           
 18680                           ;stkvar	_quotient @ sp[(-9)+0]
 18681  0197F6  0EF7               	movlw	247
 18682  0197F8  24E1               	addwf	fsr1l,w,c
 18683  0197FA  6ED9               	movwf	fsr2l,c
 18684  0197FC  0EFF               	movlw	255
 18685  0197FE  20E2               	addwfc	fsr1h,w,c
 18686  019800  6EDA               	movwf	fsr2h,c
 18687                           
 18688                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 18689  019802  0E08               	movlw	8
 18690  019804  6E01               	movwf	btemp^0,c
 18691  019806  0EEF               	movlw	-17
 18692  019808                     us784999:
 18693  019808  006F FF7B FFE3     	movff	postinc2,plusw1
 18694  01980E  28E8               	incf	wreg,w,c
 18695  019810  2E01               	decfsz	btemp^0,f,c
 18696  019812  D7FA               	bra	us784999
 18697                           
 18698                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18699  019814  0EF7               	movlw	247
 18700  019816  26E1               	addwf	fsr1l,f,c
 18701  019818  0EFF               	movlw	255
 18702  01981A  22E2               	addwfc	fsr1h,f,c
 18703  01981C  0012               	return		;funcret
 18704  01981E                     __end_of___lodiv:
 18705                           	opt callstack 0
 18706                           
 18707 ;; *************** function _strncmp *****************
 18708 ;; Defined at:
 18709 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 18710 ;; Parameters:    Size  Location     Type
 18711 ;;  _l              2  [STACK] PTR const unsigned char 
 18712 ;;		 -> ct(3), STR_81(127), STR_79(3), STR_78(3), 
 18713 ;;		 -> STR_77(19), STR_76(19), STR_75(19), STR_74(19), 
 18714 ;;		 -> STR_73(19), STR_72(19), STR_71(24), STR_70(15), 
 18715 ;;		 -> STR_69(15), STR_68(15), STR_67(10), STR_66(10), 
 18716 ;;		 -> STR_65(19), STR_64(19), STR_61(3), STR_60(3), 
 18717 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 18718 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 18719 ;;		 -> STR_51(21), STR_50(20), STR_49(20), STR_48(21), 
 18720 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 18721 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 18722 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 18723 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 18724 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 18725 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 18726 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 18727 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 18728 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 18729 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 18730 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 18731 ;;		 -> STR_2(21), STR_1(21), 
 18732 ;;  _r              2  [STACK] PTR const unsigned char 
 18733 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_101(3), 
 18734 ;;		 -> STR_96(3), STR_92(3), 
 18735 ;;  n               2  [STACK] unsigned int 
 18736 ;; Auto vars:     Size  Location     Type
 18737 ;;  r               2  [STACK] PTR const unsigned char 
 18738 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_101(3), 
 18739 ;;		 -> STR_96(3), STR_92(3), 
 18740 ;;  l               2  [STACK] PTR const unsigned char 
 18741 ;;		 -> ct(3), STR_81(127), STR_79(3), STR_78(3), 
 18742 ;;		 -> STR_77(19), STR_76(19), STR_75(19), STR_74(19), 
 18743 ;;		 -> STR_73(19), STR_72(19), STR_71(24), STR_70(15), 
 18744 ;;		 -> STR_69(15), STR_68(15), STR_67(10), STR_66(10), 
 18745 ;;		 -> STR_65(19), STR_64(19), STR_61(3), STR_60(3), 
 18746 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 18747 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 18748 ;;		 -> STR_51(21), STR_50(20), STR_49(20), STR_48(21), 
 18749 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 18750 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 18751 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 18752 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 18753 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 18754 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 18755 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 18756 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 18757 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 18758 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 18759 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 18760 ;;		 -> STR_2(21), STR_1(21), 
 18761 ;; Return value:  Size  Location     Type
 18762 ;;                  2  [STACK] int 
 18763 ;; Registers used:
 18764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 18765 ;; Tracked objects:
 18766 ;;		On entry : 0/0
 18767 ;;		On exit  : 0/0
 18768 ;;		Unchanged: 0/0
 18769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18774 ;;Total ram usage:        0 bytes
 18775 ;; Hardware stack levels used:    1
 18776 ;; Hardware stack levels required when called:   15
 18777 ;; This function calls:
 18778 ;;		Nothing
 18779 ;; This function is called by:
 18780 ;;		_vfpfcnvrt
 18781 ;; This function uses a reentrant model
 18782 ;;
 18783                           
 18784                           	psect	text73
 18785  01860A                     __ptext73:
 18786                           	opt callstack 0
 18787  01860A                     _strncmp:
 18788                           	opt callstack 0
 18789                           
 18790                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18791  01860A  52E6               	movf	postinc1,f,c
 18792  01860C  52E6               	movf	postinc1,f,c
 18793  01860E  52E6               	movf	postinc1,f,c
 18794  018610  52E6               	movf	postinc1,f,c
 18795                           
 18796                           ;stkvar	__l @ sp[(-4)+-2]
 18797                           
 18798                           ;incstack = 0
 18799 ;; hardware stack exceeded
 18800  018612  0EFA               	movlw	-6
 18801  018614  006F FF8C  F00B    	movff	plusw1,btemp+10
 18802  01861A  0EFB               	movlw	-5
 18803  01861C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18804                           
 18805                           ;stkvar	_l @ sp[(-4)+2]
 18806  018622  0EFF               	movlw	-1
 18807  018624  0060  F033  FFE3   	movff	btemp+11,plusw1
 18808  01862A  0EFE               	movlw	-2
 18809  01862C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18810                           
 18811                           ;stkvar	__r @ sp[(-4)+-4]
 18812  018632  0EF8               	movlw	-8
 18813  018634  006F FF8C  F00B    	movff	plusw1,btemp+10
 18814  01863A  0EF9               	movlw	-7
 18815  01863C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18816                           
 18817                           ;stkvar	_r @ sp[(-4)+0]
 18818  018642  0EFD               	movlw	-3
 18819  018644  0060  F033  FFE3   	movff	btemp+11,plusw1
 18820  01864A  0EFC               	movlw	-4
 18821  01864C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18822                           
 18823                           ;stkvar	_n @ sp[(-4)+-6]
 18824  018652  0EF6               	movlw	-10
 18825  018654  006F FF8C  F001    	movff	plusw1,btemp
 18826  01865A  0E01               	movlw	1
 18827  01865C  5E01               	subwf	btemp^0,f,c
 18828  01865E  0EF6               	movlw	-10
 18829  018660  0060  F007  FFE3   	movff	btemp,plusw1
 18830  018666  0EF7               	movlw	-9
 18831  018668  006F FF8C  F001    	movff	plusw1,btemp
 18832  01866E  0E00               	movlw	0
 18833  018670  5A01               	subwfb	btemp^0,f,c
 18834  018672  0EF7               	movlw	-9
 18835  018674  0060  F007  FFE3   	movff	btemp,plusw1
 18836  01867A  0EF6               	movlw	-10
 18837  01867C  28E3               	incf	plusw1,w,c
 18838  01867E  E13F               	bnz	l10100
 18839  018680  0EF7               	movlw	-9
 18840  018682  28E3               	incf	plusw1,w,c
 18841  018684  A4D8               	btfss	status,2,c
 18842  018686  D03B               	goto	l10100
 18843  018688  0E00               	movlw	0
 18844  01868A  6E01               	movwf	btemp^0,c
 18845  01868C  0E00               	movlw	0
 18846  01868E  6E02               	movwf	(btemp+1)^0,c
 18847  018690  D0C7               	goto	l3715
 18848  018692                     l10098:
 18849                           
 18850                           ;stkvar	_l @ sp[(-4)+2]
 18851  018692  0EFE               	movlw	-2
 18852  018694  50E3               	movf	plusw1,w,c
 18853  018696  0F01               	addlw	1
 18854  018698  6E01               	movwf	btemp^0,c
 18855  01869A  0EFE               	movlw	-2
 18856  01869C  0060  F007  FFE3   	movff	btemp,plusw1
 18857  0186A2  6A01               	clrf	btemp^0,c
 18858  0186A4  0EFF               	movlw	-1
 18859  0186A6  50E3               	movf	plusw1,w,c
 18860  0186A8  2001               	addwfc	btemp^0,w,c
 18861  0186AA  6E01               	movwf	btemp^0,c
 18862  0186AC  0EFF               	movlw	-1
 18863  0186AE  0060  F007  FFE3   	movff	btemp,plusw1
 18864                           
 18865                           ;stkvar	_r @ sp[(-4)+0]
 18866  0186B4  0EFC               	movlw	-4
 18867  0186B6  50E3               	movf	plusw1,w,c
 18868  0186B8  0F01               	addlw	1
 18869  0186BA  6E01               	movwf	btemp^0,c
 18870  0186BC  0EFC               	movlw	-4
 18871  0186BE  0060  F007  FFE3   	movff	btemp,plusw1
 18872  0186C4  6A01               	clrf	btemp^0,c
 18873  0186C6  0EFD               	movlw	-3
 18874  0186C8  50E3               	movf	plusw1,w,c
 18875  0186CA  2001               	addwfc	btemp^0,w,c
 18876  0186CC  6E01               	movwf	btemp^0,c
 18877  0186CE  0EFD               	movlw	-3
 18878  0186D0  0060  F007  FFE3   	movff	btemp,plusw1
 18879                           
 18880                           ;stkvar	_n @ sp[(-4)+-6]
 18881  0186D6  0EF6               	movlw	-10
 18882  0186D8  006F FF8C  F001    	movff	plusw1,btemp
 18883  0186DE  0E01               	movlw	1
 18884  0186E0  5E01               	subwf	btemp^0,f,c
 18885  0186E2  0EF6               	movlw	-10
 18886  0186E4  0060  F007  FFE3   	movff	btemp,plusw1
 18887  0186EA  0EF7               	movlw	-9
 18888  0186EC  006F FF8C  F001    	movff	plusw1,btemp
 18889  0186F2  0E00               	movlw	0
 18890  0186F4  5A01               	subwfb	btemp^0,f,c
 18891  0186F6  0EF7               	movlw	-9
 18892  0186F8  0060  F007  FFE3   	movff	btemp,plusw1
 18893  0186FE                     l10100:
 18894                           
 18895                           ;stkvar	_l @ sp[(-4)+2]
 18896  0186FE  0EFE               	movlw	-2
 18897  018700  006F FF8F FFF6     	movff	plusw1,tblptrl
 18898  018706  0EFF               	movlw	-1
 18899  018708  006F FF8F FFF7     	movff	plusw1,tblptrh
 18900  01870E  0E00               	movlw	low (__mediumconst shr (0+16))
 18901  018710  6EF8               	movwf	tblptru,c
 18902  018712  0E1F               	movlw	(high __ramtop+-1)
 18903  018714  64F7               	cpfsgt	tblptrh,c
 18904  018716  D003               	bra	u9087
 18905  018718  0008               	tblrd		*
 18906  01871A  50F5               	movf	tablat,w,c
 18907  01871C  D007               	bra	u9080
 18908  01871E                     u9087:
 18909  01871E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18910  018724  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18911  01872A  50EF               	movf	indf0,w,c
 18912  01872C                     u9080:
 18913  01872C  0900               	iorlw	0
 18914  01872E  B4D8               	btfsc	status,2,c
 18915  018730  D04A               	goto	u9120
 18916                           
 18917                           ;stkvar	_r @ sp[(-4)+0]
 18918  018732  50E1               	movf	fsr1l,w,c
 18919  018734  0FFC               	addlw	-4
 18920  018736  6ED9               	movwf	fsr2l,c
 18921  018738  50E2               	movf	fsr1h,w,c
 18922  01873A  6EDA               	movwf	fsr2h,c
 18923  01873C  0EFF               	movlw	255
 18924  01873E  22DA               	addwfc	fsr2h,f,c
 18925  018740  006F FF7B FFF6     	movff	postinc2,tblptrl
 18926  018746  006F FF77 FFF7     	movff	postdec2,tblptrh
 18927  01874C                     	if	0	;tblptru may be non-zero
 18928  01874C                     	endif
 18929  01874C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18930  01874C  0E00               	movlw	low (__mediumconst shr (0+16))
 18931  01874E  6EF8               	movwf	tblptru,c
 18932  018750                     	endif
 18933  018750  0008               	tblrd		*
 18934  018752  50F5               	movf	tablat,w,c
 18935  018754  0900               	iorlw	0
 18936  018756  B4D8               	btfsc	status,2,c
 18937  018758  D036               	goto	u9120
 18938                           
 18939                           ;stkvar	_n @ sp[(-4)+-6]
 18940  01875A  0EF6               	movlw	-10
 18941  01875C  006F FF8C  F001    	movff	plusw1,btemp
 18942  018762  0EF7               	movlw	-9
 18943  018764  50E3               	movf	plusw1,w,c
 18944  018766  1001               	iorwf	btemp^0,w,c
 18945  018768  B4D8               	btfsc	status,2,c
 18946  01876A  D02D               	goto	u9120
 18947                           
 18948                           ;stkvar	_r @ sp[(-4)+0]
 18949  01876C  50E1               	movf	fsr1l,w,c
 18950  01876E  0FFC               	addlw	-4
 18951  018770  6ED9               	movwf	fsr2l,c
 18952  018772  50E2               	movf	fsr1h,w,c
 18953  018774  6EDA               	movwf	fsr2h,c
 18954  018776  0EFF               	movlw	255
 18955  018778  22DA               	addwfc	fsr2h,f,c
 18956  01877A  006F FF7B FFF6     	movff	postinc2,tblptrl
 18957  018780  006F FF77 FFF7     	movff	postdec2,tblptrh
 18958  018786                     	if	0	;tblptru may be non-zero
 18959  018786                     	endif
 18960  018786                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18961  018786  0E00               	movlw	low (__mediumconst shr (0+16))
 18962  018788  6EF8               	movwf	tblptru,c
 18963  01878A                     	endif
 18964  01878A  0008               	tblrd		*
 18965  01878C  006F FFD4  F00C    	movff	tablat,btemp+11
 18966                           
 18967                           ;stkvar	_l @ sp[(-4)+2]
 18968  018792  0EFE               	movlw	-2
 18969  018794  006F FF8F FFF6     	movff	plusw1,tblptrl
 18970  01879A  0EFF               	movlw	-1
 18971  01879C  006F FF8F FFF7     	movff	plusw1,tblptrh
 18972  0187A2  0E00               	movlw	low (__mediumconst shr (0+16))
 18973  0187A4  6EF8               	movwf	tblptru,c
 18974  0187A6  0E1F               	movlw	(high __ramtop+-1)
 18975  0187A8  64F7               	cpfsgt	tblptrh,c
 18976  0187AA  D003               	bra	u9127
 18977  0187AC  0008               	tblrd		*
 18978  0187AE  50F5               	movf	tablat,w,c
 18979  0187B0  D007               	bra	u9125
 18980  0187B2                     u9127:
 18981  0187B2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18982  0187B8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18983  0187BE  50EF               	movf	indf0,w,c
 18984  0187C0                     u9125:
 18985  0187C0  180C               	xorwf	(btemp+11)^0,w,c
 18986  0187C2  B4D8               	btfsc	status,2,c
 18987  0187C4  D766               	goto	l10098
 18988  0187C6                     u9120:
 18989                           
 18990                           ;stkvar	_l @ sp[(-4)+2]
 18991  0187C6  0EFE               	movlw	-2
 18992  0187C8  006F FF8F FFF6     	movff	plusw1,tblptrl
 18993  0187CE  0EFF               	movlw	-1
 18994  0187D0  006F FF8F FFF7     	movff	plusw1,tblptrh
 18995  0187D6  0E00               	movlw	low (__mediumconst shr (0+16))
 18996  0187D8  6EF8               	movwf	tblptru,c
 18997  0187DA  0E1F               	movlw	(high __ramtop+-1)
 18998  0187DC  64F7               	cpfsgt	tblptrh,c
 18999  0187DE  D003               	bra	u9137
 19000  0187E0  0008               	tblrd		*
 19001  0187E2  50F5               	movf	tablat,w,c
 19002  0187E4  D007               	bra	u9130
 19003  0187E6                     u9137:
 19004  0187E6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19005  0187EC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19006  0187F2  50EF               	movf	indf0,w,c
 19007  0187F4                     u9130:
 19008  0187F4  6E01               	movwf	btemp^0,c
 19009  0187F6  6A02               	clrf	(btemp+1)^0,c
 19010                           
 19011                           ;stkvar	_r @ sp[(-4)+0]
 19012  0187F8  50E1               	movf	fsr1l,w,c
 19013  0187FA  0FFC               	addlw	-4
 19014  0187FC  6ED9               	movwf	fsr2l,c
 19015  0187FE  50E2               	movf	fsr1h,w,c
 19016  018800  6EDA               	movwf	fsr2h,c
 19017  018802  0EFF               	movlw	255
 19018  018804  22DA               	addwfc	fsr2h,f,c
 19019  018806  006F FF7B FFF6     	movff	postinc2,tblptrl
 19020  01880C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19021  018812                     	if	0	;tblptru may be non-zero
 19022  018812                     	endif
 19023  018812                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19024  018812  0E00               	movlw	low (__mediumconst shr (0+16))
 19025  018814  6EF8               	movwf	tblptru,c
 19026  018816                     	endif
 19027  018816  0008               	tblrd		*
 19028  018818  50F5               	movf	tablat,w,c
 19029  01881A  5E01               	subwf	btemp^0,f,c
 19030  01881C  0E00               	movlw	0
 19031  01881E  5A02               	subwfb	(btemp+1)^0,f,c
 19032  018820                     l3715:
 19033                           
 19034                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 19035  018820  0EF6               	movlw	246
 19036  018822  26E1               	addwf	fsr1l,f,c
 19037  018824  0EFF               	movlw	255
 19038  018826  22E2               	addwfc	fsr1h,f,c
 19039  018828  0012               	return		;funcret
 19040  01882A                     __end_of_strncmp:
 19041                           	opt callstack 0
 19042                           
 19043 ;; *************** function _stoa *****************
 19044 ;; Defined at:
 19045 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19046 ;; Parameters:    Size  Location     Type
 19047 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19048 ;;		 -> f(6), NULL(0), 
 19049 ;;  s               2  [STACK] PTR unsigned char 
 19050 ;;		 -> ?_printf(2), ?_sprintf(2), STR_63(9), STR_62(12), 
 19051 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 19052 ;;		 -> V(192), 
 19053 ;; Auto vars:     Size  Location     Type
 19054 ;;  nuls            7  [STACK] unsigned char [7]
 19055 ;;  l               2  [STACK] int 
 19056 ;;  p               2  [STACK] int 
 19057 ;;  cp              2  [STACK] PTR unsigned char 
 19058 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_63(9), 
 19059 ;;		 -> STR_62(12), D.lcd(480), D(482), T(144), 
 19060 ;;		 -> STR_3(5), V(192), 
 19061 ;;  w               2  [STACK] int 
 19062 ;;  i               2  [STACK] int 
 19063 ;; Return value:  Size  Location     Type
 19064 ;;                  2  [STACK] int 
 19065 ;; Registers used:
 19066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19067 ;; Tracked objects:
 19068 ;;		On entry : 0/0
 19069 ;;		On exit  : 0/0
 19070 ;;		Unchanged: 0/0
 19071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19076 ;;Total ram usage:        0 bytes
 19077 ;; Hardware stack levels used:    1
 19078 ;; Hardware stack levels required when called:   18
 19079 ;; This function calls:
 19080 ;;		_fputc
 19081 ;;		_strlen
 19082 ;; This function is called by:
 19083 ;;		_vfpfcnvrt
 19084 ;; This function uses a reentrant model
 19085 ;;
 19086                           
 19087                           	psect	text74
 19088  0179D2                     __ptext74:
 19089                           	opt callstack 0
 19090  0179D2                     _stoa:
 19091                           	opt callstack 0
 19092                           
 19093                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19094  0179D2  0E11               	movlw	17
 19095  0179D4  26E1               	addwf	fsr1l,f,c
 19096  0179D6  0E00               	movlw	0
 19097  0179D8  22E2               	addwfc	fsr1h,f,c
 19098                           
 19099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 19100                           
 19101                           ;incstack = 0
 19102 ;; hardware stack exceeded
 19103  0179DA  EE20  F100         	lfsr	2,stoa@F1166
 19104                           
 19105                           ;stkvar	_nuls @ sp[(-17)+0]
 19106  0179DE  0E07               	movlw	7
 19107  0179E0  6E01               	movwf	btemp^0,c
 19108  0179E2  0EEF               	movlw	-17
 19109  0179E4                     us1255999:
 19110  0179E4  006F FF7B FFE3     	movff	postinc2,plusw1
 19111  0179EA  28E8               	incf	wreg,w,c
 19112  0179EC  2E01               	decfsz	btemp^0,f,c
 19113  0179EE  D7FA               	bra	us1255999
 19114                           
 19115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 19116                           ;stkvar	_s @ sp[(-17)+-4]
 19117  0179F0  0EEB               	movlw	-21
 19118  0179F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19119  0179F8  0EEC               	movlw	-20
 19120  0179FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19121                           
 19122                           ;stkvar	_cp @ sp[(-17)+11]
 19123  017A00  0EFB               	movlw	-5
 19124  017A02  0060  F033  FFE3   	movff	btemp+11,plusw1
 19125  017A08  0EFA               	movlw	-6
 19126  017A0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19127                           
 19128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 19129                           ;stkvar	_cp @ sp[(-17)+11]
 19130  017A10  0EFA               	movlw	-6
 19131  017A12  006F FF8C  F001    	movff	plusw1,btemp
 19132  017A18  0EFB               	movlw	-5
 19133  017A1A  50E3               	movf	plusw1,w,c
 19134  017A1C  1001               	iorwf	btemp^0,w,c
 19135  017A1E  A4D8               	btfss	status,2,c
 19136  017A20  D00E               	goto	l13502
 19137                           
 19138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 19139                           ;stkvar	_nuls @ sp[(-17)+0]
 19140  017A22  0EEF               	movlw	239
 19141  017A24  24E1               	addwf	fsr1l,w,c
 19142  017A26  6E0B               	movwf	(btemp+10)^0,c
 19143  017A28  0EFF               	movlw	255
 19144  017A2A  20E2               	addwfc	fsr1h,w,c
 19145  017A2C  6E0C               	movwf	(btemp+11)^0,c
 19146                           
 19147                           ;stkvar	_cp @ sp[(-17)+11]
 19148  017A2E  0EFB               	movlw	-5
 19149  017A30  0060  F033  FFE3   	movff	btemp+11,plusw1
 19150  017A36  0EFA               	movlw	-6
 19151  017A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19152  017A3E                     l13502:
 19153                           
 19154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 19155                           ;stkvar	_cp @ sp[(-17)+11]
 19156  017A3E  0EFA               	movlw	-6
 19157  017A40  006F FF8F FFE6     	movff	plusw1,postinc1
 19158  017A46  006F FF8F FFE6     	movff	plusw1,postinc1
 19159  017A4C  ECFB  F0DB         	call	_strlen	;wreg free
 19160                           
 19161                           ;stkvar	_l @ sp[(-17)+7]
 19162  017A50  0EF6               	movlw	-10
 19163  017A52  0060  F007  FFE3   	movff	btemp,plusw1
 19164  017A58  0EF7               	movlw	-9
 19165  017A5A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19166                           
 19167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 19168                           ;stkvar	_p @ sp[(-17)+9]
 19169  017A60  0EF8               	movlw	-8
 19170  017A62  0060  F0F3  FFE3   	movff	_prec,plusw1
 19171  017A68  0EF9               	movlw	-7
 19172  017A6A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19173                           
 19174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 19175                           ;stkvar	_p @ sp[(-17)+9]
 19176  017A70  0EF9               	movlw	-7
 19177  017A72  BEE3               	btfsc	plusw1,7,c
 19178  017A74  D023               	goto	l2540
 19179                           
 19180                           ;stkvar	_l @ sp[(-17)+7]
 19181                           ;stkvar	_p @ sp[(-17)+9]
 19182  017A76  50E1               	movf	fsr1l,w,c
 19183  017A78  0FF8               	addlw	-8
 19184  017A7A  6ED9               	movwf	fsr2l,c
 19185  017A7C  50E2               	movf	fsr1h,w,c
 19186  017A7E  6EDA               	movwf	fsr2h,c
 19187  017A80  0EFF               	movlw	255
 19188  017A82  22DA               	addwfc	fsr2h,f,c
 19189  017A84  0EF6               	movlw	-10
 19190  017A86  50E3               	movf	plusw1,w,c
 19191  017A88  5CDE               	subwf	postinc2,w,c
 19192  017A8A  50DE               	movf	postinc2,w,c
 19193  017A8C  0A80               	xorlw	128
 19194  017A8E  6E01               	movwf	btemp^0,c
 19195  017A90  0EF7               	movlw	-9
 19196  017A92  50E3               	movf	plusw1,w,c
 19197  017A94  0A80               	xorlw	128
 19198  017A96  5801               	subwfb	btemp^0,w,c
 19199  017A98  B0D8               	btfsc	status,0,c
 19200  017A9A  D010               	goto	l2540
 19201                           
 19202                           ;stkvar	_p @ sp[(-17)+9]
 19203                           ;stkvar	_l @ sp[(-17)+7]
 19204  017A9C  0EF8               	movlw	-8
 19205  017A9E  006F FF8C  F001    	movff	plusw1,btemp
 19206  017AA4  0EF6               	movlw	-10
 19207  017AA6  0060  F007  FFE3   	movff	btemp,plusw1
 19208  017AAC  0EF9               	movlw	-7
 19209  017AAE  006F FF8C  F001    	movff	plusw1,btemp
 19210  017AB4  0EF7               	movlw	-9
 19211  017AB6  0060  F007  FFE3   	movff	btemp,plusw1
 19212  017ABC                     l2540:
 19213                           
 19214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 19215                           ;stkvar	_l @ sp[(-17)+7]
 19216                           ;stkvar	_p @ sp[(-17)+9]
 19217  017ABC  0EF6               	movlw	-10
 19218  017ABE  006F FF8C  F001    	movff	plusw1,btemp
 19219  017AC4  0EF8               	movlw	-8
 19220  017AC6  0060  F007  FFE3   	movff	btemp,plusw1
 19221  017ACC  0EF7               	movlw	-9
 19222  017ACE  006F FF8C  F001    	movff	plusw1,btemp
 19223  017AD4  0EF9               	movlw	-7
 19224  017AD6  0060  F007  FFE3   	movff	btemp,plusw1
 19225                           
 19226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 19227                           ;stkvar	_w @ sp[(-17)+13]
 19228  017ADC  0EFC               	movlw	-4
 19229  017ADE  0060  F0EB  FFE3   	movff	_width,plusw1
 19230  017AE4  0EFD               	movlw	-3
 19231  017AE6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19232                           
 19233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 19234  017AEC  A03E               	btfss	_flags^0,0,c
 19235  017AEE  D01F               	goto	l13522
 19236  017AF0  D031               	goto	u12600
 19237  017AF2                     l13518:
 19238                           
 19239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 19240                           ;stkvar	_fp @ sp[(-17)+-2]
 19241  017AF2  0EED               	movlw	-19
 19242  017AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19243  017AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 19244  017B00  0E20               	movlw	32
 19245  017B02  6EE6               	movwf	postinc1,c
 19246  017B04  0E00               	movlw	0
 19247  017B06  6EE6               	movwf	postinc1,c
 19248  017B08  ECFE  F0D1         	call	_fputc	;wreg free
 19249                           
 19250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 19251                           ;stkvar	_l @ sp[(-17)+7]
 19252  017B0C  0EF6               	movlw	-10
 19253  017B0E  50E3               	movf	plusw1,w,c
 19254  017B10  0F01               	addlw	1
 19255  017B12  6E01               	movwf	btemp^0,c
 19256  017B14  0EF6               	movlw	-10
 19257  017B16  0060  F007  FFE3   	movff	btemp,plusw1
 19258  017B1C  6A01               	clrf	btemp^0,c
 19259  017B1E  0EF7               	movlw	-9
 19260  017B20  50E3               	movf	plusw1,w,c
 19261  017B22  2001               	addwfc	btemp^0,w,c
 19262  017B24  6E01               	movwf	btemp^0,c
 19263  017B26  0EF7               	movlw	-9
 19264  017B28  0060  F007  FFE3   	movff	btemp,plusw1
 19265  017B2E                     l13522:
 19266                           
 19267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 19268                           ;stkvar	_w @ sp[(-17)+13]
 19269                           ;stkvar	_l @ sp[(-17)+7]
 19270  017B2E  50E1               	movf	fsr1l,w,c
 19271  017B30  0FF6               	addlw	-10
 19272  017B32  6ED9               	movwf	fsr2l,c
 19273  017B34  50E2               	movf	fsr1h,w,c
 19274  017B36  6EDA               	movwf	fsr2h,c
 19275  017B38  0EFF               	movlw	255
 19276  017B3A  22DA               	addwfc	fsr2h,f,c
 19277  017B3C  0EFC               	movlw	-4
 19278  017B3E  50E3               	movf	plusw1,w,c
 19279  017B40  5CDE               	subwf	postinc2,w,c
 19280  017B42  50DE               	movf	postinc2,w,c
 19281  017B44  0A80               	xorlw	128
 19282  017B46  6E01               	movwf	btemp^0,c
 19283  017B48  0EFD               	movlw	-3
 19284  017B4A  50E3               	movf	plusw1,w,c
 19285  017B4C  0A80               	xorlw	128
 19286  017B4E  5801               	subwfb	btemp^0,w,c
 19287  017B50  A0D8               	btfss	status,0,c
 19288  017B52  D7CF               	goto	l13518
 19289  017B54                     u12600:
 19290                           
 19291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 19292                           ;stkvar	_i @ sp[(-17)+15]
 19293  017B54  0EFE               	movlw	-2
 19294  017B56  6AE3               	clrf	plusw1,c
 19295  017B58  0EFF               	movlw	-1
 19296  017B5A  6AE3               	clrf	plusw1,c
 19297                           
 19298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 19299  017B5C  D045               	goto	l13532
 19300  017B5E                     l13526:
 19301                           
 19302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 19303                           ;stkvar	_fp @ sp[(-17)+-2]
 19304  017B5E  0EED               	movlw	-19
 19305  017B60  006F FF8F FFE6     	movff	plusw1,postinc1
 19306  017B66  006F FF8F FFE6     	movff	plusw1,postinc1
 19307                           
 19308                           ;stkvar	_cp @ sp[(-19)+11]
 19309  017B6C  0EF8               	movlw	-8
 19310  017B6E  006F FF8F FFF6     	movff	plusw1,tblptrl
 19311  017B74  0EF9               	movlw	-7
 19312  017B76  006F FF8F FFF7     	movff	plusw1,tblptrh
 19313  017B7C  0E00               	movlw	low (__mediumconst shr (0+16))
 19314  017B7E  6EF8               	movwf	tblptru,c
 19315  017B80  0E1F               	movlw	(high __ramtop+-1)
 19316  017B82  64F7               	cpfsgt	tblptrh,c
 19317  017B84  D003               	bra	u12617
 19318  017B86  0008               	tblrd		*
 19319  017B88  50F5               	movf	tablat,w,c
 19320  017B8A  D007               	bra	u12610
 19321  017B8C                     u12617:
 19322  017B8C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19323  017B92  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19324  017B98  50EF               	movf	indf0,w,c
 19325  017B9A                     u12610:
 19326  017B9A  6EE6               	movwf	postinc1,c
 19327  017B9C  0E00               	movlw	0
 19328  017B9E  6EE6               	movwf	postinc1,c
 19329  017BA0  ECFE  F0D1         	call	_fputc	;wreg free
 19330                           
 19331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 19332                           ;stkvar	_cp @ sp[(-17)+11]
 19333  017BA4  0EFA               	movlw	-6
 19334  017BA6  50E3               	movf	plusw1,w,c
 19335  017BA8  0F01               	addlw	1
 19336  017BAA  6E01               	movwf	btemp^0,c
 19337  017BAC  0EFA               	movlw	-6
 19338  017BAE  0060  F007  FFE3   	movff	btemp,plusw1
 19339  017BB4  6A01               	clrf	btemp^0,c
 19340  017BB6  0EFB               	movlw	-5
 19341  017BB8  50E3               	movf	plusw1,w,c
 19342  017BBA  2001               	addwfc	btemp^0,w,c
 19343  017BBC  6E01               	movwf	btemp^0,c
 19344  017BBE  0EFB               	movlw	-5
 19345  017BC0  0060  F007  FFE3   	movff	btemp,plusw1
 19346                           
 19347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 19348                           ;stkvar	_i @ sp[(-17)+15]
 19349  017BC6  0EFE               	movlw	-2
 19350  017BC8  50E3               	movf	plusw1,w,c
 19351  017BCA  0F01               	addlw	1
 19352  017BCC  6E01               	movwf	btemp^0,c
 19353  017BCE  0EFE               	movlw	-2
 19354  017BD0  0060  F007  FFE3   	movff	btemp,plusw1
 19355  017BD6  6A01               	clrf	btemp^0,c
 19356  017BD8  0EFF               	movlw	-1
 19357  017BDA  50E3               	movf	plusw1,w,c
 19358  017BDC  2001               	addwfc	btemp^0,w,c
 19359  017BDE  6E01               	movwf	btemp^0,c
 19360  017BE0  0EFF               	movlw	-1
 19361  017BE2  0060  F007  FFE3   	movff	btemp,plusw1
 19362  017BE8                     l13532:
 19363                           
 19364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 19365                           ;stkvar	_p @ sp[(-17)+9]
 19366                           ;stkvar	_i @ sp[(-17)+15]
 19367  017BE8  50E1               	movf	fsr1l,w,c
 19368  017BEA  0FFE               	addlw	-2
 19369  017BEC  6ED9               	movwf	fsr2l,c
 19370  017BEE  50E2               	movf	fsr1h,w,c
 19371  017BF0  6EDA               	movwf	fsr2h,c
 19372  017BF2  0EFF               	movlw	255
 19373  017BF4  22DA               	addwfc	fsr2h,f,c
 19374  017BF6  0EF8               	movlw	-8
 19375  017BF8  50E3               	movf	plusw1,w,c
 19376  017BFA  5CDE               	subwf	postinc2,w,c
 19377  017BFC  50DE               	movf	postinc2,w,c
 19378  017BFE  0A80               	xorlw	128
 19379  017C00  6E01               	movwf	btemp^0,c
 19380  017C02  0EF9               	movlw	-7
 19381  017C04  50E3               	movf	plusw1,w,c
 19382  017C06  0A80               	xorlw	128
 19383  017C08  5801               	subwfb	btemp^0,w,c
 19384  017C0A  A0D8               	btfss	status,0,c
 19385  017C0C  D7A8               	goto	l13526
 19386                           
 19387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 19388  017C0E  B03E               	btfsc	_flags^0,0,c
 19389  017C10  D01F               	goto	l13540
 19390  017C12  D031               	goto	u12640
 19391  017C14                     l13536:
 19392                           
 19393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 19394                           ;stkvar	_fp @ sp[(-17)+-2]
 19395  017C14  0EED               	movlw	-19
 19396  017C16  006F FF8F FFE6     	movff	plusw1,postinc1
 19397  017C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 19398  017C22  0E20               	movlw	32
 19399  017C24  6EE6               	movwf	postinc1,c
 19400  017C26  0E00               	movlw	0
 19401  017C28  6EE6               	movwf	postinc1,c
 19402  017C2A  ECFE  F0D1         	call	_fputc	;wreg free
 19403                           
 19404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 19405                           ;stkvar	_l @ sp[(-17)+7]
 19406  017C2E  0EF6               	movlw	-10
 19407  017C30  50E3               	movf	plusw1,w,c
 19408  017C32  0F01               	addlw	1
 19409  017C34  6E01               	movwf	btemp^0,c
 19410  017C36  0EF6               	movlw	-10
 19411  017C38  0060  F007  FFE3   	movff	btemp,plusw1
 19412  017C3E  6A01               	clrf	btemp^0,c
 19413  017C40  0EF7               	movlw	-9
 19414  017C42  50E3               	movf	plusw1,w,c
 19415  017C44  2001               	addwfc	btemp^0,w,c
 19416  017C46  6E01               	movwf	btemp^0,c
 19417  017C48  0EF7               	movlw	-9
 19418  017C4A  0060  F007  FFE3   	movff	btemp,plusw1
 19419  017C50                     l13540:
 19420                           
 19421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 19422                           ;stkvar	_w @ sp[(-17)+13]
 19423                           ;stkvar	_l @ sp[(-17)+7]
 19424  017C50  50E1               	movf	fsr1l,w,c
 19425  017C52  0FF6               	addlw	-10
 19426  017C54  6ED9               	movwf	fsr2l,c
 19427  017C56  50E2               	movf	fsr1h,w,c
 19428  017C58  6EDA               	movwf	fsr2h,c
 19429  017C5A  0EFF               	movlw	255
 19430  017C5C  22DA               	addwfc	fsr2h,f,c
 19431  017C5E  0EFC               	movlw	-4
 19432  017C60  50E3               	movf	plusw1,w,c
 19433  017C62  5CDE               	subwf	postinc2,w,c
 19434  017C64  50DE               	movf	postinc2,w,c
 19435  017C66  0A80               	xorlw	128
 19436  017C68  6E01               	movwf	btemp^0,c
 19437  017C6A  0EFD               	movlw	-3
 19438  017C6C  50E3               	movf	plusw1,w,c
 19439  017C6E  0A80               	xorlw	128
 19440  017C70  5801               	subwfb	btemp^0,w,c
 19441  017C72  A0D8               	btfss	status,0,c
 19442  017C74  D7CF               	goto	l13536
 19443  017C76                     u12640:
 19444                           
 19445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 19446                           ;stkvar	_l @ sp[(-17)+7]
 19447  017C76  0EF6               	movlw	-10
 19448  017C78  006F FF8C  F001    	movff	plusw1,btemp
 19449  017C7E  0EF7               	movlw	-9
 19450  017C80  006F FF8C  F002    	movff	plusw1,btemp+1
 19451                           
 19452                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19453  017C86  0EEB               	movlw	235
 19454  017C88  26E1               	addwf	fsr1l,f,c
 19455  017C8A  0EFF               	movlw	255
 19456  017C8C  22E2               	addwfc	fsr1h,f,c
 19457  017C8E  0012               	return		;funcret
 19458  017C90                     __end_of_stoa:
 19459                           	opt callstack 0
 19460                           
 19461 ;; *************** function _efgtoa *****************
 19462 ;; Defined at:
 19463 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19464 ;; Parameters:    Size  Location     Type
 19465 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19466 ;;		 -> f(6), NULL(0), 
 19467 ;;  f               4  [STACK] PTR struct _IO_FILE
 19468 ;;  c               1  [STACK] unsigned char 
 19469 ;; Auto vars:     Size  Location     Type
 19470 ;;  u               4  [STACK] unsigned char 
 19471 ;;  g               4  [STACK] unsigned char 
 19472 ;;  l               4  [STACK] unsigned char 
 19473 ;;  h               4  [STACK] unsigned char 
 19474 ;;  ou              4  [STACK] unsigned char 
 19475 ;;  n               2  [STACK] int 
 19476 ;;  e               2  [STACK] int 
 19477 ;;  i               2  [STACK] int 
 19478 ;;  w               2  [STACK] int 
 19479 ;;  p               2  [STACK] int 
 19480 ;;  sign            2  [STACK] int 
 19481 ;;  d               2  [STACK] int 
 19482 ;;  ne              2  [STACK] int 
 19483 ;;  m               2  [STACK] int 
 19484 ;;  pp              2  [STACK] int 
 19485 ;;  t               2  [STACK] int 
 19486 ;;  mode            1  [STACK] unsigned char 
 19487 ;;  nmode           1  [STACK] unsigned char 
 19488 ;; Return value:  Size  Location     Type
 19489 ;;                  2  [STACK] int 
 19490 ;; Registers used:
 19491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 19492 ;; Tracked objects:
 19493 ;;		On entry : 0/0
 19494 ;;		On exit  : 0/0
 19495 ;;		Unchanged: 0/0
 19496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19501 ;;Total ram usage:        0 bytes
 19502 ;; Hardware stack levels used:    1
 19503 ;; Hardware stack levels required when called:   20
 19504 ;; This function calls:
 19505 ;;		___awdiv
 19506 ;;		___awmod
 19507 ;;		___fladd
 19508 ;;		___fldiv
 19509 ;;		___fleq
 19510 ;;		___flge
 19511 ;;		___flmul
 19512 ;;		___flneg
 19513 ;;		___flsub
 19514 ;;		___fltol
 19515 ;;		___fpclassifyf
 19516 ;;		_floorf
 19517 ;;		_isupper
 19518 ;;		_pad
 19519 ;;		_strcpy
 19520 ;;		_tolower
 19521 ;; This function is called by:
 19522 ;;		_vfpfcnvrt
 19523 ;; This function uses a reentrant model
 19524 ;;
 19525                           
 19526                           	psect	text75
 19527  01127E                     __ptext75:
 19528                           	opt callstack 0
 19529  01127E                     _efgtoa:
 19530                           	opt callstack 0
 19531                           
 19532                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19533  01127E  0E38               	movlw	56
 19534  011280  26E1               	addwf	fsr1l,f,c
 19535  011282  0E00               	movlw	0
 19536  011284  22E2               	addwfc	fsr1h,f,c
 19537                           
 19538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 19539                           ;stkvar	_sign @ sp[(-56)+42]
 19540                           
 19541                           ;incstack = 0
 19542 ;; hardware stack exceeded
 19543  011286  0EF2               	movlw	-14
 19544  011288  6AE3               	clrf	plusw1,c
 19545  01128A  0EF3               	movlw	-13
 19546  01128C  6AE3               	clrf	plusw1,c
 19547                           
 19548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 19549                           ;stkvar	_f @ sp[(-56)+-6]
 19550  01128E  0EC2               	movlw	-62
 19551  011290  006F FF8C  F009    	movff	plusw1,btemp+8
 19552  011296  0EC3               	movlw	-61
 19553  011298  006F FF8C  F00A    	movff	plusw1,btemp+9
 19554  01129E  0EC4               	movlw	-60
 19555  0112A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19556  0112A6  0EC5               	movlw	-59
 19557  0112A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19558                           
 19559                           ;stkvar	_g @ sp[(-56)+16]
 19560  0112AE  0ED8               	movlw	-40
 19561  0112B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 19562  0112B6  0ED9               	movlw	-39
 19563  0112B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19564  0112BE  0EDA               	movlw	-38
 19565  0112C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19566  0112C6  0EDB               	movlw	-37
 19567  0112C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19568                           
 19569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 19570                           ;stkvar	_g @ sp[(-56)+16]
 19571  0112CE  0EDB               	movlw	-37
 19572  0112D0  AEE3               	btfss	plusw1,7,c
 19573  0112D2  D02B               	goto	l13200
 19574                           
 19575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 19576  0112D4  0E01               	movlw	1
 19577  0112D6  6E0B               	movwf	(btemp+10)^0,c
 19578  0112D8  0E00               	movlw	0
 19579  0112DA  6E0C               	movwf	(btemp+11)^0,c
 19580                           
 19581                           ;stkvar	_sign @ sp[(-56)+42]
 19582  0112DC  0EF2               	movlw	-14
 19583  0112DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19584  0112E4  0EF3               	movlw	-13
 19585  0112E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 19586                           
 19587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 19588                           ;stkvar	_g @ sp[(-56)+16]
 19589  0112EC  0ED8               	movlw	-40
 19590  0112EE  006F FF8F FFE6     	movff	plusw1,postinc1
 19591  0112F4  006F FF8F FFE6     	movff	plusw1,postinc1
 19592  0112FA  006F FF8F FFE6     	movff	plusw1,postinc1
 19593  011300  006F FF8F FFE6     	movff	plusw1,postinc1
 19594  011306  ECFD  F0E2         	call	___flneg	;wreg free
 19595                           
 19596                           ;stkvar	_g @ sp[(-56)+16]
 19597  01130A  0ED8               	movlw	-40
 19598  01130C  0060  F007  FFE3   	movff	btemp,plusw1
 19599  011312  0ED9               	movlw	-39
 19600  011314  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19601  01131A  0EDA               	movlw	-38
 19602  01131C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19603  011322  0EDB               	movlw	-37
 19604  011324  0060  F013  FFE3   	movff	btemp+3,plusw1
 19605  01132A                     l13200:
 19606                           
 19607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 19608                           ;stkvar	_n @ sp[(-56)+32]
 19609  01132A  0EE8               	movlw	-24
 19610  01132C  6AE3               	clrf	plusw1,c
 19611  01132E  0EE9               	movlw	-23
 19612  011330  6AE3               	clrf	plusw1,c
 19613                           
 19614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 19615                           ;stkvar	_w @ sp[(-56)+38]
 19616  011332  0EEE               	movlw	-18
 19617  011334  0060  F0EB  FFE3   	movff	_width,plusw1
 19618  01133A  0EEF               	movlw	-17
 19619  01133C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19620                           
 19621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 19622                           ;stkvar	_sign @ sp[(-56)+42]
 19623  011342  0EF2               	movlw	-14
 19624  011344  006F FF8C  F001    	movff	plusw1,btemp
 19625  01134A  0EF3               	movlw	-13
 19626  01134C  50E3               	movf	plusw1,w,c
 19627  01134E  1001               	iorwf	btemp^0,w,c
 19628  011350  A4D8               	btfss	status,2,c
 19629  011352  D002               	goto	u12050
 19630  011354  A43E               	btfss	_flags^0,2,c
 19631  011356  D036               	goto	l13220
 19632  011358                     u12050:
 19633                           
 19634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 19635                           ;stkvar	_sign @ sp[(-56)+42]
 19636  011358  0EF2               	movlw	-14
 19637  01135A  006F FF8C  F001    	movff	plusw1,btemp
 19638  011360  0EF3               	movlw	-13
 19639  011362  50E3               	movf	plusw1,w,c
 19640  011364  1001               	iorwf	btemp^0,w,c
 19641  011366  A4D8               	btfss	status,2,c
 19642  011368  D002               	goto	l13212
 19643  01136A  0E2B               	movlw	43
 19644  01136C  D001               	goto	L21
 19645  01136E                     l13212:
 19646  01136E  0E2D               	movlw	45
 19647  011370                     L21:
 19648  011370  6E0B               	movwf	(btemp+10)^0,c
 19649  011372  0E00               	movlw	0
 19650  011374  6E0C               	movwf	(btemp+11)^0,c
 19651                           
 19652                           ;stkvar	_efgtoa$6155 @ sp[(-56)+10]
 19653  011376  0ED2               	movlw	-46
 19654  011378  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19655  01137E  0ED3               	movlw	-45
 19656  011380  0060  F033  FFE3   	movff	btemp+11,plusw1
 19657                           
 19658                           ;stkvar	_efgtoa$6155 @ sp[(-56)+10]
 19659  011386  0ED2               	movlw	-46
 19660  011388  006F FF8C  F243    	movff	plusw1,_dbuf
 19661                           
 19662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 19663                           ;stkvar	_n @ sp[(-56)+32]
 19664  01138E  0EE8               	movlw	-24
 19665  011390  50E3               	movf	plusw1,w,c
 19666  011392  0F01               	addlw	1
 19667  011394  6E01               	movwf	btemp^0,c
 19668  011396  0EE8               	movlw	-24
 19669  011398  0060  F007  FFE3   	movff	btemp,plusw1
 19670  01139E  6A01               	clrf	btemp^0,c
 19671  0113A0  0EE9               	movlw	-23
 19672  0113A2  50E3               	movf	plusw1,w,c
 19673  0113A4  2001               	addwfc	btemp^0,w,c
 19674  0113A6  6E01               	movwf	btemp^0,c
 19675  0113A8  0EE9               	movlw	-23
 19676  0113AA  0060  F007  FFE3   	movff	btemp,plusw1
 19677                           
 19678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 19679                           ;stkvar	_w @ sp[(-56)+38]
 19680  0113B0  50E1               	movf	fsr1l,w,c
 19681  0113B2  0FEE               	addlw	-18
 19682  0113B4  6ED9               	movwf	fsr2l,c
 19683  0113B6  50E2               	movf	fsr1h,w,c
 19684  0113B8  6EDA               	movwf	fsr2h,c
 19685  0113BA  0EFF               	movlw	255
 19686  0113BC  22DA               	addwfc	fsr2h,f,c
 19687  0113BE  06DE               	decf	postinc2,f,c
 19688  0113C0  0E00               	movlw	0
 19689  0113C2  5ADD               	subwfb	postdec2,f,c
 19690  0113C4                     l13220:
 19691                           
 19692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 19693                           ;stkvar	_g @ sp[(-56)+16]
 19694  0113C4  0ED8               	movlw	-40
 19695  0113C6  006F FF8F FFE6     	movff	plusw1,postinc1
 19696  0113CC  006F FF8F FFE6     	movff	plusw1,postinc1
 19697  0113D2  006F FF8F FFE6     	movff	plusw1,postinc1
 19698  0113D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19699  0113DE  ECC1  F0C9         	call	___fpclassifyf	;wreg free
 19700  0113E2  0401               	decf	btemp^0,w,c
 19701  0113E4  1002               	iorwf	(btemp+1)^0,w,c
 19702  0113E6  A4D8               	btfss	status,2,c
 19703  0113E8  D076               	goto	l13238
 19704  0113EA  0EBF               	movlw	191
 19705  0113EC  6E0B               	movwf	(btemp+10)^0,c
 19706  0113EE  0EFF               	movlw	255
 19707  0113F0  6E0C               	movwf	(btemp+11)^0,c
 19708                           
 19709                           ;stkvar	_c @ sp[(-56)+-7]
 19710  0113F2  0EC1               	movlw	-63
 19711  0113F4  50E3               	movf	plusw1,w,c
 19712  0113F6  6E09               	movwf	(btemp+8)^0,c
 19713  0113F8  6A0A               	clrf	(btemp+9)^0,c
 19714  0113FA  500B               	movf	(btemp+10)^0,w,c
 19715  0113FC  2609               	addwf	(btemp+8)^0,f,c
 19716  0113FE  500C               	movf	(btemp+11)^0,w,c
 19717  011400  220A               	addwfc	(btemp+9)^0,f,c
 19718  011402  500A               	movf	(btemp+9)^0,w,c
 19719  011404  E106               	bnz	u12080
 19720  011406  0E1A               	movlw	26
 19721  011408  5C09               	subwf	(btemp+8)^0,w,c
 19722  01140A  B0D8               	btfsc	status,0,c
 19723  01140C  D002               	goto	u12080
 19724  01140E  0E01               	movlw	1
 19725  011410  D001               	goto	u12090
 19726  011412                     u12080:
 19727  011412  0E00               	movlw	0
 19728  011414                     u12090:
 19729  011414  6E0B               	movwf	(btemp+10)^0,c
 19730  011416  6A0C               	clrf	(btemp+11)^0,c
 19731                           
 19732                           ;stkvar	_efgtoa$6156 @ sp[(-56)+8]
 19733  011418  0ED0               	movlw	-48
 19734  01141A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19735  011420  0ED1               	movlw	-47
 19736  011422  0060  F033  FFE3   	movff	btemp+11,plusw1
 19737                           
 19738                           ;stkvar	_efgtoa$6156 @ sp[(-56)+8]
 19739  011428  0ED0               	movlw	-48
 19740  01142A  006F FF8C  F001    	movff	plusw1,btemp
 19741  011430  0ED1               	movlw	-47
 19742  011432  50E3               	movf	plusw1,w,c
 19743  011434  1001               	iorwf	btemp^0,w,c
 19744  011436  B4D8               	btfsc	status,2,c
 19745  011438  D017               	goto	l13230
 19746                           
 19747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 19748  01143A  0ED7               	movlw	low STR_82
 19749  01143C  6EE6               	movwf	postinc1,c
 19750  01143E  0EFF               	movlw	high STR_82
 19751  011440  6EE6               	movwf	postinc1,c
 19752                           
 19753                           ;stkvar	_n @ sp[(-58)+32]
 19754  011442  0E43               	movlw	low _dbuf
 19755  011444  6E0B               	movwf	(btemp+10)^0,c
 19756  011446  0E02               	movlw	high _dbuf
 19757  011448  6E0C               	movwf	(btemp+11)^0,c
 19758  01144A  0EE6               	movlw	-26
 19759  01144C  50E3               	movf	plusw1,w,c
 19760  01144E  260B               	addwf	(btemp+10)^0,f,c
 19761  011450  0EE7               	movlw	-25
 19762  011452  50E3               	movf	plusw1,w,c
 19763  011454  220C               	addwfc	(btemp+11)^0,f,c
 19764  011456  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19765  01145C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19766  011462  ECA3  F0D7         	call	_strcpy	;wreg free
 19767                           
 19768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 19769  011466  D016               	goto	l13232
 19770  011468                     l13230:
 19771                           
 19772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 19773  011468  0EDF               	movlw	low STR_83
 19774  01146A  6EE6               	movwf	postinc1,c
 19775  01146C  0EFF               	movlw	high STR_83
 19776  01146E  6EE6               	movwf	postinc1,c
 19777                           
 19778                           ;stkvar	_n @ sp[(-58)+32]
 19779  011470  0E43               	movlw	low _dbuf
 19780  011472  6E0B               	movwf	(btemp+10)^0,c
 19781  011474  0E02               	movlw	high _dbuf
 19782  011476  6E0C               	movwf	(btemp+11)^0,c
 19783  011478  0EE6               	movlw	-26
 19784  01147A  50E3               	movf	plusw1,w,c
 19785  01147C  260B               	addwf	(btemp+10)^0,f,c
 19786  01147E  0EE7               	movlw	-25
 19787  011480  50E3               	movf	plusw1,w,c
 19788  011482  220C               	addwfc	(btemp+11)^0,f,c
 19789  011484  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19790  01148A  0060  F033  FFE6   	movff	btemp+11,postinc1
 19791  011490  ECA3  F0D7         	call	_strcpy	;wreg free
 19792  011494                     l13232:
 19793                           
 19794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 19795                           ;stkvar	_w @ sp[(-56)+38]
 19796  011494  50E1               	movf	fsr1l,w,c
 19797  011496  0FEE               	addlw	-18
 19798  011498  6ED9               	movwf	fsr2l,c
 19799  01149A  50E2               	movf	fsr1h,w,c
 19800  01149C  6EDA               	movwf	fsr2h,c
 19801  01149E  0EFF               	movlw	255
 19802  0114A0  22DA               	addwfc	fsr2h,f,c
 19803  0114A2  0EFD               	movlw	253
 19804  0114A4  26DE               	addwf	postinc2,f,c
 19805  0114A6  0EFF               	movlw	255
 19806  0114A8  22DD               	addwfc	postdec2,f,c
 19807  0114AA                     l13234:
 19808                           
 19809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 19810                           ;stkvar	_w @ sp[(-56)+38]
 19811  0114AA  0EEE               	movlw	-18
 19812  0114AC  006F FF8F FFE6     	movff	plusw1,postinc1
 19813  0114B2  006F FF8F FFE6     	movff	plusw1,postinc1
 19814  0114B8  0E43               	movlw	low _dbuf
 19815  0114BA  6EE6               	movwf	postinc1,c
 19816  0114BC  0E02               	movlw	high _dbuf
 19817  0114BE  6EE6               	movwf	postinc1,c
 19818                           
 19819                           ;stkvar	_fp @ sp[(-60)+-2]
 19820  0114C0  0EC2               	movlw	-62
 19821  0114C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19822  0114C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19823  0114CE  EC34  F0D4         	call	_pad	;wreg free
 19824  0114D2  EF5C  F092         	goto	l2458
 19825  0114D6                     l13238:
 19826                           
 19827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 19828                           ;stkvar	_g @ sp[(-56)+16]
 19829  0114D6  0ED8               	movlw	-40
 19830  0114D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19831  0114DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19832  0114E4  006F FF8F FFE6     	movff	plusw1,postinc1
 19833  0114EA  006F FF8F FFE6     	movff	plusw1,postinc1
 19834  0114F0  ECC1  F0C9         	call	___fpclassifyf	;wreg free
 19835  0114F4  5001               	movf	btemp^0,w,c
 19836  0114F6  1002               	iorwf	(btemp+1)^0,w,c
 19837  0114F8  A4D8               	btfss	status,2,c
 19838  0114FA  D056               	goto	l13256
 19839  0114FC  0EBF               	movlw	191
 19840  0114FE  6E0B               	movwf	(btemp+10)^0,c
 19841  011500  0EFF               	movlw	255
 19842  011502  6E0C               	movwf	(btemp+11)^0,c
 19843                           
 19844                           ;stkvar	_c @ sp[(-56)+-7]
 19845  011504  0EC1               	movlw	-63
 19846  011506  50E3               	movf	plusw1,w,c
 19847  011508  6E09               	movwf	(btemp+8)^0,c
 19848  01150A  6A0A               	clrf	(btemp+9)^0,c
 19849  01150C  500B               	movf	(btemp+10)^0,w,c
 19850  01150E  2609               	addwf	(btemp+8)^0,f,c
 19851  011510  500C               	movf	(btemp+11)^0,w,c
 19852  011512  220A               	addwfc	(btemp+9)^0,f,c
 19853  011514  500A               	movf	(btemp+9)^0,w,c
 19854  011516  E106               	bnz	u12120
 19855  011518  0E1A               	movlw	26
 19856  01151A  5C09               	subwf	(btemp+8)^0,w,c
 19857  01151C  B0D8               	btfsc	status,0,c
 19858  01151E  D002               	goto	u12120
 19859  011520  0E01               	movlw	1
 19860  011522  D001               	goto	u12130
 19861  011524                     u12120:
 19862  011524  0E00               	movlw	0
 19863  011526                     u12130:
 19864  011526  6E0B               	movwf	(btemp+10)^0,c
 19865  011528  6A0C               	clrf	(btemp+11)^0,c
 19866                           
 19867                           ;stkvar	_efgtoa$6160 @ sp[(-56)+6]
 19868  01152A  0ECE               	movlw	-50
 19869  01152C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19870  011532  0ECF               	movlw	-49
 19871  011534  0060  F033  FFE3   	movff	btemp+11,plusw1
 19872                           
 19873                           ;stkvar	_efgtoa$6160 @ sp[(-56)+6]
 19874  01153A  0ECE               	movlw	-50
 19875  01153C  006F FF8C  F001    	movff	plusw1,btemp
 19876  011542  0ECF               	movlw	-49
 19877  011544  50E3               	movf	plusw1,w,c
 19878  011546  1001               	iorwf	btemp^0,w,c
 19879  011548  B4D8               	btfsc	status,2,c
 19880  01154A  D017               	goto	l13248
 19881                           
 19882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 19883  01154C  0EDB               	movlw	low STR_86
 19884  01154E  6EE6               	movwf	postinc1,c
 19885  011550  0EFF               	movlw	high STR_86
 19886  011552  6EE6               	movwf	postinc1,c
 19887                           
 19888                           ;stkvar	_n @ sp[(-58)+32]
 19889  011554  0E43               	movlw	low _dbuf
 19890  011556  6E0B               	movwf	(btemp+10)^0,c
 19891  011558  0E02               	movlw	high _dbuf
 19892  01155A  6E0C               	movwf	(btemp+11)^0,c
 19893  01155C  0EE6               	movlw	-26
 19894  01155E  50E3               	movf	plusw1,w,c
 19895  011560  260B               	addwf	(btemp+10)^0,f,c
 19896  011562  0EE7               	movlw	-25
 19897  011564  50E3               	movf	plusw1,w,c
 19898  011566  220C               	addwfc	(btemp+11)^0,f,c
 19899  011568  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19900  01156E  0060  F033  FFE6   	movff	btemp+11,postinc1
 19901  011574  ECA3  F0D7         	call	_strcpy	;wreg free
 19902                           
 19903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 19904  011578  D78D               	goto	l13232
 19905  01157A                     l13248:
 19906                           
 19907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 19908  01157A  0EE3               	movlw	low STR_87
 19909  01157C  6EE6               	movwf	postinc1,c
 19910  01157E  0EFF               	movlw	high STR_87
 19911  011580  6EE6               	movwf	postinc1,c
 19912                           
 19913                           ;stkvar	_n @ sp[(-58)+32]
 19914  011582  0E43               	movlw	low _dbuf
 19915  011584  6E0B               	movwf	(btemp+10)^0,c
 19916  011586  0E02               	movlw	high _dbuf
 19917  011588  6E0C               	movwf	(btemp+11)^0,c
 19918  01158A  0EE6               	movlw	-26
 19919  01158C  50E3               	movf	plusw1,w,c
 19920  01158E  260B               	addwf	(btemp+10)^0,f,c
 19921  011590  0EE7               	movlw	-25
 19922  011592  50E3               	movf	plusw1,w,c
 19923  011594  220C               	addwfc	(btemp+11)^0,f,c
 19924  011596  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19925  01159C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19926  0115A2  ECA3  F0D7         	call	_strcpy	;wreg free
 19927  0115A6  D776               	goto	l13232
 19928  0115A8                     l13256:
 19929                           
 19930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 19931  0115A8  0E00               	movlw	0
 19932  0115AA  6E09               	movwf	(btemp+8)^0,c
 19933  0115AC  0E00               	movlw	0
 19934  0115AE  6E0A               	movwf	(btemp+9)^0,c
 19935  0115B0  0E80               	movlw	128
 19936  0115B2  6E0B               	movwf	(btemp+10)^0,c
 19937  0115B4  0E3F               	movlw	63
 19938  0115B6  6E0C               	movwf	(btemp+11)^0,c
 19939                           
 19940                           ;stkvar	_u @ sp[(-56)+12]
 19941  0115B8  0ED4               	movlw	-44
 19942  0115BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19943  0115C0  0ED5               	movlw	-43
 19944  0115C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19945  0115C8  0ED6               	movlw	-42
 19946  0115CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19947  0115D0  0ED7               	movlw	-41
 19948  0115D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19949                           
 19950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 19951                           ;stkvar	_e @ sp[(-56)+34]
 19952  0115D8  0EEA               	movlw	-22
 19953  0115DA  6AE3               	clrf	plusw1,c
 19954  0115DC  0EEB               	movlw	-21
 19955  0115DE  6AE3               	clrf	plusw1,c
 19956                           
 19957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 19958  0115E0  0E00               	movlw	0
 19959  0115E2  6EE6               	movwf	postinc1,c
 19960  0115E4  0E00               	movlw	0
 19961  0115E6  6EE6               	movwf	postinc1,c
 19962  0115E8  0E00               	movlw	0
 19963  0115EA  6EE6               	movwf	postinc1,c
 19964  0115EC  0E00               	movlw	0
 19965  0115EE  6EE6               	movwf	postinc1,c
 19966                           
 19967                           ;stkvar	_g @ sp[(-60)+16]
 19968  0115F0  0ED4               	movlw	-44
 19969  0115F2  006F FF8F FFE6     	movff	plusw1,postinc1
 19970  0115F8  006F FF8F FFE6     	movff	plusw1,postinc1
 19971  0115FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19972  011604  006F FF8F FFE6     	movff	plusw1,postinc1
 19973  01160A  ECDC  F0D8         	call	___fleq	;wreg free
 19974  01160E  A001               	btfss	btemp& (0+255),0,c
 19975  011610  D039               	goto	l13268
 19976  011612  D0BC               	goto	u12170
 19977  011614                     l13264:
 19978                           
 19979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 19980  011614  0E00               	movlw	0
 19981  011616  6EE6               	movwf	postinc1,c
 19982  011618  0E00               	movlw	0
 19983  01161A  6EE6               	movwf	postinc1,c
 19984  01161C  0E20               	movlw	32
 19985  01161E  6EE6               	movwf	postinc1,c
 19986  011620  0E41               	movlw	65
 19987  011622  6EE6               	movwf	postinc1,c
 19988                           
 19989                           ;stkvar	_u @ sp[(-60)+12]
 19990  011624  0ED0               	movlw	-48
 19991  011626  006F FF8F FFE6     	movff	plusw1,postinc1
 19992  01162C  006F FF8F FFE6     	movff	plusw1,postinc1
 19993  011632  006F FF8F FFE6     	movff	plusw1,postinc1
 19994  011638  006F FF8F FFE6     	movff	plusw1,postinc1
 19995  01163E  EC6E  F09F         	call	___flmul	;wreg free
 19996                           
 19997                           ;stkvar	_u @ sp[(-56)+12]
 19998  011642  0ED4               	movlw	-44
 19999  011644  0060  F007  FFE3   	movff	btemp,plusw1
 20000  01164A  0ED5               	movlw	-43
 20001  01164C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20002  011652  0ED6               	movlw	-42
 20003  011654  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20004  01165A  0ED7               	movlw	-41
 20005  01165C  0060  F013  FFE3   	movff	btemp+3,plusw1
 20006                           
 20007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 20008                           ;stkvar	_e @ sp[(-56)+34]
 20009  011662  0EEA               	movlw	-22
 20010  011664  50E3               	movf	plusw1,w,c
 20011  011666  0F01               	addlw	1
 20012  011668  6E01               	movwf	btemp^0,c
 20013  01166A  0EEA               	movlw	-22
 20014  01166C  0060  F007  FFE3   	movff	btemp,plusw1
 20015  011672  6A01               	clrf	btemp^0,c
 20016  011674  0EEB               	movlw	-21
 20017  011676  50E3               	movf	plusw1,w,c
 20018  011678  2001               	addwfc	btemp^0,w,c
 20019  01167A  6E01               	movwf	btemp^0,c
 20020  01167C  0EEB               	movlw	-21
 20021  01167E  0060  F007  FFE3   	movff	btemp,plusw1
 20022  011684                     l13268:
 20023                           
 20024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 20025  011684  0E00               	movlw	0
 20026  011686  6EE6               	movwf	postinc1,c
 20027  011688  0E00               	movlw	0
 20028  01168A  6EE6               	movwf	postinc1,c
 20029  01168C  0E20               	movlw	32
 20030  01168E  6EE6               	movwf	postinc1,c
 20031  011690  0E41               	movlw	65
 20032  011692  6EE6               	movwf	postinc1,c
 20033                           
 20034                           ;stkvar	_u @ sp[(-60)+12]
 20035  011694  0ED0               	movlw	-48
 20036  011696  006F FF8F FFE6     	movff	plusw1,postinc1
 20037  01169C  006F FF8F FFE6     	movff	plusw1,postinc1
 20038  0116A2  006F FF8F FFE6     	movff	plusw1,postinc1
 20039  0116A8  006F FF8F FFE6     	movff	plusw1,postinc1
 20040  0116AE  EC6E  F09F         	call	___flmul	;wreg free
 20041  0116B2  0060  F007  FFE6   	movff	btemp,postinc1
 20042  0116B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20043  0116BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20044  0116C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 20045                           
 20046                           ;stkvar	_g @ sp[(-60)+16]
 20047  0116CA  0ED4               	movlw	-44
 20048  0116CC  006F FF8F FFE6     	movff	plusw1,postinc1
 20049  0116D2  006F FF8F FFE6     	movff	plusw1,postinc1
 20050  0116D8  006F FF8F FFE6     	movff	plusw1,postinc1
 20051  0116DE  006F FF8F FFE6     	movff	plusw1,postinc1
 20052  0116E4  EC81  F0CD         	call	___flge	;wreg free
 20053  0116E8  A001               	btfss	btemp& (0+255),0,c
 20054  0116EA  D032               	goto	l13274
 20055  0116EC  D793               	goto	l13264
 20056  0116EE                     l13270:
 20057                           
 20058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 20059  0116EE  0E00               	movlw	0
 20060  0116F0  6EE6               	movwf	postinc1,c
 20061  0116F2  0E00               	movlw	0
 20062  0116F4  6EE6               	movwf	postinc1,c
 20063  0116F6  0E20               	movlw	32
 20064  0116F8  6EE6               	movwf	postinc1,c
 20065  0116FA  0E41               	movlw	65
 20066  0116FC  6EE6               	movwf	postinc1,c
 20067                           
 20068                           ;stkvar	_u @ sp[(-60)+12]
 20069  0116FE  0ED0               	movlw	-48
 20070  011700  006F FF8F FFE6     	movff	plusw1,postinc1
 20071  011706  006F FF8F FFE6     	movff	plusw1,postinc1
 20072  01170C  006F FF8F FFE6     	movff	plusw1,postinc1
 20073  011712  006F FF8F FFE6     	movff	plusw1,postinc1
 20074  011718  EC61  F0A7         	call	___fldiv	;wreg free
 20075                           
 20076                           ;stkvar	_u @ sp[(-56)+12]
 20077  01171C  0ED4               	movlw	-44
 20078  01171E  0060  F007  FFE3   	movff	btemp,plusw1
 20079  011724  0ED5               	movlw	-43
 20080  011726  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20081  01172C  0ED6               	movlw	-42
 20082  01172E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20083  011734  0ED7               	movlw	-41
 20084  011736  0060  F013  FFE3   	movff	btemp+3,plusw1
 20085                           
 20086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 20087                           ;stkvar	_e @ sp[(-56)+34]
 20088  01173C  50E1               	movf	fsr1l,w,c
 20089  01173E  0FEA               	addlw	-22
 20090  011740  6ED9               	movwf	fsr2l,c
 20091  011742  50E2               	movf	fsr1h,w,c
 20092  011744  6EDA               	movwf	fsr2h,c
 20093  011746  0EFF               	movlw	255
 20094  011748  22DA               	addwfc	fsr2h,f,c
 20095  01174A  06DE               	decf	postinc2,f,c
 20096  01174C  0E00               	movlw	0
 20097  01174E  5ADD               	subwfb	postdec2,f,c
 20098  011750                     l13274:
 20099                           
 20100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 20101                           ;stkvar	_u @ sp[(-56)+12]
 20102  011750  0ED4               	movlw	-44
 20103  011752  006F FF8F FFE6     	movff	plusw1,postinc1
 20104  011758  006F FF8F FFE6     	movff	plusw1,postinc1
 20105  01175E  006F FF8F FFE6     	movff	plusw1,postinc1
 20106  011764  006F FF8F FFE6     	movff	plusw1,postinc1
 20107                           
 20108                           ;stkvar	_g @ sp[(-60)+16]
 20109  01176A  0ED4               	movlw	-44
 20110  01176C  006F FF8F FFE6     	movff	plusw1,postinc1
 20111  011772  006F FF8F FFE6     	movff	plusw1,postinc1
 20112  011778  006F FF8F FFE6     	movff	plusw1,postinc1
 20113  01177E  006F FF8F FFE6     	movff	plusw1,postinc1
 20114  011784  EC81  F0CD         	call	___flge	;wreg free
 20115  011788  A001               	btfss	btemp& (0+255),0,c
 20116  01178A  D7B1               	goto	l13270
 20117  01178C                     u12170:
 20118                           
 20119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 20120                           ;stkvar	_c @ sp[(-56)+-7]
 20121  01178C  0EC1               	movlw	-63
 20122  01178E  50E3               	movf	plusw1,w,c
 20123  011790  6EE6               	movwf	postinc1,c
 20124  011792  0E00               	movlw	0
 20125  011794  6EE6               	movwf	postinc1,c
 20126  011796  EC40  F0DE         	call	_tolower	;wreg free
 20127                           
 20128                           ;stkvar	_mode @ sp[(-56)+54]
 20129  01179A  0EFE               	movlw	-2
 20130  01179C  0060  F007  FFE3   	movff	btemp,plusw1
 20131                           
 20132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 20133                           ;stkvar	_mode @ sp[(-56)+54]
 20134                           ;stkvar	_nmode @ sp[(-56)+55]
 20135  0117A2  0EFE               	movlw	-2
 20136  0117A4  006F FF8C  F001    	movff	plusw1,btemp
 20137  0117AA  0EFF               	movlw	-1
 20138  0117AC  0060  F007  FFE3   	movff	btemp,plusw1
 20139                           
 20140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 20141                           ;stkvar	_mode @ sp[(-56)+54]
 20142  0117B2  0EFE               	movlw	-2
 20143  0117B4  006F FF8C  F001    	movff	plusw1,btemp
 20144  0117BA  0E67               	movlw	103
 20145  0117BC  1801               	xorwf	btemp^0,w,c
 20146  0117BE  A4D8               	btfss	status,2,c
 20147  0117C0  D025               	goto	l13292
 20148                           
 20149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 20150  0117C2  503C               	movf	_prec^0,w,c
 20151  0117C4  103D               	iorwf	(_prec+1)^0,w,c
 20152  0117C6  A4D8               	btfss	status,2,c
 20153  0117C8  D004               	goto	l13286
 20154                           
 20155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 20156  0117CA  0E00               	movlw	0
 20157  0117CC  6E3D               	movwf	(_prec+1)^0,c
 20158  0117CE  0E01               	movlw	1
 20159  0117D0  6E3C               	movwf	_prec^0,c
 20160  0117D2                     l13286:
 20161                           
 20162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 20163  0117D2  BE3D               	btfsc	(_prec+1)^0,7,c
 20164  0117D4  D005               	goto	u12200
 20165  0117D6  503D               	movf	(_prec+1)^0,w,c
 20166  0117D8  E110               	bnz	l13290
 20167  0117DA  043C               	decf	_prec^0,w,c
 20168  0117DC  B0D8               	btfsc	status,0,c
 20169  0117DE  D00D               	goto	l13290
 20170  0117E0                     u12200:
 20171  0117E0  0E06               	movlw	6
 20172  0117E2  6E0B               	movwf	(btemp+10)^0,c
 20173  0117E4  0E00               	movlw	0
 20174  0117E6  6E0C               	movwf	(btemp+11)^0,c
 20175                           
 20176                           ;stkvar	_p @ sp[(-56)+40]
 20177  0117E8  0EF0               	movlw	-16
 20178  0117EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20179  0117F0  0EF1               	movlw	-15
 20180  0117F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 20181  0117F8  D00C               	goto	l13298
 20182  0117FA                     l13290:
 20183                           
 20184                           ;stkvar	_p @ sp[(-56)+40]
 20185  0117FA  0EF0               	movlw	-16
 20186  0117FC  0060  F0F3  FFE3   	movff	_prec,plusw1
 20187  011802  0EF1               	movlw	-15
 20188  011804  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20189  01180A  D003               	goto	l13298
 20190  01180C                     l13292:
 20191                           
 20192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 20193  01180C  AE3D               	btfss	(_prec+1)^0,7,c
 20194  01180E  D7F5               	goto	l13290
 20195  011810  D7E7               	goto	u12200
 20196  011812                     l13298:
 20197                           
 20198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 20199                           ;stkvar	_mode @ sp[(-56)+54]
 20200  011812  0EFE               	movlw	-2
 20201  011814  006F FF8C  F001    	movff	plusw1,btemp
 20202  01181A  0E67               	movlw	103
 20203  01181C  1801               	xorwf	btemp^0,w,c
 20204  01181E  A4D8               	btfss	status,2,c
 20205  011820  D02F               	goto	l13308
 20206                           
 20207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 20208                           ;stkvar	_e @ sp[(-56)+34]
 20209  011822  0EEB               	movlw	-21
 20210  011824  AEE3               	btfss	plusw1,7,c
 20211  011826  D00E               	goto	u12230
 20212  011828  0EEA               	movlw	-22
 20213  01182A  006F FF8C  F001    	movff	plusw1,btemp
 20214  011830  0EFC               	movlw	252
 20215  011832  5E01               	subwf	btemp^0,f,c
 20216  011834  0EEB               	movlw	-21
 20217  011836  006F FF8C  F001    	movff	plusw1,btemp
 20218  01183C  0EFF               	movlw	255
 20219  01183E  5A01               	subwfb	btemp^0,f,c
 20220  011840  A0D8               	btfss	status,0,c
 20221  011842  D018               	goto	l13306
 20222  011844                     u12230:
 20223                           
 20224                           ;stkvar	_e @ sp[(-56)+34]
 20225                           ;stkvar	_p @ sp[(-56)+40]
 20226  011844  0EF0               	movlw	-16
 20227  011846  50E3               	movf	plusw1,w,c
 20228  011848  0FFF               	addlw	255
 20229  01184A  6E0B               	movwf	(btemp+10)^0,c
 20230  01184C  0EF1               	movlw	-15
 20231  01184E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20232  011854  0EFF               	movlw	255
 20233  011856  220C               	addwfc	(btemp+11)^0,f,c
 20234  011858  0EEA               	movlw	-22
 20235  01185A  50E3               	movf	plusw1,w,c
 20236  01185C  5C0B               	subwf	(btemp+10)^0,w,c
 20237  01185E  500C               	movf	(btemp+11)^0,w,c
 20238  011860  0A80               	xorlw	128
 20239  011862  6E01               	movwf	btemp^0,c
 20240  011864  0EEB               	movlw	-21
 20241  011866  50E3               	movf	plusw1,w,c
 20242  011868  0A80               	xorlw	128
 20243  01186A  5801               	subwfb	btemp^0,w,c
 20244  01186C  A0D8               	btfss	status,0,c
 20245  01186E  D002               	goto	l13306
 20246                           
 20247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 20248  011870  0E66               	movlw	102
 20249  011872  D001               	goto	L22
 20250  011874                     l13306:
 20251                           
 20252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 20253  011874  0E65               	movlw	101
 20254  011876                     L22:
 20255  011876  6E0C               	movwf	(btemp+11)^0,c
 20256                           
 20257                           ;stkvar	_nmode @ sp[(-56)+55]
 20258  011878  0EFF               	movlw	-1
 20259  01187A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20260  011880                     l13308:
 20261                           
 20262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 20263                           ;stkvar	_p @ sp[(-56)+40]
 20264                           ;stkvar	_m @ sp[(-56)+48]
 20265  011880  0EF0               	movlw	-16
 20266  011882  006F FF8C  F001    	movff	plusw1,btemp
 20267  011888  0EF8               	movlw	-8
 20268  01188A  0060  F007  FFE3   	movff	btemp,plusw1
 20269  011890  0EF1               	movlw	-15
 20270  011892  006F FF8C  F001    	movff	plusw1,btemp
 20271  011898  0EF9               	movlw	-7
 20272  01189A  0060  F007  FFE3   	movff	btemp,plusw1
 20273                           
 20274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 20275                           ;stkvar	_mode @ sp[(-56)+54]
 20276  0118A0  0EFE               	movlw	-2
 20277  0118A2  006F FF8C  F001    	movff	plusw1,btemp
 20278  0118A8  0E67               	movlw	103
 20279  0118AA  1801               	xorwf	btemp^0,w,c
 20280  0118AC  A4D8               	btfss	status,2,c
 20281  0118AE  D00B               	goto	u12270
 20282                           
 20283                           ;stkvar	_nmode @ sp[(-56)+55]
 20284  0118B0  0EFF               	movlw	-1
 20285  0118B2  006F FF8C  F001    	movff	plusw1,btemp
 20286  0118B8  0E66               	movlw	102
 20287  0118BA  1801               	xorwf	btemp^0,w,c
 20288  0118BC  A4D8               	btfss	status,2,c
 20289  0118BE  D014               	goto	l2487
 20290                           
 20291                           ;stkvar	_e @ sp[(-56)+34]
 20292  0118C0  0EEB               	movlw	-21
 20293  0118C2  AEE3               	btfss	plusw1,7,c
 20294  0118C4  D011               	goto	l2487
 20295  0118C6                     u12270:
 20296                           
 20297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 20298                           ;stkvar	_m @ sp[(-56)+48]
 20299  0118C6  0EF8               	movlw	-8
 20300  0118C8  50E3               	movf	plusw1,w,c
 20301  0118CA  0F01               	addlw	1
 20302  0118CC  6E01               	movwf	btemp^0,c
 20303  0118CE  0EF8               	movlw	-8
 20304  0118D0  0060  F007  FFE3   	movff	btemp,plusw1
 20305  0118D6  6A01               	clrf	btemp^0,c
 20306  0118D8  0EF9               	movlw	-7
 20307  0118DA  50E3               	movf	plusw1,w,c
 20308  0118DC  2001               	addwfc	btemp^0,w,c
 20309  0118DE  6E01               	movwf	btemp^0,c
 20310  0118E0  0EF9               	movlw	-7
 20311  0118E2  0060  F007  FFE3   	movff	btemp,plusw1
 20312  0118E8                     l2487:
 20313                           
 20314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 20315                           ;stkvar	_nmode @ sp[(-56)+55]
 20316  0118E8  0EFF               	movlw	-1
 20317  0118EA  006F FF8C  F001    	movff	plusw1,btemp
 20318  0118F0  0E66               	movlw	102
 20319  0118F2  1801               	xorwf	btemp^0,w,c
 20320  0118F4  A4D8               	btfss	status,2,c
 20321  0118F6  D03B               	goto	l13328
 20322                           
 20323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 20324                           ;stkvar	_e @ sp[(-56)+34]
 20325  0118F8  0EEB               	movlw	-21
 20326  0118FA  AEE3               	btfss	plusw1,7,c
 20327  0118FC  D01C               	goto	l13324
 20328                           
 20329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 20330  0118FE  0E00               	movlw	0
 20331  011900  6E09               	movwf	(btemp+8)^0,c
 20332  011902  0E00               	movlw	0
 20333  011904  6E0A               	movwf	(btemp+9)^0,c
 20334  011906  0E80               	movlw	128
 20335  011908  6E0B               	movwf	(btemp+10)^0,c
 20336  01190A  0E3F               	movlw	63
 20337  01190C  6E0C               	movwf	(btemp+11)^0,c
 20338                           
 20339                           ;stkvar	_u @ sp[(-56)+12]
 20340  01190E  0ED4               	movlw	-44
 20341  011910  0060  F027  FFE3   	movff	btemp+8,plusw1
 20342  011916  0ED5               	movlw	-43
 20343  011918  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20344  01191E  0ED6               	movlw	-42
 20345  011920  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20346  011926  0ED7               	movlw	-41
 20347  011928  0060  F033  FFE3   	movff	btemp+11,plusw1
 20348                           
 20349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 20350                           ;stkvar	_e @ sp[(-56)+34]
 20351  01192E  0EEA               	movlw	-22
 20352  011930  6AE3               	clrf	plusw1,c
 20353  011932  0EEB               	movlw	-21
 20354  011934  6AE3               	clrf	plusw1,c
 20355  011936                     l13324:
 20356                           
 20357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 20358                           ;stkvar	_mode @ sp[(-56)+54]
 20359  011936  0EFE               	movlw	-2
 20360  011938  006F FF8C  F001    	movff	plusw1,btemp
 20361  01193E  0E67               	movlw	103
 20362  011940  1801               	xorwf	btemp^0,w,c
 20363  011942  B4D8               	btfsc	status,2,c
 20364  011944  D014               	goto	l13328
 20365                           
 20366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 20367                           ;stkvar	_e @ sp[(-56)+34]
 20368                           ;stkvar	_m @ sp[(-56)+48]
 20369  011946  0EF8               	movlw	-8
 20370  011948  50E3               	movf	plusw1,w,c
 20371  01194A  6E01               	movwf	btemp^0,c
 20372  01194C  0EEA               	movlw	-22
 20373  01194E  50E3               	movf	plusw1,w,c
 20374  011950  2601               	addwf	btemp^0,f,c
 20375  011952  0EF8               	movlw	-8
 20376  011954  0060  F007  FFE3   	movff	btemp,plusw1
 20377  01195A  0EF9               	movlw	-7
 20378  01195C  50E3               	movf	plusw1,w,c
 20379  01195E  6E01               	movwf	btemp^0,c
 20380  011960  0EEB               	movlw	-21
 20381  011962  50E3               	movf	plusw1,w,c
 20382  011964  2201               	addwfc	btemp^0,f,c
 20383  011966  0EF9               	movlw	-7
 20384  011968  0060  F007  FFE3   	movff	btemp,plusw1
 20385  01196E                     l13328:
 20386                           
 20387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 20388                           ;stkvar	_i @ sp[(-56)+36]
 20389  01196E  0EEC               	movlw	-20
 20390  011970  6AE3               	clrf	plusw1,c
 20391  011972  0EED               	movlw	-19
 20392  011974  6AE3               	clrf	plusw1,c
 20393                           
 20394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 20395                           ;stkvar	_g @ sp[(-56)+16]
 20396  011976  0ED8               	movlw	-40
 20397  011978  006F FF8C  F009    	movff	plusw1,btemp+8
 20398  01197E  0ED9               	movlw	-39
 20399  011980  006F FF8C  F00A    	movff	plusw1,btemp+9
 20400  011986  0EDA               	movlw	-38
 20401  011988  006F FF8C  F00B    	movff	plusw1,btemp+10
 20402  01198E  0EDB               	movlw	-37
 20403  011990  006F FF8C  F00C    	movff	plusw1,btemp+11
 20404                           
 20405                           ;stkvar	_h @ sp[(-56)+24]
 20406  011996  0EE0               	movlw	-32
 20407  011998  0060  F027  FFE3   	movff	btemp+8,plusw1
 20408  01199E  0EE1               	movlw	-31
 20409  0119A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20410  0119A6  0EE2               	movlw	-30
 20411  0119A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20412  0119AE  0EE3               	movlw	-29
 20413  0119B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20414                           
 20415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 20416                           ;stkvar	_u @ sp[(-56)+12]
 20417  0119B6  0ED4               	movlw	-44
 20418  0119B8  006F FF8C  F009    	movff	plusw1,btemp+8
 20419  0119BE  0ED5               	movlw	-43
 20420  0119C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20421  0119C6  0ED6               	movlw	-42
 20422  0119C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20423  0119CE  0ED7               	movlw	-41
 20424  0119D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20425                           
 20426                           ;stkvar	_ou @ sp[(-56)+28]
 20427  0119D6  0EE4               	movlw	-28
 20428  0119D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 20429  0119DE  0EE5               	movlw	-27
 20430  0119E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20431  0119E6  0EE6               	movlw	-26
 20432  0119E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20433  0119EE  0EE7               	movlw	-25
 20434  0119F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20435                           
 20436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 20437  0119F6  D0D6               	goto	l13344
 20438  0119F8                     l13334:
 20439                           
 20440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 20441                           ;stkvar	_u @ sp[(-56)+12]
 20442  0119F8  0ED4               	movlw	-44
 20443  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
 20444  011A00  006F FF8F FFE6     	movff	plusw1,postinc1
 20445  011A06  006F FF8F FFE6     	movff	plusw1,postinc1
 20446  011A0C  006F FF8F FFE6     	movff	plusw1,postinc1
 20447                           
 20448                           ;stkvar	_h @ sp[(-60)+24]
 20449  011A12  0EDC               	movlw	-36
 20450  011A14  006F FF8F FFE6     	movff	plusw1,postinc1
 20451  011A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 20452  011A20  006F FF8F FFE6     	movff	plusw1,postinc1
 20453  011A26  006F FF8F FFE6     	movff	plusw1,postinc1
 20454  011A2C  EC61  F0A7         	call	___fldiv	;wreg free
 20455  011A30  0060  F007  FFE6   	movff	btemp,postinc1
 20456  011A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20457  011A3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20458  011A42  0060  F013  FFE6   	movff	btemp+3,postinc1
 20459  011A48  EC1B  F0B5         	call	_floorf	;wreg free
 20460                           
 20461                           ;stkvar	_l @ sp[(-56)+20]
 20462  011A4C  0EDC               	movlw	-36
 20463  011A4E  0060  F007  FFE3   	movff	btemp,plusw1
 20464  011A54  0EDD               	movlw	-35
 20465  011A56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20466  011A5C  0EDE               	movlw	-34
 20467  011A5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20468  011A64  0EDF               	movlw	-33
 20469  011A66  0060  F013  FFE3   	movff	btemp+3,plusw1
 20470                           
 20471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 20472                           ;stkvar	_l @ sp[(-56)+20]
 20473  011A6C  0EDC               	movlw	-36
 20474  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 20475  011A74  006F FF8F FFE6     	movff	plusw1,postinc1
 20476  011A7A  006F FF8F FFE6     	movff	plusw1,postinc1
 20477  011A80  006F FF8F FFE6     	movff	plusw1,postinc1
 20478  011A86  ECC8  F0CC         	call	___fltol	;wreg free
 20479  011A8A  0060  F004  F00B   	movff	btemp,btemp+10
 20480  011A90  0060  F008  F00C   	movff	btemp+1,btemp+11
 20481                           
 20482                           ;stkvar	_d @ sp[(-56)+44]
 20483  011A96  0EF4               	movlw	-12
 20484  011A98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20485  011A9E  0EF5               	movlw	-11
 20486  011AA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20487                           
 20488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 20489                           ;stkvar	_u @ sp[(-56)+12]
 20490  011AA6  0ED4               	movlw	-44
 20491  011AA8  006F FF8F FFE6     	movff	plusw1,postinc1
 20492  011AAE  006F FF8F FFE6     	movff	plusw1,postinc1
 20493  011AB4  006F FF8F FFE6     	movff	plusw1,postinc1
 20494  011ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 20495                           
 20496                           ;stkvar	_l @ sp[(-60)+20]
 20497  011AC0  0ED8               	movlw	-40
 20498  011AC2  006F FF8F FFE6     	movff	plusw1,postinc1
 20499  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 20500  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 20501  011AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20502  011ADA  EC6E  F09F         	call	___flmul	;wreg free
 20503  011ADE  0060  F007  FFE6   	movff	btemp,postinc1
 20504  011AE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20505  011AEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20506  011AF0  0060  F013  FFE6   	movff	btemp+3,postinc1
 20507                           
 20508                           ;stkvar	_h @ sp[(-60)+24]
 20509  011AF6  0EDC               	movlw	-36
 20510  011AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 20511  011AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 20512  011B04  006F FF8F FFE6     	movff	plusw1,postinc1
 20513  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 20514  011B10  ECB0  F0E3         	call	___flsub	;wreg free
 20515                           
 20516                           ;stkvar	_h @ sp[(-56)+24]
 20517  011B14  0EE0               	movlw	-32
 20518  011B16  0060  F007  FFE3   	movff	btemp,plusw1
 20519  011B1C  0EE1               	movlw	-31
 20520  011B1E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20521  011B24  0EE2               	movlw	-30
 20522  011B26  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20523  011B2C  0EE3               	movlw	-29
 20524  011B2E  0060  F013  FFE3   	movff	btemp+3,plusw1
 20525                           
 20526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 20527  011B34  0E00               	movlw	0
 20528  011B36  6EE6               	movwf	postinc1,c
 20529  011B38  0E00               	movlw	0
 20530  011B3A  6EE6               	movwf	postinc1,c
 20531  011B3C  0E20               	movlw	32
 20532  011B3E  6EE6               	movwf	postinc1,c
 20533  011B40  0E41               	movlw	65
 20534  011B42  6EE6               	movwf	postinc1,c
 20535                           
 20536                           ;stkvar	_u @ sp[(-60)+12]
 20537  011B44  0ED0               	movlw	-48
 20538  011B46  006F FF8F FFE6     	movff	plusw1,postinc1
 20539  011B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 20540  011B52  006F FF8F FFE6     	movff	plusw1,postinc1
 20541  011B58  006F FF8F FFE6     	movff	plusw1,postinc1
 20542  011B5E  EC61  F0A7         	call	___fldiv	;wreg free
 20543                           
 20544                           ;stkvar	_u @ sp[(-56)+12]
 20545  011B62  0ED4               	movlw	-44
 20546  011B64  0060  F007  FFE3   	movff	btemp,plusw1
 20547  011B6A  0ED5               	movlw	-43
 20548  011B6C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20549  011B72  0ED6               	movlw	-42
 20550  011B74  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20551  011B7A  0ED7               	movlw	-41
 20552  011B7C  0060  F013  FFE3   	movff	btemp+3,plusw1
 20553                           
 20554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 20555                           ;stkvar	_i @ sp[(-56)+36]
 20556  011B82  0EEC               	movlw	-20
 20557  011B84  50E3               	movf	plusw1,w,c
 20558  011B86  0F01               	addlw	1
 20559  011B88  6E01               	movwf	btemp^0,c
 20560  011B8A  0EEC               	movlw	-20
 20561  011B8C  0060  F007  FFE3   	movff	btemp,plusw1
 20562  011B92  6A01               	clrf	btemp^0,c
 20563  011B94  0EED               	movlw	-19
 20564  011B96  50E3               	movf	plusw1,w,c
 20565  011B98  2001               	addwfc	btemp^0,w,c
 20566  011B9A  6E01               	movwf	btemp^0,c
 20567  011B9C  0EED               	movlw	-19
 20568  011B9E  0060  F007  FFE3   	movff	btemp,plusw1
 20569  011BA4                     l13344:
 20570                           
 20571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 20572                           ;stkvar	_m @ sp[(-56)+48]
 20573                           ;stkvar	_i @ sp[(-56)+36]
 20574  011BA4  50E1               	movf	fsr1l,w,c
 20575  011BA6  0FEC               	addlw	-20
 20576  011BA8  6ED9               	movwf	fsr2l,c
 20577  011BAA  50E2               	movf	fsr1h,w,c
 20578  011BAC  6EDA               	movwf	fsr2h,c
 20579  011BAE  0EFF               	movlw	255
 20580  011BB0  22DA               	addwfc	fsr2h,f,c
 20581  011BB2  0EF8               	movlw	-8
 20582  011BB4  50E3               	movf	plusw1,w,c
 20583  011BB6  5CDE               	subwf	postinc2,w,c
 20584  011BB8  50DE               	movf	postinc2,w,c
 20585  011BBA  0A80               	xorlw	128
 20586  011BBC  6E01               	movwf	btemp^0,c
 20587  011BBE  0EF9               	movlw	-7
 20588  011BC0  50E3               	movf	plusw1,w,c
 20589  011BC2  0A80               	xorlw	128
 20590  011BC4  5801               	subwfb	btemp^0,w,c
 20591  011BC6  A0D8               	btfss	status,0,c
 20592  011BC8  D717               	goto	l13334
 20593                           
 20594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 20595  011BCA  0E00               	movlw	0
 20596  011BCC  6EE6               	movwf	postinc1,c
 20597  011BCE  0E00               	movlw	0
 20598  011BD0  6EE6               	movwf	postinc1,c
 20599  011BD2  0EA0               	movlw	160
 20600  011BD4  6EE6               	movwf	postinc1,c
 20601  011BD6  0E40               	movlw	64
 20602  011BD8  6EE6               	movwf	postinc1,c
 20603                           
 20604                           ;stkvar	_u @ sp[(-60)+12]
 20605  011BDA  0ED0               	movlw	-48
 20606  011BDC  006F FF8F FFE6     	movff	plusw1,postinc1
 20607  011BE2  006F FF8F FFE6     	movff	plusw1,postinc1
 20608  011BE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20609  011BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20610  011BF4  EC6E  F09F         	call	___flmul	;wreg free
 20611                           
 20612                           ;stkvar	_l @ sp[(-56)+20]
 20613  011BF8  0EDC               	movlw	-36
 20614  011BFA  0060  F007  FFE3   	movff	btemp,plusw1
 20615  011C00  0EDD               	movlw	-35
 20616  011C02  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20617  011C08  0EDE               	movlw	-34
 20618  011C0A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20619  011C10  0EDF               	movlw	-33
 20620  011C12  0060  F013  FFE3   	movff	btemp+3,plusw1
 20621                           
 20622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 20623                           ;stkvar	_l @ sp[(-56)+20]
 20624  011C18  0EDC               	movlw	-36
 20625  011C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 20626  011C20  006F FF8F FFE6     	movff	plusw1,postinc1
 20627  011C26  006F FF8F FFE6     	movff	plusw1,postinc1
 20628  011C2C  006F FF8F FFE6     	movff	plusw1,postinc1
 20629                           
 20630                           ;stkvar	_h @ sp[(-60)+24]
 20631  011C32  0EDC               	movlw	-36
 20632  011C34  006F FF8F FFE6     	movff	plusw1,postinc1
 20633  011C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20634  011C40  006F FF8F FFE6     	movff	plusw1,postinc1
 20635  011C46  006F FF8F FFE6     	movff	plusw1,postinc1
 20636  011C4C  EC81  F0CD         	call	___flge	;wreg free
 20637  011C50  A001               	btfss	btemp& (0+255),0,c
 20638  011C52  D021               	goto	u12340
 20639                           
 20640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 20641                           ;stkvar	_l @ sp[(-56)+20]
 20642                           
 20643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 20644                           
 20645                           ;stkvar	_l @ sp[(-56)+20]
 20646                           
 20647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 20648  011C54  0EDC               	movlw	-36
 20649  011C56  006F FF8F FFE6     	movff	plusw1,postinc1
 20650  011C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 20651  011C62  006F FF8F FFE6     	movff	plusw1,postinc1
 20652  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 20653                           
 20654                           ;stkvar	_h @ sp[(-60)+24]
 20655  011C6E  0EDC               	movlw	-36
 20656  011C70  006F FF8F FFE6     	movff	plusw1,postinc1
 20657  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 20658  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 20659  011C82  006F FF8F FFE6     	movff	plusw1,postinc1
 20660  011C88  ECDC  F0D8         	call	___fleq	;wreg free
 20661  011C8C  A001               	btfss	btemp& (0+255),0,c
 20662  011C8E  D01B               	goto	l13358
 20663                           
 20664                           ;stkvar	_d @ sp[(-56)+44]
 20665  011C90  0EF4               	movlw	-12
 20666  011C92  B0E3               	btfsc	plusw1,0,c
 20667  011C94  D018               	goto	l13358
 20668  011C96                     u12340:
 20669                           
 20670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 20671  011C96  0E00               	movlw	0
 20672  011C98  6E09               	movwf	(btemp+8)^0,c
 20673  011C9A  0E00               	movlw	0
 20674  011C9C  6E0A               	movwf	(btemp+9)^0,c
 20675  011C9E  0E00               	movlw	0
 20676  011CA0  6E0B               	movwf	(btemp+10)^0,c
 20677  011CA2  0E00               	movlw	0
 20678  011CA4  6E0C               	movwf	(btemp+11)^0,c
 20679                           
 20680                           ;stkvar	_l @ sp[(-56)+20]
 20681  011CA6  0EDC               	movlw	-36
 20682  011CA8  0060  F027  FFE3   	movff	btemp+8,plusw1
 20683  011CAE  0EDD               	movlw	-35
 20684  011CB0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20685  011CB6  0EDE               	movlw	-34
 20686  011CB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20687  011CBE  0EDF               	movlw	-33
 20688  011CC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20689  011CC6                     l13358:
 20690                           
 20691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 20692                           ;stkvar	_l @ sp[(-56)+20]
 20693  011CC6  0EDC               	movlw	-36
 20694  011CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 20695  011CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 20696  011CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20697  011CDA  006F FF8F FFE6     	movff	plusw1,postinc1
 20698                           
 20699                           ;stkvar	_g @ sp[(-60)+16]
 20700  011CE0  0ED4               	movlw	-44
 20701  011CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 20702  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20703  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20704  011CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 20705  011CFA  EC83  F0A3         	call	___fladd	;wreg free
 20706                           
 20707                           ;stkvar	_h @ sp[(-56)+24]
 20708  011CFE  0EE0               	movlw	-32
 20709  011D00  0060  F007  FFE3   	movff	btemp,plusw1
 20710  011D06  0EE1               	movlw	-31
 20711  011D08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20712  011D0E  0EE2               	movlw	-30
 20713  011D10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20714  011D16  0EE3               	movlw	-29
 20715  011D18  0060  F013  FFE3   	movff	btemp+3,plusw1
 20716                           
 20717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 20718                           ;stkvar	_ou @ sp[(-56)+28]
 20719  011D1E  0EE4               	movlw	-28
 20720  011D20  006F FF8C  F009    	movff	plusw1,btemp+8
 20721  011D26  0EE5               	movlw	-27
 20722  011D28  006F FF8C  F00A    	movff	plusw1,btemp+9
 20723  011D2E  0EE6               	movlw	-26
 20724  011D30  006F FF8C  F00B    	movff	plusw1,btemp+10
 20725  011D36  0EE7               	movlw	-25
 20726  011D38  006F FF8C  F00C    	movff	plusw1,btemp+11
 20727                           
 20728                           ;stkvar	_u @ sp[(-56)+12]
 20729  011D3E  0ED4               	movlw	-44
 20730  011D40  0060  F027  FFE3   	movff	btemp+8,plusw1
 20731  011D46  0ED5               	movlw	-43
 20732  011D48  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20733  011D4E  0ED6               	movlw	-42
 20734  011D50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20735  011D56  0ED7               	movlw	-41
 20736  011D58  0060  F033  FFE3   	movff	btemp+11,plusw1
 20737                           
 20738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 20739                           ;stkvar	_nmode @ sp[(-56)+55]
 20740  011D5E  0EFF               	movlw	-1
 20741  011D60  006F FF8C  F001    	movff	plusw1,btemp
 20742  011D66  0E65               	movlw	101
 20743  011D68  1801               	xorwf	btemp^0,w,c
 20744  011D6A  B4D8               	btfsc	status,2,c
 20745  011D6C  D011               	goto	l13366
 20746                           
 20747                           ;stkvar	_e @ sp[(-56)+34]
 20748                           ;stkvar	_ne @ sp[(-56)+46]
 20749  011D6E  0EEA               	movlw	-22
 20750  011D70  006F FF8C  F001    	movff	plusw1,btemp
 20751  011D76  0EF6               	movlw	-10
 20752  011D78  0060  F007  FFE3   	movff	btemp,plusw1
 20753  011D7E  0EEB               	movlw	-21
 20754  011D80  006F FF8C  F001    	movff	plusw1,btemp
 20755  011D86  0EF7               	movlw	-9
 20756  011D88  0060  F007  FFE3   	movff	btemp,plusw1
 20757  011D8E  D004               	goto	l2502
 20758  011D90                     l13366:
 20759                           
 20760                           ;stkvar	_ne @ sp[(-56)+46]
 20761  011D90  0EF6               	movlw	-10
 20762  011D92  6AE3               	clrf	plusw1,c
 20763  011D94  0EF7               	movlw	-9
 20764  011D96  6AE3               	clrf	plusw1,c
 20765  011D98                     l2502:
 20766                           
 20767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 20768                           ;stkvar	_pp @ sp[(-56)+50]
 20769  011D98  0EFA               	movlw	-6
 20770  011D9A  6AE3               	clrf	plusw1,c
 20771  011D9C  0EFB               	movlw	-5
 20772  011D9E  6AE3               	clrf	plusw1,c
 20773                           
 20774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 20775                           ;stkvar	_t @ sp[(-56)+52]
 20776  011DA0  0EFC               	movlw	-4
 20777  011DA2  6AE3               	clrf	plusw1,c
 20778  011DA4  0EFD               	movlw	-3
 20779  011DA6  6AE3               	clrf	plusw1,c
 20780                           
 20781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 20782                           ;stkvar	_i @ sp[(-56)+36]
 20783  011DA8  0EEC               	movlw	-20
 20784  011DAA  6AE3               	clrf	plusw1,c
 20785  011DAC  0EED               	movlw	-19
 20786  011DAE  6AE3               	clrf	plusw1,c
 20787                           
 20788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 20789  011DB0  D1B7               	goto	l13418
 20790  011DB2                     l13368:
 20791                           
 20792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 20793                           ;stkvar	_u @ sp[(-56)+12]
 20794  011DB2  0ED4               	movlw	-44
 20795  011DB4  006F FF8F FFE6     	movff	plusw1,postinc1
 20796  011DBA  006F FF8F FFE6     	movff	plusw1,postinc1
 20797  011DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 20798  011DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 20799                           
 20800                           ;stkvar	_h @ sp[(-60)+24]
 20801  011DCC  0EDC               	movlw	-36
 20802  011DCE  006F FF8F FFE6     	movff	plusw1,postinc1
 20803  011DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20804  011DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 20805  011DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 20806  011DE6  EC61  F0A7         	call	___fldiv	;wreg free
 20807  011DEA  0060  F007  FFE6   	movff	btemp,postinc1
 20808  011DF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20809  011DF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20810  011DFC  0060  F013  FFE6   	movff	btemp+3,postinc1
 20811  011E02  EC1B  F0B5         	call	_floorf	;wreg free
 20812                           
 20813                           ;stkvar	_l @ sp[(-56)+20]
 20814  011E06  0EDC               	movlw	-36
 20815  011E08  0060  F007  FFE3   	movff	btemp,plusw1
 20816  011E0E  0EDD               	movlw	-35
 20817  011E10  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20818  011E16  0EDE               	movlw	-34
 20819  011E18  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20820  011E1E  0EDF               	movlw	-33
 20821  011E20  0060  F013  FFE3   	movff	btemp+3,plusw1
 20822                           
 20823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 20824                           ;stkvar	_l @ sp[(-56)+20]
 20825  011E26  0EDC               	movlw	-36
 20826  011E28  006F FF8F FFE6     	movff	plusw1,postinc1
 20827  011E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20828  011E34  006F FF8F FFE6     	movff	plusw1,postinc1
 20829  011E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20830  011E40  ECC8  F0CC         	call	___fltol	;wreg free
 20831  011E44  0060  F004  F00B   	movff	btemp,btemp+10
 20832  011E4A  0060  F008  F00C   	movff	btemp+1,btemp+11
 20833                           
 20834                           ;stkvar	_d @ sp[(-56)+44]
 20835  011E50  0EF4               	movlw	-12
 20836  011E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20837  011E58  0EF5               	movlw	-11
 20838  011E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20839                           
 20840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 20841  011E60  B83E               	btfsc	_flags^0,4,c
 20842  011E62  D026               	goto	l13382
 20843                           
 20844                           ;stkvar	_d @ sp[(-56)+44]
 20845  011E64  0EF4               	movlw	-12
 20846  011E66  006F FF8C  F001    	movff	plusw1,btemp
 20847  011E6C  0EF5               	movlw	-11
 20848  011E6E  50E3               	movf	plusw1,w,c
 20849  011E70  1001               	iorwf	btemp^0,w,c
 20850  011E72  A4D8               	btfss	status,2,c
 20851  011E74  D01D               	goto	l13382
 20852                           
 20853                           ;stkvar	_mode @ sp[(-56)+54]
 20854  011E76  0EFE               	movlw	-2
 20855  011E78  006F FF8C  F001    	movff	plusw1,btemp
 20856  011E7E  0E67               	movlw	103
 20857  011E80  1801               	xorwf	btemp^0,w,c
 20858  011E82  A4D8               	btfss	status,2,c
 20859  011E84  D015               	goto	l13382
 20860                           
 20861                           ;stkvar	_ne @ sp[(-56)+46]
 20862  011E86  0EF7               	movlw	-9
 20863  011E88  AEE3               	btfss	plusw1,7,c
 20864  011E8A  D012               	goto	l13382
 20865                           
 20866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 20867                           ;stkvar	_t @ sp[(-56)+52]
 20868  011E8C  0EFC               	movlw	-4
 20869  011E8E  50E3               	movf	plusw1,w,c
 20870  011E90  0F01               	addlw	1
 20871  011E92  6E01               	movwf	btemp^0,c
 20872  011E94  0EFC               	movlw	-4
 20873  011E96  0060  F007  FFE3   	movff	btemp,plusw1
 20874  011E9C  6A01               	clrf	btemp^0,c
 20875  011E9E  0EFD               	movlw	-3
 20876  011EA0  50E3               	movf	plusw1,w,c
 20877  011EA2  2001               	addwfc	btemp^0,w,c
 20878  011EA4  6E01               	movwf	btemp^0,c
 20879  011EA6  0EFD               	movlw	-3
 20880  011EA8  0060  F007  FFE3   	movff	btemp,plusw1
 20881                           
 20882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 20883  011EAE  D0AF               	goto	l13410
 20884  011EB0                     l13382:
 20885                           
 20886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 20887                           ;stkvar	_pp @ sp[(-56)+50]
 20888  011EB0  0EFA               	movlw	-6
 20889  011EB2  006F FF8C  F001    	movff	plusw1,btemp
 20890  011EB8  0EFB               	movlw	-5
 20891  011EBA  50E3               	movf	plusw1,w,c
 20892  011EBC  1001               	iorwf	btemp^0,w,c
 20893  011EBE  A4D8               	btfss	status,2,c
 20894  011EC0  D070               	goto	l13402
 20895                           
 20896                           ;stkvar	_ne @ sp[(-56)+46]
 20897  011EC2  0EF7               	movlw	-9
 20898  011EC4  AEE3               	btfss	plusw1,7,c
 20899  011EC6  D06D               	goto	l13402
 20900                           
 20901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 20902                           ;stkvar	_n @ sp[(-56)+32]
 20903  011EC8  0EE8               	movlw	-24
 20904  011ECA  006F FF8C  F00B    	movff	plusw1,btemp+10
 20905  011ED0  0EE9               	movlw	-23
 20906  011ED2  006F FF8C  F00C    	movff	plusw1,btemp+11
 20907  011ED8  0E43               	movlw	low _dbuf
 20908  011EDA  240B               	addwf	(btemp+10)^0,w,c
 20909  011EDC  6ED9               	movwf	fsr2l,c
 20910  011EDE  0E02               	movlw	high _dbuf
 20911  011EE0  200C               	addwfc	(btemp+11)^0,w,c
 20912  011EE2  6EDA               	movwf	fsr2h,c
 20913  011EE4  0E2E               	movlw	46
 20914  011EE6  6EDF               	movwf	indf2,c
 20915                           
 20916                           ;stkvar	_n @ sp[(-56)+32]
 20917  011EE8  0EE8               	movlw	-24
 20918  011EEA  50E3               	movf	plusw1,w,c
 20919  011EEC  0F01               	addlw	1
 20920  011EEE  6E01               	movwf	btemp^0,c
 20921  011EF0  0EE8               	movlw	-24
 20922  011EF2  0060  F007  FFE3   	movff	btemp,plusw1
 20923  011EF8  6A01               	clrf	btemp^0,c
 20924  011EFA  0EE9               	movlw	-23
 20925  011EFC  50E3               	movf	plusw1,w,c
 20926  011EFE  2001               	addwfc	btemp^0,w,c
 20927  011F00  6E01               	movwf	btemp^0,c
 20928  011F02  0EE9               	movlw	-23
 20929  011F04  0060  F007  FFE3   	movff	btemp,plusw1
 20930                           
 20931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 20932                           ;stkvar	_w @ sp[(-56)+38]
 20933  011F0A  50E1               	movf	fsr1l,w,c
 20934  011F0C  0FEE               	addlw	-18
 20935  011F0E  6ED9               	movwf	fsr2l,c
 20936  011F10  50E2               	movf	fsr1h,w,c
 20937  011F12  6EDA               	movwf	fsr2h,c
 20938  011F14  0EFF               	movlw	255
 20939  011F16  22DA               	addwfc	fsr2h,f,c
 20940  011F18  06DE               	decf	postinc2,f,c
 20941  011F1A  0E00               	movlw	0
 20942  011F1C  5ADD               	subwfb	postdec2,f,c
 20943                           
 20944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 20945  011F1E  0E01               	movlw	1
 20946  011F20  6E0B               	movwf	(btemp+10)^0,c
 20947  011F22  0E00               	movlw	0
 20948  011F24  6E0C               	movwf	(btemp+11)^0,c
 20949                           
 20950                           ;stkvar	_pp @ sp[(-56)+50]
 20951  011F26  0EFA               	movlw	-6
 20952  011F28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20953  011F2E  0EFB               	movlw	-5
 20954  011F30  0060  F033  FFE3   	movff	btemp+11,plusw1
 20955  011F36  D035               	goto	l13402
 20956  011F38                     l13394:
 20957                           
 20958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 20959                           ;stkvar	_n @ sp[(-56)+32]
 20960  011F38  0EE8               	movlw	-24
 20961  011F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20962  011F40  0EE9               	movlw	-23
 20963  011F42  006F FF8C  F00C    	movff	plusw1,btemp+11
 20964  011F48  0E43               	movlw	low _dbuf
 20965  011F4A  240B               	addwf	(btemp+10)^0,w,c
 20966  011F4C  6ED9               	movwf	fsr2l,c
 20967  011F4E  0E02               	movlw	high _dbuf
 20968  011F50  200C               	addwfc	(btemp+11)^0,w,c
 20969  011F52  6EDA               	movwf	fsr2h,c
 20970  011F54  0E30               	movlw	48
 20971  011F56  6EDF               	movwf	indf2,c
 20972                           
 20973                           ;stkvar	_n @ sp[(-56)+32]
 20974  011F58  0EE8               	movlw	-24
 20975  011F5A  50E3               	movf	plusw1,w,c
 20976  011F5C  0F01               	addlw	1
 20977  011F5E  6E01               	movwf	btemp^0,c
 20978  011F60  0EE8               	movlw	-24
 20979  011F62  0060  F007  FFE3   	movff	btemp,plusw1
 20980  011F68  6A01               	clrf	btemp^0,c
 20981  011F6A  0EE9               	movlw	-23
 20982  011F6C  50E3               	movf	plusw1,w,c
 20983  011F6E  2001               	addwfc	btemp^0,w,c
 20984  011F70  6E01               	movwf	btemp^0,c
 20985  011F72  0EE9               	movlw	-23
 20986  011F74  0060  F007  FFE3   	movff	btemp,plusw1
 20987                           
 20988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 20989                           ;stkvar	_w @ sp[(-56)+38]
 20990  011F7A  50E1               	movf	fsr1l,w,c
 20991  011F7C  0FEE               	addlw	-18
 20992  011F7E  6ED9               	movwf	fsr2l,c
 20993  011F80  50E2               	movf	fsr1h,w,c
 20994  011F82  6EDA               	movwf	fsr2h,c
 20995  011F84  0EFF               	movlw	255
 20996  011F86  22DA               	addwfc	fsr2h,f,c
 20997  011F88  06DE               	decf	postinc2,f,c
 20998  011F8A  0E00               	movlw	0
 20999  011F8C  5ADD               	subwfb	postdec2,f,c
 21000                           
 21001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 21002                           ;stkvar	_t @ sp[(-56)+52]
 21003  011F8E  50E1               	movf	fsr1l,w,c
 21004  011F90  0FFC               	addlw	-4
 21005  011F92  6ED9               	movwf	fsr2l,c
 21006  011F94  50E2               	movf	fsr1h,w,c
 21007  011F96  6EDA               	movwf	fsr2h,c
 21008  011F98  0EFF               	movlw	255
 21009  011F9A  22DA               	addwfc	fsr2h,f,c
 21010  011F9C  06DE               	decf	postinc2,f,c
 21011  011F9E  0E00               	movlw	0
 21012  011FA0  5ADD               	subwfb	postdec2,f,c
 21013  011FA2                     l13402:
 21014                           
 21015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 21016                           ;stkvar	_t @ sp[(-56)+52]
 21017  011FA2  0EFC               	movlw	-4
 21018  011FA4  006F FF8C  F001    	movff	plusw1,btemp
 21019  011FAA  0EFD               	movlw	-3
 21020  011FAC  50E3               	movf	plusw1,w,c
 21021  011FAE  1001               	iorwf	btemp^0,w,c
 21022  011FB0  A4D8               	btfss	status,2,c
 21023  011FB2  D7C2               	goto	l13394
 21024                           
 21025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 21026                           ;stkvar	_n @ sp[(-56)+32]
 21027  011FB4  0EE8               	movlw	-24
 21028  011FB6  006F FF8C  F00B    	movff	plusw1,btemp+10
 21029  011FBC  0EE9               	movlw	-23
 21030  011FBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 21031  011FC4  0E43               	movlw	low _dbuf
 21032  011FC6  240B               	addwf	(btemp+10)^0,w,c
 21033  011FC8  6ED9               	movwf	fsr2l,c
 21034  011FCA  0E02               	movlw	high _dbuf
 21035  011FCC  200C               	addwfc	(btemp+11)^0,w,c
 21036  011FCE  6EDA               	movwf	fsr2h,c
 21037                           
 21038                           ;stkvar	_d @ sp[(-56)+44]
 21039  011FD0  0EF4               	movlw	-12
 21040  011FD2  50E3               	movf	plusw1,w,c
 21041  011FD4  0F30               	addlw	48
 21042  011FD6  6EDF               	movwf	indf2,c
 21043                           
 21044                           ;stkvar	_n @ sp[(-56)+32]
 21045  011FD8  0EE8               	movlw	-24
 21046  011FDA  50E3               	movf	plusw1,w,c
 21047  011FDC  0F01               	addlw	1
 21048  011FDE  6E01               	movwf	btemp^0,c
 21049  011FE0  0EE8               	movlw	-24
 21050  011FE2  0060  F007  FFE3   	movff	btemp,plusw1
 21051  011FE8  6A01               	clrf	btemp^0,c
 21052  011FEA  0EE9               	movlw	-23
 21053  011FEC  50E3               	movf	plusw1,w,c
 21054  011FEE  2001               	addwfc	btemp^0,w,c
 21055  011FF0  6E01               	movwf	btemp^0,c
 21056  011FF2  0EE9               	movlw	-23
 21057  011FF4  0060  F007  FFE3   	movff	btemp,plusw1
 21058                           
 21059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 21060                           ;stkvar	_w @ sp[(-56)+38]
 21061  011FFA  50E1               	movf	fsr1l,w,c
 21062  011FFC  0FEE               	addlw	-18
 21063  011FFE  6ED9               	movwf	fsr2l,c
 21064  012000  50E2               	movf	fsr1h,w,c
 21065  012002  6EDA               	movwf	fsr2h,c
 21066  012004  0EFF               	movlw	255
 21067  012006  22DA               	addwfc	fsr2h,f,c
 21068  012008  06DE               	decf	postinc2,f,c
 21069  01200A  0E00               	movlw	0
 21070  01200C  5ADD               	subwfb	postdec2,f,c
 21071  01200E                     l13410:
 21072                           
 21073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 21074                           ;stkvar	_u @ sp[(-56)+12]
 21075  01200E  0ED4               	movlw	-44
 21076  012010  006F FF8F FFE6     	movff	plusw1,postinc1
 21077  012016  006F FF8F FFE6     	movff	plusw1,postinc1
 21078  01201C  006F FF8F FFE6     	movff	plusw1,postinc1
 21079  012022  006F FF8F FFE6     	movff	plusw1,postinc1
 21080                           
 21081                           ;stkvar	_l @ sp[(-60)+20]
 21082  012028  0ED8               	movlw	-40
 21083  01202A  006F FF8F FFE6     	movff	plusw1,postinc1
 21084  012030  006F FF8F FFE6     	movff	plusw1,postinc1
 21085  012036  006F FF8F FFE6     	movff	plusw1,postinc1
 21086  01203C  006F FF8F FFE6     	movff	plusw1,postinc1
 21087  012042  EC6E  F09F         	call	___flmul	;wreg free
 21088  012046  0060  F007  FFE6   	movff	btemp,postinc1
 21089  01204C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21090  012052  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21091  012058  0060  F013  FFE6   	movff	btemp+3,postinc1
 21092                           
 21093                           ;stkvar	_h @ sp[(-60)+24]
 21094  01205E  0EDC               	movlw	-36
 21095  012060  006F FF8F FFE6     	movff	plusw1,postinc1
 21096  012066  006F FF8F FFE6     	movff	plusw1,postinc1
 21097  01206C  006F FF8F FFE6     	movff	plusw1,postinc1
 21098  012072  006F FF8F FFE6     	movff	plusw1,postinc1
 21099  012078  ECB0  F0E3         	call	___flsub	;wreg free
 21100                           
 21101                           ;stkvar	_h @ sp[(-56)+24]
 21102  01207C  0EE0               	movlw	-32
 21103  01207E  0060  F007  FFE3   	movff	btemp,plusw1
 21104  012084  0EE1               	movlw	-31
 21105  012086  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21106  01208C  0EE2               	movlw	-30
 21107  01208E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21108  012094  0EE3               	movlw	-29
 21109  012096  0060  F013  FFE3   	movff	btemp+3,plusw1
 21110                           
 21111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 21112  01209C  0E00               	movlw	0
 21113  01209E  6EE6               	movwf	postinc1,c
 21114  0120A0  0E00               	movlw	0
 21115  0120A2  6EE6               	movwf	postinc1,c
 21116  0120A4  0E20               	movlw	32
 21117  0120A6  6EE6               	movwf	postinc1,c
 21118  0120A8  0E41               	movlw	65
 21119  0120AA  6EE6               	movwf	postinc1,c
 21120                           
 21121                           ;stkvar	_u @ sp[(-60)+12]
 21122  0120AC  0ED0               	movlw	-48
 21123  0120AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21124  0120B4  006F FF8F FFE6     	movff	plusw1,postinc1
 21125  0120BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21126  0120C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21127  0120C6  EC61  F0A7         	call	___fldiv	;wreg free
 21128                           
 21129                           ;stkvar	_u @ sp[(-56)+12]
 21130  0120CA  0ED4               	movlw	-44
 21131  0120CC  0060  F007  FFE3   	movff	btemp,plusw1
 21132  0120D2  0ED5               	movlw	-43
 21133  0120D4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21134  0120DA  0ED6               	movlw	-42
 21135  0120DC  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21136  0120E2  0ED7               	movlw	-41
 21137  0120E4  0060  F013  FFE3   	movff	btemp+3,plusw1
 21138                           
 21139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 21140                           ;stkvar	_ne @ sp[(-56)+46]
 21141  0120EA  50E1               	movf	fsr1l,w,c
 21142  0120EC  0FF6               	addlw	-10
 21143  0120EE  6ED9               	movwf	fsr2l,c
 21144  0120F0  50E2               	movf	fsr1h,w,c
 21145  0120F2  6EDA               	movwf	fsr2h,c
 21146  0120F4  0EFF               	movlw	255
 21147  0120F6  22DA               	addwfc	fsr2h,f,c
 21148  0120F8  06DE               	decf	postinc2,f,c
 21149  0120FA  0E00               	movlw	0
 21150  0120FC  5ADD               	subwfb	postdec2,f,c
 21151                           
 21152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 21153                           ;stkvar	_i @ sp[(-56)+36]
 21154  0120FE  0EEC               	movlw	-20
 21155  012100  50E3               	movf	plusw1,w,c
 21156  012102  0F01               	addlw	1
 21157  012104  6E01               	movwf	btemp^0,c
 21158  012106  0EEC               	movlw	-20
 21159  012108  0060  F007  FFE3   	movff	btemp,plusw1
 21160  01210E  6A01               	clrf	btemp^0,c
 21161  012110  0EED               	movlw	-19
 21162  012112  50E3               	movf	plusw1,w,c
 21163  012114  2001               	addwfc	btemp^0,w,c
 21164  012116  6E01               	movwf	btemp^0,c
 21165  012118  0EED               	movlw	-19
 21166  01211A  0060  F007  FFE3   	movff	btemp,plusw1
 21167  012120                     l13418:
 21168                           
 21169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 21170                           ;stkvar	_m @ sp[(-56)+48]
 21171                           ;stkvar	_i @ sp[(-56)+36]
 21172  012120  50E1               	movf	fsr1l,w,c
 21173  012122  0FEC               	addlw	-20
 21174  012124  6ED9               	movwf	fsr2l,c
 21175  012126  50E2               	movf	fsr1h,w,c
 21176  012128  6EDA               	movwf	fsr2h,c
 21177  01212A  0EFF               	movlw	255
 21178  01212C  22DA               	addwfc	fsr2h,f,c
 21179  01212E  0EF8               	movlw	-8
 21180  012130  50E3               	movf	plusw1,w,c
 21181  012132  5CDE               	subwf	postinc2,w,c
 21182  012134  50DE               	movf	postinc2,w,c
 21183  012136  0A80               	xorlw	128
 21184  012138  6E01               	movwf	btemp^0,c
 21185  01213A  0EF9               	movlw	-7
 21186  01213C  50E3               	movf	plusw1,w,c
 21187  01213E  0A80               	xorlw	128
 21188  012140  5801               	subwfb	btemp^0,w,c
 21189  012142  B0D8               	btfsc	status,0,c
 21190  012144  D00E               	goto	u12440
 21191                           
 21192                           ;stkvar	_n @ sp[(-56)+32]
 21193  012146  0EE9               	movlw	-23
 21194  012148  BEE3               	btfsc	plusw1,7,c
 21195  01214A  D633               	goto	l13368
 21196  01214C  0EE9               	movlw	-23
 21197  01214E  50E3               	movf	plusw1,w,c
 21198  012150  E108               	bnz	u12440
 21199  012152  0EE8               	movlw	-24
 21200  012154  006F FF8C  F001    	movff	plusw1,btemp
 21201  01215A  0E4B               	movlw	75
 21202  01215C  5E01               	subwf	btemp^0,f,c
 21203  01215E  A0D8               	btfss	status,0,c
 21204  012160  D628               	goto	l13368
 21205  012162                     u12440:
 21206                           
 21207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 21208                           ;stkvar	_pp @ sp[(-56)+50]
 21209  012162  0EFA               	movlw	-6
 21210  012164  006F FF8C  F001    	movff	plusw1,btemp
 21211  01216A  0EFB               	movlw	-5
 21212  01216C  50E3               	movf	plusw1,w,c
 21213  01216E  1001               	iorwf	btemp^0,w,c
 21214  012170  B4D8               	btfsc	status,2,c
 21215  012172  A83E               	btfss	_flags^0,4,c
 21216  012174  D021               	goto	l13430
 21217                           
 21218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 21219                           ;stkvar	_n @ sp[(-56)+32]
 21220  012176  0EE8               	movlw	-24
 21221  012178  006F FF8C  F00B    	movff	plusw1,btemp+10
 21222  01217E  0EE9               	movlw	-23
 21223  012180  006F FF8C  F00C    	movff	plusw1,btemp+11
 21224  012186  0E43               	movlw	low _dbuf
 21225  012188  240B               	addwf	(btemp+10)^0,w,c
 21226  01218A  6ED9               	movwf	fsr2l,c
 21227  01218C  0E02               	movlw	high _dbuf
 21228  01218E  200C               	addwfc	(btemp+11)^0,w,c
 21229  012190  6EDA               	movwf	fsr2h,c
 21230  012192  0E2E               	movlw	46
 21231  012194  6EDF               	movwf	indf2,c
 21232                           
 21233                           ;stkvar	_n @ sp[(-56)+32]
 21234  012196  0EE8               	movlw	-24
 21235  012198  50E3               	movf	plusw1,w,c
 21236  01219A  0F01               	addlw	1
 21237  01219C  6E01               	movwf	btemp^0,c
 21238  01219E  0EE8               	movlw	-24
 21239  0121A0  0060  F007  FFE3   	movff	btemp,plusw1
 21240  0121A6  6A01               	clrf	btemp^0,c
 21241  0121A8  0EE9               	movlw	-23
 21242  0121AA  50E3               	movf	plusw1,w,c
 21243  0121AC  2001               	addwfc	btemp^0,w,c
 21244  0121AE  6E01               	movwf	btemp^0,c
 21245  0121B0  0EE9               	movlw	-23
 21246  0121B2  0060  F007  FFE3   	movff	btemp,plusw1
 21247  0121B8                     l13430:
 21248                           
 21249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 21250                           ;stkvar	_n @ sp[(-56)+32]
 21251  0121B8  0EE8               	movlw	-24
 21252  0121BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21253  0121C0  0EE9               	movlw	-23
 21254  0121C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21255  0121C8  0E43               	movlw	low _dbuf
 21256  0121CA  240B               	addwf	(btemp+10)^0,w,c
 21257  0121CC  6ED9               	movwf	fsr2l,c
 21258  0121CE  0E02               	movlw	high _dbuf
 21259  0121D0  200C               	addwfc	(btemp+11)^0,w,c
 21260  0121D2  6EDA               	movwf	fsr2h,c
 21261  0121D4  0E00               	movlw	0
 21262  0121D6  6EDF               	movwf	indf2,c
 21263                           
 21264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 21265                           ;stkvar	_nmode @ sp[(-56)+55]
 21266  0121D8  0EFF               	movlw	-1
 21267  0121DA  006F FF8C  F001    	movff	plusw1,btemp
 21268  0121E0  0E65               	movlw	101
 21269  0121E2  1801               	xorwf	btemp^0,w,c
 21270  0121E4  A4D8               	btfss	status,2,c
 21271  0121E6  EF55  F08A         	goto	l13234
 21272                           
 21273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 21274  0121EA  0E4F               	movlw	79
 21275  0121EC  6E0B               	movwf	(btemp+10)^0,c
 21276  0121EE  0E00               	movlw	0
 21277  0121F0  6E0C               	movwf	(btemp+11)^0,c
 21278                           
 21279                           ;stkvar	_i @ sp[(-56)+36]
 21280  0121F2  0EEC               	movlw	-20
 21281  0121F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21282  0121FA  0EED               	movlw	-19
 21283  0121FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 21284                           
 21285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 21286                           ;stkvar	_i @ sp[(-56)+36]
 21287  012202  0EEC               	movlw	-20
 21288  012204  006F FF8C  F00B    	movff	plusw1,btemp+10
 21289  01220A  0EED               	movlw	-19
 21290  01220C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21291  012212  0E43               	movlw	low _dbuf
 21292  012214  240B               	addwf	(btemp+10)^0,w,c
 21293  012216  6ED9               	movwf	fsr2l,c
 21294  012218  0E02               	movlw	high _dbuf
 21295  01221A  200C               	addwfc	(btemp+11)^0,w,c
 21296  01221C  6EDA               	movwf	fsr2h,c
 21297  01221E  0E00               	movlw	0
 21298  012220  6EDF               	movwf	indf2,c
 21299                           
 21300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 21301                           ;stkvar	_sign @ sp[(-56)+42]
 21302  012222  0EF2               	movlw	-14
 21303  012224  6AE3               	clrf	plusw1,c
 21304  012226  0EF3               	movlw	-13
 21305  012228  6AE3               	clrf	plusw1,c
 21306                           
 21307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 21308                           ;stkvar	_e @ sp[(-56)+34]
 21309  01222A  0EEB               	movlw	-21
 21310  01222C  AEE3               	btfss	plusw1,7,c
 21311  01222E  D012               	goto	l13444
 21312                           
 21313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 21314  012230  0E01               	movlw	1
 21315  012232  6E0B               	movwf	(btemp+10)^0,c
 21316  012234  0E00               	movlw	0
 21317  012236  6E0C               	movwf	(btemp+11)^0,c
 21318                           
 21319                           ;stkvar	_sign @ sp[(-56)+42]
 21320  012238  0EF2               	movlw	-14
 21321  01223A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21322  012240  0EF3               	movlw	-13
 21323  012242  0060  F033  FFE3   	movff	btemp+11,plusw1
 21324                           
 21325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 21326                           ;stkvar	_e @ sp[(-56)+34]
 21327                           ;stkvar	_e @ sp[(-56)+34]
 21328  012248  0EEA               	movlw	-22
 21329  01224A  6CE3               	negf	plusw1,c
 21330  01224C  0EEB               	movlw	-21
 21331  01224E  1EE3               	comf	plusw1,f,c
 21332  012250  B0D8               	btfsc	status,0,c
 21333  012252  2AE3               	incf	plusw1,f,c
 21334  012254                     l13444:
 21335                           
 21336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 21337  012254  0E02               	movlw	2
 21338  012256  6E0B               	movwf	(btemp+10)^0,c
 21339  012258  0E00               	movlw	0
 21340  01225A  6E0C               	movwf	(btemp+11)^0,c
 21341                           
 21342                           ;stkvar	_p @ sp[(-56)+40]
 21343  01225C  0EF0               	movlw	-16
 21344  01225E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21345  012264  0EF1               	movlw	-15
 21346  012266  0060  F033  FFE3   	movff	btemp+11,plusw1
 21347                           
 21348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 21349  01226C  D051               	goto	l13456
 21350  01226E                     l13446:
 21351                           
 21352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 21353                           ;stkvar	_i @ sp[(-56)+36]
 21354  01226E  50E1               	movf	fsr1l,w,c
 21355  012270  0FEC               	addlw	-20
 21356  012272  6ED9               	movwf	fsr2l,c
 21357  012274  50E2               	movf	fsr1h,w,c
 21358  012276  6EDA               	movwf	fsr2h,c
 21359  012278  0EFF               	movlw	255
 21360  01227A  22DA               	addwfc	fsr2h,f,c
 21361  01227C  06DE               	decf	postinc2,f,c
 21362  01227E  0E00               	movlw	0
 21363  012280  5ADD               	subwfb	postdec2,f,c
 21364                           
 21365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 21366                           ;stkvar	_i @ sp[(-56)+36]
 21367  012282  0EEC               	movlw	-20
 21368  012284  006F FF8C  F00B    	movff	plusw1,btemp+10
 21369  01228A  0EED               	movlw	-19
 21370  01228C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21371  012292  0E43               	movlw	low _dbuf
 21372  012294  240B               	addwf	(btemp+10)^0,w,c
 21373  012296  6ED9               	movwf	fsr2l,c
 21374  012298  0E02               	movlw	high _dbuf
 21375  01229A  200C               	addwfc	(btemp+11)^0,w,c
 21376  01229C  6EDA               	movwf	fsr2h,c
 21377  01229E  0E0A               	movlw	10
 21378  0122A0  6EE6               	movwf	postinc1,c
 21379  0122A2  0E00               	movlw	0
 21380  0122A4  6EE6               	movwf	postinc1,c
 21381                           
 21382                           ;stkvar	_e @ sp[(-58)+34]
 21383  0122A6  0EE8               	movlw	-24
 21384  0122A8  006F FF8F FFE6     	movff	plusw1,postinc1
 21385  0122AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21386  0122B4  ECA8  F0D3         	call	___awmod	;wreg free
 21387  0122B8  5001               	movf	btemp^0,w,c
 21388  0122BA  0F30               	addlw	48
 21389  0122BC  6EDF               	movwf	indf2,c
 21390                           
 21391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 21392  0122BE  0E0A               	movlw	10
 21393  0122C0  6EE6               	movwf	postinc1,c
 21394  0122C2  0E00               	movlw	0
 21395  0122C4  6EE6               	movwf	postinc1,c
 21396                           
 21397                           ;stkvar	_e @ sp[(-58)+34]
 21398  0122C6  0EE8               	movlw	-24
 21399  0122C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21400  0122CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21401  0122D4  ECE3  F0CE         	call	___awdiv	;wreg free
 21402                           
 21403                           ;stkvar	_e @ sp[(-56)+34]
 21404  0122D8  0EEA               	movlw	-22
 21405  0122DA  0060  F007  FFE3   	movff	btemp,plusw1
 21406  0122E0  0EEB               	movlw	-21
 21407  0122E2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21408                           
 21409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 21410                           ;stkvar	_p @ sp[(-56)+40]
 21411  0122E8  50E1               	movf	fsr1l,w,c
 21412  0122EA  0FF0               	addlw	-16
 21413  0122EC  6ED9               	movwf	fsr2l,c
 21414  0122EE  50E2               	movf	fsr1h,w,c
 21415  0122F0  6EDA               	movwf	fsr2h,c
 21416  0122F2  0EFF               	movlw	255
 21417  0122F4  22DA               	addwfc	fsr2h,f,c
 21418  0122F6  06DE               	decf	postinc2,f,c
 21419  0122F8  0E00               	movlw	0
 21420  0122FA  5ADD               	subwfb	postdec2,f,c
 21421                           
 21422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 21423                           ;stkvar	_w @ sp[(-56)+38]
 21424  0122FC  50E1               	movf	fsr1l,w,c
 21425  0122FE  0FEE               	addlw	-18
 21426  012300  6ED9               	movwf	fsr2l,c
 21427  012302  50E2               	movf	fsr1h,w,c
 21428  012304  6EDA               	movwf	fsr2h,c
 21429  012306  0EFF               	movlw	255
 21430  012308  22DA               	addwfc	fsr2h,f,c
 21431  01230A  06DE               	decf	postinc2,f,c
 21432  01230C  0E00               	movlw	0
 21433  01230E  5ADD               	subwfb	postdec2,f,c
 21434  012310                     l13456:
 21435                           
 21436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 21437                           ;stkvar	_e @ sp[(-56)+34]
 21438  012310  0EEA               	movlw	-22
 21439  012312  006F FF8C  F001    	movff	plusw1,btemp
 21440  012318  0EEB               	movlw	-21
 21441  01231A  50E3               	movf	plusw1,w,c
 21442  01231C  1001               	iorwf	btemp^0,w,c
 21443  01231E  A4D8               	btfss	status,2,c
 21444  012320  D7A6               	goto	l13446
 21445                           
 21446                           ;stkvar	_p @ sp[(-56)+40]
 21447  012322  0EF1               	movlw	-15
 21448  012324  BEE3               	btfsc	plusw1,7,c
 21449  012326  D007               	goto	u12500
 21450  012328  0EF1               	movlw	-15
 21451  01232A  50E3               	movf	plusw1,w,c
 21452  01232C  E1A0               	bnz	l13446
 21453  01232E  0EF0               	movlw	-16
 21454  012330  04E3               	decf	plusw1,w,c
 21455  012332  B0D8               	btfsc	status,0,c
 21456  012334  D79C               	goto	l13446
 21457  012336                     u12500:
 21458                           
 21459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 21460                           ;stkvar	_i @ sp[(-56)+36]
 21461  012336  50E1               	movf	fsr1l,w,c
 21462  012338  0FEC               	addlw	-20
 21463  01233A  6ED9               	movwf	fsr2l,c
 21464  01233C  50E2               	movf	fsr1h,w,c
 21465  01233E  6EDA               	movwf	fsr2h,c
 21466  012340  0EFF               	movlw	255
 21467  012342  22DA               	addwfc	fsr2h,f,c
 21468  012344  06DE               	decf	postinc2,f,c
 21469  012346  0E00               	movlw	0
 21470  012348  5ADD               	subwfb	postdec2,f,c
 21471                           
 21472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 21473                           ;stkvar	_sign @ sp[(-56)+42]
 21474  01234A  0EF2               	movlw	-14
 21475  01234C  006F FF8C  F001    	movff	plusw1,btemp
 21476  012352  0EF3               	movlw	-13
 21477  012354  50E3               	movf	plusw1,w,c
 21478  012356  1001               	iorwf	btemp^0,w,c
 21479  012358  A4D8               	btfss	status,2,c
 21480  01235A  D002               	goto	l13466
 21481  01235C  0E2B               	movlw	43
 21482  01235E  D001               	goto	L23
 21483  012360                     l13466:
 21484  012360  0E2D               	movlw	45
 21485  012362                     L23:
 21486  012362  6E0B               	movwf	(btemp+10)^0,c
 21487  012364  0E00               	movlw	0
 21488  012366  6E0C               	movwf	(btemp+11)^0,c
 21489                           
 21490                           ;stkvar	_efgtoa$6164 @ sp[(-56)+4]
 21491  012368  0ECC               	movlw	-52
 21492  01236A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21493  012370  0ECD               	movlw	-51
 21494  012372  0060  F033  FFE3   	movff	btemp+11,plusw1
 21495                           
 21496                           ;stkvar	_efgtoa$6164 @ sp[(-56)+4]
 21497                           ;stkvar	_i @ sp[(-56)+36]
 21498  012378  0EEC               	movlw	-20
 21499  01237A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21500  012380  0EED               	movlw	-19
 21501  012382  006F FF8C  F00C    	movff	plusw1,btemp+11
 21502  012388  0E43               	movlw	low _dbuf
 21503  01238A  240B               	addwf	(btemp+10)^0,w,c
 21504  01238C  6ED9               	movwf	fsr2l,c
 21505  01238E  0E02               	movlw	high _dbuf
 21506  012390  200C               	addwfc	(btemp+11)^0,w,c
 21507  012392  6EDA               	movwf	fsr2h,c
 21508  012394  0ECC               	movlw	-52
 21509  012396  006F FF8F FFDF     	movff	plusw1,indf2
 21510                           
 21511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 21512                           ;stkvar	_w @ sp[(-56)+38]
 21513  01239C  50E1               	movf	fsr1l,w,c
 21514  01239E  0FEE               	addlw	-18
 21515  0123A0  6ED9               	movwf	fsr2l,c
 21516  0123A2  50E2               	movf	fsr1h,w,c
 21517  0123A4  6EDA               	movwf	fsr2h,c
 21518  0123A6  0EFF               	movlw	255
 21519  0123A8  22DA               	addwfc	fsr2h,f,c
 21520  0123AA  06DE               	decf	postinc2,f,c
 21521  0123AC  0E00               	movlw	0
 21522  0123AE  5ADD               	subwfb	postdec2,f,c
 21523                           
 21524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 21525                           ;stkvar	_i @ sp[(-56)+36]
 21526  0123B0  50E1               	movf	fsr1l,w,c
 21527  0123B2  0FEC               	addlw	-20
 21528  0123B4  6ED9               	movwf	fsr2l,c
 21529  0123B6  50E2               	movf	fsr1h,w,c
 21530  0123B8  6EDA               	movwf	fsr2h,c
 21531  0123BA  0EFF               	movlw	255
 21532  0123BC  22DA               	addwfc	fsr2h,f,c
 21533  0123BE  06DE               	decf	postinc2,f,c
 21534  0123C0  0E00               	movlw	0
 21535  0123C2  5ADD               	subwfb	postdec2,f,c
 21536  0123C4  0EBF               	movlw	191
 21537  0123C6  6E0B               	movwf	(btemp+10)^0,c
 21538  0123C8  0EFF               	movlw	255
 21539  0123CA  6E0C               	movwf	(btemp+11)^0,c
 21540                           
 21541                           ;stkvar	_c @ sp[(-56)+-7]
 21542  0123CC  0EC1               	movlw	-63
 21543  0123CE  50E3               	movf	plusw1,w,c
 21544  0123D0  6E09               	movwf	(btemp+8)^0,c
 21545  0123D2  6A0A               	clrf	(btemp+9)^0,c
 21546  0123D4  500B               	movf	(btemp+10)^0,w,c
 21547  0123D6  2609               	addwf	(btemp+8)^0,f,c
 21548  0123D8  500C               	movf	(btemp+11)^0,w,c
 21549  0123DA  220A               	addwfc	(btemp+9)^0,f,c
 21550  0123DC  500A               	movf	(btemp+9)^0,w,c
 21551  0123DE  E106               	bnz	u12520
 21552  0123E0  0E1A               	movlw	26
 21553  0123E2  5C09               	subwf	(btemp+8)^0,w,c
 21554  0123E4  B0D8               	btfsc	status,0,c
 21555  0123E6  D002               	goto	u12520
 21556  0123E8  0E01               	movlw	1
 21557  0123EA  D001               	goto	u12530
 21558  0123EC                     u12520:
 21559  0123EC  0E00               	movlw	0
 21560  0123EE                     u12530:
 21561  0123EE  6E0B               	movwf	(btemp+10)^0,c
 21562  0123F0  6A0C               	clrf	(btemp+11)^0,c
 21563                           
 21564                           ;stkvar	_efgtoa$6166 @ sp[(-56)+0]
 21565  0123F2  0EC8               	movlw	-56
 21566  0123F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21567  0123FA  0EC9               	movlw	-55
 21568  0123FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 21569                           
 21570                           ;stkvar	_efgtoa$6166 @ sp[(-56)+0]
 21571  012402  0EC8               	movlw	-56
 21572  012404  006F FF8C  F001    	movff	plusw1,btemp
 21573  01240A  0EC9               	movlw	-55
 21574  01240C  50E3               	movf	plusw1,w,c
 21575  01240E  1001               	iorwf	btemp^0,w,c
 21576  012410  A4D8               	btfss	status,2,c
 21577  012412  D002               	goto	l13482
 21578  012414  0E65               	movlw	101
 21579  012416  D001               	goto	L24
 21580  012418                     l13482:
 21581  012418  0E45               	movlw	69
 21582  01241A                     L24:
 21583  01241A  6E0B               	movwf	(btemp+10)^0,c
 21584  01241C  0E00               	movlw	0
 21585  01241E  6E0C               	movwf	(btemp+11)^0,c
 21586                           
 21587                           ;stkvar	_efgtoa$6165 @ sp[(-56)+2]
 21588  012420  0ECA               	movlw	-54
 21589  012422  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21590  012428  0ECB               	movlw	-53
 21591  01242A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21592                           
 21593                           ;stkvar	_efgtoa$6165 @ sp[(-56)+2]
 21594                           ;stkvar	_i @ sp[(-56)+36]
 21595  012430  0EEC               	movlw	-20
 21596  012432  006F FF8C  F00B    	movff	plusw1,btemp+10
 21597  012438  0EED               	movlw	-19
 21598  01243A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21599  012440  0E43               	movlw	low _dbuf
 21600  012442  240B               	addwf	(btemp+10)^0,w,c
 21601  012444  6ED9               	movwf	fsr2l,c
 21602  012446  0E02               	movlw	high _dbuf
 21603  012448  200C               	addwfc	(btemp+11)^0,w,c
 21604  01244A  6EDA               	movwf	fsr2h,c
 21605  01244C  0ECA               	movlw	-54
 21606  01244E  006F FF8F FFDF     	movff	plusw1,indf2
 21607                           
 21608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 21609                           ;stkvar	_w @ sp[(-56)+38]
 21610  012454  50E1               	movf	fsr1l,w,c
 21611  012456  0FEE               	addlw	-18
 21612  012458  6ED9               	movwf	fsr2l,c
 21613  01245A  50E2               	movf	fsr1h,w,c
 21614  01245C  6EDA               	movwf	fsr2h,c
 21615  01245E  0EFF               	movlw	255
 21616  012460  22DA               	addwfc	fsr2h,f,c
 21617  012462  06DE               	decf	postinc2,f,c
 21618  012464  0E00               	movlw	0
 21619  012466  5ADD               	subwfb	postdec2,f,c
 21620                           
 21621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 21622                           ;stkvar	_i @ sp[(-56)+36]
 21623  012468  0EEC               	movlw	-20
 21624  01246A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21625  012470  0EED               	movlw	-19
 21626  012472  006F FF8C  F00C    	movff	plusw1,btemp+11
 21627  012478  0E43               	movlw	low _dbuf
 21628  01247A  240B               	addwf	(btemp+10)^0,w,c
 21629  01247C  6E09               	movwf	(btemp+8)^0,c
 21630  01247E  0E02               	movlw	high _dbuf
 21631  012480  200C               	addwfc	(btemp+11)^0,w,c
 21632  012482  6E0A               	movwf	(btemp+9)^0,c
 21633  012484  0060  F027  FFE6   	movff	btemp+8,postinc1
 21634  01248A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 21635                           
 21636                           ;stkvar	_n @ sp[(-58)+32]
 21637  012490  0E43               	movlw	low _dbuf
 21638  012492  6E0B               	movwf	(btemp+10)^0,c
 21639  012494  0E02               	movlw	high _dbuf
 21640  012496  6E0C               	movwf	(btemp+11)^0,c
 21641  012498  0EE6               	movlw	-26
 21642  01249A  50E3               	movf	plusw1,w,c
 21643  01249C  260B               	addwf	(btemp+10)^0,f,c
 21644  01249E  0EE7               	movlw	-25
 21645  0124A0  50E3               	movf	plusw1,w,c
 21646  0124A2  220C               	addwfc	(btemp+11)^0,f,c
 21647  0124A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21648  0124AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 21649  0124B0  ECA3  F0D7         	call	_strcpy	;wreg free
 21650  0124B4  EF55  F08A         	goto	l13234
 21651  0124B8                     l2458:
 21652                           
 21653                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 21654  0124B8  0EC1               	movlw	193
 21655  0124BA  26E1               	addwf	fsr1l,f,c
 21656  0124BC  0EFF               	movlw	255
 21657  0124BE  22E2               	addwfc	fsr1h,f,c
 21658  0124C0  0012               	return		;funcret
 21659  0124C2                     __end_of_efgtoa:
 21660                           	opt callstack 0
 21661                           
 21662 ;; *************** function _tolower *****************
 21663 ;; Defined at:
 21664 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 21665 ;; Parameters:    Size  Location     Type
 21666 ;;  c               2  [STACK] int 
 21667 ;; Auto vars:     Size  Location     Type
 21668 ;;		None
 21669 ;; Return value:  Size  Location     Type
 21670 ;;                  2  [STACK] int 
 21671 ;; Registers used:
 21672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21673 ;; Tracked objects:
 21674 ;;		On entry : 0/0
 21675 ;;		On exit  : 0/0
 21676 ;;		Unchanged: 0/0
 21677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21682 ;;Total ram usage:        0 bytes
 21683 ;; Hardware stack levels used:    1
 21684 ;; Hardware stack levels required when called:   16
 21685 ;; This function calls:
 21686 ;;		_isupper
 21687 ;; This function is called by:
 21688 ;;		_efgtoa
 21689 ;;		_vfpfcnvrt
 21690 ;; This function uses a reentrant model
 21691 ;;
 21692                           
 21693                           	psect	text76
 21694  01BC80                     __ptext76:
 21695                           	opt callstack 0
 21696  01BC80                     _tolower:
 21697                           	opt callstack 0
 21698                           
 21699                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21700  01BC80  52E6               	movf	postinc1,f,c
 21701  01BC82  52E6               	movf	postinc1,f,c
 21702                           
 21703                           ;stkvar	_c @ sp[(-2)+-2]
 21704                           
 21705                           ;incstack = 0
 21706 ;; hardware stack exceeded
 21707  01BC84  0EFC               	movlw	-4
 21708  01BC86  50E3               	movf	plusw1,w,c
 21709  01BC88  0FBF               	addlw	191
 21710  01BC8A  6E0B               	movwf	(btemp+10)^0,c
 21711  01BC8C  0EFD               	movlw	-3
 21712  01BC8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21713  01BC94  0EFF               	movlw	255
 21714  01BC96  220C               	addwfc	(btemp+11)^0,f,c
 21715  01BC98  500C               	movf	(btemp+11)^0,w,c
 21716  01BC9A  E106               	bnz	u6570
 21717  01BC9C  0E1A               	movlw	26
 21718  01BC9E  5C0B               	subwf	(btemp+10)^0,w,c
 21719  01BCA0  B0D8               	btfsc	status,0,c
 21720  01BCA2  D002               	goto	u6570
 21721  01BCA4  0E01               	movlw	1
 21722  01BCA6  D001               	goto	u6580
 21723  01BCA8                     u6570:
 21724  01BCA8  0E00               	movlw	0
 21725  01BCAA                     u6580:
 21726  01BCAA  6E0B               	movwf	(btemp+10)^0,c
 21727  01BCAC  6A0C               	clrf	(btemp+11)^0,c
 21728                           
 21729                           ;stkvar	_tolower$6985 @ sp[(-2)+0]
 21730  01BCAE  0EFE               	movlw	-2
 21731  01BCB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21732  01BCB6  0EFF               	movlw	-1
 21733  01BCB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 21734                           
 21735                           ;stkvar	_tolower$6985 @ sp[(-2)+0]
 21736  01BCBE  0EFE               	movlw	-2
 21737  01BCC0  006F FF8C  F001    	movff	plusw1,btemp
 21738  01BCC6  0EFF               	movlw	-1
 21739  01BCC8  50E3               	movf	plusw1,w,c
 21740  01BCCA  1001               	iorwf	btemp^0,w,c
 21741  01BCCC  B4D8               	btfsc	status,2,c
 21742  01BCCE  D00D               	goto	l8776
 21743                           
 21744                           ;stkvar	_c @ sp[(-2)+-2]
 21745  01BCD0  0EFC               	movlw	-4
 21746  01BCD2  006F FF8C  F001    	movff	plusw1,btemp
 21747  01BCD8  0EFD               	movlw	-3
 21748  01BCDA  006F FF8C  F002    	movff	plusw1,btemp+1
 21749  01BCE0  0E20               	movlw	32
 21750  01BCE2  1201               	iorwf	btemp^0,f,c
 21751  01BCE4  0E00               	movlw	0
 21752  01BCE6  1202               	iorwf	(btemp+1)^0,f,c
 21753  01BCE8  D008               	goto	l3730
 21754  01BCEA                     l8776:
 21755                           
 21756                           ;stkvar	_c @ sp[(-2)+-2]
 21757  01BCEA  0EFC               	movlw	-4
 21758  01BCEC  006F FF8C  F001    	movff	plusw1,btemp
 21759  01BCF2  0EFD               	movlw	-3
 21760  01BCF4  006F FF8C  F002    	movff	plusw1,btemp+1
 21761  01BCFA                     l3730:
 21762                           
 21763                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21764  01BCFA  52E5               	movf	postdec1,f,c
 21765  01BCFC  52E5               	movf	postdec1,f,c
 21766  01BCFE  52E5               	movf	postdec1,f,c
 21767  01BD00  52E5               	movf	postdec1,f,c
 21768  01BD02  0012               	return		;funcret
 21769  01BD04                     __end_of_tolower:
 21770                           	opt callstack 0
 21771                           
 21772 ;; *************** function _isupper *****************
 21773 ;; Defined at:
 21774 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 21775 ;; Parameters:    Size  Location     Type
 21776 ;;  c               2  [STACK] int 
 21777 ;; Auto vars:     Size  Location     Type
 21778 ;;		None
 21779 ;; Return value:  Size  Location     Type
 21780 ;;                  2  [STACK] int 
 21781 ;; Registers used:
 21782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21783 ;; Tracked objects:
 21784 ;;		On entry : 0/0
 21785 ;;		On exit  : 0/0
 21786 ;;		Unchanged: 0/0
 21787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21792 ;;Total ram usage:        0 bytes
 21793 ;; Hardware stack levels used:    1
 21794 ;; Hardware stack levels required when called:   15
 21795 ;; This function calls:
 21796 ;;		Nothing
 21797 ;; This function is called by:
 21798 ;;		_efgtoa
 21799 ;;		_xtoa
 21800 ;;		_vfpfcnvrt
 21801 ;;		_tolower
 21802 ;; This function uses a reentrant model
 21803 ;;
 21804                           
 21805                           	psect	text77
 21806  01CC26                     __ptext77:
 21807                           	opt callstack 0
 21808  01CC26                     _isupper:
 21809                           	opt callstack 0
 21810                           
 21811                           ;stkvar	_c @ sp[(0)+-2]
 21812                           
 21813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21814                           ;incstack = 0
 21815 ;; hardware stack exceeded
 21816  01CC26  0EFE               	movlw	-2
 21817  01CC28  50E3               	movf	plusw1,w,c
 21818  01CC2A  0FBF               	addlw	191
 21819  01CC2C  6E0B               	movwf	(btemp+10)^0,c
 21820  01CC2E  0EFF               	movlw	-1
 21821  01CC30  006F FF8C  F00C    	movff	plusw1,btemp+11
 21822  01CC36  0EFF               	movlw	255
 21823  01CC38  220C               	addwfc	(btemp+11)^0,f,c
 21824  01CC3A  500C               	movf	(btemp+11)^0,w,c
 21825  01CC3C  E106               	bnz	u5920
 21826  01CC3E  0E1A               	movlw	26
 21827  01CC40  5C0B               	subwf	(btemp+10)^0,w,c
 21828  01CC42  B0D8               	btfsc	status,0,c
 21829  01CC44  D002               	goto	u5920
 21830  01CC46  0E01               	movlw	1
 21831  01CC48  D001               	goto	u5930
 21832  01CC4A                     u5920:
 21833  01CC4A  0E00               	movlw	0
 21834  01CC4C                     u5930:
 21835  01CC4C  6E01               	movwf	btemp^0,c
 21836  01CC4E  6A02               	clrf	(btemp+1)^0,c
 21837                           
 21838                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21839  01CC50  52E5               	movf	postdec1,f,c
 21840  01CC52  52E5               	movf	postdec1,f,c
 21841  01CC54  0012               	return		;funcret
 21842  01CC56                     __end_of_isupper:
 21843                           	opt callstack 0
 21844                           
 21845 ;; *************** function _strcpy *****************
 21846 ;; Defined at:
 21847 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 21848 ;; Parameters:    Size  Location     Type
 21849 ;;  dest            2  [STACK] PTR unsigned char 
 21850 ;;		 -> dbuf(80), 
 21851 ;;  src             2  [STACK] PTR const unsigned char 
 21852 ;;		 -> STR_87(4), STR_86(4), STR_83(4), STR_82(4), 
 21853 ;;		 -> dbuf(80), 
 21854 ;; Auto vars:     Size  Location     Type
 21855 ;;  d               2  [STACK] PTR unsigned char 
 21856 ;;		 -> dbuf(80), 
 21857 ;;  s               2  [STACK] PTR const unsigned char 
 21858 ;;		 -> STR_87(4), STR_86(4), STR_83(4), STR_82(4), 
 21859 ;;		 -> dbuf(80), 
 21860 ;; Return value:  Size  Location     Type
 21861 ;;                  2  [STACK] PTR unsigned char 
 21862 ;; Registers used:
 21863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 21864 ;; Tracked objects:
 21865 ;;		On entry : 0/0
 21866 ;;		On exit  : 0/0
 21867 ;;		Unchanged: 0/0
 21868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21873 ;;Total ram usage:        0 bytes
 21874 ;; Hardware stack levels used:    1
 21875 ;; Hardware stack levels required when called:   15
 21876 ;; This function calls:
 21877 ;;		Nothing
 21878 ;; This function is called by:
 21879 ;;		_efgtoa
 21880 ;; This function uses a reentrant model
 21881 ;;
 21882                           
 21883                           	psect	text78
 21884  01AF46                     __ptext78:
 21885                           	opt callstack 0
 21886  01AF46                     _strcpy:
 21887                           	opt callstack 0
 21888                           
 21889                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21890  01AF46  52E6               	movf	postinc1,f,c
 21891  01AF48  52E6               	movf	postinc1,f,c
 21892  01AF4A  52E6               	movf	postinc1,f,c
 21893  01AF4C  52E6               	movf	postinc1,f,c
 21894                           
 21895                           ;stkvar	_src @ sp[(-4)+-4]
 21896                           
 21897                           ;incstack = 0
 21898 ;; hardware stack exceeded
 21899  01AF4E  0EF8               	movlw	-8
 21900  01AF50  006F FF8C  F00B    	movff	plusw1,btemp+10
 21901  01AF56  0EF9               	movlw	-7
 21902  01AF58  006F FF8C  F00C    	movff	plusw1,btemp+11
 21903                           
 21904                           ;stkvar	_s @ sp[(-4)+2]
 21905  01AF5E  0EFF               	movlw	-1
 21906  01AF60  0060  F033  FFE3   	movff	btemp+11,plusw1
 21907  01AF66  0EFE               	movlw	-2
 21908  01AF68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21909                           
 21910                           ;stkvar	_dest @ sp[(-4)+-2]
 21911  01AF6E  0EFA               	movlw	-6
 21912  01AF70  006F FF8C  F00B    	movff	plusw1,btemp+10
 21913  01AF76  0EFB               	movlw	-5
 21914  01AF78  006F FF8C  F00C    	movff	plusw1,btemp+11
 21915                           
 21916                           ;stkvar	_d @ sp[(-4)+0]
 21917  01AF7E  0EFD               	movlw	-3
 21918  01AF80  0060  F033  FFE3   	movff	btemp+11,plusw1
 21919  01AF86  0EFC               	movlw	-4
 21920  01AF88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21921  01AF8E                     l13096:
 21922                           
 21923                           ;stkvar	_s @ sp[(-4)+2]
 21924  01AF8E  50E1               	movf	fsr1l,w,c
 21925  01AF90  0FFE               	addlw	-2
 21926  01AF92  6ED9               	movwf	fsr2l,c
 21927  01AF94  50E2               	movf	fsr1h,w,c
 21928  01AF96  6EDA               	movwf	fsr2h,c
 21929  01AF98  0EFF               	movlw	255
 21930  01AF9A  22DA               	addwfc	fsr2h,f,c
 21931  01AF9C  006F FF7C  F00B    	movff	indf2,btemp+10
 21932  01AFA2  0E01               	movlw	1
 21933  01AFA4  26DE               	addwf	postinc2,f,c
 21934  01AFA6  006F FF7C  F00C    	movff	indf2,btemp+11
 21935  01AFAC  0E00               	movlw	0
 21936  01AFAE  22DD               	addwfc	postdec2,f,c
 21937  01AFB0  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 21938  01AFB6  0060  F033  FFF7   	movff	btemp+11,tblptrh
 21939  01AFBC  0E00               	movlw	low (__mediumconst shr (0+16))
 21940  01AFBE  6EF8               	movwf	tblptru,c
 21941                           
 21942                           ;stkvar	_d @ sp[(-4)+0]
 21943  01AFC0  50E1               	movf	fsr1l,w,c
 21944  01AFC2  0FFC               	addlw	-4
 21945  01AFC4  6ED9               	movwf	fsr2l,c
 21946  01AFC6  50E2               	movf	fsr1h,w,c
 21947  01AFC8  6EDA               	movwf	fsr2h,c
 21948  01AFCA  0EFF               	movlw	255
 21949  01AFCC  22DA               	addwfc	fsr2h,f,c
 21950  01AFCE  006F FF7C  F00B    	movff	indf2,btemp+10
 21951  01AFD4  0E01               	movlw	1
 21952  01AFD6  26DE               	addwf	postinc2,f,c
 21953  01AFD8  006F FF7C  F00C    	movff	indf2,btemp+11
 21954  01AFDE  0E00               	movlw	0
 21955  01AFE0  22DD               	addwfc	postdec2,f,c
 21956  01AFE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 21957  01AFE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 21958  01AFEE  0E1F               	movlw	(high __ramtop+-1)
 21959  01AFF0  64F7               	cpfsgt	tblptrh,c
 21960  01AFF2  D003               	bra	u11827
 21961  01AFF4  0008               	tblrd		*
 21962  01AFF6  50F5               	movf	tablat,w,c
 21963  01AFF8  D007               	bra	u11820
 21964  01AFFA                     u11827:
 21965  01AFFA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21966  01B000  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21967  01B006  50EF               	movf	indf0,w,c
 21968  01B008                     u11820:
 21969  01B008  6EDF               	movwf	indf2,c
 21970  01B00A  50DF               	movf	indf2,w,c
 21971  01B00C  A4D8               	btfss	status,2,c
 21972  01B00E  D7BF               	goto	l13096
 21973                           
 21974                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 21975  01B010  0EF8               	movlw	248
 21976  01B012  26E1               	addwf	fsr1l,f,c
 21977  01B014  0EFF               	movlw	255
 21978  01B016  22E2               	addwfc	fsr1h,f,c
 21979  01B018  0012               	return		;funcret
 21980  01B01A                     __end_of_strcpy:
 21981                           	opt callstack 0
 21982                           
 21983 ;; *************** function _floorf *****************
 21984 ;; Defined at:
 21985 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 21986 ;; Parameters:    Size  Location     Type
 21987 ;;  x               4  [STACK] float 
 21988 ;; Auto vars:     Size  Location     Type
 21989 ;;  u               4  [STACK] struct .
 21990 ;;  m               4  [STACK] unsigned long 
 21991 ;;  e               2  [STACK] int 
 21992 ;; Return value:  Size  Location     Type
 21993 ;;                  4  [STACK] float 
 21994 ;; Registers used:
 21995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 21996 ;; Tracked objects:
 21997 ;;		On entry : 0/0
 21998 ;;		On exit  : 0/0
 21999 ;;		Unchanged: 0/0
 22000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22005 ;;Total ram usage:        0 bytes
 22006 ;; Hardware stack levels used:    1
 22007 ;; Hardware stack levels required when called:   15
 22008 ;; This function calls:
 22009 ;;		Nothing
 22010 ;; This function is called by:
 22011 ;;		_efgtoa
 22012 ;; This function uses a reentrant model
 22013 ;;
 22014                           
 22015                           	psect	text79
 22016  016A36                     __ptext79:
 22017                           	opt callstack 0
 22018  016A36                     _floorf:
 22019                           	opt callstack 0
 22020                           
 22021                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22022  016A36  0E0A               	movlw	10
 22023  016A38  26E1               	addwf	fsr1l,f,c
 22024  016A3A  0E00               	movlw	0
 22025  016A3C  22E2               	addwfc	fsr1h,f,c
 22026                           
 22027                           ;incstack = 0
 22028 ;; hardware stack exceeded
 22029  016A3E  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 22030  016A44  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 22031  016A4A  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 22032  016A50  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 22033                           
 22034                           ;stkvar	_u @ sp[(-10)+0]
 22035  016A56  0EF6               	movlw	-10
 22036  016A58  0060  F027  FFE3   	movff	btemp+8,plusw1
 22037  016A5E  0EF7               	movlw	-9
 22038  016A60  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22039  016A66  0EF8               	movlw	-8
 22040  016A68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22041  016A6E  0EF9               	movlw	-7
 22042  016A70  0060  F033  FFE3   	movff	btemp+11,plusw1
 22043                           
 22044                           ;stkvar	_x @ sp[(-10)+-4]
 22045  016A76  0EF2               	movlw	-14
 22046  016A78  006F FF8C  F009    	movff	plusw1,btemp+8
 22047  016A7E  0EF3               	movlw	-13
 22048  016A80  006F FF8C  F00A    	movff	plusw1,btemp+9
 22049  016A86  0EF4               	movlw	-12
 22050  016A88  006F FF8C  F00B    	movff	plusw1,btemp+10
 22051  016A8E  0EF5               	movlw	-11
 22052  016A90  006F FF8C  F00C    	movff	plusw1,btemp+11
 22053                           
 22054                           ;stkvar	_u @ sp[(-10)+0]
 22055  016A96  0EF6               	movlw	-10
 22056  016A98  0060  F027  FFE3   	movff	btemp+8,plusw1
 22057  016A9E  0EF7               	movlw	-9
 22058  016AA0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22059  016AA6  0EF8               	movlw	-8
 22060  016AA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22061  016AAE  0EF9               	movlw	-7
 22062  016AB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22063  016AB6  0E81               	movlw	129
 22064  016AB8  6E0B               	movwf	(btemp+10)^0,c
 22065  016ABA  0EFF               	movlw	255
 22066  016ABC  6E0C               	movwf	(btemp+11)^0,c
 22067                           
 22068                           ;stkvar	_u @ sp[(-10)+0]
 22069  016ABE  0EF6               	movlw	-10
 22070  016AC0  006F FF8C  F005    	movff	plusw1,btemp+4
 22071  016AC6  0EF7               	movlw	-9
 22072  016AC8  006F FF8C  F006    	movff	plusw1,btemp+5
 22073  016ACE  0EF8               	movlw	-8
 22074  016AD0  006F FF8C  F007    	movff	plusw1,btemp+6
 22075  016AD6  0EF9               	movlw	-7
 22076  016AD8  006F FF8C  F008    	movff	plusw1,btemp+7
 22077  016ADE  0E18               	movlw	24
 22078  016AE0  D005               	goto	u6600
 22079  016AE2                     u6605:
 22080  016AE2  90D8               	bcf	status,0,c
 22081  016AE4  3208               	rrcf	(btemp+7)^0,f,c
 22082  016AE6  3207               	rrcf	(btemp+6)^0,f,c
 22083  016AE8  3206               	rrcf	(btemp+5)^0,f,c
 22084  016AEA  3205               	rrcf	(btemp+4)^0,f,c
 22085  016AEC                     u6600:
 22086  016AEC  2EE8               	decfsz	wreg,f,c
 22087  016AEE  D7F9               	goto	u6605
 22088  016AF0  0060  F014  F009   	movff	btemp+4,btemp+8
 22089  016AF6  0060  F018  F00A   	movff	btemp+5,btemp+9
 22090  016AFC  0EFF               	movlw	255
 22091  016AFE  1609               	andwf	(btemp+8)^0,f,c
 22092  016B00  0E00               	movlw	0
 22093  016B02  160A               	andwf	(btemp+9)^0,f,c
 22094  016B04  500B               	movf	(btemp+10)^0,w,c
 22095  016B06  2609               	addwf	(btemp+8)^0,f,c
 22096  016B08  500C               	movf	(btemp+11)^0,w,c
 22097  016B0A  220A               	addwfc	(btemp+9)^0,f,c
 22098                           
 22099                           ;stkvar	_e @ sp[(-10)+8]
 22100  016B0C  0EFE               	movlw	-2
 22101  016B0E  0060  F027  FFE3   	movff	btemp+8,plusw1
 22102  016B14  0EFF               	movlw	-1
 22103  016B16  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22104                           
 22105                           ;stkvar	_e @ sp[(-10)+8]
 22106  016B1C  0EFF               	movlw	-1
 22107  016B1E  BEE3               	btfsc	plusw1,7,c
 22108  016B20  D019               	goto	l8790
 22109  016B22  0EFF               	movlw	-1
 22110  016B24  50E3               	movf	plusw1,w,c
 22111  016B26  E108               	bnz	u6610
 22112  016B28  0EFE               	movlw	-2
 22113  016B2A  006F FF8C  F001    	movff	plusw1,btemp
 22114  016B30  0E17               	movlw	23
 22115  016B32  5E01               	subwf	btemp^0,f,c
 22116  016B34  A0D8               	btfss	status,0,c
 22117  016B36  D00E               	goto	l8790
 22118  016B38                     u6610:
 22119                           
 22120                           ;stkvar	_x @ sp[(-10)+-4]
 22121  016B38  0EF2               	movlw	-14
 22122  016B3A  006F FF8C  F001    	movff	plusw1,btemp
 22123  016B40  0EF3               	movlw	-13
 22124  016B42  006F FF8C  F002    	movff	plusw1,btemp+1
 22125  016B48  0EF4               	movlw	-12
 22126  016B4A  006F FF8C  F003    	movff	plusw1,btemp+2
 22127  016B50  0EF5               	movlw	-11
 22128  016B52  D11F               	goto	L25
 22129  016B54                     l8790:
 22130                           
 22131                           ;stkvar	_e @ sp[(-10)+8]
 22132  016B54  0EFF               	movlw	-1
 22133  016B56  BEE3               	btfsc	plusw1,7,c
 22134  016B58  D0B4               	goto	l8806
 22135                           
 22136                           ;stkvar	_e @ sp[(-10)+8]
 22137  016B5A  0EFE               	movlw	-2
 22138  016B5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22139  016B62  0EFF               	movlw	255
 22140  016B64  6E05               	movwf	(btemp+4)^0,c
 22141  016B66  0EFF               	movlw	255
 22142  016B68  6E06               	movwf	(btemp+5)^0,c
 22143  016B6A  0E7F               	movlw	127
 22144  016B6C  6E07               	movwf	(btemp+6)^0,c
 22145  016B6E  0E00               	movlw	0
 22146  016B70  6E08               	movwf	(btemp+7)^0,c
 22147  016B72                     u6635:
 22148  016B72  660C               	tstfsz	(btemp+11)^0,c
 22149  016B74  D001               	goto	u6636
 22150  016B76  D007               	goto	u6637
 22151  016B78                     u6636:
 22152  016B78  3408               	rlcf	(btemp+7)^0,w,c
 22153  016B7A  3208               	rrcf	(btemp+7)^0,f,c
 22154  016B7C  3207               	rrcf	(btemp+6)^0,f,c
 22155  016B7E  3206               	rrcf	(btemp+5)^0,f,c
 22156  016B80  3205               	rrcf	(btemp+4)^0,f,c
 22157  016B82  2E0C               	decfsz	(btemp+11)^0,f,c
 22158  016B84  D7F6               	goto	u6635
 22159  016B86                     u6637:
 22160                           
 22161                           ;stkvar	_m @ sp[(-10)+4]
 22162  016B86  0EFA               	movlw	-6
 22163  016B88  0060  F017  FFE3   	movff	btemp+4,plusw1
 22164  016B8E  0EFB               	movlw	-5
 22165  016B90  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22166  016B96  0EFC               	movlw	-4
 22167  016B98  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22168  016B9E  0EFD               	movlw	-3
 22169  016BA0  0060  F023  FFE3   	movff	btemp+7,plusw1
 22170                           
 22171                           ;stkvar	_m @ sp[(-10)+4]
 22172                           ;stkvar	_u @ sp[(-10)+0]
 22173  016BA6  0EF6               	movlw	-10
 22174  016BA8  006F FF8C  F009    	movff	plusw1,btemp+8
 22175  016BAE  0EF7               	movlw	-9
 22176  016BB0  006F FF8C  F00A    	movff	plusw1,btemp+9
 22177  016BB6  0EF8               	movlw	-8
 22178  016BB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 22179  016BBE  0EF9               	movlw	-7
 22180  016BC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22181  016BC6  0EFA               	movlw	-6
 22182  016BC8  50E3               	movf	plusw1,w,c
 22183  016BCA  1609               	andwf	(btemp+8)^0,f,c
 22184  016BCC  0EFB               	movlw	-5
 22185  016BCE  50E3               	movf	plusw1,w,c
 22186  016BD0  160A               	andwf	(btemp+9)^0,f,c
 22187  016BD2  0EFC               	movlw	-4
 22188  016BD4  50E3               	movf	plusw1,w,c
 22189  016BD6  160B               	andwf	(btemp+10)^0,f,c
 22190  016BD8  0EFD               	movlw	-3
 22191  016BDA  50E3               	movf	plusw1,w,c
 22192  016BDC  160C               	andwf	(btemp+11)^0,f,c
 22193  016BDE  5009               	movf	(btemp+8)^0,w,c
 22194  016BE0  100A               	iorwf	(btemp+9)^0,w,c
 22195  016BE2  100B               	iorwf	(btemp+10)^0,w,c
 22196  016BE4  100C               	iorwf	(btemp+11)^0,w,c
 22197  016BE6  B4D8               	btfsc	status,2,c
 22198  016BE8  D7A7               	goto	u6610
 22199                           
 22200                           ;stkvar	_u @ sp[(-10)+0]
 22201  016BEA  0EF6               	movlw	-10
 22202  016BEC  006F FF8C  F009    	movff	plusw1,btemp+8
 22203  016BF2  0EF7               	movlw	-9
 22204  016BF4  006F FF8C  F00A    	movff	plusw1,btemp+9
 22205  016BFA  0EF8               	movlw	-8
 22206  016BFC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22207  016C02  0EF9               	movlw	-7
 22208  016C04  006F FF8C  F00C    	movff	plusw1,btemp+11
 22209  016C0A  0E20               	movlw	32
 22210  016C0C  D005               	goto	u6650
 22211  016C0E                     u6655:
 22212  016C0E  90D8               	bcf	status,0,c
 22213  016C10  320C               	rrcf	(btemp+11)^0,f,c
 22214  016C12  320B               	rrcf	(btemp+10)^0,f,c
 22215  016C14  320A               	rrcf	(btemp+9)^0,f,c
 22216  016C16  3209               	rrcf	(btemp+8)^0,f,c
 22217  016C18                     u6650:
 22218  016C18  2EE8               	decfsz	wreg,f,c
 22219  016C1A  D7F9               	goto	u6655
 22220  016C1C  5009               	movf	(btemp+8)^0,w,c
 22221  016C1E  B4D8               	btfsc	status,2,c
 22222  016C20  D028               	goto	l8804
 22223                           
 22224                           ;stkvar	_m @ sp[(-10)+4]
 22225                           ;stkvar	_u @ sp[(-10)+0]
 22226  016C22  0EF6               	movlw	-10
 22227  016C24  50E3               	movf	plusw1,w,c
 22228  016C26  6E01               	movwf	btemp^0,c
 22229  016C28  0EFA               	movlw	-6
 22230  016C2A  50E3               	movf	plusw1,w,c
 22231  016C2C  2601               	addwf	btemp^0,f,c
 22232  016C2E  0EF6               	movlw	-10
 22233  016C30  0060  F007  FFE3   	movff	btemp,plusw1
 22234  016C36  0EF7               	movlw	-9
 22235  016C38  50E3               	movf	plusw1,w,c
 22236  016C3A  6E01               	movwf	btemp^0,c
 22237  016C3C  0EFB               	movlw	-5
 22238  016C3E  50E3               	movf	plusw1,w,c
 22239  016C40  2201               	addwfc	btemp^0,f,c
 22240  016C42  0EF7               	movlw	-9
 22241  016C44  0060  F007  FFE3   	movff	btemp,plusw1
 22242  016C4A  0EF8               	movlw	-8
 22243  016C4C  50E3               	movf	plusw1,w,c
 22244  016C4E  6E01               	movwf	btemp^0,c
 22245  016C50  0EFC               	movlw	-4
 22246  016C52  50E3               	movf	plusw1,w,c
 22247  016C54  2201               	addwfc	btemp^0,f,c
 22248  016C56  0EF8               	movlw	-8
 22249  016C58  0060  F007  FFE3   	movff	btemp,plusw1
 22250  016C5E  0EF9               	movlw	-7
 22251  016C60  50E3               	movf	plusw1,w,c
 22252  016C62  6E01               	movwf	btemp^0,c
 22253  016C64  0EFD               	movlw	-3
 22254  016C66  50E3               	movf	plusw1,w,c
 22255  016C68  2201               	addwfc	btemp^0,f,c
 22256  016C6A  0EF9               	movlw	-7
 22257  016C6C  0060  F007  FFE3   	movff	btemp,plusw1
 22258  016C72                     l8804:
 22259                           
 22260                           ;stkvar	_m @ sp[(-10)+4]
 22261  016C72  0EFA               	movlw	-6
 22262  016C74  006F FF8C  F009    	movff	plusw1,btemp+8
 22263  016C7A  0EFB               	movlw	-5
 22264  016C7C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22265  016C82  0EFC               	movlw	-4
 22266  016C84  006F FF8C  F00B    	movff	plusw1,btemp+10
 22267  016C8A  0EFD               	movlw	-3
 22268  016C8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22269  016C92  1C09               	comf	(btemp+8)^0,w,c
 22270  016C94  6E05               	movwf	(btemp+4)^0,c
 22271  016C96  1C0A               	comf	(btemp+9)^0,w,c
 22272  016C98  6E06               	movwf	(btemp+5)^0,c
 22273  016C9A  1C0B               	comf	(btemp+10)^0,w,c
 22274  016C9C  6E07               	movwf	(btemp+6)^0,c
 22275  016C9E  1C0C               	comf	(btemp+11)^0,w,c
 22276  016CA0  6E08               	movwf	(btemp+7)^0,c
 22277                           
 22278                           ;stkvar	_u @ sp[(-10)+0]
 22279  016CA2  50E1               	movf	fsr1l,w,c
 22280  016CA4  0FF6               	addlw	-10
 22281  016CA6  6ED9               	movwf	fsr2l,c
 22282  016CA8  50E2               	movf	fsr1h,w,c
 22283  016CAA  6EDA               	movwf	fsr2h,c
 22284  016CAC  0EFF               	movlw	255
 22285  016CAE  22DA               	addwfc	fsr2h,f,c
 22286  016CB0  5005               	movf	(btemp+4)^0,w,c
 22287  016CB2  16DE               	andwf	postinc2,f,c
 22288  016CB4  5006               	movf	(btemp+5)^0,w,c
 22289  016CB6  16DE               	andwf	postinc2,f,c
 22290  016CB8  5007               	movf	(btemp+6)^0,w,c
 22291  016CBA  16DE               	andwf	postinc2,f,c
 22292  016CBC  5008               	movf	(btemp+7)^0,w,c
 22293  016CBE  16DE               	andwf	postinc2,f,c
 22294  016CC0  D05B               	goto	l8814
 22295  016CC2                     l8806:
 22296                           
 22297                           ;stkvar	_u @ sp[(-10)+0]
 22298  016CC2  0EF6               	movlw	-10
 22299  016CC4  006F FF8C  F009    	movff	plusw1,btemp+8
 22300  016CCA  0EF7               	movlw	-9
 22301  016CCC  006F FF8C  F00A    	movff	plusw1,btemp+9
 22302  016CD2  0EF8               	movlw	-8
 22303  016CD4  006F FF8C  F00B    	movff	plusw1,btemp+10
 22304  016CDA  0EF9               	movlw	-7
 22305  016CDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22306  016CE2  0E20               	movlw	32
 22307  016CE4  D005               	goto	u6670
 22308  016CE6                     u6675:
 22309  016CE6  90D8               	bcf	status,0,c
 22310  016CE8  320C               	rrcf	(btemp+11)^0,f,c
 22311  016CEA  320B               	rrcf	(btemp+10)^0,f,c
 22312  016CEC  320A               	rrcf	(btemp+9)^0,f,c
 22313  016CEE  3209               	rrcf	(btemp+8)^0,f,c
 22314  016CF0                     u6670:
 22315  016CF0  2EE8               	decfsz	wreg,f,c
 22316  016CF2  D7F9               	goto	u6675
 22317  016CF4  6609               	tstfsz	(btemp+8)^0,c
 22318  016CF6  D009               	goto	l8810
 22319                           
 22320                           ;stkvar	_u @ sp[(-10)+0]
 22321  016CF8  0EF6               	movlw	-10
 22322  016CFA  6AE3               	clrf	plusw1,c
 22323  016CFC  0EF7               	movlw	-9
 22324  016CFE  6AE3               	clrf	plusw1,c
 22325  016D00  0EF8               	movlw	-8
 22326  016D02  6AE3               	clrf	plusw1,c
 22327  016D04  0EF9               	movlw	-7
 22328  016D06  6AE3               	clrf	plusw1,c
 22329  016D08  D037               	goto	l8814
 22330  016D0A                     l8810:
 22331                           
 22332                           ;stkvar	_u @ sp[(-10)+0]
 22333  016D0A  0EF6               	movlw	-10
 22334  016D0C  006F FF8C  F009    	movff	plusw1,btemp+8
 22335  016D12  0EF7               	movlw	-9
 22336  016D14  006F FF8C  F00A    	movff	plusw1,btemp+9
 22337  016D1A  0EF8               	movlw	-8
 22338  016D1C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22339  016D22  0EF9               	movlw	-7
 22340  016D24  006F FF8C  F00C    	movff	plusw1,btemp+11
 22341  016D2A  90D8               	bcf	status,0,c
 22342  016D2C  3409               	rlcf	(btemp+8)^0,w,c
 22343  016D2E  6E05               	movwf	(btemp+4)^0,c
 22344  016D30  340A               	rlcf	(btemp+9)^0,w,c
 22345  016D32  6E06               	movwf	(btemp+5)^0,c
 22346  016D34  340B               	rlcf	(btemp+10)^0,w,c
 22347  016D36  6E07               	movwf	(btemp+6)^0,c
 22348  016D38  340C               	rlcf	(btemp+11)^0,w,c
 22349  016D3A  6E08               	movwf	(btemp+7)^0,c
 22350  016D3C  5005               	movf	(btemp+4)^0,w,c
 22351  016D3E  1006               	iorwf	(btemp+5)^0,w,c
 22352  016D40  1007               	iorwf	(btemp+6)^0,w,c
 22353  016D42  1008               	iorwf	(btemp+7)^0,w,c
 22354  016D44  B4D8               	btfsc	status,2,c
 22355  016D46  D018               	goto	l8814
 22356  016D48  0E00               	movlw	0
 22357  016D4A  6E09               	movwf	(btemp+8)^0,c
 22358  016D4C  0E00               	movlw	0
 22359  016D4E  6E0A               	movwf	(btemp+9)^0,c
 22360  016D50  0E80               	movlw	128
 22361  016D52  6E0B               	movwf	(btemp+10)^0,c
 22362  016D54  0EBF               	movlw	191
 22363  016D56  6E0C               	movwf	(btemp+11)^0,c
 22364                           
 22365                           ;stkvar	_u @ sp[(-10)+0]
 22366  016D58  0EF6               	movlw	-10
 22367  016D5A  0060  F027  FFE3   	movff	btemp+8,plusw1
 22368  016D60  0EF7               	movlw	-9
 22369  016D62  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22370  016D68  0EF8               	movlw	-8
 22371  016D6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22372  016D70  0EF9               	movlw	-7
 22373  016D72  0060  F033  FFE3   	movff	btemp+11,plusw1
 22374  016D78                     l8814:
 22375                           
 22376                           ;stkvar	_u @ sp[(-10)+0]
 22377  016D78  0EF6               	movlw	-10
 22378  016D7A  006F FF8C  F001    	movff	plusw1,btemp
 22379  016D80  0EF7               	movlw	-9
 22380  016D82  006F FF8C  F002    	movff	plusw1,btemp+1
 22381  016D88  0EF8               	movlw	-8
 22382  016D8A  006F FF8C  F003    	movff	plusw1,btemp+2
 22383  016D90  0EF9               	movlw	-7
 22384  016D92                     L25:
 22385  016D92  006F FF8C  F004    	movff	plusw1,btemp+3
 22386                           
 22387                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22388  016D98  0EF2               	movlw	242
 22389  016D9A  26E1               	addwf	fsr1l,f,c
 22390  016D9C  0EFF               	movlw	255
 22391  016D9E  22E2               	addwfc	fsr1h,f,c
 22392  016DA0  0012               	return		;funcret
 22393  016DA2                     __end_of_floorf:
 22394                           	opt callstack 0
 22395                           
 22396 ;; *************** function ___fpclassifyf *****************
 22397 ;; Defined at:
 22398 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 22399 ;; Parameters:    Size  Location     Type
 22400 ;;  x               4  [STACK] float 
 22401 ;; Auto vars:     Size  Location     Type
 22402 ;;  u               4  [STACK] struct .
 22403 ;;  e               2  [STACK] int 
 22404 ;; Return value:  Size  Location     Type
 22405 ;;                  2  [STACK] int 
 22406 ;; Registers used:
 22407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 22408 ;; Tracked objects:
 22409 ;;		On entry : 0/0
 22410 ;;		On exit  : 0/0
 22411 ;;		Unchanged: 0/0
 22412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22417 ;;Total ram usage:        0 bytes
 22418 ;; Hardware stack levels used:    1
 22419 ;; Hardware stack levels required when called:   15
 22420 ;; This function calls:
 22421 ;;		Nothing
 22422 ;; This function is called by:
 22423 ;;		_efgtoa
 22424 ;; This function uses a reentrant model
 22425 ;;
 22426                           
 22427                           	psect	text80
 22428  019382                     __ptext80:
 22429                           	opt callstack 0
 22430  019382                     ___fpclassifyf:
 22431                           	opt callstack 0
 22432                           
 22433                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22434  019382  0E06               	movlw	6
 22435  019384  26E1               	addwf	fsr1l,f,c
 22436  019386  0E00               	movlw	0
 22437  019388  22E2               	addwfc	fsr1h,f,c
 22438                           
 22439                           ;incstack = 0
 22440 ;; hardware stack exceeded
 22441  01938A  0060  F180  F009   	movff	___fpclassifyf@F463,btemp+8
 22442  019390  0060  F184  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 22443  019396  0060  F188  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 22444  01939C  0060  F18C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 22445                           
 22446                           ;stkvar	_u @ sp[(-6)+0]
 22447  0193A2  0EFA               	movlw	-6
 22448  0193A4  0060  F027  FFE3   	movff	btemp+8,plusw1
 22449  0193AA  0EFB               	movlw	-5
 22450  0193AC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22451  0193B2  0EFC               	movlw	-4
 22452  0193B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22453  0193BA  0EFD               	movlw	-3
 22454  0193BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22455                           
 22456                           ;stkvar	_x @ sp[(-6)+-4]
 22457  0193C2  0EF6               	movlw	-10
 22458  0193C4  006F FF8C  F009    	movff	plusw1,btemp+8
 22459  0193CA  0EF7               	movlw	-9
 22460  0193CC  006F FF8C  F00A    	movff	plusw1,btemp+9
 22461  0193D2  0EF8               	movlw	-8
 22462  0193D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 22463  0193DA  0EF9               	movlw	-7
 22464  0193DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22465                           
 22466                           ;stkvar	_u @ sp[(-6)+0]
 22467  0193E2  0EFA               	movlw	-6
 22468  0193E4  0060  F027  FFE3   	movff	btemp+8,plusw1
 22469  0193EA  0EFB               	movlw	-5
 22470  0193EC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22471  0193F2  0EFC               	movlw	-4
 22472  0193F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22473  0193FA  0EFD               	movlw	-3
 22474  0193FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22475                           
 22476                           ;stkvar	_u @ sp[(-6)+0]
 22477  019402  0EFA               	movlw	-6
 22478  019404  006F FF8C  F009    	movff	plusw1,btemp+8
 22479  01940A  0EFB               	movlw	-5
 22480  01940C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22481  019412  0EFC               	movlw	-4
 22482  019414  006F FF8C  F00B    	movff	plusw1,btemp+10
 22483  01941A  0EFD               	movlw	-3
 22484  01941C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22485  019422  0E18               	movlw	24
 22486  019424  D005               	goto	u6480
 22487  019426                     u6485:
 22488  019426  90D8               	bcf	status,0,c
 22489  019428  320C               	rrcf	(btemp+11)^0,f,c
 22490  01942A  320B               	rrcf	(btemp+10)^0,f,c
 22491  01942C  320A               	rrcf	(btemp+9)^0,f,c
 22492  01942E  3209               	rrcf	(btemp+8)^0,f,c
 22493  019430                     u6480:
 22494  019430  2EE8               	decfsz	wreg,f,c
 22495  019432  D7F9               	goto	u6485
 22496  019434  0060  F024  F007   	movff	btemp+8,btemp+6
 22497  01943A  0060  F028  F008   	movff	btemp+9,btemp+7
 22498  019440  0EFF               	movlw	255
 22499  019442  1607               	andwf	(btemp+6)^0,f,c
 22500  019444  0E00               	movlw	0
 22501  019446  1608               	andwf	(btemp+7)^0,f,c
 22502                           
 22503                           ;stkvar	_e @ sp[(-6)+4]
 22504  019448  0EFE               	movlw	-2
 22505  01944A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22506  019450  0EFF               	movlw	-1
 22507  019452  0060  F023  FFE3   	movff	btemp+7,plusw1
 22508                           
 22509                           ;stkvar	_e @ sp[(-6)+4]
 22510  019458  0EFE               	movlw	-2
 22511  01945A  006F FF8C  F001    	movff	plusw1,btemp
 22512  019460  0EFF               	movlw	-1
 22513  019462  50E3               	movf	plusw1,w,c
 22514  019464  1001               	iorwf	btemp^0,w,c
 22515  019466  A4D8               	btfss	status,2,c
 22516  019468  D023               	goto	l8752
 22517                           
 22518                           ;stkvar	_u @ sp[(-6)+0]
 22519  01946A  0EFA               	movlw	-6
 22520  01946C  006F FF8C  F009    	movff	plusw1,btemp+8
 22521  019472  0EFB               	movlw	-5
 22522  019474  006F FF8C  F00A    	movff	plusw1,btemp+9
 22523  01947A  0EFC               	movlw	-4
 22524  01947C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22525  019482  0EFD               	movlw	-3
 22526  019484  006F FF8C  F00C    	movff	plusw1,btemp+11
 22527  01948A  90D8               	bcf	status,0,c
 22528  01948C  3409               	rlcf	(btemp+8)^0,w,c
 22529  01948E  6E05               	movwf	(btemp+4)^0,c
 22530  019490  340A               	rlcf	(btemp+9)^0,w,c
 22531  019492  6E06               	movwf	(btemp+5)^0,c
 22532  019494  340B               	rlcf	(btemp+10)^0,w,c
 22533  019496  6E07               	movwf	(btemp+6)^0,c
 22534  019498  340C               	rlcf	(btemp+11)^0,w,c
 22535  01949A  6E08               	movwf	(btemp+7)^0,c
 22536  01949C  5005               	movf	(btemp+4)^0,w,c
 22537  01949E  1006               	iorwf	(btemp+5)^0,w,c
 22538  0194A0  1007               	iorwf	(btemp+6)^0,w,c
 22539  0194A2  1008               	iorwf	(btemp+7)^0,w,c
 22540  0194A4  A4D8               	btfss	status,2,c
 22541  0194A6  D002               	goto	l8748
 22542  0194A8  0E02               	movlw	2
 22543  0194AA  D02E               	goto	L26
 22544  0194AC                     l8748:
 22545  0194AC  0E03               	movlw	3
 22546  0194AE  D02C               	goto	L26
 22547  0194B0                     l8752:
 22548                           
 22549                           ;stkvar	_e @ sp[(-6)+4]
 22550  0194B0  0EFE               	movlw	-2
 22551  0194B2  28E3               	incf	plusw1,w,c
 22552  0194B4  E128               	bnz	l8758
 22553  0194B6  0EFF               	movlw	-1
 22554  0194B8  50E3               	movf	plusw1,w,c
 22555  0194BA  A4D8               	btfss	status,2,c
 22556  0194BC  D024               	goto	l8758
 22557                           
 22558                           ;stkvar	_u @ sp[(-6)+0]
 22559  0194BE  0EFA               	movlw	-6
 22560  0194C0  006F FF8C  F009    	movff	plusw1,btemp+8
 22561  0194C6  0EFB               	movlw	-5
 22562  0194C8  006F FF8C  F00A    	movff	plusw1,btemp+9
 22563  0194CE  0EFC               	movlw	-4
 22564  0194D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 22565  0194D6  0EFD               	movlw	-3
 22566  0194D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22567  0194DE  0E09               	movlw	9
 22568  0194E0                     u6525:
 22569  0194E0  90D8               	bcf	status,0,c
 22570  0194E2  3609               	rlcf	(btemp+8)^0,f,c
 22571  0194E4  360A               	rlcf	(btemp+9)^0,f,c
 22572  0194E6  360B               	rlcf	(btemp+10)^0,f,c
 22573  0194E8  360C               	rlcf	(btemp+11)^0,f,c
 22574  0194EA  2EE8               	decfsz	wreg,f,c
 22575  0194EC  D7F9               	goto	u6525
 22576  0194EE  5009               	movf	(btemp+8)^0,w,c
 22577  0194F0  100A               	iorwf	(btemp+9)^0,w,c
 22578  0194F2  100B               	iorwf	(btemp+10)^0,w,c
 22579  0194F4  100C               	iorwf	(btemp+11)^0,w,c
 22580  0194F6  A4D8               	btfss	status,2,c
 22581  0194F8  D002               	goto	u6530
 22582  0194FA  0E01               	movlw	1
 22583  0194FC  D001               	goto	u6540
 22584  0194FE                     u6530:
 22585  0194FE  0E00               	movlw	0
 22586  019500                     u6540:
 22587  019500  6E01               	movwf	btemp^0,c
 22588  019502  6A02               	clrf	(btemp+1)^0,c
 22589  019504  D004               	goto	l3340
 22590  019506                     l8758:
 22591  019506  0E04               	movlw	4
 22592  019508                     L26:
 22593  019508  6E01               	movwf	btemp^0,c
 22594  01950A  0E00               	movlw	0
 22595  01950C  6E02               	movwf	(btemp+1)^0,c
 22596  01950E                     l3340:
 22597                           
 22598                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 22599  01950E  0EF6               	movlw	246
 22600  019510  26E1               	addwf	fsr1l,f,c
 22601  019512  0EFF               	movlw	255
 22602  019514  22E2               	addwfc	fsr1h,f,c
 22603  019516  0012               	return		;funcret
 22604  019518                     __end_of___fpclassifyf:
 22605                           	opt callstack 0
 22606                           
 22607 ;; *************** function ___fltol *****************
 22608 ;; Defined at:
 22609 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 22610 ;; Parameters:    Size  Location     Type
 22611 ;;  f1              4  [STACK] int 
 22612 ;; Auto vars:     Size  Location     Type
 22613 ;;  exp1            1  [STACK] unsigned char 
 22614 ;;  sign1           1  [STACK] unsigned char 
 22615 ;; Return value:  Size  Location     Type
 22616 ;;                  4  [STACK] long 
 22617 ;; Registers used:
 22618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 22619 ;; Tracked objects:
 22620 ;;		On entry : 0/0
 22621 ;;		On exit  : 0/0
 22622 ;;		Unchanged: 0/0
 22623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22628 ;;Total ram usage:        0 bytes
 22629 ;; Hardware stack levels used:    1
 22630 ;; Hardware stack levels required when called:   15
 22631 ;; This function calls:
 22632 ;;		Nothing
 22633 ;; This function is called by:
 22634 ;;		_main
 22635 ;;		_convert_dac_raw
 22636 ;;		_calc_bsoc
 22637 ;;		_init_bsoc
 22638 ;;		_efgtoa
 22639 ;; This function uses a reentrant model
 22640 ;;
 22641                           
 22642                           	psect	text81
 22643  019990                     __ptext81:
 22644                           	opt callstack 0
 22645  019990                     ___fltol:
 22646                           	opt callstack 0
 22647                           
 22648                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22649  019990  52E6               	movf	postinc1,f,c
 22650  019992  52E6               	movf	postinc1,f,c
 22651                           
 22652                           ;stkvar	_f1 @ sp[(-2)+-4]
 22653                           
 22654                           ;incstack = 0
 22655 ;; hardware stack exceeded
 22656  019994  0EFA               	movlw	-6
 22657  019996  006F FF8C  F009    	movff	plusw1,btemp+8
 22658  01999C  0EFB               	movlw	-5
 22659  01999E  006F FF8C  F00A    	movff	plusw1,btemp+9
 22660  0199A4  0EFC               	movlw	-4
 22661  0199A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22662  0199AC  0EFD               	movlw	-3
 22663  0199AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22664  0199B4  0E18               	movlw	24
 22665  0199B6  D005               	goto	u7690
 22666  0199B8                     u7695:
 22667  0199B8  90D8               	bcf	status,0,c
 22668  0199BA  320C               	rrcf	(btemp+11)^0,f,c
 22669  0199BC  320B               	rrcf	(btemp+10)^0,f,c
 22670  0199BE  320A               	rrcf	(btemp+9)^0,f,c
 22671  0199C0  3209               	rrcf	(btemp+8)^0,f,c
 22672  0199C2                     u7690:
 22673  0199C2  2EE8               	decfsz	wreg,f,c
 22674  0199C4  D7F9               	goto	u7695
 22675                           
 22676                           ;stkvar	_exp1 @ sp[(-2)+0]
 22677  0199C6  0EFE               	movlw	-2
 22678  0199C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 22679  0199CE  0EFE               	movlw	-2
 22680  0199D0  50E3               	movf	plusw1,w,c
 22681  0199D2  A4D8               	btfss	status,2,c
 22682  0199D4  D006               	goto	l9378
 22683  0199D6                     u7700:
 22684  0199D6  0E00               	movlw	0
 22685  0199D8  6E01               	movwf	btemp^0,c
 22686  0199DA  6A02               	clrf	(btemp+1)^0,c
 22687  0199DC  6A03               	clrf	(btemp+2)^0,c
 22688  0199DE  6A04               	clrf	(btemp+3)^0,c
 22689  0199E0  D08B               	goto	l2956
 22690  0199E2                     l9378:
 22691                           
 22692                           ;stkvar	_f1 @ sp[(-2)+-4]
 22693  0199E2  0EFA               	movlw	-6
 22694  0199E4  006F FF8C  F009    	movff	plusw1,btemp+8
 22695  0199EA  0EFB               	movlw	-5
 22696  0199EC  006F FF8C  F00A    	movff	plusw1,btemp+9
 22697  0199F2  0EFC               	movlw	-4
 22698  0199F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 22699  0199FA  0EFD               	movlw	-3
 22700  0199FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22701  019A02  0E20               	movlw	32
 22702  019A04  D005               	goto	u7710
 22703  019A06                     u7715:
 22704  019A06  90D8               	bcf	status,0,c
 22705  019A08  320C               	rrcf	(btemp+11)^0,f,c
 22706  019A0A  320B               	rrcf	(btemp+10)^0,f,c
 22707  019A0C  320A               	rrcf	(btemp+9)^0,f,c
 22708  019A0E  3209               	rrcf	(btemp+8)^0,f,c
 22709  019A10                     u7710:
 22710  019A10  2EE8               	decfsz	wreg,f,c
 22711  019A12  D7F9               	goto	u7715
 22712                           
 22713                           ;stkvar	_sign1 @ sp[(-2)+1]
 22714  019A14  0EFF               	movlw	-1
 22715  019A16  0060  F027  FFE3   	movff	btemp+8,plusw1
 22716                           
 22717                           ;stkvar	_f1 @ sp[(-2)+-4]
 22718  019A1C  0EFC               	movlw	-4
 22719  019A1E  8EE3               	bsf	plusw1,7,c
 22720                           
 22721                           ;stkvar	_f1 @ sp[(-2)+-4]
 22722  019A20  50E1               	movf	fsr1l,w,c
 22723  019A22  0FFA               	addlw	-6
 22724  019A24  6ED9               	movwf	fsr2l,c
 22725  019A26  50E2               	movf	fsr1h,w,c
 22726  019A28  6EDA               	movwf	fsr2h,c
 22727  019A2A  0EFF               	movlw	255
 22728  019A2C  22DA               	addwfc	fsr2h,f,c
 22729  019A2E  0EFF               	movlw	255
 22730  019A30  16DE               	andwf	postinc2,f,c
 22731  019A32  0EFF               	movlw	255
 22732  019A34  16DE               	andwf	postinc2,f,c
 22733  019A36  0EFF               	movlw	255
 22734  019A38  16DE               	andwf	postinc2,f,c
 22735  019A3A  0E00               	movlw	0
 22736  019A3C  16DE               	andwf	postinc2,f,c
 22737                           
 22738                           ;stkvar	_exp1 @ sp[(-2)+0]
 22739  019A3E  0EFE               	movlw	-2
 22740  019A40  006F FF8C  F001    	movff	plusw1,btemp
 22741  019A46  0E96               	movlw	150
 22742  019A48  5E01               	subwf	btemp^0,f,c
 22743  019A4A  0EFE               	movlw	-2
 22744  019A4C  0060  F007  FFE3   	movff	btemp,plusw1
 22745                           
 22746                           ;stkvar	_exp1 @ sp[(-2)+0]
 22747  019A52  0EFE               	movlw	-2
 22748  019A54  AEE3               	btfss	plusw1,7,c
 22749  019A56  D014               	goto	l9396
 22750                           
 22751                           ;stkvar	_exp1 @ sp[(-2)+0]
 22752  019A58  0EFE               	movlw	-2
 22753  019A5A  50E3               	movf	plusw1,w,c
 22754  019A5C  0A80               	xorlw	128
 22755  019A5E  0F97               	addlw	151
 22756  019A60  A0D8               	btfss	status,0,c
 22757  019A62  D7B9               	goto	u7700
 22758  019A64                     l9394:
 22759                           
 22760                           ;stkvar	_f1 @ sp[(-2)+-4]
 22761  019A64  90D8               	bcf	status,0,c
 22762  019A66  0EFD               	movlw	-3
 22763  019A68  32E3               	rrcf	plusw1,f,c
 22764  019A6A  0EFC               	movlw	-4
 22765  019A6C  32E3               	rrcf	plusw1,f,c
 22766  019A6E  0EFB               	movlw	-5
 22767  019A70  32E3               	rrcf	plusw1,f,c
 22768  019A72  0EFA               	movlw	-6
 22769  019A74  32E3               	rrcf	plusw1,f,c
 22770                           
 22771                           ;stkvar	_exp1 @ sp[(-2)+0]
 22772  019A76  0EFE               	movlw	-2
 22773  019A78  2AE3               	incf	plusw1,f,c
 22774  019A7A  B4D8               	btfsc	status,2,c
 22775  019A7C  D018               	goto	u7760
 22776  019A7E  D7F2               	goto	l9394
 22777  019A80                     l9396:
 22778                           
 22779                           ;stkvar	_exp1 @ sp[(-2)+0]
 22780  019A80  0EFE               	movlw	-2
 22781  019A82  006F FF8C  F001    	movff	plusw1,btemp
 22782  019A88  0E1F               	movlw	31
 22783  019A8A  6401               	cpfsgt	btemp^0,c
 22784  019A8C  D00C               	goto	l9404
 22785  019A8E  D7A3               	goto	u7700
 22786  019A90                     l9402:
 22787                           
 22788                           ;stkvar	_f1 @ sp[(-2)+-4]
 22789  019A90  90D8               	bcf	status,0,c
 22790  019A92  0EFA               	movlw	-6
 22791  019A94  36E3               	rlcf	plusw1,f,c
 22792  019A96  0EFB               	movlw	-5
 22793  019A98  36E3               	rlcf	plusw1,f,c
 22794  019A9A  0EFC               	movlw	-4
 22795  019A9C  36E3               	rlcf	plusw1,f,c
 22796  019A9E  0EFD               	movlw	-3
 22797  019AA0  36E3               	rlcf	plusw1,f,c
 22798                           
 22799                           ;stkvar	_exp1 @ sp[(-2)+0]
 22800  019AA2  0EFE               	movlw	-2
 22801  019AA4  06E3               	decf	plusw1,f,c
 22802  019AA6                     l9404:
 22803                           
 22804                           ;stkvar	_exp1 @ sp[(-2)+0]
 22805  019AA6  0EFE               	movlw	-2
 22806  019AA8  50E3               	movf	plusw1,w,c
 22807  019AAA  A4D8               	btfss	status,2,c
 22808  019AAC  D7F1               	goto	l9402
 22809  019AAE                     u7760:
 22810                           
 22811                           ;stkvar	_sign1 @ sp[(-2)+1]
 22812  019AAE  0EFF               	movlw	-1
 22813  019AB0  50E3               	movf	plusw1,w,c
 22814  019AB2  B4D8               	btfsc	status,2,c
 22815  019AB4  D011               	goto	u7780
 22816                           
 22817                           ;stkvar	_f1 @ sp[(-2)+-4]
 22818                           ;stkvar	_f1 @ sp[(-2)+-4]
 22819  019AB6  0EFA               	movlw	-6
 22820  019AB8  6CE3               	negf	plusw1,c
 22821  019ABA  0EFB               	movlw	-5
 22822  019ABC  1EE3               	comf	plusw1,f,c
 22823  019ABE  0EFC               	movlw	-4
 22824  019AC0  1EE3               	comf	plusw1,f,c
 22825  019AC2  0EFD               	movlw	-3
 22826  019AC4  1EE3               	comf	plusw1,f,c
 22827  019AC6  E308               	bnc	u7780
 22828  019AC8  0EFB               	movlw	-5
 22829  019ACA  2AE3               	incf	plusw1,f,c
 22830  019ACC  E305               	bnc	u7780
 22831  019ACE  0EFC               	movlw	-4
 22832  019AD0  2AE3               	incf	plusw1,f,c
 22833  019AD2  E302               	bnc	u7780
 22834  019AD4  0EFD               	movlw	-3
 22835  019AD6  2AE3               	incf	plusw1,f,c
 22836  019AD8                     u7780:
 22837                           
 22838                           ;stkvar	_f1 @ sp[(-2)+-4]
 22839  019AD8  0EFA               	movlw	-6
 22840  019ADA  006F FF8C  F001    	movff	plusw1,btemp
 22841  019AE0  0EFB               	movlw	-5
 22842  019AE2  006F FF8C  F002    	movff	plusw1,btemp+1
 22843  019AE8  0EFC               	movlw	-4
 22844  019AEA  006F FF8C  F003    	movff	plusw1,btemp+2
 22845  019AF0  0EFD               	movlw	-3
 22846  019AF2  006F FF8C  F004    	movff	plusw1,btemp+3
 22847  019AF8                     l2956:
 22848                           
 22849                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22850  019AF8  0EFA               	movlw	250
 22851  019AFA  26E1               	addwf	fsr1l,f,c
 22852  019AFC  0EFF               	movlw	255
 22853  019AFE  22E2               	addwfc	fsr1h,f,c
 22854  019B00  0012               	return		;funcret
 22855  019B02                     __end_of___fltol:
 22856                           	opt callstack 0
 22857                           
 22858 ;; *************** function ___flneg *****************
 22859 ;; Defined at:
 22860 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 22861 ;; Parameters:    Size  Location     Type
 22862 ;;  f1              4  [STACK] long 
 22863 ;; Auto vars:     Size  Location     Type
 22864 ;;		None
 22865 ;; Return value:  Size  Location     Type
 22866 ;;                  4  [STACK] long 
 22867 ;; Registers used:
 22868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 22869 ;; Tracked objects:
 22870 ;;		On entry : 0/0
 22871 ;;		On exit  : 0/0
 22872 ;;		Unchanged: 0/0
 22873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22878 ;;Total ram usage:        0 bytes
 22879 ;; Hardware stack levels used:    1
 22880 ;; Hardware stack levels required when called:   15
 22881 ;; This function calls:
 22882 ;;		Nothing
 22883 ;; This function is called by:
 22884 ;;		_calc_bsoc
 22885 ;;		_efgtoa
 22886 ;; This function uses a reentrant model
 22887 ;;
 22888                           
 22889                           	psect	text82
 22890  01C5FA                     __ptext82:
 22891                           	opt callstack 0
 22892  01C5FA                     ___flneg:
 22893                           	opt callstack 0
 22894                           
 22895                           ;stkvar	_f1 @ sp[(0)+-4]
 22896                           
 22897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22898                           ;incstack = 0
 22899 ;; hardware stack exceeded
 22900  01C5FA  0EFC               	movlw	-4
 22901  01C5FC  50E3               	movf	plusw1,w,c
 22902  01C5FE  E10A               	bnz	u7680
 22903  01C600  0EFD               	movlw	-3
 22904  01C602  50E3               	movf	plusw1,w,c
 22905  01C604  E107               	bnz	u7680
 22906  01C606  0EFE               	movlw	-2
 22907  01C608  50E3               	movf	plusw1,w,c
 22908  01C60A  E104               	bnz	u7680
 22909  01C60C  0EFF               	movlw	-1
 22910  01C60E  50E3               	movf	plusw1,w,c
 22911  01C610  B4D8               	btfsc	status,2,c
 22912  01C612  D002               	goto	l9368
 22913  01C614                     u7680:
 22914                           
 22915                           ;stkvar	_f1 @ sp[(0)+-4]
 22916  01C614  0EFF               	movlw	-1
 22917  01C616  7EE3               	btg	plusw1,7,c
 22918  01C618                     l9368:
 22919                           
 22920                           ;stkvar	_f1 @ sp[(0)+-4]
 22921  01C618  0EFC               	movlw	-4
 22922  01C61A  006F FF8C  F001    	movff	plusw1,btemp
 22923  01C620  0EFD               	movlw	-3
 22924  01C622  006F FF8C  F002    	movff	plusw1,btemp+1
 22925  01C628  0EFE               	movlw	-2
 22926  01C62A  006F FF8C  F003    	movff	plusw1,btemp+2
 22927  01C630  0EFF               	movlw	-1
 22928  01C632  006F FF8C  F004    	movff	plusw1,btemp+3
 22929                           
 22930                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22931  01C638  52E5               	movf	postdec1,f,c
 22932  01C63A  52E5               	movf	postdec1,f,c
 22933  01C63C  52E5               	movf	postdec1,f,c
 22934  01C63E  52E5               	movf	postdec1,f,c
 22935  01C640  0012               	return		;funcret
 22936  01C642                     __end_of___flneg:
 22937                           	opt callstack 0
 22938                           
 22939 ;; *************** function ___fleq *****************
 22940 ;; Defined at:
 22941 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 22942 ;; Parameters:    Size  Location     Type
 22943 ;;  ff1             4  [STACK] long 
 22944 ;;  ff2             4  [STACK] long 
 22945 ;; Auto vars:     Size  Location     Type
 22946 ;;		None
 22947 ;; Return value:  Size  Location     Type
 22948 ;;		None               void
 22949 ;; Registers used:
 22950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22951 ;; Tracked objects:
 22952 ;;		On entry : 0/0
 22953 ;;		On exit  : 0/0
 22954 ;;		Unchanged: 0/0
 22955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22960 ;;Total ram usage:        0 bytes
 22961 ;; Hardware stack levels used:    1
 22962 ;; Hardware stack levels required when called:   15
 22963 ;; This function calls:
 22964 ;;		Nothing
 22965 ;; This function is called by:
 22966 ;;		_efgtoa
 22967 ;; This function uses a reentrant model
 22968 ;;
 22969                           
 22970                           	psect	text83
 22971  01B1B8                     __ptext83:
 22972                           	opt callstack 0
 22973  01B1B8                     ___fleq:
 22974                           	opt callstack 0
 22975                           
 22976                           ;stkvar	_ff1 @ sp[(0)+-4]
 22977                           
 22978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22979                           ;incstack = 0
 22980 ;; hardware stack exceeded
 22981  01B1B8  50E1               	movf	fsr1l,w,c
 22982  01B1BA  0FFC               	addlw	-4
 22983  01B1BC  6ED9               	movwf	fsr2l,c
 22984  01B1BE  50E2               	movf	fsr1h,w,c
 22985  01B1C0  6EDA               	movwf	fsr2h,c
 22986  01B1C2  0EFF               	movlw	255
 22987  01B1C4  22DA               	addwfc	fsr2h,f,c
 22988  01B1C6  0E00               	movlw	0
 22989  01B1C8  14DE               	andwf	postinc2,w,c
 22990  01B1CA  6E09               	movwf	(btemp+8)^0,c
 22991  01B1CC  0E00               	movlw	0
 22992  01B1CE  14DE               	andwf	postinc2,w,c
 22993  01B1D0  6E0A               	movwf	(btemp+9)^0,c
 22994  01B1D2  0E80               	movlw	128
 22995  01B1D4  14DE               	andwf	postinc2,w,c
 22996  01B1D6  6E0B               	movwf	(btemp+10)^0,c
 22997  01B1D8  0E7F               	movlw	127
 22998  01B1DA  14DE               	andwf	postinc2,w,c
 22999  01B1DC  6E0C               	movwf	(btemp+11)^0,c
 23000  01B1DE  5009               	movf	(btemp+8)^0,w,c
 23001  01B1E0  100A               	iorwf	(btemp+9)^0,w,c
 23002  01B1E2  100B               	iorwf	(btemp+10)^0,w,c
 23003  01B1E4  100C               	iorwf	(btemp+11)^0,w,c
 23004  01B1E6  A4D8               	btfss	status,2,c
 23005  01B1E8  D008               	goto	l9326
 23006                           
 23007                           ;stkvar	_ff1 @ sp[(0)+-4]
 23008  01B1EA  0EFC               	movlw	-4
 23009  01B1EC  6AE3               	clrf	plusw1,c
 23010  01B1EE  0EFD               	movlw	-3
 23011  01B1F0  6AE3               	clrf	plusw1,c
 23012  01B1F2  0EFE               	movlw	-2
 23013  01B1F4  6AE3               	clrf	plusw1,c
 23014  01B1F6  0EFF               	movlw	-1
 23015  01B1F8  6AE3               	clrf	plusw1,c
 23016  01B1FA                     l9326:
 23017                           
 23018                           ;stkvar	_ff2 @ sp[(0)+-8]
 23019  01B1FA  50E1               	movf	fsr1l,w,c
 23020  01B1FC  0FF8               	addlw	-8
 23021  01B1FE  6ED9               	movwf	fsr2l,c
 23022  01B200  50E2               	movf	fsr1h,w,c
 23023  01B202  6EDA               	movwf	fsr2h,c
 23024  01B204  0EFF               	movlw	255
 23025  01B206  22DA               	addwfc	fsr2h,f,c
 23026  01B208  0E00               	movlw	0
 23027  01B20A  14DE               	andwf	postinc2,w,c
 23028  01B20C  6E09               	movwf	(btemp+8)^0,c
 23029  01B20E  0E00               	movlw	0
 23030  01B210  14DE               	andwf	postinc2,w,c
 23031  01B212  6E0A               	movwf	(btemp+9)^0,c
 23032  01B214  0E80               	movlw	128
 23033  01B216  14DE               	andwf	postinc2,w,c
 23034  01B218  6E0B               	movwf	(btemp+10)^0,c
 23035  01B21A  0E7F               	movlw	127
 23036  01B21C  14DE               	andwf	postinc2,w,c
 23037  01B21E  6E0C               	movwf	(btemp+11)^0,c
 23038  01B220  5009               	movf	(btemp+8)^0,w,c
 23039  01B222  100A               	iorwf	(btemp+9)^0,w,c
 23040  01B224  100B               	iorwf	(btemp+10)^0,w,c
 23041  01B226  100C               	iorwf	(btemp+11)^0,w,c
 23042  01B228  A4D8               	btfss	status,2,c
 23043  01B22A  D008               	goto	l9330
 23044                           
 23045                           ;stkvar	_ff2 @ sp[(0)+-8]
 23046  01B22C  0EF8               	movlw	-8
 23047  01B22E  6AE3               	clrf	plusw1,c
 23048  01B230  0EF9               	movlw	-7
 23049  01B232  6AE3               	clrf	plusw1,c
 23050  01B234  0EFA               	movlw	-6
 23051  01B236  6AE3               	clrf	plusw1,c
 23052  01B238  0EFB               	movlw	-5
 23053  01B23A  6AE3               	clrf	plusw1,c
 23054  01B23C                     l9330:
 23055                           
 23056                           ;stkvar	_ff2 @ sp[(0)+-8]
 23057                           ;stkvar	_ff1 @ sp[(0)+-4]
 23058  01B23C  50E1               	movf	fsr1l,w,c
 23059  01B23E  0FFC               	addlw	-4
 23060  01B240  6ED9               	movwf	fsr2l,c
 23061  01B242  50E2               	movf	fsr1h,w,c
 23062  01B244  6EDA               	movwf	fsr2h,c
 23063  01B246  0EFF               	movlw	255
 23064  01B248  22DA               	addwfc	fsr2h,f,c
 23065  01B24A  0EF8               	movlw	-8
 23066  01B24C  50E3               	movf	plusw1,w,c
 23067  01B24E  18DE               	xorwf	postinc2,w,c
 23068  01B250  E10D               	bnz	u7620
 23069  01B252  0EF9               	movlw	-7
 23070  01B254  50E3               	movf	plusw1,w,c
 23071  01B256  18DE               	xorwf	postinc2,w,c
 23072  01B258  E109               	bnz	u7620
 23073  01B25A  0EFA               	movlw	-6
 23074  01B25C  50E3               	movf	plusw1,w,c
 23075  01B25E  18DE               	xorwf	postinc2,w,c
 23076  01B260  E105               	bnz	u7620
 23077  01B262  0EFB               	movlw	-5
 23078  01B264  50E3               	movf	plusw1,w,c
 23079  01B266  18DE               	xorwf	postinc2,w,c
 23080  01B268  B4D8               	btfsc	status,2,c
 23081  01B26A  D002               	goto	l9334
 23082  01B26C                     u7620:
 23083  01B26C  9001               	bcf	btemp& (0+255),0,c
 23084  01B26E  D001               	goto	l2918
 23085  01B270                     l9334:
 23086  01B270  8001               	bsf	btemp& (0+255),0,c
 23087  01B272                     l2918:
 23088                           
 23089                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 23090  01B272  0EF8               	movlw	248
 23091  01B274  26E1               	addwf	fsr1l,f,c
 23092  01B276  0EFF               	movlw	255
 23093  01B278  22E2               	addwfc	fsr1h,f,c
 23094  01B27A  0012               	return		;funcret
 23095  01B27C                     __end_of___fleq:
 23096                           	opt callstack 0
 23097                           
 23098 ;; *************** function ___awmod *****************
 23099 ;; Defined at:
 23100 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 23101 ;; Parameters:    Size  Location     Type
 23102 ;;  dividend        2  [STACK] int 
 23103 ;;  divisor         2  [STACK] int 
 23104 ;; Auto vars:     Size  Location     Type
 23105 ;;  sign            1  [STACK] unsigned char 
 23106 ;;  counter         1  [STACK] unsigned char 
 23107 ;; Return value:  Size  Location     Type
 23108 ;;                  2  [STACK] int 
 23109 ;; Registers used:
 23110 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 23111 ;; Tracked objects:
 23112 ;;		On entry : 0/0
 23113 ;;		On exit  : 0/0
 23114 ;;		Unchanged: 0/0
 23115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23120 ;;Total ram usage:        0 bytes
 23121 ;; Hardware stack levels used:    1
 23122 ;; Hardware stack levels required when called:   15
 23123 ;; This function calls:
 23124 ;;		Nothing
 23125 ;; This function is called by:
 23126 ;;		_efgtoa
 23127 ;; This function uses a reentrant model
 23128 ;;
 23129                           
 23130                           	psect	text84
 23131  01A750                     __ptext84:
 23132                           	opt callstack 0
 23133  01A750                     ___awmod:
 23134                           	opt callstack 0
 23135                           
 23136                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23137  01A750  52E6               	movf	postinc1,f,c
 23138  01A752  52E6               	movf	postinc1,f,c
 23139                           
 23140                           ;stkvar	_sign @ sp[(-2)+0]
 23141                           
 23142                           ;incstack = 0
 23143 ;; hardware stack exceeded
 23144  01A754  0EFE               	movlw	-2
 23145  01A756  6AE3               	clrf	plusw1,c
 23146                           
 23147                           ;stkvar	_dividend @ sp[(-2)+-2]
 23148  01A758  0EFD               	movlw	-3
 23149  01A75A  AEE3               	btfss	plusw1,7,c
 23150  01A75C  D009               	goto	l9292
 23151                           
 23152                           ;stkvar	_dividend @ sp[(-2)+-2]
 23153                           ;stkvar	_dividend @ sp[(-2)+-2]
 23154  01A75E  0EFC               	movlw	-4
 23155  01A760  6CE3               	negf	plusw1,c
 23156  01A762  0EFD               	movlw	-3
 23157  01A764  1EE3               	comf	plusw1,f,c
 23158  01A766  B0D8               	btfsc	status,0,c
 23159  01A768  2AE3               	incf	plusw1,f,c
 23160                           
 23161                           ;stkvar	_sign @ sp[(-2)+0]
 23162  01A76A  0EFE               	movlw	-2
 23163  01A76C  6AE3               	clrf	plusw1,c
 23164  01A76E  2AE3               	incf	plusw1,f,c
 23165  01A770                     l9292:
 23166                           
 23167                           ;stkvar	_divisor @ sp[(-2)+-4]
 23168  01A770  0EFB               	movlw	-5
 23169  01A772  AEE3               	btfss	plusw1,7,c
 23170  01A774  D006               	goto	l9296
 23171                           
 23172                           ;stkvar	_divisor @ sp[(-2)+-4]
 23173                           ;stkvar	_divisor @ sp[(-2)+-4]
 23174  01A776  0EFA               	movlw	-6
 23175  01A778  6CE3               	negf	plusw1,c
 23176  01A77A  0EFB               	movlw	-5
 23177  01A77C  1EE3               	comf	plusw1,f,c
 23178  01A77E  B0D8               	btfsc	status,0,c
 23179  01A780  2AE3               	incf	plusw1,f,c
 23180  01A782                     l9296:
 23181                           
 23182                           ;stkvar	_divisor @ sp[(-2)+-4]
 23183  01A782  0EFA               	movlw	-6
 23184  01A784  006F FF8C  F001    	movff	plusw1,btemp
 23185  01A78A  0EFB               	movlw	-5
 23186  01A78C  50E3               	movf	plusw1,w,c
 23187  01A78E  1001               	iorwf	btemp^0,w,c
 23188  01A790  B4D8               	btfsc	status,2,c
 23189  01A792  D053               	goto	u7580
 23190                           
 23191                           ;stkvar	_counter @ sp[(-2)+1]
 23192  01A794  0EFF               	movlw	-1
 23193  01A796  6AE3               	clrf	plusw1,c
 23194  01A798  D012               	goto	L27
 23195  01A79A                     l9300:
 23196                           
 23197                           ;stkvar	_divisor @ sp[(-2)+-4]
 23198  01A79A  0EFA               	movlw	-6
 23199  01A79C  50E3               	movf	plusw1,w,c
 23200  01A79E  90D8               	bcf	status,0,c
 23201  01A7A0  34E8               	rlcf	wreg,w,c
 23202  01A7A2  6E01               	movwf	btemp^0,c
 23203  01A7A4  0EFA               	movlw	-6
 23204  01A7A6  0060  F007  FFE3   	movff	btemp,plusw1
 23205  01A7AC  0EFB               	movlw	-5
 23206  01A7AE  50E3               	movf	plusw1,w,c
 23207  01A7B0  34E8               	rlcf	wreg,w,c
 23208  01A7B2  6E01               	movwf	btemp^0,c
 23209  01A7B4  0EFB               	movlw	-5
 23210  01A7B6  0060  F007  FFE3   	movff	btemp,plusw1
 23211                           
 23212                           ;stkvar	_counter @ sp[(-2)+1]
 23213  01A7BC  0EFF               	movlw	-1
 23214  01A7BE                     L27:
 23215  01A7BE  2AE3               	incf	plusw1,f,c
 23216                           
 23217                           ;stkvar	_divisor @ sp[(-2)+-4]
 23218  01A7C0  0EFB               	movlw	-5
 23219  01A7C2  AEE3               	btfss	plusw1,7,c
 23220  01A7C4  D7EA               	goto	l9300
 23221  01A7C6                     u7560:
 23222                           
 23223                           ;stkvar	_divisor @ sp[(-2)+-4]
 23224  01A7C6  0EFA               	movlw	-6
 23225  01A7C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23226  01A7CE  0EFB               	movlw	-5
 23227  01A7D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23228                           
 23229                           ;stkvar	_dividend @ sp[(-2)+-2]
 23230  01A7D6  0EFC               	movlw	-4
 23231  01A7D8  006F FF8C  F009    	movff	plusw1,btemp+8
 23232  01A7DE  0EFD               	movlw	-3
 23233  01A7E0  006F FF8C  F00A    	movff	plusw1,btemp+9
 23234  01A7E6  500B               	movf	(btemp+10)^0,w,c
 23235  01A7E8  5C09               	subwf	(btemp+8)^0,w,c
 23236  01A7EA  500C               	movf	(btemp+11)^0,w,c
 23237  01A7EC  580A               	subwfb	(btemp+9)^0,w,c
 23238  01A7EE  A0D8               	btfss	status,0,c
 23239  01A7F0  D014               	goto	l9310
 23240                           
 23241                           ;stkvar	_divisor @ sp[(-2)+-4]
 23242                           ;stkvar	_dividend @ sp[(-2)+-2]
 23243  01A7F2  0EFC               	movlw	-4
 23244  01A7F4  50E3               	movf	plusw1,w,c
 23245  01A7F6  6E01               	movwf	btemp^0,c
 23246  01A7F8  0EFA               	movlw	-6
 23247  01A7FA  50E3               	movf	plusw1,w,c
 23248  01A7FC  5E01               	subwf	btemp^0,f,c
 23249  01A7FE  0EFC               	movlw	-4
 23250  01A800  0060  F007  FFE3   	movff	btemp,plusw1
 23251  01A806  0EFD               	movlw	-3
 23252  01A808  50E3               	movf	plusw1,w,c
 23253  01A80A  6E01               	movwf	btemp^0,c
 23254  01A80C  0EFB               	movlw	-5
 23255  01A80E  50E3               	movf	plusw1,w,c
 23256  01A810  5A01               	subwfb	btemp^0,f,c
 23257  01A812  0EFD               	movlw	-3
 23258  01A814  0060  F007  FFE3   	movff	btemp,plusw1
 23259  01A81A                     l9310:
 23260                           
 23261                           ;stkvar	_divisor @ sp[(-2)+-4]
 23262  01A81A  90D8               	bcf	status,0,c
 23263  01A81C  0EFB               	movlw	-5
 23264  01A81E  32E3               	rrcf	plusw1,f,c
 23265  01A820  0EFA               	movlw	-6
 23266  01A822  32E3               	rrcf	plusw1,f,c
 23267                           
 23268                           ;stkvar	_counter @ sp[(-2)+1]
 23269  01A824  0EFF               	movlw	-1
 23270  01A826  50E3               	movf	plusw1,w,c
 23271  01A828  6E01               	movwf	btemp^0,c
 23272  01A82A  0E01               	movlw	1
 23273  01A82C  5E01               	subwf	btemp^0,f,c
 23274  01A82E  0EFF               	movlw	-1
 23275  01A830  0060  F007  FFE3   	movff	btemp,plusw1
 23276  01A836  A4D8               	btfss	status,2,c
 23277  01A838  D7C6               	goto	u7560
 23278  01A83A                     u7580:
 23279                           
 23280                           ;stkvar	_sign @ sp[(-2)+0]
 23281  01A83A  0EFE               	movlw	-2
 23282  01A83C  50E3               	movf	plusw1,w,c
 23283  01A83E  B4D8               	btfsc	status,2,c
 23284  01A840  D006               	goto	l9318
 23285                           
 23286                           ;stkvar	_dividend @ sp[(-2)+-2]
 23287                           ;stkvar	_dividend @ sp[(-2)+-2]
 23288  01A842  0EFC               	movlw	-4
 23289  01A844  6CE3               	negf	plusw1,c
 23290  01A846  0EFD               	movlw	-3
 23291  01A848  1EE3               	comf	plusw1,f,c
 23292  01A84A  B0D8               	btfsc	status,0,c
 23293  01A84C  2AE3               	incf	plusw1,f,c
 23294  01A84E                     l9318:
 23295                           
 23296                           ;stkvar	_dividend @ sp[(-2)+-2]
 23297  01A84E  0EFC               	movlw	-4
 23298  01A850  006F FF8C  F001    	movff	plusw1,btemp
 23299  01A856  0EFD               	movlw	-3
 23300  01A858  006F FF8C  F002    	movff	plusw1,btemp+1
 23301                           
 23302                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23303  01A85E  0EFA               	movlw	250
 23304  01A860  26E1               	addwf	fsr1l,f,c
 23305  01A862  0EFF               	movlw	255
 23306  01A864  22E2               	addwfc	fsr1h,f,c
 23307  01A866  0012               	return		;funcret
 23308  01A868                     __end_of___awmod:
 23309                           	opt callstack 0
 23310                           
 23311 ;; *************** function ___awdiv *****************
 23312 ;; Defined at:
 23313 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 23314 ;; Parameters:    Size  Location     Type
 23315 ;;  dividend        2  [STACK] int 
 23316 ;;  divisor         2  [STACK] int 
 23317 ;; Auto vars:     Size  Location     Type
 23318 ;;  quotient        2  [STACK] int 
 23319 ;;  sign            1  [STACK] unsigned char 
 23320 ;;  counter         1  [STACK] unsigned char 
 23321 ;; Return value:  Size  Location     Type
 23322 ;;                  2  [STACK] int 
 23323 ;; Registers used:
 23324 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 23325 ;; Tracked objects:
 23326 ;;		On entry : 0/0
 23327 ;;		On exit  : 0/0
 23328 ;;		Unchanged: 0/0
 23329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23334 ;;Total ram usage:        0 bytes
 23335 ;; Hardware stack levels used:    1
 23336 ;; Hardware stack levels required when called:   15
 23337 ;; This function calls:
 23338 ;;		Nothing
 23339 ;; This function is called by:
 23340 ;;		_efgtoa
 23341 ;; This function uses a reentrant model
 23342 ;;
 23343                           
 23344                           	psect	text85
 23345  019DC6                     __ptext85:
 23346                           	opt callstack 0
 23347  019DC6                     ___awdiv:
 23348                           	opt callstack 0
 23349                           
 23350                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23351  019DC6  52E6               	movf	postinc1,f,c
 23352  019DC8  52E6               	movf	postinc1,f,c
 23353  019DCA  52E6               	movf	postinc1,f,c
 23354  019DCC  52E6               	movf	postinc1,f,c
 23355                           
 23356                           ;stkvar	_sign @ sp[(-4)+2]
 23357                           
 23358                           ;incstack = 0
 23359 ;; hardware stack exceeded
 23360  019DCE  0EFE               	movlw	-2
 23361  019DD0  6AE3               	clrf	plusw1,c
 23362                           
 23363                           ;stkvar	_divisor @ sp[(-4)+-4]
 23364  019DD2  0EF9               	movlw	-7
 23365  019DD4  AEE3               	btfss	plusw1,7,c
 23366  019DD6  D009               	goto	l9246
 23367                           
 23368                           ;stkvar	_divisor @ sp[(-4)+-4]
 23369                           ;stkvar	_divisor @ sp[(-4)+-4]
 23370  019DD8  0EF8               	movlw	-8
 23371  019DDA  6CE3               	negf	plusw1,c
 23372  019DDC  0EF9               	movlw	-7
 23373  019DDE  1EE3               	comf	plusw1,f,c
 23374  019DE0  B0D8               	btfsc	status,0,c
 23375  019DE2  2AE3               	incf	plusw1,f,c
 23376                           
 23377                           ;stkvar	_sign @ sp[(-4)+2]
 23378  019DE4  0EFE               	movlw	-2
 23379  019DE6  6AE3               	clrf	plusw1,c
 23380  019DE8  2AE3               	incf	plusw1,f,c
 23381  019DEA                     l9246:
 23382                           
 23383                           ;stkvar	_dividend @ sp[(-4)+-2]
 23384  019DEA  0EFB               	movlw	-5
 23385  019DEC  AEE3               	btfss	plusw1,7,c
 23386  019DEE  D008               	goto	l9252
 23387                           
 23388                           ;stkvar	_dividend @ sp[(-4)+-2]
 23389                           ;stkvar	_dividend @ sp[(-4)+-2]
 23390  019DF0  0EFA               	movlw	-6
 23391  019DF2  6CE3               	negf	plusw1,c
 23392  019DF4  0EFB               	movlw	-5
 23393  019DF6  1EE3               	comf	plusw1,f,c
 23394  019DF8  B0D8               	btfsc	status,0,c
 23395  019DFA  2AE3               	incf	plusw1,f,c
 23396                           
 23397                           ;stkvar	_sign @ sp[(-4)+2]
 23398  019DFC  0EFE               	movlw	-2
 23399  019DFE  70E3               	btg	plusw1,0,c
 23400  019E00                     l9252:
 23401                           
 23402                           ;stkvar	_quotient @ sp[(-4)+0]
 23403  019E00  0EFC               	movlw	-4
 23404  019E02  6AE3               	clrf	plusw1,c
 23405  019E04  0EFD               	movlw	-3
 23406  019E06  6AE3               	clrf	plusw1,c
 23407                           
 23408                           ;stkvar	_divisor @ sp[(-4)+-4]
 23409  019E08  0EF8               	movlw	-8
 23410  019E0A  006F FF8C  F001    	movff	plusw1,btemp
 23411  019E10  0EF9               	movlw	-7
 23412  019E12  50E3               	movf	plusw1,w,c
 23413  019E14  1001               	iorwf	btemp^0,w,c
 23414  019E16  B4D8               	btfsc	status,2,c
 23415  019E18  D066               	goto	u7510
 23416                           
 23417                           ;stkvar	_counter @ sp[(-4)+3]
 23418  019E1A  0EFF               	movlw	-1
 23419  019E1C  6AE3               	clrf	plusw1,c
 23420  019E1E  D012               	goto	L28
 23421  019E20                     l9258:
 23422                           
 23423                           ;stkvar	_divisor @ sp[(-4)+-4]
 23424  019E20  0EF8               	movlw	-8
 23425  019E22  50E3               	movf	plusw1,w,c
 23426  019E24  90D8               	bcf	status,0,c
 23427  019E26  34E8               	rlcf	wreg,w,c
 23428  019E28  6E01               	movwf	btemp^0,c
 23429  019E2A  0EF8               	movlw	-8
 23430  019E2C  0060  F007  FFE3   	movff	btemp,plusw1
 23431  019E32  0EF9               	movlw	-7
 23432  019E34  50E3               	movf	plusw1,w,c
 23433  019E36  34E8               	rlcf	wreg,w,c
 23434  019E38  6E01               	movwf	btemp^0,c
 23435  019E3A  0EF9               	movlw	-7
 23436  019E3C  0060  F007  FFE3   	movff	btemp,plusw1
 23437                           
 23438                           ;stkvar	_counter @ sp[(-4)+3]
 23439  019E42  0EFF               	movlw	-1
 23440  019E44                     L28:
 23441  019E44  2AE3               	incf	plusw1,f,c
 23442                           
 23443                           ;stkvar	_divisor @ sp[(-4)+-4]
 23444  019E46  0EF9               	movlw	-7
 23445  019E48  AEE3               	btfss	plusw1,7,c
 23446  019E4A  D7EA               	goto	l9258
 23447  019E4C                     u7490:
 23448                           
 23449                           ;stkvar	_quotient @ sp[(-4)+0]
 23450  019E4C  0EFC               	movlw	-4
 23451  019E4E  50E3               	movf	plusw1,w,c
 23452  019E50  90D8               	bcf	status,0,c
 23453  019E52  34E8               	rlcf	wreg,w,c
 23454  019E54  6E01               	movwf	btemp^0,c
 23455  019E56  0EFC               	movlw	-4
 23456  019E58  0060  F007  FFE3   	movff	btemp,plusw1
 23457  019E5E  0EFD               	movlw	-3
 23458  019E60  50E3               	movf	plusw1,w,c
 23459  019E62  34E8               	rlcf	wreg,w,c
 23460  019E64  6E01               	movwf	btemp^0,c
 23461  019E66  0EFD               	movlw	-3
 23462  019E68  0060  F007  FFE3   	movff	btemp,plusw1
 23463                           
 23464                           ;stkvar	_divisor @ sp[(-4)+-4]
 23465  019E6E  0EF8               	movlw	-8
 23466  019E70  006F FF8C  F00B    	movff	plusw1,btemp+10
 23467  019E76  0EF9               	movlw	-7
 23468  019E78  006F FF8C  F00C    	movff	plusw1,btemp+11
 23469                           
 23470                           ;stkvar	_dividend @ sp[(-4)+-2]
 23471  019E7E  0EFA               	movlw	-6
 23472  019E80  006F FF8C  F009    	movff	plusw1,btemp+8
 23473  019E86  0EFB               	movlw	-5
 23474  019E88  006F FF8C  F00A    	movff	plusw1,btemp+9
 23475  019E8E  500B               	movf	(btemp+10)^0,w,c
 23476  019E90  5C09               	subwf	(btemp+8)^0,w,c
 23477  019E92  500C               	movf	(btemp+11)^0,w,c
 23478  019E94  580A               	subwfb	(btemp+9)^0,w,c
 23479  019E96  A0D8               	btfss	status,0,c
 23480  019E98  D016               	goto	l9272
 23481                           
 23482                           ;stkvar	_divisor @ sp[(-4)+-4]
 23483                           ;stkvar	_dividend @ sp[(-4)+-2]
 23484  019E9A  0EFA               	movlw	-6
 23485  019E9C  50E3               	movf	plusw1,w,c
 23486  019E9E  6E01               	movwf	btemp^0,c
 23487  019EA0  0EF8               	movlw	-8
 23488  019EA2  50E3               	movf	plusw1,w,c
 23489  019EA4  5E01               	subwf	btemp^0,f,c
 23490  019EA6  0EFA               	movlw	-6
 23491  019EA8  0060  F007  FFE3   	movff	btemp,plusw1
 23492  019EAE  0EFB               	movlw	-5
 23493  019EB0  50E3               	movf	plusw1,w,c
 23494  019EB2  6E01               	movwf	btemp^0,c
 23495  019EB4  0EF9               	movlw	-7
 23496  019EB6  50E3               	movf	plusw1,w,c
 23497  019EB8  5A01               	subwfb	btemp^0,f,c
 23498  019EBA  0EFB               	movlw	-5
 23499  019EBC  0060  F007  FFE3   	movff	btemp,plusw1
 23500                           
 23501                           ;stkvar	_quotient @ sp[(-4)+0]
 23502  019EC2  0EFC               	movlw	-4
 23503  019EC4  80E3               	bsf	plusw1,0,c
 23504  019EC6                     l9272:
 23505                           
 23506                           ;stkvar	_divisor @ sp[(-4)+-4]
 23507  019EC6  90D8               	bcf	status,0,c
 23508  019EC8  0EF9               	movlw	-7
 23509  019ECA  32E3               	rrcf	plusw1,f,c
 23510  019ECC  0EF8               	movlw	-8
 23511  019ECE  32E3               	rrcf	plusw1,f,c
 23512                           
 23513                           ;stkvar	_counter @ sp[(-4)+3]
 23514  019ED0  0EFF               	movlw	-1
 23515  019ED2  50E3               	movf	plusw1,w,c
 23516  019ED4  6E01               	movwf	btemp^0,c
 23517  019ED6  0E01               	movlw	1
 23518  019ED8  5E01               	subwf	btemp^0,f,c
 23519  019EDA  0EFF               	movlw	-1
 23520  019EDC  0060  F007  FFE3   	movff	btemp,plusw1
 23521  019EE2  A4D8               	btfss	status,2,c
 23522  019EE4  D7B3               	goto	u7490
 23523  019EE6                     u7510:
 23524                           
 23525                           ;stkvar	_sign @ sp[(-4)+2]
 23526  019EE6  0EFE               	movlw	-2
 23527  019EE8  50E3               	movf	plusw1,w,c
 23528  019EEA  B4D8               	btfsc	status,2,c
 23529  019EEC  D006               	goto	l9280
 23530                           
 23531                           ;stkvar	_quotient @ sp[(-4)+0]
 23532                           ;stkvar	_quotient @ sp[(-4)+0]
 23533  019EEE  0EFC               	movlw	-4
 23534  019EF0  6CE3               	negf	plusw1,c
 23535  019EF2  0EFD               	movlw	-3
 23536  019EF4  1EE3               	comf	plusw1,f,c
 23537  019EF6  B0D8               	btfsc	status,0,c
 23538  019EF8  2AE3               	incf	plusw1,f,c
 23539  019EFA                     l9280:
 23540                           
 23541                           ;stkvar	_quotient @ sp[(-4)+0]
 23542  019EFA  0EFC               	movlw	-4
 23543  019EFC  006F FF8C  F001    	movff	plusw1,btemp
 23544  019F02  0EFD               	movlw	-3
 23545  019F04  006F FF8C  F002    	movff	plusw1,btemp+1
 23546                           
 23547                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23548  019F0A  0EF8               	movlw	248
 23549  019F0C  26E1               	addwf	fsr1l,f,c
 23550  019F0E  0EFF               	movlw	255
 23551  019F10  22E2               	addwfc	fsr1h,f,c
 23552  019F12  0012               	return		;funcret
 23553  019F14                     __end_of___awdiv:
 23554                           	opt callstack 0
 23555                           
 23556 ;; *************** function _dtoa *****************
 23557 ;; Defined at:
 23558 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23559 ;; Parameters:    Size  Location     Type
 23560 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23561 ;;		 -> f(6), NULL(0), 
 23562 ;;  d               8  [STACK] long long 
 23563 ;; Auto vars:     Size  Location     Type
 23564 ;;  n               8  [STACK] long long 
 23565 ;;  i               2  [STACK] int 
 23566 ;;  s               2  [STACK] int 
 23567 ;;  w               2  [STACK] int 
 23568 ;;  p               2  [STACK] int 
 23569 ;; Return value:  Size  Location     Type
 23570 ;;                  2  [STACK] int 
 23571 ;; Registers used:
 23572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 23573 ;; Tracked objects:
 23574 ;;		On entry : 0/0
 23575 ;;		On exit  : 0/0
 23576 ;;		Unchanged: 0/0
 23577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23582 ;;Total ram usage:        0 bytes
 23583 ;; Hardware stack levels used:    1
 23584 ;; Hardware stack levels required when called:   20
 23585 ;; This function calls:
 23586 ;;		___aodiv
 23587 ;;		___aomod
 23588 ;;		_abs
 23589 ;;		_pad
 23590 ;; This function is called by:
 23591 ;;		_vfpfcnvrt
 23592 ;; This function uses a reentrant model
 23593 ;;
 23594                           
 23595                           	psect	text86
 23596  015DB0                     __ptext86:
 23597                           	opt callstack 0
 23598  015DB0                     _dtoa:
 23599                           	opt callstack 0
 23600                           
 23601                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 23602  015DB0  0E12               	movlw	18
 23603  015DB2  26E1               	addwf	fsr1l,f,c
 23604  015DB4  0E00               	movlw	0
 23605  015DB6  22E2               	addwfc	fsr1h,f,c
 23606                           
 23607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 23608                           ;stkvar	_d @ sp[(-18)+-10]
 23609                           
 23610                           ;incstack = 0
 23611 ;; hardware stack exceeded
 23612  015DB8  0EE4               	movlw	228
 23613  015DBA  24E1               	addwf	fsr1l,w,c
 23614  015DBC  6ED9               	movwf	fsr2l,c
 23615  015DBE  0EFF               	movlw	255
 23616  015DC0  20E2               	addwfc	fsr1h,w,c
 23617  015DC2  6EDA               	movwf	fsr2h,c
 23618                           
 23619                           ;stkvar	_n @ sp[(-18)+2]
 23620  015DC4  0E08               	movlw	8
 23621  015DC6  6E01               	movwf	btemp^0,c
 23622  015DC8  0EF0               	movlw	-16
 23623  015DCA                     us1186999:
 23624  015DCA  006F FF7B FFE3     	movff	postinc2,plusw1
 23625  015DD0  28E8               	incf	wreg,w,c
 23626  015DD2  2E01               	decfsz	btemp^0,f,c
 23627  015DD4  D7FA               	bra	us1186999
 23628                           
 23629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 23630                           ;stkvar	_n @ sp[(-18)+2]
 23631  015DD6  0EF7               	movlw	-9
 23632  015DD8  AEE3               	btfss	plusw1,7,c
 23633  015DDA  D002               	goto	u11870
 23634  015DDC  0E01               	movlw	1
 23635  015DDE  D001               	goto	u11880
 23636  015DE0                     u11870:
 23637  015DE0  0E00               	movlw	0
 23638  015DE2                     u11880:
 23639  015DE2  6E0B               	movwf	(btemp+10)^0,c
 23640  015DE4  6A0C               	clrf	(btemp+11)^0,c
 23641                           
 23642                           ;stkvar	_s @ sp[(-18)+12]
 23643  015DE6  0EFA               	movlw	-6
 23644  015DE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23645  015DEE  0EFB               	movlw	-5
 23646  015DF0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23647                           
 23648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 23649                           ;stkvar	_s @ sp[(-18)+12]
 23650  015DF6  0EFA               	movlw	-6
 23651  015DF8  006F FF8C  F001    	movff	plusw1,btemp
 23652  015DFE  0EFB               	movlw	-5
 23653  015E00  50E3               	movf	plusw1,w,c
 23654  015E02  1001               	iorwf	btemp^0,w,c
 23655  015E04  B4D8               	btfsc	status,2,c
 23656  015E06  D025               	goto	u11900
 23657                           
 23658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 23659                           ;stkvar	_n @ sp[(-18)+2]
 23660                           ;stkvar	_n @ sp[(-18)+2]
 23661  015E08  0EF0               	movlw	-16
 23662  015E0A  6CE3               	negf	plusw1,c
 23663  015E0C  0EF1               	movlw	-15
 23664  015E0E  1EE3               	comf	plusw1,f,c
 23665  015E10  0EF2               	movlw	-14
 23666  015E12  1EE3               	comf	plusw1,f,c
 23667  015E14  0EF3               	movlw	-13
 23668  015E16  1EE3               	comf	plusw1,f,c
 23669  015E18  0EF4               	movlw	-12
 23670  015E1A  1EE3               	comf	plusw1,f,c
 23671  015E1C  0EF5               	movlw	-11
 23672  015E1E  1EE3               	comf	plusw1,f,c
 23673  015E20  0EF6               	movlw	-10
 23674  015E22  1EE3               	comf	plusw1,f,c
 23675  015E24  0EF7               	movlw	-9
 23676  015E26  1EE3               	comf	plusw1,f,c
 23677  015E28  E314               	bnc	u11900
 23678  015E2A  0EF1               	movlw	-15
 23679  015E2C  2AE3               	incf	plusw1,f,c
 23680  015E2E  E311               	bnc	u11900
 23681  015E30  0EF2               	movlw	-14
 23682  015E32  2AE3               	incf	plusw1,f,c
 23683  015E34  E30E               	bnc	u11900
 23684  015E36  0EF3               	movlw	-13
 23685  015E38  2AE3               	incf	plusw1,f,c
 23686  015E3A  E30B               	bnc	u11900
 23687  015E3C  0EF4               	movlw	-12
 23688  015E3E  2AE3               	incf	plusw1,f,c
 23689  015E40  E308               	bnc	u11900
 23690  015E42  0EF5               	movlw	-11
 23691  015E44  2AE3               	incf	plusw1,f,c
 23692  015E46  E305               	bnc	u11900
 23693  015E48  0EF6               	movlw	-10
 23694  015E4A  2AE3               	incf	plusw1,f,c
 23695  015E4C  E302               	bnc	u11900
 23696  015E4E  0EF7               	movlw	-9
 23697  015E50  2AE3               	incf	plusw1,f,c
 23698  015E52                     u11900:
 23699                           
 23700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 23701  015E52  AE3D               	btfss	(_prec+1)^0,7,c
 23702                           
 23703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 23704  015E54  923E               	bcf	_flags^0,1,c
 23705                           
 23706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 23707  015E56  BE3D               	btfsc	(_prec+1)^0,7,c
 23708  015E58  D005               	goto	u11920
 23709  015E5A  503D               	movf	(_prec+1)^0,w,c
 23710  015E5C  E110               	bnz	l13140
 23711  015E5E  043C               	decf	_prec^0,w,c
 23712  015E60  B0D8               	btfsc	status,0,c
 23713  015E62  D00D               	goto	l13140
 23714  015E64                     u11920:
 23715  015E64  0E01               	movlw	1
 23716  015E66  6E0B               	movwf	(btemp+10)^0,c
 23717  015E68  0E00               	movlw	0
 23718  015E6A  6E0C               	movwf	(btemp+11)^0,c
 23719                           
 23720                           ;stkvar	_p @ sp[(-18)+16]
 23721  015E6C  0EFE               	movlw	-2
 23722  015E6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23723  015E74  0EFF               	movlw	-1
 23724  015E76  0060  F033  FFE3   	movff	btemp+11,plusw1
 23725  015E7C  D008               	goto	l2422
 23726  015E7E                     l13140:
 23727                           
 23728                           ;stkvar	_p @ sp[(-18)+16]
 23729  015E7E  0EFE               	movlw	-2
 23730  015E80  0060  F0F3  FFE3   	movff	_prec,plusw1
 23731  015E86  0EFF               	movlw	-1
 23732  015E88  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 23733  015E8E                     l2422:
 23734                           
 23735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 23736                           ;stkvar	_w @ sp[(-18)+14]
 23737  015E8E  0EFC               	movlw	-4
 23738  015E90  0060  F0EB  FFE3   	movff	_width,plusw1
 23739  015E96  0EFD               	movlw	-3
 23740  015E98  0060  F0EF  FFE3   	movff	_width+1,plusw1
 23741                           
 23742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 23743                           ;stkvar	_s @ sp[(-18)+12]
 23744  015E9E  0EFA               	movlw	-6
 23745  015EA0  006F FF8C  F001    	movff	plusw1,btemp
 23746  015EA6  0EFB               	movlw	-5
 23747  015EA8  50E3               	movf	plusw1,w,c
 23748  015EAA  1001               	iorwf	btemp^0,w,c
 23749  015EAC  A4D8               	btfss	status,2,c
 23750  015EAE  D002               	goto	u11940
 23751  015EB0  A43E               	btfss	_flags^0,2,c
 23752  015EB2  D00A               	goto	l13148
 23753  015EB4                     u11940:
 23754                           
 23755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 23756                           ;stkvar	_w @ sp[(-18)+14]
 23757  015EB4  50E1               	movf	fsr1l,w,c
 23758  015EB6  0FFC               	addlw	-4
 23759  015EB8  6ED9               	movwf	fsr2l,c
 23760  015EBA  50E2               	movf	fsr1h,w,c
 23761  015EBC  6EDA               	movwf	fsr2h,c
 23762  015EBE  0EFF               	movlw	255
 23763  015EC0  22DA               	addwfc	fsr2h,f,c
 23764  015EC2  06DE               	decf	postinc2,f,c
 23765  015EC4  0E00               	movlw	0
 23766  015EC6  5ADD               	subwfb	postdec2,f,c
 23767  015EC8                     l13148:
 23768                           
 23769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 23770  015EC8  0E4F               	movlw	79
 23771  015ECA  6E0B               	movwf	(btemp+10)^0,c
 23772  015ECC  0E00               	movlw	0
 23773  015ECE  6E0C               	movwf	(btemp+11)^0,c
 23774                           
 23775                           ;stkvar	_i @ sp[(-18)+10]
 23776  015ED0  0EF8               	movlw	-8
 23777  015ED2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23778  015ED8  0EF9               	movlw	-7
 23779  015EDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 23780                           
 23781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 23782  015EE0  0102               	movlb	2	; () banked
 23783  015EE2  6B92               	clrf	(_dbuf+79)& (0+255),b
 23784                           
 23785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23786  015EE4  D109               	goto	l13162
 23787  015EE6                     l13152:
 23788                           
 23789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 23790                           ;stkvar	_i @ sp[(-18)+10]
 23791  015EE6  50E1               	movf	fsr1l,w,c
 23792  015EE8  0FF8               	addlw	-8
 23793  015EEA  6ED9               	movwf	fsr2l,c
 23794  015EEC  50E2               	movf	fsr1h,w,c
 23795  015EEE  6EDA               	movwf	fsr2h,c
 23796  015EF0  0EFF               	movlw	255
 23797  015EF2  22DA               	addwfc	fsr2h,f,c
 23798  015EF4  06DE               	decf	postinc2,f,c
 23799  015EF6  0E00               	movlw	0
 23800  015EF8  5ADD               	subwfb	postdec2,f,c
 23801                           
 23802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 23803  015EFA  0E0A               	movlw	10
 23804  015EFC  6EE6               	movwf	postinc1,c
 23805  015EFE  0E00               	movlw	0
 23806  015F00  6EE6               	movwf	postinc1,c
 23807  015F02  0E00               	movlw	0
 23808  015F04  6EE6               	movwf	postinc1,c
 23809  015F06  0E00               	movlw	0
 23810  015F08  6EE6               	movwf	postinc1,c
 23811  015F0A  0E00               	movlw	0
 23812  015F0C  6EE6               	movwf	postinc1,c
 23813  015F0E  0E00               	movlw	0
 23814  015F10  6EE6               	movwf	postinc1,c
 23815  015F12  0E00               	movlw	0
 23816  015F14  6EE6               	movwf	postinc1,c
 23817  015F16  0E00               	movlw	0
 23818  015F18  6EE6               	movwf	postinc1,c
 23819                           
 23820                           ;stkvar	_n @ sp[(-26)+2]
 23821  015F1A  50E1               	movf	fsr1l,w,c
 23822  015F1C  0FE8               	addlw	-24
 23823  015F1E  6ED9               	movwf	fsr2l,c
 23824  015F20  50E2               	movf	fsr1h,w,c
 23825  015F22  6EDA               	movwf	fsr2h,c
 23826  015F24  0EFF               	movlw	255
 23827  015F26  22DA               	addwfc	fsr2h,f,c
 23828  015F28  006F FF7B FFE6     	movff	postinc2,postinc1
 23829  015F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 23830  015F34  006F FF7B FFE6     	movff	postinc2,postinc1
 23831  015F3A  006F FF7B FFE6     	movff	postinc2,postinc1
 23832  015F40  006F FF7B FFE6     	movff	postinc2,postinc1
 23833  015F46  006F FF7B FFE6     	movff	postinc2,postinc1
 23834  015F4C  006F FF7B FFE6     	movff	postinc2,postinc1
 23835  015F52  006F FF7B FFE6     	movff	postinc2,postinc1
 23836  015F58  ECE5  F0C1         	call	___aomod	;wreg free
 23837  015F5C  52E5               	movf	postdec1,f,c
 23838  015F5E  006F FF9C  F018    	movff	indf1,btemp+23
 23839  015F64  52E5               	movf	postdec1,f,c
 23840  015F66  006F FF9C  F017    	movff	indf1,btemp+22
 23841  015F6C  52E5               	movf	postdec1,f,c
 23842  015F6E  006F FF9C  F016    	movff	indf1,btemp+21
 23843  015F74  52E5               	movf	postdec1,f,c
 23844  015F76  006F FF9C  F015    	movff	indf1,btemp+20
 23845  015F7C  52E5               	movf	postdec1,f,c
 23846  015F7E  006F FF9C  F014    	movff	indf1,btemp+19
 23847  015F84  52E5               	movf	postdec1,f,c
 23848  015F86  006F FF9C  F013    	movff	indf1,btemp+18
 23849  015F8C  52E5               	movf	postdec1,f,c
 23850  015F8E  006F FF9C  F012    	movff	indf1,btemp+17
 23851  015F94  52E5               	movf	postdec1,f,c
 23852  015F96  006F FF9C  F011    	movff	indf1,btemp+16
 23853  015F9C  0EF8               	movlw	248
 23854  015F9E  26E1               	addwf	fsr1l,f,c
 23855  015FA0  0EFF               	movlw	255
 23856  015FA2  22E2               	addwfc	fsr1h,f,c
 23857  015FA4  0060  F044  F00B   	movff	btemp+16,btemp+10
 23858  015FAA  0060  F048  F00C   	movff	btemp+17,btemp+11
 23859  015FB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23860  015FB6  0060  F033  FFE6   	movff	btemp+11,postinc1
 23861  015FBC  EC8D  F0E3         	call	_abs	;wreg free
 23862  015FC0  0E30               	movlw	48
 23863  015FC2  2601               	addwf	btemp^0,f,c
 23864                           
 23865                           ;stkvar	_i @ sp[(-18)+10]
 23866  015FC4  0EF8               	movlw	-8
 23867  015FC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23868  015FCC  0EF9               	movlw	-7
 23869  015FCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23870  015FD4  0E43               	movlw	low _dbuf
 23871  015FD6  240B               	addwf	(btemp+10)^0,w,c
 23872  015FD8  6ED9               	movwf	fsr2l,c
 23873  015FDA  0E02               	movlw	high _dbuf
 23874  015FDC  200C               	addwfc	(btemp+11)^0,w,c
 23875  015FDE  6EDA               	movwf	fsr2h,c
 23876  015FE0  0060  F007  FFDF   	movff	btemp,indf2
 23877                           
 23878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 23879                           ;stkvar	_p @ sp[(-18)+16]
 23880  015FE6  50E1               	movf	fsr1l,w,c
 23881  015FE8  0FFE               	addlw	-2
 23882  015FEA  6ED9               	movwf	fsr2l,c
 23883  015FEC  50E2               	movf	fsr1h,w,c
 23884  015FEE  6EDA               	movwf	fsr2h,c
 23885  015FF0  0EFF               	movlw	255
 23886  015FF2  22DA               	addwfc	fsr2h,f,c
 23887  015FF4  06DE               	decf	postinc2,f,c
 23888  015FF6  0E00               	movlw	0
 23889  015FF8  5ADD               	subwfb	postdec2,f,c
 23890                           
 23891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 23892                           ;stkvar	_w @ sp[(-18)+14]
 23893  015FFA  50E1               	movf	fsr1l,w,c
 23894  015FFC  0FFC               	addlw	-4
 23895  015FFE  6ED9               	movwf	fsr2l,c
 23896  016000  50E2               	movf	fsr1h,w,c
 23897  016002  6EDA               	movwf	fsr2h,c
 23898  016004  0EFF               	movlw	255
 23899  016006  22DA               	addwfc	fsr2h,f,c
 23900  016008  06DE               	decf	postinc2,f,c
 23901  01600A  0E00               	movlw	0
 23902  01600C  5ADD               	subwfb	postdec2,f,c
 23903                           
 23904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 23905  01600E  0E0A               	movlw	10
 23906  016010  6EE6               	movwf	postinc1,c
 23907  016012  0E00               	movlw	0
 23908  016014  6EE6               	movwf	postinc1,c
 23909  016016  0E00               	movlw	0
 23910  016018  6EE6               	movwf	postinc1,c
 23911  01601A  0E00               	movlw	0
 23912  01601C  6EE6               	movwf	postinc1,c
 23913  01601E  0E00               	movlw	0
 23914  016020  6EE6               	movwf	postinc1,c
 23915  016022  0E00               	movlw	0
 23916  016024  6EE6               	movwf	postinc1,c
 23917  016026  0E00               	movlw	0
 23918  016028  6EE6               	movwf	postinc1,c
 23919  01602A  0E00               	movlw	0
 23920  01602C  6EE6               	movwf	postinc1,c
 23921                           
 23922                           ;stkvar	_n @ sp[(-26)+2]
 23923  01602E  50E1               	movf	fsr1l,w,c
 23924  016030  0FE8               	addlw	-24
 23925  016032  6ED9               	movwf	fsr2l,c
 23926  016034  50E2               	movf	fsr1h,w,c
 23927  016036  6EDA               	movwf	fsr2h,c
 23928  016038  0EFF               	movlw	255
 23929  01603A  22DA               	addwfc	fsr2h,f,c
 23930  01603C  006F FF7B FFE6     	movff	postinc2,postinc1
 23931  016042  006F FF7B FFE6     	movff	postinc2,postinc1
 23932  016048  006F FF7B FFE6     	movff	postinc2,postinc1
 23933  01604E  006F FF7B FFE6     	movff	postinc2,postinc1
 23934  016054  006F FF7B FFE6     	movff	postinc2,postinc1
 23935  01605A  006F FF7B FFE6     	movff	postinc2,postinc1
 23936  016060  006F FF7B FFE6     	movff	postinc2,postinc1
 23937  016066  006F FF7B FFE6     	movff	postinc2,postinc1
 23938  01606C  EC48  F0BE         	call	___aodiv	;wreg free
 23939  016070  52E5               	movf	postdec1,f,c
 23940  016072  006F FF9C  F018    	movff	indf1,btemp+23
 23941  016078  52E5               	movf	postdec1,f,c
 23942  01607A  006F FF9C  F017    	movff	indf1,btemp+22
 23943  016080  52E5               	movf	postdec1,f,c
 23944  016082  006F FF9C  F016    	movff	indf1,btemp+21
 23945  016088  52E5               	movf	postdec1,f,c
 23946  01608A  006F FF9C  F015    	movff	indf1,btemp+20
 23947  016090  52E5               	movf	postdec1,f,c
 23948  016092  006F FF9C  F014    	movff	indf1,btemp+19
 23949  016098  52E5               	movf	postdec1,f,c
 23950  01609A  006F FF9C  F013    	movff	indf1,btemp+18
 23951  0160A0  52E5               	movf	postdec1,f,c
 23952  0160A2  006F FF9C  F012    	movff	indf1,btemp+17
 23953  0160A8  52E5               	movf	postdec1,f,c
 23954  0160AA  006F FF9C  F011    	movff	indf1,btemp+16
 23955  0160B0  0EF8               	movlw	248
 23956  0160B2  26E1               	addwf	fsr1l,f,c
 23957  0160B4  0EFF               	movlw	255
 23958  0160B6  22E2               	addwfc	fsr1h,f,c
 23959                           
 23960                           ;stkvar	_n @ sp[(-18)+2]
 23961  0160B8  0EF0               	movlw	-16
 23962  0160BA  0060  F047  FFE3   	movff	btemp+16,plusw1
 23963  0160C0  0EF1               	movlw	-15
 23964  0160C2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 23965  0160C8  0EF2               	movlw	-14
 23966  0160CA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 23967  0160D0  0EF3               	movlw	-13
 23968  0160D2  0060  F053  FFE3   	movff	btemp+19,plusw1
 23969  0160D8  0EF4               	movlw	-12
 23970  0160DA  0060  F057  FFE3   	movff	btemp+20,plusw1
 23971  0160E0  0EF5               	movlw	-11
 23972  0160E2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 23973  0160E8  0EF6               	movlw	-10
 23974  0160EA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 23975  0160F0  0EF7               	movlw	-9
 23976  0160F2  0060  F063  FFE3   	movff	btemp+23,plusw1
 23977  0160F8                     l13162:
 23978                           
 23979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23980                           ;stkvar	_i @ sp[(-18)+10]
 23981  0160F8  0EF9               	movlw	-7
 23982  0160FA  BEE3               	btfsc	plusw1,7,c
 23983  0160FC  D036               	goto	u11990
 23984  0160FE  0EF9               	movlw	-7
 23985  016100  50E3               	movf	plusw1,w,c
 23986  016102  E104               	bnz	u11950
 23987  016104  0EF8               	movlw	-8
 23988  016106  04E3               	decf	plusw1,w,c
 23989  016108  A0D8               	btfss	status,0,c
 23990  01610A  D02F               	goto	u11990
 23991  01610C                     u11950:
 23992                           
 23993                           ;stkvar	_n @ sp[(-18)+2]
 23994  01610C  0EF0               	movlw	-16
 23995  01610E  50E3               	movf	plusw1,w,c
 23996  016110  E115               	bnz	u11961
 23997  016112  0EF1               	movlw	-15
 23998  016114  50E3               	movf	plusw1,w,c
 23999  016116  E112               	bnz	u11961
 24000  016118  0EF2               	movlw	-14
 24001  01611A  50E3               	movf	plusw1,w,c
 24002  01611C  E10F               	bnz	u11961
 24003  01611E  0EF3               	movlw	-13
 24004  016120  50E3               	movf	plusw1,w,c
 24005  016122  E10C               	bnz	u11961
 24006  016124  0EF4               	movlw	-12
 24007  016126  50E3               	movf	plusw1,w,c
 24008  016128  E109               	bnz	u11961
 24009  01612A  0EF5               	movlw	-11
 24010  01612C  50E3               	movf	plusw1,w,c
 24011  01612E  E106               	bnz	u11961
 24012  016130  0EF6               	movlw	-10
 24013  016132  50E3               	movf	plusw1,w,c
 24014  016134  E103               	bnz	u11961
 24015  016136  0EF7               	movlw	-9
 24016  016138  50E3               	movf	plusw1,w,c
 24017  01613A  A4D8               	btfss	status,2,c
 24018  01613C                     u11961:
 24019  01613C  D6D4               	goto	l13152
 24020                           
 24021                           ;stkvar	_p @ sp[(-18)+16]
 24022  01613E  0EFF               	movlw	-1
 24023  016140  BEE3               	btfsc	plusw1,7,c
 24024  016142  D007               	goto	u11970
 24025  016144  0EFF               	movlw	-1
 24026  016146  50E3               	movf	plusw1,w,c
 24027  016148  E103               	bnz	u11971
 24028  01614A  0EFE               	movlw	-2
 24029  01614C  04E3               	decf	plusw1,w,c
 24030  01614E  B0D8               	btfsc	status,0,c
 24031  016150                     u11971:
 24032  016150  D6CA               	goto	l13152
 24033  016152                     u11970:
 24034                           
 24035                           ;stkvar	_w @ sp[(-18)+14]
 24036  016152  0EFD               	movlw	-3
 24037  016154  BEE3               	btfsc	plusw1,7,c
 24038  016156  D009               	goto	u11990
 24039  016158  0EFD               	movlw	-3
 24040  01615A  50E3               	movf	plusw1,w,c
 24041  01615C  E104               	bnz	u11980
 24042  01615E  0EFC               	movlw	-4
 24043  016160  04E3               	decf	plusw1,w,c
 24044  016162  A0D8               	btfss	status,0,c
 24045  016164  D002               	goto	u11990
 24046  016166                     u11980:
 24047  016166  B23E               	btfsc	_flags^0,1,c
 24048  016168  D6BE               	goto	l13152
 24049  01616A                     u11990:
 24050                           
 24051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 24052                           ;stkvar	_s @ sp[(-18)+12]
 24053  01616A  0EFA               	movlw	-6
 24054  01616C  006F FF8C  F001    	movff	plusw1,btemp
 24055  016172  0EFB               	movlw	-5
 24056  016174  50E3               	movf	plusw1,w,c
 24057  016176  1001               	iorwf	btemp^0,w,c
 24058  016178  A4D8               	btfss	status,2,c
 24059  01617A  D002               	goto	u12010
 24060  01617C  A43E               	btfss	_flags^0,2,c
 24061  01617E  D033               	goto	l13186
 24062  016180                     u12010:
 24063                           
 24064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 24065                           ;stkvar	_i @ sp[(-18)+10]
 24066  016180  50E1               	movf	fsr1l,w,c
 24067  016182  0FF8               	addlw	-8
 24068  016184  6ED9               	movwf	fsr2l,c
 24069  016186  50E2               	movf	fsr1h,w,c
 24070  016188  6EDA               	movwf	fsr2h,c
 24071  01618A  0EFF               	movlw	255
 24072  01618C  22DA               	addwfc	fsr2h,f,c
 24073  01618E  06DE               	decf	postinc2,f,c
 24074  016190  0E00               	movlw	0
 24075  016192  5ADD               	subwfb	postdec2,f,c
 24076                           
 24077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 24078                           ;stkvar	_s @ sp[(-18)+12]
 24079  016194  0EFA               	movlw	-6
 24080  016196  006F FF8C  F001    	movff	plusw1,btemp
 24081  01619C  0EFB               	movlw	-5
 24082  01619E  50E3               	movf	plusw1,w,c
 24083  0161A0  1001               	iorwf	btemp^0,w,c
 24084  0161A2  A4D8               	btfss	status,2,c
 24085  0161A4  D002               	goto	l13182
 24086  0161A6  0E2B               	movlw	43
 24087  0161A8  D001               	goto	L29
 24088  0161AA                     l13182:
 24089  0161AA  0E2D               	movlw	45
 24090  0161AC                     L29:
 24091  0161AC  6E0B               	movwf	(btemp+10)^0,c
 24092  0161AE  0E00               	movlw	0
 24093  0161B0  6E0C               	movwf	(btemp+11)^0,c
 24094                           
 24095                           ;stkvar	_dtoa$6132 @ sp[(-18)+0]
 24096  0161B2  0EEE               	movlw	-18
 24097  0161B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24098  0161BA  0EEF               	movlw	-17
 24099  0161BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 24100                           
 24101                           ;stkvar	_dtoa$6132 @ sp[(-18)+0]
 24102                           ;stkvar	_i @ sp[(-18)+10]
 24103  0161C2  0EF8               	movlw	-8
 24104  0161C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24105  0161CA  0EF9               	movlw	-7
 24106  0161CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24107  0161D2  0E43               	movlw	low _dbuf
 24108  0161D4  240B               	addwf	(btemp+10)^0,w,c
 24109  0161D6  6ED9               	movwf	fsr2l,c
 24110  0161D8  0E02               	movlw	high _dbuf
 24111  0161DA  200C               	addwfc	(btemp+11)^0,w,c
 24112  0161DC  6EDA               	movwf	fsr2h,c
 24113  0161DE  0EEE               	movlw	-18
 24114  0161E0  006F FF8F FFDF     	movff	plusw1,indf2
 24115  0161E6                     l13186:
 24116                           
 24117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 24118                           ;stkvar	_w @ sp[(-18)+14]
 24119  0161E6  0EFC               	movlw	-4
 24120  0161E8  006F FF8F FFE6     	movff	plusw1,postinc1
 24121  0161EE  006F FF8F FFE6     	movff	plusw1,postinc1
 24122                           
 24123                           ;stkvar	_i @ sp[(-20)+10]
 24124  0161F4  0E43               	movlw	low _dbuf
 24125  0161F6  6E0B               	movwf	(btemp+10)^0,c
 24126  0161F8  0E02               	movlw	high _dbuf
 24127  0161FA  6E0C               	movwf	(btemp+11)^0,c
 24128  0161FC  0EF6               	movlw	-10
 24129  0161FE  50E3               	movf	plusw1,w,c
 24130  016200  260B               	addwf	(btemp+10)^0,f,c
 24131  016202  0EF7               	movlw	-9
 24132  016204  50E3               	movf	plusw1,w,c
 24133  016206  220C               	addwfc	(btemp+11)^0,f,c
 24134  016208  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24135  01620E  0060  F033  FFE6   	movff	btemp+11,postinc1
 24136                           
 24137                           ;stkvar	_fp @ sp[(-22)+-2]
 24138  016214  0EE8               	movlw	-24
 24139  016216  006F FF8F FFE6     	movff	plusw1,postinc1
 24140  01621C  006F FF8F FFE6     	movff	plusw1,postinc1
 24141  016222  EC34  F0D4         	call	_pad	;wreg free
 24142                           
 24143                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 24144  016226  0EE4               	movlw	228
 24145  016228  26E1               	addwf	fsr1l,f,c
 24146  01622A  0EFF               	movlw	255
 24147  01622C  22E2               	addwfc	fsr1h,f,c
 24148  01622E  0012               	return		;funcret
 24149  016230                     __end_of_dtoa:
 24150                           	opt callstack 0
 24151                           
 24152 ;; *************** function _abs *****************
 24153 ;; Defined at:
 24154 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 24155 ;; Parameters:    Size  Location     Type
 24156 ;;  a               2  [STACK] int 
 24157 ;; Auto vars:     Size  Location     Type
 24158 ;;		None
 24159 ;; Return value:  Size  Location     Type
 24160 ;;                  2  [STACK] int 
 24161 ;; Registers used:
 24162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 24163 ;; Tracked objects:
 24164 ;;		On entry : 0/2
 24165 ;;		On exit  : 0/0
 24166 ;;		Unchanged: 0/0
 24167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24172 ;;Total ram usage:        0 bytes
 24173 ;; Hardware stack levels used:    1
 24174 ;; Hardware stack levels required when called:   15
 24175 ;; This function calls:
 24176 ;;		Nothing
 24177 ;; This function is called by:
 24178 ;;		_dtoa
 24179 ;; This function uses a reentrant model
 24180 ;;
 24181                           
 24182                           	psect	text87
 24183  01C71A                     __ptext87:
 24184                           	opt callstack 0
 24185  01C71A                     _abs:
 24186                           	opt callstack 0
 24187                           
 24188                           ;stkvar	_a @ sp[(0)+-2]
 24189                           
 24190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24191                           ;incstack = 0
 24192 ;; hardware stack exceeded
 24193  01C71A  0EFF               	movlw	-1
 24194  01C71C  BEE3               	btfsc	plusw1,7,c
 24195  01C71E  D007               	goto	u6470
 24196  01C720  0EFF               	movlw	-1
 24197  01C722  50E3               	movf	plusw1,w,c
 24198  01C724  E112               	bnz	l8734
 24199  01C726  0EFE               	movlw	-2
 24200  01C728  04E3               	decf	plusw1,w,c
 24201  01C72A  B0D8               	btfsc	status,0,c
 24202  01C72C  D00E               	goto	l8734
 24203  01C72E                     u6470:
 24204                           
 24205                           ;stkvar	_a @ sp[(0)+-2]
 24206  01C72E  0EFE               	movlw	-2
 24207  01C730  006F FF8C  F001    	movff	plusw1,btemp
 24208  01C736  1E01               	comf	btemp^0,f,c
 24209  01C738  0EFF               	movlw	-1
 24210  01C73A  006F FF8C  F002    	movff	plusw1,btemp+1
 24211  01C740  1E02               	comf	(btemp+1)^0,f,c
 24212  01C742  2A01               	incf	btemp^0,f,c
 24213  01C744  B4D8               	btfsc	status,2,c
 24214  01C746  2A02               	incf	(btemp+1)^0,f,c
 24215  01C748  D008               	goto	l3348
 24216  01C74A                     l8734:
 24217                           
 24218                           ;stkvar	_a @ sp[(0)+-2]
 24219  01C74A  0EFE               	movlw	-2
 24220  01C74C  006F FF8C  F001    	movff	plusw1,btemp
 24221  01C752  0EFF               	movlw	-1
 24222  01C754  006F FF8C  F002    	movff	plusw1,btemp+1
 24223  01C75A                     l3348:
 24224                           
 24225                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 24226  01C75A  52E5               	movf	postdec1,f,c
 24227  01C75C  52E5               	movf	postdec1,f,c
 24228  01C75E  0012               	return		;funcret
 24229  01C760                     __end_of_abs:
 24230                           	opt callstack 0
 24231                           
 24232 ;; *************** function ___aomod *****************
 24233 ;; Defined at:
 24234 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 24235 ;; Parameters:    Size  Location     Type
 24236 ;;  dividend        8  [STACK] long long 
 24237 ;;  divisor         8  [STACK] long long 
 24238 ;; Auto vars:     Size  Location     Type
 24239 ;;  sign            1  [STACK] unsigned char 
 24240 ;;  counter         1  [STACK] unsigned char 
 24241 ;; Return value:  Size  Location     Type
 24242 ;;                  8  [STACK] long long 
 24243 ;; Registers used:
 24244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 24245 ;; Tracked objects:
 24246 ;;		On entry : 0/2
 24247 ;;		On exit  : 0/0
 24248 ;;		Unchanged: 0/0
 24249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24254 ;;Total ram usage:        0 bytes
 24255 ;; Hardware stack levels used:    1
 24256 ;; Hardware stack levels required when called:   15
 24257 ;; This function calls:
 24258 ;;		Nothing
 24259 ;; This function is called by:
 24260 ;;		_dtoa
 24261 ;; This function uses a reentrant model
 24262 ;;
 24263                           
 24264                           	psect	text88
 24265  0183CA                     __ptext88:
 24266                           	opt callstack 0
 24267  0183CA                     ___aomod:
 24268                           	opt callstack 0
 24269                           
 24270                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 24271  0183CA  52E6               	movf	postinc1,f,c
 24272  0183CC  52E6               	movf	postinc1,f,c
 24273                           
 24274                           ;stkvar	_sign @ sp[(-2)+0]
 24275                           
 24276                           ;incstack = 0
 24277 ;; hardware stack exceeded
 24278  0183CE  0EFE               	movlw	-2
 24279  0183D0  6AE3               	clrf	plusw1,c
 24280                           
 24281                           ;stkvar	_dividend @ sp[(-2)+-8]
 24282  0183D2  0EFD               	movlw	-3
 24283  0183D4  AEE3               	btfss	plusw1,7,c
 24284  0183D6  D028               	goto	l8892
 24285                           
 24286                           ;stkvar	_dividend @ sp[(-2)+-8]
 24287                           ;stkvar	_dividend @ sp[(-2)+-8]
 24288  0183D8  0EF6               	movlw	-10
 24289  0183DA  6CE3               	negf	plusw1,c
 24290  0183DC  0EF7               	movlw	-9
 24291  0183DE  1EE3               	comf	plusw1,f,c
 24292  0183E0  0EF8               	movlw	-8
 24293  0183E2  1EE3               	comf	plusw1,f,c
 24294  0183E4  0EF9               	movlw	-7
 24295  0183E6  1EE3               	comf	plusw1,f,c
 24296  0183E8  0EFA               	movlw	-6
 24297  0183EA  1EE3               	comf	plusw1,f,c
 24298  0183EC  0EFB               	movlw	-5
 24299  0183EE  1EE3               	comf	plusw1,f,c
 24300  0183F0  0EFC               	movlw	-4
 24301  0183F2  1EE3               	comf	plusw1,f,c
 24302  0183F4  0EFD               	movlw	-3
 24303  0183F6  1EE3               	comf	plusw1,f,c
 24304  0183F8  E314               	bnc	u6900
 24305  0183FA  0EF7               	movlw	-9
 24306  0183FC  2AE3               	incf	plusw1,f,c
 24307  0183FE  E311               	bnc	u6900
 24308  018400  0EF8               	movlw	-8
 24309  018402  2AE3               	incf	plusw1,f,c
 24310  018404  E30E               	bnc	u6900
 24311  018406  0EF9               	movlw	-7
 24312  018408  2AE3               	incf	plusw1,f,c
 24313  01840A  E30B               	bnc	u6900
 24314  01840C  0EFA               	movlw	-6
 24315  01840E  2AE3               	incf	plusw1,f,c
 24316  018410  E308               	bnc	u6900
 24317  018412  0EFB               	movlw	-5
 24318  018414  2AE3               	incf	plusw1,f,c
 24319  018416  E305               	bnc	u6900
 24320  018418  0EFC               	movlw	-4
 24321  01841A  2AE3               	incf	plusw1,f,c
 24322  01841C  E302               	bnc	u6900
 24323  01841E  0EFD               	movlw	-3
 24324  018420  2AE3               	incf	plusw1,f,c
 24325  018422                     u6900:
 24326                           
 24327                           ;stkvar	_sign @ sp[(-2)+0]
 24328  018422  0EFE               	movlw	-2
 24329  018424  6AE3               	clrf	plusw1,c
 24330  018426  2AE3               	incf	plusw1,f,c
 24331  018428                     l8892:
 24332                           
 24333                           ;stkvar	_divisor @ sp[(-2)+-16]
 24334  018428  0EF5               	movlw	-11
 24335  01842A  AEE3               	btfss	plusw1,7,c
 24336  01842C  D025               	goto	u6920
 24337                           
 24338                           ;stkvar	_divisor @ sp[(-2)+-16]
 24339                           ;stkvar	_divisor @ sp[(-2)+-16]
 24340  01842E  0EEE               	movlw	-18
 24341  018430  6CE3               	negf	plusw1,c
 24342  018432  0EEF               	movlw	-17
 24343  018434  1EE3               	comf	plusw1,f,c
 24344  018436  0EF0               	movlw	-16
 24345  018438  1EE3               	comf	plusw1,f,c
 24346  01843A  0EF1               	movlw	-15
 24347  01843C  1EE3               	comf	plusw1,f,c
 24348  01843E  0EF2               	movlw	-14
 24349  018440  1EE3               	comf	plusw1,f,c
 24350  018442  0EF3               	movlw	-13
 24351  018444  1EE3               	comf	plusw1,f,c
 24352  018446  0EF4               	movlw	-12
 24353  018448  1EE3               	comf	plusw1,f,c
 24354  01844A  0EF5               	movlw	-11
 24355  01844C  1EE3               	comf	plusw1,f,c
 24356  01844E  E314               	bnc	u6920
 24357  018450  0EEF               	movlw	-17
 24358  018452  2AE3               	incf	plusw1,f,c
 24359  018454  E311               	bnc	u6920
 24360  018456  0EF0               	movlw	-16
 24361  018458  2AE3               	incf	plusw1,f,c
 24362  01845A  E30E               	bnc	u6920
 24363  01845C  0EF1               	movlw	-15
 24364  01845E  2AE3               	incf	plusw1,f,c
 24365  018460  E30B               	bnc	u6920
 24366  018462  0EF2               	movlw	-14
 24367  018464  2AE3               	incf	plusw1,f,c
 24368  018466  E308               	bnc	u6920
 24369  018468  0EF3               	movlw	-13
 24370  01846A  2AE3               	incf	plusw1,f,c
 24371  01846C  E305               	bnc	u6920
 24372  01846E  0EF4               	movlw	-12
 24373  018470  2AE3               	incf	plusw1,f,c
 24374  018472  E302               	bnc	u6920
 24375  018474  0EF5               	movlw	-11
 24376  018476  2AE3               	incf	plusw1,f,c
 24377  018478                     u6920:
 24378                           
 24379                           ;stkvar	_divisor @ sp[(-2)+-16]
 24380  018478  0EEE               	movlw	-18
 24381  01847A  50E3               	movf	plusw1,w,c
 24382  01847C  E116               	bnz	u6930
 24383  01847E  0EEF               	movlw	-17
 24384  018480  50E3               	movf	plusw1,w,c
 24385  018482  E113               	bnz	u6930
 24386  018484  0EF0               	movlw	-16
 24387  018486  50E3               	movf	plusw1,w,c
 24388  018488  E110               	bnz	u6930
 24389  01848A  0EF1               	movlw	-15
 24390  01848C  50E3               	movf	plusw1,w,c
 24391  01848E  E10D               	bnz	u6930
 24392  018490  0EF2               	movlw	-14
 24393  018492  50E3               	movf	plusw1,w,c
 24394  018494  E10A               	bnz	u6930
 24395  018496  0EF3               	movlw	-13
 24396  018498  50E3               	movf	plusw1,w,c
 24397  01849A  E107               	bnz	u6930
 24398  01849C  0EF4               	movlw	-12
 24399  01849E  50E3               	movf	plusw1,w,c
 24400  0184A0  E104               	bnz	u6930
 24401  0184A2  0EF5               	movlw	-11
 24402  0184A4  50E3               	movf	plusw1,w,c
 24403  0184A6  B4D8               	btfsc	status,2,c
 24404  0184A8  D075               	goto	u6960
 24405  0184AA                     u6930:
 24406                           
 24407                           ;stkvar	_counter @ sp[(-2)+1]
 24408  0184AA  0EFF               	movlw	-1
 24409  0184AC  6AE3               	clrf	plusw1,c
 24410  0184AE  D012               	goto	L30
 24411  0184B0                     l8900:
 24412                           
 24413                           ;stkvar	_divisor @ sp[(-2)+-16]
 24414  0184B0  90D8               	bcf	status,0,c
 24415  0184B2  0EEE               	movlw	-18
 24416  0184B4  36E3               	rlcf	plusw1,f,c
 24417  0184B6  0EEF               	movlw	-17
 24418  0184B8  36E3               	rlcf	plusw1,f,c
 24419  0184BA  0EF0               	movlw	-16
 24420  0184BC  36E3               	rlcf	plusw1,f,c
 24421  0184BE  0EF1               	movlw	-15
 24422  0184C0  36E3               	rlcf	plusw1,f,c
 24423  0184C2  0EF2               	movlw	-14
 24424  0184C4  36E3               	rlcf	plusw1,f,c
 24425  0184C6  0EF3               	movlw	-13
 24426  0184C8  36E3               	rlcf	plusw1,f,c
 24427  0184CA  0EF4               	movlw	-12
 24428  0184CC  36E3               	rlcf	plusw1,f,c
 24429  0184CE  0EF5               	movlw	-11
 24430  0184D0  36E3               	rlcf	plusw1,f,c
 24431                           
 24432                           ;stkvar	_counter @ sp[(-2)+1]
 24433  0184D2  0EFF               	movlw	-1
 24434  0184D4                     L30:
 24435  0184D4  2AE3               	incf	plusw1,f,c
 24436                           
 24437                           ;stkvar	_divisor @ sp[(-2)+-16]
 24438  0184D6  0EF5               	movlw	-11
 24439  0184D8  AEE3               	btfss	plusw1,7,c
 24440  0184DA  D7EA               	goto	l8900
 24441  0184DC                     u6940:
 24442                           
 24443                           ;stkvar	_divisor @ sp[(-2)+-16]
 24444                           ;stkvar	_dividend @ sp[(-2)+-8]
 24445  0184DC  50E1               	movf	fsr1l,w,c
 24446  0184DE  0FF6               	addlw	-10
 24447  0184E0  6ED9               	movwf	fsr2l,c
 24448  0184E2  50E2               	movf	fsr1h,w,c
 24449  0184E4  6EDA               	movwf	fsr2h,c
 24450  0184E6  0EFF               	movlw	255
 24451  0184E8  22DA               	addwfc	fsr2h,f,c
 24452  0184EA  0EEE               	movlw	-18
 24453  0184EC  50E3               	movf	plusw1,w,c
 24454  0184EE  5CDE               	subwf	postinc2,w,c
 24455  0184F0  0EEF               	movlw	-17
 24456  0184F2  50E3               	movf	plusw1,w,c
 24457  0184F4  58DE               	subwfb	postinc2,w,c
 24458  0184F6  0EF0               	movlw	-16
 24459  0184F8  50E3               	movf	plusw1,w,c
 24460  0184FA  58DE               	subwfb	postinc2,w,c
 24461  0184FC  0EF1               	movlw	-15
 24462  0184FE  50E3               	movf	plusw1,w,c
 24463  018500  58DE               	subwfb	postinc2,w,c
 24464  018502  0EF2               	movlw	-14
 24465  018504  50E3               	movf	plusw1,w,c
 24466  018506  58DE               	subwfb	postinc2,w,c
 24467  018508  0EF3               	movlw	-13
 24468  01850A  50E3               	movf	plusw1,w,c
 24469  01850C  58DE               	subwfb	postinc2,w,c
 24470  01850E  0EF4               	movlw	-12
 24471  018510  50E3               	movf	plusw1,w,c
 24472  018512  58DE               	subwfb	postinc2,w,c
 24473  018514  0EF5               	movlw	-11
 24474  018516  50E3               	movf	plusw1,w,c
 24475  018518  58DE               	subwfb	postinc2,w,c
 24476  01851A  A0D8               	btfss	status,0,c
 24477  01851C  D01F               	goto	l8908
 24478                           
 24479                           ;stkvar	_divisor @ sp[(-2)+-16]
 24480                           ;stkvar	_dividend @ sp[(-2)+-8]
 24481  01851E  50E1               	movf	fsr1l,w,c
 24482  018520  0FF6               	addlw	-10
 24483  018522  6ED9               	movwf	fsr2l,c
 24484  018524  50E2               	movf	fsr1h,w,c
 24485  018526  6EDA               	movwf	fsr2h,c
 24486  018528  0EFF               	movlw	255
 24487  01852A  22DA               	addwfc	fsr2h,f,c
 24488  01852C  0EEE               	movlw	-18
 24489  01852E  50E3               	movf	plusw1,w,c
 24490  018530  5EDE               	subwf	postinc2,f,c
 24491  018532  0EEF               	movlw	-17
 24492  018534  50E3               	movf	plusw1,w,c
 24493  018536  5ADE               	subwfb	postinc2,f,c
 24494  018538  0EF0               	movlw	-16
 24495  01853A  50E3               	movf	plusw1,w,c
 24496  01853C  5ADE               	subwfb	postinc2,f,c
 24497  01853E  0EF1               	movlw	-15
 24498  018540  50E3               	movf	plusw1,w,c
 24499  018542  5ADE               	subwfb	postinc2,f,c
 24500  018544  0EF2               	movlw	-14
 24501  018546  50E3               	movf	plusw1,w,c
 24502  018548  5ADE               	subwfb	postinc2,f,c
 24503  01854A  0EF3               	movlw	-13
 24504  01854C  50E3               	movf	plusw1,w,c
 24505  01854E  5ADE               	subwfb	postinc2,f,c
 24506  018550  0EF4               	movlw	-12
 24507  018552  50E3               	movf	plusw1,w,c
 24508  018554  5ADE               	subwfb	postinc2,f,c
 24509  018556  0EF5               	movlw	-11
 24510  018558  50E3               	movf	plusw1,w,c
 24511  01855A  5ADE               	subwfb	postinc2,f,c
 24512  01855C                     l8908:
 24513                           
 24514                           ;stkvar	_divisor @ sp[(-2)+-16]
 24515  01855C  90D8               	bcf	status,0,c
 24516  01855E  0EF5               	movlw	-11
 24517  018560  32E3               	rrcf	plusw1,f,c
 24518  018562  0EF4               	movlw	-12
 24519  018564  32E3               	rrcf	plusw1,f,c
 24520  018566  0EF3               	movlw	-13
 24521  018568  32E3               	rrcf	plusw1,f,c
 24522  01856A  0EF2               	movlw	-14
 24523  01856C  32E3               	rrcf	plusw1,f,c
 24524  01856E  0EF1               	movlw	-15
 24525  018570  32E3               	rrcf	plusw1,f,c
 24526  018572  0EF0               	movlw	-16
 24527  018574  32E3               	rrcf	plusw1,f,c
 24528  018576  0EEF               	movlw	-17
 24529  018578  32E3               	rrcf	plusw1,f,c
 24530  01857A  0EEE               	movlw	-18
 24531  01857C  32E3               	rrcf	plusw1,f,c
 24532                           
 24533                           ;stkvar	_counter @ sp[(-2)+1]
 24534  01857E  0EFF               	movlw	-1
 24535  018580  50E3               	movf	plusw1,w,c
 24536  018582  6E01               	movwf	btemp^0,c
 24537  018584  0E01               	movlw	1
 24538  018586  5E01               	subwf	btemp^0,f,c
 24539  018588  0EFF               	movlw	-1
 24540  01858A  0060  F007  FFE3   	movff	btemp,plusw1
 24541  018590  A4D8               	btfss	status,2,c
 24542  018592  D7A4               	goto	u6940
 24543  018594                     u6960:
 24544                           
 24545                           ;stkvar	_sign @ sp[(-2)+0]
 24546  018594  0EFE               	movlw	-2
 24547  018596  50E3               	movf	plusw1,w,c
 24548  018598  B4D8               	btfsc	status,2,c
 24549  01859A  D025               	goto	u6980
 24550                           
 24551                           ;stkvar	_dividend @ sp[(-2)+-8]
 24552                           ;stkvar	_dividend @ sp[(-2)+-8]
 24553  01859C  0EF6               	movlw	-10
 24554  01859E  6CE3               	negf	plusw1,c
 24555  0185A0  0EF7               	movlw	-9
 24556  0185A2  1EE3               	comf	plusw1,f,c
 24557  0185A4  0EF8               	movlw	-8
 24558  0185A6  1EE3               	comf	plusw1,f,c
 24559  0185A8  0EF9               	movlw	-7
 24560  0185AA  1EE3               	comf	plusw1,f,c
 24561  0185AC  0EFA               	movlw	-6
 24562  0185AE  1EE3               	comf	plusw1,f,c
 24563  0185B0  0EFB               	movlw	-5
 24564  0185B2  1EE3               	comf	plusw1,f,c
 24565  0185B4  0EFC               	movlw	-4
 24566  0185B6  1EE3               	comf	plusw1,f,c
 24567  0185B8  0EFD               	movlw	-3
 24568  0185BA  1EE3               	comf	plusw1,f,c
 24569  0185BC  E314               	bnc	u6980
 24570  0185BE  0EF7               	movlw	-9
 24571  0185C0  2AE3               	incf	plusw1,f,c
 24572  0185C2  E311               	bnc	u6980
 24573  0185C4  0EF8               	movlw	-8
 24574  0185C6  2AE3               	incf	plusw1,f,c
 24575  0185C8  E30E               	bnc	u6980
 24576  0185CA  0EF9               	movlw	-7
 24577  0185CC  2AE3               	incf	plusw1,f,c
 24578  0185CE  E30B               	bnc	u6980
 24579  0185D0  0EFA               	movlw	-6
 24580  0185D2  2AE3               	incf	plusw1,f,c
 24581  0185D4  E308               	bnc	u6980
 24582  0185D6  0EFB               	movlw	-5
 24583  0185D8  2AE3               	incf	plusw1,f,c
 24584  0185DA  E305               	bnc	u6980
 24585  0185DC  0EFC               	movlw	-4
 24586  0185DE  2AE3               	incf	plusw1,f,c
 24587  0185E0  E302               	bnc	u6980
 24588  0185E2  0EFD               	movlw	-3
 24589  0185E4  2AE3               	incf	plusw1,f,c
 24590  0185E6                     u6980:
 24591                           
 24592                           ;stkvar	_dividend @ sp[(-2)+-8]
 24593  0185E6  0EF6               	movlw	246
 24594  0185E8  24E1               	addwf	fsr1l,w,c
 24595  0185EA  6ED9               	movwf	fsr2l,c
 24596  0185EC  0EFF               	movlw	255
 24597  0185EE  20E2               	addwfc	fsr1h,w,c
 24598  0185F0  6EDA               	movwf	fsr2h,c
 24599                           
 24600                           ;stkvar	?___aomod @ sp[(-2)+-8]
 24601  0185F2  0E08               	movlw	8
 24602  0185F4  6E01               	movwf	btemp^0,c
 24603  0185F6  0EF6               	movlw	-10
 24604  0185F8                     us699999:
 24605  0185F8  006F FF7B FFE3     	movff	postinc2,plusw1
 24606  0185FE  28E8               	incf	wreg,w,c
 24607  018600  2E01               	decfsz	btemp^0,f,c
 24608  018602  D7FA               	bra	us699999
 24609                           
 24610                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 24611  018604  52E5               	movf	postdec1,f,c
 24612  018606  52E5               	movf	postdec1,f,c
 24613  018608  0012               	return		;funcret
 24614  01860A                     __end_of___aomod:
 24615                           	opt callstack 0
 24616                           
 24617 ;; *************** function ___aodiv *****************
 24618 ;; Defined at:
 24619 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 24620 ;; Parameters:    Size  Location     Type
 24621 ;;  dividend        8  [STACK] long long 
 24622 ;;  divisor         8  [STACK] long long 
 24623 ;; Auto vars:     Size  Location     Type
 24624 ;;  quotient        8  [STACK] long long 
 24625 ;;  sign            1  [STACK] unsigned char 
 24626 ;;  counter         1  [STACK] unsigned char 
 24627 ;; Return value:  Size  Location     Type
 24628 ;;                  8  [STACK] long long 
 24629 ;; Registers used:
 24630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 24631 ;; Tracked objects:
 24632 ;;		On entry : 0/2
 24633 ;;		On exit  : 0/0
 24634 ;;		Unchanged: 0/0
 24635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24640 ;;Total ram usage:        0 bytes
 24641 ;; Hardware stack levels used:    1
 24642 ;; Hardware stack levels required when called:   15
 24643 ;; This function calls:
 24644 ;;		Nothing
 24645 ;; This function is called by:
 24646 ;;		_dtoa
 24647 ;; This function uses a reentrant model
 24648 ;;
 24649                           
 24650                           	psect	text89
 24651  017C90                     __ptext89:
 24652                           	opt callstack 0
 24653  017C90                     ___aodiv:
 24654                           	opt callstack 0
 24655                           
 24656                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 24657  017C90  0E0A               	movlw	10
 24658  017C92  26E1               	addwf	fsr1l,f,c
 24659  017C94  0E00               	movlw	0
 24660  017C96  22E2               	addwfc	fsr1h,f,c
 24661                           
 24662                           ;stkvar	_sign @ sp[(-10)+8]
 24663                           
 24664                           ;incstack = 0
 24665 ;; hardware stack exceeded
 24666  017C98  0EFE               	movlw	-2
 24667  017C9A  6AE3               	clrf	plusw1,c
 24668                           
 24669                           ;stkvar	_divisor @ sp[(-10)+-16]
 24670  017C9C  0EED               	movlw	-19
 24671  017C9E  AEE3               	btfss	plusw1,7,c
 24672  017CA0  D028               	goto	l8848
 24673                           
 24674                           ;stkvar	_divisor @ sp[(-10)+-16]
 24675                           ;stkvar	_divisor @ sp[(-10)+-16]
 24676  017CA2  0EE6               	movlw	-26
 24677  017CA4  6CE3               	negf	plusw1,c
 24678  017CA6  0EE7               	movlw	-25
 24679  017CA8  1EE3               	comf	plusw1,f,c
 24680  017CAA  0EE8               	movlw	-24
 24681  017CAC  1EE3               	comf	plusw1,f,c
 24682  017CAE  0EE9               	movlw	-23
 24683  017CB0  1EE3               	comf	plusw1,f,c
 24684  017CB2  0EEA               	movlw	-22
 24685  017CB4  1EE3               	comf	plusw1,f,c
 24686  017CB6  0EEB               	movlw	-21
 24687  017CB8  1EE3               	comf	plusw1,f,c
 24688  017CBA  0EEC               	movlw	-20
 24689  017CBC  1EE3               	comf	plusw1,f,c
 24690  017CBE  0EED               	movlw	-19
 24691  017CC0  1EE3               	comf	plusw1,f,c
 24692  017CC2  E314               	bnc	u6780
 24693  017CC4  0EE7               	movlw	-25
 24694  017CC6  2AE3               	incf	plusw1,f,c
 24695  017CC8  E311               	bnc	u6780
 24696  017CCA  0EE8               	movlw	-24
 24697  017CCC  2AE3               	incf	plusw1,f,c
 24698  017CCE  E30E               	bnc	u6780
 24699  017CD0  0EE9               	movlw	-23
 24700  017CD2  2AE3               	incf	plusw1,f,c
 24701  017CD4  E30B               	bnc	u6780
 24702  017CD6  0EEA               	movlw	-22
 24703  017CD8  2AE3               	incf	plusw1,f,c
 24704  017CDA  E308               	bnc	u6780
 24705  017CDC  0EEB               	movlw	-21
 24706  017CDE  2AE3               	incf	plusw1,f,c
 24707  017CE0  E305               	bnc	u6780
 24708  017CE2  0EEC               	movlw	-20
 24709  017CE4  2AE3               	incf	plusw1,f,c
 24710  017CE6  E302               	bnc	u6780
 24711  017CE8  0EED               	movlw	-19
 24712  017CEA  2AE3               	incf	plusw1,f,c
 24713  017CEC                     u6780:
 24714                           
 24715                           ;stkvar	_sign @ sp[(-10)+8]
 24716  017CEC  0EFE               	movlw	-2
 24717  017CEE  6AE3               	clrf	plusw1,c
 24718  017CF0  2AE3               	incf	plusw1,f,c
 24719  017CF2                     l8848:
 24720                           
 24721                           ;stkvar	_dividend @ sp[(-10)+-8]
 24722  017CF2  0EF5               	movlw	-11
 24723  017CF4  AEE3               	btfss	plusw1,7,c
 24724  017CF6  D027               	goto	l8854
 24725                           
 24726                           ;stkvar	_dividend @ sp[(-10)+-8]
 24727                           ;stkvar	_dividend @ sp[(-10)+-8]
 24728  017CF8  0EEE               	movlw	-18
 24729  017CFA  6CE3               	negf	plusw1,c
 24730  017CFC  0EEF               	movlw	-17
 24731  017CFE  1EE3               	comf	plusw1,f,c
 24732  017D00  0EF0               	movlw	-16
 24733  017D02  1EE3               	comf	plusw1,f,c
 24734  017D04  0EF1               	movlw	-15
 24735  017D06  1EE3               	comf	plusw1,f,c
 24736  017D08  0EF2               	movlw	-14
 24737  017D0A  1EE3               	comf	plusw1,f,c
 24738  017D0C  0EF3               	movlw	-13
 24739  017D0E  1EE3               	comf	plusw1,f,c
 24740  017D10  0EF4               	movlw	-12
 24741  017D12  1EE3               	comf	plusw1,f,c
 24742  017D14  0EF5               	movlw	-11
 24743  017D16  1EE3               	comf	plusw1,f,c
 24744  017D18  E314               	bnc	u6800
 24745  017D1A  0EEF               	movlw	-17
 24746  017D1C  2AE3               	incf	plusw1,f,c
 24747  017D1E  E311               	bnc	u6800
 24748  017D20  0EF0               	movlw	-16
 24749  017D22  2AE3               	incf	plusw1,f,c
 24750  017D24  E30E               	bnc	u6800
 24751  017D26  0EF1               	movlw	-15
 24752  017D28  2AE3               	incf	plusw1,f,c
 24753  017D2A  E30B               	bnc	u6800
 24754  017D2C  0EF2               	movlw	-14
 24755  017D2E  2AE3               	incf	plusw1,f,c
 24756  017D30  E308               	bnc	u6800
 24757  017D32  0EF3               	movlw	-13
 24758  017D34  2AE3               	incf	plusw1,f,c
 24759  017D36  E305               	bnc	u6800
 24760  017D38  0EF4               	movlw	-12
 24761  017D3A  2AE3               	incf	plusw1,f,c
 24762  017D3C  E302               	bnc	u6800
 24763  017D3E  0EF5               	movlw	-11
 24764  017D40  2AE3               	incf	plusw1,f,c
 24765  017D42                     u6800:
 24766                           
 24767                           ;stkvar	_sign @ sp[(-10)+8]
 24768  017D42  0EFE               	movlw	-2
 24769  017D44  70E3               	btg	plusw1,0,c
 24770  017D46                     l8854:
 24771                           
 24772                           ;stkvar	_quotient @ sp[(-10)+0]
 24773  017D46  0E07               	movlw	7
 24774  017D48  6E01               	movwf	btemp^0,c
 24775  017D4A  0EF6               	movlw	-10
 24776  017D4C                     u6811:
 24777  017D4C  6AE3               	clrf	plusw1,c
 24778  017D4E  2AE8               	incf	wreg,f,c
 24779  017D50  0601               	decf	btemp^0,f,c
 24780  017D52  E2FC               	bc	u6811
 24781                           
 24782                           ;stkvar	_divisor @ sp[(-10)+-16]
 24783  017D54  0EE6               	movlw	-26
 24784  017D56  50E3               	movf	plusw1,w,c
 24785  017D58  E116               	bnz	u6820
 24786  017D5A  0EE7               	movlw	-25
 24787  017D5C  50E3               	movf	plusw1,w,c
 24788  017D5E  E113               	bnz	u6820
 24789  017D60  0EE8               	movlw	-24
 24790  017D62  50E3               	movf	plusw1,w,c
 24791  017D64  E110               	bnz	u6820
 24792  017D66  0EE9               	movlw	-23
 24793  017D68  50E3               	movf	plusw1,w,c
 24794  017D6A  E10D               	bnz	u6820
 24795  017D6C  0EEA               	movlw	-22
 24796  017D6E  50E3               	movf	plusw1,w,c
 24797  017D70  E10A               	bnz	u6820
 24798  017D72  0EEB               	movlw	-21
 24799  017D74  50E3               	movf	plusw1,w,c
 24800  017D76  E107               	bnz	u6820
 24801  017D78  0EEC               	movlw	-20
 24802  017D7A  50E3               	movf	plusw1,w,c
 24803  017D7C  E104               	bnz	u6820
 24804  017D7E  0EED               	movlw	-19
 24805  017D80  50E3               	movf	plusw1,w,c
 24806  017D82  B4D8               	btfsc	status,2,c
 24807  017D84  D088               	goto	u6850
 24808  017D86                     u6820:
 24809                           
 24810                           ;stkvar	_counter @ sp[(-10)+9]
 24811  017D86  0EFF               	movlw	-1
 24812  017D88  6AE3               	clrf	plusw1,c
 24813  017D8A  D012               	goto	L31
 24814  017D8C                     l8860:
 24815                           
 24816                           ;stkvar	_divisor @ sp[(-10)+-16]
 24817  017D8C  90D8               	bcf	status,0,c
 24818  017D8E  0EE6               	movlw	-26
 24819  017D90  36E3               	rlcf	plusw1,f,c
 24820  017D92  0EE7               	movlw	-25
 24821  017D94  36E3               	rlcf	plusw1,f,c
 24822  017D96  0EE8               	movlw	-24
 24823  017D98  36E3               	rlcf	plusw1,f,c
 24824  017D9A  0EE9               	movlw	-23
 24825  017D9C  36E3               	rlcf	plusw1,f,c
 24826  017D9E  0EEA               	movlw	-22
 24827  017DA0  36E3               	rlcf	plusw1,f,c
 24828  017DA2  0EEB               	movlw	-21
 24829  017DA4  36E3               	rlcf	plusw1,f,c
 24830  017DA6  0EEC               	movlw	-20
 24831  017DA8  36E3               	rlcf	plusw1,f,c
 24832  017DAA  0EED               	movlw	-19
 24833  017DAC  36E3               	rlcf	plusw1,f,c
 24834                           
 24835                           ;stkvar	_counter @ sp[(-10)+9]
 24836  017DAE  0EFF               	movlw	-1
 24837  017DB0                     L31:
 24838  017DB0  2AE3               	incf	plusw1,f,c
 24839                           
 24840                           ;stkvar	_divisor @ sp[(-10)+-16]
 24841  017DB2  0EED               	movlw	-19
 24842  017DB4  AEE3               	btfss	plusw1,7,c
 24843  017DB6  D7EA               	goto	l8860
 24844  017DB8                     u6830:
 24845                           
 24846                           ;stkvar	_quotient @ sp[(-10)+0]
 24847  017DB8  90D8               	bcf	status,0,c
 24848  017DBA  0EF6               	movlw	-10
 24849  017DBC  36E3               	rlcf	plusw1,f,c
 24850  017DBE  0EF7               	movlw	-9
 24851  017DC0  36E3               	rlcf	plusw1,f,c
 24852  017DC2  0EF8               	movlw	-8
 24853  017DC4  36E3               	rlcf	plusw1,f,c
 24854  017DC6  0EF9               	movlw	-7
 24855  017DC8  36E3               	rlcf	plusw1,f,c
 24856  017DCA  0EFA               	movlw	-6
 24857  017DCC  36E3               	rlcf	plusw1,f,c
 24858  017DCE  0EFB               	movlw	-5
 24859  017DD0  36E3               	rlcf	plusw1,f,c
 24860  017DD2  0EFC               	movlw	-4
 24861  017DD4  36E3               	rlcf	plusw1,f,c
 24862  017DD6  0EFD               	movlw	-3
 24863  017DD8  36E3               	rlcf	plusw1,f,c
 24864                           
 24865                           ;stkvar	_divisor @ sp[(-10)+-16]
 24866                           ;stkvar	_dividend @ sp[(-10)+-8]
 24867  017DDA  50E1               	movf	fsr1l,w,c
 24868  017DDC  0FEE               	addlw	-18
 24869  017DDE  6ED9               	movwf	fsr2l,c
 24870  017DE0  50E2               	movf	fsr1h,w,c
 24871  017DE2  6EDA               	movwf	fsr2h,c
 24872  017DE4  0EFF               	movlw	255
 24873  017DE6  22DA               	addwfc	fsr2h,f,c
 24874  017DE8  0EE6               	movlw	-26
 24875  017DEA  50E3               	movf	plusw1,w,c
 24876  017DEC  5CDE               	subwf	postinc2,w,c
 24877  017DEE  0EE7               	movlw	-25
 24878  017DF0  50E3               	movf	plusw1,w,c
 24879  017DF2  58DE               	subwfb	postinc2,w,c
 24880  017DF4  0EE8               	movlw	-24
 24881  017DF6  50E3               	movf	plusw1,w,c
 24882  017DF8  58DE               	subwfb	postinc2,w,c
 24883  017DFA  0EE9               	movlw	-23
 24884  017DFC  50E3               	movf	plusw1,w,c
 24885  017DFE  58DE               	subwfb	postinc2,w,c
 24886  017E00  0EEA               	movlw	-22
 24887  017E02  50E3               	movf	plusw1,w,c
 24888  017E04  58DE               	subwfb	postinc2,w,c
 24889  017E06  0EEB               	movlw	-21
 24890  017E08  50E3               	movf	plusw1,w,c
 24891  017E0A  58DE               	subwfb	postinc2,w,c
 24892  017E0C  0EEC               	movlw	-20
 24893  017E0E  50E3               	movf	plusw1,w,c
 24894  017E10  58DE               	subwfb	postinc2,w,c
 24895  017E12  0EED               	movlw	-19
 24896  017E14  50E3               	movf	plusw1,w,c
 24897  017E16  58DE               	subwfb	postinc2,w,c
 24898  017E18  A0D8               	btfss	status,0,c
 24899  017E1A  D021               	goto	l8872
 24900                           
 24901                           ;stkvar	_divisor @ sp[(-10)+-16]
 24902                           ;stkvar	_dividend @ sp[(-10)+-8]
 24903  017E1C  50E1               	movf	fsr1l,w,c
 24904  017E1E  0FEE               	addlw	-18
 24905  017E20  6ED9               	movwf	fsr2l,c
 24906  017E22  50E2               	movf	fsr1h,w,c
 24907  017E24  6EDA               	movwf	fsr2h,c
 24908  017E26  0EFF               	movlw	255
 24909  017E28  22DA               	addwfc	fsr2h,f,c
 24910  017E2A  0EE6               	movlw	-26
 24911  017E2C  50E3               	movf	plusw1,w,c
 24912  017E2E  5EDE               	subwf	postinc2,f,c
 24913  017E30  0EE7               	movlw	-25
 24914  017E32  50E3               	movf	plusw1,w,c
 24915  017E34  5ADE               	subwfb	postinc2,f,c
 24916  017E36  0EE8               	movlw	-24
 24917  017E38  50E3               	movf	plusw1,w,c
 24918  017E3A  5ADE               	subwfb	postinc2,f,c
 24919  017E3C  0EE9               	movlw	-23
 24920  017E3E  50E3               	movf	plusw1,w,c
 24921  017E40  5ADE               	subwfb	postinc2,f,c
 24922  017E42  0EEA               	movlw	-22
 24923  017E44  50E3               	movf	plusw1,w,c
 24924  017E46  5ADE               	subwfb	postinc2,f,c
 24925  017E48  0EEB               	movlw	-21
 24926  017E4A  50E3               	movf	plusw1,w,c
 24927  017E4C  5ADE               	subwfb	postinc2,f,c
 24928  017E4E  0EEC               	movlw	-20
 24929  017E50  50E3               	movf	plusw1,w,c
 24930  017E52  5ADE               	subwfb	postinc2,f,c
 24931  017E54  0EED               	movlw	-19
 24932  017E56  50E3               	movf	plusw1,w,c
 24933  017E58  5ADE               	subwfb	postinc2,f,c
 24934                           
 24935                           ;stkvar	_quotient @ sp[(-10)+0]
 24936  017E5A  0EF6               	movlw	-10
 24937  017E5C  80E3               	bsf	plusw1,0,c
 24938  017E5E                     l8872:
 24939                           
 24940                           ;stkvar	_divisor @ sp[(-10)+-16]
 24941  017E5E  90D8               	bcf	status,0,c
 24942  017E60  0EED               	movlw	-19
 24943  017E62  32E3               	rrcf	plusw1,f,c
 24944  017E64  0EEC               	movlw	-20
 24945  017E66  32E3               	rrcf	plusw1,f,c
 24946  017E68  0EEB               	movlw	-21
 24947  017E6A  32E3               	rrcf	plusw1,f,c
 24948  017E6C  0EEA               	movlw	-22
 24949  017E6E  32E3               	rrcf	plusw1,f,c
 24950  017E70  0EE9               	movlw	-23
 24951  017E72  32E3               	rrcf	plusw1,f,c
 24952  017E74  0EE8               	movlw	-24
 24953  017E76  32E3               	rrcf	plusw1,f,c
 24954  017E78  0EE7               	movlw	-25
 24955  017E7A  32E3               	rrcf	plusw1,f,c
 24956  017E7C  0EE6               	movlw	-26
 24957  017E7E  32E3               	rrcf	plusw1,f,c
 24958                           
 24959                           ;stkvar	_counter @ sp[(-10)+9]
 24960  017E80  0EFF               	movlw	-1
 24961  017E82  50E3               	movf	plusw1,w,c
 24962  017E84  6E01               	movwf	btemp^0,c
 24963  017E86  0E01               	movlw	1
 24964  017E88  5E01               	subwf	btemp^0,f,c
 24965  017E8A  0EFF               	movlw	-1
 24966  017E8C  0060  F007  FFE3   	movff	btemp,plusw1
 24967  017E92  A4D8               	btfss	status,2,c
 24968  017E94  D791               	goto	u6830
 24969  017E96                     u6850:
 24970                           
 24971                           ;stkvar	_sign @ sp[(-10)+8]
 24972  017E96  0EFE               	movlw	-2
 24973  017E98  50E3               	movf	plusw1,w,c
 24974  017E9A  B4D8               	btfsc	status,2,c
 24975  017E9C  D025               	goto	u6870
 24976                           
 24977                           ;stkvar	_quotient @ sp[(-10)+0]
 24978                           ;stkvar	_quotient @ sp[(-10)+0]
 24979  017E9E  0EF6               	movlw	-10
 24980  017EA0  6CE3               	negf	plusw1,c
 24981  017EA2  0EF7               	movlw	-9
 24982  017EA4  1EE3               	comf	plusw1,f,c
 24983  017EA6  0EF8               	movlw	-8
 24984  017EA8  1EE3               	comf	plusw1,f,c
 24985  017EAA  0EF9               	movlw	-7
 24986  017EAC  1EE3               	comf	plusw1,f,c
 24987  017EAE  0EFA               	movlw	-6
 24988  017EB0  1EE3               	comf	plusw1,f,c
 24989  017EB2  0EFB               	movlw	-5
 24990  017EB4  1EE3               	comf	plusw1,f,c
 24991  017EB6  0EFC               	movlw	-4
 24992  017EB8  1EE3               	comf	plusw1,f,c
 24993  017EBA  0EFD               	movlw	-3
 24994  017EBC  1EE3               	comf	plusw1,f,c
 24995  017EBE  E314               	bnc	u6870
 24996  017EC0  0EF7               	movlw	-9
 24997  017EC2  2AE3               	incf	plusw1,f,c
 24998  017EC4  E311               	bnc	u6870
 24999  017EC6  0EF8               	movlw	-8
 25000  017EC8  2AE3               	incf	plusw1,f,c
 25001  017ECA  E30E               	bnc	u6870
 25002  017ECC  0EF9               	movlw	-7
 25003  017ECE  2AE3               	incf	plusw1,f,c
 25004  017ED0  E30B               	bnc	u6870
 25005  017ED2  0EFA               	movlw	-6
 25006  017ED4  2AE3               	incf	plusw1,f,c
 25007  017ED6  E308               	bnc	u6870
 25008  017ED8  0EFB               	movlw	-5
 25009  017EDA  2AE3               	incf	plusw1,f,c
 25010  017EDC  E305               	bnc	u6870
 25011  017EDE  0EFC               	movlw	-4
 25012  017EE0  2AE3               	incf	plusw1,f,c
 25013  017EE2  E302               	bnc	u6870
 25014  017EE4  0EFD               	movlw	-3
 25015  017EE6  2AE3               	incf	plusw1,f,c
 25016  017EE8                     u6870:
 25017                           
 25018                           ;stkvar	_quotient @ sp[(-10)+0]
 25019  017EE8  0EF6               	movlw	246
 25020  017EEA  24E1               	addwf	fsr1l,w,c
 25021  017EEC  6ED9               	movwf	fsr2l,c
 25022  017EEE  0EFF               	movlw	255
 25023  017EF0  20E2               	addwfc	fsr1h,w,c
 25024  017EF2  6EDA               	movwf	fsr2h,c
 25025                           
 25026                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 25027  017EF4  0E08               	movlw	8
 25028  017EF6  6E01               	movwf	btemp^0,c
 25029  017EF8  0EEE               	movlw	-18
 25030  017EFA                     us688999:
 25031  017EFA  006F FF7B FFE3     	movff	postinc2,plusw1
 25032  017F00  28E8               	incf	wreg,w,c
 25033  017F02  2E01               	decfsz	btemp^0,f,c
 25034  017F04  D7FA               	bra	us688999
 25035                           
 25036                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 25037  017F06  0EF6               	movlw	246
 25038  017F08  26E1               	addwf	fsr1l,f,c
 25039  017F0A  0EFF               	movlw	255
 25040  017F0C  22E2               	addwfc	fsr1h,f,c
 25041  017F0E  0012               	return		;funcret
 25042  017F10                     __end_of___aodiv:
 25043                           	opt callstack 0
 25044                           
 25045 ;; *************** function _ctoa *****************
 25046 ;; Defined at:
 25047 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25048 ;; Parameters:    Size  Location     Type
 25049 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25050 ;;		 -> f(6), NULL(0), 
 25051 ;;  c               1  [STACK] unsigned char 
 25052 ;; Auto vars:     Size  Location     Type
 25053 ;;  w               2  [STACK] int 
 25054 ;;  l               2    0        int 
 25055 ;; Return value:  Size  Location     Type
 25056 ;;                  2  [STACK] int 
 25057 ;; Registers used:
 25058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25059 ;; Tracked objects:
 25060 ;;		On entry : 0/0
 25061 ;;		On exit  : 0/0
 25062 ;;		Unchanged: 0/0
 25063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25068 ;;Total ram usage:        0 bytes
 25069 ;; Hardware stack levels used:    1
 25070 ;; Hardware stack levels required when called:   20
 25071 ;; This function calls:
 25072 ;;		_pad
 25073 ;; This function is called by:
 25074 ;;		_vfpfcnvrt
 25075 ;; This function uses a reentrant model
 25076 ;;
 25077                           
 25078                           	psect	text90
 25079  01BB74                     __ptext90:
 25080                           	opt callstack 0
 25081  01BB74                     _ctoa:
 25082                           	opt callstack 0
 25083                           
 25084                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25085  01BB74  52E6               	movf	postinc1,f,c
 25086  01BB76  52E6               	movf	postinc1,f,c
 25087                           
 25088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 25089                           
 25090                           ;incstack = 0
 25091 ;; hardware stack exceeded
 25092  01BB78  503A               	movf	_width^0,w,c
 25093  01BB7A  103B               	iorwf	(_width+1)^0,w,c
 25094  01BB7C  A4D8               	btfss	status,2,c
 25095  01BB7E  D009               	goto	l13114
 25096                           
 25097                           ;stkvar	_w @ sp[(-2)+0]
 25098  01BB80  0EFE               	movlw	-2
 25099  01BB82  0060  F0EB  FFE3   	movff	_width,plusw1
 25100  01BB88  0EFF               	movlw	-1
 25101  01BB8A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 25102  01BB90  D016               	goto	l13116
 25103  01BB92                     l13114:
 25104  01BB92  0EFF               	movlw	255
 25105  01BB94  6E0B               	movwf	(btemp+10)^0,c
 25106  01BB96  0EFF               	movlw	255
 25107  01BB98  6E0C               	movwf	(btemp+11)^0,c
 25108  01BB9A  0060  F0E8  F009   	movff	_width,btemp+8
 25109  01BBA0  0060  F0EC  F00A   	movff	_width+1,btemp+9
 25110  01BBA6  500B               	movf	(btemp+10)^0,w,c
 25111  01BBA8  2609               	addwf	(btemp+8)^0,f,c
 25112  01BBAA  500C               	movf	(btemp+11)^0,w,c
 25113  01BBAC  220A               	addwfc	(btemp+9)^0,f,c
 25114                           
 25115                           ;stkvar	_w @ sp[(-2)+0]
 25116  01BBAE  0EFE               	movlw	-2
 25117  01BBB0  0060  F027  FFE3   	movff	btemp+8,plusw1
 25118  01BBB6  0EFF               	movlw	-1
 25119  01BBB8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25120  01BBBE                     l13116:
 25121                           
 25122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 25123                           ;stkvar	_c @ sp[(-2)+-3]
 25124  01BBBE  0EFB               	movlw	-5
 25125  01BBC0  006F FF8C  F243    	movff	plusw1,_dbuf
 25126                           
 25127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 25128  01BBC6  0102               	movlb	2	; () banked
 25129  01BBC8  6B44               	clrf	(_dbuf+1)& (0+255),b
 25130                           
 25131                           ; BSR set to: 2
 25132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 25133                           ;stkvar	_w @ sp[(-2)+0]
 25134  01BBCA  0EFE               	movlw	-2
 25135  01BBCC  006F FF8F FFE6     	movff	plusw1,postinc1
 25136  01BBD2  006F FF8F FFE6     	movff	plusw1,postinc1
 25137  01BBD8  0E43               	movlw	low _dbuf
 25138  01BBDA  6EE6               	movwf	postinc1,c
 25139  01BBDC  0E02               	movlw	high _dbuf
 25140  01BBDE  6EE6               	movwf	postinc1,c
 25141                           
 25142                           ;stkvar	_fp @ sp[(-6)+-2]
 25143  01BBE0  0EF8               	movlw	-8
 25144  01BBE2  006F FF8F FFE6     	movff	plusw1,postinc1
 25145  01BBE8  006F FF8F FFE6     	movff	plusw1,postinc1
 25146  01BBEE  EC34  F0D4         	call	_pad	;wreg free
 25147                           
 25148                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 25149  01BBF2  0EFB               	movlw	251
 25150  01BBF4  26E1               	addwf	fsr1l,f,c
 25151  01BBF6  0EFF               	movlw	255
 25152  01BBF8  22E2               	addwfc	fsr1h,f,c
 25153  01BBFA  0012               	return		;funcret
 25154  01BBFC                     __end_of_ctoa:
 25155                           	opt callstack 0
 25156                           
 25157 ;; *************** function _pad *****************
 25158 ;; Defined at:
 25159 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25160 ;; Parameters:    Size  Location     Type
 25161 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25162 ;;		 -> f(6), NULL(0), 
 25163 ;;  buf             2  [STACK] PTR unsigned char 
 25164 ;;		 -> dbuf(80), 
 25165 ;;  p               2  [STACK] int 
 25166 ;; Auto vars:     Size  Location     Type
 25167 ;;  w               2  [STACK] int 
 25168 ;;  i               2  [STACK] int 
 25169 ;; Return value:  Size  Location     Type
 25170 ;;                  2  [STACK] int 
 25171 ;; Registers used:
 25172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25173 ;; Tracked objects:
 25174 ;;		On entry : 0/2
 25175 ;;		On exit  : 0/0
 25176 ;;		Unchanged: 0/0
 25177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25182 ;;Total ram usage:        0 bytes
 25183 ;; Hardware stack levels used:    1
 25184 ;; Hardware stack levels required when called:   19
 25185 ;; This function calls:
 25186 ;;		_fputc
 25187 ;;		_fputs
 25188 ;;		_strlen
 25189 ;; This function is called by:
 25190 ;;		_ctoa
 25191 ;;		_dtoa
 25192 ;;		_efgtoa
 25193 ;;		_utoa
 25194 ;;		_xtoa
 25195 ;; This function uses a reentrant model
 25196 ;;
 25197                           
 25198                           	psect	text91
 25199  01A868                     __ptext91:
 25200                           	opt callstack 0
 25201  01A868                     _pad:
 25202                           	opt callstack 0
 25203                           
 25204                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25205  01A868  52E6               	movf	postinc1,f,c
 25206  01A86A  52E6               	movf	postinc1,f,c
 25207  01A86C  52E6               	movf	postinc1,f,c
 25208  01A86E  52E6               	movf	postinc1,f,c
 25209                           
 25210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 25211                           
 25212                           ;incstack = 0
 25213 ;; hardware stack exceeded
 25214  01A870  A03E               	btfss	_flags^0,0,c
 25215  01A872  D010               	goto	l13076
 25216                           
 25217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 25218                           ;stkvar	_fp @ sp[(-4)+-2]
 25219  01A874  0EFA               	movlw	-6
 25220  01A876  006F FF8F FFE6     	movff	plusw1,postinc1
 25221  01A87C  006F FF8F FFE6     	movff	plusw1,postinc1
 25222                           
 25223                           ;stkvar	_buf @ sp[(-6)+-4]
 25224  01A882  0EF6               	movlw	-10
 25225  01A884  006F FF8F FFE6     	movff	plusw1,postinc1
 25226  01A88A  006F FF8F FFE6     	movff	plusw1,postinc1
 25227  01A890  EC4C  F0DC         	call	_fputs	;wreg free
 25228  01A894                     l13076:
 25229                           
 25230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 25231                           ;stkvar	_p @ sp[(-4)+-6]
 25232  01A894  0EF7               	movlw	-9
 25233  01A896  BEE3               	btfsc	plusw1,7,c
 25234  01A898  D011               	goto	l13080
 25235                           
 25236                           ;stkvar	_p @ sp[(-4)+-6]
 25237                           ;stkvar	_w @ sp[(-4)+0]
 25238  01A89A  0EF6               	movlw	-10
 25239  01A89C  006F FF8C  F001    	movff	plusw1,btemp
 25240  01A8A2  0EFC               	movlw	-4
 25241  01A8A4  0060  F007  FFE3   	movff	btemp,plusw1
 25242  01A8AA  0EF7               	movlw	-9
 25243  01A8AC  006F FF8C  F001    	movff	plusw1,btemp
 25244  01A8B2  0EFD               	movlw	-3
 25245  01A8B4  0060  F007  FFE3   	movff	btemp,plusw1
 25246  01A8BA  D004               	goto	l2402
 25247  01A8BC                     l13080:
 25248                           
 25249                           ;stkvar	_w @ sp[(-4)+0]
 25250  01A8BC  0EFC               	movlw	-4
 25251  01A8BE  6AE3               	clrf	plusw1,c
 25252  01A8C0  0EFD               	movlw	-3
 25253  01A8C2  6AE3               	clrf	plusw1,c
 25254  01A8C4                     l2402:
 25255                           
 25256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 25257                           ;stkvar	_i @ sp[(-4)+2]
 25258  01A8C4  0EFE               	movlw	-2
 25259  01A8C6  6AE3               	clrf	plusw1,c
 25260  01A8C8  0EFF               	movlw	-1
 25261  01A8CA  6AE3               	clrf	plusw1,c
 25262                           
 25263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 25264  01A8CC  D01E               	goto	l13086
 25265  01A8CE                     l13082:
 25266                           
 25267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 25268                           ;stkvar	_fp @ sp[(-4)+-2]
 25269  01A8CE  0EFA               	movlw	-6
 25270  01A8D0  006F FF8F FFE6     	movff	plusw1,postinc1
 25271  01A8D6  006F FF8F FFE6     	movff	plusw1,postinc1
 25272  01A8DC  0E20               	movlw	32
 25273  01A8DE  6EE6               	movwf	postinc1,c
 25274  01A8E0  0E00               	movlw	0
 25275  01A8E2  6EE6               	movwf	postinc1,c
 25276  01A8E4  ECFE  F0D1         	call	_fputc	;wreg free
 25277                           
 25278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 25279                           ;stkvar	_i @ sp[(-4)+2]
 25280  01A8E8  0EFE               	movlw	-2
 25281  01A8EA  50E3               	movf	plusw1,w,c
 25282  01A8EC  0F01               	addlw	1
 25283  01A8EE  6E01               	movwf	btemp^0,c
 25284  01A8F0  0EFE               	movlw	-2
 25285  01A8F2  0060  F007  FFE3   	movff	btemp,plusw1
 25286  01A8F8  6A01               	clrf	btemp^0,c
 25287  01A8FA  0EFF               	movlw	-1
 25288  01A8FC  50E3               	movf	plusw1,w,c
 25289  01A8FE  2001               	addwfc	btemp^0,w,c
 25290  01A900  6E01               	movwf	btemp^0,c
 25291  01A902  0EFF               	movlw	-1
 25292  01A904  0060  F007  FFE3   	movff	btemp,plusw1
 25293  01A90A                     l13086:
 25294                           
 25295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 25296                           ;stkvar	_w @ sp[(-4)+0]
 25297                           ;stkvar	_i @ sp[(-4)+2]
 25298  01A90A  50E1               	movf	fsr1l,w,c
 25299  01A90C  0FFE               	addlw	-2
 25300  01A90E  6ED9               	movwf	fsr2l,c
 25301  01A910  50E2               	movf	fsr1h,w,c
 25302  01A912  6EDA               	movwf	fsr2h,c
 25303  01A914  0EFF               	movlw	255
 25304  01A916  22DA               	addwfc	fsr2h,f,c
 25305  01A918  0EFC               	movlw	-4
 25306  01A91A  50E3               	movf	plusw1,w,c
 25307  01A91C  5CDE               	subwf	postinc2,w,c
 25308  01A91E  50DE               	movf	postinc2,w,c
 25309  01A920  0A80               	xorlw	128
 25310  01A922  6E01               	movwf	btemp^0,c
 25311  01A924  0EFD               	movlw	-3
 25312  01A926  50E3               	movf	plusw1,w,c
 25313  01A928  0A80               	xorlw	128
 25314  01A92A  5801               	subwfb	btemp^0,w,c
 25315  01A92C  A0D8               	btfss	status,0,c
 25316  01A92E  D7CF               	goto	l13082
 25317                           
 25318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 25319  01A930  B03E               	btfsc	_flags^0,0,c
 25320  01A932  D010               	goto	l13090
 25321                           
 25322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 25323                           ;stkvar	_fp @ sp[(-4)+-2]
 25324  01A934  0EFA               	movlw	-6
 25325  01A936  006F FF8F FFE6     	movff	plusw1,postinc1
 25326  01A93C  006F FF8F FFE6     	movff	plusw1,postinc1
 25327                           
 25328                           ;stkvar	_buf @ sp[(-6)+-4]
 25329  01A942  0EF6               	movlw	-10
 25330  01A944  006F FF8F FFE6     	movff	plusw1,postinc1
 25331  01A94A  006F FF8F FFE6     	movff	plusw1,postinc1
 25332  01A950  EC4C  F0DC         	call	_fputs	;wreg free
 25333  01A954                     l13090:
 25334                           
 25335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 25336                           ;stkvar	_w @ sp[(-4)+0]
 25337                           ;stkvar	_buf @ sp[(-4)+-4]
 25338  01A954  0EF8               	movlw	-8
 25339  01A956  006F FF8F FFE6     	movff	plusw1,postinc1
 25340  01A95C  006F FF8F FFE6     	movff	plusw1,postinc1
 25341  01A962  ECFB  F0DB         	call	_strlen	;wreg free
 25342  01A966  0EFC               	movlw	-4
 25343  01A968  50E3               	movf	plusw1,w,c
 25344  01A96A  2601               	addwf	btemp^0,f,c
 25345  01A96C  0EFD               	movlw	-3
 25346  01A96E  50E3               	movf	plusw1,w,c
 25347  01A970  2202               	addwfc	(btemp+1)^0,f,c
 25348                           
 25349                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 25350  01A972  0EF6               	movlw	246
 25351  01A974  26E1               	addwf	fsr1l,f,c
 25352  01A976  0EFF               	movlw	255
 25353  01A978  22E2               	addwfc	fsr1h,f,c
 25354  01A97A  0012               	return		;funcret
 25355  01A97C                     __end_of_pad:
 25356                           	opt callstack 0
 25357                           
 25358 ;; *************** function _strlen *****************
 25359 ;; Defined at:
 25360 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 25361 ;; Parameters:    Size  Location     Type
 25362 ;;  s               2  [STACK] PTR const unsigned char 
 25363 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 25364 ;;		 -> spin(120), STR_63(9), STR_62(12), D.lcd(480), 
 25365 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 25366 ;;		 -> V(192), 
 25367 ;; Auto vars:     Size  Location     Type
 25368 ;;  a               2  [STACK] PTR const unsigned char 
 25369 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 25370 ;;		 -> spin(120), STR_63(9), STR_62(12), D.lcd(480), 
 25371 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 25372 ;;		 -> V(192), 
 25373 ;; Return value:  Size  Location     Type
 25374 ;;                  2  [STACK] unsigned int 
 25375 ;; Registers used:
 25376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 25377 ;; Tracked objects:
 25378 ;;		On entry : 0/0
 25379 ;;		On exit  : 0/0
 25380 ;;		Unchanged: 0/0
 25381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25386 ;;Total ram usage:        0 bytes
 25387 ;; Hardware stack levels used:    1
 25388 ;; Hardware stack levels required when called:   15
 25389 ;; This function calls:
 25390 ;;		Nothing
 25391 ;; This function is called by:
 25392 ;;		_eaDogM_WriteString
 25393 ;;		_spinners
 25394 ;;		_calc_bsoc
 25395 ;;		_pad
 25396 ;;		_stoa
 25397 ;; This function uses a reentrant model
 25398 ;;
 25399                           
 25400                           	psect	text92
 25401  01B7F6                     __ptext92:
 25402                           	opt callstack 0
 25403  01B7F6                     _strlen:
 25404                           	opt callstack 0
 25405                           
 25406                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25407  01B7F6  52E6               	movf	postinc1,f,c
 25408  01B7F8  52E6               	movf	postinc1,f,c
 25409                           
 25410                           ;stkvar	_s @ sp[(-2)+-2]
 25411                           
 25412                           ;incstack = 0
 25413 ;; hardware stack exceeded
 25414  01B7FA  0EFC               	movlw	-4
 25415  01B7FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 25416  01B802  0EFD               	movlw	-3
 25417  01B804  006F FF8C  F00C    	movff	plusw1,btemp+11
 25418                           
 25419                           ;stkvar	_a @ sp[(-2)+0]
 25420  01B80A  0EFF               	movlw	-1
 25421  01B80C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25422  01B812  0EFE               	movlw	-2
 25423  01B814  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25424  01B81A  D011               	goto	l8424
 25425  01B81C                     l8422:
 25426                           
 25427                           ;stkvar	_s @ sp[(-2)+-2]
 25428  01B81C  0EFC               	movlw	-4
 25429  01B81E  50E3               	movf	plusw1,w,c
 25430  01B820  0F01               	addlw	1
 25431  01B822  6E01               	movwf	btemp^0,c
 25432  01B824  0EFC               	movlw	-4
 25433  01B826  0060  F007  FFE3   	movff	btemp,plusw1
 25434  01B82C  6A01               	clrf	btemp^0,c
 25435  01B82E  0EFD               	movlw	-3
 25436  01B830  50E3               	movf	plusw1,w,c
 25437  01B832  2001               	addwfc	btemp^0,w,c
 25438  01B834  6E01               	movwf	btemp^0,c
 25439  01B836  0EFD               	movlw	-3
 25440  01B838  0060  F007  FFE3   	movff	btemp,plusw1
 25441  01B83E                     l8424:
 25442                           
 25443                           ;stkvar	_s @ sp[(-2)+-2]
 25444  01B83E  0EFC               	movlw	-4
 25445  01B840  006F FF8F FFF6     	movff	plusw1,tblptrl
 25446  01B846  0EFD               	movlw	-3
 25447  01B848  006F FF8F FFF7     	movff	plusw1,tblptrh
 25448  01B84E  0E00               	movlw	low (__mediumconst shr (0+16))
 25449  01B850  6EF8               	movwf	tblptru,c
 25450  01B852  0E1F               	movlw	(high __ramtop+-1)
 25451  01B854  64F7               	cpfsgt	tblptrh,c
 25452  01B856  D003               	bra	u5897
 25453  01B858  0008               	tblrd		*
 25454  01B85A  50F5               	movf	tablat,w,c
 25455  01B85C  D007               	bra	u5890
 25456  01B85E                     u5897:
 25457  01B85E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25458  01B864  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25459  01B86A  50EF               	movf	indf0,w,c
 25460  01B86C                     u5890:
 25461  01B86C  0900               	iorlw	0
 25462  01B86E  A4D8               	btfss	status,2,c
 25463  01B870  D7D5               	goto	l8422
 25464                           
 25465                           ;stkvar	_a @ sp[(-2)+0]
 25466                           ;stkvar	_s @ sp[(-2)+-2]
 25467  01B872  0EFC               	movlw	-4
 25468  01B874  006F FF8C  F001    	movff	plusw1,btemp
 25469  01B87A  0EFD               	movlw	-3
 25470  01B87C  006F FF8C  F002    	movff	plusw1,btemp+1
 25471  01B882  0EFE               	movlw	-2
 25472  01B884  50E3               	movf	plusw1,w,c
 25473  01B886  5E01               	subwf	btemp^0,f,c
 25474  01B888  0EFF               	movlw	-1
 25475  01B88A  50E3               	movf	plusw1,w,c
 25476  01B88C  5A02               	subwfb	(btemp+1)^0,f,c
 25477                           
 25478                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 25479  01B88E  52E5               	movf	postdec1,f,c
 25480  01B890  52E5               	movf	postdec1,f,c
 25481  01B892  52E5               	movf	postdec1,f,c
 25482  01B894  52E5               	movf	postdec1,f,c
 25483  01B896  0012               	return		;funcret
 25484  01B898                     __end_of_strlen:
 25485                           	opt callstack 0
 25486                           
 25487 ;; *************** function _fputs *****************
 25488 ;; Defined at:
 25489 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 25490 ;; Parameters:    Size  Location     Type
 25491 ;;  s               2  [STACK] PTR const unsigned char 
 25492 ;;		 -> dbuf(80), 
 25493 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25494 ;;		 -> f(6), NULL(0), 
 25495 ;; Auto vars:     Size  Location     Type
 25496 ;;  i               2  [STACK] int 
 25497 ;;  c               1  [STACK] unsigned char 
 25498 ;; Return value:  Size  Location     Type
 25499 ;;                  2  [STACK] int 
 25500 ;; Registers used:
 25501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 25502 ;; Tracked objects:
 25503 ;;		On entry : 0/2
 25504 ;;		On exit  : 0/0
 25505 ;;		Unchanged: 0/0
 25506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25511 ;;Total ram usage:        0 bytes
 25512 ;; Hardware stack levels used:    1
 25513 ;; Hardware stack levels required when called:   18
 25514 ;; This function calls:
 25515 ;;		_fputc
 25516 ;; This function is called by:
 25517 ;;		_pad
 25518 ;; This function uses a reentrant model
 25519 ;;
 25520                           
 25521                           	psect	text93
 25522  01B898                     __ptext93:
 25523                           	opt callstack 0
 25524  01B898                     _fputs:
 25525                           	opt callstack 0
 25526                           
 25527                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25528  01B898  52E6               	movf	postinc1,f,c
 25529  01B89A  52E6               	movf	postinc1,f,c
 25530  01B89C  52E6               	movf	postinc1,f,c
 25531                           
 25532                           ;stkvar	_i @ sp[(-3)+0]
 25533                           
 25534                           ;incstack = 0
 25535 ;; hardware stack exceeded
 25536  01B89E  0EFD               	movlw	-3
 25537  01B8A0  6AE3               	clrf	plusw1,c
 25538  01B8A2  0EFE               	movlw	-2
 25539  01B8A4  6AE3               	clrf	plusw1,c
 25540  01B8A6  D01F               	goto	l13028
 25541  01B8A8                     l13024:
 25542                           
 25543                           ;stkvar	_fp @ sp[(-3)+-4]
 25544  01B8A8  0EF9               	movlw	-7
 25545  01B8AA  006F FF8F FFE6     	movff	plusw1,postinc1
 25546  01B8B0  006F FF8F FFE6     	movff	plusw1,postinc1
 25547                           
 25548                           ;stkvar	_c @ sp[(-5)+2]
 25549  01B8B6  0EFD               	movlw	-3
 25550  01B8B8  50E3               	movf	plusw1,w,c
 25551  01B8BA  6EE6               	movwf	postinc1,c
 25552  01B8BC  0E00               	movlw	0
 25553  01B8BE  6EE6               	movwf	postinc1,c
 25554  01B8C0  ECFE  F0D1         	call	_fputc	;wreg free
 25555                           
 25556                           ;stkvar	_i @ sp[(-3)+0]
 25557  01B8C4  0EFD               	movlw	-3
 25558  01B8C6  50E3               	movf	plusw1,w,c
 25559  01B8C8  0F01               	addlw	1
 25560  01B8CA  6E01               	movwf	btemp^0,c
 25561  01B8CC  0EFD               	movlw	-3
 25562  01B8CE  0060  F007  FFE3   	movff	btemp,plusw1
 25563  01B8D4  6A01               	clrf	btemp^0,c
 25564  01B8D6  0EFE               	movlw	-2
 25565  01B8D8  50E3               	movf	plusw1,w,c
 25566  01B8DA  2001               	addwfc	btemp^0,w,c
 25567  01B8DC  6E01               	movwf	btemp^0,c
 25568  01B8DE  0EFE               	movlw	-2
 25569  01B8E0  0060  F007  FFE3   	movff	btemp,plusw1
 25570  01B8E6                     l13028:
 25571                           
 25572                           ;stkvar	_i @ sp[(-3)+0]
 25573  01B8E6  0EFD               	movlw	-3
 25574  01B8E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 25575  01B8EE  0EFE               	movlw	-2
 25576  01B8F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 25577                           
 25578                           ;stkvar	_s @ sp[(-3)+-2]
 25579  01B8F6  0EFB               	movlw	-5
 25580  01B8F8  006F FF8C  F009    	movff	plusw1,btemp+8
 25581  01B8FE  0EFC               	movlw	-4
 25582  01B900  006F FF8C  F00A    	movff	plusw1,btemp+9
 25583  01B906  500B               	movf	(btemp+10)^0,w,c
 25584  01B908  2409               	addwf	(btemp+8)^0,w,c
 25585  01B90A  6ED9               	movwf	fsr2l,c
 25586  01B90C  500C               	movf	(btemp+11)^0,w,c
 25587  01B90E  200A               	addwfc	(btemp+9)^0,w,c
 25588  01B910  6EDA               	movwf	fsr2h,c
 25589  01B912  50DF               	movf	indf2,w,c
 25590  01B914  6E0C               	movwf	(btemp+11)^0,c
 25591                           
 25592                           ;stkvar	_c @ sp[(-3)+2]
 25593  01B916  0EFF               	movlw	-1
 25594  01B918  0060  F033  FFE3   	movff	btemp+11,plusw1
 25595  01B91E  0EFF               	movlw	-1
 25596  01B920  50E3               	movf	plusw1,w,c
 25597  01B922  A4D8               	btfss	status,2,c
 25598  01B924  D7C1               	goto	l13024
 25599                           
 25600                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25601  01B926  0EF9               	movlw	249
 25602  01B928  26E1               	addwf	fsr1l,f,c
 25603  01B92A  0EFF               	movlw	255
 25604  01B92C  22E2               	addwfc	fsr1h,f,c
 25605  01B92E  0012               	return		;funcret
 25606  01B930                     __end_of_fputs:
 25607                           	opt callstack 0
 25608                           
 25609 ;; *************** function _fputc *****************
 25610 ;; Defined at:
 25611 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 25612 ;; Parameters:    Size  Location     Type
 25613 ;;  c               2  [STACK] int 
 25614 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25615 ;;		 -> f(6), NULL(0), 
 25616 ;; Auto vars:     Size  Location     Type
 25617 ;;		None
 25618 ;; Return value:  Size  Location     Type
 25619 ;;                  2  [STACK] int 
 25620 ;; Registers used:
 25621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 25622 ;; Tracked objects:
 25623 ;;		On entry : 0/0
 25624 ;;		On exit  : 0/0
 25625 ;;		Unchanged: 0/0
 25626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25631 ;;Total ram usage:        0 bytes
 25632 ;; Hardware stack levels used:    1
 25633 ;; Hardware stack levels required when called:   17
 25634 ;; This function calls:
 25635 ;;		_putch
 25636 ;; This function is called by:
 25637 ;;		_pad
 25638 ;;		_stoa
 25639 ;;		_vfpfcnvrt
 25640 ;;		_fputs
 25641 ;; This function uses a reentrant model
 25642 ;;
 25643                           
 25644                           	psect	text94
 25645  01A3FC                     __ptext94:
 25646                           	opt callstack 0
 25647  01A3FC                     _fputc:
 25648                           	opt callstack 0
 25649                           
 25650                           ;stkvar	_fp @ sp[(0)+-4]
 25651                           
 25652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25653                           ;incstack = 0
 25654 ;; hardware stack exceeded
 25655  01A3FC  0EFC               	movlw	-4
 25656  01A3FE  006F FF8C  F001    	movff	plusw1,btemp
 25657  01A404  0EFD               	movlw	-3
 25658  01A406  50E3               	movf	plusw1,w,c
 25659  01A408  1001               	iorwf	btemp^0,w,c
 25660  01A40A  B4D8               	btfsc	status,2,c
 25661  01A40C  D009               	goto	u11690
 25662                           
 25663                           ;stkvar	_fp @ sp[(0)+-4]
 25664  01A40E  0EFC               	movlw	-4
 25665  01A410  006F FF8C  F001    	movff	plusw1,btemp
 25666  01A416  0EFD               	movlw	-3
 25667  01A418  50E3               	movf	plusw1,w,c
 25668  01A41A  1001               	iorwf	btemp^0,w,c
 25669  01A41C  A4D8               	btfss	status,2,c
 25670  01A41E  D006               	goto	l13012
 25671  01A420                     u11690:
 25672                           
 25673                           ;stkvar	_c @ sp[(0)+-2]
 25674  01A420  0EFE               	movlw	-2
 25675  01A422  50E3               	movf	plusw1,w,c
 25676  01A424  6EE6               	movwf	postinc1,c
 25677  01A426  ECE8  F0E8         	call	_putch	;wreg free
 25678  01A42A  D075               	goto	l3448
 25679  01A42C                     l13012:
 25680                           
 25681                           ;stkvar	_fp @ sp[(0)+-4]
 25682  01A42C  0EFC               	movlw	-4
 25683  01A42E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25684  01A434  0EFD               	movlw	-3
 25685  01A436  006F FF8C  F00C    	movff	plusw1,btemp+11
 25686  01A43C  0E04               	movlw	4
 25687  01A43E  240B               	addwf	(btemp+10)^0,w,c
 25688  01A440  6ED9               	movwf	fsr2l,c
 25689  01A442  0E00               	movlw	0
 25690  01A444  200C               	addwfc	(btemp+11)^0,w,c
 25691  01A446  6EDA               	movwf	fsr2h,c
 25692  01A448  50DE               	movf	postinc2,w,c
 25693  01A44A  10DE               	iorwf	postinc2,w,c
 25694  01A44C  B4D8               	btfsc	status,2,c
 25695  01A44E  D026               	goto	u11710
 25696                           
 25697                           ;stkvar	_fp @ sp[(0)+-4]
 25698  01A450  0EFC               	movlw	-4
 25699  01A452  006F FF8C  F00B    	movff	plusw1,btemp+10
 25700  01A458  0EFD               	movlw	-3
 25701  01A45A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25702  01A460  0E04               	movlw	4
 25703  01A462  240B               	addwf	(btemp+10)^0,w,c
 25704  01A464  6ED9               	movwf	fsr2l,c
 25705  01A466  0E00               	movlw	0
 25706  01A468  200C               	addwfc	(btemp+11)^0,w,c
 25707  01A46A  6EDA               	movwf	fsr2h,c
 25708                           
 25709                           ;stkvar	_fp @ sp[(0)+-4]
 25710  01A46C  0EFC               	movlw	-4
 25711  01A46E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25712  01A474  0EFD               	movlw	-3
 25713  01A476  006F FF8C  F00C    	movff	plusw1,btemp+11
 25714  01A47C  0E02               	movlw	2
 25715  01A47E  240B               	addwf	(btemp+10)^0,w,c
 25716  01A480  6EE9               	movwf	fsr0l,c
 25717  01A482  0E00               	movlw	0
 25718  01A484  200C               	addwfc	(btemp+11)^0,w,c
 25719  01A486  6EEA               	movwf	fsr0h,c
 25720  01A488  50DE               	movf	postinc2,w,c
 25721  01A48A  5CEE               	subwf	postinc0,w,c
 25722  01A48C  50EE               	movf	postinc0,w,c
 25723  01A48E  0A80               	xorlw	128
 25724  01A490  6E01               	movwf	btemp^0,c
 25725  01A492  50DE               	movf	postinc2,w,c
 25726  01A494  0A80               	xorlw	128
 25727  01A496  5801               	subwfb	btemp^0,w,c
 25728  01A498  B0D8               	btfsc	status,0,c
 25729  01A49A  D03D               	goto	l3448
 25730  01A49C                     u11710:
 25731                           
 25732                           ;stkvar	_c @ sp[(0)+-2]
 25733                           ;stkvar	_fp @ sp[(0)+-4]
 25734  01A49C  0EFC               	movlw	-4
 25735  01A49E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25736  01A4A4  0EFD               	movlw	-3
 25737  01A4A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25738  01A4AC  0E02               	movlw	2
 25739  01A4AE  240B               	addwf	(btemp+10)^0,w,c
 25740  01A4B0  6ED9               	movwf	fsr2l,c
 25741  01A4B2  0E00               	movlw	0
 25742  01A4B4  200C               	addwfc	(btemp+11)^0,w,c
 25743  01A4B6  6EDA               	movwf	fsr2h,c
 25744  01A4B8  006F FF78  F00B    	movff	postinc2,btemp+10
 25745  01A4BE  006F FF74  F00C    	movff	postdec2,btemp+11
 25746                           
 25747                           ;stkvar	_fp @ sp[(0)+-4]
 25748  01A4C4  0EFC               	movlw	-4
 25749  01A4C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 25750  01A4CC  0EFD               	movlw	-3
 25751  01A4CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 25752  01A4D4  006F FF78  F009    	movff	postinc2,btemp+8
 25753  01A4DA  006F FF74  F00A    	movff	postdec2,btemp+9
 25754  01A4E0  500B               	movf	(btemp+10)^0,w,c
 25755  01A4E2  2409               	addwf	(btemp+8)^0,w,c
 25756  01A4E4  6ED9               	movwf	fsr2l,c
 25757  01A4E6  500C               	movf	(btemp+11)^0,w,c
 25758  01A4E8  200A               	addwfc	(btemp+9)^0,w,c
 25759  01A4EA  6EDA               	movwf	fsr2h,c
 25760  01A4EC  0EFE               	movlw	-2
 25761  01A4EE  006F FF8F FFDF     	movff	plusw1,indf2
 25762                           
 25763                           ;stkvar	_fp @ sp[(0)+-4]
 25764  01A4F4  0EFC               	movlw	-4
 25765  01A4F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 25766  01A4FC  0EFD               	movlw	-3
 25767  01A4FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25768  01A504  0E02               	movlw	2
 25769  01A506  240B               	addwf	(btemp+10)^0,w,c
 25770  01A508  6ED9               	movwf	fsr2l,c
 25771  01A50A  0E00               	movlw	0
 25772  01A50C  200C               	addwfc	(btemp+11)^0,w,c
 25773  01A50E  6EDA               	movwf	fsr2h,c
 25774  01A510  2ADE               	incf	postinc2,f,c
 25775  01A512  0E00               	movlw	0
 25776  01A514  22DD               	addwfc	postdec2,f,c
 25777  01A516                     l3448:
 25778                           
 25779                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25780  01A516  52E5               	movf	postdec1,f,c
 25781  01A518  52E5               	movf	postdec1,f,c
 25782  01A51A  52E5               	movf	postdec1,f,c
 25783  01A51C  52E5               	movf	postdec1,f,c
 25784  01A51E  0012               	return		;funcret
 25785  01A520                     __end_of_fputc:
 25786                           	opt callstack 0
 25787                           
 25788 ;; *************** function _putch *****************
 25789 ;; Defined at:
 25790 ;;		line 421 in file "eadog.c"
 25791 ;; Parameters:    Size  Location     Type
 25792 ;;  c               1  [STACK] unsigned char 
 25793 ;; Auto vars:     Size  Location     Type
 25794 ;;		None
 25795 ;; Return value:  Size  Location     Type
 25796 ;;                  1  [STACK] void 
 25797 ;; Registers used:
 25798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25799 ;; Tracked objects:
 25800 ;;		On entry : 0/0
 25801 ;;		On exit  : 0/0
 25802 ;;		Unchanged: 0/0
 25803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25808 ;;Total ram usage:        0 bytes
 25809 ;; Hardware stack levels used:    1
 25810 ;; Hardware stack levels required when called:   16
 25811 ;; This function calls:
 25812 ;;		_ringBufS_put_dma
 25813 ;; This function is called by:
 25814 ;;		_fputc
 25815 ;; This function uses a reentrant model
 25816 ;;
 25817                           
 25818                           	psect	text95
 25819  01D1D0                     __ptext95:
 25820                           	opt callstack 0
 25821  01D1D0                     _putch:
 25822                           	opt callstack 0
 25823                           
 25824                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 25825                           ;stkvar	_c @ sp[(0)+-1]
 25826                           
 25827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25828                           ;incstack = 0
 25829 ;; hardware stack exceeded
 25830  01D1D0  0EFF               	movlw	-1
 25831  01D1D2  50E3               	movf	plusw1,w,c
 25832  01D1D4  6EE6               	movwf	postinc1,c
 25833  01D1D6  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 25834  01D1DC  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 25835  01D1E2  ECFF  F0DA         	call	_ringBufS_put_dma	;wreg free
 25836                           
 25837                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 25838  01D1E6  52E5               	movf	postdec1,f,c
 25839  01D1E8  0012               	return		;funcret
 25840  01D1EA                     __end_of_putch:
 25841                           	opt callstack 0
 25842                           
 25843 ;; *************** function _ringBufS_put_dma *****************
 25844 ;; Defined at:
 25845 ;;		line 67 in file "ringbufs.c"
 25846 ;; Parameters:    Size  Location     Type
 25847 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25848 ;;		 -> ring_buf1(67), 
 25849 ;;  c               1  [STACK] const unsigned char 
 25850 ;; Auto vars:     Size  Location     Type
 25851 ;;		None
 25852 ;; Return value:  Size  Location     Type
 25853 ;;                  1  [STACK] void 
 25854 ;; Registers used:
 25855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25856 ;; Tracked objects:
 25857 ;;		On entry : 0/0
 25858 ;;		On exit  : 0/0
 25859 ;;		Unchanged: 0/0
 25860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25865 ;;Total ram usage:        0 bytes
 25866 ;; Hardware stack levels used:    1
 25867 ;; Hardware stack levels required when called:   15
 25868 ;; This function calls:
 25869 ;;		Nothing
 25870 ;; This function is called by:
 25871 ;;		_putch
 25872 ;; This function uses a reentrant model
 25873 ;;
 25874                           
 25875                           	psect	text96
 25876  01B5FE                     __ptext96:
 25877                           	opt callstack 0
 25878  01B5FE                     _ringBufS_put_dma:
 25879                           	opt callstack 0
 25880                           
 25881                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 25882                           ;stkvar	__this @ sp[(0)+-2]
 25883                           
 25884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25885                           ;incstack = 0
 25886 ;; hardware stack exceeded
 25887  01B5FE  0EFE               	movlw	-2
 25888  01B600  006F FF8C  F00B    	movff	plusw1,btemp+10
 25889  01B606  0EFF               	movlw	-1
 25890  01B608  006F FF8C  F00C    	movff	plusw1,btemp+11
 25891  01B60E  0E42               	movlw	66
 25892  01B610  240B               	addwf	(btemp+10)^0,w,c
 25893  01B612  6ED9               	movwf	fsr2l,c
 25894  01B614  0E00               	movlw	0
 25895  01B616  200C               	addwfc	(btemp+11)^0,w,c
 25896  01B618  6EDA               	movwf	fsr2h,c
 25897  01B61A  0E40               	movlw	64
 25898  01B61C  60DF               	cpfslt	indf2,c
 25899  01B61E  D040               	goto	l1713
 25900                           
 25901                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 25902                           ;stkvar	_c @ sp[(0)+-3]
 25903                           ;stkvar	__this @ sp[(0)+-2]
 25904  01B620  0EFE               	movlw	-2
 25905  01B622  006F FF8C  F00B    	movff	plusw1,btemp+10
 25906  01B628  0EFF               	movlw	-1
 25907  01B62A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25908  01B630  0E40               	movlw	64
 25909  01B632  240B               	addwf	(btemp+10)^0,w,c
 25910  01B634  6ED9               	movwf	fsr2l,c
 25911  01B636  0E00               	movlw	0
 25912  01B638  200C               	addwfc	(btemp+11)^0,w,c
 25913  01B63A  6EDA               	movwf	fsr2h,c
 25914  01B63C  50DF               	movf	indf2,w,c
 25915  01B63E  6E0C               	movwf	(btemp+11)^0,c
 25916                           
 25917                           ;stkvar	__this @ sp[(0)+-2]
 25918  01B640  0EFE               	movlw	-2
 25919  01B642  006F FF8C  F009    	movff	plusw1,btemp+8
 25920  01B648  0EFF               	movlw	-1
 25921  01B64A  006F FF8C  F00A    	movff	plusw1,btemp+9
 25922  01B650  500C               	movf	(btemp+11)^0,w,c
 25923  01B652  2409               	addwf	(btemp+8)^0,w,c
 25924  01B654  6ED9               	movwf	fsr2l,c
 25925  01B656  0E00               	movlw	0
 25926  01B658  200A               	addwfc	(btemp+9)^0,w,c
 25927  01B65A  6EDA               	movwf	fsr2h,c
 25928  01B65C  0EFD               	movlw	-3
 25929  01B65E  006F FF8F FFDF     	movff	plusw1,indf2
 25930                           
 25931                           ;ringbufs.c: 71:   ++_this->head;
 25932                           ;stkvar	__this @ sp[(0)+-2]
 25933  01B664  0EFE               	movlw	-2
 25934  01B666  006F FF8C  F00B    	movff	plusw1,btemp+10
 25935  01B66C  0EFF               	movlw	-1
 25936  01B66E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25937  01B674  0E40               	movlw	64
 25938  01B676  240B               	addwf	(btemp+10)^0,w,c
 25939  01B678  6ED9               	movwf	fsr2l,c
 25940  01B67A  0E00               	movlw	0
 25941  01B67C  200C               	addwfc	(btemp+11)^0,w,c
 25942  01B67E  6EDA               	movwf	fsr2h,c
 25943  01B680  2ADF               	incf	indf2,f,c
 25944                           
 25945                           ;ringbufs.c: 72:   ++_this->count;
 25946                           ;stkvar	__this @ sp[(0)+-2]
 25947  01B682  0EFE               	movlw	-2
 25948  01B684  006F FF8C  F00B    	movff	plusw1,btemp+10
 25949  01B68A  0EFF               	movlw	-1
 25950  01B68C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25951  01B692  0E42               	movlw	66
 25952  01B694  240B               	addwf	(btemp+10)^0,w,c
 25953  01B696  6ED9               	movwf	fsr2l,c
 25954  01B698  0E00               	movlw	0
 25955  01B69A  200C               	addwfc	(btemp+11)^0,w,c
 25956  01B69C  6EDA               	movwf	fsr2h,c
 25957  01B69E  2ADF               	incf	indf2,f,c
 25958  01B6A0                     l1713:
 25959                           
 25960                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 25961  01B6A0  52E5               	movf	postdec1,f,c
 25962  01B6A2  52E5               	movf	postdec1,f,c
 25963  01B6A4  52E5               	movf	postdec1,f,c
 25964  01B6A6  0012               	return		;funcret
 25965  01B6A8                     __end_of_ringBufS_put_dma:
 25966                           	opt callstack 0
 25967                           
 25968 ;; *************** function _atoi *****************
 25969 ;; Defined at:
 25970 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 25971 ;; Parameters:    Size  Location     Type
 25972 ;;  s               2  [STACK] PTR const unsigned char 
 25973 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 25974 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 25975 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 25976 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 25977 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 25978 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 25979 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 25980 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 25981 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 25982 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 25983 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 25984 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 25985 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 25986 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 25987 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 25988 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 25989 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 25990 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 25991 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 25992 ;;		 -> STR_1(21), 
 25993 ;; Auto vars:     Size  Location     Type
 25994 ;;  n               2  [STACK] int 
 25995 ;;  neg             2  [STACK] int 
 25996 ;; Return value:  Size  Location     Type
 25997 ;;                  2  [STACK] int 
 25998 ;; Registers used:
 25999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 26000 ;; Tracked objects:
 26001 ;;		On entry : 0/0
 26002 ;;		On exit  : 0/0
 26003 ;;		Unchanged: 0/0
 26004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26009 ;;Total ram usage:        0 bytes
 26010 ;; Hardware stack levels used:    1
 26011 ;; Hardware stack levels required when called:   16
 26012 ;; This function calls:
 26013 ;;		_isdigit
 26014 ;;		_isspace
 26015 ;; This function is called by:
 26016 ;;		_vfpfcnvrt
 26017 ;; This function uses a reentrant model
 26018 ;;
 26019                           
 26020                           	psect	text97
 26021  017F10                     __ptext97:
 26022                           	opt callstack 0
 26023  017F10                     _atoi:
 26024                           	opt callstack 0
 26025                           
 26026                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26027  017F10  0E09               	movlw	9
 26028  017F12  26E1               	addwf	fsr1l,f,c
 26029  017F14  0E00               	movlw	0
 26030  017F16  22E2               	addwfc	fsr1h,f,c
 26031                           
 26032                           ;stkvar	_n @ sp[(-9)+5]
 26033                           
 26034                           ;incstack = 0
 26035 ;; hardware stack exceeded
 26036  017F18  0EFC               	movlw	-4
 26037  017F1A  6AE3               	clrf	plusw1,c
 26038  017F1C  0EFD               	movlw	-3
 26039  017F1E  6AE3               	clrf	plusw1,c
 26040                           
 26041                           ;stkvar	_neg @ sp[(-9)+7]
 26042  017F20  0EFE               	movlw	-2
 26043  017F22  6AE3               	clrf	plusw1,c
 26044  017F24  0EFF               	movlw	-1
 26045  017F26  6AE3               	clrf	plusw1,c
 26046  017F28  D011               	goto	l10048
 26047  017F2A                     l10046:
 26048                           
 26049                           ;stkvar	_s @ sp[(-9)+-2]
 26050  017F2A  0EF5               	movlw	-11
 26051  017F2C  50E3               	movf	plusw1,w,c
 26052  017F2E  0F01               	addlw	1
 26053  017F30  6E01               	movwf	btemp^0,c
 26054  017F32  0EF5               	movlw	-11
 26055  017F34  0060  F007  FFE3   	movff	btemp,plusw1
 26056  017F3A  6A01               	clrf	btemp^0,c
 26057  017F3C  0EF6               	movlw	-10
 26058  017F3E  50E3               	movf	plusw1,w,c
 26059  017F40  2001               	addwfc	btemp^0,w,c
 26060  017F42  6E01               	movwf	btemp^0,c
 26061  017F44  0EF6               	movlw	-10
 26062  017F46  0060  F007  FFE3   	movff	btemp,plusw1
 26063  017F4C                     l10048:
 26064                           
 26065                           ;stkvar	_atoi$6715 @ sp[(-9)+4]
 26066  017F4C  0EFB               	movlw	-5
 26067  017F4E  6AE3               	clrf	plusw1,c
 26068  017F50  2AE3               	incf	plusw1,f,c
 26069                           
 26070                           ;stkvar	_s @ sp[(-9)+-2]
 26071  017F52  50E1               	movf	fsr1l,w,c
 26072  017F54  0FF5               	addlw	-11
 26073  017F56  6ED9               	movwf	fsr2l,c
 26074  017F58  50E2               	movf	fsr1h,w,c
 26075  017F5A  6EDA               	movwf	fsr2h,c
 26076  017F5C  0EFF               	movlw	255
 26077  017F5E  22DA               	addwfc	fsr2h,f,c
 26078  017F60  006F FF7B FFF6     	movff	postinc2,tblptrl
 26079  017F66  006F FF77 FFF7     	movff	postdec2,tblptrh
 26080  017F6C                     	if	0	;tblptru may be non-zero
 26081  017F6C                     	endif
 26082  017F6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26083  017F6C  0E00               	movlw	low (__mediumconst shr (0+16))
 26084  017F6E  6EF8               	movwf	tblptru,c
 26085  017F70                     	endif
 26086  017F70  0008               	tblrd		*
 26087  017F72  50F5               	movf	tablat,w,c
 26088  017F74  0A20               	xorlw	32
 26089  017F76  B4D8               	btfsc	status,2,c
 26090  017F78  D023               	goto	l10056
 26091  017F7A  0EF7               	movlw	247
 26092  017F7C  6E0B               	movwf	(btemp+10)^0,c
 26093  017F7E  0EFF               	movlw	255
 26094  017F80  6E0C               	movwf	(btemp+11)^0,c
 26095                           
 26096                           ;stkvar	_s @ sp[(-9)+-2]
 26097  017F82  50E1               	movf	fsr1l,w,c
 26098  017F84  0FF5               	addlw	-11
 26099  017F86  6ED9               	movwf	fsr2l,c
 26100  017F88  50E2               	movf	fsr1h,w,c
 26101  017F8A  6EDA               	movwf	fsr2h,c
 26102  017F8C  0EFF               	movlw	255
 26103  017F8E  22DA               	addwfc	fsr2h,f,c
 26104  017F90  006F FF7B FFF6     	movff	postinc2,tblptrl
 26105  017F96  006F FF77 FFF7     	movff	postdec2,tblptrh
 26106  017F9C                     	if	0	;tblptru may be non-zero
 26107  017F9C                     	endif
 26108  017F9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26109  017F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 26110  017F9E  6EF8               	movwf	tblptru,c
 26111  017FA0                     	endif
 26112  017FA0  0008               	tblrd		*
 26113  017FA2  50F5               	movf	tablat,w,c
 26114  017FA4  6E09               	movwf	(btemp+8)^0,c
 26115  017FA6  6A0A               	clrf	(btemp+9)^0,c
 26116  017FA8  500B               	movf	(btemp+10)^0,w,c
 26117  017FAA  2609               	addwf	(btemp+8)^0,f,c
 26118  017FAC  500C               	movf	(btemp+11)^0,w,c
 26119  017FAE  220A               	addwfc	(btemp+9)^0,f,c
 26120  017FB0  500A               	movf	(btemp+9)^0,w,c
 26121  017FB2  E104               	bnz	u9010
 26122  017FB4  0E05               	movlw	5
 26123  017FB6  5C09               	subwf	(btemp+8)^0,w,c
 26124  017FB8  A0D8               	btfss	status,0,c
 26125  017FBA  D002               	goto	l10056
 26126  017FBC                     u9010:
 26127                           
 26128                           ;stkvar	_atoi$6715 @ sp[(-9)+4]
 26129  017FBC  0EFB               	movlw	-5
 26130  017FBE  6AE3               	clrf	plusw1,c
 26131  017FC0                     l10056:
 26132                           
 26133                           ;stkvar	_atoi$6715 @ sp[(-9)+4]
 26134  017FC0  0EFB               	movlw	-5
 26135  017FC2  50E3               	movf	plusw1,w,c
 26136  017FC4  6E0B               	movwf	(btemp+10)^0,c
 26137  017FC6  6A0C               	clrf	(btemp+11)^0,c
 26138                           
 26139                           ;stkvar	_atoi$6714 @ sp[(-9)+2]
 26140  017FC8  0EF9               	movlw	-7
 26141  017FCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26142  017FD0  0EFA               	movlw	-6
 26143  017FD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26144                           
 26145                           ;stkvar	_atoi$6714 @ sp[(-9)+2]
 26146  017FD8  0EF9               	movlw	-7
 26147  017FDA  006F FF8C  F001    	movff	plusw1,btemp
 26148  017FE0  0EFA               	movlw	-6
 26149  017FE2  50E3               	movf	plusw1,w,c
 26150  017FE4  1001               	iorwf	btemp^0,w,c
 26151  017FE6  B4D8               	btfsc	status,2,c
 26152  017FE8  D01F               	goto	l10066
 26153  017FEA  D79F               	goto	l10046
 26154  017FEC                     l10062:
 26155  017FEC  0E01               	movlw	1
 26156  017FEE  6E0B               	movwf	(btemp+10)^0,c
 26157  017FF0  0E00               	movlw	0
 26158  017FF2  6E0C               	movwf	(btemp+11)^0,c
 26159                           
 26160                           ;stkvar	_neg @ sp[(-9)+7]
 26161  017FF4  0EFE               	movlw	-2
 26162  017FF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26163  017FFC  0EFF               	movlw	-1
 26164  017FFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26165  018004                     l10064:
 26166                           
 26167                           ;stkvar	_s @ sp[(-9)+-2]
 26168  018004  0EF5               	movlw	-11
 26169  018006  50E3               	movf	plusw1,w,c
 26170  018008  0F01               	addlw	1
 26171  01800A  6E01               	movwf	btemp^0,c
 26172  01800C  0EF5               	movlw	-11
 26173  01800E  0060  F007  FFE3   	movff	btemp,plusw1
 26174  018014  6A01               	clrf	btemp^0,c
 26175  018016  0EF6               	movlw	-10
 26176  018018  50E3               	movf	plusw1,w,c
 26177  01801A  2001               	addwfc	btemp^0,w,c
 26178  01801C  6E01               	movwf	btemp^0,c
 26179  01801E  0EF6               	movlw	-10
 26180  018020  0060  F007  FFE3   	movff	btemp,plusw1
 26181  018026  D053               	goto	l10072
 26182  018028                     l10066:
 26183                           
 26184                           ;stkvar	_s @ sp[(-9)+-2]
 26185  018028  50E1               	movf	fsr1l,w,c
 26186  01802A  0FF5               	addlw	-11
 26187  01802C  6ED9               	movwf	fsr2l,c
 26188  01802E  50E2               	movf	fsr1h,w,c
 26189  018030  6EDA               	movwf	fsr2h,c
 26190  018032  0EFF               	movlw	255
 26191  018034  22DA               	addwfc	fsr2h,f,c
 26192  018036  006F FF7B FFF6     	movff	postinc2,tblptrl
 26193  01803C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26194  018042                     	if	0	;tblptru may be non-zero
 26195  018042                     	endif
 26196  018042                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26197  018042  0E00               	movlw	low (__mediumconst shr (0+16))
 26198  018044  6EF8               	movwf	tblptru,c
 26199  018046                     	endif
 26200  018046  0008               	tblrd		*
 26201  018048  50F5               	movf	tablat,w,c
 26202  01804A  6E0B               	movwf	(btemp+10)^0,c
 26203  01804C  6A0C               	clrf	(btemp+11)^0,c
 26204                           
 26205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26206                           ; Switch size 1, requested type "simple"
 26207                           ; Number of cases is 1, Range of values is 0 to 0
 26208                           ; switch strategies available:
 26209                           ; Name         Instructions Cycles
 26210                           ; simple_byte            4     3 (average)
 26211                           ;	Chosen strategy is simple_byte
 26212  01804E  500C               	movf	(btemp+11)^0,w,c
 26213  018050  0A00               	xorlw	0	; case 0
 26214  018052  A4D8               	btfss	status,2,c
 26215  018054  D03C               	goto	l10072
 26216                           
 26217                           ; Switch size 1, requested type "simple"
 26218                           ; Number of cases is 2, Range of values is 43 to 45
 26219                           ; switch strategies available:
 26220                           ; Name         Instructions Cycles
 26221                           ; simple_byte            7     4 (average)
 26222                           ;	Chosen strategy is simple_byte
 26223  018056  500B               	movf	(btemp+10)^0,w,c
 26224  018058  0A2B               	xorlw	43	; case 43
 26225  01805A  B4D8               	btfsc	status,2,c
 26226  01805C  D7D3               	goto	l10064
 26227  01805E  0A06               	xorlw	6	; case 45
 26228  018060  B4D8               	btfsc	status,2,c
 26229  018062  D7C4               	goto	l10062
 26230  018064  D034               	goto	l10072
 26231  018066                     l10068:
 26232                           
 26233                           ;stkvar	_n @ sp[(-9)+5]
 26234  018066  0EFC               	movlw	-4
 26235  018068  006F FF8C  F00B    	movff	plusw1,btemp+10
 26236  01806E  0EFD               	movlw	-3
 26237  018070  006F FF8C  F00C    	movff	plusw1,btemp+11
 26238  018076  0E0A               	movlw	10
 26239  018078  020B               	mulwf	(btemp+10)^0,c
 26240  01807A  006F FFCC  F009    	movff	prodl,btemp+8
 26241  018080  006F FFD0  F00A    	movff	prodh,btemp+9
 26242  018086  020C               	mulwf	(btemp+11)^0,c
 26243  018088  50F3               	movf	prodl,w,c
 26244  01808A  260A               	addwf	(btemp+9)^0,f,c
 26245                           
 26246                           ;stkvar	_s @ sp[(-9)+-2]
 26247  01808C  50E1               	movf	fsr1l,w,c
 26248  01808E  0FF5               	addlw	-11
 26249  018090  6ED9               	movwf	fsr2l,c
 26250  018092  50E2               	movf	fsr1h,w,c
 26251  018094  6EDA               	movwf	fsr2h,c
 26252  018096  0EFF               	movlw	255
 26253  018098  22DA               	addwfc	fsr2h,f,c
 26254  01809A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26255  0180A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 26256  0180A6                     	if	0	;tblptru may be non-zero
 26257  0180A6                     	endif
 26258  0180A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26259  0180A6  0E00               	movlw	low (__mediumconst shr (0+16))
 26260  0180A8  6EF8               	movwf	tblptru,c
 26261  0180AA                     	endif
 26262  0180AA  0008               	tblrd		*
 26263  0180AC  50F5               	movf	tablat,w,c
 26264  0180AE  5E09               	subwf	(btemp+8)^0,f,c
 26265  0180B0  0E00               	movlw	0
 26266  0180B2  5A0A               	subwfb	(btemp+9)^0,f,c
 26267  0180B4  0E30               	movlw	48
 26268  0180B6  2609               	addwf	(btemp+8)^0,f,c
 26269  0180B8  0E00               	movlw	0
 26270  0180BA  220A               	addwfc	(btemp+9)^0,f,c
 26271                           
 26272                           ;stkvar	_n @ sp[(-9)+5]
 26273  0180BC  0EFC               	movlw	-4
 26274  0180BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 26275  0180C4  0EFD               	movlw	-3
 26276  0180C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26277  0180CC  D79B               	goto	l10064
 26278  0180CE                     l10072:
 26279  0180CE  0ED0               	movlw	208
 26280  0180D0  6E0B               	movwf	(btemp+10)^0,c
 26281  0180D2  0EFF               	movlw	255
 26282  0180D4  6E0C               	movwf	(btemp+11)^0,c
 26283                           
 26284                           ;stkvar	_s @ sp[(-9)+-2]
 26285  0180D6  50E1               	movf	fsr1l,w,c
 26286  0180D8  0FF5               	addlw	-11
 26287  0180DA  6ED9               	movwf	fsr2l,c
 26288  0180DC  50E2               	movf	fsr1h,w,c
 26289  0180DE  6EDA               	movwf	fsr2h,c
 26290  0180E0  0EFF               	movlw	255
 26291  0180E2  22DA               	addwfc	fsr2h,f,c
 26292  0180E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 26293  0180EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 26294  0180F0                     	if	0	;tblptru may be non-zero
 26295  0180F0                     	endif
 26296  0180F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26297  0180F0  0E00               	movlw	low (__mediumconst shr (0+16))
 26298  0180F2  6EF8               	movwf	tblptru,c
 26299  0180F4                     	endif
 26300  0180F4  0008               	tblrd		*
 26301  0180F6  50F5               	movf	tablat,w,c
 26302  0180F8  6E09               	movwf	(btemp+8)^0,c
 26303  0180FA  6A0A               	clrf	(btemp+9)^0,c
 26304  0180FC  500B               	movf	(btemp+10)^0,w,c
 26305  0180FE  2609               	addwf	(btemp+8)^0,f,c
 26306  018100  500C               	movf	(btemp+11)^0,w,c
 26307  018102  220A               	addwfc	(btemp+9)^0,f,c
 26308  018104  500A               	movf	(btemp+9)^0,w,c
 26309  018106  E106               	bnz	u9030
 26310  018108  0E0A               	movlw	10
 26311  01810A  5C09               	subwf	(btemp+8)^0,w,c
 26312  01810C  B0D8               	btfsc	status,0,c
 26313  01810E  D002               	goto	u9030
 26314  018110  0E01               	movlw	1
 26315  018112  D001               	goto	u9040
 26316  018114                     u9030:
 26317  018114  0E00               	movlw	0
 26318  018116                     u9040:
 26319  018116  6E0B               	movwf	(btemp+10)^0,c
 26320  018118  6A0C               	clrf	(btemp+11)^0,c
 26321                           
 26322                           ;stkvar	_atoi$6716 @ sp[(-9)+0]
 26323  01811A  0EF7               	movlw	-9
 26324  01811C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26325  018122  0EF8               	movlw	-8
 26326  018124  0060  F033  FFE3   	movff	btemp+11,plusw1
 26327                           
 26328                           ;stkvar	_atoi$6716 @ sp[(-9)+0]
 26329  01812A  0EF7               	movlw	-9
 26330  01812C  006F FF8C  F001    	movff	plusw1,btemp
 26331  018132  0EF8               	movlw	-8
 26332  018134  50E3               	movf	plusw1,w,c
 26333  018136  1001               	iorwf	btemp^0,w,c
 26334  018138  A4D8               	btfss	status,2,c
 26335  01813A  D795               	goto	l10068
 26336                           
 26337                           ;stkvar	_neg @ sp[(-9)+7]
 26338  01813C  0EFE               	movlw	-2
 26339  01813E  006F FF8C  F001    	movff	plusw1,btemp
 26340  018144  0EFF               	movlw	-1
 26341  018146  50E3               	movf	plusw1,w,c
 26342  018148  1001               	iorwf	btemp^0,w,c
 26343  01814A  A4D8               	btfss	status,2,c
 26344  01814C  D00E               	goto	l10082
 26345                           
 26346                           ;stkvar	_n @ sp[(-9)+5]
 26347  01814E  0EFC               	movlw	-4
 26348  018150  006F FF8C  F001    	movff	plusw1,btemp
 26349  018156  1E01               	comf	btemp^0,f,c
 26350  018158  0EFD               	movlw	-3
 26351  01815A  006F FF8C  F002    	movff	plusw1,btemp+1
 26352  018160  1E02               	comf	(btemp+1)^0,f,c
 26353  018162  2A01               	incf	btemp^0,f,c
 26354  018164  B4D8               	btfsc	status,2,c
 26355  018166  2A02               	incf	(btemp+1)^0,f,c
 26356  018168  D008               	goto	l3379
 26357  01816A                     l10082:
 26358                           
 26359                           ;stkvar	_n @ sp[(-9)+5]
 26360  01816A  0EFC               	movlw	-4
 26361  01816C  006F FF8C  F001    	movff	plusw1,btemp
 26362  018172  0EFD               	movlw	-3
 26363  018174  006F FF8C  F002    	movff	plusw1,btemp+1
 26364  01817A                     l3379:
 26365                           
 26366                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 26367  01817A  0EF5               	movlw	245
 26368  01817C  26E1               	addwf	fsr1l,f,c
 26369  01817E  0EFF               	movlw	255
 26370  018180  22E2               	addwfc	fsr1h,f,c
 26371  018182  0012               	return		;funcret
 26372  018184                     __end_of_atoi:
 26373                           	opt callstack 0
 26374                           
 26375 ;; *************** function _isspace *****************
 26376 ;; Defined at:
 26377 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 26378 ;; Parameters:    Size  Location     Type
 26379 ;;  c               2  [STACK] int 
 26380 ;; Auto vars:     Size  Location     Type
 26381 ;;		None
 26382 ;; Return value:  Size  Location     Type
 26383 ;;                  2  [STACK] int 
 26384 ;; Registers used:
 26385 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 26386 ;; Tracked objects:
 26387 ;;		On entry : 0/0
 26388 ;;		On exit  : 0/0
 26389 ;;		Unchanged: 0/0
 26390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26395 ;;Total ram usage:        0 bytes
 26396 ;; Hardware stack levels used:    1
 26397 ;; Hardware stack levels required when called:   15
 26398 ;; This function calls:
 26399 ;;		Nothing
 26400 ;; This function is called by:
 26401 ;;		_atoi
 26402 ;; This function uses a reentrant model
 26403 ;;
 26404                           
 26405                           	psect	text98
 26406  01C470                     __ptext98:
 26407                           	opt callstack 0
 26408  01C470                     _isspace:
 26409                           	opt callstack 0
 26410                           
 26411                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26412  01C470  52E6               	movf	postinc1,f,c
 26413                           
 26414                           ;stkvar	_isspace$6765 @ sp[(-1)+0]
 26415                           
 26416                           ;incstack = 0
 26417 ;; hardware stack exceeded
 26418  01C472  0EFF               	movlw	-1
 26419  01C474  6AE3               	clrf	plusw1,c
 26420  01C476  2AE3               	incf	plusw1,f,c
 26421                           
 26422                           ;stkvar	_c @ sp[(-1)+-2]
 26423  01C478  0EFD               	movlw	-3
 26424  01C47A  006F FF8C  F001    	movff	plusw1,btemp
 26425  01C480  0E20               	movlw	32
 26426  01C482  1801               	xorwf	btemp^0,w,c
 26427  01C484  E104               	bnz	u7900
 26428  01C486  0EFE               	movlw	-2
 26429  01C488  50E3               	movf	plusw1,w,c
 26430  01C48A  B4D8               	btfsc	status,2,c
 26431  01C48C  D012               	goto	l9466
 26432  01C48E                     u7900:
 26433                           
 26434                           ;stkvar	_c @ sp[(-1)+-2]
 26435  01C48E  0EFD               	movlw	-3
 26436  01C490  50E3               	movf	plusw1,w,c
 26437  01C492  0FF7               	addlw	247
 26438  01C494  6E0B               	movwf	(btemp+10)^0,c
 26439  01C496  0EFE               	movlw	-2
 26440  01C498  006F FF8C  F00C    	movff	plusw1,btemp+11
 26441  01C49E  0EFF               	movlw	255
 26442  01C4A0  220C               	addwfc	(btemp+11)^0,f,c
 26443  01C4A2  500C               	movf	(btemp+11)^0,w,c
 26444  01C4A4  E104               	bnz	u7910
 26445  01C4A6  0E05               	movlw	5
 26446  01C4A8  5C0B               	subwf	(btemp+10)^0,w,c
 26447  01C4AA  A0D8               	btfss	status,0,c
 26448  01C4AC  D002               	goto	l9466
 26449  01C4AE                     u7910:
 26450                           
 26451                           ;stkvar	_isspace$6765 @ sp[(-1)+0]
 26452  01C4AE  0EFF               	movlw	-1
 26453  01C4B0  6AE3               	clrf	plusw1,c
 26454  01C4B2                     l9466:
 26455                           
 26456                           ;stkvar	_isspace$6765 @ sp[(-1)+0]
 26457  01C4B2  0EFF               	movlw	-1
 26458  01C4B4  50E3               	movf	plusw1,w,c
 26459  01C4B6  6E01               	movwf	btemp^0,c
 26460  01C4B8  6A02               	clrf	(btemp+1)^0,c
 26461                           
 26462                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 26463  01C4BA  52E5               	movf	postdec1,f,c
 26464  01C4BC  52E5               	movf	postdec1,f,c
 26465  01C4BE  52E5               	movf	postdec1,f,c
 26466  01C4C0  0012               	return		;funcret
 26467  01C4C2                     __end_of_isspace:
 26468                           	opt callstack 0
 26469                           
 26470 ;; *************** function _isdigit *****************
 26471 ;; Defined at:
 26472 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 26473 ;; Parameters:    Size  Location     Type
 26474 ;;  c               2  [STACK] int 
 26475 ;; Auto vars:     Size  Location     Type
 26476 ;;		None
 26477 ;; Return value:  Size  Location     Type
 26478 ;;                  2  [STACK] int 
 26479 ;; Registers used:
 26480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 26481 ;; Tracked objects:
 26482 ;;		On entry : 0/0
 26483 ;;		On exit  : 0/0
 26484 ;;		Unchanged: 0/0
 26485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26490 ;;Total ram usage:        0 bytes
 26491 ;; Hardware stack levels used:    1
 26492 ;; Hardware stack levels required when called:   15
 26493 ;; This function calls:
 26494 ;;		Nothing
 26495 ;; This function is called by:
 26496 ;;		_vfpfcnvrt
 26497 ;;		_atoi
 26498 ;; This function uses a reentrant model
 26499 ;;
 26500                           
 26501                           	psect	text99
 26502  01CC56                     __ptext99:
 26503                           	opt callstack 0
 26504  01CC56                     _isdigit:
 26505                           	opt callstack 0
 26506                           
 26507                           ;stkvar	_c @ sp[(0)+-2]
 26508                           
 26509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26510                           ;incstack = 0
 26511 ;; hardware stack exceeded
 26512  01CC56  0EFE               	movlw	-2
 26513  01CC58  50E3               	movf	plusw1,w,c
 26514  01CC5A  0FD0               	addlw	208
 26515  01CC5C  6E0B               	movwf	(btemp+10)^0,c
 26516  01CC5E  0EFF               	movlw	-1
 26517  01CC60  006F FF8C  F00C    	movff	plusw1,btemp+11
 26518  01CC66  0EFF               	movlw	255
 26519  01CC68  220C               	addwfc	(btemp+11)^0,f,c
 26520  01CC6A  500C               	movf	(btemp+11)^0,w,c
 26521  01CC6C  E106               	bnz	u6750
 26522  01CC6E  0E0A               	movlw	10
 26523  01CC70  5C0B               	subwf	(btemp+10)^0,w,c
 26524  01CC72  B0D8               	btfsc	status,0,c
 26525  01CC74  D002               	goto	u6750
 26526  01CC76  0E01               	movlw	1
 26527  01CC78  D001               	goto	u6760
 26528  01CC7A                     u6750:
 26529  01CC7A  0E00               	movlw	0
 26530  01CC7C                     u6760:
 26531  01CC7C  6E01               	movwf	btemp^0,c
 26532  01CC7E  6A02               	clrf	(btemp+1)^0,c
 26533                           
 26534                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 26535  01CC80  52E5               	movf	postdec1,f,c
 26536  01CC82  52E5               	movf	postdec1,f,c
 26537  01CC84  0012               	return		;funcret
 26538  01CC86                     __end_of_isdigit:
 26539                           	opt callstack 0
 26540                           
 26541 ;; *************** function _set_vterm *****************
 26542 ;; Defined at:
 26543 ;;		line 107 in file "mconfig.c"
 26544 ;; Parameters:    Size  Location     Type
 26545 ;;  vterm           1  [STACK] const unsigned char 
 26546 ;; Auto vars:     Size  Location     Type
 26547 ;;		None
 26548 ;; Return value:  Size  Location     Type
 26549 ;;                  1  [STACK] unsigned char 
 26550 ;; Registers used:
 26551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 26552 ;; Tracked objects:
 26553 ;;		On entry : 0/2
 26554 ;;		On exit  : 0/0
 26555 ;;		Unchanged: 0/0
 26556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26561 ;;Total ram usage:        0 bytes
 26562 ;; Hardware stack levels used:    1
 26563 ;; Hardware stack levels required when called:   15
 26564 ;; This function calls:
 26565 ;;		Nothing
 26566 ;; This function is called by:
 26567 ;;		_main
 26568 ;;		_check_help
 26569 ;; This function uses a reentrant model
 26570 ;;
 26571                           
 26572                           	psect	text100
 26573  01D176                     __ptext100:
 26574                           	opt callstack 0
 26575  01D176                     _set_vterm:
 26576                           	opt callstack 15
 26577                           
 26578                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 26579                           ;stkvar	_vterm @ sp[(0)+-1]
 26580                           
 26581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26582                           ;incstack = 0
 26583  01D176  0EFF               	movlw	-1
 26584  01D178  006F FF8C  F00C    	movff	plusw1,btemp+11
 26585  01D17E  0E03               	movlw	3
 26586  01D180  160C               	andwf	(btemp+11)^0,f,c
 26587  01D182  EE22  F30A         	lfsr	2,_D+480
 26588  01D186  50DF               	movf	223,w,c
 26589  01D188  180C               	xorwf	(btemp+11)^0,w,c
 26590  01D18A  0BFE               	andlw	-2
 26591  01D18C  180C               	xorwf	(btemp+11)^0,w,c
 26592  01D18E  6EDF               	movwf	223,c
 26593                           
 26594                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 26595  01D190  52E5               	movf	postdec1,f,c
 26596  01D192  0012               	return		;funcret
 26597  01D194                     __end_of_set_vterm:
 26598                           	opt callstack 0
 26599                           
 26600 ;; *************** function _set_temp_display_help *****************
 26601 ;; Defined at:
 26602 ;;		line 211 in file "mconfig.c"
 26603 ;; Parameters:    Size  Location     Type
 26604 ;;  new_response    1  [STACK] const enum E16524
 26605 ;; Auto vars:     Size  Location     Type
 26606 ;;		None
 26607 ;; Return value:  Size  Location     Type
 26608 ;;                  1  [STACK] enum E16524
 26609 ;; Registers used:
 26610 ;;		wreg, fsr1l, fsr1h
 26611 ;; Tracked objects:
 26612 ;;		On entry : 0/1
 26613 ;;		On exit  : 3F/1
 26614 ;;		Unchanged: 0/0
 26615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26620 ;;Total ram usage:        0 bytes
 26621 ;; Hardware stack levels used:    1
 26622 ;; Hardware stack levels required when called:   15
 26623 ;; This function calls:
 26624 ;;		Nothing
 26625 ;; This function is called by:
 26626 ;;		_check_help
 26627 ;; This function uses a reentrant model
 26628 ;;
 26629                           
 26630                           	psect	text101
 26631  01D2F6                     __ptext101:
 26632                           	opt callstack 0
 26633  01D2F6                     _set_temp_display_help:
 26634                           	opt callstack 14
 26635                           
 26636                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 26637                           
 26638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26639                           ;incstack = 0
 26640  01D2F6  0101               	movlb	1	; () banked
 26641  01D2F8  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 26642                           
 26643                           ; BSR set to: 1
 26644                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 26645                           ;stkvar	_new_response_info @ sp[(0)+-1]
 26646  01D2FA  0EFF               	movlw	-1
 26647  01D2FC  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 26648                           
 26649                           ; BSR set to: 1
 26650                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 26651  01D302  52E5               	movf	postdec1,f,c
 26652  01D304  0012               	return		;funcret
 26653  01D306                     __end_of_set_temp_display_help:
 26654                           	opt callstack 0
 26655                           
 26656 ;; *************** function _set_display_info *****************
 26657 ;; Defined at:
 26658 ;;		line 200 in file "mconfig.c"
 26659 ;; Parameters:    Size  Location     Type
 26660 ;;  new_response    1  [STACK] const enum E16524
 26661 ;; Auto vars:     Size  Location     Type
 26662 ;;		None
 26663 ;; Return value:  Size  Location     Type
 26664 ;;                  1  [STACK] enum E17009
 26665 ;; Registers used:
 26666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26667 ;; Tracked objects:
 26668 ;;		On entry : 0/1
 26669 ;;		On exit  : 0/0
 26670 ;;		Unchanged: 0/0
 26671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26676 ;;Total ram usage:        0 bytes
 26677 ;; Hardware stack levels used:    1
 26678 ;; Hardware stack levels required when called:   16
 26679 ;; This function calls:
 26680 ;;		_TimerDone
 26681 ;; This function is called by:
 26682 ;;		_main
 26683 ;;		_check_help
 26684 ;; This function uses a reentrant model
 26685 ;;
 26686                           
 26687                           	psect	text102
 26688  01D194                     __ptext102:
 26689                           	opt callstack 0
 26690  01D194                     _set_display_info:
 26691                           	opt callstack 14
 26692                           
 26693                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 26694                           
 26695                           ; BSR set to: 1
 26696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26697                           ;incstack = 0
 26698  01D194  0E07               	movlw	7
 26699  01D196  6EE6               	movwf	postinc1,c
 26700  01D198  ECC5  F0E6         	call	_TimerDone	;wreg free
 26701  01D19C  5001               	movf	btemp^0,w,c
 26702  01D19E  B4D8               	btfsc	status,2,c
 26703  01D1A0  D006               	goto	l1848
 26704                           
 26705                           ;mconfig.c: 205:   old_info = V.response.info;
 26706  01D1A2  0101               	movlb	1	; () banked
 26707  01D1A4  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 26708                           
 26709                           ; BSR set to: 1
 26710                           ;mconfig.c: 206:   V.response.info = new_response_info;
 26711                           ;stkvar	_new_response_info @ sp[(0)+-1]
 26712  01D1A6  0EFF               	movlw	-1
 26713  01D1A8  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 26714  01D1AE                     l1848:
 26715                           
 26716                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 26717  01D1AE  52E5               	movf	postdec1,f,c
 26718  01D1B0  0012               	return		;funcret
 26719  01D1B2                     __end_of_set_display_info:
 26720                           	opt callstack 0
 26721                           
 26722 ;; *************** function _mode_lamp_dim *****************
 26723 ;; Defined at:
 26724 ;;		line 13 in file "mconfig.c"
 26725 ;; Parameters:    Size  Location     Type
 26726 ;;  level           2  [STACK] const unsigned short 
 26727 ;; Auto vars:     Size  Location     Type
 26728 ;;		None
 26729 ;; Return value:  Size  Location     Type
 26730 ;;                  1  [STACK] void 
 26731 ;; Registers used:
 26732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26733 ;; Tracked objects:
 26734 ;;		On entry : 0/1
 26735 ;;		On exit  : 0/0
 26736 ;;		Unchanged: 0/0
 26737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26742 ;;Total ram usage:        0 bytes
 26743 ;; Hardware stack levels used:    1
 26744 ;; Hardware stack levels required when called:   16
 26745 ;; This function calls:
 26746 ;;		_PWM8_LoadDutyValue
 26747 ;; This function is called by:
 26748 ;;		_main
 26749 ;;		_check_help
 26750 ;; This function uses a reentrant model
 26751 ;;
 26752                           
 26753                           	psect	text103
 26754  01D206                     __ptext103:
 26755                           	opt callstack 0
 26756  01D206                     _mode_lamp_dim:
 26757                           	opt callstack 14
 26758                           
 26759                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 26760                           ;stkvar	_level @ sp[(0)+-2]
 26761                           
 26762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26763                           ;incstack = 0
 26764  01D206  0EFE               	movlw	-2
 26765  01D208  006F FF8F FFE6     	movff	plusw1,postinc1
 26766  01D20E  006F FF8F FFE6     	movff	plusw1,postinc1
 26767  01D214  ECF5  F0E3         	call	_PWM8_LoadDutyValue	;wreg free
 26768                           
 26769                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 26770  01D218  52E5               	movf	postdec1,f,c
 26771  01D21A  52E5               	movf	postdec1,f,c
 26772  01D21C  0012               	return		;funcret
 26773  01D21E                     __end_of_mode_lamp_dim:
 26774                           	opt callstack 0
 26775                           
 26776 ;; *************** function _mode_lamp_bright *****************
 26777 ;; Defined at:
 26778 ;;		line 18 in file "mconfig.c"
 26779 ;; Parameters:    Size  Location     Type
 26780 ;;		None
 26781 ;; Auto vars:     Size  Location     Type
 26782 ;;		None
 26783 ;; Return value:  Size  Location     Type
 26784 ;;                  1  [STACK] void 
 26785 ;; Registers used:
 26786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26787 ;; Tracked objects:
 26788 ;;		On entry : 0/0
 26789 ;;		On exit  : 0/0
 26790 ;;		Unchanged: 0/0
 26791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26796 ;;Total ram usage:        0 bytes
 26797 ;; Hardware stack levels used:    1
 26798 ;; Hardware stack levels required when called:   16
 26799 ;; This function calls:
 26800 ;;		_PWM8_LoadDutyValue
 26801 ;; This function is called by:
 26802 ;;		_check_help
 26803 ;; This function uses a reentrant model
 26804 ;;
 26805                           
 26806                           	psect	text104
 26807  01D324                     __ptext104:
 26808                           	opt callstack 0
 26809  01D324                     _mode_lamp_bright:
 26810                           	opt callstack 13
 26811                           
 26812                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 26813                           
 26814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26815                           ;incstack = 0
 26816  01D324  0E2C               	movlw	44
 26817  01D326  6EE6               	movwf	postinc1,c
 26818  01D328  0E01               	movlw	1
 26819  01D32A  6EE6               	movwf	postinc1,c
 26820  01D32C  ECF5  F0E3         	call	_PWM8_LoadDutyValue	;wreg free
 26821                           
 26822                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26823  01D330  0012               	return		;funcret
 26824  01D332                     __end_of_mode_lamp_bright:
 26825                           	opt callstack 0
 26826                           
 26827 ;; *************** function _PWM8_LoadDutyValue *****************
 26828 ;; Defined at:
 26829 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 26830 ;; Parameters:    Size  Location     Type
 26831 ;;  dutyValue       2  [STACK] unsigned short 
 26832 ;; Auto vars:     Size  Location     Type
 26833 ;;		None
 26834 ;; Return value:  Size  Location     Type
 26835 ;;                  1  [STACK] void 
 26836 ;; Registers used:
 26837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26838 ;; Tracked objects:
 26839 ;;		On entry : 0/1
 26840 ;;		On exit  : 0/0
 26841 ;;		Unchanged: 0/0
 26842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26847 ;;Total ram usage:        0 bytes
 26848 ;; Hardware stack levels used:    1
 26849 ;; Hardware stack levels required when called:   15
 26850 ;; This function calls:
 26851 ;;		Nothing
 26852 ;; This function is called by:
 26853 ;;		_mode_lamp_dim
 26854 ;;		_mode_lamp_bright
 26855 ;; This function uses a reentrant model
 26856 ;;
 26857                           
 26858                           	psect	text105
 26859  01C7EA                     __ptext105:
 26860                           	opt callstack 0
 26861  01C7EA                     _PWM8_LoadDutyValue:
 26862                           	opt callstack 14
 26863                           
 26864                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 26865                           ;stkvar	_dutyValue @ sp[(0)+-2]
 26866                           
 26867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26868                           ;incstack = 0
 26869  01C7EA  0EFE               	movlw	-2
 26870  01C7EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 26871  01C7F2  0EFF               	movlw	-1
 26872  01C7F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26873  01C7FA  90D8               	bcf	status,0,c
 26874  01C7FC  320C               	rrcf	(btemp+11)^0,f,c
 26875  01C7FE  320B               	rrcf	(btemp+10)^0,f,c
 26876  01C800  90D8               	bcf	status,0,c
 26877  01C802  320C               	rrcf	(btemp+11)^0,f,c
 26878  01C804  320B               	rrcf	(btemp+10)^0,f,c
 26879  01C806  500B               	movf	(btemp+10)^0,w,c
 26880  01C808  6E61               	movwf	97,c	;volatile
 26881                           
 26882                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 26883                           ;stkvar	_dutyValue @ sp[(0)+-2]
 26884  01C80A  0EFE               	movlw	-2
 26885  01C80C  006F FF8C  F00C    	movff	plusw1,btemp+11
 26886  01C812  0E03               	movlw	3
 26887  01C814  160C               	andwf	(btemp+11)^0,f,c
 26888  01C816  0E06               	movlw	6
 26889  01C818  6E01               	movwf	btemp^0,c
 26890  01C81A                     u9915:
 26891  01C81A  90D8               	bcf	status,0,c
 26892  01C81C  360C               	rlcf	(btemp+11)^0,f,c
 26893  01C81E  2E01               	decfsz	btemp^0,f,c
 26894  01C820  D7FC               	goto	u9915
 26895  01C822  500C               	movf	(btemp+11)^0,w,c
 26896  01C824  6E60               	movwf	96,c	;volatile
 26897                           
 26898                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 26899  01C826  52E5               	movf	postdec1,f,c
 26900  01C828  52E5               	movf	postdec1,f,c
 26901  01C82A  0012               	return		;funcret
 26902  01C82C                     __end_of_PWM8_LoadDutyValue:
 26903                           	opt callstack 0
 26904                           
 26905 ;; *************** function _help_button *****************
 26906 ;; Defined at:
 26907 ;;		line 26 in file "mconfig.c"
 26908 ;; Parameters:    Size  Location     Type
 26909 ;;		None
 26910 ;; Auto vars:     Size  Location     Type
 26911 ;;		None
 26912 ;; Return value:  Size  Location     Type
 26913 ;;                  1  [STACK] _Bool 
 26914 ;; Registers used:
 26915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26916 ;; Tracked objects:
 26917 ;;		On entry : 0/1
 26918 ;;		On exit  : 0/0
 26919 ;;		Unchanged: 0/0
 26920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26925 ;;Total ram usage:        0 bytes
 26926 ;; Hardware stack levels used:    1
 26927 ;; Hardware stack levels required when called:   16
 26928 ;; This function calls:
 26929 ;;		_StartTimer
 26930 ;;		_TimerDone
 26931 ;; This function is called by:
 26932 ;;		_check_help
 26933 ;; This function uses a reentrant model
 26934 ;;
 26935                           
 26936                           	psect	text106
 26937  01CA1E                     __ptext106:
 26938                           	opt callstack 0
 26939  01CA1E                     _help_button:
 26940                           	opt callstack 13
 26941                           
 26942                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 26943                           
 26944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26945                           ;incstack = 0
 26946  01CA1E  B0CB               	btfsc	203,0,c	;volatile
 26947  01CA20  D00C               	goto	l1791
 26948                           
 26949                           ;mconfig.c: 29:   V.help = 1;
 26950  01CA22  0101               	movlb	1	; () banked
 26951  01CA24  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 26952                           
 26953                           ; BSR set to: 1
 26954                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 26955  01CA26  0E08               	movlw	8
 26956  01CA28  6EE6               	movwf	postinc1,c
 26957  01CA2A  ECC5  F0E6         	call	_TimerDone	;wreg free
 26958  01CA2E  5001               	movf	btemp^0,w,c
 26959  01CA30  B4D8               	btfsc	status,2,c
 26960  01CA32  D003               	goto	l1791
 26961                           
 26962                           ;mconfig.c: 31:    return 1;
 26963  01CA34  0E01               	movlw	1
 26964  01CA36  6E01               	movwf	btemp^0,c
 26965  01CA38  0012               	return	
 26966  01CA3A                     l1791:
 26967                           
 26968                           ;mconfig.c: 34:  if (!V.help)
 26969  01CA3A  0101               	movlb	1	; () banked
 26970  01CA3C  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 26971  01CA3E  D008               	goto	l11412
 26972                           
 26973                           ; BSR set to: 1
 26974                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 26975  01CA40  0E2C               	movlw	44
 26976  01CA42  6EE6               	movwf	postinc1,c
 26977  01CA44  0E01               	movlw	1
 26978  01CA46  6EE6               	movwf	postinc1,c
 26979  01CA48  0E08               	movlw	8
 26980  01CA4A  6EE6               	movwf	postinc1,c
 26981  01CA4C  EC56  F0E4         	call	_StartTimer	;wreg free
 26982  01CA50                     l11412:
 26983                           
 26984                           ;mconfig.c: 37:  return 0;
 26985  01CA50  0E00               	movlw	0
 26986  01CA52  6E01               	movwf	btemp^0,c
 26987                           
 26988                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 26989  01CA54  0012               	return		;funcret
 26990  01CA56                     __end_of_help_button:
 26991                           	opt callstack 0
 26992                           
 26993 ;; *************** function _TimerDone *****************
 26994 ;; Defined at:
 26995 ;;		line 20 in file "timers.c"
 26996 ;; Parameters:    Size  Location     Type
 26997 ;;  timer           1  [STACK] const unsigned char 
 26998 ;; Auto vars:     Size  Location     Type
 26999 ;;		None
 27000 ;; Return value:  Size  Location     Type
 27001 ;;                  1  [STACK] _Bool 
 27002 ;; Registers used:
 27003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27004 ;; Tracked objects:
 27005 ;;		On entry : 0/1
 27006 ;;		On exit  : 0/0
 27007 ;;		Unchanged: 0/0
 27008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27013 ;;Total ram usage:        0 bytes
 27014 ;; Hardware stack levels used:    1
 27015 ;; Hardware stack levels required when called:   15
 27016 ;; This function calls:
 27017 ;;		Nothing
 27018 ;; This function is called by:
 27019 ;;		_main
 27020 ;;		_WaitMs
 27021 ;;		_help_button
 27022 ;;		_check_help
 27023 ;;		_set_display_info
 27024 ;;		_update_adc_result
 27025 ;;		_esr_check
 27026 ;; This function uses a reentrant model
 27027 ;;
 27028                           
 27029                           	psect	text107
 27030  01CD8A                     __ptext107:
 27031                           	opt callstack 0
 27032  01CD8A                     _TimerDone:
 27033                           	opt callstack 14
 27034                           
 27035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27036                           ;incstack = 0
 27037  01CD8A  0004               	clrwdt		;# 
 27038                           
 27039                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 27040                           ;stkvar	_timer @ sp[(0)+-1]
 27041  01CD8C  0EFF               	movlw	-1
 27042  01CD8E  50E3               	movf	plusw1,w,c
 27043  01CD90  0D02               	mullw	2
 27044  01CD92  0E29               	movlw	low _tickCount
 27045  01CD94  24F3               	addwf	243,w,c
 27046  01CD96  6ED9               	movwf	fsr2l,c
 27047  01CD98  0E02               	movlw	high _tickCount
 27048  01CD9A  20F4               	addwfc	prodh,w,c
 27049  01CD9C  6EDA               	movwf	fsr2h,c
 27050  01CD9E  50DE               	movf	postinc2,w,c
 27051  01CDA0  10DE               	iorwf	postinc2,w,c
 27052  01CDA2  A4D8               	btfss	status,2,c
 27053  01CDA4  D002               	goto	l10500
 27054                           
 27055                           ;timers.c: 24:   return 1;
 27056  01CDA6  0E01               	movlw	1
 27057  01CDA8  D001               	goto	L32
 27058  01CDAA                     l10500:
 27059                           
 27060                           ;timers.c: 26:  return 0;
 27061  01CDAA  0E00               	movlw	0
 27062  01CDAC                     L32:
 27063  01CDAC  6E01               	movwf	btemp^0,c
 27064                           
 27065                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 27066  01CDAE  52E5               	movf	postdec1,f,c
 27067  01CDB0  0012               	return		;funcret
 27068  01CDB2                     __end_of_TimerDone:
 27069                           	opt callstack 0
 27070                           
 27071 ;; *************** function _StartTimer *****************
 27072 ;; Defined at:
 27073 ;;		line 12 in file "timers.c"
 27074 ;; Parameters:    Size  Location     Type
 27075 ;;  timer           1  [STACK] const unsigned char 
 27076 ;;  count           2  [STACK] const unsigned short 
 27077 ;; Auto vars:     Size  Location     Type
 27078 ;;		None
 27079 ;; Return value:  Size  Location     Type
 27080 ;;                  1  [STACK] void 
 27081 ;; Registers used:
 27082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27083 ;; Tracked objects:
 27084 ;;		On entry : 0/0
 27085 ;;		On exit  : 0/0
 27086 ;;		Unchanged: 0/0
 27087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27092 ;;Total ram usage:        0 bytes
 27093 ;; Hardware stack levels used:    1
 27094 ;; Hardware stack levels required when called:   15
 27095 ;; This function calls:
 27096 ;;		Nothing
 27097 ;; This function is called by:
 27098 ;;		_main
 27099 ;;		_WaitMs
 27100 ;;		_help_button
 27101 ;;		_check_help
 27102 ;;		_update_adc_result
 27103 ;;		_calc_bsoc
 27104 ;;		_esr_check
 27105 ;; This function uses a reentrant model
 27106 ;;
 27107                           
 27108                           	psect	text108
 27109  01C8AC                     __ptext108:
 27110                           	opt callstack 0
 27111  01C8AC                     _StartTimer:
 27112                           	opt callstack 0
 27113                           
 27114                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 27115                           ;stkvar	_count @ sp[(0)+-3]
 27116                           
 27117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27118                           ;incstack = 0
 27119 ;; hardware stack exceeded
 27120  01C8AC  0EFD               	movlw	-3
 27121  01C8AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 27122  01C8B4  0EFE               	movlw	-2
 27123  01C8B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27124  01C8BC  90D8               	bcf	status,0,c
 27125  01C8BE  340B               	rlcf	(btemp+10)^0,w,c
 27126  01C8C0  6E09               	movwf	(btemp+8)^0,c
 27127  01C8C2  340C               	rlcf	(btemp+11)^0,w,c
 27128  01C8C4  6E0A               	movwf	(btemp+9)^0,c
 27129                           
 27130                           ;stkvar	_timer @ sp[(0)+-1]
 27131  01C8C6  0EFF               	movlw	-1
 27132  01C8C8  50E3               	movf	plusw1,w,c
 27133  01C8CA  0D02               	mullw	2
 27134  01C8CC  0E29               	movlw	low _tickCount
 27135  01C8CE  24F3               	addwf	243,w,c
 27136  01C8D0  6ED9               	movwf	fsr2l,c
 27137  01C8D2  0E02               	movlw	high _tickCount
 27138  01C8D4  20F4               	addwfc	prodh,w,c
 27139  01C8D6  6EDA               	movwf	fsr2h,c
 27140  01C8D8  0060  F027  FFDE   	movff	btemp+8,postinc2
 27141  01C8DE  0060  F02B  FFDD   	movff	btemp+9,postdec2
 27142                           
 27143                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 27144  01C8E4  52E5               	movf	postdec1,f,c
 27145  01C8E6  52E5               	movf	postdec1,f,c
 27146  01C8E8  52E5               	movf	postdec1,f,c
 27147  01C8EA  0012               	return		;funcret
 27148  01C8EC                     __end_of_StartTimer:
 27149                           	opt callstack 0
 27150                           
 27151 ;; *************** function _display_info *****************
 27152 ;; Defined at:
 27153 ;;		line 190 in file "mconfig.c"
 27154 ;; Parameters:    Size  Location     Type
 27155 ;;		None
 27156 ;; Auto vars:     Size  Location     Type
 27157 ;;		None
 27158 ;; Return value:  Size  Location     Type
 27159 ;;                  1  [STACK] enum E16524
 27160 ;; Registers used:
 27161 ;;		btemp
 27162 ;; Tracked objects:
 27163 ;;		On entry : 0/1
 27164 ;;		On exit  : 0/0
 27165 ;;		Unchanged: 0/0
 27166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27171 ;;Total ram usage:        0 bytes
 27172 ;; Hardware stack levels used:    1
 27173 ;; Hardware stack levels required when called:   15
 27174 ;; This function calls:
 27175 ;;		Nothing
 27176 ;; This function is called by:
 27177 ;;		_check_help
 27178 ;; This function uses a reentrant model
 27179 ;;
 27180                           
 27181                           	psect	text109
 27182  01D3A6                     __ptext109:
 27183                           	opt callstack 0
 27184  01D3A6                     _display_info:
 27185                           	opt callstack 14
 27186                           
 27187                           ;mconfig.c: 192:  return V.response.info;
 27188                           
 27189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27190                           ;incstack = 0
 27191  01D3A6  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 27192                           
 27193                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 27194  01D3AC  0012               	return		;funcret
 27195  01D3AE                     __end_of_display_info:
 27196                           	opt callstack 0
 27197                           
 27198 ;; *************** function _display_help *****************
 27199 ;; Defined at:
 27200 ;;		line 195 in file "mconfig.c"
 27201 ;; Parameters:    Size  Location     Type
 27202 ;;		None
 27203 ;; Auto vars:     Size  Location     Type
 27204 ;;		None
 27205 ;; Return value:  Size  Location     Type
 27206 ;;                  1  [STACK] enum E16524
 27207 ;; Registers used:
 27208 ;;		btemp
 27209 ;; Tracked objects:
 27210 ;;		On entry : 3F/1
 27211 ;;		On exit  : 0/0
 27212 ;;		Unchanged: 0/0
 27213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27218 ;;Total ram usage:        0 bytes
 27219 ;; Hardware stack levels used:    1
 27220 ;; Hardware stack levels required when called:   15
 27221 ;; This function calls:
 27222 ;;		Nothing
 27223 ;; This function is called by:
 27224 ;;		_check_help
 27225 ;; This function uses a reentrant model
 27226 ;;
 27227                           
 27228                           	psect	text110
 27229  01D3AE                     __ptext110:
 27230                           	opt callstack 0
 27231  01D3AE                     _display_help:
 27232                           	opt callstack 14
 27233                           
 27234                           ;mconfig.c: 197:  return V.response.help_temp;
 27235                           
 27236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27237                           ;incstack = 0
 27238  01D3AE  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 27239                           
 27240                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 27241  01D3B4  0012               	return		;funcret
 27242  01D3B6                     __end_of_display_help:
 27243                           	opt callstack 0
 27244                           
 27245 ;; *************** function _check_enter_button *****************
 27246 ;; Defined at:
 27247 ;;		line 49 in file "hid.c"
 27248 ;; Parameters:    Size  Location     Type
 27249 ;;  h               2  [STACK] PTR struct H_data
 27250 ;;		 -> H(9), 
 27251 ;; Auto vars:     Size  Location     Type
 27252 ;;		None
 27253 ;; Return value:  Size  Location     Type
 27254 ;;                  1  [STACK] _Bool 
 27255 ;; Registers used:
 27256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 27257 ;; Tracked objects:
 27258 ;;		On entry : 0/0
 27259 ;;		On exit  : 0/0
 27260 ;;		Unchanged: 0/0
 27261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27266 ;;Total ram usage:        0 bytes
 27267 ;; Hardware stack levels used:    1
 27268 ;; Hardware stack levels required when called:   15
 27269 ;; This function calls:
 27270 ;;		Nothing
 27271 ;; This function is called by:
 27272 ;;		_main
 27273 ;; This function uses a reentrant model
 27274 ;;
 27275                           
 27276                           	psect	text111
 27277  01BEF4                     __ptext111:
 27278                           	opt callstack 0
 27279  01BEF4                     _check_enter_button:
 27280                           	opt callstack 15
 27281                           
 27282                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 27283                           ;stkvar	_h @ sp[(0)+-2]
 27284                           
 27285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27286                           ;incstack = 0
 27287  01BEF4  0EFE               	movlw	-2
 27288  01BEF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 27289  01BEFC  0EFF               	movlw	-1
 27290  01BEFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27291  01BF04  0E04               	movlw	4
 27292  01BF06  240B               	addwf	(btemp+10)^0,w,c
 27293  01BF08  6ED9               	movwf	fsr2l,c
 27294  01BF0A  0E00               	movlw	0
 27295  01BF0C  200C               	addwfc	(btemp+11)^0,w,c
 27296  01BF0E  6EDA               	movwf	fsr2h,c
 27297  01BF10  50DF               	movf	indf2,w,c
 27298  01BF12  A4D8               	btfss	status,2,c
 27299  01BF14  D023               	goto	l14300
 27300                           
 27301                           ;stkvar	_h @ sp[(0)+-2]
 27302  01BF16  0EFE               	movlw	-2
 27303  01BF18  006F FF8C  F00B    	movff	plusw1,btemp+10
 27304  01BF1E  0EFF               	movlw	-1
 27305  01BF20  006F FF8C  F00C    	movff	plusw1,btemp+11
 27306  01BF26  0E05               	movlw	5
 27307  01BF28  240B               	addwf	(btemp+10)^0,w,c
 27308  01BF2A  6ED9               	movwf	fsr2l,c
 27309  01BF2C  0E00               	movlw	0
 27310  01BF2E  200C               	addwfc	(btemp+11)^0,w,c
 27311  01BF30  6EDA               	movwf	fsr2h,c
 27312  01BF32  50DF               	movf	indf2,w,c
 27313  01BF34  A4D8               	btfss	status,2,c
 27314  01BF36  D012               	goto	l14300
 27315                           
 27316                           ;hid.c: 52:   h->wait_enter = 1;
 27317                           ;stkvar	_h @ sp[(0)+-2]
 27318  01BF38  0EFE               	movlw	-2
 27319  01BF3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 27320  01BF40  0EFF               	movlw	-1
 27321  01BF42  006F FF8C  F00C    	movff	plusw1,btemp+11
 27322  01BF48  0E04               	movlw	4
 27323  01BF4A  240B               	addwf	(btemp+10)^0,w,c
 27324  01BF4C  6ED9               	movwf	fsr2l,c
 27325  01BF4E  0E00               	movlw	0
 27326  01BF50  200C               	addwfc	(btemp+11)^0,w,c
 27327  01BF52  6EDA               	movwf	fsr2h,c
 27328  01BF54  0E01               	movlw	1
 27329  01BF56  6EDF               	movwf	indf2,c
 27330                           
 27331                           ;hid.c: 53:   return 1;
 27332  01BF58  0E01               	movlw	1
 27333  01BF5A  D001               	goto	L33
 27334  01BF5C                     l14300:
 27335                           
 27336                           ;hid.c: 55:  return 0;
 27337  01BF5C  0E00               	movlw	0
 27338  01BF5E                     L33:
 27339  01BF5E  6E01               	movwf	btemp^0,c
 27340                           
 27341                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 27342  01BF60  52E5               	movf	postdec1,f,c
 27343  01BF62  52E5               	movf	postdec1,f,c
 27344  01BF64  0012               	return		;funcret
 27345  01BF66                     __end_of_check_enter_button:
 27346                           	opt callstack 0
 27347                           
 27348 ;; *************** function _calc_ror_data *****************
 27349 ;; Defined at:
 27350 ;;		line 102 in file "mbmc.c"
 27351 ;; Parameters:    Size  Location     Type
 27352 ;;		None
 27353 ;; Auto vars:     Size  Location     Type
 27354 ;;		None
 27355 ;; Return value:  Size  Location     Type
 27356 ;;                  1  [STACK] void 
 27357 ;; Registers used:
 27358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27359 ;; Tracked objects:
 27360 ;;		On entry : 0/0
 27361 ;;		On exit  : 0/0
 27362 ;;		Unchanged: 0/0
 27363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27368 ;;Total ram usage:        0 bytes
 27369 ;; Hardware stack levels used:    1
 27370 ;; Hardware stack levels required when called:   18
 27371 ;; This function calls:
 27372 ;;		___flge
 27373 ;;		___flsub
 27374 ;;		_conv_raw_result
 27375 ;;		_fabsf
 27376 ;; This function is called by:
 27377 ;;		_main
 27378 ;; This function uses a reentrant model
 27379 ;;
 27380                           
 27381                           	psect	text112
 27382  019518                     __ptext112:
 27383                           	opt callstack 0
 27384  019518                     _calc_ror_data:
 27385                           	opt callstack 12
 27386                           
 27387                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 27388                           
 27389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27390                           ;incstack = 0
 27391  019518  0060  F193  FFE6   	movff	calc_ror_data@bcror,postinc1
 27392  01951E  0060  F197  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 27393  019524  0060  F19B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 27394  01952A  0060  F19F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 27395  019530  0E00               	movlw	0
 27396  019532  6EE6               	movwf	postinc1,c
 27397  019534  0E00               	movlw	0
 27398  019536  6EE6               	movwf	postinc1,c
 27399  019538  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27400  01953C  0060  F007  FFE6   	movff	btemp,postinc1
 27401  019542  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27402  019548  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27403  01954E  0060  F013  FFE6   	movff	btemp+3,postinc1
 27404  019554  ECB0  F0E3         	call	___flsub	;wreg free
 27405  019558  0060  F007  FFE6   	movff	btemp,postinc1
 27406  01955E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27407  019564  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27408  01956A  0060  F013  FFE6   	movff	btemp+3,postinc1
 27409  019570  EC52  F0DA         	call	_fabsf	;wreg free
 27410  019574  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 27411  01957A  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 27412  019580  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 27413  019586  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 27414                           
 27415                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 27416  01958C  0E00               	movlw	0
 27417  01958E  6EE6               	movwf	postinc1,c
 27418  019590  0E00               	movlw	0
 27419  019592  6EE6               	movwf	postinc1,c
 27420  019594  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27421  019598  0060  F004  F064   	movff	btemp,calc_ror_data@bcror
 27422  01959E  0060  F008  F065   	movff	btemp+1,calc_ror_data@bcror+1
 27423  0195A4  0060  F00C  F066   	movff	btemp+2,calc_ror_data@bcror+2
 27424  0195AA  0060  F010  F067   	movff	btemp+3,calc_ror_data@bcror+3
 27425                           
 27426                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 27427  0195B0  0060  F1A3  FFE6   	movff	calc_ror_data@bvror,postinc1
 27428  0195B6  0060  F1A7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 27429  0195BC  0060  F1AB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 27430  0195C2  0060  F1AF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 27431  0195C8  0E00               	movlw	0
 27432  0195CA  6EE6               	movwf	postinc1,c
 27433  0195CC  0E04               	movlw	4
 27434  0195CE  6EE6               	movwf	postinc1,c
 27435  0195D0  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27436  0195D4  0060  F007  FFE6   	movff	btemp,postinc1
 27437  0195DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27438  0195E0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27439  0195E6  0060  F013  FFE6   	movff	btemp+3,postinc1
 27440  0195EC  ECB0  F0E3         	call	___flsub	;wreg free
 27441  0195F0  0060  F007  FFE6   	movff	btemp,postinc1
 27442  0195F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27443  0195FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27444  019602  0060  F013  FFE6   	movff	btemp+3,postinc1
 27445  019608  EC52  F0DA         	call	_fabsf	;wreg free
 27446  01960C  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 27447  019612  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 27448  019618  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 27449  01961E  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 27450                           
 27451                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 27452  019624  0EE7               	movlw	231
 27453  019626  6EE6               	movwf	postinc1,c
 27454  019628  0E1D               	movlw	29
 27455  01962A  6EE6               	movwf	postinc1,c
 27456  01962C  0EA7               	movlw	167
 27457  01962E  6EE6               	movwf	postinc1,c
 27458  019630  0E3B               	movlw	59
 27459  019632  6EE6               	movwf	postinc1,c
 27460  019634  EE22  F06B         	lfsr	2,_C+108	;volatile
 27461  019638  006F FF7B FFE6     	movff	postinc2,postinc1
 27462  01963E  006F FF7B FFE6     	movff	postinc2,postinc1
 27463  019644  006F FF7B FFE6     	movff	postinc2,postinc1
 27464  01964A  006F FF7B FFE6     	movff	postinc2,postinc1
 27465  019650  EC81  F0CD         	call	___flge	;wreg free
 27466  019654  B001               	btfsc	btemp& (0+255),0,c
 27467  019656  D010               	goto	l11966
 27468                           
 27469                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 27470  019658  0EB0               	movlw	176
 27471  01965A  006F FFA0  F86B    	movff	wreg,_C+108	;volatile
 27472  019660  0E03               	movlw	3
 27473  019662  006F FFA0  F86C    	movff	wreg,_C+109	;volatile
 27474  019668  0E67               	movlw	103
 27475  01966A  006F FFA0  F86D    	movff	wreg,_C+110	;volatile
 27476  019670  0E3C               	movlw	60
 27477  019672  006F FFA0  F86E    	movff	wreg,_C+111	;volatile
 27478  019678                     l11966:
 27479                           
 27480                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 27481  019678  0E00               	movlw	0
 27482  01967A  6EE6               	movwf	postinc1,c
 27483  01967C  0E04               	movlw	4
 27484  01967E  6EE6               	movwf	postinc1,c
 27485  019680  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27486  019684  0060  F004  F068   	movff	btemp,calc_ror_data@bvror
 27487  01968A  0060  F008  F069   	movff	btemp+1,calc_ror_data@bvror+1
 27488  019690  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bvror+2
 27489  019696  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bvror+3
 27490                           
 27491                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 27492  01969C  0012               	return		;funcret
 27493  01969E                     __end_of_calc_ror_data:
 27494                           	opt callstack 0
 27495                           
 27496 ;; *************** function _fabsf *****************
 27497 ;; Defined at:
 27498 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 27499 ;; Parameters:    Size  Location     Type
 27500 ;;  x               4  [STACK] float 
 27501 ;; Auto vars:     Size  Location     Type
 27502 ;;  u               4  [STACK] struct .
 27503 ;; Return value:  Size  Location     Type
 27504 ;;                  4  [STACK] float 
 27505 ;; Registers used:
 27506 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 27507 ;; Tracked objects:
 27508 ;;		On entry : 0/0
 27509 ;;		On exit  : 0/0
 27510 ;;		Unchanged: 0/0
 27511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27516 ;;Total ram usage:        0 bytes
 27517 ;; Hardware stack levels used:    1
 27518 ;; Hardware stack levels required when called:   15
 27519 ;; This function calls:
 27520 ;;		Nothing
 27521 ;; This function is called by:
 27522 ;;		_main
 27523 ;;		_calc_ror_data
 27524 ;;		_calc_bsoc
 27525 ;;		_esr_check
 27526 ;; This function uses a reentrant model
 27527 ;;
 27528                           
 27529                           	psect	text113
 27530  01B4A4                     __ptext113:
 27531                           	opt callstack 0
 27532  01B4A4                     _fabsf:
 27533                           	opt callstack 0
 27534                           
 27535                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27536  01B4A4  52E6               	movf	postinc1,f,c
 27537  01B4A6  52E6               	movf	postinc1,f,c
 27538  01B4A8  52E6               	movf	postinc1,f,c
 27539  01B4AA  52E6               	movf	postinc1,f,c
 27540                           
 27541                           ;incstack = 0
 27542 ;; hardware stack exceeded
 27543  01B4AC  0060  F7B8  F009   	movff	fabsf@F463,btemp+8
 27544  01B4B2  0060  F7BC  F00A   	movff	fabsf@F463+1,btemp+9
 27545  01B4B8  0060  F7C0  F00B   	movff	fabsf@F463+2,btemp+10
 27546  01B4BE  0060  F7C4  F00C   	movff	fabsf@F463+3,btemp+11
 27547                           
 27548                           ;stkvar	_u @ sp[(-4)+0]
 27549  01B4C4  0EFC               	movlw	-4
 27550  01B4C6  0060  F027  FFE3   	movff	btemp+8,plusw1
 27551  01B4CC  0EFD               	movlw	-3
 27552  01B4CE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27553  01B4D4  0EFE               	movlw	-2
 27554  01B4D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27555  01B4DC  0EFF               	movlw	-1
 27556  01B4DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27557                           
 27558                           ;stkvar	_x @ sp[(-4)+-4]
 27559  01B4E4  0EF8               	movlw	-8
 27560  01B4E6  006F FF8C  F009    	movff	plusw1,btemp+8
 27561  01B4EC  0EF9               	movlw	-7
 27562  01B4EE  006F FF8C  F00A    	movff	plusw1,btemp+9
 27563  01B4F4  0EFA               	movlw	-6
 27564  01B4F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 27565  01B4FC  0EFB               	movlw	-5
 27566  01B4FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27567                           
 27568                           ;stkvar	_u @ sp[(-4)+0]
 27569  01B504  0EFC               	movlw	-4
 27570  01B506  0060  F027  FFE3   	movff	btemp+8,plusw1
 27571  01B50C  0EFD               	movlw	-3
 27572  01B50E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27573  01B514  0EFE               	movlw	-2
 27574  01B516  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27575  01B51C  0EFF               	movlw	-1
 27576  01B51E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27577                           
 27578                           ;stkvar	_u @ sp[(-4)+0]
 27579  01B524  0EFF               	movlw	-1
 27580  01B526  9EE3               	bcf	plusw1,7,c
 27581                           
 27582                           ;stkvar	_u @ sp[(-4)+0]
 27583  01B528  0EFC               	movlw	-4
 27584  01B52A  006F FF8C  F001    	movff	plusw1,btemp
 27585  01B530  0EFD               	movlw	-3
 27586  01B532  006F FF8C  F002    	movff	plusw1,btemp+1
 27587  01B538  0EFE               	movlw	-2
 27588  01B53A  006F FF8C  F003    	movff	plusw1,btemp+2
 27589  01B540  0EFF               	movlw	-1
 27590  01B542  006F FF8C  F004    	movff	plusw1,btemp+3
 27591                           
 27592                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 27593  01B548  0EF8               	movlw	248
 27594  01B54A  26E1               	addwf	fsr1l,f,c
 27595  01B54C  0EFF               	movlw	255
 27596  01B54E  22E2               	addwfc	fsr1h,f,c
 27597  01B550  0012               	return		;funcret
 27598  01B552                     __end_of_fabsf:
 27599                           	opt callstack 0
 27600                           
 27601 ;; *************** function _conv_raw_result *****************
 27602 ;; Defined at:
 27603 ;;		line 128 in file "daq.c"
 27604 ;; Parameters:    Size  Location     Type
 27605 ;;  chan            1  [STACK] const enum E16605
 27606 ;;  to_what         1  [STACK] const enum E16686
 27607 ;; Auto vars:     Size  Location     Type
 27608 ;;		None
 27609 ;; Return value:  Size  Location     Type
 27610 ;;                  4  [STACK] float 
 27611 ;; Registers used:
 27612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27613 ;; Tracked objects:
 27614 ;;		On entry : 0/0
 27615 ;;		On exit  : 0/0
 27616 ;;		Unchanged: 0/0
 27617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27622 ;;Total ram usage:        0 bytes
 27623 ;; Hardware stack levels used:    1
 27624 ;; Hardware stack levels required when called:   17
 27625 ;; This function calls:
 27626 ;;		___fldiv
 27627 ;;		___flmul
 27628 ;;		___flsub
 27629 ;;		___xxtofl
 27630 ;;		_get_raw_result
 27631 ;;		_nanf
 27632 ;; This function is called by:
 27633 ;;		_main
 27634 ;;		_convert_adc_data
 27635 ;;		_calc_ror_data
 27636 ;;		_check_day_time
 27637 ;;		_init_bsoc
 27638 ;;		_esr_check
 27639 ;; This function uses a reentrant model
 27640 ;;
 27641                           
 27642                           	psect	text114
 27643  01543C                     __ptext114:
 27644                           	opt callstack 0
 27645  01543C                     _conv_raw_result:
 27646                           	opt callstack 0
 27647                           
 27648                           ;daq.c: 128: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 129: {;daq.c: 131:  switch (to_what) {
 27649                           
 27650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27651                           ;incstack = 0
 27652 ;; hardware stack exceeded
 27653  01543C  D24A               	goto	l10482
 27654  01543E                     l10428:
 27655                           
 27656                           ;daq.c: 133:   if (!(0b0011110001110111 >> chan & 0x1))
 27657                           ;stkvar	_chan @ sp[(0)+-1]
 27658  01543E  0EFF               	movlw	-1
 27659  015440  006F FF8C  F00C    	movff	plusw1,btemp+11
 27660  015446  0E77               	movlw	119
 27661  015448  6E09               	movwf	(btemp+8)^0,c
 27662  01544A  0E3C               	movlw	60
 27663  01544C  6E0A               	movwf	(btemp+9)^0,c
 27664  01544E  2A0C               	incf	(btemp+11)^0,f,c
 27665  015450  D003               	goto	u9604
 27666  015452                     u9605:
 27667  015452  340A               	rlcf	(btemp+9)^0,w,c
 27668  015454  320A               	rrcf	(btemp+9)^0,f,c
 27669  015456  3209               	rrcf	(btemp+8)^0,f,c
 27670  015458                     u9604:
 27671  015458  2E0C               	decfsz	(btemp+11)^0,f,c
 27672  01545A  D7FB               	goto	u9605
 27673  01545C  B009               	btfsc	(btemp+8)^0,0,c
 27674  01545E  D007               	goto	l10434
 27675                           
 27676                           ;daq.c: 134:    return nanf("");
 27677  015460  0E4D               	movlw	low (STR_81+126)
 27678  015462  6EE6               	movwf	postinc1,c
 27679  015464  0EFB               	movlw	high (STR_81+126)
 27680  015466  6EE6               	movwf	postinc1,c
 27681  015468  EC50  F0E1         	call	_nanf	;wreg free
 27682  01546C  D242               	goto	l1948
 27683  01546E                     l10434:
 27684                           
 27685                           ;daq.c: 136:   if (0b0000000000000011 >> chan & 0x1) {
 27686                           ;stkvar	_chan @ sp[(0)+-1]
 27687  01546E  0EFF               	movlw	-1
 27688  015470  006F FF8C  F00C    	movff	plusw1,btemp+11
 27689  015476  0E03               	movlw	3
 27690  015478  6E09               	movwf	(btemp+8)^0,c
 27691  01547A  0E00               	movlw	0
 27692  01547C  6E0A               	movwf	(btemp+9)^0,c
 27693  01547E  2A0C               	incf	(btemp+11)^0,f,c
 27694  015480  D003               	goto	u9624
 27695  015482                     u9625:
 27696  015482  340A               	rlcf	(btemp+9)^0,w,c
 27697  015484  320A               	rrcf	(btemp+9)^0,f,c
 27698  015486  3209               	rrcf	(btemp+8)^0,f,c
 27699  015488                     u9624:
 27700  015488  2E0C               	decfsz	(btemp+11)^0,f,c
 27701  01548A  D7FB               	goto	u9625
 27702  01548C  A009               	btfss	(btemp+8)^0,0,c
 27703  01548E  D0F3               	goto	l10448
 27704                           
 27705                           ;daq.c: 137:    if (0b0000000000000001 >> chan & 0x1) {
 27706                           ;stkvar	_chan @ sp[(0)+-1]
 27707  015490  0EFF               	movlw	-1
 27708  015492  006F FF8C  F00C    	movff	plusw1,btemp+11
 27709  015498  0E01               	movlw	1
 27710  01549A  6E09               	movwf	(btemp+8)^0,c
 27711  01549C  0E00               	movlw	0
 27712  01549E  6E0A               	movwf	(btemp+9)^0,c
 27713  0154A0  2A0C               	incf	(btemp+11)^0,f,c
 27714  0154A2  D003               	goto	u9644
 27715  0154A4                     u9645:
 27716  0154A4  340A               	rlcf	(btemp+9)^0,w,c
 27717  0154A6  320A               	rrcf	(btemp+9)^0,f,c
 27718  0154A8  3209               	rrcf	(btemp+8)^0,f,c
 27719  0154AA                     u9644:
 27720  0154AA  2E0C               	decfsz	(btemp+11)^0,f,c
 27721  0154AC  D7FB               	goto	u9645
 27722  0154AE  A009               	btfss	(btemp+8)^0,0,c
 27723  0154B0  D071               	goto	l10444
 27724                           
 27725                           ;daq.c: 138:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 27726  0154B2  0060  F363  FFE6   	movff	_R+42,postinc1
 27727  0154B8  0060  F367  FFE6   	movff	_R+43,postinc1
 27728  0154BE  0060  F36B  FFE6   	movff	_R+44,postinc1
 27729  0154C4  0060  F36F  FFE6   	movff	_R+45,postinc1
 27730  0154CA  0060  F350  F009   	movff	_R+38,btemp+8	;volatile
 27731  0154D0  0060  F354  F00A   	movff	_R+39,btemp+9	;volatile
 27732  0154D6  0E00               	movlw	0
 27733  0154D8  BE0A               	btfsc	(btemp+9)^0,7,c
 27734  0154DA  0EFF               	movlw	255
 27735  0154DC  6E0B               	movwf	(btemp+10)^0,c
 27736  0154DE  6E0C               	movwf	(btemp+11)^0,c
 27737  0154E0  0060  F027  FFE6   	movff	btemp+8,postinc1
 27738  0154E6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 27739  0154EC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27740  0154F2  0060  F033  FFE6   	movff	btemp+11,postinc1
 27741  0154F8  0E01               	movlw	1
 27742  0154FA  6EE6               	movwf	postinc1,c
 27743  0154FC  EC2C  F0C6         	call	___xxtofl	;wreg free
 27744  015500  0060  F007  FFE6   	movff	btemp,postinc1
 27745  015506  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27746  01550C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27747  015512  0060  F013  FFE6   	movff	btemp+3,postinc1
 27748                           
 27749                           ;stkvar	_chan @ sp[(-8)+-1]
 27750  015518  0EF7               	movlw	-9
 27751  01551A  50E3               	movf	plusw1,w,c
 27752  01551C  6EE6               	movwf	postinc1,c
 27753  01551E  ECD9  F0E8         	call	_get_raw_result	;wreg free
 27754  015522  0060  F004  F00B   	movff	btemp,btemp+10
 27755  015528  0060  F008  F00C   	movff	btemp+1,btemp+11
 27756  01552E  500B               	movf	(btemp+10)^0,w,c
 27757  015530  6E05               	movwf	(btemp+4)^0,c
 27758  015532  500C               	movf	(btemp+11)^0,w,c
 27759  015534  6E06               	movwf	(btemp+5)^0,c
 27760  015536  6A07               	clrf	(btemp+6)^0,c
 27761  015538  6A08               	clrf	(btemp+7)^0,c
 27762  01553A  0060  F017  FFE6   	movff	btemp+4,postinc1
 27763  015540  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27764  015546  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27765  01554C  0060  F023  FFE6   	movff	btemp+7,postinc1
 27766  015552  0E00               	movlw	0
 27767  015554  6EE6               	movwf	postinc1,c
 27768  015556  EC2C  F0C6         	call	___xxtofl	;wreg free
 27769  01555A  0060  F007  FFE6   	movff	btemp,postinc1
 27770  015560  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27771  015566  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27772  01556C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27773  015572  ECB0  F0E3         	call	___flsub	;wreg free
 27774  015576  0060  F007  FFE6   	movff	btemp,postinc1
 27775  01557C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27776  015582  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27777  015588  0060  F013  FFE6   	movff	btemp+3,postinc1
 27778  01558E  EC6E  F09F         	call	___flmul	;wreg free
 27779  015592  D1AF               	goto	l1948
 27780  015594                     l10444:
 27781                           
 27782                           ;daq.c: 140:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 27783  015594  0060  F373  FFE6   	movff	_R+46,postinc1
 27784  01559A  0060  F377  FFE6   	movff	_R+47,postinc1
 27785  0155A0  0060  F37B  FFE6   	movff	_R+48,postinc1
 27786  0155A6  0060  F37F  FFE6   	movff	_R+49,postinc1
 27787  0155AC  0060  F358  F009   	movff	_R+40,btemp+8	;volatile
 27788  0155B2  0060  F35C  F00A   	movff	_R+41,btemp+9	;volatile
 27789  0155B8  0E00               	movlw	0
 27790  0155BA  BE0A               	btfsc	(btemp+9)^0,7,c
 27791  0155BC  0EFF               	movlw	255
 27792  0155BE  6E0B               	movwf	(btemp+10)^0,c
 27793  0155C0  6E0C               	movwf	(btemp+11)^0,c
 27794  0155C2  0060  F027  FFE6   	movff	btemp+8,postinc1
 27795  0155C8  0060  F02B  FFE6   	movff	btemp+9,postinc1
 27796  0155CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27797  0155D4  0060  F033  FFE6   	movff	btemp+11,postinc1
 27798  0155DA  0E01               	movlw	1
 27799  0155DC  6EE6               	movwf	postinc1,c
 27800  0155DE  EC2C  F0C6         	call	___xxtofl	;wreg free
 27801  0155E2  0060  F007  FFE6   	movff	btemp,postinc1
 27802  0155E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27803  0155EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27804  0155F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27805                           
 27806                           ;stkvar	_chan @ sp[(-8)+-1]
 27807  0155FA  0EF7               	movlw	-9
 27808  0155FC  50E3               	movf	plusw1,w,c
 27809  0155FE  6EE6               	movwf	postinc1,c
 27810  015600  ECD9  F0E8         	call	_get_raw_result	;wreg free
 27811  015604  0060  F004  F00B   	movff	btemp,btemp+10
 27812  01560A  0060  F008  F00C   	movff	btemp+1,btemp+11
 27813  015610  500B               	movf	(btemp+10)^0,w,c
 27814  015612  6E05               	movwf	(btemp+4)^0,c
 27815  015614  500C               	movf	(btemp+11)^0,w,c
 27816  015616  6E06               	movwf	(btemp+5)^0,c
 27817  015618  6A07               	clrf	(btemp+6)^0,c
 27818  01561A  6A08               	clrf	(btemp+7)^0,c
 27819  01561C  0060  F017  FFE6   	movff	btemp+4,postinc1
 27820  015622  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27821  015628  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27822  01562E  0060  F023  FFE6   	movff	btemp+7,postinc1
 27823  015634  0E00               	movlw	0
 27824  015636  6EE6               	movwf	postinc1,c
 27825  015638  EC2C  F0C6         	call	___xxtofl	;wreg free
 27826  01563C  0060  F007  FFE6   	movff	btemp,postinc1
 27827  015642  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27828  015648  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27829  01564E  0060  F013  FFE6   	movff	btemp+3,postinc1
 27830  015654  ECB0  F0E3         	call	___flsub	;wreg free
 27831  015658  0060  F007  FFE6   	movff	btemp,postinc1
 27832  01565E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27833  015664  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27834  01566A  0060  F013  FFE6   	movff	btemp+3,postinc1
 27835  015670  EC6E  F09F         	call	___flmul	;wreg free
 27836  015674  D13E               	goto	l1948
 27837  015676                     l10448:
 27838                           
 27839                           ;daq.c: 143:    if (0b0000100000000000 >> chan & 0x1) {
 27840                           ;stkvar	_chan @ sp[(0)+-1]
 27841  015676  0EFF               	movlw	-1
 27842  015678  006F FF8C  F00C    	movff	plusw1,btemp+11
 27843  01567E  0E00               	movlw	0
 27844  015680  6E09               	movwf	(btemp+8)^0,c
 27845  015682  0E08               	movlw	8
 27846  015684  6E0A               	movwf	(btemp+9)^0,c
 27847  015686  2A0C               	incf	(btemp+11)^0,f,c
 27848  015688  D003               	goto	u9664
 27849  01568A                     u9665:
 27850  01568A  340A               	rlcf	(btemp+9)^0,w,c
 27851  01568C  320A               	rrcf	(btemp+9)^0,f,c
 27852  01568E  3209               	rrcf	(btemp+8)^0,f,c
 27853  015690                     u9664:
 27854  015690  2E0C               	decfsz	(btemp+11)^0,f,c
 27855  015692  D7FB               	goto	u9665
 27856  015694  A009               	btfss	(btemp+8)^0,0,c
 27857  015696  D008               	goto	l10456
 27858                           
 27859                           ;daq.c: 144:     return 25.0;
 27860  015698  0E00               	movlw	0
 27861  01569A  6E01               	movwf	btemp^0,c
 27862  01569C  0E00               	movlw	0
 27863  01569E  6E02               	movwf	(btemp+1)^0,c
 27864  0156A0  0EC8               	movlw	200
 27865  0156A2  6E03               	movwf	(btemp+2)^0,c
 27866  0156A4  0E41               	movlw	65
 27867  0156A6  D113               	goto	L34
 27868  0156A8                     l10456:
 27869                           
 27870                           ;daq.c: 146:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 27871  0156A8  0E00               	movlw	0
 27872  0156AA  6EE6               	movwf	postinc1,c
 27873  0156AC  0E00               	movlw	0
 27874  0156AE  6EE6               	movwf	postinc1,c
 27875  0156B0  0E7A               	movlw	122
 27876  0156B2  6EE6               	movwf	postinc1,c
 27877  0156B4  0E44               	movlw	68
 27878  0156B6  6EE6               	movwf	postinc1,c
 27879  0156B8  0E61               	movlw	97
 27880  0156BA  6EE6               	movwf	postinc1,c
 27881  0156BC  0E03               	movlw	3
 27882  0156BE  6EE6               	movwf	postinc1,c
 27883  0156C0  0E84               	movlw	132
 27884  0156C2  6EE6               	movwf	postinc1,c
 27885  0156C4  0E40               	movlw	64
 27886  0156C6  6EE6               	movwf	postinc1,c
 27887                           
 27888                           ;stkvar	_chan @ sp[(-8)+-1]
 27889  0156C8  0EF7               	movlw	-9
 27890  0156CA  50E3               	movf	plusw1,w,c
 27891  0156CC  6EE6               	movwf	postinc1,c
 27892  0156CE  ECD9  F0E8         	call	_get_raw_result	;wreg free
 27893  0156D2  0060  F004  F00B   	movff	btemp,btemp+10
 27894  0156D8  0060  F008  F00C   	movff	btemp+1,btemp+11
 27895  0156DE  500B               	movf	(btemp+10)^0,w,c
 27896  0156E0  6E05               	movwf	(btemp+4)^0,c
 27897  0156E2  500C               	movf	(btemp+11)^0,w,c
 27898  0156E4  6E06               	movwf	(btemp+5)^0,c
 27899  0156E6  6A07               	clrf	(btemp+6)^0,c
 27900  0156E8  6A08               	clrf	(btemp+7)^0,c
 27901  0156EA  0060  F017  FFE6   	movff	btemp+4,postinc1
 27902  0156F0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27903  0156F6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27904  0156FC  0060  F023  FFE6   	movff	btemp+7,postinc1
 27905  015702  0E00               	movlw	0
 27906  015704  6EE6               	movwf	postinc1,c
 27907  015706  EC2C  F0C6         	call	___xxtofl	;wreg free
 27908  01570A  0060  F007  FFE6   	movff	btemp,postinc1
 27909  015710  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27910  015716  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27911  01571C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27912  015722  EC6E  F09F         	call	___flmul	;wreg free
 27913  015726  0060  F007  FFE6   	movff	btemp,postinc1
 27914  01572C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27915  015732  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27916  015738  0060  F013  FFE6   	movff	btemp+3,postinc1
 27917  01573E  EC61  F0A7         	call	___fldiv	;wreg free
 27918  015742  D0D7               	goto	l1948
 27919  015744                     l10460:
 27920                           
 27921                           ;daq.c: 151:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 27922                           ;stkvar	_chan @ sp[(0)+-1]
 27923  015744  0EFF               	movlw	-1
 27924  015746  006F FF8C  F00C    	movff	plusw1,btemp+11
 27925  01574C  0E03               	movlw	3
 27926  01574E  6E09               	movwf	(btemp+8)^0,c
 27927  015750  0E00               	movlw	0
 27928  015752  6E0A               	movwf	(btemp+9)^0,c
 27929  015754  2A0C               	incf	(btemp+11)^0,f,c
 27930  015756  D003               	goto	u9684
 27931  015758                     u9685:
 27932  015758  340A               	rlcf	(btemp+9)^0,w,c
 27933  01575A  320A               	rrcf	(btemp+9)^0,f,c
 27934  01575C  3209               	rrcf	(btemp+8)^0,f,c
 27935  01575E                     u9684:
 27936  01575E  2E0C               	decfsz	(btemp+11)^0,f,c
 27937  015760  D7FB               	goto	u9685
 27938  015762  B009               	btfsc	(btemp+8)^0,0,c
 27939  015764  D011               	goto	u9710
 27940                           
 27941                           ;stkvar	_chan @ sp[(0)+-1]
 27942  015766  0EFF               	movlw	-1
 27943  015768  006F FF8C  F00C    	movff	plusw1,btemp+11
 27944  01576E  0E00               	movlw	0
 27945  015770  6E09               	movwf	(btemp+8)^0,c
 27946  015772  0E08               	movlw	8
 27947  015774  6E0A               	movwf	(btemp+9)^0,c
 27948  015776  2A0C               	incf	(btemp+11)^0,f,c
 27949  015778  D003               	goto	u9704
 27950  01577A                     u9705:
 27951  01577A  340A               	rlcf	(btemp+9)^0,w,c
 27952  01577C  320A               	rrcf	(btemp+9)^0,f,c
 27953  01577E  3209               	rrcf	(btemp+8)^0,f,c
 27954  015780                     u9704:
 27955  015780  2E0C               	decfsz	(btemp+11)^0,f,c
 27956  015782  D7FB               	goto	u9705
 27957  015784  A009               	btfss	(btemp+8)^0,0,c
 27958  015786  D04E               	goto	l10468
 27959  015788                     u9710:
 27960                           
 27961                           ;daq.c: 152:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 27962  015788  0E00               	movlw	0
 27963  01578A  6EE6               	movwf	postinc1,c
 27964  01578C  0E00               	movlw	0
 27965  01578E  6EE6               	movwf	postinc1,c
 27966  015790  0E7A               	movlw	122
 27967  015792  6EE6               	movwf	postinc1,c
 27968  015794  0E44               	movlw	68
 27969  015796  6EE6               	movwf	postinc1,c
 27970  015798  0E00               	movlw	0
 27971  01579A  6EE6               	movwf	postinc1,c
 27972  01579C  0E00               	movlw	0
 27973  01579E  6EE6               	movwf	postinc1,c
 27974  0157A0  0E20               	movlw	32
 27975  0157A2  6EE6               	movwf	postinc1,c
 27976  0157A4  0E3F               	movlw	63
 27977  0157A6  6EE6               	movwf	postinc1,c
 27978                           
 27979                           ;stkvar	_chan @ sp[(-8)+-1]
 27980  0157A8  0EF7               	movlw	-9
 27981  0157AA  50E3               	movf	plusw1,w,c
 27982  0157AC  6EE6               	movwf	postinc1,c
 27983  0157AE  ECD9  F0E8         	call	_get_raw_result	;wreg free
 27984  0157B2  0060  F004  F00B   	movff	btemp,btemp+10
 27985  0157B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 27986  0157BE  500B               	movf	(btemp+10)^0,w,c
 27987  0157C0  6E05               	movwf	(btemp+4)^0,c
 27988  0157C2  500C               	movf	(btemp+11)^0,w,c
 27989  0157C4  6E06               	movwf	(btemp+5)^0,c
 27990  0157C6  6A07               	clrf	(btemp+6)^0,c
 27991  0157C8  6A08               	clrf	(btemp+7)^0,c
 27992  0157CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 27993  0157D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27994  0157D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27995  0157DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 27996  0157E2  0E00               	movlw	0
 27997  0157E4  6EE6               	movwf	postinc1,c
 27998  0157E6  EC2C  F0C6         	call	___xxtofl	;wreg free
 27999  0157EA  0060  F007  FFE6   	movff	btemp,postinc1
 28000  0157F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28001  0157F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28002  0157FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 28003  015802  EC6E  F09F         	call	___flmul	;wreg free
 28004  015806  0060  F007  FFE6   	movff	btemp,postinc1
 28005  01580C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28006  015812  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28007  015818  0060  F013  FFE6   	movff	btemp+3,postinc1
 28008  01581E  EC61  F0A7         	call	___fldiv	;wreg free
 28009  015822  D067               	goto	l1948
 28010  015824                     l10468:
 28011                           
 28012                           ;daq.c: 154:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 28013  015824  0E00               	movlw	0
 28014  015826  6EE6               	movwf	postinc1,c
 28015  015828  0E00               	movlw	0
 28016  01582A  6EE6               	movwf	postinc1,c
 28017  01582C  0E7A               	movlw	122
 28018  01582E  6EE6               	movwf	postinc1,c
 28019  015830  0E44               	movlw	68
 28020  015832  6EE6               	movwf	postinc1,c
 28021  015834  0E61               	movlw	97
 28022  015836  6EE6               	movwf	postinc1,c
 28023  015838  0E03               	movlw	3
 28024  01583A  6EE6               	movwf	postinc1,c
 28025  01583C  0E84               	movlw	132
 28026  01583E  6EE6               	movwf	postinc1,c
 28027  015840  0E40               	movlw	64
 28028  015842  6EE6               	movwf	postinc1,c
 28029                           
 28030                           ;stkvar	_chan @ sp[(-8)+-1]
 28031  015844  0EF7               	movlw	-9
 28032  015846  50E3               	movf	plusw1,w,c
 28033  015848  6EE6               	movwf	postinc1,c
 28034  01584A  ECD9  F0E8         	call	_get_raw_result	;wreg free
 28035  01584E  0060  F004  F00B   	movff	btemp,btemp+10
 28036  015854  0060  F008  F00C   	movff	btemp+1,btemp+11
 28037  01585A  500B               	movf	(btemp+10)^0,w,c
 28038  01585C  6E05               	movwf	(btemp+4)^0,c
 28039  01585E  500C               	movf	(btemp+11)^0,w,c
 28040  015860  6E06               	movwf	(btemp+5)^0,c
 28041  015862  6A07               	clrf	(btemp+6)^0,c
 28042  015864  6A08               	clrf	(btemp+7)^0,c
 28043  015866  0060  F017  FFE6   	movff	btemp+4,postinc1
 28044  01586C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28045  015872  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28046  015878  0060  F023  FFE6   	movff	btemp+7,postinc1
 28047  01587E  0E00               	movlw	0
 28048  015880  6EE6               	movwf	postinc1,c
 28049  015882  EC2C  F0C6         	call	___xxtofl	;wreg free
 28050  015886  0060  F007  FFE6   	movff	btemp,postinc1
 28051  01588C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28052  015892  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28053  015898  0060  F013  FFE6   	movff	btemp+3,postinc1
 28054  01589E  EC6E  F09F         	call	___flmul	;wreg free
 28055  0158A2  0060  F007  FFE6   	movff	btemp,postinc1
 28056  0158A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28057  0158AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28058  0158B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 28059  0158BA  EC61  F0A7         	call	___fldiv	;wreg free
 28060  0158BE  D019               	goto	l1948
 28061  0158C0                     l10474:
 28062                           
 28063                           ;daq.c: 157:   return 0.0;
 28064  0158C0  0E00               	movlw	0
 28065  0158C2  6E01               	movwf	btemp^0,c
 28066  0158C4  0E00               	movlw	0
 28067  0158C6  6E02               	movwf	(btemp+1)^0,c
 28068  0158C8  0E00               	movlw	0
 28069  0158CA  6E03               	movwf	(btemp+2)^0,c
 28070  0158CC  0E00               	movlw	0
 28071  0158CE                     L34:
 28072  0158CE  6E04               	movwf	(btemp+3)^0,c
 28073  0158D0  D010               	goto	l1948
 28074  0158D2                     l10482:
 28075                           
 28076                           ;stkvar	_to_what @ sp[(0)+-2]
 28077  0158D2  0EFE               	movlw	-2
 28078  0158D4  50E3               	movf	plusw1,w,c
 28079  0158D6  6E0B               	movwf	(btemp+10)^0,c
 28080  0158D8  6A0C               	clrf	(btemp+11)^0,c
 28081                           
 28082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28083                           ; Switch size 1, requested type "simple"
 28084                           ; Number of cases is 1, Range of values is 0 to 0
 28085                           ; switch strategies available:
 28086                           ; Name         Instructions Cycles
 28087                           ; simple_byte            4     3 (average)
 28088                           ;	Chosen strategy is simple_byte
 28089  0158DA  500C               	movf	(btemp+11)^0,w,c
 28090  0158DC  0A00               	xorlw	0	; case 0
 28091  0158DE  A4D8               	btfss	status,2,c
 28092  0158E0  D7EF               	goto	l10474
 28093                           
 28094                           ; Switch size 1, requested type "simple"
 28095                           ; Number of cases is 2, Range of values is 0 to 1
 28096                           ; switch strategies available:
 28097                           ; Name         Instructions Cycles
 28098                           ; simple_byte            7     4 (average)
 28099                           ;	Chosen strategy is simple_byte
 28100  0158E2  500B               	movf	(btemp+10)^0,w,c
 28101  0158E4  0A00               	xorlw	0	; case 0
 28102  0158E6  B4D8               	btfsc	status,2,c
 28103  0158E8  D5AA               	goto	l10428
 28104  0158EA  0A01               	xorlw	1	; case 1
 28105  0158EC  B4D8               	btfsc	status,2,c
 28106  0158EE  D72A               	goto	l10460
 28107  0158F0  D7E7               	goto	l10474
 28108  0158F2                     l1948:
 28109                           
 28110                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 28111  0158F2  52E5               	movf	postdec1,f,c
 28112  0158F4  52E5               	movf	postdec1,f,c
 28113  0158F6  0012               	return		;funcret
 28114  0158F8                     __end_of_conv_raw_result:
 28115                           	opt callstack 0
 28116                           
 28117 ;; *************** function _nanf *****************
 28118 ;; Defined at:
 28119 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 28120 ;; Parameters:    Size  Location     Type
 28121 ;;  s               2  [STACK] PTR const unsigned char 
 28122 ;;		 -> STR_118(1), STR_80(1), 
 28123 ;; Auto vars:     Size  Location     Type
 28124 ;;  u               4  [STACK] struct .
 28125 ;; Return value:  Size  Location     Type
 28126 ;;                  4  [STACK] float 
 28127 ;; Registers used:
 28128 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 28129 ;; Tracked objects:
 28130 ;;		On entry : 0/0
 28131 ;;		On exit  : 0/0
 28132 ;;		Unchanged: 0/0
 28133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28138 ;;Total ram usage:        0 bytes
 28139 ;; Hardware stack levels used:    1
 28140 ;; Hardware stack levels required when called:   15
 28141 ;; This function calls:
 28142 ;;		Nothing
 28143 ;; This function is called by:
 28144 ;;		_conv_raw_result
 28145 ;; This function uses a reentrant model
 28146 ;;
 28147                           
 28148                           	psect	text115
 28149  01C2A0                     __ptext115:
 28150                           	opt callstack 0
 28151  01C2A0                     _nanf:
 28152                           	opt callstack 0
 28153                           
 28154                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28155  01C2A0  52E6               	movf	postinc1,f,c
 28156  01C2A2  52E6               	movf	postinc1,f,c
 28157  01C2A4  52E6               	movf	postinc1,f,c
 28158  01C2A6  52E6               	movf	postinc1,f,c
 28159                           
 28160                           ;incstack = 0
 28161 ;; hardware stack exceeded
 28162  01C2A8  0EFF               	movlw	255
 28163  01C2AA  6E09               	movwf	(btemp+8)^0,c
 28164  01C2AC  0EFF               	movlw	255
 28165  01C2AE  6E0A               	movwf	(btemp+9)^0,c
 28166  01C2B0  0EFF               	movlw	255
 28167  01C2B2  6E0B               	movwf	(btemp+10)^0,c
 28168  01C2B4  0E7F               	movlw	127
 28169  01C2B6  6E0C               	movwf	(btemp+11)^0,c
 28170                           
 28171                           ;stkvar	_u @ sp[(-4)+0]
 28172  01C2B8  0EFC               	movlw	-4
 28173  01C2BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 28174  01C2C0  0EFD               	movlw	-3
 28175  01C2C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28176  01C2C8  0EFE               	movlw	-2
 28177  01C2CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28178  01C2D0  0EFF               	movlw	-1
 28179  01C2D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28180                           
 28181                           ;stkvar	_u @ sp[(-4)+0]
 28182  01C2D8  0EFC               	movlw	-4
 28183  01C2DA  006F FF8C  F001    	movff	plusw1,btemp
 28184  01C2E0  0EFD               	movlw	-3
 28185  01C2E2  006F FF8C  F002    	movff	plusw1,btemp+1
 28186  01C2E8  0EFE               	movlw	-2
 28187  01C2EA  006F FF8C  F003    	movff	plusw1,btemp+2
 28188  01C2F0  0EFF               	movlw	-1
 28189  01C2F2  006F FF8C  F004    	movff	plusw1,btemp+3
 28190                           
 28191                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 28192  01C2F8  0EFA               	movlw	250
 28193  01C2FA  26E1               	addwf	fsr1l,f,c
 28194  01C2FC  0EFF               	movlw	255
 28195  01C2FE  22E2               	addwfc	fsr1h,f,c
 28196  01C300  0012               	return		;funcret
 28197  01C302                     __end_of_nanf:
 28198                           	opt callstack 0
 28199                           
 28200 ;; *************** function _get_raw_result *****************
 28201 ;; Defined at:
 28202 ;;		line 120 in file "daq.c"
 28203 ;; Parameters:    Size  Location     Type
 28204 ;;  index           1  [STACK] const enum E16605
 28205 ;; Auto vars:     Size  Location     Type
 28206 ;;		None
 28207 ;; Return value:  Size  Location     Type
 28208 ;;                  2  [STACK] unsigned short 
 28209 ;; Registers used:
 28210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 28211 ;; Tracked objects:
 28212 ;;		On entry : 0/1
 28213 ;;		On exit  : 0/0
 28214 ;;		Unchanged: 0/0
 28215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28220 ;;Total ram usage:        0 bytes
 28221 ;; Hardware stack levels used:    1
 28222 ;; Hardware stack levels required when called:   15
 28223 ;; This function calls:
 28224 ;;		Nothing
 28225 ;; This function is called by:
 28226 ;;		_main
 28227 ;;		_current_sensor_cal
 28228 ;;		_conv_raw_result
 28229 ;; This function uses a reentrant model
 28230 ;;
 28231                           
 28232                           	psect	text116
 28233  01D1B2                     __ptext116:
 28234                           	opt callstack 0
 28235  01D1B2                     _get_raw_result:
 28236                           	opt callstack 0
 28237                           
 28238                           ;daq.c: 120: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 121: {;daq.c
      +                          : 122:  return R.raw_adc[index];
 28239                           ;stkvar	_index @ sp[(0)+-1]
 28240                           
 28241                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28242                           ;incstack = 0
 28243 ;; hardware stack exceeded
 28244  01D1B2  0EFF               	movlw	-1
 28245  01D1B4  50E3               	movf	plusw1,w,c
 28246  01D1B6  0D02               	mullw	2
 28247  01D1B8  50F3               	movf	243,w,c
 28248  01D1BA  0FAE               	addlw	low _R
 28249  01D1BC  6ED9               	movwf	fsr2l,c
 28250  01D1BE  6ADA               	clrf	fsr2h,c
 28251  01D1C0  006F FF78  F001    	movff	postinc2,btemp
 28252  01D1C6  006F FF74  F002    	movff	postdec2,btemp+1
 28253                           
 28254                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 28255  01D1CC  52E5               	movf	postdec1,f,c
 28256  01D1CE  0012               	return		;funcret
 28257  01D1D0                     __end_of_get_raw_result:
 28258                           	opt callstack 0
 28259                           
 28260 ;; *************** function ___xxtofl *****************
 28261 ;; Defined at:
 28262 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 28263 ;; Parameters:    Size  Location     Type
 28264 ;;  sign            1  [STACK] unsigned char 
 28265 ;;  val             4  [STACK] long 
 28266 ;; Auto vars:     Size  Location     Type
 28267 ;;  arg             4  [STACK] unsigned long 
 28268 ;;  exp             1  [STACK] unsigned char 
 28269 ;; Return value:  Size  Location     Type
 28270 ;;                  4  [STACK] unsigned char 
 28271 ;; Registers used:
 28272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28273 ;; Tracked objects:
 28274 ;;		On entry : 0/0
 28275 ;;		On exit  : 0/0
 28276 ;;		Unchanged: 0/0
 28277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28282 ;;Total ram usage:        0 bytes
 28283 ;; Hardware stack levels used:    1
 28284 ;; Hardware stack levels required when called:   15
 28285 ;; This function calls:
 28286 ;;		Nothing
 28287 ;; This function is called by:
 28288 ;;		_conv_raw_result
 28289 ;;		_init_bsoc
 28290 ;; This function uses a reentrant model
 28291 ;;
 28292                           
 28293                           	psect	text117
 28294  018C58                     __ptext117:
 28295                           	opt callstack 0
 28296  018C58                     ___xxtofl:
 28297                           	opt callstack 0
 28298                           
 28299                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28300  018C58  0E05               	movlw	5
 28301  018C5A  26E1               	addwf	fsr1l,f,c
 28302  018C5C  0E00               	movlw	0
 28303  018C5E  22E2               	addwfc	fsr1h,f,c
 28304                           
 28305                           ;stkvar	_sign @ sp[(-5)+-1]
 28306                           
 28307                           ;incstack = 0
 28308 ;; hardware stack exceeded
 28309  018C60  0EFA               	movlw	-6
 28310  018C62  50E3               	movf	plusw1,w,c
 28311  018C64  B4D8               	btfsc	status,2,c
 28312  018C66  D01D               	goto	l10356
 28313                           
 28314                           ;stkvar	_val @ sp[(-5)+-5]
 28315  018C68  0EF9               	movlw	-7
 28316  018C6A  AEE3               	btfss	plusw1,7,c
 28317  018C6C  D01A               	goto	l10356
 28318                           
 28319                           ;stkvar	_val @ sp[(-5)+-5]
 28320  018C6E  0EF6               	movlw	-10
 28321  018C70  006F FF8C  F009    	movff	plusw1,btemp+8
 28322  018C76  0EF7               	movlw	-9
 28323  018C78  006F FF8C  F00A    	movff	plusw1,btemp+9
 28324  018C7E  0EF8               	movlw	-8
 28325  018C80  006F FF8C  F00B    	movff	plusw1,btemp+10
 28326  018C86  0EF9               	movlw	-7
 28327  018C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 28328  018C8E  1E09               	comf	(btemp+8)^0,f,c
 28329  018C90  1E0A               	comf	(btemp+9)^0,f,c
 28330  018C92  1E0B               	comf	(btemp+10)^0,f,c
 28331  018C94  1E0C               	comf	(btemp+11)^0,f,c
 28332  018C96  2A09               	incf	(btemp+8)^0,f,c
 28333  018C98  0E00               	movlw	0
 28334  018C9A  220A               	addwfc	(btemp+9)^0,f,c
 28335  018C9C  220B               	addwfc	(btemp+10)^0,f,c
 28336  018C9E  220C               	addwfc	(btemp+11)^0,f,c
 28337  018CA0  D010               	goto	L35
 28338  018CA2                     l10356:
 28339                           
 28340                           ;stkvar	_val @ sp[(-5)+-5]
 28341  018CA2  0EF6               	movlw	-10
 28342  018CA4  006F FF8C  F009    	movff	plusw1,btemp+8
 28343  018CAA  0EF7               	movlw	-9
 28344  018CAC  006F FF8C  F00A    	movff	plusw1,btemp+9
 28345  018CB2  0EF8               	movlw	-8
 28346  018CB4  006F FF8C  F00B    	movff	plusw1,btemp+10
 28347  018CBA  0EF9               	movlw	-7
 28348  018CBC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28349  018CC2                     L35:
 28350                           
 28351                           ;stkvar	_arg @ sp[(-5)+0]
 28352  018CC2  0EFB               	movlw	-5
 28353  018CC4  0060  F027  FFE3   	movff	btemp+8,plusw1
 28354  018CCA  0EFC               	movlw	-4
 28355  018CCC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28356  018CD2  0EFD               	movlw	-3
 28357  018CD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28358  018CDA  0EFE               	movlw	-2
 28359  018CDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 28360                           
 28361                           ;stkvar	_val @ sp[(-5)+-5]
 28362  018CE2  0EF6               	movlw	-10
 28363  018CE4  50E3               	movf	plusw1,w,c
 28364  018CE6  E113               	bnz	l10364
 28365  018CE8  0EF7               	movlw	-9
 28366  018CEA  50E3               	movf	plusw1,w,c
 28367  018CEC  E110               	bnz	l10364
 28368  018CEE  0EF8               	movlw	-8
 28369  018CF0  50E3               	movf	plusw1,w,c
 28370  018CF2  E10D               	bnz	l10364
 28371  018CF4  0EF9               	movlw	-7
 28372  018CF6  50E3               	movf	plusw1,w,c
 28373  018CF8  A4D8               	btfss	status,2,c
 28374  018CFA  D009               	goto	l10364
 28375  018CFC  0E00               	movlw	0
 28376  018CFE  6E01               	movwf	btemp^0,c
 28377  018D00  0E00               	movlw	0
 28378  018D02  6E02               	movwf	(btemp+1)^0,c
 28379  018D04  0E00               	movlw	0
 28380  018D06  6E03               	movwf	(btemp+2)^0,c
 28381  018D08  0E00               	movlw	0
 28382  018D0A  6E04               	movwf	(btemp+3)^0,c
 28383  018D0C  D0A2               	goto	l3317
 28384  018D0E                     l10364:
 28385  018D0E  0E96               	movlw	150
 28386  018D10  6E0C               	movwf	(btemp+11)^0,c
 28387                           
 28388                           ;stkvar	_exp @ sp[(-5)+4]
 28389  018D12  0EFF               	movlw	-1
 28390  018D14  0060  F033  FFE3   	movff	btemp+11,plusw1
 28391  018D1A  D00B               	goto	l10368
 28392  018D1C                     l10366:
 28393                           
 28394                           ;stkvar	_exp @ sp[(-5)+4]
 28395  018D1C  0EFF               	movlw	-1
 28396  018D1E  2AE3               	incf	plusw1,f,c
 28397                           
 28398                           ;stkvar	_arg @ sp[(-5)+0]
 28399  018D20  90D8               	bcf	status,0,c
 28400  018D22  0EFE               	movlw	-2
 28401  018D24  32E3               	rrcf	plusw1,f,c
 28402  018D26  0EFD               	movlw	-3
 28403  018D28  32E3               	rrcf	plusw1,f,c
 28404  018D2A  0EFC               	movlw	-4
 28405  018D2C  32E3               	rrcf	plusw1,f,c
 28406  018D2E  0EFB               	movlw	-5
 28407  018D30  32E3               	rrcf	plusw1,f,c
 28408  018D32                     l10368:
 28409                           
 28410                           ;stkvar	_arg @ sp[(-5)+0]
 28411  018D32  50E1               	movf	fsr1l,w,c
 28412  018D34  0FFB               	addlw	-5
 28413  018D36  6ED9               	movwf	fsr2l,c
 28414  018D38  50E2               	movf	fsr1h,w,c
 28415  018D3A  6EDA               	movwf	fsr2h,c
 28416  018D3C  0EFF               	movlw	255
 28417  018D3E  22DA               	addwfc	fsr2h,f,c
 28418  018D40  52DE               	movf	postinc2,f,c
 28419  018D42  52DE               	movf	postinc2,f,c
 28420  018D44  52DE               	movf	postinc2,f,c
 28421  018D46  0EFE               	movlw	254
 28422  018D48  14DD               	andwf	postdec2,w,c
 28423  018D4A  B4D8               	btfsc	status,2,c
 28424  018D4C  D018               	goto	l10376
 28425  018D4E  D7E6               	goto	l10366
 28426  018D50                     l10370:
 28427                           
 28428                           ;stkvar	_exp @ sp[(-5)+4]
 28429  018D50  0EFF               	movlw	-1
 28430  018D52  2AE3               	incf	plusw1,f,c
 28431                           
 28432                           ;stkvar	_arg @ sp[(-5)+0]
 28433  018D54  50E1               	movf	fsr1l,w,c
 28434  018D56  0FFB               	addlw	-5
 28435  018D58  6ED9               	movwf	fsr2l,c
 28436  018D5A  50E2               	movf	fsr1h,w,c
 28437  018D5C  6EDA               	movwf	fsr2h,c
 28438  018D5E  0EFF               	movlw	255
 28439  018D60  22DA               	addwfc	fsr2h,f,c
 28440  018D62  2ADE               	incf	postinc2,f,c
 28441  018D64  0E00               	movlw	0
 28442  018D66  22DE               	addwfc	postinc2,f,c
 28443  018D68  22DE               	addwfc	postinc2,f,c
 28444  018D6A  22DE               	addwfc	postinc2,f,c
 28445                           
 28446                           ;stkvar	_arg @ sp[(-5)+0]
 28447  018D6C  90D8               	bcf	status,0,c
 28448  018D6E  0EFE               	movlw	-2
 28449  018D70  32E3               	rrcf	plusw1,f,c
 28450  018D72  0EFD               	movlw	-3
 28451  018D74  32E3               	rrcf	plusw1,f,c
 28452  018D76  0EFC               	movlw	-4
 28453  018D78  32E3               	rrcf	plusw1,f,c
 28454  018D7A  0EFB               	movlw	-5
 28455  018D7C  32E3               	rrcf	plusw1,f,c
 28456  018D7E                     l10376:
 28457                           
 28458                           ;stkvar	_arg @ sp[(-5)+0]
 28459  018D7E  50E1               	movf	fsr1l,w,c
 28460  018D80  0FFB               	addlw	-5
 28461  018D82  6ED9               	movwf	fsr2l,c
 28462  018D84  50E2               	movf	fsr1h,w,c
 28463  018D86  6EDA               	movwf	fsr2h,c
 28464  018D88  0EFF               	movlw	255
 28465  018D8A  22DA               	addwfc	fsr2h,f,c
 28466  018D8C  52DE               	movf	postinc2,f,c
 28467  018D8E  52DE               	movf	postinc2,f,c
 28468  018D90  52DE               	movf	postinc2,f,c
 28469  018D92  0EFF               	movlw	255
 28470  018D94  14DD               	andwf	postdec2,w,c
 28471  018D96  B4D8               	btfsc	status,2,c
 28472  018D98  D00C               	goto	l10380
 28473  018D9A  D7DA               	goto	l10370
 28474  018D9C                     l10378:
 28475                           
 28476                           ;stkvar	_exp @ sp[(-5)+4]
 28477  018D9C  0EFF               	movlw	-1
 28478  018D9E  06E3               	decf	plusw1,f,c
 28479                           
 28480                           ;stkvar	_arg @ sp[(-5)+0]
 28481  018DA0  90D8               	bcf	status,0,c
 28482  018DA2  0EFB               	movlw	-5
 28483  018DA4  36E3               	rlcf	plusw1,f,c
 28484  018DA6  0EFC               	movlw	-4
 28485  018DA8  36E3               	rlcf	plusw1,f,c
 28486  018DAA  0EFD               	movlw	-3
 28487  018DAC  36E3               	rlcf	plusw1,f,c
 28488  018DAE  0EFE               	movlw	-2
 28489  018DB0  36E3               	rlcf	plusw1,f,c
 28490  018DB2                     l10380:
 28491                           
 28492                           ;stkvar	_arg @ sp[(-5)+0]
 28493  018DB2  0EFD               	movlw	-3
 28494  018DB4  BEE3               	btfsc	plusw1,7,c
 28495  018DB6  D007               	goto	u9530
 28496                           
 28497                           ;stkvar	_exp @ sp[(-5)+4]
 28498  018DB8  0EFF               	movlw	-1
 28499  018DBA  006F FF8C  F001    	movff	plusw1,btemp
 28500  018DC0  0E02               	movlw	2
 28501  018DC2  6001               	cpfslt	btemp^0,c
 28502  018DC4  D7EB               	goto	l10378
 28503  018DC6                     u9530:
 28504                           
 28505                           ;stkvar	_exp @ sp[(-5)+4]
 28506  018DC6  0EFF               	movlw	-1
 28507  018DC8  B0E3               	btfsc	plusw1,0,c
 28508  018DCA  D002               	goto	l10388
 28509                           
 28510                           ;stkvar	_arg @ sp[(-5)+0]
 28511  018DCC  0EFD               	movlw	-3
 28512  018DCE  9EE3               	bcf	plusw1,7,c
 28513  018DD0                     l10388:
 28514                           
 28515                           ;stkvar	_exp @ sp[(-5)+4]
 28516  018DD0  50E1               	movf	fsr1l,w,c
 28517  018DD2  0FFF               	addlw	-1
 28518  018DD4  6ED9               	movwf	fsr2l,c
 28519  018DD6  50E2               	movf	fsr1h,w,c
 28520  018DD8  6EDA               	movwf	fsr2h,c
 28521  018DDA  0EFF               	movlw	255
 28522  018DDC  22DA               	addwfc	fsr2h,f,c
 28523  018DDE  90D8               	bcf	status,0,c
 28524  018DE0  32DF               	rrcf	indf2,f,c
 28525                           
 28526                           ;stkvar	_exp @ sp[(-5)+4]
 28527  018DE2  0EFF               	movlw	-1
 28528  018DE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28529  018DEA  0060  F030  F005   	movff	btemp+11,btemp+4
 28530  018DF0  6A06               	clrf	(btemp+5)^0,c
 28531  018DF2  6A07               	clrf	(btemp+6)^0,c
 28532  018DF4  6A08               	clrf	(btemp+7)^0,c
 28533  018DF6  0060  F014  F008   	movff	btemp+4,btemp+7
 28534  018DFC  6A07               	clrf	(btemp+6)^0,c
 28535  018DFE  6A06               	clrf	(btemp+5)^0,c
 28536  018E00  6A05               	clrf	(btemp+4)^0,c
 28537                           
 28538                           ;stkvar	_arg @ sp[(-5)+0]
 28539  018E02  50E1               	movf	fsr1l,w,c
 28540  018E04  0FFB               	addlw	-5
 28541  018E06  6ED9               	movwf	fsr2l,c
 28542  018E08  50E2               	movf	fsr1h,w,c
 28543  018E0A  6EDA               	movwf	fsr2h,c
 28544  018E0C  0EFF               	movlw	255
 28545  018E0E  22DA               	addwfc	fsr2h,f,c
 28546  018E10  5005               	movf	(btemp+4)^0,w,c
 28547  018E12  12DE               	iorwf	postinc2,f,c
 28548  018E14  5006               	movf	(btemp+5)^0,w,c
 28549  018E16  12DE               	iorwf	postinc2,f,c
 28550  018E18  5007               	movf	(btemp+6)^0,w,c
 28551  018E1A  12DE               	iorwf	postinc2,f,c
 28552  018E1C  5008               	movf	(btemp+7)^0,w,c
 28553  018E1E  12DE               	iorwf	postinc2,f,c
 28554                           
 28555                           ;stkvar	_sign @ sp[(-5)+-1]
 28556  018E20  0EFA               	movlw	-6
 28557  018E22  50E3               	movf	plusw1,w,c
 28558  018E24  B4D8               	btfsc	status,2,c
 28559  018E26  D005               	goto	l10398
 28560                           
 28561                           ;stkvar	_val @ sp[(-5)+-5]
 28562  018E28  0EF9               	movlw	-7
 28563  018E2A  AEE3               	btfss	plusw1,7,c
 28564  018E2C  D002               	goto	l10398
 28565                           
 28566                           ;stkvar	_arg @ sp[(-5)+0]
 28567  018E2E  0EFE               	movlw	-2
 28568  018E30  8EE3               	bsf	plusw1,7,c
 28569  018E32                     l10398:
 28570                           
 28571                           ;stkvar	_arg @ sp[(-5)+0]
 28572  018E32  0EFB               	movlw	-5
 28573  018E34  006F FF8C  F001    	movff	plusw1,btemp
 28574  018E3A  0EFC               	movlw	-4
 28575  018E3C  006F FF8C  F002    	movff	plusw1,btemp+1
 28576  018E42  0EFD               	movlw	-3
 28577  018E44  006F FF8C  F003    	movff	plusw1,btemp+2
 28578  018E4A  0EFE               	movlw	-2
 28579  018E4C  006F FF8C  F004    	movff	plusw1,btemp+3
 28580  018E52                     l3317:
 28581                           
 28582                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 28583  018E52  0EF6               	movlw	246
 28584  018E54  26E1               	addwf	fsr1l,f,c
 28585  018E56  0EFF               	movlw	255
 28586  018E58  22E2               	addwfc	fsr1h,f,c
 28587  018E5A  0012               	return		;funcret
 28588  018E5C                     __end_of___xxtofl:
 28589                           	opt callstack 0
 28590                           
 28591 ;; *************** function ___fldiv *****************
 28592 ;; Defined at:
 28593 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 28594 ;; Parameters:    Size  Location     Type
 28595 ;;  b               4  [STACK] unsigned char 
 28596 ;;  a               4  [STACK] unsigned char 
 28597 ;; Auto vars:     Size  Location     Type
 28598 ;;  grs             4  [STACK] unsigned long 
 28599 ;;  rem             4  [STACK] unsigned long 
 28600 ;;  new_exp         2  [STACK] short 
 28601 ;;  aexp            1  [STACK] unsigned char 
 28602 ;;  bexp            1  [STACK] unsigned char 
 28603 ;;  sign            1  [STACK] unsigned char 
 28604 ;; Return value:  Size  Location     Type
 28605 ;;                  4  [STACK] unsigned char 
 28606 ;; Registers used:
 28607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 28608 ;; Tracked objects:
 28609 ;;		On entry : 0/0
 28610 ;;		On exit  : 0/0
 28611 ;;		Unchanged: 0/0
 28612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28617 ;;Total ram usage:        0 bytes
 28618 ;; Hardware stack levels used:    1
 28619 ;; Hardware stack levels required when called:   15
 28620 ;; This function calls:
 28621 ;;		Nothing
 28622 ;; This function is called by:
 28623 ;;		_conv_raw_result
 28624 ;;		_convert_dac_raw
 28625 ;;		_calc_bsoc
 28626 ;;		_init_bsoc
 28627 ;;		_esr_check
 28628 ;;		_efgtoa
 28629 ;; This function uses a reentrant model
 28630 ;;
 28631                           
 28632                           	psect	text118
 28633  014EC2                     __ptext118:
 28634                           	opt callstack 0
 28635  014EC2                     ___fldiv:
 28636                           	opt callstack 0
 28637                           
 28638                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28639  014EC2  0E0D               	movlw	13
 28640  014EC4  26E1               	addwf	fsr1l,f,c
 28641  014EC6  0E00               	movlw	0
 28642  014EC8  22E2               	addwfc	fsr1h,f,c
 28643                           
 28644                           ;stkvar	_b @ sp[(-13)+-4]
 28645                           
 28646                           ;incstack = 0
 28647 ;; hardware stack exceeded
 28648  014ECA  0EF2               	movlw	242
 28649  014ECC  24E1               	addwf	fsr1l,w,c
 28650  014ECE  6ED9               	movwf	fsr2l,c
 28651  014ED0  0EFF               	movlw	255
 28652  014ED2  20E2               	addwfc	fsr1h,w,c
 28653  014ED4  6EDA               	movwf	fsr2h,c
 28654  014ED6  50DF               	movf	indf2,w,c
 28655  014ED8  6E0C               	movwf	(btemp+11)^0,c
 28656  014EDA  0E80               	movlw	128
 28657  014EDC  160C               	andwf	(btemp+11)^0,f,c
 28658                           
 28659                           ;stkvar	_sign @ sp[(-13)+12]
 28660  014EDE  0EFF               	movlw	-1
 28661  014EE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28662                           
 28663                           ;stkvar	_b @ sp[(-13)+-4]
 28664  014EE6  0EF2               	movlw	242
 28665  014EE8  24E1               	addwf	fsr1l,w,c
 28666  014EEA  6ED9               	movwf	fsr2l,c
 28667  014EEC  0EFF               	movlw	255
 28668  014EEE  20E2               	addwfc	fsr1h,w,c
 28669  014EF0  6EDA               	movwf	fsr2h,c
 28670  014EF2  50DF               	movf	indf2,w,c
 28671  014EF4  6E0C               	movwf	(btemp+11)^0,c
 28672  014EF6  90D8               	bcf	status,0,c
 28673  014EF8  340C               	rlcf	(btemp+11)^0,w,c
 28674  014EFA  6E0B               	movwf	(btemp+10)^0,c
 28675                           
 28676                           ;stkvar	_bexp @ sp[(-13)+11]
 28677  014EFC  0EFE               	movlw	-2
 28678  014EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28679                           
 28680                           ;stkvar	_b @ sp[(-13)+-4]
 28681  014F04  0EF1               	movlw	241
 28682  014F06  24E1               	addwf	fsr1l,w,c
 28683  014F08  6ED9               	movwf	fsr2l,c
 28684  014F0A  0EFF               	movlw	255
 28685  014F0C  20E2               	addwfc	fsr1h,w,c
 28686  014F0E  6EDA               	movwf	fsr2h,c
 28687  014F10  AEDF               	btfss	indf2,7,c
 28688  014F12  D002               	goto	l8928
 28689                           
 28690                           ;stkvar	_bexp @ sp[(-13)+11]
 28691  014F14  0EFE               	movlw	-2
 28692  014F16  80E3               	bsf	plusw1,0,c
 28693  014F18                     l8928:
 28694                           
 28695                           ;stkvar	_bexp @ sp[(-13)+11]
 28696  014F18  0EFE               	movlw	-2
 28697  014F1A  50E3               	movf	plusw1,w,c
 28698  014F1C  B4D8               	btfsc	status,2,c
 28699  014F1E  D027               	goto	l8938
 28700                           
 28701                           ;stkvar	_bexp @ sp[(-13)+11]
 28702  014F20  0EFE               	movlw	-2
 28703  014F22  28E3               	incf	plusw1,w,c
 28704  014F24  A4D8               	btfss	status,2,c
 28705  014F26  D018               	goto	l8934
 28706  014F28  0E00               	movlw	0
 28707  014F2A  6E09               	movwf	(btemp+8)^0,c
 28708  014F2C  0E00               	movlw	0
 28709  014F2E  6E0A               	movwf	(btemp+9)^0,c
 28710  014F30  0E00               	movlw	0
 28711  014F32  6E0B               	movwf	(btemp+10)^0,c
 28712  014F34  0E00               	movlw	0
 28713  014F36  6E0C               	movwf	(btemp+11)^0,c
 28714                           
 28715                           ;stkvar	_b @ sp[(-13)+-4]
 28716  014F38  0EEF               	movlw	-17
 28717  014F3A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28718  014F40  0EF0               	movlw	-16
 28719  014F42  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28720  014F48  0EF1               	movlw	-15
 28721  014F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28722  014F50  0EF2               	movlw	-14
 28723  014F52  0060  F033  FFE3   	movff	btemp+11,plusw1
 28724  014F58                     l8934:
 28725                           
 28726                           ;stkvar	_b @ sp[(-13)+-4]
 28727  014F58  0EF1               	movlw	-15
 28728  014F5A  8EE3               	bsf	plusw1,7,c
 28729                           
 28730                           ;stkvar	_b @ sp[(-13)+-4]
 28731  014F5C  0EF2               	movlw	242
 28732  014F5E  24E1               	addwf	fsr1l,w,c
 28733  014F60  6ED9               	movwf	fsr2l,c
 28734  014F62  0EFF               	movlw	255
 28735  014F64  20E2               	addwfc	fsr1h,w,c
 28736  014F66  6EDA               	movwf	fsr2h,c
 28737  014F68  0E00               	movlw	0
 28738  014F6A  6EDF               	movwf	indf2,c
 28739  014F6C  D018               	goto	l8940
 28740  014F6E                     l8938:
 28741  014F6E  0E00               	movlw	0
 28742  014F70  6E09               	movwf	(btemp+8)^0,c
 28743  014F72  0E00               	movlw	0
 28744  014F74  6E0A               	movwf	(btemp+9)^0,c
 28745  014F76  0E00               	movlw	0
 28746  014F78  6E0B               	movwf	(btemp+10)^0,c
 28747  014F7A  0E00               	movlw	0
 28748  014F7C  6E0C               	movwf	(btemp+11)^0,c
 28749                           
 28750                           ;stkvar	_b @ sp[(-13)+-4]
 28751  014F7E  0EEF               	movlw	-17
 28752  014F80  0060  F027  FFE3   	movff	btemp+8,plusw1
 28753  014F86  0EF0               	movlw	-16
 28754  014F88  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28755  014F8E  0EF1               	movlw	-15
 28756  014F90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28757  014F96  0EF2               	movlw	-14
 28758  014F98  0060  F033  FFE3   	movff	btemp+11,plusw1
 28759  014F9E                     l8940:
 28760                           
 28761                           ;stkvar	_a @ sp[(-13)+-8]
 28762  014F9E  0EEE               	movlw	238
 28763  014FA0  24E1               	addwf	fsr1l,w,c
 28764  014FA2  6ED9               	movwf	fsr2l,c
 28765  014FA4  0EFF               	movlw	255
 28766  014FA6  20E2               	addwfc	fsr1h,w,c
 28767  014FA8  6EDA               	movwf	fsr2h,c
 28768  014FAA  50DF               	movf	indf2,w,c
 28769  014FAC  6E0C               	movwf	(btemp+11)^0,c
 28770  014FAE  0E80               	movlw	128
 28771  014FB0  160C               	andwf	(btemp+11)^0,f,c
 28772                           
 28773                           ;stkvar	_sign @ sp[(-13)+12]
 28774  014FB2  50E1               	movf	fsr1l,w,c
 28775  014FB4  0FFF               	addlw	-1
 28776  014FB6  6ED9               	movwf	fsr2l,c
 28777  014FB8  50E2               	movf	fsr1h,w,c
 28778  014FBA  6EDA               	movwf	fsr2h,c
 28779  014FBC  0EFF               	movlw	255
 28780  014FBE  22DA               	addwfc	fsr2h,f,c
 28781  014FC0  500C               	movf	(btemp+11)^0,w,c
 28782  014FC2  1ADF               	xorwf	indf2,f,c
 28783                           
 28784                           ;stkvar	_a @ sp[(-13)+-8]
 28785  014FC4  0EEE               	movlw	238
 28786  014FC6  24E1               	addwf	fsr1l,w,c
 28787  014FC8  6ED9               	movwf	fsr2l,c
 28788  014FCA  0EFF               	movlw	255
 28789  014FCC  20E2               	addwfc	fsr1h,w,c
 28790  014FCE  6EDA               	movwf	fsr2h,c
 28791  014FD0  50DF               	movf	indf2,w,c
 28792  014FD2  6E0C               	movwf	(btemp+11)^0,c
 28793  014FD4  90D8               	bcf	status,0,c
 28794  014FD6  340C               	rlcf	(btemp+11)^0,w,c
 28795  014FD8  6E0B               	movwf	(btemp+10)^0,c
 28796                           
 28797                           ;stkvar	_aexp @ sp[(-13)+10]
 28798  014FDA  0EFD               	movlw	-3
 28799  014FDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28800                           
 28801                           ;stkvar	_a @ sp[(-13)+-8]
 28802  014FE2  0EED               	movlw	237
 28803  014FE4  24E1               	addwf	fsr1l,w,c
 28804  014FE6  6ED9               	movwf	fsr2l,c
 28805  014FE8  0EFF               	movlw	255
 28806  014FEA  20E2               	addwfc	fsr1h,w,c
 28807  014FEC  6EDA               	movwf	fsr2h,c
 28808  014FEE  AEDF               	btfss	indf2,7,c
 28809  014FF0  D002               	goto	l8948
 28810                           
 28811                           ;stkvar	_aexp @ sp[(-13)+10]
 28812  014FF2  0EFD               	movlw	-3
 28813  014FF4  80E3               	bsf	plusw1,0,c
 28814  014FF6                     l8948:
 28815                           
 28816                           ;stkvar	_aexp @ sp[(-13)+10]
 28817  014FF6  0EFD               	movlw	-3
 28818  014FF8  50E3               	movf	plusw1,w,c
 28819  014FFA  B4D8               	btfsc	status,2,c
 28820  014FFC  D027               	goto	l8958
 28821                           
 28822                           ;stkvar	_aexp @ sp[(-13)+10]
 28823  014FFE  0EFD               	movlw	-3
 28824  015000  28E3               	incf	plusw1,w,c
 28825  015002  A4D8               	btfss	status,2,c
 28826  015004  D018               	goto	l8954
 28827  015006  0E00               	movlw	0
 28828  015008  6E09               	movwf	(btemp+8)^0,c
 28829  01500A  0E00               	movlw	0
 28830  01500C  6E0A               	movwf	(btemp+9)^0,c
 28831  01500E  0E00               	movlw	0
 28832  015010  6E0B               	movwf	(btemp+10)^0,c
 28833  015012  0E00               	movlw	0
 28834  015014  6E0C               	movwf	(btemp+11)^0,c
 28835                           
 28836                           ;stkvar	_a @ sp[(-13)+-8]
 28837  015016  0EEB               	movlw	-21
 28838  015018  0060  F027  FFE3   	movff	btemp+8,plusw1
 28839  01501E  0EEC               	movlw	-20
 28840  015020  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28841  015026  0EED               	movlw	-19
 28842  015028  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28843  01502E  0EEE               	movlw	-18
 28844  015030  0060  F033  FFE3   	movff	btemp+11,plusw1
 28845  015036                     l8954:
 28846                           
 28847                           ;stkvar	_a @ sp[(-13)+-8]
 28848  015036  0EED               	movlw	-19
 28849  015038  8EE3               	bsf	plusw1,7,c
 28850                           
 28851                           ;stkvar	_a @ sp[(-13)+-8]
 28852  01503A  0EEE               	movlw	238
 28853  01503C  24E1               	addwf	fsr1l,w,c
 28854  01503E  6ED9               	movwf	fsr2l,c
 28855  015040  0EFF               	movlw	255
 28856  015042  20E2               	addwfc	fsr1h,w,c
 28857  015044  6EDA               	movwf	fsr2h,c
 28858  015046  0E00               	movlw	0
 28859  015048  6EDF               	movwf	indf2,c
 28860  01504A  D018               	goto	l8960
 28861  01504C                     l8958:
 28862  01504C  0E00               	movlw	0
 28863  01504E  6E09               	movwf	(btemp+8)^0,c
 28864  015050  0E00               	movlw	0
 28865  015052  6E0A               	movwf	(btemp+9)^0,c
 28866  015054  0E00               	movlw	0
 28867  015056  6E0B               	movwf	(btemp+10)^0,c
 28868  015058  0E00               	movlw	0
 28869  01505A  6E0C               	movwf	(btemp+11)^0,c
 28870                           
 28871                           ;stkvar	_a @ sp[(-13)+-8]
 28872  01505C  0EEB               	movlw	-21
 28873  01505E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28874  015064  0EEC               	movlw	-20
 28875  015066  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28876  01506C  0EED               	movlw	-19
 28877  01506E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28878  015074  0EEE               	movlw	-18
 28879  015076  0060  F033  FFE3   	movff	btemp+11,plusw1
 28880  01507C                     l8960:
 28881                           
 28882                           ;stkvar	_a @ sp[(-13)+-8]
 28883  01507C  0EEB               	movlw	-21
 28884  01507E  50E3               	movf	plusw1,w,c
 28885  015080  E139               	bnz	l8972
 28886  015082  0EEC               	movlw	-20
 28887  015084  50E3               	movf	plusw1,w,c
 28888  015086  E136               	bnz	l8972
 28889  015088  0EED               	movlw	-19
 28890  01508A  50E3               	movf	plusw1,w,c
 28891  01508C  E133               	bnz	l8972
 28892  01508E  0EEE               	movlw	-18
 28893  015090  50E3               	movf	plusw1,w,c
 28894  015092  A4D8               	btfss	status,2,c
 28895  015094  D02F               	goto	l8972
 28896                           
 28897                           ;stkvar	_b @ sp[(-13)+-4]
 28898  015096  0EEF               	movlw	-17
 28899  015098  6AE3               	clrf	plusw1,c
 28900  01509A  0EF0               	movlw	-16
 28901  01509C  6AE3               	clrf	plusw1,c
 28902  01509E  0EF1               	movlw	-15
 28903  0150A0  6AE3               	clrf	plusw1,c
 28904  0150A2  0EF2               	movlw	-14
 28905  0150A4  6AE3               	clrf	plusw1,c
 28906                           
 28907                           ;stkvar	_b @ sp[(-13)+-4]
 28908  0150A6  0EF1               	movlw	241
 28909  0150A8  24E1               	addwf	fsr1l,w,c
 28910  0150AA  6ED9               	movwf	fsr2l,c
 28911  0150AC  0EFF               	movlw	255
 28912  0150AE  20E2               	addwfc	fsr1h,w,c
 28913  0150B0  6EDA               	movwf	fsr2h,c
 28914  0150B2  0E80               	movlw	128
 28915  0150B4  12DE               	iorwf	postinc2,f,c
 28916  0150B6  0E7F               	movlw	127
 28917  0150B8  12DD               	iorwf	postdec2,f,c
 28918  0150BA                     l8966:
 28919                           
 28920                           ;stkvar	_sign @ sp[(-13)+12]
 28921  0150BA  0EFF               	movlw	-1
 28922  0150BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28923                           
 28924                           ;stkvar	_b @ sp[(-13)+-4]
 28925  0150C2  0EF2               	movlw	242
 28926  0150C4  24E1               	addwf	fsr1l,w,c
 28927  0150C6  6ED9               	movwf	fsr2l,c
 28928  0150C8  0EFF               	movlw	255
 28929  0150CA  20E2               	addwfc	fsr1h,w,c
 28930  0150CC  6EDA               	movwf	fsr2h,c
 28931  0150CE  500C               	movf	(btemp+11)^0,w,c
 28932  0150D0  12DF               	iorwf	indf2,f,c
 28933                           
 28934                           ;stkvar	_b @ sp[(-13)+-4]
 28935  0150D2  0EEF               	movlw	-17
 28936  0150D4  006F FF8C  F001    	movff	plusw1,btemp
 28937  0150DA  0EF0               	movlw	-16
 28938  0150DC  006F FF8C  F002    	movff	plusw1,btemp+1
 28939  0150E2  0EF1               	movlw	-15
 28940  0150E4  006F FF8C  F003    	movff	plusw1,btemp+2
 28941  0150EA  0EF2               	movlw	-14
 28942  0150EC  006F FF8C  F004    	movff	plusw1,btemp+3
 28943  0150F2  D19F               	goto	l3241
 28944  0150F4                     l8972:
 28945                           
 28946                           ;stkvar	_bexp @ sp[(-13)+11]
 28947  0150F4  0EFE               	movlw	-2
 28948  0150F6  50E3               	movf	plusw1,w,c
 28949  0150F8  A4D8               	btfss	status,2,c
 28950  0150FA  D009               	goto	l8980
 28951  0150FC  0E00               	movlw	0
 28952  0150FE  6E01               	movwf	btemp^0,c
 28953  015100  0E00               	movlw	0
 28954  015102  6E02               	movwf	(btemp+1)^0,c
 28955  015104  0E00               	movlw	0
 28956  015106  6E03               	movwf	(btemp+2)^0,c
 28957  015108  0E00               	movlw	0
 28958  01510A  6E04               	movwf	(btemp+3)^0,c
 28959  01510C  D192               	goto	l3241
 28960  01510E                     l8980:
 28961                           
 28962                           ;stkvar	_bexp @ sp[(-13)+11]
 28963  01510E  0EFE               	movlw	-2
 28964  015110  50E3               	movf	plusw1,w,c
 28965  015112  6E0B               	movwf	(btemp+10)^0,c
 28966  015114  6A0C               	clrf	(btemp+11)^0,c
 28967                           
 28968                           ;stkvar	_aexp @ sp[(-13)+10]
 28969  015116  0EFD               	movlw	-3
 28970  015118  50E3               	movf	plusw1,w,c
 28971  01511A  5E0B               	subwf	(btemp+10)^0,f,c
 28972  01511C  0E00               	movlw	0
 28973  01511E  5A0C               	subwfb	(btemp+11)^0,f,c
 28974  015120  0E7F               	movlw	127
 28975  015122  260B               	addwf	(btemp+10)^0,f,c
 28976  015124  0E00               	movlw	0
 28977  015126  220C               	addwfc	(btemp+11)^0,f,c
 28978                           
 28979                           ;stkvar	_new_exp @ sp[(-13)+8]
 28980  015128  0EFB               	movlw	-5
 28981  01512A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28982  015130  0EFC               	movlw	-4
 28983  015132  0060  F033  FFE3   	movff	btemp+11,plusw1
 28984                           
 28985                           ;stkvar	_b @ sp[(-13)+-4]
 28986  015138  0EEF               	movlw	-17
 28987  01513A  006F FF8C  F009    	movff	plusw1,btemp+8
 28988  015140  0EF0               	movlw	-16
 28989  015142  006F FF8C  F00A    	movff	plusw1,btemp+9
 28990  015148  0EF1               	movlw	-15
 28991  01514A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28992  015150  0EF2               	movlw	-14
 28993  015152  006F FF8C  F00C    	movff	plusw1,btemp+11
 28994                           
 28995                           ;stkvar	_rem @ sp[(-13)+4]
 28996  015158  0EF7               	movlw	-9
 28997  01515A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28998  015160  0EF8               	movlw	-8
 28999  015162  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29000  015168  0EF9               	movlw	-7
 29001  01516A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29002  015170  0EFA               	movlw	-6
 29003  015172  0060  F033  FFE3   	movff	btemp+11,plusw1
 29004                           
 29005                           ;stkvar	_b @ sp[(-13)+-4]
 29006  015178  0EEF               	movlw	-17
 29007  01517A  6AE3               	clrf	plusw1,c
 29008  01517C  0EF0               	movlw	-16
 29009  01517E  6AE3               	clrf	plusw1,c
 29010  015180  0EF1               	movlw	-15
 29011  015182  6AE3               	clrf	plusw1,c
 29012  015184  0EF2               	movlw	-14
 29013  015186  6AE3               	clrf	plusw1,c
 29014                           
 29015                           ;stkvar	_grs @ sp[(-13)+0]
 29016  015188  0EF3               	movlw	-13
 29017  01518A  6AE3               	clrf	plusw1,c
 29018  01518C  0EF4               	movlw	-12
 29019  01518E  6AE3               	clrf	plusw1,c
 29020  015190  0EF5               	movlw	-11
 29021  015192  6AE3               	clrf	plusw1,c
 29022  015194  0EF6               	movlw	-10
 29023  015196  6AE3               	clrf	plusw1,c
 29024                           
 29025                           ;stkvar	_aexp @ sp[(-13)+10]
 29026  015198  0EFD               	movlw	-3
 29027  01519A  6AE3               	clrf	plusw1,c
 29028  01519C  D050               	goto	l9008
 29029  01519E                     l8990:
 29030                           
 29031                           ;stkvar	_aexp @ sp[(-13)+10]
 29032  01519E  0EFD               	movlw	-3
 29033  0151A0  50E3               	movf	plusw1,w,c
 29034  0151A2  B4D8               	btfsc	status,2,c
 29035  0151A4  D020               	goto	l9000
 29036                           
 29037                           ;stkvar	_rem @ sp[(-13)+4]
 29038  0151A6  90D8               	bcf	status,0,c
 29039  0151A8  0EF7               	movlw	-9
 29040  0151AA  36E3               	rlcf	plusw1,f,c
 29041  0151AC  0EF8               	movlw	-8
 29042  0151AE  36E3               	rlcf	plusw1,f,c
 29043  0151B0  0EF9               	movlw	-7
 29044  0151B2  36E3               	rlcf	plusw1,f,c
 29045  0151B4  0EFA               	movlw	-6
 29046  0151B6  36E3               	rlcf	plusw1,f,c
 29047                           
 29048                           ;stkvar	_b @ sp[(-13)+-4]
 29049  0151B8  90D8               	bcf	status,0,c
 29050  0151BA  0EEF               	movlw	-17
 29051  0151BC  36E3               	rlcf	plusw1,f,c
 29052  0151BE  0EF0               	movlw	-16
 29053  0151C0  36E3               	rlcf	plusw1,f,c
 29054  0151C2  0EF1               	movlw	-15
 29055  0151C4  36E3               	rlcf	plusw1,f,c
 29056  0151C6  0EF2               	movlw	-14
 29057  0151C8  36E3               	rlcf	plusw1,f,c
 29058                           
 29059                           ;stkvar	_grs @ sp[(-13)+0]
 29060  0151CA  0EF6               	movlw	-10
 29061  0151CC  AEE3               	btfss	plusw1,7,c
 29062  0151CE  D002               	goto	l8998
 29063                           
 29064                           ;stkvar	_b @ sp[(-13)+-4]
 29065  0151D0  0EEF               	movlw	-17
 29066  0151D2  80E3               	bsf	plusw1,0,c
 29067  0151D4                     l8998:
 29068                           
 29069                           ;stkvar	_grs @ sp[(-13)+0]
 29070  0151D4  90D8               	bcf	status,0,c
 29071  0151D6  0EF3               	movlw	-13
 29072  0151D8  36E3               	rlcf	plusw1,f,c
 29073  0151DA  0EF4               	movlw	-12
 29074  0151DC  36E3               	rlcf	plusw1,f,c
 29075  0151DE  0EF5               	movlw	-11
 29076  0151E0  36E3               	rlcf	plusw1,f,c
 29077  0151E2  0EF6               	movlw	-10
 29078  0151E4  36E3               	rlcf	plusw1,f,c
 29079  0151E6                     l9000:
 29080                           
 29081                           ;stkvar	_a @ sp[(-13)+-8]
 29082                           ;stkvar	_rem @ sp[(-13)+4]
 29083  0151E6  50E1               	movf	fsr1l,w,c
 29084  0151E8  0FF7               	addlw	-9
 29085  0151EA  6ED9               	movwf	fsr2l,c
 29086  0151EC  50E2               	movf	fsr1h,w,c
 29087  0151EE  6EDA               	movwf	fsr2h,c
 29088  0151F0  0EFF               	movlw	255
 29089  0151F2  22DA               	addwfc	fsr2h,f,c
 29090  0151F4  0EEB               	movlw	-21
 29091  0151F6  50E3               	movf	plusw1,w,c
 29092  0151F8  5CDE               	subwf	postinc2,w,c
 29093  0151FA  0EEC               	movlw	-20
 29094  0151FC  50E3               	movf	plusw1,w,c
 29095  0151FE  58DE               	subwfb	postinc2,w,c
 29096  015200  0EED               	movlw	-19
 29097  015202  50E3               	movf	plusw1,w,c
 29098  015204  58DE               	subwfb	postinc2,w,c
 29099  015206  0EEE               	movlw	-18
 29100  015208  50E3               	movf	plusw1,w,c
 29101  01520A  58DE               	subwfb	postinc2,w,c
 29102  01520C  A0D8               	btfss	status,0,c
 29103  01520E  D015               	goto	l9006
 29104                           
 29105                           ;stkvar	_grs @ sp[(-13)+0]
 29106  015210  0EF6               	movlw	-10
 29107  015212  8CE3               	bsf	plusw1,6,c
 29108                           
 29109                           ;stkvar	_a @ sp[(-13)+-8]
 29110                           ;stkvar	_rem @ sp[(-13)+4]
 29111  015214  50E1               	movf	fsr1l,w,c
 29112  015216  0FF7               	addlw	-9
 29113  015218  6ED9               	movwf	fsr2l,c
 29114  01521A  50E2               	movf	fsr1h,w,c
 29115  01521C  6EDA               	movwf	fsr2h,c
 29116  01521E  0EFF               	movlw	255
 29117  015220  22DA               	addwfc	fsr2h,f,c
 29118  015222  0EEB               	movlw	-21
 29119  015224  50E3               	movf	plusw1,w,c
 29120  015226  5EDE               	subwf	postinc2,f,c
 29121  015228  0EEC               	movlw	-20
 29122  01522A  50E3               	movf	plusw1,w,c
 29123  01522C  5ADE               	subwfb	postinc2,f,c
 29124  01522E  0EED               	movlw	-19
 29125  015230  50E3               	movf	plusw1,w,c
 29126  015232  5ADE               	subwfb	postinc2,f,c
 29127  015234  0EEE               	movlw	-18
 29128  015236  50E3               	movf	plusw1,w,c
 29129  015238  5ADE               	subwfb	postinc2,f,c
 29130  01523A                     l9006:
 29131                           
 29132                           ;stkvar	_aexp @ sp[(-13)+10]
 29133  01523A  0EFD               	movlw	-3
 29134  01523C  2AE3               	incf	plusw1,f,c
 29135  01523E                     l9008:
 29136                           
 29137                           ;stkvar	_aexp @ sp[(-13)+10]
 29138  01523E  0EFD               	movlw	-3
 29139  015240  006F FF8C  F001    	movff	plusw1,btemp
 29140  015246  0E19               	movlw	25
 29141  015248  6401               	cpfsgt	btemp^0,c
 29142  01524A  D7A9               	goto	l8990
 29143                           
 29144                           ;stkvar	_rem @ sp[(-13)+4]
 29145  01524C  0EF7               	movlw	-9
 29146  01524E  50E3               	movf	plusw1,w,c
 29147  015250  E10A               	bnz	u7120
 29148  015252  0EF8               	movlw	-8
 29149  015254  50E3               	movf	plusw1,w,c
 29150  015256  E107               	bnz	u7120
 29151  015258  0EF9               	movlw	-7
 29152  01525A  50E3               	movf	plusw1,w,c
 29153  01525C  E104               	bnz	u7120
 29154  01525E  0EFA               	movlw	-6
 29155  015260  50E3               	movf	plusw1,w,c
 29156  015262  B4D8               	btfsc	status,2,c
 29157  015264  D024               	goto	l9024
 29158  015266                     u7120:
 29159                           
 29160                           ;stkvar	_grs @ sp[(-13)+0]
 29161  015266  0EF3               	movlw	-13
 29162  015268  80E3               	bsf	plusw1,0,c
 29163  01526A  D021               	goto	l9024
 29164  01526C                     l9014:
 29165                           
 29166                           ;stkvar	_b @ sp[(-13)+-4]
 29167  01526C  90D8               	bcf	status,0,c
 29168  01526E  0EEF               	movlw	-17
 29169  015270  36E3               	rlcf	plusw1,f,c
 29170  015272  0EF0               	movlw	-16
 29171  015274  36E3               	rlcf	plusw1,f,c
 29172  015276  0EF1               	movlw	-15
 29173  015278  36E3               	rlcf	plusw1,f,c
 29174  01527A  0EF2               	movlw	-14
 29175  01527C  36E3               	rlcf	plusw1,f,c
 29176                           
 29177                           ;stkvar	_grs @ sp[(-13)+0]
 29178  01527E  0EF6               	movlw	-10
 29179  015280  AEE3               	btfss	plusw1,7,c
 29180  015282  D002               	goto	l9020
 29181                           
 29182                           ;stkvar	_b @ sp[(-13)+-4]
 29183  015284  0EEF               	movlw	-17
 29184  015286  80E3               	bsf	plusw1,0,c
 29185  015288                     l9020:
 29186                           
 29187                           ;stkvar	_grs @ sp[(-13)+0]
 29188  015288  90D8               	bcf	status,0,c
 29189  01528A  0EF3               	movlw	-13
 29190  01528C  36E3               	rlcf	plusw1,f,c
 29191  01528E  0EF4               	movlw	-12
 29192  015290  36E3               	rlcf	plusw1,f,c
 29193  015292  0EF5               	movlw	-11
 29194  015294  36E3               	rlcf	plusw1,f,c
 29195  015296  0EF6               	movlw	-10
 29196  015298  36E3               	rlcf	plusw1,f,c
 29197                           
 29198                           ;stkvar	_new_exp @ sp[(-13)+8]
 29199  01529A  50E1               	movf	fsr1l,w,c
 29200  01529C  0FFB               	addlw	-5
 29201  01529E  6ED9               	movwf	fsr2l,c
 29202  0152A0  50E2               	movf	fsr1h,w,c
 29203  0152A2  6EDA               	movwf	fsr2h,c
 29204  0152A4  0EFF               	movlw	255
 29205  0152A6  22DA               	addwfc	fsr2h,f,c
 29206  0152A8  06DE               	decf	postinc2,f,c
 29207  0152AA  0E00               	movlw	0
 29208  0152AC  5ADD               	subwfb	postdec2,f,c
 29209  0152AE                     l9024:
 29210                           
 29211                           ;stkvar	_b @ sp[(-13)+-4]
 29212  0152AE  0EF1               	movlw	-15
 29213  0152B0  AEE3               	btfss	plusw1,7,c
 29214  0152B2  D7DC               	goto	l9014
 29215                           
 29216                           ;stkvar	_aexp @ sp[(-13)+10]
 29217  0152B4  0EFD               	movlw	-3
 29218  0152B6  6AE3               	clrf	plusw1,c
 29219                           
 29220                           ;stkvar	_grs @ sp[(-13)+0]
 29221  0152B8  0EF6               	movlw	-10
 29222  0152BA  AEE3               	btfss	plusw1,7,c
 29223  0152BC  D020               	goto	l9038
 29224                           
 29225                           ;stkvar	_grs @ sp[(-13)+0]
 29226  0152BE  50E1               	movf	fsr1l,w,c
 29227  0152C0  0FF3               	addlw	-13
 29228  0152C2  6ED9               	movwf	fsr2l,c
 29229  0152C4  50E2               	movf	fsr1h,w,c
 29230  0152C6  6EDA               	movwf	fsr2h,c
 29231  0152C8  0EFF               	movlw	255
 29232  0152CA  22DA               	addwfc	fsr2h,f,c
 29233  0152CC  0EFF               	movlw	255
 29234  0152CE  14DE               	andwf	postinc2,w,c
 29235  0152D0  6E09               	movwf	(btemp+8)^0,c
 29236  0152D2  0EFF               	movlw	255
 29237  0152D4  14DE               	andwf	postinc2,w,c
 29238  0152D6  6E0A               	movwf	(btemp+9)^0,c
 29239  0152D8  0EFF               	movlw	255
 29240  0152DA  14DE               	andwf	postinc2,w,c
 29241  0152DC  6E0B               	movwf	(btemp+10)^0,c
 29242  0152DE  0E7F               	movlw	127
 29243  0152E0  14DE               	andwf	postinc2,w,c
 29244  0152E2  6E0C               	movwf	(btemp+11)^0,c
 29245  0152E4  5009               	movf	(btemp+8)^0,w,c
 29246  0152E6  100A               	iorwf	(btemp+9)^0,w,c
 29247  0152E8  100B               	iorwf	(btemp+10)^0,w,c
 29248  0152EA  100C               	iorwf	(btemp+11)^0,w,c
 29249  0152EC  B4D8               	btfsc	status,2,c
 29250  0152EE  D004               	goto	l9034
 29251  0152F0                     u7160:
 29252                           
 29253                           ;stkvar	_aexp @ sp[(-13)+10]
 29254  0152F0  0EFD               	movlw	-3
 29255  0152F2  6AE3               	clrf	plusw1,c
 29256  0152F4  2AE3               	incf	plusw1,f,c
 29257  0152F6  D003               	goto	l9038
 29258  0152F8                     l9034:
 29259                           
 29260                           ;stkvar	_b @ sp[(-13)+-4]
 29261  0152F8  0EEF               	movlw	-17
 29262  0152FA  B0E3               	btfsc	plusw1,0,c
 29263  0152FC  D7F9               	goto	u7160
 29264  0152FE                     l9038:
 29265                           
 29266                           ;stkvar	_aexp @ sp[(-13)+10]
 29267  0152FE  0EFD               	movlw	-3
 29268  015300  50E3               	movf	plusw1,w,c
 29269  015302  B4D8               	btfsc	status,2,c
 29270  015304  D036               	goto	l9048
 29271                           
 29272                           ;stkvar	_b @ sp[(-13)+-4]
 29273  015306  50E1               	movf	fsr1l,w,c
 29274  015308  0FEF               	addlw	-17
 29275  01530A  6ED9               	movwf	fsr2l,c
 29276  01530C  50E2               	movf	fsr1h,w,c
 29277  01530E  6EDA               	movwf	fsr2h,c
 29278  015310  0EFF               	movlw	255
 29279  015312  22DA               	addwfc	fsr2h,f,c
 29280  015314  2ADE               	incf	postinc2,f,c
 29281  015316  0E00               	movlw	0
 29282  015318  22DE               	addwfc	postinc2,f,c
 29283  01531A  22DE               	addwfc	postinc2,f,c
 29284  01531C  22DE               	addwfc	postinc2,f,c
 29285                           
 29286                           ;stkvar	_b @ sp[(-13)+-4]
 29287  01531E  0EF2               	movlw	-14
 29288  015320  A0E3               	btfss	plusw1,0,c
 29289  015322  D027               	goto	l9048
 29290  015324  0E01               	movlw	1
 29291  015326  6E0C               	movwf	(btemp+11)^0,c
 29292                           
 29293                           ;stkvar	_b @ sp[(-13)+-4]
 29294  015328  50E1               	movf	fsr1l,w,c
 29295  01532A  0FEF               	addlw	-17
 29296  01532C  6ED9               	movwf	fsr2l,c
 29297  01532E  50E2               	movf	fsr1h,w,c
 29298  015330  6EDA               	movwf	fsr2h,c
 29299  015332  0EFF               	movlw	255
 29300  015334  22DA               	addwfc	fsr2h,f,c
 29301  015336  280C               	incf	(btemp+11)^0,w,c
 29302  015338  52DE               	movf	postinc2,f,c
 29303  01533A  D008               	goto	u7200
 29304  01533C                     u7205:
 29305  01533C  52DE               	movf	postinc2,f,c
 29306  01533E  90D8               	bcf	status,0,c
 29307  015340  BEDC               	btfsc	preinc2,7,c
 29308  015342  80D8               	bsf	status,0,c
 29309  015344  32DD               	rrcf	postdec2,f,c
 29310  015346  32DD               	rrcf	postdec2,f,c
 29311  015348  32DD               	rrcf	postdec2,f,c
 29312  01534A  32DE               	rrcf	postinc2,f,c
 29313  01534C                     u7200:
 29314  01534C  2EE8               	decfsz	wreg,f,c
 29315  01534E  D7F6               	goto	u7205
 29316                           
 29317                           ;stkvar	_new_exp @ sp[(-13)+8]
 29318  015350  0EFB               	movlw	-5
 29319  015352  50E3               	movf	plusw1,w,c
 29320  015354  0F01               	addlw	1
 29321  015356  6E01               	movwf	btemp^0,c
 29322  015358  0EFB               	movlw	-5
 29323  01535A  0060  F007  FFE3   	movff	btemp,plusw1
 29324  015360  6A01               	clrf	btemp^0,c
 29325  015362  0EFC               	movlw	-4
 29326  015364  50E3               	movf	plusw1,w,c
 29327  015366  2001               	addwfc	btemp^0,w,c
 29328  015368  6E01               	movwf	btemp^0,c
 29329  01536A  0EFC               	movlw	-4
 29330  01536C  0060  F007  FFE3   	movff	btemp,plusw1
 29331  015372                     l9048:
 29332                           
 29333                           ;stkvar	_new_exp @ sp[(-13)+8]
 29334  015372  0EFC               	movlw	-4
 29335  015374  BEE3               	btfsc	plusw1,7,c
 29336  015376  D01B               	goto	l9054
 29337  015378  0EFC               	movlw	-4
 29338  01537A  50E3               	movf	plusw1,w,c
 29339  01537C  E104               	bnz	u7210
 29340  01537E  0EFB               	movlw	-5
 29341  015380  28E3               	incf	plusw1,w,c
 29342  015382  A0D8               	btfss	status,0,c
 29343  015384  D014               	goto	l9054
 29344  015386                     u7210:
 29345  015386  0EFF               	movlw	255
 29346  015388  6E0B               	movwf	(btemp+10)^0,c
 29347  01538A  0E00               	movlw	0
 29348  01538C  6E0C               	movwf	(btemp+11)^0,c
 29349                           
 29350                           ;stkvar	_new_exp @ sp[(-13)+8]
 29351  01538E  0EFB               	movlw	-5
 29352  015390  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29353  015396  0EFC               	movlw	-4
 29354  015398  0060  F033  FFE3   	movff	btemp+11,plusw1
 29355                           
 29356                           ;stkvar	_b @ sp[(-13)+-4]
 29357  01539E  0EEF               	movlw	-17
 29358  0153A0  6AE3               	clrf	plusw1,c
 29359  0153A2  0EF0               	movlw	-16
 29360  0153A4  6AE3               	clrf	plusw1,c
 29361  0153A6  0EF1               	movlw	-15
 29362  0153A8  6AE3               	clrf	plusw1,c
 29363  0153AA  0EF2               	movlw	-14
 29364  0153AC  6AE3               	clrf	plusw1,c
 29365  0153AE                     l9054:
 29366                           
 29367                           ;stkvar	_new_exp @ sp[(-13)+8]
 29368  0153AE  0EFC               	movlw	-4
 29369  0153B0  BEE3               	btfsc	plusw1,7,c
 29370  0153B2  D007               	goto	u7220
 29371  0153B4  0EFC               	movlw	-4
 29372  0153B6  50E3               	movf	plusw1,w,c
 29373  0153B8  E112               	bnz	l9060
 29374  0153BA  0EFB               	movlw	-5
 29375  0153BC  04E3               	decf	plusw1,w,c
 29376  0153BE  B0D8               	btfsc	status,0,c
 29377  0153C0  D00E               	goto	l9060
 29378  0153C2                     u7220:
 29379                           
 29380                           ;stkvar	_new_exp @ sp[(-13)+8]
 29381  0153C2  0EFB               	movlw	-5
 29382  0153C4  6AE3               	clrf	plusw1,c
 29383  0153C6  0EFC               	movlw	-4
 29384  0153C8  6AE3               	clrf	plusw1,c
 29385                           
 29386                           ;stkvar	_b @ sp[(-13)+-4]
 29387  0153CA  0EEF               	movlw	-17
 29388  0153CC  6AE3               	clrf	plusw1,c
 29389  0153CE  0EF0               	movlw	-16
 29390  0153D0  6AE3               	clrf	plusw1,c
 29391  0153D2  0EF1               	movlw	-15
 29392  0153D4  6AE3               	clrf	plusw1,c
 29393  0153D6  0EF2               	movlw	-14
 29394  0153D8  6AE3               	clrf	plusw1,c
 29395                           
 29396                           ;stkvar	_sign @ sp[(-13)+12]
 29397  0153DA  0EFF               	movlw	-1
 29398  0153DC  6AE3               	clrf	plusw1,c
 29399  0153DE                     l9060:
 29400                           
 29401                           ;stkvar	_new_exp @ sp[(-13)+8]
 29402                           ;stkvar	_bexp @ sp[(-13)+11]
 29403  0153DE  0EFB               	movlw	-5
 29404  0153E0  006F FF8C  F001    	movff	plusw1,btemp
 29405  0153E6  0EFE               	movlw	-2
 29406  0153E8  0060  F007  FFE3   	movff	btemp,plusw1
 29407                           
 29408                           ;stkvar	_bexp @ sp[(-13)+11]
 29409  0153EE  0EFE               	movlw	-2
 29410  0153F0  A0E3               	btfss	plusw1,0,c
 29411  0153F2  D009               	goto	l9066
 29412                           
 29413                           ;stkvar	_b @ sp[(-13)+-4]
 29414  0153F4  0EF1               	movlw	241
 29415  0153F6  24E1               	addwf	fsr1l,w,c
 29416  0153F8  6ED9               	movwf	fsr2l,c
 29417  0153FA  0EFF               	movlw	255
 29418  0153FC  20E2               	addwfc	fsr1h,w,c
 29419  0153FE  6EDA               	movwf	fsr2h,c
 29420  015400  0E00               	movlw	0
 29421  015402  8EDB               	bsf	plusw2,7,c
 29422  015404  D008               	goto	l9068
 29423  015406                     l9066:
 29424                           
 29425                           ;stkvar	_b @ sp[(-13)+-4]
 29426  015406  0EF1               	movlw	241
 29427  015408  24E1               	addwf	fsr1l,w,c
 29428  01540A  6ED9               	movwf	fsr2l,c
 29429  01540C  0EFF               	movlw	255
 29430  01540E  20E2               	addwfc	fsr1h,w,c
 29431  015410  6EDA               	movwf	fsr2h,c
 29432  015412  0E7F               	movlw	127
 29433  015414  16DF               	andwf	indf2,f,c
 29434  015416                     l9068:
 29435                           
 29436                           ;stkvar	_b @ sp[(-13)+-4]
 29437  015416  0EF2               	movlw	242
 29438  015418  24E1               	addwf	fsr1l,w,c
 29439  01541A  6ED9               	movwf	fsr2l,c
 29440  01541C  0EFF               	movlw	255
 29441  01541E  20E2               	addwfc	fsr1h,w,c
 29442  015420  6EDA               	movwf	fsr2h,c
 29443                           
 29444                           ;stkvar	_bexp @ sp[(-13)+11]
 29445  015422  0EFE               	movlw	-2
 29446  015424  006F FF8C  F00C    	movff	plusw1,btemp+11
 29447  01542A  90D8               	bcf	status,0,c
 29448  01542C  300C               	rrcf	(btemp+11)^0,w,c
 29449  01542E  6EDF               	movwf	indf2,c
 29450  015430  D644               	goto	l8966
 29451  015432                     l3241:
 29452                           
 29453                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29454  015432  0EEB               	movlw	235
 29455  015434  26E1               	addwf	fsr1l,f,c
 29456  015436  0EFF               	movlw	255
 29457  015438  22E2               	addwfc	fsr1h,f,c
 29458  01543A  0012               	return		;funcret
 29459  01543C                     __end_of___fldiv:
 29460                           	opt callstack 0
 29461                           
 29462 ;; *************** function ___flge *****************
 29463 ;; Defined at:
 29464 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 29465 ;; Parameters:    Size  Location     Type
 29466 ;;  ff1             4  [STACK] unsigned char 
 29467 ;;  ff2             4  [STACK] unsigned char 
 29468 ;; Auto vars:     Size  Location     Type
 29469 ;;		None
 29470 ;; Return value:  Size  Location     Type
 29471 ;;		None               void
 29472 ;; Registers used:
 29473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 29474 ;; Tracked objects:
 29475 ;;		On entry : 0/0
 29476 ;;		On exit  : 0/0
 29477 ;;		Unchanged: 0/0
 29478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29483 ;;Total ram usage:        0 bytes
 29484 ;; Hardware stack levels used:    1
 29485 ;; Hardware stack levels required when called:   15
 29486 ;; This function calls:
 29487 ;;		Nothing
 29488 ;; This function is called by:
 29489 ;;		_main
 29490 ;;		_convert_dac_raw
 29491 ;;		_calc_ror_data
 29492 ;;		_check_day_time
 29493 ;;		_calc_bsoc
 29494 ;;		_efgtoa
 29495 ;; This function uses a reentrant model
 29496 ;;
 29497                           
 29498                           	psect	text119
 29499  019B02                     __ptext119:
 29500                           	opt callstack 0
 29501  019B02                     ___flge:
 29502                           	opt callstack 0
 29503                           
 29504                           ;stkvar	_ff1 @ sp[(0)+-4]
 29505                           
 29506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29507                           ;incstack = 0
 29508 ;; hardware stack exceeded
 29509  019B02  50E1               	movf	fsr1l,w,c
 29510  019B04  0FFC               	addlw	-4
 29511  019B06  6ED9               	movwf	fsr2l,c
 29512  019B08  50E2               	movf	fsr1h,w,c
 29513  019B0A  6EDA               	movwf	fsr2h,c
 29514  019B0C  0EFF               	movlw	255
 29515  019B0E  22DA               	addwfc	fsr2h,f,c
 29516  019B10  0E00               	movlw	0
 29517  019B12  14DE               	andwf	postinc2,w,c
 29518  019B14  6E09               	movwf	(btemp+8)^0,c
 29519  019B16  0E00               	movlw	0
 29520  019B18  14DE               	andwf	postinc2,w,c
 29521  019B1A  6E0A               	movwf	(btemp+9)^0,c
 29522  019B1C  0E80               	movlw	128
 29523  019B1E  14DE               	andwf	postinc2,w,c
 29524  019B20  6E0B               	movwf	(btemp+10)^0,c
 29525  019B22  0E7F               	movlw	127
 29526  019B24  14DE               	andwf	postinc2,w,c
 29527  019B26  6E0C               	movwf	(btemp+11)^0,c
 29528  019B28  5009               	movf	(btemp+8)^0,w,c
 29529  019B2A  100A               	iorwf	(btemp+9)^0,w,c
 29530  019B2C  100B               	iorwf	(btemp+10)^0,w,c
 29531  019B2E  100C               	iorwf	(btemp+11)^0,w,c
 29532  019B30  A4D8               	btfss	status,2,c
 29533  019B32  D008               	goto	l9342
 29534                           
 29535                           ;stkvar	_ff1 @ sp[(0)+-4]
 29536  019B34  0EFC               	movlw	-4
 29537  019B36  6AE3               	clrf	plusw1,c
 29538  019B38  0EFD               	movlw	-3
 29539  019B3A  6AE3               	clrf	plusw1,c
 29540  019B3C  0EFE               	movlw	-2
 29541  019B3E  6AE3               	clrf	plusw1,c
 29542  019B40  0EFF               	movlw	-1
 29543  019B42  6AE3               	clrf	plusw1,c
 29544  019B44                     l9342:
 29545                           
 29546                           ;stkvar	_ff2 @ sp[(0)+-8]
 29547  019B44  50E1               	movf	fsr1l,w,c
 29548  019B46  0FF8               	addlw	-8
 29549  019B48  6ED9               	movwf	fsr2l,c
 29550  019B4A  50E2               	movf	fsr1h,w,c
 29551  019B4C  6EDA               	movwf	fsr2h,c
 29552  019B4E  0EFF               	movlw	255
 29553  019B50  22DA               	addwfc	fsr2h,f,c
 29554  019B52  0E00               	movlw	0
 29555  019B54  14DE               	andwf	postinc2,w,c
 29556  019B56  6E09               	movwf	(btemp+8)^0,c
 29557  019B58  0E00               	movlw	0
 29558  019B5A  14DE               	andwf	postinc2,w,c
 29559  019B5C  6E0A               	movwf	(btemp+9)^0,c
 29560  019B5E  0E80               	movlw	128
 29561  019B60  14DE               	andwf	postinc2,w,c
 29562  019B62  6E0B               	movwf	(btemp+10)^0,c
 29563  019B64  0E7F               	movlw	127
 29564  019B66  14DE               	andwf	postinc2,w,c
 29565  019B68  6E0C               	movwf	(btemp+11)^0,c
 29566  019B6A  5009               	movf	(btemp+8)^0,w,c
 29567  019B6C  100A               	iorwf	(btemp+9)^0,w,c
 29568  019B6E  100B               	iorwf	(btemp+10)^0,w,c
 29569  019B70  100C               	iorwf	(btemp+11)^0,w,c
 29570  019B72  A4D8               	btfss	status,2,c
 29571  019B74  D008               	goto	l2922
 29572                           
 29573                           ;stkvar	_ff2 @ sp[(0)+-8]
 29574  019B76  0EF8               	movlw	-8
 29575  019B78  6AE3               	clrf	plusw1,c
 29576  019B7A  0EF9               	movlw	-7
 29577  019B7C  6AE3               	clrf	plusw1,c
 29578  019B7E  0EFA               	movlw	-6
 29579  019B80  6AE3               	clrf	plusw1,c
 29580  019B82  0EFB               	movlw	-5
 29581  019B84  6AE3               	clrf	plusw1,c
 29582  019B86                     l2922:
 29583                           
 29584                           ;stkvar	_ff1 @ sp[(0)+-4]
 29585  019B86  0EFF               	movlw	-1
 29586  019B88  AEE3               	btfss	plusw1,7,c
 29587  019B8A  D024               	goto	l9348
 29588                           
 29589                           ;stkvar	_ff1 @ sp[(0)+-4]
 29590  019B8C  0E00               	movlw	0
 29591  019B8E  6E09               	movwf	(btemp+8)^0,c
 29592  019B90  0E00               	movlw	0
 29593  019B92  6E0A               	movwf	(btemp+9)^0,c
 29594  019B94  0E00               	movlw	0
 29595  019B96  6E0B               	movwf	(btemp+10)^0,c
 29596  019B98  0E80               	movlw	128
 29597  019B9A  6E0C               	movwf	(btemp+11)^0,c
 29598  019B9C  0EFC               	movlw	-4
 29599  019B9E  50E3               	movf	plusw1,w,c
 29600  019BA0  5E09               	subwf	(btemp+8)^0,f,c
 29601  019BA2  0EFD               	movlw	-3
 29602  019BA4  50E3               	movf	plusw1,w,c
 29603  019BA6  5A0A               	subwfb	(btemp+9)^0,f,c
 29604  019BA8  0EFE               	movlw	-2
 29605  019BAA  50E3               	movf	plusw1,w,c
 29606  019BAC  5A0B               	subwfb	(btemp+10)^0,f,c
 29607  019BAE  0EFF               	movlw	-1
 29608  019BB0  50E3               	movf	plusw1,w,c
 29609  019BB2  5A0C               	subwfb	(btemp+11)^0,f,c
 29610                           
 29611                           ;stkvar	_ff1 @ sp[(0)+-4]
 29612  019BB4  0EFC               	movlw	-4
 29613  019BB6  0060  F027  FFE3   	movff	btemp+8,plusw1
 29614  019BBC  0EFD               	movlw	-3
 29615  019BBE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29616  019BC4  0EFE               	movlw	-2
 29617  019BC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29618  019BCC  0EFF               	movlw	-1
 29619  019BCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 29620  019BD4                     l9348:
 29621                           
 29622                           ;stkvar	_ff2 @ sp[(0)+-8]
 29623  019BD4  0EFB               	movlw	-5
 29624  019BD6  AEE3               	btfss	plusw1,7,c
 29625  019BD8  D024               	goto	l9352
 29626                           
 29627                           ;stkvar	_ff2 @ sp[(0)+-8]
 29628  019BDA  0E00               	movlw	0
 29629  019BDC  6E09               	movwf	(btemp+8)^0,c
 29630  019BDE  0E00               	movlw	0
 29631  019BE0  6E0A               	movwf	(btemp+9)^0,c
 29632  019BE2  0E00               	movlw	0
 29633  019BE4  6E0B               	movwf	(btemp+10)^0,c
 29634  019BE6  0E80               	movlw	128
 29635  019BE8  6E0C               	movwf	(btemp+11)^0,c
 29636  019BEA  0EF8               	movlw	-8
 29637  019BEC  50E3               	movf	plusw1,w,c
 29638  019BEE  5E09               	subwf	(btemp+8)^0,f,c
 29639  019BF0  0EF9               	movlw	-7
 29640  019BF2  50E3               	movf	plusw1,w,c
 29641  019BF4  5A0A               	subwfb	(btemp+9)^0,f,c
 29642  019BF6  0EFA               	movlw	-6
 29643  019BF8  50E3               	movf	plusw1,w,c
 29644  019BFA  5A0B               	subwfb	(btemp+10)^0,f,c
 29645  019BFC  0EFB               	movlw	-5
 29646  019BFE  50E3               	movf	plusw1,w,c
 29647  019C00  5A0C               	subwfb	(btemp+11)^0,f,c
 29648                           
 29649                           ;stkvar	_ff2 @ sp[(0)+-8]
 29650  019C02  0EF8               	movlw	-8
 29651  019C04  0060  F027  FFE3   	movff	btemp+8,plusw1
 29652  019C0A  0EF9               	movlw	-7
 29653  019C0C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29654  019C12  0EFA               	movlw	-6
 29655  019C14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29656  019C1A  0EFB               	movlw	-5
 29657  019C1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 29658  019C22                     l9352:
 29659                           
 29660                           ;stkvar	_ff1 @ sp[(0)+-4]
 29661  019C22  0EFF               	movlw	-1
 29662  019C24  7EE3               	btg	plusw1,7,c
 29663                           
 29664                           ;stkvar	_ff2 @ sp[(0)+-8]
 29665  019C26  0EFB               	movlw	-5
 29666  019C28  7EE3               	btg	plusw1,7,c
 29667                           
 29668                           ;stkvar	_ff2 @ sp[(0)+-8]
 29669                           ;stkvar	_ff1 @ sp[(0)+-4]
 29670  019C2A  50E1               	movf	fsr1l,w,c
 29671  019C2C  0FFC               	addlw	-4
 29672  019C2E  6ED9               	movwf	fsr2l,c
 29673  019C30  50E2               	movf	fsr1h,w,c
 29674  019C32  6EDA               	movwf	fsr2h,c
 29675  019C34  0EFF               	movlw	255
 29676  019C36  22DA               	addwfc	fsr2h,f,c
 29677  019C38  0EF8               	movlw	-8
 29678  019C3A  50E3               	movf	plusw1,w,c
 29679  019C3C  5CDE               	subwf	postinc2,w,c
 29680  019C3E  0EF9               	movlw	-7
 29681  019C40  50E3               	movf	plusw1,w,c
 29682  019C42  58DE               	subwfb	postinc2,w,c
 29683  019C44  0EFA               	movlw	-6
 29684  019C46  50E3               	movf	plusw1,w,c
 29685  019C48  58DE               	subwfb	postinc2,w,c
 29686  019C4A  0EFB               	movlw	-5
 29687  019C4C  50E3               	movf	plusw1,w,c
 29688  019C4E  58DE               	subwfb	postinc2,w,c
 29689  019C50  B0D8               	btfsc	status,0,c
 29690  019C52  D002               	goto	l9360
 29691  019C54  9001               	bcf	btemp& (0+255),0,c
 29692  019C56  D001               	goto	l2929
 29693  019C58                     l9360:
 29694  019C58  8001               	bsf	btemp& (0+255),0,c
 29695  019C5A                     l2929:
 29696                           
 29697                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 29698  019C5A  0EF8               	movlw	248
 29699  019C5C  26E1               	addwf	fsr1l,f,c
 29700  019C5E  0EFF               	movlw	255
 29701  019C60  22E2               	addwfc	fsr1h,f,c
 29702  019C62  0012               	return		;funcret
 29703  019C64                     __end_of___flge:
 29704                           	opt callstack 0
 29705                           
 29706 ;; *************** function _calc_model_data *****************
 29707 ;; Defined at:
 29708 ;;		line 67 in file "mbmc.c"
 29709 ;; Parameters:    Size  Location     Type
 29710 ;;		None
 29711 ;; Auto vars:     Size  Location     Type
 29712 ;;		None
 29713 ;; Return value:  Size  Location     Type
 29714 ;;                  1  [STACK] void 
 29715 ;; Registers used:
 29716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29717 ;; Tracked objects:
 29718 ;;		On entry : 0/1
 29719 ;;		On exit  : 3F/39
 29720 ;;		Unchanged: 0/0
 29721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29726 ;;Total ram usage:        0 bytes
 29727 ;; Hardware stack levels used:    1
 29728 ;; Hardware stack levels required when called:   18
 29729 ;; This function calls:
 29730 ;;		___fladd
 29731 ;;		___flmul
 29732 ;;		___flsub
 29733 ;;		_lp_filter
 29734 ;;		_start_bsoc
 29735 ;;		_stop_bsoc
 29736 ;; This function is called by:
 29737 ;;		_main
 29738 ;; This function uses a reentrant model
 29739 ;;
 29740                           
 29741                           	psect	text120
 29742  016230                     __ptext120:
 29743                           	opt callstack 0
 29744  016230                     _calc_model_data:
 29745                           	opt callstack 12
 29746                           
 29747                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 29748                           
 29749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29750                           ;incstack = 0
 29751  016230  ECEB  F0E9         	call	_stop_bsoc	;wreg free
 29752                           
 29753                           ; BSR set to: 57
 29754                           ;mbmc.c: 72:  if (!V.calib) {
 29755  016234  0101               	movlb	1	; () banked
 29756  016236  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 29757  016238  A4D8               	btfss	status,2,c
 29758  01623A  D219               	goto	l12192
 29759                           
 29760                           ; BSR set to: 1
 29761                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 29762  01623C  EE21  F3FF         	lfsr	2,_C
 29763  016240  006F FF78  F843    	movff	postinc2,_C+68	;volatile
 29764  016246  006F FF78  F844    	movff	postinc2,_C+69	;volatile
 29765  01624C  006F FF78  F845    	movff	postinc2,_C+70	;volatile
 29766  016252  006F FF74  F846    	movff	postdec2,_C+71	;volatile
 29767                           
 29768                           ; BSR set to: 1
 29769                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 29770  016258  0060  F1B3  FFE6   	movff	calc_model_data@bcror,postinc1
 29771  01625E  0060  F1B7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 29772  016264  0060  F1BB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 29773  01626A  0060  F1BF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 29774  016270  EE22  F043         	lfsr	2,_C+68	;volatile
 29775  016274  006F FF7B FFE6     	movff	postinc2,postinc1
 29776  01627A  006F FF7B FFE6     	movff	postinc2,postinc1
 29777  016280  006F FF7B FFE6     	movff	postinc2,postinc1
 29778  016286  006F FF7B FFE6     	movff	postinc2,postinc1
 29779  01628C  ECB0  F0E3         	call	___flsub	;wreg free
 29780  016290  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 29781  016296  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 29782  01629C  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 29783  0162A2  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 29784                           
 29785                           ;mbmc.c: 75:   bcror = C.c_bat;
 29786  0162A8  C843  F06C         	movff	_C+68,calc_model_data@bcror	;volatile
 29787  0162AC  C844  F06D         	movff	_C+69,calc_model_data@bcror+1	;volatile
 29788  0162B0  C845  F06E         	movff	_C+70,calc_model_data@bcror+2	;volatile
 29789  0162B4  C846  F06F         	movff	_C+71,calc_model_data@bcror+3	;volatile
 29790                           
 29791                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 29792  0162B8  EE22  F003         	lfsr	2,_C+4	;volatile
 29793  0162BC  006F FF78  F847    	movff	postinc2,_C+72	;volatile
 29794  0162C2  006F FF78  F848    	movff	postinc2,_C+73	;volatile
 29795  0162C8  006F FF78  F849    	movff	postinc2,_C+74	;volatile
 29796  0162CE  006F FF74  F84A    	movff	postdec2,_C+75	;volatile
 29797                           
 29798                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 29799  0162D4  EE22  F00F         	lfsr	2,_C+16	;volatile
 29800  0162D8  006F FF78  F853    	movff	postinc2,_C+84	;volatile
 29801  0162DE  006F FF78  F854    	movff	postinc2,_C+85	;volatile
 29802  0162E4  006F FF78  F855    	movff	postinc2,_C+86	;volatile
 29803  0162EA  006F FF74  F856    	movff	postdec2,_C+87	;volatile
 29804                           
 29805                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 29806  0162F0  EE22  F033         	lfsr	2,_C+52	;volatile
 29807  0162F4  006F FF78  F867    	movff	postinc2,_C+104	;volatile
 29808  0162FA  006F FF78  F868    	movff	postinc2,_C+105	;volatile
 29809  016300  006F FF78  F869    	movff	postinc2,_C+106	;volatile
 29810  016306  006F FF74  F86A    	movff	postdec2,_C+107	;volatile
 29811                           
 29812                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 29813  01630C  0060  F1C3  FFE6   	movff	calc_model_data@bvror,postinc1
 29814  016312  0060  F1C7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 29815  016318  0060  F1CB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 29816  01631E  0060  F1CF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 29817  016324  EE22  F053         	lfsr	2,_C+84	;volatile
 29818  016328  006F FF7B FFE6     	movff	postinc2,postinc1
 29819  01632E  006F FF7B FFE6     	movff	postinc2,postinc1
 29820  016334  006F FF7B FFE6     	movff	postinc2,postinc1
 29821  01633A  006F FF7B FFE6     	movff	postinc2,postinc1
 29822  016340  ECB0  F0E3         	call	___flsub	;wreg free
 29823  016344  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 29824  01634A  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 29825  016350  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 29826  016356  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 29827                           
 29828                           ;mbmc.c: 80:   bvror = C.v_bat;
 29829  01635C  C853  F070         	movff	_C+84,calc_model_data@bvror	;volatile
 29830  016360  C854  F071         	movff	_C+85,calc_model_data@bvror+1	;volatile
 29831  016364  C855  F072         	movff	_C+86,calc_model_data@bvror+2	;volatile
 29832  016368  C856  F073         	movff	_C+87,calc_model_data@bvror+3	;volatile
 29833                           
 29834                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 29835  01636C  EE22  F013         	lfsr	2,_C+20	;volatile
 29836  016370  006F FF78  F84F    	movff	postinc2,_C+80	;volatile
 29837  016376  006F FF78  F850    	movff	postinc2,_C+81	;volatile
 29838  01637C  006F FF78  F851    	movff	postinc2,_C+82	;volatile
 29839  016382  006F FF74  F852    	movff	postdec2,_C+83	;volatile
 29840                           
 29841                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 29842  016388  EE22  F007         	lfsr	2,_C+8	;volatile
 29843  01638C  006F FF78  F84B    	movff	postinc2,_C+76	;volatile
 29844  016392  006F FF78  F84C    	movff	postinc2,_C+77	;volatile
 29845  016398  006F FF78  F84D    	movff	postinc2,_C+78	;volatile
 29846  01639E  006F FF74  F84E    	movff	postdec2,_C+79	;volatile
 29847                           
 29848                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 29849  0163A4  EE22  F02F         	lfsr	2,_C+48	;volatile
 29850  0163A8  006F FF78  F863    	movff	postinc2,_C+100	;volatile
 29851  0163AE  006F FF78  F864    	movff	postinc2,_C+101	;volatile
 29852  0163B4  006F FF78  F865    	movff	postinc2,_C+102	;volatile
 29853  0163BA  006F FF74  F866    	movff	postdec2,_C+103	;volatile
 29854                           
 29855                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 29856  0163C0  0E01               	movlw	1
 29857  0163C2  6EE6               	movwf	postinc1,c
 29858  0163C4  0E10               	movlw	16
 29859  0163C6  6EE6               	movwf	postinc1,c
 29860  0163C8  EE21  F3FF         	lfsr	2,_C
 29861  0163CC  006F FF7B FFE6     	movff	postinc2,postinc1
 29862  0163D2  006F FF7B FFE6     	movff	postinc2,postinc1
 29863  0163D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29864  0163DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29865  0163E4  EE22  F003         	lfsr	2,_C+4	;volatile
 29866  0163E8  006F FF7B FFE6     	movff	postinc2,postinc1
 29867  0163EE  006F FF7B FFE6     	movff	postinc2,postinc1
 29868  0163F4  006F FF7B FFE6     	movff	postinc2,postinc1
 29869  0163FA  006F FF7B FFE6     	movff	postinc2,postinc1
 29870  016400  ECB0  F0E3         	call	___flsub	;wreg free
 29871  016404  0060  F007  FFE6   	movff	btemp,postinc1
 29872  01640A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29873  016410  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29874  016416  0060  F013  FFE6   	movff	btemp+3,postinc1
 29875  01641C  EC13  F0C8         	call	_lp_filter	;wreg free
 29876  016420  0060  F004  F83F   	movff	btemp,_C+64	;volatile
 29877  016426  0060  F008  F840   	movff	btemp+1,_C+65	;volatile
 29878  01642C  0060  F00C  F841   	movff	btemp+2,_C+66	;volatile
 29879  016432  0060  F010  F842   	movff	btemp+3,_C+67	;volatile
 29880                           
 29881                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 29882  016438  0E01               	movlw	1
 29883  01643A  6EE6               	movwf	postinc1,c
 29884  01643C  0E11               	movlw	17
 29885  01643E  6EE6               	movwf	postinc1,c
 29886  016440  EE22  F053         	lfsr	2,_C+84	;volatile
 29887  016444  006F FF7B FFE6     	movff	postinc2,postinc1
 29888  01644A  006F FF7B FFE6     	movff	postinc2,postinc1
 29889  016450  006F FF7B FFE6     	movff	postinc2,postinc1
 29890  016456  006F FF7B FFE6     	movff	postinc2,postinc1
 29891  01645C  EE22  F03F         	lfsr	2,_C+64	;volatile
 29892  016460  006F FF7B FFE6     	movff	postinc2,postinc1
 29893  016466  006F FF7B FFE6     	movff	postinc2,postinc1
 29894  01646C  006F FF7B FFE6     	movff	postinc2,postinc1
 29895  016472  006F FF7B FFE6     	movff	postinc2,postinc1
 29896  016478  EC6E  F09F         	call	___flmul	;wreg free
 29897  01647C  0060  F007  FFE6   	movff	btemp,postinc1
 29898  016482  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29899  016488  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29900  01648E  0060  F013  FFE6   	movff	btemp+3,postinc1
 29901  016494  EC13  F0C8         	call	_lp_filter	;wreg free
 29902  016498  0060  F004  F873   	movff	btemp,_C+116	;volatile
 29903  01649E  0060  F008  F874   	movff	btemp+1,_C+117	;volatile
 29904  0164A4  0060  F00C  F875   	movff	btemp+2,_C+118	;volatile
 29905  0164AA  0060  F010  F876   	movff	btemp+3,_C+119	;volatile
 29906                           
 29907                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 29908  0164B0  0E01               	movlw	1
 29909  0164B2  6EE6               	movwf	postinc1,c
 29910  0164B4  0E12               	movlw	18
 29911  0164B6  6EE6               	movwf	postinc1,c
 29912  0164B8  EE22  F04F         	lfsr	2,_C+80	;volatile
 29913  0164BC  006F FF7B FFE6     	movff	postinc2,postinc1
 29914  0164C2  006F FF7B FFE6     	movff	postinc2,postinc1
 29915  0164C8  006F FF7B FFE6     	movff	postinc2,postinc1
 29916  0164CE  006F FF7B FFE6     	movff	postinc2,postinc1
 29917  0164D4  EE22  F047         	lfsr	2,_C+72	;volatile
 29918  0164D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29919  0164DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29920  0164E4  006F FF7B FFE6     	movff	postinc2,postinc1
 29921  0164EA  006F FF7B FFE6     	movff	postinc2,postinc1
 29922  0164F0  EC6E  F09F         	call	___flmul	;wreg free
 29923  0164F4  0060  F007  FFE6   	movff	btemp,postinc1
 29924  0164FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29925  016500  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29926  016506  0060  F013  FFE6   	movff	btemp+3,postinc1
 29927  01650C  EC13  F0C8         	call	_lp_filter	;wreg free
 29928  016510  0060  F004  F87B   	movff	btemp,_C+124	;volatile
 29929  016516  0060  F008  F87C   	movff	btemp+1,_C+125	;volatile
 29930  01651C  0060  F00C  F87D   	movff	btemp+2,_C+126	;volatile
 29931  016522  0060  F010  F87E   	movff	btemp+3,_C+127	;volatile
 29932                           
 29933                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 29934  016528  0E01               	movlw	1
 29935  01652A  6EE6               	movwf	postinc1,c
 29936  01652C  0E13               	movlw	19
 29937  01652E  6EE6               	movwf	postinc1,c
 29938  016530  0E00               	movlw	0
 29939  016532  6EE6               	movwf	postinc1,c
 29940  016534  0E00               	movlw	0
 29941  016536  6EE6               	movwf	postinc1,c
 29942  016538  0E60               	movlw	96
 29943  01653A  6EE6               	movwf	postinc1,c
 29944  01653C  0EC1               	movlw	193
 29945  01653E  6EE6               	movwf	postinc1,c
 29946  016540  EE22  F063         	lfsr	2,_C+100	;volatile
 29947  016544  006F FF7B FFE6     	movff	postinc2,postinc1
 29948  01654A  006F FF7B FFE6     	movff	postinc2,postinc1
 29949  016550  006F FF7B FFE6     	movff	postinc2,postinc1
 29950  016556  006F FF7B FFE6     	movff	postinc2,postinc1
 29951  01655C  EE22  F03F         	lfsr	2,_C+64	;volatile
 29952  016560  006F FF7B FFE6     	movff	postinc2,postinc1
 29953  016566  006F FF7B FFE6     	movff	postinc2,postinc1
 29954  01656C  006F FF7B FFE6     	movff	postinc2,postinc1
 29955  016572  006F FF7B FFE6     	movff	postinc2,postinc1
 29956  016578  EC6E  F09F         	call	___flmul	;wreg free
 29957  01657C  0060  F007  FFE6   	movff	btemp,postinc1
 29958  016582  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29959  016588  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29960  01658E  0060  F013  FFE6   	movff	btemp+3,postinc1
 29961  016594  EC83  F0A3         	call	___fladd	;wreg free
 29962  016598  0060  F007  FFE6   	movff	btemp,postinc1
 29963  01659E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29964  0165A4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29965  0165AA  0060  F013  FFE6   	movff	btemp+3,postinc1
 29966  0165B0  EC13  F0C8         	call	_lp_filter	;wreg free
 29967  0165B4  0060  F004  F877   	movff	btemp,_C+120	;volatile
 29968  0165BA  0060  F008  F878   	movff	btemp+1,_C+121	;volatile
 29969  0165C0  0060  F00C  F879   	movff	btemp+2,_C+122	;volatile
 29970  0165C6  0060  F010  F87A   	movff	btemp+3,_C+123	;volatile
 29971                           
 29972                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 29973  0165CC  0E01               	movlw	1
 29974  0165CE  6EE6               	movwf	postinc1,c
 29975  0165D0  0E14               	movlw	20
 29976  0165D2  6EE6               	movwf	postinc1,c
 29977  0165D4  EE22  F053         	lfsr	2,_C+84	;volatile
 29978  0165D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29979  0165DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29980  0165E4  006F FF7B FFE6     	movff	postinc2,postinc1
 29981  0165EA  006F FF7B FFE6     	movff	postinc2,postinc1
 29982  0165F0  EE22  F043         	lfsr	2,_C+68	;volatile
 29983  0165F4  006F FF7B FFE6     	movff	postinc2,postinc1
 29984  0165FA  006F FF7B FFE6     	movff	postinc2,postinc1
 29985  016600  006F FF7B FFE6     	movff	postinc2,postinc1
 29986  016606  006F FF7B FFE6     	movff	postinc2,postinc1
 29987  01660C  EC6E  F09F         	call	___flmul	;wreg free
 29988  016610  0060  F007  FFE6   	movff	btemp,postinc1
 29989  016616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29990  01661C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29991  016622  0060  F013  FFE6   	movff	btemp+3,postinc1
 29992  016628  EC13  F0C8         	call	_lp_filter	;wreg free
 29993  01662C  0060  F004  F87F   	movff	btemp,_C+128	;volatile
 29994  016632  0060  F008  F880   	movff	btemp+1,_C+129	;volatile
 29995  016638  0060  F00C  F881   	movff	btemp+2,_C+130	;volatile
 29996  01663E  0060  F010  F882   	movff	btemp+3,_C+131	;volatile
 29997                           
 29998                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 29999  016644  EE22  F077         	lfsr	2,_C+120	;volatile
 30000  016648  0E03               	movlw	3
 30001  01664A  AEDB               	btfss	plusw2,7,c
 30002  01664C  D010               	goto	l12192
 30003                           
 30004                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 30005  01664E  0E17               	movlw	23
 30006  016650  006F FFA0  F877    	movff	wreg,_C+120	;volatile
 30007  016656  0EB7               	movlw	183
 30008  016658  006F FFA0  F878    	movff	wreg,_C+121	;volatile
 30009  01665E  0ED1               	movlw	209
 30010  016660  006F FFA0  F879    	movff	wreg,_C+122	;volatile
 30011  016666  0E38               	movlw	56
 30012  016668  006F FFA0  F87A    	movff	wreg,_C+123	;volatile
 30013  01666E                     l12192:
 30014                           
 30015                           ;mbmc.c: 95:  start_bsoc();
 30016  01666E  EC5B  F0E8         	call	_start_bsoc	;wreg free
 30017                           
 30018                           ; BSR set to: 57
 30019                           ;mbmc.c: 96:  C.update = 1;
 30020  016672  0E01               	movlw	1
 30021  016674  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 30022                           
 30023                           ; BSR set to: 57
 30024                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30025  01667A  0012               	return		;funcret
 30026  01667C                     __end_of_calc_model_data:
 30027                           	opt callstack 0
 30028                           
 30029 ;; *************** function _stop_bsoc *****************
 30030 ;; Defined at:
 30031 ;;		line 130 in file "bsoc.c"
 30032 ;; Parameters:    Size  Location     Type
 30033 ;;		None
 30034 ;; Auto vars:     Size  Location     Type
 30035 ;;		None
 30036 ;; Return value:  Size  Location     Type
 30037 ;;                  1  [STACK] void 
 30038 ;; Registers used:
 30039 ;;		None
 30040 ;; Tracked objects:
 30041 ;;		On entry : 0/1
 30042 ;;		On exit  : 3F/39
 30043 ;;		Unchanged: 0/0
 30044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30049 ;;Total ram usage:        0 bytes
 30050 ;; Hardware stack levels used:    1
 30051 ;; Hardware stack levels required when called:   15
 30052 ;; This function calls:
 30053 ;;		Nothing
 30054 ;; This function is called by:
 30055 ;;		_calc_model_data
 30056 ;; This function uses a reentrant model
 30057 ;;
 30058                           
 30059                           	psect	text121
 30060  01D3D6                     __ptext121:
 30061                           	opt callstack 0
 30062  01D3D6                     _stop_bsoc:
 30063                           	opt callstack 14
 30064                           
 30065                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 30066                           
 30067                           ; BSR set to: 57
 30068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30069                           ;incstack = 0
 30070  01D3D6  0139               	movlb	57	; () banked
 30071  01D3D8  9D96               	bcf	150,6,b	;volatile
 30072                           
 30073                           ; BSR set to: 57
 30074                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 30075  01D3DA  0012               	return		;funcret
 30076  01D3DC                     __end_of_stop_bsoc:
 30077                           	opt callstack 0
 30078                           
 30079 ;; *************** function _start_bsoc *****************
 30080 ;; Defined at:
 30081 ;;		line 121 in file "bsoc.c"
 30082 ;; Parameters:    Size  Location     Type
 30083 ;;		None
 30084 ;; Auto vars:     Size  Location     Type
 30085 ;;		None
 30086 ;; Return value:  Size  Location     Type
 30087 ;;                  1  [STACK] void 
 30088 ;; Registers used:
 30089 ;;		wreg, status,2, status,0, btemp+11
 30090 ;; Tracked objects:
 30091 ;;		On entry : 0/1
 30092 ;;		On exit  : 3F/39
 30093 ;;		Unchanged: 0/0
 30094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30099 ;;Total ram usage:        0 bytes
 30100 ;; Hardware stack levels used:    1
 30101 ;; Hardware stack levels required when called:   15
 30102 ;; This function calls:
 30103 ;;		Nothing
 30104 ;; This function is called by:
 30105 ;;		_calc_model_data
 30106 ;; This function uses a reentrant model
 30107 ;;
 30108                           
 30109                           	psect	text122
 30110  01D0B6                     __ptext122:
 30111                           	opt callstack 0
 30112  01D0B6                     _start_bsoc:
 30113                           	opt callstack 14
 30114                           
 30115                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 30116                           
 30117                           ; BSR set to: 57
 30118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30119                           ;incstack = 0
 30120  01D0B6  0139               	movlb	57	; () banked
 30121  01D0B8  8D96               	bsf	150,6,b	;volatile
 30122                           
 30123                           ; BSR set to: 57
 30124  01D0BA  A4BE               	btfss	190,2,c	;volatile
 30125  01D0BC  D002               	goto	u10400
 30126  01D0BE  0E01               	movlw	1
 30127  01D0C0  D001               	goto	u10406
 30128  01D0C2                     u10400:
 30129  01D0C2  0E00               	movlw	0
 30130  01D0C4                     u10406:
 30131  01D0C4  0AFF               	xorlw	255
 30132  01D0C6  6E0C               	movwf	(btemp+11)^0,c
 30133  01D0C8  460C               	rlncf	(btemp+11)^0,f,c
 30134  01D0CA  460C               	rlncf	(btemp+11)^0,f,c
 30135  01D0CC  50BE               	movf	190,w,c	;volatile
 30136  01D0CE  180C               	xorwf	(btemp+11)^0,w,c
 30137  01D0D0  0BFB               	andlw	-5
 30138  01D0D2  180C               	xorwf	(btemp+11)^0,w,c
 30139  01D0D4  6EBE               	movwf	190,c	;volatile
 30140                           
 30141                           ; BSR set to: 57
 30142                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 30143  01D0D6  0012               	return		;funcret
 30144  01D0D8                     __end_of_start_bsoc:
 30145                           	opt callstack 0
 30146                           
 30147 ;; *************** function _lp_filter *****************
 30148 ;; Defined at:
 30149 ;;		line 29 in file "mbmc.c"
 30150 ;; Parameters:    Size  Location     Type
 30151 ;;  new             4  [STACK] const float 
 30152 ;;  bn              1  [STACK] const unsigned char 
 30153 ;;  slow            1  [STACK] const char 
 30154 ;; Auto vars:     Size  Location     Type
 30155 ;;  lp_speed        4  [STACK] float 
 30156 ;; Return value:  Size  Location     Type
 30157 ;;                  4  [STACK] float 
 30158 ;; Registers used:
 30159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 30160 ;; Tracked objects:
 30161 ;;		On entry : 0/1
 30162 ;;		On exit  : 0/0
 30163 ;;		Unchanged: 0/0
 30164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30169 ;;Total ram usage:        0 bytes
 30170 ;; Hardware stack levels used:    1
 30171 ;; Hardware stack levels required when called:   17
 30172 ;; This function calls:
 30173 ;;		___fladd
 30174 ;;		___flmul
 30175 ;;		___flsub
 30176 ;; This function is called by:
 30177 ;;		_main
 30178 ;;		_convert_adc_data
 30179 ;;		_calc_model_data
 30180 ;; This function uses a reentrant model
 30181 ;;
 30182                           
 30183                           	psect	text123
 30184  019026                     __ptext123:
 30185                           	opt callstack 0
 30186  019026                     _lp_filter:
 30187                           	opt callstack 0
 30188                           
 30189                           ; BSR set to: 57
 30190                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30191  019026  52E6               	movf	postinc1,f,c
 30192  019028  52E6               	movf	postinc1,f,c
 30193  01902A  52E6               	movf	postinc1,f,c
 30194  01902C  52E6               	movf	postinc1,f,c
 30195                           
 30196                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 30197                           ;stkvar	_bn @ sp[(-4)+-5]
 30198                           
 30199                           ;incstack = 0
 30200  01902E  0EF7               	movlw	-9
 30201  019030  006F FF8C  F001    	movff	plusw1,btemp
 30202  019036  0E14               	movlw	20
 30203  019038  6401               	cpfsgt	btemp^0,c
 30204  01903A  D011               	goto	l11312
 30205  01903C                     u10210:
 30206                           
 30207                           ;mbmc.c: 35:   return new;
 30208                           ;stkvar	_new @ sp[(-4)+-4]
 30209  01903C  0EF8               	movlw	-8
 30210  01903E  006F FF8C  F001    	movff	plusw1,btemp
 30211  019044  0EF9               	movlw	-7
 30212  019046  006F FF8C  F002    	movff	plusw1,btemp+1
 30213  01904C  0EFA               	movlw	-6
 30214  01904E  006F FF8C  F003    	movff	plusw1,btemp+2
 30215  019054  0EFB               	movlw	-5
 30216  019056  006F FF8C  F004    	movff	plusw1,btemp+3
 30217  01905C  D0BD               	goto	l2088
 30218  01905E                     l11312:
 30219                           
 30220                           ;mbmc.c: 37:  if (slow == (-1)) {
 30221                           ;stkvar	_slow @ sp[(-4)+-6]
 30222  01905E  0EF6               	movlw	-10
 30223  019060  28E3               	incf	plusw1,w,c
 30224  019062  A4D8               	btfss	status,2,c
 30225  019064  D012               	goto	l11320
 30226                           
 30227                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 30228                           ;stkvar	_bn @ sp[(-4)+-5]
 30229  019066  0EF7               	movlw	-9
 30230  019068  50E3               	movf	plusw1,w,c
 30231  01906A  0D04               	mullw	4
 30232  01906C  0E00               	movlw	low lp_filter@smooth
 30233  01906E  24F3               	addwf	243,w,c
 30234  019070  6ED9               	movwf	fsr2l,c
 30235  019072  0E03               	movlw	high lp_filter@smooth
 30236  019074  20F4               	addwfc	prodh,w,c
 30237  019076  6EDA               	movwf	fsr2h,c
 30238  019078  0E00               	movlw	0
 30239  01907A  6EDE               	movwf	postinc2,c
 30240  01907C  0E00               	movlw	0
 30241  01907E  6EDE               	movwf	postinc2,c
 30242  019080  0E00               	movlw	0
 30243  019082  6EDE               	movwf	postinc2,c
 30244  019084  0E00               	movlw	0
 30245  019086  6EDD               	movwf	postdec2,c
 30246  019088  D7D9               	goto	u10210
 30247  01908A                     l11320:
 30248                           
 30249                           ;mbmc.c: 42:  if (slow) {
 30250                           ;stkvar	_slow @ sp[(-4)+-6]
 30251  01908A  0EF6               	movlw	-10
 30252  01908C  50E3               	movf	plusw1,w,c
 30253  01908E  B4D8               	btfsc	status,2,c
 30254  019090  D006               	goto	l11324
 30255                           
 30256                           ;mbmc.c: 43:   lp_speed = 0.033;
 30257  019092  0E02               	movlw	2
 30258  019094  6E09               	movwf	(btemp+8)^0,c
 30259  019096  0E2B               	movlw	43
 30260  019098  6E0A               	movwf	(btemp+9)^0,c
 30261  01909A  0E07               	movlw	7
 30262  01909C  D005               	goto	L36
 30263  01909E                     l11324:
 30264                           
 30265                           ;mbmc.c: 45:   lp_speed = 0.066;
 30266  01909E  0E02               	movlw	2
 30267  0190A0  6E09               	movwf	(btemp+8)^0,c
 30268  0190A2  0E2B               	movlw	43
 30269  0190A4  6E0A               	movwf	(btemp+9)^0,c
 30270  0190A6  0E87               	movlw	135
 30271  0190A8                     L36:
 30272  0190A8  6E0B               	movwf	(btemp+10)^0,c
 30273  0190AA  0E3D               	movlw	61
 30274  0190AC  6E0C               	movwf	(btemp+11)^0,c
 30275                           
 30276                           ;stkvar	_lp_speed @ sp[(-4)+0]
 30277  0190AE  0EFC               	movlw	-4
 30278  0190B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 30279  0190B6  0EFD               	movlw	-3
 30280  0190B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30281  0190BE  0EFE               	movlw	-2
 30282  0190C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30283  0190C6  0EFF               	movlw	-1
 30284  0190C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 30285                           
 30286                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 30287                           ;stkvar	_bn @ sp[(-4)+-5]
 30288  0190CE  0EF7               	movlw	-9
 30289  0190D0  50E3               	movf	plusw1,w,c
 30290  0190D2  0D04               	mullw	4
 30291  0190D4  0E00               	movlw	low lp_filter@smooth
 30292  0190D6  24F3               	addwf	243,w,c
 30293  0190D8  6ED9               	movwf	fsr2l,c
 30294  0190DA  0E03               	movlw	high lp_filter@smooth
 30295  0190DC  20F4               	addwfc	prodh,w,c
 30296  0190DE  6EDA               	movwf	fsr2h,c
 30297  0190E0  006F FF7B FFE6     	movff	postinc2,postinc1
 30298  0190E6  006F FF7B FFE6     	movff	postinc2,postinc1
 30299  0190EC  006F FF7B FFE6     	movff	postinc2,postinc1
 30300  0190F2  006F FF7B FFE6     	movff	postinc2,postinc1
 30301                           
 30302                           ;stkvar	_lp_speed @ sp[(-8)+0]
 30303  0190F8  0EF8               	movlw	-8
 30304  0190FA  006F FF8F FFE6     	movff	plusw1,postinc1
 30305  019100  006F FF8F FFE6     	movff	plusw1,postinc1
 30306  019106  006F FF8F FFE6     	movff	plusw1,postinc1
 30307  01910C  006F FF8F FFE6     	movff	plusw1,postinc1
 30308                           
 30309                           ;stkvar	_bn @ sp[(-12)+-5]
 30310  019112  0EEF               	movlw	-17
 30311  019114  50E3               	movf	plusw1,w,c
 30312  019116  0D04               	mullw	4
 30313  019118  0E00               	movlw	low lp_filter@smooth
 30314  01911A  24F3               	addwf	243,w,c
 30315  01911C  6ED9               	movwf	fsr2l,c
 30316  01911E  0E03               	movlw	high lp_filter@smooth
 30317  019120  20F4               	addwfc	prodh,w,c
 30318  019122  6EDA               	movwf	fsr2h,c
 30319  019124  006F FF7B FFE6     	movff	postinc2,postinc1
 30320  01912A  006F FF7B FFE6     	movff	postinc2,postinc1
 30321  019130  006F FF7B FFE6     	movff	postinc2,postinc1
 30322  019136  006F FF7B FFE6     	movff	postinc2,postinc1
 30323                           
 30324                           ;stkvar	_new @ sp[(-16)+-4]
 30325  01913C  0EEC               	movlw	-20
 30326  01913E  006F FF8F FFE6     	movff	plusw1,postinc1
 30327  019144  006F FF8F FFE6     	movff	plusw1,postinc1
 30328  01914A  006F FF8F FFE6     	movff	plusw1,postinc1
 30329  019150  006F FF8F FFE6     	movff	plusw1,postinc1
 30330  019156  ECB0  F0E3         	call	___flsub	;wreg free
 30331  01915A  0060  F007  FFE6   	movff	btemp,postinc1
 30332  019160  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30333  019166  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30334  01916C  0060  F013  FFE6   	movff	btemp+3,postinc1
 30335  019172  EC6E  F09F         	call	___flmul	;wreg free
 30336  019176  0060  F007  FFE6   	movff	btemp,postinc1
 30337  01917C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30338  019182  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30339  019188  0060  F013  FFE6   	movff	btemp+3,postinc1
 30340  01918E  EC83  F0A3         	call	___fladd	;wreg free
 30341                           
 30342                           ;stkvar	_bn @ sp[(-4)+-5]
 30343  019192  0EF7               	movlw	-9
 30344  019194  50E3               	movf	plusw1,w,c
 30345  019196  0D04               	mullw	4
 30346  019198  0E00               	movlw	low lp_filter@smooth
 30347  01919A  24F3               	addwf	243,w,c
 30348  01919C  6ED9               	movwf	fsr2l,c
 30349  01919E  0E03               	movlw	high lp_filter@smooth
 30350  0191A0  20F4               	addwfc	prodh,w,c
 30351  0191A2  6EDA               	movwf	fsr2h,c
 30352  0191A4  0060  F007  FFDE   	movff	btemp,postinc2
 30353  0191AA  0060  F00B  FFDE   	movff	btemp+1,postinc2
 30354  0191B0  0060  F00F  FFDE   	movff	btemp+2,postinc2
 30355  0191B6  0060  F013  FFDD   	movff	btemp+3,postdec2
 30356  0191BC  52DD               	movf	postdec2,f,c
 30357  0191BE  52DD               	movf	postdec2,f,c
 30358  0191C0  006F FF78  F001    	movff	postinc2,btemp
 30359  0191C6  006F FF78  F002    	movff	postinc2,btemp+1
 30360  0191CC  006F FF78  F003    	movff	postinc2,btemp+2
 30361  0191D2  006F FF78  F004    	movff	postinc2,btemp+3
 30362  0191D8                     l2088:
 30363                           
 30364                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 30365  0191D8  0EF6               	movlw	246
 30366  0191DA  26E1               	addwf	fsr1l,f,c
 30367  0191DC  0EFF               	movlw	255
 30368  0191DE  22E2               	addwfc	fsr1h,f,c
 30369  0191E0  0012               	return		;funcret
 30370  0191E2                     __end_of_lp_filter:
 30371                           	opt callstack 0
 30372                           
 30373 ;; *************** function ___flsub *****************
 30374 ;; Defined at:
 30375 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 30376 ;; Parameters:    Size  Location     Type
 30377 ;;  b               4  [STACK] float 
 30378 ;;  a               4  [STACK] float 
 30379 ;; Auto vars:     Size  Location     Type
 30380 ;;		None
 30381 ;; Return value:  Size  Location     Type
 30382 ;;                  4  [STACK] float 
 30383 ;; Registers used:
 30384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 30385 ;; Tracked objects:
 30386 ;;		On entry : 0/0
 30387 ;;		On exit  : 0/0
 30388 ;;		Unchanged: 0/0
 30389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30394 ;;Total ram usage:        0 bytes
 30395 ;; Hardware stack levels used:    1
 30396 ;; Hardware stack levels required when called:   16
 30397 ;; This function calls:
 30398 ;;		___fladd
 30399 ;; This function is called by:
 30400 ;;		_conv_raw_result
 30401 ;;		_lp_filter
 30402 ;;		_calc_model_data
 30403 ;;		_calc_ror_data
 30404 ;;		_esr_check
 30405 ;;		_efgtoa
 30406 ;; This function uses a reentrant model
 30407 ;;
 30408                           
 30409                           	psect	text124
 30410  01C760                     __ptext124:
 30411                           	opt callstack 0
 30412  01C760                     ___flsub:
 30413                           	opt callstack 0
 30414                           
 30415                           ;stkvar	_a @ sp[(0)+-8]
 30416                           
 30417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30418                           ;incstack = 0
 30419 ;; hardware stack exceeded
 30420  01C760  0EFB               	movlw	-5
 30421  01C762  7EE3               	btg	plusw1,7,c
 30422                           
 30423                           ;stkvar	_a @ sp[(0)+-8]
 30424  01C764  0EF8               	movlw	-8
 30425  01C766  006F FF8F FFE6     	movff	plusw1,postinc1
 30426  01C76C  006F FF8F FFE6     	movff	plusw1,postinc1
 30427  01C772  006F FF8F FFE6     	movff	plusw1,postinc1
 30428  01C778  006F FF8F FFE6     	movff	plusw1,postinc1
 30429                           
 30430                           ;stkvar	_b @ sp[(-4)+-4]
 30431  01C77E  0EF8               	movlw	-8
 30432  01C780  006F FF8F FFE6     	movff	plusw1,postinc1
 30433  01C786  006F FF8F FFE6     	movff	plusw1,postinc1
 30434  01C78C  006F FF8F FFE6     	movff	plusw1,postinc1
 30435  01C792  006F FF8F FFE6     	movff	plusw1,postinc1
 30436  01C798  EC83  F0A3         	call	___fladd	;wreg free
 30437                           
 30438                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 30439  01C79C  0EF8               	movlw	248
 30440  01C79E  26E1               	addwf	fsr1l,f,c
 30441  01C7A0  0EFF               	movlw	255
 30442  01C7A2  22E2               	addwfc	fsr1h,f,c
 30443  01C7A4  0012               	return		;funcret
 30444  01C7A6                     __end_of___flsub:
 30445                           	opt callstack 0
 30446                           
 30447 ;; *************** function ___fladd *****************
 30448 ;; Defined at:
 30449 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 30450 ;; Parameters:    Size  Location     Type
 30451 ;;  b               4  [STACK] float 
 30452 ;;  a               4  [STACK] float 
 30453 ;; Auto vars:     Size  Location     Type
 30454 ;;  grs             1  [STACK] unsigned char 
 30455 ;;  bexp            1  [STACK] unsigned char 
 30456 ;;  aexp            1  [STACK] unsigned char 
 30457 ;;  signs           1  [STACK] unsigned char 
 30458 ;; Return value:  Size  Location     Type
 30459 ;;                  4  [STACK] unsigned char 
 30460 ;; Registers used:
 30461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 30462 ;; Tracked objects:
 30463 ;;		On entry : 0/0
 30464 ;;		On exit  : 0/0
 30465 ;;		Unchanged: 0/0
 30466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30471 ;;Total ram usage:        0 bytes
 30472 ;; Hardware stack levels used:    1
 30473 ;; Hardware stack levels required when called:   15
 30474 ;; This function calls:
 30475 ;;		Nothing
 30476 ;; This function is called by:
 30477 ;;		_main
 30478 ;;		_lp_filter
 30479 ;;		_calc_model_data
 30480 ;;		_efgtoa
 30481 ;;		___asfladd
 30482 ;;		___flsub
 30483 ;; This function uses a reentrant model
 30484 ;;
 30485                           
 30486                           	psect	text125
 30487  014706                     __ptext125:
 30488                           	opt callstack 0
 30489  014706                     ___fladd:
 30490                           	opt callstack 0
 30491                           
 30492                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30493  014706  52E6               	movf	postinc1,f,c
 30494  014708  52E6               	movf	postinc1,f,c
 30495  01470A  52E6               	movf	postinc1,f,c
 30496  01470C  52E6               	movf	postinc1,f,c
 30497                           
 30498                           ;stkvar	_b @ sp[(-4)+-4]
 30499                           
 30500                           ;incstack = 0
 30501 ;; hardware stack exceeded
 30502  01470E  0EFB               	movlw	251
 30503  014710  24E1               	addwf	fsr1l,w,c
 30504  014712  6ED9               	movwf	fsr2l,c
 30505  014714  0EFF               	movlw	255
 30506  014716  20E2               	addwfc	fsr1h,w,c
 30507  014718  6EDA               	movwf	fsr2h,c
 30508  01471A  50DF               	movf	indf2,w,c
 30509  01471C  6E0C               	movwf	(btemp+11)^0,c
 30510  01471E  0E80               	movlw	128
 30511  014720  160C               	andwf	(btemp+11)^0,f,c
 30512                           
 30513                           ;stkvar	_signs @ sp[(-4)+3]
 30514  014722  0EFF               	movlw	-1
 30515  014724  0060  F033  FFE3   	movff	btemp+11,plusw1
 30516                           
 30517                           ;stkvar	_b @ sp[(-4)+-4]
 30518  01472A  0EFB               	movlw	251
 30519  01472C  24E1               	addwf	fsr1l,w,c
 30520  01472E  6ED9               	movwf	fsr2l,c
 30521  014730  0EFF               	movlw	255
 30522  014732  20E2               	addwfc	fsr1h,w,c
 30523  014734  6EDA               	movwf	fsr2h,c
 30524  014736  50DF               	movf	indf2,w,c
 30525  014738  6E0C               	movwf	(btemp+11)^0,c
 30526  01473A  90D8               	bcf	status,0,c
 30527  01473C  340C               	rlcf	(btemp+11)^0,w,c
 30528  01473E  6E0B               	movwf	(btemp+10)^0,c
 30529                           
 30530                           ;stkvar	_bexp @ sp[(-4)+1]
 30531  014740  0EFD               	movlw	-3
 30532  014742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30533                           
 30534                           ;stkvar	_b @ sp[(-4)+-4]
 30535  014748  0EFA               	movlw	250
 30536  01474A  24E1               	addwf	fsr1l,w,c
 30537  01474C  6ED9               	movwf	fsr2l,c
 30538  01474E  0EFF               	movlw	255
 30539  014750  20E2               	addwfc	fsr1h,w,c
 30540  014752  6EDA               	movwf	fsr2h,c
 30541  014754  AEDF               	btfss	indf2,7,c
 30542  014756  D002               	goto	l8450
 30543                           
 30544                           ;stkvar	_bexp @ sp[(-4)+1]
 30545  014758  0EFD               	movlw	-3
 30546  01475A  80E3               	bsf	plusw1,0,c
 30547  01475C                     l8450:
 30548                           
 30549                           ;stkvar	_bexp @ sp[(-4)+1]
 30550  01475C  0EFD               	movlw	-3
 30551  01475E  50E3               	movf	plusw1,w,c
 30552  014760  B4D8               	btfsc	status,2,c
 30553  014762  D027               	goto	l8460
 30554                           
 30555                           ;stkvar	_bexp @ sp[(-4)+1]
 30556  014764  0EFD               	movlw	-3
 30557  014766  28E3               	incf	plusw1,w,c
 30558  014768  A4D8               	btfss	status,2,c
 30559  01476A  D018               	goto	l8456
 30560  01476C  0E00               	movlw	0
 30561  01476E  6E09               	movwf	(btemp+8)^0,c
 30562  014770  0E00               	movlw	0
 30563  014772  6E0A               	movwf	(btemp+9)^0,c
 30564  014774  0E00               	movlw	0
 30565  014776  6E0B               	movwf	(btemp+10)^0,c
 30566  014778  0E00               	movlw	0
 30567  01477A  6E0C               	movwf	(btemp+11)^0,c
 30568                           
 30569                           ;stkvar	_b @ sp[(-4)+-4]
 30570  01477C  0EF8               	movlw	-8
 30571  01477E  0060  F027  FFE3   	movff	btemp+8,plusw1
 30572  014784  0EF9               	movlw	-7
 30573  014786  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30574  01478C  0EFA               	movlw	-6
 30575  01478E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30576  014794  0EFB               	movlw	-5
 30577  014796  0060  F033  FFE3   	movff	btemp+11,plusw1
 30578  01479C                     l8456:
 30579                           
 30580                           ;stkvar	_b @ sp[(-4)+-4]
 30581  01479C  0EFA               	movlw	-6
 30582  01479E  8EE3               	bsf	plusw1,7,c
 30583                           
 30584                           ;stkvar	_b @ sp[(-4)+-4]
 30585  0147A0  0EFB               	movlw	251
 30586  0147A2  24E1               	addwf	fsr1l,w,c
 30587  0147A4  6ED9               	movwf	fsr2l,c
 30588  0147A6  0EFF               	movlw	255
 30589  0147A8  20E2               	addwfc	fsr1h,w,c
 30590  0147AA  6EDA               	movwf	fsr2h,c
 30591  0147AC  0E00               	movlw	0
 30592  0147AE  6EDF               	movwf	indf2,c
 30593  0147B0  D018               	goto	l8462
 30594  0147B2                     l8460:
 30595  0147B2  0E00               	movlw	0
 30596  0147B4  6E09               	movwf	(btemp+8)^0,c
 30597  0147B6  0E00               	movlw	0
 30598  0147B8  6E0A               	movwf	(btemp+9)^0,c
 30599  0147BA  0E00               	movlw	0
 30600  0147BC  6E0B               	movwf	(btemp+10)^0,c
 30601  0147BE  0E00               	movlw	0
 30602  0147C0  6E0C               	movwf	(btemp+11)^0,c
 30603                           
 30604                           ;stkvar	_b @ sp[(-4)+-4]
 30605  0147C2  0EF8               	movlw	-8
 30606  0147C4  0060  F027  FFE3   	movff	btemp+8,plusw1
 30607  0147CA  0EF9               	movlw	-7
 30608  0147CC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30609  0147D2  0EFA               	movlw	-6
 30610  0147D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30611  0147DA  0EFB               	movlw	-5
 30612  0147DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 30613  0147E2                     l8462:
 30614                           
 30615                           ;stkvar	_a @ sp[(-4)+-8]
 30616  0147E2  0EF7               	movlw	247
 30617  0147E4  24E1               	addwf	fsr1l,w,c
 30618  0147E6  6ED9               	movwf	fsr2l,c
 30619  0147E8  0EFF               	movlw	255
 30620  0147EA  20E2               	addwfc	fsr1h,w,c
 30621  0147EC  6EDA               	movwf	fsr2h,c
 30622  0147EE  50DF               	movf	indf2,w,c
 30623  0147F0  6E0C               	movwf	(btemp+11)^0,c
 30624  0147F2  0E80               	movlw	128
 30625  0147F4  160C               	andwf	(btemp+11)^0,f,c
 30626                           
 30627                           ;stkvar	_aexp @ sp[(-4)+2]
 30628  0147F6  0EFE               	movlw	-2
 30629  0147F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 30630                           
 30631                           ;stkvar	_signs @ sp[(-4)+3]
 30632                           ;stkvar	_aexp @ sp[(-4)+2]
 30633  0147FE  50E1               	movf	fsr1l,w,c
 30634  014800  0FFE               	addlw	-2
 30635  014802  6ED9               	movwf	fsr2l,c
 30636  014804  50E2               	movf	fsr1h,w,c
 30637  014806  6EDA               	movwf	fsr2h,c
 30638  014808  0EFF               	movlw	255
 30639  01480A  22DA               	addwfc	fsr2h,f,c
 30640  01480C  0EFF               	movlw	-1
 30641  01480E  50E3               	movf	plusw1,w,c
 30642  014810  18DE               	xorwf	postinc2,w,c
 30643  014812  B4D8               	btfsc	status,2,c
 30644  014814  D002               	goto	l8468
 30645                           
 30646                           ;stkvar	_signs @ sp[(-4)+3]
 30647  014816  0EFF               	movlw	-1
 30648  014818  8CE3               	bsf	plusw1,6,c
 30649  01481A                     l8468:
 30650                           
 30651                           ;stkvar	_a @ sp[(-4)+-8]
 30652  01481A  0EF7               	movlw	247
 30653  01481C  24E1               	addwf	fsr1l,w,c
 30654  01481E  6ED9               	movwf	fsr2l,c
 30655  014820  0EFF               	movlw	255
 30656  014822  20E2               	addwfc	fsr1h,w,c
 30657  014824  6EDA               	movwf	fsr2h,c
 30658  014826  50DF               	movf	indf2,w,c
 30659  014828  6E0C               	movwf	(btemp+11)^0,c
 30660  01482A  90D8               	bcf	status,0,c
 30661  01482C  340C               	rlcf	(btemp+11)^0,w,c
 30662  01482E  6E0B               	movwf	(btemp+10)^0,c
 30663                           
 30664                           ;stkvar	_aexp @ sp[(-4)+2]
 30665  014830  0EFE               	movlw	-2
 30666  014832  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30667                           
 30668                           ;stkvar	_a @ sp[(-4)+-8]
 30669  014838  0EF6               	movlw	246
 30670  01483A  24E1               	addwf	fsr1l,w,c
 30671  01483C  6ED9               	movwf	fsr2l,c
 30672  01483E  0EFF               	movlw	255
 30673  014840  20E2               	addwfc	fsr1h,w,c
 30674  014842  6EDA               	movwf	fsr2h,c
 30675  014844  AEDF               	btfss	indf2,7,c
 30676  014846  D002               	goto	l8474
 30677                           
 30678                           ;stkvar	_aexp @ sp[(-4)+2]
 30679  014848  0EFE               	movlw	-2
 30680  01484A  80E3               	bsf	plusw1,0,c
 30681  01484C                     l8474:
 30682                           
 30683                           ;stkvar	_aexp @ sp[(-4)+2]
 30684  01484C  0EFE               	movlw	-2
 30685  01484E  50E3               	movf	plusw1,w,c
 30686  014850  B4D8               	btfsc	status,2,c
 30687  014852  D027               	goto	l8484
 30688                           
 30689                           ;stkvar	_aexp @ sp[(-4)+2]
 30690  014854  0EFE               	movlw	-2
 30691  014856  28E3               	incf	plusw1,w,c
 30692  014858  A4D8               	btfss	status,2,c
 30693  01485A  D018               	goto	l8480
 30694  01485C  0E00               	movlw	0
 30695  01485E  6E09               	movwf	(btemp+8)^0,c
 30696  014860  0E00               	movlw	0
 30697  014862  6E0A               	movwf	(btemp+9)^0,c
 30698  014864  0E00               	movlw	0
 30699  014866  6E0B               	movwf	(btemp+10)^0,c
 30700  014868  0E00               	movlw	0
 30701  01486A  6E0C               	movwf	(btemp+11)^0,c
 30702                           
 30703                           ;stkvar	_a @ sp[(-4)+-8]
 30704  01486C  0EF4               	movlw	-12
 30705  01486E  0060  F027  FFE3   	movff	btemp+8,plusw1
 30706  014874  0EF5               	movlw	-11
 30707  014876  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30708  01487C  0EF6               	movlw	-10
 30709  01487E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30710  014884  0EF7               	movlw	-9
 30711  014886  0060  F033  FFE3   	movff	btemp+11,plusw1
 30712  01488C                     l8480:
 30713                           
 30714                           ;stkvar	_a @ sp[(-4)+-8]
 30715  01488C  0EF6               	movlw	-10
 30716  01488E  8EE3               	bsf	plusw1,7,c
 30717                           
 30718                           ;stkvar	_a @ sp[(-4)+-8]
 30719  014890  0EF7               	movlw	247
 30720  014892  24E1               	addwf	fsr1l,w,c
 30721  014894  6ED9               	movwf	fsr2l,c
 30722  014896  0EFF               	movlw	255
 30723  014898  20E2               	addwfc	fsr1h,w,c
 30724  01489A  6EDA               	movwf	fsr2h,c
 30725  01489C  0E00               	movlw	0
 30726  01489E  6EDF               	movwf	indf2,c
 30727  0148A0  D018               	goto	l8486
 30728  0148A2                     l8484:
 30729  0148A2  0E00               	movlw	0
 30730  0148A4  6E09               	movwf	(btemp+8)^0,c
 30731  0148A6  0E00               	movlw	0
 30732  0148A8  6E0A               	movwf	(btemp+9)^0,c
 30733  0148AA  0E00               	movlw	0
 30734  0148AC  6E0B               	movwf	(btemp+10)^0,c
 30735  0148AE  0E00               	movlw	0
 30736  0148B0  6E0C               	movwf	(btemp+11)^0,c
 30737                           
 30738                           ;stkvar	_a @ sp[(-4)+-8]
 30739  0148B2  0EF4               	movlw	-12
 30740  0148B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 30741  0148BA  0EF5               	movlw	-11
 30742  0148BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30743  0148C2  0EF6               	movlw	-10
 30744  0148C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30745  0148CA  0EF7               	movlw	-9
 30746  0148CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 30747  0148D2                     l8486:
 30748                           
 30749                           ;stkvar	_bexp @ sp[(-4)+1]
 30750                           ;stkvar	_aexp @ sp[(-4)+2]
 30751  0148D2  50E1               	movf	fsr1l,w,c
 30752  0148D4  0FFE               	addlw	-2
 30753  0148D6  6ED9               	movwf	fsr2l,c
 30754  0148D8  50E2               	movf	fsr1h,w,c
 30755  0148DA  6EDA               	movwf	fsr2h,c
 30756  0148DC  0EFF               	movlw	255
 30757  0148DE  22DA               	addwfc	fsr2h,f,c
 30758  0148E0  0EFD               	movlw	-3
 30759  0148E2  50E3               	movf	plusw1,w,c
 30760  0148E4  5CDE               	subwf	postinc2,w,c
 30761  0148E6  B0D8               	btfsc	status,0,c
 30762  0148E8  D0A4               	goto	l8522
 30763                           
 30764                           ;stkvar	_signs @ sp[(-4)+3]
 30765  0148EA  0EFF               	movlw	-1
 30766  0148EC  ACE3               	btfss	plusw1,6,c
 30767  0148EE  D002               	goto	l8492
 30768                           
 30769                           ;stkvar	_signs @ sp[(-4)+3]
 30770  0148F0  0EFF               	movlw	-1
 30771  0148F2  7EE3               	btg	plusw1,7,c
 30772  0148F4                     l8492:
 30773                           
 30774                           ;stkvar	_bexp @ sp[(-4)+1]
 30775                           ;stkvar	_grs @ sp[(-4)+0]
 30776  0148F4  0EFD               	movlw	-3
 30777  0148F6  006F FF8C  F001    	movff	plusw1,btemp
 30778  0148FC  0EFC               	movlw	-4
 30779  0148FE  0060  F007  FFE3   	movff	btemp,plusw1
 30780                           
 30781                           ;stkvar	_aexp @ sp[(-4)+2]
 30782                           ;stkvar	_bexp @ sp[(-4)+1]
 30783  014904  0EFE               	movlw	-2
 30784  014906  006F FF8C  F001    	movff	plusw1,btemp
 30785  01490C  0EFD               	movlw	-3
 30786  01490E  0060  F007  FFE3   	movff	btemp,plusw1
 30787                           
 30788                           ;stkvar	_grs @ sp[(-4)+0]
 30789                           ;stkvar	_aexp @ sp[(-4)+2]
 30790  014914  0EFC               	movlw	-4
 30791  014916  006F FF8C  F001    	movff	plusw1,btemp
 30792  01491C  0EFE               	movlw	-2
 30793  01491E  0060  F007  FFE3   	movff	btemp,plusw1
 30794                           
 30795                           ;stkvar	_b @ sp[(-4)+-4]
 30796                           ;stkvar	_grs @ sp[(-4)+0]
 30797  014924  0EF8               	movlw	-8
 30798  014926  006F FF8C  F001    	movff	plusw1,btemp
 30799  01492C  0EFC               	movlw	-4
 30800  01492E  0060  F007  FFE3   	movff	btemp,plusw1
 30801                           
 30802                           ;stkvar	_a @ sp[(-4)+-8]
 30803                           ;stkvar	_b @ sp[(-4)+-4]
 30804  014934  0EF4               	movlw	-12
 30805  014936  006F FF8C  F001    	movff	plusw1,btemp
 30806  01493C  0EF8               	movlw	-8
 30807  01493E  0060  F007  FFE3   	movff	btemp,plusw1
 30808                           
 30809                           ;stkvar	_grs @ sp[(-4)+0]
 30810                           ;stkvar	_a @ sp[(-4)+-8]
 30811  014944  0EFC               	movlw	-4
 30812  014946  006F FF8C  F001    	movff	plusw1,btemp
 30813  01494C  0EF4               	movlw	-12
 30814  01494E  0060  F007  FFE3   	movff	btemp,plusw1
 30815                           
 30816                           ;stkvar	_b @ sp[(-4)+-4]
 30817  014954  0EF9               	movlw	249
 30818  014956  24E1               	addwf	fsr1l,w,c
 30819  014958  6ED9               	movwf	fsr2l,c
 30820  01495A  0EFF               	movlw	255
 30821  01495C  20E2               	addwfc	fsr1h,w,c
 30822  01495E  6EDA               	movwf	fsr2h,c
 30823  014960  50DF               	movf	indf2,w,c
 30824  014962  6E0C               	movwf	(btemp+11)^0,c
 30825                           
 30826                           ;stkvar	_grs @ sp[(-4)+0]
 30827  014964  0EFC               	movlw	-4
 30828  014966  0060  F033  FFE3   	movff	btemp+11,plusw1
 30829                           
 30830                           ;stkvar	_a @ sp[(-4)+-8]
 30831  01496C  0EF5               	movlw	245
 30832  01496E  24E1               	addwf	fsr1l,w,c
 30833  014970  6ED9               	movwf	fsr2l,c
 30834  014972  0EFF               	movlw	255
 30835  014974  20E2               	addwfc	fsr1h,w,c
 30836  014976  6EDA               	movwf	fsr2h,c
 30837                           
 30838                           ;stkvar	_b @ sp[(-4)+-4]
 30839  014978  0EF9               	movlw	249
 30840  01497A  24E1               	addwf	fsr1l,w,c
 30841  01497C  6EE9               	movwf	fsr0l,c
 30842  01497E  0EFF               	movlw	255
 30843  014980  20E2               	addwfc	fsr1h,w,c
 30844  014982  6EEA               	movwf	fsr0h,c
 30845  014984  006F FF7F FFEF     	movff	indf2,indf0
 30846                           
 30847                           ;stkvar	_grs @ sp[(-4)+0]
 30848                           ;stkvar	_a @ sp[(-4)+-8]
 30849  01498A  0EF5               	movlw	245
 30850  01498C  24E1               	addwf	fsr1l,w,c
 30851  01498E  6ED9               	movwf	fsr2l,c
 30852  014990  0EFF               	movlw	255
 30853  014992  20E2               	addwfc	fsr1h,w,c
 30854  014994  6EDA               	movwf	fsr2h,c
 30855  014996  0EFC               	movlw	-4
 30856  014998  006F FF8F FFDF     	movff	plusw1,indf2
 30857                           
 30858                           ;stkvar	_b @ sp[(-4)+-4]
 30859  01499E  0EFA               	movlw	250
 30860  0149A0  24E1               	addwf	fsr1l,w,c
 30861  0149A2  6ED9               	movwf	fsr2l,c
 30862  0149A4  0EFF               	movlw	255
 30863  0149A6  20E2               	addwfc	fsr1h,w,c
 30864  0149A8  6EDA               	movwf	fsr2h,c
 30865  0149AA  50DF               	movf	indf2,w,c
 30866  0149AC  6E0C               	movwf	(btemp+11)^0,c
 30867                           
 30868                           ;stkvar	_grs @ sp[(-4)+0]
 30869  0149AE  0EFC               	movlw	-4
 30870  0149B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30871                           
 30872                           ;stkvar	_a @ sp[(-4)+-8]
 30873  0149B6  0EF6               	movlw	246
 30874  0149B8  24E1               	addwf	fsr1l,w,c
 30875  0149BA  6ED9               	movwf	fsr2l,c
 30876  0149BC  0EFF               	movlw	255
 30877  0149BE  20E2               	addwfc	fsr1h,w,c
 30878  0149C0  6EDA               	movwf	fsr2h,c
 30879                           
 30880                           ;stkvar	_b @ sp[(-4)+-4]
 30881  0149C2  0EFA               	movlw	250
 30882  0149C4  24E1               	addwf	fsr1l,w,c
 30883  0149C6  6EE9               	movwf	fsr0l,c
 30884  0149C8  0EFF               	movlw	255
 30885  0149CA  20E2               	addwfc	fsr1h,w,c
 30886  0149CC  6EEA               	movwf	fsr0h,c
 30887  0149CE  006F FF7F FFEF     	movff	indf2,indf0
 30888                           
 30889                           ;stkvar	_grs @ sp[(-4)+0]
 30890                           ;stkvar	_a @ sp[(-4)+-8]
 30891  0149D4  0EF6               	movlw	246
 30892  0149D6  24E1               	addwf	fsr1l,w,c
 30893  0149D8  6ED9               	movwf	fsr2l,c
 30894  0149DA  0EFF               	movlw	255
 30895  0149DC  20E2               	addwfc	fsr1h,w,c
 30896  0149DE  6EDA               	movwf	fsr2h,c
 30897  0149E0  0EFC               	movlw	-4
 30898  0149E2  006F FF8F FFDF     	movff	plusw1,indf2
 30899                           
 30900                           ;stkvar	_b @ sp[(-4)+-4]
 30901  0149E8  0EFB               	movlw	251
 30902  0149EA  24E1               	addwf	fsr1l,w,c
 30903  0149EC  6ED9               	movwf	fsr2l,c
 30904  0149EE  0EFF               	movlw	255
 30905  0149F0  20E2               	addwfc	fsr1h,w,c
 30906  0149F2  6EDA               	movwf	fsr2h,c
 30907  0149F4  50DF               	movf	indf2,w,c
 30908  0149F6  6E0C               	movwf	(btemp+11)^0,c
 30909                           
 30910                           ;stkvar	_grs @ sp[(-4)+0]
 30911  0149F8  0EFC               	movlw	-4
 30912  0149FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30913                           
 30914                           ;stkvar	_a @ sp[(-4)+-8]
 30915  014A00  0EF7               	movlw	247
 30916  014A02  24E1               	addwf	fsr1l,w,c
 30917  014A04  6ED9               	movwf	fsr2l,c
 30918  014A06  0EFF               	movlw	255
 30919  014A08  20E2               	addwfc	fsr1h,w,c
 30920  014A0A  6EDA               	movwf	fsr2h,c
 30921                           
 30922                           ;stkvar	_b @ sp[(-4)+-4]
 30923  014A0C  0EFB               	movlw	251
 30924  014A0E  24E1               	addwf	fsr1l,w,c
 30925  014A10  6EE9               	movwf	fsr0l,c
 30926  014A12  0EFF               	movlw	255
 30927  014A14  20E2               	addwfc	fsr1h,w,c
 30928  014A16  6EEA               	movwf	fsr0h,c
 30929  014A18  006F FF7F FFEF     	movff	indf2,indf0
 30930                           
 30931                           ;stkvar	_grs @ sp[(-4)+0]
 30932                           ;stkvar	_a @ sp[(-4)+-8]
 30933  014A1E  0EF7               	movlw	247
 30934  014A20  24E1               	addwf	fsr1l,w,c
 30935  014A22  6ED9               	movwf	fsr2l,c
 30936  014A24  0EFF               	movlw	255
 30937  014A26  20E2               	addwfc	fsr1h,w,c
 30938  014A28  6EDA               	movwf	fsr2h,c
 30939  014A2A  0EFC               	movlw	-4
 30940  014A2C  006F FF8F FFDF     	movff	plusw1,indf2
 30941  014A32                     l8522:
 30942                           
 30943                           ;stkvar	_grs @ sp[(-4)+0]
 30944  014A32  0EFC               	movlw	-4
 30945  014A34  6AE3               	clrf	plusw1,c
 30946                           
 30947                           ;stkvar	_aexp @ sp[(-4)+2]
 30948  014A36  0EFE               	movlw	-2
 30949  014A38  50E3               	movf	plusw1,w,c
 30950  014A3A  6E0B               	movwf	(btemp+10)^0,c
 30951  014A3C  6A0C               	clrf	(btemp+11)^0,c
 30952                           
 30953                           ;stkvar	_bexp @ sp[(-4)+1]
 30954  014A3E  0EFD               	movlw	-3
 30955  014A40  50E3               	movf	plusw1,w,c
 30956  014A42  5E0B               	subwf	(btemp+10)^0,f,c
 30957  014A44  0E00               	movlw	0
 30958  014A46  5A0C               	subwfb	(btemp+11)^0,f,c
 30959  014A48  BE0C               	btfsc	(btemp+11)^0,7,c
 30960  014A4A  D062               	goto	l8546
 30961  014A4C  500C               	movf	(btemp+11)^0,w,c
 30962  014A4E  E104               	bnz	u6030
 30963  014A50  0E1A               	movlw	26
 30964  014A52  5C0B               	subwf	(btemp+10)^0,w,c
 30965  014A54  A0D8               	btfss	status,0,c
 30966  014A56  D05C               	goto	l8546
 30967  014A58                     u6030:
 30968                           
 30969                           ;stkvar	_b @ sp[(-4)+-4]
 30970  014A58  0EF8               	movlw	-8
 30971  014A5A  50E3               	movf	plusw1,w,c
 30972  014A5C  E10A               	bnz	u6041
 30973  014A5E  0EF9               	movlw	-7
 30974  014A60  50E3               	movf	plusw1,w,c
 30975  014A62  E107               	bnz	u6041
 30976  014A64  0EFA               	movlw	-6
 30977  014A66  50E3               	movf	plusw1,w,c
 30978  014A68  E104               	bnz	u6041
 30979  014A6A  0EFB               	movlw	-5
 30980  014A6C  50E3               	movf	plusw1,w,c
 30981  014A6E  B4D8               	btfsc	status,2,c
 30982  014A70  D003               	goto	u6040
 30983  014A72                     u6041:
 30984  014A72  6A0C               	clrf	(btemp+11)^0,c
 30985  014A74  2A0C               	incf	(btemp+11)^0,f,c
 30986  014A76  D001               	goto	u6058
 30987  014A78                     u6040:
 30988  014A78  6A0C               	clrf	(btemp+11)^0,c
 30989  014A7A                     u6058:
 30990                           
 30991                           ;stkvar	_grs @ sp[(-4)+0]
 30992  014A7A  0EFC               	movlw	-4
 30993  014A7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30994                           
 30995                           ;stkvar	_b @ sp[(-4)+-4]
 30996  014A82  0EF8               	movlw	-8
 30997  014A84  6AE3               	clrf	plusw1,c
 30998  014A86  0EF9               	movlw	-7
 30999  014A88  6AE3               	clrf	plusw1,c
 31000  014A8A  0EFA               	movlw	-6
 31001  014A8C  6AE3               	clrf	plusw1,c
 31002  014A8E  0EFB               	movlw	-5
 31003  014A90  6AE3               	clrf	plusw1,c
 31004                           
 31005                           ;stkvar	_aexp @ sp[(-4)+2]
 31006                           ;stkvar	_bexp @ sp[(-4)+1]
 31007  014A92  0EFE               	movlw	-2
 31008  014A94  006F FF8C  F001    	movff	plusw1,btemp
 31009  014A9A  0EFD               	movlw	-3
 31010  014A9C  0060  F007  FFE3   	movff	btemp,plusw1
 31011  014AA2  D042               	goto	u6090
 31012  014AA4                     l8532:
 31013                           
 31014                           ;stkvar	_grs @ sp[(-4)+0]
 31015  014AA4  0EFC               	movlw	-4
 31016  014AA6  A0E3               	btfss	plusw1,0,c
 31017  014AA8  D00D               	goto	l8536
 31018                           
 31019                           ;stkvar	_grs @ sp[(-4)+0]
 31020  014AAA  0EFC               	movlw	-4
 31021  014AAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 31022  014AB2  90D8               	bcf	status,0,c
 31023  014AB4  320C               	rrcf	(btemp+11)^0,f,c
 31024  014AB6  0E01               	movlw	1
 31025  014AB8  120C               	iorwf	(btemp+11)^0,f,c
 31026                           
 31027                           ;stkvar	_grs @ sp[(-4)+0]
 31028  014ABA  0EFC               	movlw	-4
 31029  014ABC  0060  F033  FFE3   	movff	btemp+11,plusw1
 31030  014AC2  D009               	goto	l8538
 31031  014AC4                     l8536:
 31032                           
 31033                           ;stkvar	_grs @ sp[(-4)+0]
 31034  014AC4  50E1               	movf	fsr1l,w,c
 31035  014AC6  0FFC               	addlw	-4
 31036  014AC8  6ED9               	movwf	fsr2l,c
 31037  014ACA  50E2               	movf	fsr1h,w,c
 31038  014ACC  6EDA               	movwf	fsr2h,c
 31039  014ACE  0EFF               	movlw	255
 31040  014AD0  22DA               	addwfc	fsr2h,f,c
 31041  014AD2  90D8               	bcf	status,0,c
 31042  014AD4  32DF               	rrcf	indf2,f,c
 31043  014AD6                     l8538:
 31044                           
 31045                           ;stkvar	_b @ sp[(-4)+-4]
 31046  014AD6  0EF8               	movlw	-8
 31047  014AD8  A0E3               	btfss	plusw1,0,c
 31048  014ADA  D002               	goto	l8542
 31049                           
 31050                           ;stkvar	_grs @ sp[(-4)+0]
 31051  014ADC  0EFC               	movlw	-4
 31052  014ADE  8EE3               	bsf	plusw1,7,c
 31053  014AE0                     l8542:
 31054  014AE0  0E01               	movlw	1
 31055  014AE2  6E0C               	movwf	(btemp+11)^0,c
 31056                           
 31057                           ;stkvar	_b @ sp[(-4)+-4]
 31058  014AE4  50E1               	movf	fsr1l,w,c
 31059  014AE6  0FF8               	addlw	-8
 31060  014AE8  6ED9               	movwf	fsr2l,c
 31061  014AEA  50E2               	movf	fsr1h,w,c
 31062  014AEC  6EDA               	movwf	fsr2h,c
 31063  014AEE  0EFF               	movlw	255
 31064  014AF0  22DA               	addwfc	fsr2h,f,c
 31065  014AF2  280C               	incf	(btemp+11)^0,w,c
 31066  014AF4  52DE               	movf	postinc2,f,c
 31067  014AF6  D008               	goto	u6080
 31068  014AF8                     u6085:
 31069  014AF8  52DE               	movf	postinc2,f,c
 31070  014AFA  90D8               	bcf	status,0,c
 31071  014AFC  BEDC               	btfsc	preinc2,7,c
 31072  014AFE  80D8               	bsf	status,0,c
 31073  014B00  32DD               	rrcf	postdec2,f,c
 31074  014B02  32DD               	rrcf	postdec2,f,c
 31075  014B04  32DD               	rrcf	postdec2,f,c
 31076  014B06  32DE               	rrcf	postinc2,f,c
 31077  014B08                     u6080:
 31078  014B08  2EE8               	decfsz	wreg,f,c
 31079  014B0A  D7F6               	goto	u6085
 31080                           
 31081                           ;stkvar	_bexp @ sp[(-4)+1]
 31082  014B0C  0EFD               	movlw	-3
 31083  014B0E  2AE3               	incf	plusw1,f,c
 31084  014B10                     l8546:
 31085                           
 31086                           ;stkvar	_aexp @ sp[(-4)+2]
 31087                           ;stkvar	_bexp @ sp[(-4)+1]
 31088  014B10  50E1               	movf	fsr1l,w,c
 31089  014B12  0FFD               	addlw	-3
 31090  014B14  6ED9               	movwf	fsr2l,c
 31091  014B16  50E2               	movf	fsr1h,w,c
 31092  014B18  6EDA               	movwf	fsr2h,c
 31093  014B1A  0EFF               	movlw	255
 31094  014B1C  22DA               	addwfc	fsr2h,f,c
 31095  014B1E  0EFE               	movlw	-2
 31096  014B20  50E3               	movf	plusw1,w,c
 31097  014B22  5CDE               	subwf	postinc2,w,c
 31098  014B24  A0D8               	btfss	status,0,c
 31099  014B26  D7BE               	goto	l8532
 31100  014B28                     u6090:
 31101                           
 31102                           ;stkvar	_signs @ sp[(-4)+3]
 31103  014B28  0EFF               	movlw	-1
 31104  014B2A  BCE3               	btfsc	plusw1,6,c
 31105  014B2C  D066               	goto	l8574
 31106                           
 31107                           ;stkvar	_bexp @ sp[(-4)+1]
 31108  014B2E  0EFD               	movlw	-3
 31109  014B30  50E3               	movf	plusw1,w,c
 31110  014B32  B4D8               	btfsc	status,2,c
 31111  014B34  D0F2               	goto	u6190
 31112                           
 31113                           ;stkvar	_a @ sp[(-4)+-8]
 31114                           ;stkvar	_b @ sp[(-4)+-4]
 31115  014B36  0EF8               	movlw	-8
 31116  014B38  50E3               	movf	plusw1,w,c
 31117  014B3A  6E01               	movwf	btemp^0,c
 31118  014B3C  0EF4               	movlw	-12
 31119  014B3E  50E3               	movf	plusw1,w,c
 31120  014B40  2601               	addwf	btemp^0,f,c
 31121  014B42  0EF8               	movlw	-8
 31122  014B44  0060  F007  FFE3   	movff	btemp,plusw1
 31123  014B4A  0EF9               	movlw	-7
 31124  014B4C  50E3               	movf	plusw1,w,c
 31125  014B4E  6E01               	movwf	btemp^0,c
 31126  014B50  0EF5               	movlw	-11
 31127  014B52  50E3               	movf	plusw1,w,c
 31128  014B54  2201               	addwfc	btemp^0,f,c
 31129  014B56  0EF9               	movlw	-7
 31130  014B58  0060  F007  FFE3   	movff	btemp,plusw1
 31131  014B5E  0EFA               	movlw	-6
 31132  014B60  50E3               	movf	plusw1,w,c
 31133  014B62  6E01               	movwf	btemp^0,c
 31134  014B64  0EF6               	movlw	-10
 31135  014B66  50E3               	movf	plusw1,w,c
 31136  014B68  2201               	addwfc	btemp^0,f,c
 31137  014B6A  0EFA               	movlw	-6
 31138  014B6C  0060  F007  FFE3   	movff	btemp,plusw1
 31139  014B72  0EFB               	movlw	-5
 31140  014B74  50E3               	movf	plusw1,w,c
 31141  014B76  6E01               	movwf	btemp^0,c
 31142  014B78  0EF7               	movlw	-9
 31143  014B7A  50E3               	movf	plusw1,w,c
 31144  014B7C  2201               	addwfc	btemp^0,f,c
 31145  014B7E  0EFB               	movlw	-5
 31146  014B80  0060  F007  FFE3   	movff	btemp,plusw1
 31147                           
 31148                           ;stkvar	_b @ sp[(-4)+-4]
 31149  014B86  0EFB               	movlw	-5
 31150  014B88  A0E3               	btfss	plusw1,0,c
 31151  014B8A  D101               	goto	u6230
 31152                           
 31153                           ;stkvar	_grs @ sp[(-4)+0]
 31154  014B8C  0EFC               	movlw	-4
 31155  014B8E  A0E3               	btfss	plusw1,0,c
 31156  014B90  D00D               	goto	l8564
 31157                           
 31158                           ;stkvar	_grs @ sp[(-4)+0]
 31159  014B92  0EFC               	movlw	-4
 31160  014B94  006F FF8C  F00C    	movff	plusw1,btemp+11
 31161  014B9A  90D8               	bcf	status,0,c
 31162  014B9C  320C               	rrcf	(btemp+11)^0,f,c
 31163  014B9E  0E01               	movlw	1
 31164  014BA0  120C               	iorwf	(btemp+11)^0,f,c
 31165                           
 31166                           ;stkvar	_grs @ sp[(-4)+0]
 31167  014BA2  0EFC               	movlw	-4
 31168  014BA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31169  014BAA  D009               	goto	l8566
 31170  014BAC                     l8564:
 31171                           
 31172                           ;stkvar	_grs @ sp[(-4)+0]
 31173  014BAC  50E1               	movf	fsr1l,w,c
 31174  014BAE  0FFC               	addlw	-4
 31175  014BB0  6ED9               	movwf	fsr2l,c
 31176  014BB2  50E2               	movf	fsr1h,w,c
 31177  014BB4  6EDA               	movwf	fsr2h,c
 31178  014BB6  0EFF               	movlw	255
 31179  014BB8  22DA               	addwfc	fsr2h,f,c
 31180  014BBA  90D8               	bcf	status,0,c
 31181  014BBC  32DF               	rrcf	indf2,f,c
 31182  014BBE                     l8566:
 31183                           
 31184                           ;stkvar	_b @ sp[(-4)+-4]
 31185  014BBE  0EF8               	movlw	-8
 31186  014BC0  A0E3               	btfss	plusw1,0,c
 31187  014BC2  D002               	goto	l8570
 31188                           
 31189                           ;stkvar	_grs @ sp[(-4)+0]
 31190  014BC4  0EFC               	movlw	-4
 31191  014BC6  8EE3               	bsf	plusw1,7,c
 31192  014BC8                     l8570:
 31193  014BC8  0E01               	movlw	1
 31194  014BCA  6E0C               	movwf	(btemp+11)^0,c
 31195                           
 31196                           ;stkvar	_b @ sp[(-4)+-4]
 31197  014BCC  50E1               	movf	fsr1l,w,c
 31198  014BCE  0FF8               	addlw	-8
 31199  014BD0  6ED9               	movwf	fsr2l,c
 31200  014BD2  50E2               	movf	fsr1h,w,c
 31201  014BD4  6EDA               	movwf	fsr2h,c
 31202  014BD6  0EFF               	movlw	255
 31203  014BD8  22DA               	addwfc	fsr2h,f,c
 31204  014BDA  280C               	incf	(btemp+11)^0,w,c
 31205  014BDC  52DE               	movf	postinc2,f,c
 31206  014BDE  D008               	goto	u6150
 31207  014BE0                     u6155:
 31208  014BE0  52DE               	movf	postinc2,f,c
 31209  014BE2  90D8               	bcf	status,0,c
 31210  014BE4  BEDC               	btfsc	preinc2,7,c
 31211  014BE6  80D8               	bsf	status,0,c
 31212  014BE8  32DD               	rrcf	postdec2,f,c
 31213  014BEA  32DD               	rrcf	postdec2,f,c
 31214  014BEC  32DD               	rrcf	postdec2,f,c
 31215  014BEE  32DE               	rrcf	postinc2,f,c
 31216  014BF0                     u6150:
 31217  014BF0  2EE8               	decfsz	wreg,f,c
 31218  014BF2  D7F6               	goto	u6155
 31219                           
 31220                           ;stkvar	_bexp @ sp[(-4)+1]
 31221  014BF4  0EFD               	movlw	-3
 31222  014BF6  2AE3               	incf	plusw1,f,c
 31223  014BF8  D0CA               	goto	u6230
 31224  014BFA                     l8574:
 31225                           
 31226                           ;stkvar	_a @ sp[(-4)+-8]
 31227                           ;stkvar	_b @ sp[(-4)+-4]
 31228  014BFA  50E1               	movf	fsr1l,w,c
 31229  014BFC  0FF8               	addlw	-8
 31230  014BFE  6ED9               	movwf	fsr2l,c
 31231  014C00  50E2               	movf	fsr1h,w,c
 31232  014C02  6EDA               	movwf	fsr2h,c
 31233  014C04  0EFF               	movlw	255
 31234  014C06  22DA               	addwfc	fsr2h,f,c
 31235  014C08  0EF4               	movlw	-12
 31236  014C0A  50E3               	movf	plusw1,w,c
 31237  014C0C  5CDE               	subwf	postinc2,w,c
 31238  014C0E  0EF5               	movlw	-11
 31239  014C10  50E3               	movf	plusw1,w,c
 31240  014C12  58DE               	subwfb	postinc2,w,c
 31241  014C14  0EF6               	movlw	-10
 31242  014C16  50E3               	movf	plusw1,w,c
 31243  014C18  58DE               	subwfb	postinc2,w,c
 31244  014C1A  50DE               	movf	postinc2,w,c
 31245  014C1C  0A80               	xorlw	128
 31246  014C1E  6E01               	movwf	btemp^0,c
 31247  014C20  0EF7               	movlw	-9
 31248  014C22  50E3               	movf	plusw1,w,c
 31249  014C24  0A80               	xorlw	128
 31250  014C26  5801               	subwfb	btemp^0,w,c
 31251  014C28  B0D8               	btfsc	status,0,c
 31252  014C2A  D053               	goto	l8586
 31253                           
 31254                           ;stkvar	_b @ sp[(-4)+-4]
 31255                           ;stkvar	_a @ sp[(-4)+-8]
 31256  014C2C  0EF4               	movlw	-12
 31257  014C2E  006F FF8C  F009    	movff	plusw1,btemp+8
 31258  014C34  0EF5               	movlw	-11
 31259  014C36  006F FF8C  F00A    	movff	plusw1,btemp+9
 31260  014C3C  0EF6               	movlw	-10
 31261  014C3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 31262  014C44  0EF7               	movlw	-9
 31263  014C46  006F FF8C  F00C    	movff	plusw1,btemp+11
 31264  014C4C  0EF8               	movlw	-8
 31265  014C4E  50E3               	movf	plusw1,w,c
 31266  014C50  5E09               	subwf	(btemp+8)^0,f,c
 31267  014C52  0EF9               	movlw	-7
 31268  014C54  50E3               	movf	plusw1,w,c
 31269  014C56  5A0A               	subwfb	(btemp+9)^0,f,c
 31270  014C58  0EFA               	movlw	-6
 31271  014C5A  50E3               	movf	plusw1,w,c
 31272  014C5C  5A0B               	subwfb	(btemp+10)^0,f,c
 31273  014C5E  0EFB               	movlw	-5
 31274  014C60  50E3               	movf	plusw1,w,c
 31275  014C62  5A0C               	subwfb	(btemp+11)^0,f,c
 31276  014C64  0EFF               	movlw	255
 31277  014C66  2409               	addwf	(btemp+8)^0,w,c
 31278  014C68  6E05               	movwf	(btemp+4)^0,c
 31279  014C6A  0EFF               	movlw	255
 31280  014C6C  200A               	addwfc	(btemp+9)^0,w,c
 31281  014C6E  6E06               	movwf	(btemp+5)^0,c
 31282  014C70  0EFF               	movlw	255
 31283  014C72  200B               	addwfc	(btemp+10)^0,w,c
 31284  014C74  6E07               	movwf	(btemp+6)^0,c
 31285  014C76  0EFF               	movlw	255
 31286  014C78  200C               	addwfc	(btemp+11)^0,w,c
 31287  014C7A  6E08               	movwf	(btemp+7)^0,c
 31288                           
 31289                           ;stkvar	_b @ sp[(-4)+-4]
 31290  014C7C  0EF8               	movlw	-8
 31291  014C7E  0060  F017  FFE3   	movff	btemp+4,plusw1
 31292  014C84  0EF9               	movlw	-7
 31293  014C86  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31294  014C8C  0EFA               	movlw	-6
 31295  014C8E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31296  014C94  0EFB               	movlw	-5
 31297  014C96  0060  F023  FFE3   	movff	btemp+7,plusw1
 31298                           
 31299                           ;stkvar	_signs @ sp[(-4)+3]
 31300  014C9C  0EFF               	movlw	-1
 31301  014C9E  7EE3               	btg	plusw1,7,c
 31302                           
 31303                           ;stkvar	_grs @ sp[(-4)+0]
 31304  014CA0  0EFC               	movlw	-4
 31305  014CA2  50E3               	movf	plusw1,w,c
 31306  014CA4  0800               	sublw	0
 31307  014CA6  6E0C               	movwf	(btemp+11)^0,c
 31308                           
 31309                           ;stkvar	_grs @ sp[(-4)+0]
 31310  014CA8  0EFC               	movlw	-4
 31311  014CAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 31312                           
 31313                           ;stkvar	_grs @ sp[(-4)+0]
 31314  014CB0  0EFC               	movlw	-4
 31315  014CB2  50E3               	movf	plusw1,w,c
 31316  014CB4  A4D8               	btfss	status,2,c
 31317  014CB6  D020               	goto	l8588
 31318                           
 31319                           ;stkvar	_b @ sp[(-4)+-4]
 31320  014CB8  50E1               	movf	fsr1l,w,c
 31321  014CBA  0FF8               	addlw	-8
 31322  014CBC  6ED9               	movwf	fsr2l,c
 31323  014CBE  50E2               	movf	fsr1h,w,c
 31324  014CC0  6EDA               	movwf	fsr2h,c
 31325  014CC2  0EFF               	movlw	255
 31326  014CC4  22DA               	addwfc	fsr2h,f,c
 31327  014CC6  2ADE               	incf	postinc2,f,c
 31328  014CC8  0E00               	movlw	0
 31329  014CCA  22DE               	addwfc	postinc2,f,c
 31330  014CCC  22DE               	addwfc	postinc2,f,c
 31331  014CCE  22DE               	addwfc	postinc2,f,c
 31332  014CD0  D013               	goto	l8588
 31333  014CD2                     l8586:
 31334                           
 31335                           ;stkvar	_a @ sp[(-4)+-8]
 31336                           ;stkvar	_b @ sp[(-4)+-4]
 31337  014CD2  50E1               	movf	fsr1l,w,c
 31338  014CD4  0FF8               	addlw	-8
 31339  014CD6  6ED9               	movwf	fsr2l,c
 31340  014CD8  50E2               	movf	fsr1h,w,c
 31341  014CDA  6EDA               	movwf	fsr2h,c
 31342  014CDC  0EFF               	movlw	255
 31343  014CDE  22DA               	addwfc	fsr2h,f,c
 31344  014CE0  0EF4               	movlw	-12
 31345  014CE2  50E3               	movf	plusw1,w,c
 31346  014CE4  5EDE               	subwf	postinc2,f,c
 31347  014CE6  0EF5               	movlw	-11
 31348  014CE8  50E3               	movf	plusw1,w,c
 31349  014CEA  5ADE               	subwfb	postinc2,f,c
 31350  014CEC  0EF6               	movlw	-10
 31351  014CEE  50E3               	movf	plusw1,w,c
 31352  014CF0  5ADE               	subwfb	postinc2,f,c
 31353  014CF2  0EF7               	movlw	-9
 31354  014CF4  50E3               	movf	plusw1,w,c
 31355  014CF6  5ADE               	subwfb	postinc2,f,c
 31356  014CF8                     l8588:
 31357                           
 31358                           ;stkvar	_b @ sp[(-4)+-4]
 31359  014CF8  0EF8               	movlw	-8
 31360  014CFA  50E3               	movf	plusw1,w,c
 31361  014CFC  E145               	bnz	l8610
 31362  014CFE  0EF9               	movlw	-7
 31363  014D00  50E3               	movf	plusw1,w,c
 31364  014D02  E142               	bnz	l8610
 31365  014D04  0EFA               	movlw	-6
 31366  014D06  50E3               	movf	plusw1,w,c
 31367  014D08  E13F               	bnz	l8610
 31368  014D0A  0EFB               	movlw	-5
 31369  014D0C  50E3               	movf	plusw1,w,c
 31370  014D0E  A4D8               	btfss	status,2,c
 31371  014D10  D03B               	goto	l8610
 31372                           
 31373                           ;stkvar	_grs @ sp[(-4)+0]
 31374  014D12  0EFC               	movlw	-4
 31375  014D14  50E3               	movf	plusw1,w,c
 31376  014D16  A4D8               	btfss	status,2,c
 31377  014D18  D037               	goto	l8610
 31378  014D1A                     u6190:
 31379  014D1A  0E00               	movlw	0
 31380  014D1C  6E01               	movwf	btemp^0,c
 31381  014D1E  0E00               	movlw	0
 31382  014D20  6E02               	movwf	(btemp+1)^0,c
 31383  014D22  0E00               	movlw	0
 31384  014D24  6E03               	movwf	(btemp+2)^0,c
 31385  014D26  0E00               	movlw	0
 31386  014D28  6E04               	movwf	(btemp+3)^0,c
 31387  014D2A  D0C6               	goto	l3196
 31388  014D2C                     l8596:
 31389                           
 31390                           ;stkvar	_b @ sp[(-4)+-4]
 31391  014D2C  90D8               	bcf	status,0,c
 31392  014D2E  0EF8               	movlw	-8
 31393  014D30  36E3               	rlcf	plusw1,f,c
 31394  014D32  0EF9               	movlw	-7
 31395  014D34  36E3               	rlcf	plusw1,f,c
 31396  014D36  0EFA               	movlw	-6
 31397  014D38  36E3               	rlcf	plusw1,f,c
 31398  014D3A  0EFB               	movlw	-5
 31399  014D3C  36E3               	rlcf	plusw1,f,c
 31400                           
 31401                           ;stkvar	_grs @ sp[(-4)+0]
 31402  014D3E  0EFC               	movlw	-4
 31403  014D40  AEE3               	btfss	plusw1,7,c
 31404  014D42  D002               	goto	l3208
 31405                           
 31406                           ;stkvar	_b @ sp[(-4)+-4]
 31407  014D44  0EF8               	movlw	-8
 31408  014D46  80E3               	bsf	plusw1,0,c
 31409  014D48                     l3208:
 31410                           
 31411                           ;stkvar	_grs @ sp[(-4)+0]
 31412  014D48  0EFC               	movlw	-4
 31413  014D4A  A0E3               	btfss	plusw1,0,c
 31414  014D4C  D00E               	goto	l8604
 31415                           
 31416                           ;stkvar	_grs @ sp[(-4)+0]
 31417  014D4E  0EFC               	movlw	-4
 31418  014D50  006F FF8C  F00C    	movff	plusw1,btemp+11
 31419  014D56  90D8               	bcf	status,0,c
 31420  014D58  340C               	rlcf	(btemp+11)^0,w,c
 31421  014D5A  6E0B               	movwf	(btemp+10)^0,c
 31422  014D5C  0E01               	movlw	1
 31423  014D5E  120B               	iorwf	(btemp+10)^0,f,c
 31424                           
 31425                           ;stkvar	_grs @ sp[(-4)+0]
 31426  014D60  0EFC               	movlw	-4
 31427  014D62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31428  014D68  D009               	goto	l8606
 31429  014D6A                     l8604:
 31430                           
 31431                           ;stkvar	_grs @ sp[(-4)+0]
 31432  014D6A  50E1               	movf	fsr1l,w,c
 31433  014D6C  0FFC               	addlw	-4
 31434  014D6E  6ED9               	movwf	fsr2l,c
 31435  014D70  50E2               	movf	fsr1h,w,c
 31436  014D72  6EDA               	movwf	fsr2h,c
 31437  014D74  0EFF               	movlw	255
 31438  014D76  22DA               	addwfc	fsr2h,f,c
 31439  014D78  90D8               	bcf	status,0,c
 31440  014D7A  36DF               	rlcf	indf2,f,c
 31441  014D7C                     l8606:
 31442                           
 31443                           ;stkvar	_bexp @ sp[(-4)+1]
 31444  014D7C  0EFD               	movlw	-3
 31445  014D7E  50E3               	movf	plusw1,w,c
 31446  014D80  B4D8               	btfsc	status,2,c
 31447  014D82  D002               	goto	l8610
 31448                           
 31449                           ;stkvar	_bexp @ sp[(-4)+1]
 31450  014D84  0EFD               	movlw	-3
 31451  014D86  06E3               	decf	plusw1,f,c
 31452  014D88                     l8610:
 31453                           
 31454                           ;stkvar	_b @ sp[(-4)+-4]
 31455  014D88  0EFA               	movlw	-6
 31456  014D8A  AEE3               	btfss	plusw1,7,c
 31457  014D8C  D7CF               	goto	l8596
 31458  014D8E                     u6230:
 31459                           
 31460                           ;stkvar	_aexp @ sp[(-4)+2]
 31461  014D8E  0EFE               	movlw	-2
 31462  014D90  6AE3               	clrf	plusw1,c
 31463                           
 31464                           ;stkvar	_grs @ sp[(-4)+0]
 31465  014D92  0EFC               	movlw	-4
 31466  014D94  AEE3               	btfss	plusw1,7,c
 31467  014D96  D00F               	goto	l8624
 31468                           
 31469                           ;stkvar	_grs @ sp[(-4)+0]
 31470  014D98  0EFC               	movlw	-4
 31471  014D9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31472  014DA0  0E7F               	movlw	127
 31473  014DA2  160C               	andwf	(btemp+11)^0,f,c
 31474  014DA4  B4D8               	btfsc	status,2,c
 31475  014DA6  D004               	goto	l8620
 31476  014DA8                     u6250:
 31477                           
 31478                           ;stkvar	_aexp @ sp[(-4)+2]
 31479  014DA8  0EFE               	movlw	-2
 31480  014DAA  6AE3               	clrf	plusw1,c
 31481  014DAC  2AE3               	incf	plusw1,f,c
 31482  014DAE  D003               	goto	l8624
 31483  014DB0                     l8620:
 31484                           
 31485                           ;stkvar	_b @ sp[(-4)+-4]
 31486  014DB0  0EF8               	movlw	-8
 31487  014DB2  B0E3               	btfsc	plusw1,0,c
 31488  014DB4  D7F9               	goto	u6250
 31489  014DB6                     l8624:
 31490                           
 31491                           ;stkvar	_aexp @ sp[(-4)+2]
 31492  014DB6  0EFE               	movlw	-2
 31493  014DB8  50E3               	movf	plusw1,w,c
 31494  014DBA  B4D8               	btfsc	status,2,c
 31495  014DBC  D02B               	goto	l8636
 31496                           
 31497                           ;stkvar	_b @ sp[(-4)+-4]
 31498  014DBE  50E1               	movf	fsr1l,w,c
 31499  014DC0  0FF8               	addlw	-8
 31500  014DC2  6ED9               	movwf	fsr2l,c
 31501  014DC4  50E2               	movf	fsr1h,w,c
 31502  014DC6  6EDA               	movwf	fsr2h,c
 31503  014DC8  0EFF               	movlw	255
 31504  014DCA  22DA               	addwfc	fsr2h,f,c
 31505  014DCC  2ADE               	incf	postinc2,f,c
 31506  014DCE  0E00               	movlw	0
 31507  014DD0  22DE               	addwfc	postinc2,f,c
 31508  014DD2  22DE               	addwfc	postinc2,f,c
 31509  014DD4  22DE               	addwfc	postinc2,f,c
 31510                           
 31511                           ;stkvar	_b @ sp[(-4)+-4]
 31512  014DD6  0EFB               	movlw	-5
 31513  014DD8  A0E3               	btfss	plusw1,0,c
 31514  014DDA  D01C               	goto	l8636
 31515  014DDC  0E01               	movlw	1
 31516  014DDE  6E0C               	movwf	(btemp+11)^0,c
 31517                           
 31518                           ;stkvar	_b @ sp[(-4)+-4]
 31519  014DE0  50E1               	movf	fsr1l,w,c
 31520  014DE2  0FF8               	addlw	-8
 31521  014DE4  6ED9               	movwf	fsr2l,c
 31522  014DE6  50E2               	movf	fsr1h,w,c
 31523  014DE8  6EDA               	movwf	fsr2h,c
 31524  014DEA  0EFF               	movlw	255
 31525  014DEC  22DA               	addwfc	fsr2h,f,c
 31526  014DEE  280C               	incf	(btemp+11)^0,w,c
 31527  014DF0  52DE               	movf	postinc2,f,c
 31528  014DF2  D008               	goto	u6290
 31529  014DF4                     u6295:
 31530  014DF4  52DE               	movf	postinc2,f,c
 31531  014DF6  90D8               	bcf	status,0,c
 31532  014DF8  BEDC               	btfsc	preinc2,7,c
 31533  014DFA  80D8               	bsf	status,0,c
 31534  014DFC  32DD               	rrcf	postdec2,f,c
 31535  014DFE  32DD               	rrcf	postdec2,f,c
 31536  014E00  32DD               	rrcf	postdec2,f,c
 31537  014E02  32DE               	rrcf	postinc2,f,c
 31538  014E04                     u6290:
 31539  014E04  2EE8               	decfsz	wreg,f,c
 31540  014E06  D7F6               	goto	u6295
 31541                           
 31542                           ;stkvar	_bexp @ sp[(-4)+1]
 31543  014E08  0EFD               	movlw	-3
 31544  014E0A  28E3               	incf	plusw1,w,c
 31545  014E0C  B4D8               	btfsc	status,2,c
 31546  014E0E  D002               	goto	l8636
 31547                           
 31548                           ;stkvar	_bexp @ sp[(-4)+1]
 31549  014E10  0EFD               	movlw	-3
 31550  014E12  2AE3               	incf	plusw1,f,c
 31551  014E14                     l8636:
 31552                           
 31553                           ;stkvar	_bexp @ sp[(-4)+1]
 31554  014E14  0EFD               	movlw	-3
 31555  014E16  28E3               	incf	plusw1,w,c
 31556  014E18  B4D8               	btfsc	status,2,c
 31557  014E1A  D004               	goto	u6320
 31558                           
 31559                           ;stkvar	_bexp @ sp[(-4)+1]
 31560  014E1C  0EFD               	movlw	-3
 31561  014E1E  50E3               	movf	plusw1,w,c
 31562  014E20  A4D8               	btfss	status,2,c
 31563  014E22  D00E               	goto	l8646
 31564  014E24                     u6320:
 31565                           
 31566                           ;stkvar	_b @ sp[(-4)+-4]
 31567  014E24  0EF8               	movlw	-8
 31568  014E26  6AE3               	clrf	plusw1,c
 31569  014E28  0EF9               	movlw	-7
 31570  014E2A  6AE3               	clrf	plusw1,c
 31571  014E2C  0EFA               	movlw	-6
 31572  014E2E  6AE3               	clrf	plusw1,c
 31573  014E30  0EFB               	movlw	-5
 31574  014E32  6AE3               	clrf	plusw1,c
 31575                           
 31576                           ;stkvar	_bexp @ sp[(-4)+1]
 31577  014E34  0EFD               	movlw	-3
 31578  014E36  50E3               	movf	plusw1,w,c
 31579  014E38  A4D8               	btfss	status,2,c
 31580  014E3A  D002               	goto	l8646
 31581                           
 31582                           ;stkvar	_signs @ sp[(-4)+3]
 31583  014E3C  0EFF               	movlw	-1
 31584  014E3E  6AE3               	clrf	plusw1,c
 31585  014E40                     l8646:
 31586                           
 31587                           ;stkvar	_bexp @ sp[(-4)+1]
 31588  014E40  0EFD               	movlw	-3
 31589  014E42  A0E3               	btfss	plusw1,0,c
 31590  014E44  D009               	goto	l8650
 31591                           
 31592                           ;stkvar	_b @ sp[(-4)+-4]
 31593  014E46  0EFA               	movlw	250
 31594  014E48  24E1               	addwf	fsr1l,w,c
 31595  014E4A  6ED9               	movwf	fsr2l,c
 31596  014E4C  0EFF               	movlw	255
 31597  014E4E  20E2               	addwfc	fsr1h,w,c
 31598  014E50  6EDA               	movwf	fsr2h,c
 31599  014E52  0E00               	movlw	0
 31600  014E54  8EDB               	bsf	plusw2,7,c
 31601  014E56  D008               	goto	l8652
 31602  014E58                     l8650:
 31603                           
 31604                           ;stkvar	_b @ sp[(-4)+-4]
 31605  014E58  0EFA               	movlw	250
 31606  014E5A  24E1               	addwf	fsr1l,w,c
 31607  014E5C  6ED9               	movwf	fsr2l,c
 31608  014E5E  0EFF               	movlw	255
 31609  014E60  20E2               	addwfc	fsr1h,w,c
 31610  014E62  6EDA               	movwf	fsr2h,c
 31611  014E64  0E7F               	movlw	127
 31612  014E66  16DF               	andwf	indf2,f,c
 31613  014E68                     l8652:
 31614                           
 31615                           ;stkvar	_b @ sp[(-4)+-4]
 31616  014E68  0EFB               	movlw	251
 31617  014E6A  24E1               	addwf	fsr1l,w,c
 31618  014E6C  6ED9               	movwf	fsr2l,c
 31619  014E6E  0EFF               	movlw	255
 31620  014E70  20E2               	addwfc	fsr1h,w,c
 31621  014E72  6EDA               	movwf	fsr2h,c
 31622                           
 31623                           ;stkvar	_bexp @ sp[(-4)+1]
 31624  014E74  0EFD               	movlw	-3
 31625  014E76  006F FF8C  F00C    	movff	plusw1,btemp+11
 31626  014E7C  90D8               	bcf	status,0,c
 31627  014E7E  300C               	rrcf	(btemp+11)^0,w,c
 31628  014E80  6EDF               	movwf	indf2,c
 31629                           
 31630                           ;stkvar	_signs @ sp[(-4)+3]
 31631  014E82  0EFF               	movlw	-1
 31632  014E84  AEE3               	btfss	plusw1,7,c
 31633  014E86  D008               	goto	l8658
 31634                           
 31635                           ;stkvar	_b @ sp[(-4)+-4]
 31636  014E88  0EFB               	movlw	251
 31637  014E8A  24E1               	addwf	fsr1l,w,c
 31638  014E8C  6ED9               	movwf	fsr2l,c
 31639  014E8E  0EFF               	movlw	255
 31640  014E90  20E2               	addwfc	fsr1h,w,c
 31641  014E92  6EDA               	movwf	fsr2h,c
 31642  014E94  0E00               	movlw	0
 31643  014E96  8EDB               	bsf	plusw2,7,c
 31644  014E98                     l8658:
 31645                           
 31646                           ;stkvar	_b @ sp[(-4)+-4]
 31647  014E98  0EF8               	movlw	-8
 31648  014E9A  006F FF8C  F001    	movff	plusw1,btemp
 31649  014EA0  0EF9               	movlw	-7
 31650  014EA2  006F FF8C  F002    	movff	plusw1,btemp+1
 31651  014EA8  0EFA               	movlw	-6
 31652  014EAA  006F FF8C  F003    	movff	plusw1,btemp+2
 31653  014EB0  0EFB               	movlw	-5
 31654  014EB2  006F FF8C  F004    	movff	plusw1,btemp+3
 31655  014EB8                     l3196:
 31656                           
 31657                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 31658  014EB8  0EF4               	movlw	244
 31659  014EBA  26E1               	addwf	fsr1l,f,c
 31660  014EBC  0EFF               	movlw	255
 31661  014EBE  22E2               	addwfc	fsr1h,f,c
 31662  014EC0  0012               	return		;funcret
 31663  014EC2                     __end_of___fladd:
 31664                           	opt callstack 0
 31665                           
 31666 ;; *************** function ___flmul *****************
 31667 ;; Defined at:
 31668 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 31669 ;; Parameters:    Size  Location     Type
 31670 ;;  b               4  [STACK] unsigned char 
 31671 ;;  a               4  [STACK] unsigned char 
 31672 ;; Auto vars:     Size  Location     Type
 31673 ;;  prod            4  [STACK] struct .
 31674 ;;  grs             4  [STACK] unsigned long 
 31675 ;;  temp            2  [STACK] struct .
 31676 ;;  bexp            1  [STACK] unsigned char 
 31677 ;;  aexp            1  [STACK] unsigned char 
 31678 ;;  sign            1  [STACK] unsigned char 
 31679 ;; Return value:  Size  Location     Type
 31680 ;;                  4  [STACK] unsigned char 
 31681 ;; Registers used:
 31682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 31683 ;; Tracked objects:
 31684 ;;		On entry : 0/0
 31685 ;;		On exit  : 0/0
 31686 ;;		Unchanged: 0/0
 31687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31692 ;;Total ram usage:        0 bytes
 31693 ;; Hardware stack levels used:    1
 31694 ;; Hardware stack levels required when called:   15
 31695 ;; This function calls:
 31696 ;;		Nothing
 31697 ;; This function is called by:
 31698 ;;		_conv_raw_result
 31699 ;;		_lp_filter
 31700 ;;		_calc_model_data
 31701 ;;		_calc_bsoc
 31702 ;;		_init_bsoc
 31703 ;;		_efgtoa
 31704 ;; This function uses a reentrant model
 31705 ;;
 31706                           
 31707                           	psect	text126
 31708  013EDC                     __ptext126:
 31709                           	opt callstack 0
 31710  013EDC                     ___flmul:
 31711                           	opt callstack 0
 31712                           
 31713                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 31714  013EDC  0E0D               	movlw	13
 31715  013EDE  26E1               	addwf	fsr1l,f,c
 31716  013EE0  0E00               	movlw	0
 31717  013EE2  22E2               	addwfc	fsr1h,f,c
 31718                           
 31719                           ;stkvar	_b @ sp[(-13)+-4]
 31720                           
 31721                           ;incstack = 0
 31722 ;; hardware stack exceeded
 31723  013EE4  0EF2               	movlw	242
 31724  013EE6  24E1               	addwf	fsr1l,w,c
 31725  013EE8  6ED9               	movwf	fsr2l,c
 31726  013EEA  0EFF               	movlw	255
 31727  013EEC  20E2               	addwfc	fsr1h,w,c
 31728  013EEE  6EDA               	movwf	fsr2h,c
 31729  013EF0  50DF               	movf	indf2,w,c
 31730  013EF2  6E0C               	movwf	(btemp+11)^0,c
 31731  013EF4  0E80               	movlw	128
 31732  013EF6  160C               	andwf	(btemp+11)^0,f,c
 31733                           
 31734                           ;stkvar	_sign @ sp[(-13)+12]
 31735  013EF8  0EFF               	movlw	-1
 31736  013EFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 31737                           
 31738                           ;stkvar	_b @ sp[(-13)+-4]
 31739  013F00  0EF2               	movlw	242
 31740  013F02  24E1               	addwf	fsr1l,w,c
 31741  013F04  6ED9               	movwf	fsr2l,c
 31742  013F06  0EFF               	movlw	255
 31743  013F08  20E2               	addwfc	fsr1h,w,c
 31744  013F0A  6EDA               	movwf	fsr2h,c
 31745  013F0C  50DF               	movf	indf2,w,c
 31746  013F0E  6E0C               	movwf	(btemp+11)^0,c
 31747  013F10  90D8               	bcf	status,0,c
 31748  013F12  340C               	rlcf	(btemp+11)^0,w,c
 31749  013F14  6E0B               	movwf	(btemp+10)^0,c
 31750                           
 31751                           ;stkvar	_bexp @ sp[(-13)+10]
 31752  013F16  0EFD               	movlw	-3
 31753  013F18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31754                           
 31755                           ;stkvar	_b @ sp[(-13)+-4]
 31756  013F1E  0EF1               	movlw	241
 31757  013F20  24E1               	addwf	fsr1l,w,c
 31758  013F22  6ED9               	movwf	fsr2l,c
 31759  013F24  0EFF               	movlw	255
 31760  013F26  20E2               	addwfc	fsr1h,w,c
 31761  013F28  6EDA               	movwf	fsr2h,c
 31762  013F2A  AEDF               	btfss	indf2,7,c
 31763  013F2C  D002               	goto	l9084
 31764                           
 31765                           ;stkvar	_bexp @ sp[(-13)+10]
 31766  013F2E  0EFD               	movlw	-3
 31767  013F30  80E3               	bsf	plusw1,0,c
 31768  013F32                     l9084:
 31769                           
 31770                           ;stkvar	_bexp @ sp[(-13)+10]
 31771  013F32  0EFD               	movlw	-3
 31772  013F34  50E3               	movf	plusw1,w,c
 31773  013F36  B4D8               	btfsc	status,2,c
 31774  013F38  D01F               	goto	l9092
 31775                           
 31776                           ;stkvar	_bexp @ sp[(-13)+10]
 31777  013F3A  0EFD               	movlw	-3
 31778  013F3C  28E3               	incf	plusw1,w,c
 31779  013F3E  A4D8               	btfss	status,2,c
 31780  013F40  D018               	goto	l9090
 31781  013F42  0E00               	movlw	0
 31782  013F44  6E09               	movwf	(btemp+8)^0,c
 31783  013F46  0E00               	movlw	0
 31784  013F48  6E0A               	movwf	(btemp+9)^0,c
 31785  013F4A  0E00               	movlw	0
 31786  013F4C  6E0B               	movwf	(btemp+10)^0,c
 31787  013F4E  0E00               	movlw	0
 31788  013F50  6E0C               	movwf	(btemp+11)^0,c
 31789                           
 31790                           ;stkvar	_b @ sp[(-13)+-4]
 31791  013F52  0EEF               	movlw	-17
 31792  013F54  0060  F027  FFE3   	movff	btemp+8,plusw1
 31793  013F5A  0EF0               	movlw	-16
 31794  013F5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31795  013F62  0EF1               	movlw	-15
 31796  013F64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31797  013F6A  0EF2               	movlw	-14
 31798  013F6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 31799  013F72                     l9090:
 31800                           
 31801                           ;stkvar	_b @ sp[(-13)+-4]
 31802  013F72  0EF1               	movlw	-15
 31803  013F74  8EE3               	bsf	plusw1,7,c
 31804  013F76  D018               	goto	l9094
 31805  013F78                     l9092:
 31806  013F78  0E00               	movlw	0
 31807  013F7A  6E09               	movwf	(btemp+8)^0,c
 31808  013F7C  0E00               	movlw	0
 31809  013F7E  6E0A               	movwf	(btemp+9)^0,c
 31810  013F80  0E00               	movlw	0
 31811  013F82  6E0B               	movwf	(btemp+10)^0,c
 31812  013F84  0E00               	movlw	0
 31813  013F86  6E0C               	movwf	(btemp+11)^0,c
 31814                           
 31815                           ;stkvar	_b @ sp[(-13)+-4]
 31816  013F88  0EEF               	movlw	-17
 31817  013F8A  0060  F027  FFE3   	movff	btemp+8,plusw1
 31818  013F90  0EF0               	movlw	-16
 31819  013F92  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31820  013F98  0EF1               	movlw	-15
 31821  013F9A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31822  013FA0  0EF2               	movlw	-14
 31823  013FA2  0060  F033  FFE3   	movff	btemp+11,plusw1
 31824  013FA8                     l9094:
 31825                           
 31826                           ;stkvar	_a @ sp[(-13)+-8]
 31827  013FA8  0EEE               	movlw	238
 31828  013FAA  24E1               	addwf	fsr1l,w,c
 31829  013FAC  6ED9               	movwf	fsr2l,c
 31830  013FAE  0EFF               	movlw	255
 31831  013FB0  20E2               	addwfc	fsr1h,w,c
 31832  013FB2  6EDA               	movwf	fsr2h,c
 31833  013FB4  50DF               	movf	indf2,w,c
 31834  013FB6  6E0C               	movwf	(btemp+11)^0,c
 31835  013FB8  0E80               	movlw	128
 31836  013FBA  160C               	andwf	(btemp+11)^0,f,c
 31837                           
 31838                           ;stkvar	_sign @ sp[(-13)+12]
 31839  013FBC  50E1               	movf	fsr1l,w,c
 31840  013FBE  0FFF               	addlw	-1
 31841  013FC0  6ED9               	movwf	fsr2l,c
 31842  013FC2  50E2               	movf	fsr1h,w,c
 31843  013FC4  6EDA               	movwf	fsr2h,c
 31844  013FC6  0EFF               	movlw	255
 31845  013FC8  22DA               	addwfc	fsr2h,f,c
 31846  013FCA  500C               	movf	(btemp+11)^0,w,c
 31847  013FCC  1ADF               	xorwf	indf2,f,c
 31848                           
 31849                           ;stkvar	_a @ sp[(-13)+-8]
 31850  013FCE  0EEE               	movlw	238
 31851  013FD0  24E1               	addwf	fsr1l,w,c
 31852  013FD2  6ED9               	movwf	fsr2l,c
 31853  013FD4  0EFF               	movlw	255
 31854  013FD6  20E2               	addwfc	fsr1h,w,c
 31855  013FD8  6EDA               	movwf	fsr2h,c
 31856  013FDA  50DF               	movf	indf2,w,c
 31857  013FDC  6E0C               	movwf	(btemp+11)^0,c
 31858  013FDE  90D8               	bcf	status,0,c
 31859  013FE0  340C               	rlcf	(btemp+11)^0,w,c
 31860  013FE2  6E0B               	movwf	(btemp+10)^0,c
 31861                           
 31862                           ;stkvar	_aexp @ sp[(-13)+11]
 31863  013FE4  0EFE               	movlw	-2
 31864  013FE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31865                           
 31866                           ;stkvar	_a @ sp[(-13)+-8]
 31867  013FEC  0EED               	movlw	237
 31868  013FEE  24E1               	addwf	fsr1l,w,c
 31869  013FF0  6ED9               	movwf	fsr2l,c
 31870  013FF2  0EFF               	movlw	255
 31871  013FF4  20E2               	addwfc	fsr1h,w,c
 31872  013FF6  6EDA               	movwf	fsr2h,c
 31873  013FF8  AEDF               	btfss	indf2,7,c
 31874  013FFA  D002               	goto	l9102
 31875                           
 31876                           ;stkvar	_aexp @ sp[(-13)+11]
 31877  013FFC  0EFE               	movlw	-2
 31878  013FFE  80E3               	bsf	plusw1,0,c
 31879  014000                     l9102:
 31880                           
 31881                           ;stkvar	_aexp @ sp[(-13)+11]
 31882  014000  0EFE               	movlw	-2
 31883  014002  50E3               	movf	plusw1,w,c
 31884  014004  B4D8               	btfsc	status,2,c
 31885  014006  D01F               	goto	l9110
 31886                           
 31887                           ;stkvar	_aexp @ sp[(-13)+11]
 31888  014008  0EFE               	movlw	-2
 31889  01400A  28E3               	incf	plusw1,w,c
 31890  01400C  A4D8               	btfss	status,2,c
 31891  01400E  D018               	goto	l9108
 31892  014010  0E00               	movlw	0
 31893  014012  6E09               	movwf	(btemp+8)^0,c
 31894  014014  0E00               	movlw	0
 31895  014016  6E0A               	movwf	(btemp+9)^0,c
 31896  014018  0E00               	movlw	0
 31897  01401A  6E0B               	movwf	(btemp+10)^0,c
 31898  01401C  0E00               	movlw	0
 31899  01401E  6E0C               	movwf	(btemp+11)^0,c
 31900                           
 31901                           ;stkvar	_a @ sp[(-13)+-8]
 31902  014020  0EEB               	movlw	-21
 31903  014022  0060  F027  FFE3   	movff	btemp+8,plusw1
 31904  014028  0EEC               	movlw	-20
 31905  01402A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31906  014030  0EED               	movlw	-19
 31907  014032  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31908  014038  0EEE               	movlw	-18
 31909  01403A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31910  014040                     l9108:
 31911                           
 31912                           ;stkvar	_a @ sp[(-13)+-8]
 31913  014040  0EED               	movlw	-19
 31914  014042  8EE3               	bsf	plusw1,7,c
 31915  014044  D018               	goto	l9112
 31916  014046                     l9110:
 31917  014046  0E00               	movlw	0
 31918  014048  6E09               	movwf	(btemp+8)^0,c
 31919  01404A  0E00               	movlw	0
 31920  01404C  6E0A               	movwf	(btemp+9)^0,c
 31921  01404E  0E00               	movlw	0
 31922  014050  6E0B               	movwf	(btemp+10)^0,c
 31923  014052  0E00               	movlw	0
 31924  014054  6E0C               	movwf	(btemp+11)^0,c
 31925                           
 31926                           ;stkvar	_a @ sp[(-13)+-8]
 31927  014056  0EEB               	movlw	-21
 31928  014058  0060  F027  FFE3   	movff	btemp+8,plusw1
 31929  01405E  0EEC               	movlw	-20
 31930  014060  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31931  014066  0EED               	movlw	-19
 31932  014068  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31933  01406E  0EEE               	movlw	-18
 31934  014070  0060  F033  FFE3   	movff	btemp+11,plusw1
 31935  014076                     l9112:
 31936                           
 31937                           ;stkvar	_aexp @ sp[(-13)+11]
 31938  014076  0EFE               	movlw	-2
 31939  014078  50E3               	movf	plusw1,w,c
 31940  01407A  B4D8               	btfsc	status,2,c
 31941  01407C  D004               	goto	u7310
 31942                           
 31943                           ;stkvar	_bexp @ sp[(-13)+10]
 31944  01407E  0EFD               	movlw	-3
 31945  014080  50E3               	movf	plusw1,w,c
 31946  014082  A4D8               	btfss	status,2,c
 31947  014084  D009               	goto	l9120
 31948  014086                     u7310:
 31949  014086  0E00               	movlw	0
 31950  014088  6E01               	movwf	btemp^0,c
 31951  01408A  0E00               	movlw	0
 31952  01408C  6E02               	movwf	(btemp+1)^0,c
 31953  01408E  0E00               	movlw	0
 31954  014090  6E03               	movwf	(btemp+2)^0,c
 31955  014092  0E00               	movlw	0
 31956  014094  6E04               	movwf	(btemp+3)^0,c
 31957  014096  D332               	goto	l3277
 31958  014098                     l9120:
 31959                           
 31960                           ;stkvar	_b @ sp[(-13)+-4]
 31961  014098  0EEF               	movlw	-17
 31962  01409A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31963                           
 31964                           ;stkvar	_a @ sp[(-13)+-8]
 31965  0140A0  0EED               	movlw	237
 31966  0140A2  24E1               	addwf	fsr1l,w,c
 31967  0140A4  6ED9               	movwf	fsr2l,c
 31968  0140A6  0EFF               	movlw	255
 31969  0140A8  20E2               	addwfc	fsr1h,w,c
 31970  0140AA  6EDA               	movwf	fsr2h,c
 31971  0140AC  50DF               	movf	indf2,w,c
 31972  0140AE  020C               	mulwf	(btemp+11)^0,c
 31973                           
 31974                           ;stkvar	_temp @ sp[(-13)+8]
 31975  0140B0  0EFB               	movlw	-5
 31976  0140B2  006F FFCF FFE3     	movff	prodl,plusw1
 31977  0140B8  0EFC               	movlw	-4
 31978  0140BA  006F FFD3 FFE3     	movff	prodh,plusw1
 31979                           
 31980                           ;stkvar	_temp @ sp[(-13)+8]
 31981  0140C0  0EFB               	movlw	-5
 31982  0140C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 31983  0140C8  0060  F030  F005   	movff	btemp+11,btemp+4
 31984  0140CE  6A06               	clrf	(btemp+5)^0,c
 31985  0140D0  6A07               	clrf	(btemp+6)^0,c
 31986  0140D2  6A08               	clrf	(btemp+7)^0,c
 31987                           
 31988                           ;stkvar	_grs @ sp[(-13)+4]
 31989  0140D4  0EF7               	movlw	-9
 31990  0140D6  0060  F017  FFE3   	movff	btemp+4,plusw1
 31991  0140DC  0EF8               	movlw	-8
 31992  0140DE  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31993  0140E4  0EF9               	movlw	-7
 31994  0140E6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31995  0140EC  0EFA               	movlw	-6
 31996  0140EE  0060  F023  FFE3   	movff	btemp+7,plusw1
 31997                           
 31998                           ;stkvar	_temp @ sp[(-13)+8]
 31999  0140F4  0EFC               	movlw	252
 32000  0140F6  24E1               	addwf	fsr1l,w,c
 32001  0140F8  6ED9               	movwf	fsr2l,c
 32002  0140FA  0EFF               	movlw	255
 32003  0140FC  20E2               	addwfc	fsr1h,w,c
 32004  0140FE  6EDA               	movwf	fsr2h,c
 32005  014100  50DF               	movf	indf2,w,c
 32006  014102  6E0C               	movwf	(btemp+11)^0,c
 32007  014104  0060  F030  F005   	movff	btemp+11,btemp+4
 32008  01410A  6A06               	clrf	(btemp+5)^0,c
 32009  01410C  6A07               	clrf	(btemp+6)^0,c
 32010  01410E  6A08               	clrf	(btemp+7)^0,c
 32011                           
 32012                           ;stkvar	_prod @ sp[(-13)+0]
 32013  014110  0EF3               	movlw	-13
 32014  014112  0060  F017  FFE3   	movff	btemp+4,plusw1
 32015  014118  0EF4               	movlw	-12
 32016  01411A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 32017  014120  0EF5               	movlw	-11
 32018  014122  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32019  014128  0EF6               	movlw	-10
 32020  01412A  0060  F023  FFE3   	movff	btemp+7,plusw1
 32021                           
 32022                           ;stkvar	_b @ sp[(-13)+-4]
 32023  014130  0EF0               	movlw	240
 32024  014132  24E1               	addwf	fsr1l,w,c
 32025  014134  6ED9               	movwf	fsr2l,c
 32026  014136  0EFF               	movlw	255
 32027  014138  20E2               	addwfc	fsr1h,w,c
 32028  01413A  6EDA               	movwf	fsr2h,c
 32029  01413C  50DF               	movf	indf2,w,c
 32030  01413E  6E0C               	movwf	(btemp+11)^0,c
 32031                           
 32032                           ;stkvar	_a @ sp[(-13)+-8]
 32033  014140  0EEC               	movlw	236
 32034  014142  24E1               	addwf	fsr1l,w,c
 32035  014144  6ED9               	movwf	fsr2l,c
 32036  014146  0EFF               	movlw	255
 32037  014148  20E2               	addwfc	fsr1h,w,c
 32038  01414A  6EDA               	movwf	fsr2h,c
 32039  01414C  50DF               	movf	indf2,w,c
 32040  01414E  020C               	mulwf	(btemp+11)^0,c
 32041                           
 32042                           ;stkvar	_temp @ sp[(-13)+8]
 32043  014150  0EFB               	movlw	-5
 32044  014152  006F FFCF FFE3     	movff	prodl,plusw1
 32045  014158  0EFC               	movlw	-4
 32046  01415A  006F FFD3 FFE3     	movff	prodh,plusw1
 32047                           
 32048                           ;stkvar	_grs @ sp[(-13)+4]
 32049  014160  50E1               	movf	fsr1l,w,c
 32050  014162  0FF7               	addlw	-9
 32051  014164  6ED9               	movwf	fsr2l,c
 32052  014166  50E2               	movf	fsr1h,w,c
 32053  014168  6EDA               	movwf	fsr2h,c
 32054  01416A  0EFF               	movlw	255
 32055  01416C  22DA               	addwfc	fsr2h,f,c
 32056                           
 32057                           ;stkvar	_temp @ sp[(-13)+8]
 32058  01416E  0EFB               	movlw	-5
 32059  014170  50E3               	movf	plusw1,w,c
 32060  014172  26DE               	addwf	postinc2,f,c
 32061  014174  0E00               	movlw	0
 32062  014176  22DE               	addwfc	postinc2,f,c
 32063  014178  22DE               	addwfc	postinc2,f,c
 32064  01417A  22DE               	addwfc	postinc2,f,c
 32065                           
 32066                           ;stkvar	_prod @ sp[(-13)+0]
 32067  01417C  50E1               	movf	fsr1l,w,c
 32068  01417E  0FF3               	addlw	-13
 32069  014180  6ED9               	movwf	fsr2l,c
 32070  014182  50E2               	movf	fsr1h,w,c
 32071  014184  6EDA               	movwf	fsr2h,c
 32072  014186  0EFF               	movlw	255
 32073  014188  22DA               	addwfc	fsr2h,f,c
 32074                           
 32075                           ;stkvar	_temp @ sp[(-13)+8]
 32076  01418A  0EFC               	movlw	252
 32077  01418C  24E1               	addwf	fsr1l,w,c
 32078  01418E  6EE9               	movwf	fsr0l,c
 32079  014190  0EFF               	movlw	255
 32080  014192  20E2               	addwfc	fsr1h,w,c
 32081  014194  6EEA               	movwf	fsr0h,c
 32082  014196  50EF               	movf	indf0,w,c
 32083  014198  26DE               	addwf	postinc2,f,c
 32084  01419A  0E00               	movlw	0
 32085  01419C  22DE               	addwfc	postinc2,f,c
 32086  01419E  22DE               	addwfc	postinc2,f,c
 32087  0141A0  22DE               	addwfc	postinc2,f,c
 32088                           
 32089                           ;stkvar	_b @ sp[(-13)+-4]
 32090  0141A2  0EF1               	movlw	241
 32091  0141A4  24E1               	addwf	fsr1l,w,c
 32092  0141A6  6ED9               	movwf	fsr2l,c
 32093  0141A8  0EFF               	movlw	255
 32094  0141AA  20E2               	addwfc	fsr1h,w,c
 32095  0141AC  6EDA               	movwf	fsr2h,c
 32096  0141AE  50DF               	movf	indf2,w,c
 32097  0141B0  6E0C               	movwf	(btemp+11)^0,c
 32098                           
 32099                           ;stkvar	_a @ sp[(-13)+-8]
 32100  0141B2  0EEB               	movlw	-21
 32101  0141B4  50E3               	movf	plusw1,w,c
 32102  0141B6  020C               	mulwf	(btemp+11)^0,c
 32103                           
 32104                           ;stkvar	_temp @ sp[(-13)+8]
 32105  0141B8  0EFB               	movlw	-5
 32106  0141BA  006F FFCF FFE3     	movff	prodl,plusw1
 32107  0141C0  0EFC               	movlw	-4
 32108  0141C2  006F FFD3 FFE3     	movff	prodh,plusw1
 32109                           
 32110                           ;stkvar	_grs @ sp[(-13)+4]
 32111  0141C8  50E1               	movf	fsr1l,w,c
 32112  0141CA  0FF7               	addlw	-9
 32113  0141CC  6ED9               	movwf	fsr2l,c
 32114  0141CE  50E2               	movf	fsr1h,w,c
 32115  0141D0  6EDA               	movwf	fsr2h,c
 32116  0141D2  0EFF               	movlw	255
 32117  0141D4  22DA               	addwfc	fsr2h,f,c
 32118                           
 32119                           ;stkvar	_temp @ sp[(-13)+8]
 32120  0141D6  0EFB               	movlw	-5
 32121  0141D8  50E3               	movf	plusw1,w,c
 32122  0141DA  26DE               	addwf	postinc2,f,c
 32123  0141DC  0E00               	movlw	0
 32124  0141DE  22DE               	addwfc	postinc2,f,c
 32125  0141E0  22DE               	addwfc	postinc2,f,c
 32126  0141E2  22DE               	addwfc	postinc2,f,c
 32127                           
 32128                           ;stkvar	_prod @ sp[(-13)+0]
 32129  0141E4  50E1               	movf	fsr1l,w,c
 32130  0141E6  0FF3               	addlw	-13
 32131  0141E8  6ED9               	movwf	fsr2l,c
 32132  0141EA  50E2               	movf	fsr1h,w,c
 32133  0141EC  6EDA               	movwf	fsr2h,c
 32134  0141EE  0EFF               	movlw	255
 32135  0141F0  22DA               	addwfc	fsr2h,f,c
 32136                           
 32137                           ;stkvar	_temp @ sp[(-13)+8]
 32138  0141F2  0EFC               	movlw	252
 32139  0141F4  24E1               	addwf	fsr1l,w,c
 32140  0141F6  6EE9               	movwf	fsr0l,c
 32141  0141F8  0EFF               	movlw	255
 32142  0141FA  20E2               	addwfc	fsr1h,w,c
 32143  0141FC  6EEA               	movwf	fsr0h,c
 32144  0141FE  50EF               	movf	indf0,w,c
 32145  014200  26DE               	addwf	postinc2,f,c
 32146  014202  0E00               	movlw	0
 32147  014204  22DE               	addwfc	postinc2,f,c
 32148  014206  22DE               	addwfc	postinc2,f,c
 32149  014208  22DE               	addwfc	postinc2,f,c
 32150                           
 32151                           ;stkvar	_grs @ sp[(-13)+4]
 32152  01420A  50E1               	movf	fsr1l,w,c
 32153  01420C  0FF7               	addlw	-9
 32154  01420E  6ED9               	movwf	fsr2l,c
 32155  014210  50E2               	movf	fsr1h,w,c
 32156  014212  6EDA               	movwf	fsr2h,c
 32157  014214  0EFF               	movlw	255
 32158  014216  22DA               	addwfc	fsr2h,f,c
 32159  014218  0E08               	movlw	8
 32160  01421A                     u7325:
 32161  01421A  90D8               	bcf	status,0,c
 32162  01421C  36DE               	rlcf	postinc2,f,c
 32163  01421E  36DE               	rlcf	postinc2,f,c
 32164  014220  36DE               	rlcf	postinc2,f,c
 32165  014222  36DD               	rlcf	postdec2,f,c
 32166  014224  52DD               	movf	postdec2,f,c
 32167  014226  52DD               	movf	postdec2,f,c
 32168  014228  2EE8               	decfsz	wreg,f,c
 32169  01422A  D7F7               	goto	u7325
 32170                           
 32171                           ;stkvar	_b @ sp[(-13)+-4]
 32172  01422C  0EF0               	movlw	240
 32173  01422E  24E1               	addwf	fsr1l,w,c
 32174  014230  6ED9               	movwf	fsr2l,c
 32175  014232  0EFF               	movlw	255
 32176  014234  20E2               	addwfc	fsr1h,w,c
 32177  014236  6EDA               	movwf	fsr2h,c
 32178  014238  50DF               	movf	indf2,w,c
 32179  01423A  6E0C               	movwf	(btemp+11)^0,c
 32180                           
 32181                           ;stkvar	_a @ sp[(-13)+-8]
 32182  01423C  0EEB               	movlw	-21
 32183  01423E  50E3               	movf	plusw1,w,c
 32184  014240  020C               	mulwf	(btemp+11)^0,c
 32185                           
 32186                           ;stkvar	_temp @ sp[(-13)+8]
 32187  014242  0EFB               	movlw	-5
 32188  014244  006F FFCF FFE3     	movff	prodl,plusw1
 32189  01424A  0EFC               	movlw	-4
 32190  01424C  006F FFD3 FFE3     	movff	prodh,plusw1
 32191                           
 32192                           ;stkvar	_temp @ sp[(-13)+8]
 32193  014252  0EFB               	movlw	-5
 32194  014254  006F FF8C  F00B    	movff	plusw1,btemp+10
 32195  01425A  0EFC               	movlw	-4
 32196  01425C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32197                           
 32198                           ;stkvar	_grs @ sp[(-13)+4]
 32199  014262  50E1               	movf	fsr1l,w,c
 32200  014264  0FF7               	addlw	-9
 32201  014266  6ED9               	movwf	fsr2l,c
 32202  014268  50E2               	movf	fsr1h,w,c
 32203  01426A  6EDA               	movwf	fsr2h,c
 32204  01426C  0EFF               	movlw	255
 32205  01426E  22DA               	addwfc	fsr2h,f,c
 32206  014270  500B               	movf	(btemp+10)^0,w,c
 32207  014272  26DE               	addwf	postinc2,f,c
 32208  014274  500C               	movf	(btemp+11)^0,w,c
 32209  014276  22DE               	addwfc	postinc2,f,c
 32210  014278  0E00               	movlw	0
 32211  01427A  22DE               	addwfc	postinc2,f,c
 32212  01427C  22DE               	addwfc	postinc2,f,c
 32213                           
 32214                           ;stkvar	_b @ sp[(-13)+-4]
 32215  01427E  0EEF               	movlw	-17
 32216  014280  006F FF8C  F00C    	movff	plusw1,btemp+11
 32217                           
 32218                           ;stkvar	_a @ sp[(-13)+-8]
 32219  014286  0EEC               	movlw	236
 32220  014288  24E1               	addwf	fsr1l,w,c
 32221  01428A  6ED9               	movwf	fsr2l,c
 32222  01428C  0EFF               	movlw	255
 32223  01428E  20E2               	addwfc	fsr1h,w,c
 32224  014290  6EDA               	movwf	fsr2h,c
 32225  014292  50DF               	movf	indf2,w,c
 32226  014294  020C               	mulwf	(btemp+11)^0,c
 32227                           
 32228                           ;stkvar	_temp @ sp[(-13)+8]
 32229  014296  0EFB               	movlw	-5
 32230  014298  006F FFCF FFE3     	movff	prodl,plusw1
 32231  01429E  0EFC               	movlw	-4
 32232  0142A0  006F FFD3 FFE3     	movff	prodh,plusw1
 32233                           
 32234                           ;stkvar	_temp @ sp[(-13)+8]
 32235  0142A6  0EFB               	movlw	-5
 32236  0142A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 32237  0142AE  0EFC               	movlw	-4
 32238  0142B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 32239                           
 32240                           ;stkvar	_grs @ sp[(-13)+4]
 32241  0142B6  50E1               	movf	fsr1l,w,c
 32242  0142B8  0FF7               	addlw	-9
 32243  0142BA  6ED9               	movwf	fsr2l,c
 32244  0142BC  50E2               	movf	fsr1h,w,c
 32245  0142BE  6EDA               	movwf	fsr2h,c
 32246  0142C0  0EFF               	movlw	255
 32247  0142C2  22DA               	addwfc	fsr2h,f,c
 32248  0142C4  500B               	movf	(btemp+10)^0,w,c
 32249  0142C6  26DE               	addwf	postinc2,f,c
 32250  0142C8  500C               	movf	(btemp+11)^0,w,c
 32251  0142CA  22DE               	addwfc	postinc2,f,c
 32252  0142CC  0E00               	movlw	0
 32253  0142CE  22DE               	addwfc	postinc2,f,c
 32254  0142D0  22DE               	addwfc	postinc2,f,c
 32255                           
 32256                           ;stkvar	_grs @ sp[(-13)+4]
 32257  0142D2  50E1               	movf	fsr1l,w,c
 32258  0142D4  0FF7               	addlw	-9
 32259  0142D6  6ED9               	movwf	fsr2l,c
 32260  0142D8  50E2               	movf	fsr1h,w,c
 32261  0142DA  6EDA               	movwf	fsr2h,c
 32262  0142DC  0EFF               	movlw	255
 32263  0142DE  22DA               	addwfc	fsr2h,f,c
 32264  0142E0  0E08               	movlw	8
 32265  0142E2                     u7335:
 32266  0142E2  90D8               	bcf	status,0,c
 32267  0142E4  36DE               	rlcf	postinc2,f,c
 32268  0142E6  36DE               	rlcf	postinc2,f,c
 32269  0142E8  36DE               	rlcf	postinc2,f,c
 32270  0142EA  36DD               	rlcf	postdec2,f,c
 32271  0142EC  52DD               	movf	postdec2,f,c
 32272  0142EE  52DD               	movf	postdec2,f,c
 32273  0142F0  2EE8               	decfsz	wreg,f,c
 32274  0142F2  D7F7               	goto	u7335
 32275                           
 32276                           ;stkvar	_b @ sp[(-13)+-4]
 32277  0142F4  0EEF               	movlw	-17
 32278  0142F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 32279                           
 32280                           ;stkvar	_a @ sp[(-13)+-8]
 32281  0142FC  0EEB               	movlw	-21
 32282  0142FE  50E3               	movf	plusw1,w,c
 32283  014300  020C               	mulwf	(btemp+11)^0,c
 32284                           
 32285                           ;stkvar	_temp @ sp[(-13)+8]
 32286  014302  0EFB               	movlw	-5
 32287  014304  006F FFCF FFE3     	movff	prodl,plusw1
 32288  01430A  0EFC               	movlw	-4
 32289  01430C  006F FFD3 FFE3     	movff	prodh,plusw1
 32290                           
 32291                           ;stkvar	_temp @ sp[(-13)+8]
 32292  014312  0EFB               	movlw	-5
 32293  014314  006F FF8C  F00B    	movff	plusw1,btemp+10
 32294  01431A  0EFC               	movlw	-4
 32295  01431C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32296                           
 32297                           ;stkvar	_grs @ sp[(-13)+4]
 32298  014322  50E1               	movf	fsr1l,w,c
 32299  014324  0FF7               	addlw	-9
 32300  014326  6ED9               	movwf	fsr2l,c
 32301  014328  50E2               	movf	fsr1h,w,c
 32302  01432A  6EDA               	movwf	fsr2h,c
 32303  01432C  0EFF               	movlw	255
 32304  01432E  22DA               	addwfc	fsr2h,f,c
 32305  014330  500B               	movf	(btemp+10)^0,w,c
 32306  014332  26DE               	addwf	postinc2,f,c
 32307  014334  500C               	movf	(btemp+11)^0,w,c
 32308  014336  22DE               	addwfc	postinc2,f,c
 32309  014338  0E00               	movlw	0
 32310  01433A  22DE               	addwfc	postinc2,f,c
 32311  01433C  22DE               	addwfc	postinc2,f,c
 32312                           
 32313                           ;stkvar	_b @ sp[(-13)+-4]
 32314  01433E  0EF0               	movlw	240
 32315  014340  24E1               	addwf	fsr1l,w,c
 32316  014342  6ED9               	movwf	fsr2l,c
 32317  014344  0EFF               	movlw	255
 32318  014346  20E2               	addwfc	fsr1h,w,c
 32319  014348  6EDA               	movwf	fsr2h,c
 32320  01434A  50DF               	movf	indf2,w,c
 32321  01434C  6E0C               	movwf	(btemp+11)^0,c
 32322                           
 32323                           ;stkvar	_a @ sp[(-13)+-8]
 32324  01434E  0EED               	movlw	237
 32325  014350  24E1               	addwf	fsr1l,w,c
 32326  014352  6ED9               	movwf	fsr2l,c
 32327  014354  0EFF               	movlw	255
 32328  014356  20E2               	addwfc	fsr1h,w,c
 32329  014358  6EDA               	movwf	fsr2h,c
 32330  01435A  50DF               	movf	indf2,w,c
 32331  01435C  020C               	mulwf	(btemp+11)^0,c
 32332                           
 32333                           ;stkvar	_temp @ sp[(-13)+8]
 32334  01435E  0EFB               	movlw	-5
 32335  014360  006F FFCF FFE3     	movff	prodl,plusw1
 32336  014366  0EFC               	movlw	-4
 32337  014368  006F FFD3 FFE3     	movff	prodh,plusw1
 32338                           
 32339                           ;stkvar	_temp @ sp[(-13)+8]
 32340  01436E  0EFB               	movlw	-5
 32341  014370  006F FF8C  F00B    	movff	plusw1,btemp+10
 32342  014376  0EFC               	movlw	-4
 32343  014378  006F FF8C  F00C    	movff	plusw1,btemp+11
 32344                           
 32345                           ;stkvar	_prod @ sp[(-13)+0]
 32346  01437E  50E1               	movf	fsr1l,w,c
 32347  014380  0FF3               	addlw	-13
 32348  014382  6ED9               	movwf	fsr2l,c
 32349  014384  50E2               	movf	fsr1h,w,c
 32350  014386  6EDA               	movwf	fsr2h,c
 32351  014388  0EFF               	movlw	255
 32352  01438A  22DA               	addwfc	fsr2h,f,c
 32353  01438C  500B               	movf	(btemp+10)^0,w,c
 32354  01438E  26DE               	addwf	postinc2,f,c
 32355  014390  500C               	movf	(btemp+11)^0,w,c
 32356  014392  22DE               	addwfc	postinc2,f,c
 32357  014394  0E00               	movlw	0
 32358  014396  22DE               	addwfc	postinc2,f,c
 32359  014398  22DE               	addwfc	postinc2,f,c
 32360                           
 32361                           ;stkvar	_b @ sp[(-13)+-4]
 32362  01439A  0EF1               	movlw	241
 32363  01439C  24E1               	addwf	fsr1l,w,c
 32364  01439E  6ED9               	movwf	fsr2l,c
 32365  0143A0  0EFF               	movlw	255
 32366  0143A2  20E2               	addwfc	fsr1h,w,c
 32367  0143A4  6EDA               	movwf	fsr2h,c
 32368  0143A6  50DF               	movf	indf2,w,c
 32369  0143A8  6E0C               	movwf	(btemp+11)^0,c
 32370                           
 32371                           ;stkvar	_a @ sp[(-13)+-8]
 32372  0143AA  0EEC               	movlw	236
 32373  0143AC  24E1               	addwf	fsr1l,w,c
 32374  0143AE  6ED9               	movwf	fsr2l,c
 32375  0143B0  0EFF               	movlw	255
 32376  0143B2  20E2               	addwfc	fsr1h,w,c
 32377  0143B4  6EDA               	movwf	fsr2h,c
 32378  0143B6  50DF               	movf	indf2,w,c
 32379  0143B8  020C               	mulwf	(btemp+11)^0,c
 32380                           
 32381                           ;stkvar	_temp @ sp[(-13)+8]
 32382  0143BA  0EFB               	movlw	-5
 32383  0143BC  006F FFCF FFE3     	movff	prodl,plusw1
 32384  0143C2  0EFC               	movlw	-4
 32385  0143C4  006F FFD3 FFE3     	movff	prodh,plusw1
 32386                           
 32387                           ;stkvar	_temp @ sp[(-13)+8]
 32388  0143CA  0EFB               	movlw	-5
 32389  0143CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 32390  0143D2  0EFC               	movlw	-4
 32391  0143D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 32392                           
 32393                           ;stkvar	_prod @ sp[(-13)+0]
 32394  0143DA  50E1               	movf	fsr1l,w,c
 32395  0143DC  0FF3               	addlw	-13
 32396  0143DE  6ED9               	movwf	fsr2l,c
 32397  0143E0  50E2               	movf	fsr1h,w,c
 32398  0143E2  6EDA               	movwf	fsr2h,c
 32399  0143E4  0EFF               	movlw	255
 32400  0143E6  22DA               	addwfc	fsr2h,f,c
 32401  0143E8  500B               	movf	(btemp+10)^0,w,c
 32402  0143EA  26DE               	addwf	postinc2,f,c
 32403  0143EC  500C               	movf	(btemp+11)^0,w,c
 32404  0143EE  22DE               	addwfc	postinc2,f,c
 32405  0143F0  0E00               	movlw	0
 32406  0143F2  22DE               	addwfc	postinc2,f,c
 32407  0143F4  22DE               	addwfc	postinc2,f,c
 32408                           
 32409                           ;stkvar	_b @ sp[(-13)+-4]
 32410  0143F6  0EF1               	movlw	241
 32411  0143F8  24E1               	addwf	fsr1l,w,c
 32412  0143FA  6ED9               	movwf	fsr2l,c
 32413  0143FC  0EFF               	movlw	255
 32414  0143FE  20E2               	addwfc	fsr1h,w,c
 32415  014400  6EDA               	movwf	fsr2h,c
 32416  014402  50DF               	movf	indf2,w,c
 32417  014404  6E0C               	movwf	(btemp+11)^0,c
 32418                           
 32419                           ;stkvar	_a @ sp[(-13)+-8]
 32420  014406  0EED               	movlw	237
 32421  014408  24E1               	addwf	fsr1l,w,c
 32422  01440A  6ED9               	movwf	fsr2l,c
 32423  01440C  0EFF               	movlw	255
 32424  01440E  20E2               	addwfc	fsr1h,w,c
 32425  014410  6EDA               	movwf	fsr2h,c
 32426  014412  50DF               	movf	indf2,w,c
 32427  014414  020C               	mulwf	(btemp+11)^0,c
 32428                           
 32429                           ;stkvar	_temp @ sp[(-13)+8]
 32430  014416  0EFB               	movlw	-5
 32431  014418  006F FFCF FFE3     	movff	prodl,plusw1
 32432  01441E  0EFC               	movlw	-4
 32433  014420  006F FFD3 FFE3     	movff	prodh,plusw1
 32434                           
 32435                           ;stkvar	_temp @ sp[(-13)+8]
 32436  014426  0EFB               	movlw	-5
 32437  014428  006F FF8C  F00B    	movff	plusw1,btemp+10
 32438  01442E  0EFC               	movlw	-4
 32439  014430  006F FF8C  F00C    	movff	plusw1,btemp+11
 32440  014436  500B               	movf	(btemp+10)^0,w,c
 32441  014438  6E05               	movwf	(btemp+4)^0,c
 32442  01443A  500C               	movf	(btemp+11)^0,w,c
 32443  01443C  6E06               	movwf	(btemp+5)^0,c
 32444  01443E  6A07               	clrf	(btemp+6)^0,c
 32445  014440  6A08               	clrf	(btemp+7)^0,c
 32446  014442  0060  F01C  F008   	movff	btemp+6,btemp+7
 32447  014448  0060  F018  F007   	movff	btemp+5,btemp+6
 32448  01444E  0060  F014  F006   	movff	btemp+4,btemp+5
 32449  014454  6A05               	clrf	(btemp+4)^0,c
 32450                           
 32451                           ;stkvar	_prod @ sp[(-13)+0]
 32452  014456  50E1               	movf	fsr1l,w,c
 32453  014458  0FF3               	addlw	-13
 32454  01445A  6ED9               	movwf	fsr2l,c
 32455  01445C  50E2               	movf	fsr1h,w,c
 32456  01445E  6EDA               	movwf	fsr2h,c
 32457  014460  0EFF               	movlw	255
 32458  014462  22DA               	addwfc	fsr2h,f,c
 32459  014464  5005               	movf	(btemp+4)^0,w,c
 32460  014466  26DE               	addwf	postinc2,f,c
 32461  014468  5006               	movf	(btemp+5)^0,w,c
 32462  01446A  22DE               	addwfc	postinc2,f,c
 32463  01446C  5007               	movf	(btemp+6)^0,w,c
 32464  01446E  22DE               	addwfc	postinc2,f,c
 32465  014470  5008               	movf	(btemp+7)^0,w,c
 32466  014472  22DE               	addwfc	postinc2,f,c
 32467                           
 32468                           ;stkvar	_prod @ sp[(-13)+0]
 32469  014474  50E1               	movf	fsr1l,w,c
 32470  014476  0FF3               	addlw	-13
 32471  014478  6ED9               	movwf	fsr2l,c
 32472  01447A  50E2               	movf	fsr1h,w,c
 32473  01447C  6EDA               	movwf	fsr2h,c
 32474  01447E  0EFF               	movlw	255
 32475  014480  22DA               	addwfc	fsr2h,f,c
 32476                           
 32477                           ;stkvar	_grs @ sp[(-13)+4]
 32478  014482  0EFA               	movlw	250
 32479  014484  24E1               	addwf	fsr1l,w,c
 32480  014486  6EE9               	movwf	fsr0l,c
 32481  014488  0EFF               	movlw	255
 32482  01448A  20E2               	addwfc	fsr1h,w,c
 32483  01448C  6EEA               	movwf	fsr0h,c
 32484  01448E  50EF               	movf	indf0,w,c
 32485  014490  26DE               	addwf	postinc2,f,c
 32486  014492  0E00               	movlw	0
 32487  014494  22DE               	addwfc	postinc2,f,c
 32488  014496  22DE               	addwfc	postinc2,f,c
 32489  014498  22DE               	addwfc	postinc2,f,c
 32490                           
 32491                           ;stkvar	_grs @ sp[(-13)+4]
 32492  01449A  50E1               	movf	fsr1l,w,c
 32493  01449C  0FF7               	addlw	-9
 32494  01449E  6ED9               	movwf	fsr2l,c
 32495  0144A0  50E2               	movf	fsr1h,w,c
 32496  0144A2  6EDA               	movwf	fsr2h,c
 32497  0144A4  0EFF               	movlw	255
 32498  0144A6  22DA               	addwfc	fsr2h,f,c
 32499  0144A8  0E08               	movlw	8
 32500  0144AA                     u7345:
 32501  0144AA  90D8               	bcf	status,0,c
 32502  0144AC  36DE               	rlcf	postinc2,f,c
 32503  0144AE  36DE               	rlcf	postinc2,f,c
 32504  0144B0  36DE               	rlcf	postinc2,f,c
 32505  0144B2  36DD               	rlcf	postdec2,f,c
 32506  0144B4  52DD               	movf	postdec2,f,c
 32507  0144B6  52DD               	movf	postdec2,f,c
 32508  0144B8  2EE8               	decfsz	wreg,f,c
 32509  0144BA  D7F7               	goto	u7345
 32510  0144BC  0E82               	movlw	130
 32511  0144BE  6E0B               	movwf	(btemp+10)^0,c
 32512  0144C0  0EFF               	movlw	255
 32513  0144C2  6E0C               	movwf	(btemp+11)^0,c
 32514                           
 32515                           ;stkvar	_bexp @ sp[(-13)+10]
 32516  0144C4  0EFD               	movlw	-3
 32517  0144C6  50E3               	movf	plusw1,w,c
 32518  0144C8  6E09               	movwf	(btemp+8)^0,c
 32519  0144CA  6A0A               	clrf	(btemp+9)^0,c
 32520                           
 32521                           ;stkvar	_aexp @ sp[(-13)+11]
 32522  0144CC  0EFE               	movlw	-2
 32523  0144CE  50E3               	movf	plusw1,w,c
 32524  0144D0  2609               	addwf	(btemp+8)^0,f,c
 32525  0144D2  0E00               	movlw	0
 32526  0144D4  220A               	addwfc	(btemp+9)^0,f,c
 32527  0144D6  500B               	movf	(btemp+10)^0,w,c
 32528  0144D8  2609               	addwf	(btemp+8)^0,f,c
 32529  0144DA  500C               	movf	(btemp+11)^0,w,c
 32530  0144DC  220A               	addwfc	(btemp+9)^0,f,c
 32531                           
 32532                           ;stkvar	_temp @ sp[(-13)+8]
 32533  0144DE  0EFB               	movlw	-5
 32534  0144E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 32535  0144E6  0EFC               	movlw	-4
 32536  0144E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32537  0144EE  D021               	goto	l9182
 32538  0144F0                     l9172:
 32539                           
 32540                           ;stkvar	_prod @ sp[(-13)+0]
 32541  0144F0  90D8               	bcf	status,0,c
 32542  0144F2  0EF3               	movlw	-13
 32543  0144F4  36E3               	rlcf	plusw1,f,c
 32544  0144F6  0EF4               	movlw	-12
 32545  0144F8  36E3               	rlcf	plusw1,f,c
 32546  0144FA  0EF5               	movlw	-11
 32547  0144FC  36E3               	rlcf	plusw1,f,c
 32548  0144FE  0EF6               	movlw	-10
 32549  014500  36E3               	rlcf	plusw1,f,c
 32550                           
 32551                           ;stkvar	_grs @ sp[(-13)+4]
 32552  014502  0EFA               	movlw	-6
 32553  014504  AEE3               	btfss	plusw1,7,c
 32554  014506  D002               	goto	l9178
 32555                           
 32556                           ;stkvar	_prod @ sp[(-13)+0]
 32557  014508  0EF3               	movlw	-13
 32558  01450A  80E3               	bsf	plusw1,0,c
 32559  01450C                     l9178:
 32560                           
 32561                           ;stkvar	_grs @ sp[(-13)+4]
 32562  01450C  90D8               	bcf	status,0,c
 32563  01450E  0EF7               	movlw	-9
 32564  014510  36E3               	rlcf	plusw1,f,c
 32565  014512  0EF8               	movlw	-8
 32566  014514  36E3               	rlcf	plusw1,f,c
 32567  014516  0EF9               	movlw	-7
 32568  014518  36E3               	rlcf	plusw1,f,c
 32569  01451A  0EFA               	movlw	-6
 32570  01451C  36E3               	rlcf	plusw1,f,c
 32571                           
 32572                           ;stkvar	_temp @ sp[(-13)+8]
 32573  01451E  50E1               	movf	fsr1l,w,c
 32574  014520  0FFB               	addlw	-5
 32575  014522  6ED9               	movwf	fsr2l,c
 32576  014524  50E2               	movf	fsr1h,w,c
 32577  014526  6EDA               	movwf	fsr2h,c
 32578  014528  0EFF               	movlw	255
 32579  01452A  22DA               	addwfc	fsr2h,f,c
 32580  01452C  06DE               	decf	postinc2,f,c
 32581  01452E  0E00               	movlw	0
 32582  014530  5ADD               	subwfb	postdec2,f,c
 32583  014532                     l9182:
 32584                           
 32585                           ;stkvar	_prod @ sp[(-13)+0]
 32586  014532  0EF5               	movlw	-11
 32587  014534  AEE3               	btfss	plusw1,7,c
 32588  014536  D7DC               	goto	l9172
 32589                           
 32590                           ;stkvar	_aexp @ sp[(-13)+11]
 32591  014538  0EFE               	movlw	-2
 32592  01453A  6AE3               	clrf	plusw1,c
 32593                           
 32594                           ;stkvar	_grs @ sp[(-13)+4]
 32595  01453C  0EFA               	movlw	-6
 32596  01453E  AEE3               	btfss	plusw1,7,c
 32597  014540  D020               	goto	l9196
 32598                           
 32599                           ;stkvar	_grs @ sp[(-13)+4]
 32600  014542  50E1               	movf	fsr1l,w,c
 32601  014544  0FF7               	addlw	-9
 32602  014546  6ED9               	movwf	fsr2l,c
 32603  014548  50E2               	movf	fsr1h,w,c
 32604  01454A  6EDA               	movwf	fsr2h,c
 32605  01454C  0EFF               	movlw	255
 32606  01454E  22DA               	addwfc	fsr2h,f,c
 32607  014550  0EFF               	movlw	255
 32608  014552  14DE               	andwf	postinc2,w,c
 32609  014554  6E09               	movwf	(btemp+8)^0,c
 32610  014556  0EFF               	movlw	255
 32611  014558  14DE               	andwf	postinc2,w,c
 32612  01455A  6E0A               	movwf	(btemp+9)^0,c
 32613  01455C  0EFF               	movlw	255
 32614  01455E  14DE               	andwf	postinc2,w,c
 32615  014560  6E0B               	movwf	(btemp+10)^0,c
 32616  014562  0E7F               	movlw	127
 32617  014564  14DE               	andwf	postinc2,w,c
 32618  014566  6E0C               	movwf	(btemp+11)^0,c
 32619  014568  5009               	movf	(btemp+8)^0,w,c
 32620  01456A  100A               	iorwf	(btemp+9)^0,w,c
 32621  01456C  100B               	iorwf	(btemp+10)^0,w,c
 32622  01456E  100C               	iorwf	(btemp+11)^0,w,c
 32623  014570  B4D8               	btfsc	status,2,c
 32624  014572  D004               	goto	l9192
 32625  014574                     u7380:
 32626                           
 32627                           ;stkvar	_aexp @ sp[(-13)+11]
 32628  014574  0EFE               	movlw	-2
 32629  014576  6AE3               	clrf	plusw1,c
 32630  014578  2AE3               	incf	plusw1,f,c
 32631  01457A  D003               	goto	l9196
 32632  01457C                     l9192:
 32633                           
 32634                           ;stkvar	_prod @ sp[(-13)+0]
 32635  01457C  0EF3               	movlw	-13
 32636  01457E  B0E3               	btfsc	plusw1,0,c
 32637  014580  D7F9               	goto	u7380
 32638  014582                     l9196:
 32639                           
 32640                           ;stkvar	_aexp @ sp[(-13)+11]
 32641  014582  0EFE               	movlw	-2
 32642  014584  50E3               	movf	plusw1,w,c
 32643  014586  B4D8               	btfsc	status,2,c
 32644  014588  D036               	goto	l9206
 32645                           
 32646                           ;stkvar	_prod @ sp[(-13)+0]
 32647  01458A  50E1               	movf	fsr1l,w,c
 32648  01458C  0FF3               	addlw	-13
 32649  01458E  6ED9               	movwf	fsr2l,c
 32650  014590  50E2               	movf	fsr1h,w,c
 32651  014592  6EDA               	movwf	fsr2h,c
 32652  014594  0EFF               	movlw	255
 32653  014596  22DA               	addwfc	fsr2h,f,c
 32654  014598  2ADE               	incf	postinc2,f,c
 32655  01459A  0E00               	movlw	0
 32656  01459C  22DE               	addwfc	postinc2,f,c
 32657  01459E  22DE               	addwfc	postinc2,f,c
 32658  0145A0  22DE               	addwfc	postinc2,f,c
 32659                           
 32660                           ;stkvar	_prod @ sp[(-13)+0]
 32661  0145A2  0EF6               	movlw	-10
 32662  0145A4  A0E3               	btfss	plusw1,0,c
 32663  0145A6  D027               	goto	l9206
 32664  0145A8  0E01               	movlw	1
 32665  0145AA  6E0C               	movwf	(btemp+11)^0,c
 32666                           
 32667                           ;stkvar	_prod @ sp[(-13)+0]
 32668  0145AC  50E1               	movf	fsr1l,w,c
 32669  0145AE  0FF3               	addlw	-13
 32670  0145B0  6ED9               	movwf	fsr2l,c
 32671  0145B2  50E2               	movf	fsr1h,w,c
 32672  0145B4  6EDA               	movwf	fsr2h,c
 32673  0145B6  0EFF               	movlw	255
 32674  0145B8  22DA               	addwfc	fsr2h,f,c
 32675  0145BA  280C               	incf	(btemp+11)^0,w,c
 32676  0145BC  52DE               	movf	postinc2,f,c
 32677  0145BE  D008               	goto	u7420
 32678  0145C0                     u7425:
 32679  0145C0  52DE               	movf	postinc2,f,c
 32680  0145C2  90D8               	bcf	status,0,c
 32681  0145C4  BEDC               	btfsc	preinc2,7,c
 32682  0145C6  80D8               	bsf	status,0,c
 32683  0145C8  32DD               	rrcf	postdec2,f,c
 32684  0145CA  32DD               	rrcf	postdec2,f,c
 32685  0145CC  32DD               	rrcf	postdec2,f,c
 32686  0145CE  32DE               	rrcf	postinc2,f,c
 32687  0145D0                     u7420:
 32688  0145D0  2EE8               	decfsz	wreg,f,c
 32689  0145D2  D7F6               	goto	u7425
 32690                           
 32691                           ;stkvar	_temp @ sp[(-13)+8]
 32692  0145D4  0EFB               	movlw	-5
 32693  0145D6  50E3               	movf	plusw1,w,c
 32694  0145D8  0F01               	addlw	1
 32695  0145DA  6E01               	movwf	btemp^0,c
 32696  0145DC  0EFB               	movlw	-5
 32697  0145DE  0060  F007  FFE3   	movff	btemp,plusw1
 32698  0145E4  6A01               	clrf	btemp^0,c
 32699  0145E6  0EFC               	movlw	-4
 32700  0145E8  50E3               	movf	plusw1,w,c
 32701  0145EA  2001               	addwfc	btemp^0,w,c
 32702  0145EC  6E01               	movwf	btemp^0,c
 32703  0145EE  0EFC               	movlw	-4
 32704  0145F0  0060  F007  FFE3   	movff	btemp,plusw1
 32705  0145F6                     l9206:
 32706                           
 32707                           ;stkvar	_temp @ sp[(-13)+8]
 32708  0145F6  0EFC               	movlw	-4
 32709  0145F8  BEE3               	btfsc	plusw1,7,c
 32710  0145FA  D020               	goto	l9210
 32711  0145FC  0EFC               	movlw	-4
 32712  0145FE  50E3               	movf	plusw1,w,c
 32713  014600  E104               	bnz	u7430
 32714  014602  0EFB               	movlw	-5
 32715  014604  28E3               	incf	plusw1,w,c
 32716  014606  A0D8               	btfss	status,0,c
 32717  014608  D019               	goto	l9210
 32718  01460A                     u7430:
 32719  01460A  0E00               	movlw	0
 32720  01460C  6E09               	movwf	(btemp+8)^0,c
 32721  01460E  0E00               	movlw	0
 32722  014610  6E0A               	movwf	(btemp+9)^0,c
 32723  014612  0E80               	movlw	128
 32724  014614  6E0B               	movwf	(btemp+10)^0,c
 32725  014616  0E7F               	movlw	127
 32726  014618  6E0C               	movwf	(btemp+11)^0,c
 32727                           
 32728                           ;stkvar	_prod @ sp[(-13)+0]
 32729  01461A  0EF3               	movlw	-13
 32730  01461C  0060  F027  FFE3   	movff	btemp+8,plusw1
 32731  014622  0EF4               	movlw	-12
 32732  014624  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32733  01462A  0EF5               	movlw	-11
 32734  01462C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32735  014632  0EF6               	movlw	-10
 32736  014634  0060  F033  FFE3   	movff	btemp+11,plusw1
 32737  01463A  D044               	goto	l9226
 32738  01463C                     l9210:
 32739                           
 32740                           ;stkvar	_temp @ sp[(-13)+8]
 32741  01463C  0EFC               	movlw	-4
 32742  01463E  BEE3               	btfsc	plusw1,7,c
 32743  014640  D007               	goto	u7440
 32744  014642  0EFC               	movlw	-4
 32745  014644  50E3               	movf	plusw1,w,c
 32746  014646  E10F               	bnz	l9216
 32747  014648  0EFB               	movlw	-5
 32748  01464A  04E3               	decf	plusw1,w,c
 32749  01464C  B0D8               	btfsc	status,0,c
 32750  01464E  D00B               	goto	l9216
 32751  014650                     u7440:
 32752                           
 32753                           ;stkvar	_prod @ sp[(-13)+0]
 32754  014650  0EF3               	movlw	-13
 32755  014652  6AE3               	clrf	plusw1,c
 32756  014654  0EF4               	movlw	-12
 32757  014656  6AE3               	clrf	plusw1,c
 32758  014658  0EF5               	movlw	-11
 32759  01465A  6AE3               	clrf	plusw1,c
 32760  01465C  0EF6               	movlw	-10
 32761  01465E  6AE3               	clrf	plusw1,c
 32762                           
 32763                           ;stkvar	_sign @ sp[(-13)+12]
 32764  014660  0EFF               	movlw	-1
 32765  014662  6AE3               	clrf	plusw1,c
 32766  014664  D02F               	goto	l9226
 32767  014666                     l9216:
 32768                           
 32769                           ;stkvar	_temp @ sp[(-13)+8]
 32770                           ;stkvar	_bexp @ sp[(-13)+10]
 32771  014666  0EFB               	movlw	-5
 32772  014668  006F FF8C  F001    	movff	plusw1,btemp
 32773  01466E  0EFD               	movlw	-3
 32774  014670  0060  F007  FFE3   	movff	btemp,plusw1
 32775                           
 32776                           ;stkvar	_prod @ sp[(-13)+0]
 32777  014676  50E1               	movf	fsr1l,w,c
 32778  014678  0FF3               	addlw	-13
 32779  01467A  6ED9               	movwf	fsr2l,c
 32780  01467C  50E2               	movf	fsr1h,w,c
 32781  01467E  6EDA               	movwf	fsr2h,c
 32782  014680  0EFF               	movlw	255
 32783  014682  22DA               	addwfc	fsr2h,f,c
 32784  014684  0EFF               	movlw	255
 32785  014686  16DE               	andwf	postinc2,f,c
 32786  014688  0EFF               	movlw	255
 32787  01468A  16DE               	andwf	postinc2,f,c
 32788  01468C  0E7F               	movlw	127
 32789  01468E  16DE               	andwf	postinc2,f,c
 32790  014690  0E00               	movlw	0
 32791  014692  16DE               	andwf	postinc2,f,c
 32792                           
 32793                           ;stkvar	_bexp @ sp[(-13)+10]
 32794  014694  0EFD               	movlw	-3
 32795  014696  A0E3               	btfss	plusw1,0,c
 32796  014698  D008               	goto	l9224
 32797                           
 32798                           ;stkvar	_prod @ sp[(-13)+0]
 32799  01469A  0EF5               	movlw	245
 32800  01469C  24E1               	addwf	fsr1l,w,c
 32801  01469E  6ED9               	movwf	fsr2l,c
 32802  0146A0  0EFF               	movlw	255
 32803  0146A2  20E2               	addwfc	fsr1h,w,c
 32804  0146A4  6EDA               	movwf	fsr2h,c
 32805  0146A6  0E00               	movlw	0
 32806  0146A8  8EDB               	bsf	plusw2,7,c
 32807  0146AA                     l9224:
 32808                           
 32809                           ;stkvar	_prod @ sp[(-13)+0]
 32810  0146AA  0EF6               	movlw	246
 32811  0146AC  24E1               	addwf	fsr1l,w,c
 32812  0146AE  6ED9               	movwf	fsr2l,c
 32813  0146B0  0EFF               	movlw	255
 32814  0146B2  20E2               	addwfc	fsr1h,w,c
 32815  0146B4  6EDA               	movwf	fsr2h,c
 32816                           
 32817                           ;stkvar	_bexp @ sp[(-13)+10]
 32818  0146B6  0EFD               	movlw	-3
 32819  0146B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 32820  0146BE  90D8               	bcf	status,0,c
 32821  0146C0  300C               	rrcf	(btemp+11)^0,w,c
 32822  0146C2  6EDF               	movwf	indf2,c
 32823  0146C4                     l9226:
 32824                           
 32825                           ;stkvar	_sign @ sp[(-13)+12]
 32826  0146C4  0EFF               	movlw	-1
 32827  0146C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 32828                           
 32829                           ;stkvar	_prod @ sp[(-13)+0]
 32830  0146CC  0EF6               	movlw	246
 32831  0146CE  24E1               	addwf	fsr1l,w,c
 32832  0146D0  6ED9               	movwf	fsr2l,c
 32833  0146D2  0EFF               	movlw	255
 32834  0146D4  20E2               	addwfc	fsr1h,w,c
 32835  0146D6  6EDA               	movwf	fsr2h,c
 32836  0146D8  500C               	movf	(btemp+11)^0,w,c
 32837  0146DA  12DF               	iorwf	indf2,f,c
 32838                           
 32839                           ;stkvar	_prod @ sp[(-13)+0]
 32840  0146DC  0EF3               	movlw	-13
 32841  0146DE  006F FF8C  F001    	movff	plusw1,btemp
 32842  0146E4  0EF4               	movlw	-12
 32843  0146E6  006F FF8C  F002    	movff	plusw1,btemp+1
 32844  0146EC  0EF5               	movlw	-11
 32845  0146EE  006F FF8C  F003    	movff	plusw1,btemp+2
 32846  0146F4  0EF6               	movlw	-10
 32847  0146F6  006F FF8C  F004    	movff	plusw1,btemp+3
 32848  0146FC                     l3277:
 32849                           
 32850                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 32851  0146FC  0EEB               	movlw	235
 32852  0146FE  26E1               	addwf	fsr1l,f,c
 32853  014700  0EFF               	movlw	255
 32854  014702  22E2               	addwfc	fsr1h,f,c
 32855  014704  0012               	return		;funcret
 32856  014706                     __end_of___flmul:
 32857                           	opt callstack 0
 32858                           
 32859 ;; *************** function _SYSTEM_Initialize *****************
 32860 ;; Defined at:
 32861 ;;		line 50 in file "mcc_generated_files/mcc.c"
 32862 ;; Parameters:    Size  Location     Type
 32863 ;;		None
 32864 ;; Auto vars:     Size  Location     Type
 32865 ;;		None
 32866 ;; Return value:  Size  Location     Type
 32867 ;;                  1  [STACK] void 
 32868 ;; Registers used:
 32869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32870 ;; Tracked objects:
 32871 ;;		On entry : 0/0
 32872 ;;		On exit  : 3F/3C
 32873 ;;		Unchanged: 0/0
 32874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32879 ;;Total ram usage:        0 bytes
 32880 ;; Hardware stack levels used:    1
 32881 ;; Hardware stack levels required when called:   17
 32882 ;; This function calls:
 32883 ;;		_ADCC_Initialize
 32884 ;;		_CLKREF_Initialize
 32885 ;;		_CRC_Initialize
 32886 ;;		_DMA1_Initialize
 32887 ;;		_DMA2_Initialize
 32888 ;;		_EXT_INT_Initialize
 32889 ;;		_FVR_Initialize
 32890 ;;		_INTERRUPT_Initialize
 32891 ;;		_OSCILLATOR_Initialize
 32892 ;;		_PIN_MANAGER_Initialize
 32893 ;;		_PMD_Initialize
 32894 ;;		_PWM8_Initialize
 32895 ;;		_SPI1_Initialize
 32896 ;;		_TMR2_Initialize
 32897 ;;		_TMR3_Initialize
 32898 ;;		_TMR5_Initialize
 32899 ;;		_TMR6_Initialize
 32900 ;;		_UART1_Initialize
 32901 ;;		_UART2_Initialize
 32902 ;; This function is called by:
 32903 ;;		_main
 32904 ;; This function uses a reentrant model
 32905 ;;
 32906                           
 32907                           	psect	text127
 32908  01C514                     __ptext127:
 32909                           	opt callstack 0
 32910  01C514                     _SYSTEM_Initialize:
 32911                           	opt callstack 13
 32912                           
 32913                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 32914                           
 32915                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32916                           ;incstack = 0
 32917  01C514  ECBA  F0E0         	call	_INTERRUPT_Initialize	;wreg free
 32918                           
 32919                           ; BSR set to: 57
 32920                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 32921  01C518  EC47  F0E9         	call	_PMD_Initialize	;wreg free
 32922                           
 32923                           ; BSR set to: 57
 32924                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 32925  01C51C  ECE1  F0DC         	call	_PIN_MANAGER_Initialize	;wreg free
 32926                           
 32927                           ; BSR set to: 58
 32928                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 32929  01C520  EC3C  F0E9         	call	_OSCILLATOR_Initialize	;wreg free
 32930                           
 32931                           ; BSR set to: 57
 32932                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 32933  01C524  ECDB  F0E9         	call	_FVR_Initialize	;wreg free
 32934                           
 32935                           ; BSR set to: 62
 32936                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 32937  01C528  EC2A  F0DD         	call	_CRC_Initialize	;wreg free
 32938                           
 32939                           ; BSR set to: 0
 32940                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 32941  01C52C  ECE8  F0DF         	call	_ADCC_Initialize	;wreg free
 32942                           
 32943                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 32944  01C530  EC31  F0E9         	call	_PWM8_Initialize	;wreg free
 32945                           
 32946                           ; BSR set to: 63
 32947                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 32948  01C534  EC0F  F0E9         	call	_TMR2_Initialize	;wreg free
 32949                           
 32950                           ; BSR set to: 57
 32951                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 32952  01C538  ECB0  F0E5         	call	_EXT_INT_Initialize	;wreg free
 32953                           
 32954                           ; BSR set to: 57
 32955                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 32956  01C53C  EC9C  F0E6         	call	_TMR6_Initialize	;wreg free
 32957                           
 32958                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 32959  01C540  EC69  F0E3         	call	_TMR3_Initialize	;wreg free
 32960                           
 32961                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 32962  01C544  EC45  F0E3         	call	_TMR5_Initialize	;wreg free
 32963                           
 32964                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 32965  01C548  EC21  F0E3         	call	_UART1_Initialize	;wreg free
 32966                           
 32967                           ; BSR set to: 57
 32968                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 32969  01C54C  EC81  F0E1         	call	_UART2_Initialize	;wreg free
 32970                           
 32971                           ; BSR set to: 57
 32972                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 32973  01C550  EC26  F0E9         	call	_SPI1_Initialize	;wreg free
 32974                           
 32975                           ; BSR set to: 61
 32976                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 32977  01C554  EC0B  F0E2         	call	_DMA2_Initialize	;wreg free
 32978                           
 32979                           ; BSR set to: 59
 32980                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 32981  01C558  ECB3  F0DF         	call	_DMA1_Initialize	;wreg free
 32982                           
 32983                           ; BSR set to: 59
 32984                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 32985  01C55C  ECAF  F0E9         	call	_CLKREF_Initialize	;wreg free
 32986                           
 32987                           ; BSR set to: 60
 32988                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32989  01C560  0012               	return		;funcret
 32990  01C562                     __end_of_SYSTEM_Initialize:
 32991                           	opt callstack 0
 32992                           
 32993 ;; *************** function _UART2_Initialize *****************
 32994 ;; Defined at:
 32995 ;;		line 78 in file "mcc_generated_files/uart2.c"
 32996 ;; Parameters:    Size  Location     Type
 32997 ;;		None
 32998 ;; Auto vars:     Size  Location     Type
 32999 ;;		None
 33000 ;; Return value:  Size  Location     Type
 33001 ;;                  1  [STACK] void 
 33002 ;; Registers used:
 33003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33004 ;; Tracked objects:
 33005 ;;		On entry : 3F/39
 33006 ;;		On exit  : 3F/39
 33007 ;;		Unchanged: 0/0
 33008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33013 ;;Total ram usage:        0 bytes
 33014 ;; Hardware stack levels used:    1
 33015 ;; Hardware stack levels required when called:   16
 33016 ;; This function calls:
 33017 ;;		_UART2_SetRxInterruptHandler
 33018 ;;		_UART2_SetTxInterruptHandler
 33019 ;; This function is called by:
 33020 ;;		_SYSTEM_Initialize
 33021 ;; This function uses a reentrant model
 33022 ;;
 33023                           
 33024                           	psect	text128
 33025  01C302                     __ptext128:
 33026                           	opt callstack 0
 33027  01C302                     _UART2_Initialize:
 33028                           	opt callstack 13
 33029                           
 33030                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 33031                           
 33032                           ; BSR set to: 60
 33033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33034                           ;incstack = 0
 33035  01C302  0139               	movlb	57	; () banked
 33036  01C304  9596               	bcf	150,2,b	;volatile
 33037                           
 33038                           ; BSR set to: 57
 33039                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 33040  01C306  0E1A               	movlw	low _UART2_Receive_ISR
 33041  01C308  6EE6               	movwf	postinc1,c
 33042  01C30A  0ED1               	movlw	high _UART2_Receive_ISR
 33043  01C30C  6EE6               	movwf	postinc1,c
 33044  01C30E  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 33045  01C310  6EE6               	movwf	postinc1,c
 33046  01C312  ECED  F0E6         	call	_UART2_SetRxInterruptHandler	;wreg free
 33047                           
 33048                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 33049  01C316  0139               	movlb	57	; () banked
 33050  01C318  9796               	bcf	150,3,b	;volatile
 33051                           
 33052                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 33053  01C31A  0E0C               	movlw	low _UART2_Transmit_ISR
 33054  01C31C  6EE6               	movwf	postinc1,c
 33055  01C31E  0ECD               	movlw	high _UART2_Transmit_ISR
 33056  01C320  6EE6               	movwf	postinc1,c
 33057  01C322  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 33058  01C324  6EE6               	movwf	postinc1,c
 33059  01C326  ECD9  F0E6         	call	_UART2_SetTxInterruptHandler	;wreg free
 33060                           
 33061                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 33062  01C32A  013D               	movlb	61	; () banked
 33063  01C32C  6BD4               	clrf	212,b	;volatile
 33064                           
 33065                           ; BSR set to: 61
 33066                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 33067  01C32E  6BD6               	clrf	214,b	;volatile
 33068                           
 33069                           ; BSR set to: 61
 33070                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 33071  01C330  6BD8               	clrf	216,b	;volatile
 33072                           
 33073                           ; BSR set to: 61
 33074                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 33075  01C332  0EB0               	movlw	176
 33076  01C334  6FDA               	movwf	218,b	;volatile
 33077                           
 33078                           ; BSR set to: 61
 33079                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 33080  01C336  0E80               	movlw	128
 33081  01C338  6FDB               	movwf	219,b	;volatile
 33082                           
 33083                           ; BSR set to: 61
 33084                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 33085  01C33A  6BDC               	clrf	220,b	;volatile
 33086                           
 33087                           ; BSR set to: 61
 33088                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 33089  01C33C  0E82               	movlw	130
 33090  01C33E  6FDD               	movwf	221,b	;volatile
 33091                           
 33092                           ; BSR set to: 61
 33093                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 33094  01C340  0E06               	movlw	6
 33095  01C342  6FDE               	movwf	222,b	;volatile
 33096                           
 33097                           ; BSR set to: 61
 33098                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 33099  01C344  6BDF               	clrf	223,b	;volatile
 33100                           
 33101                           ; BSR set to: 61
 33102                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 33103  01C346  6BE0               	clrf	224,b	;volatile
 33104                           
 33105                           ; BSR set to: 61
 33106                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 33107  01C348  6BE1               	clrf	225,b	;volatile
 33108                           
 33109                           ; BSR set to: 61
 33110                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 33111  01C34A  6BE2               	clrf	226,b	;volatile
 33112                           
 33113                           ; BSR set to: 61
 33114                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 33115  01C34C  0100               	movlb	0	; () banked
 33116  01C34E  6BA8               	clrf	_uart2TxHead& (0+255),b	;volatile
 33117                           
 33118                           ; BSR set to: 0
 33119                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 33120  01C350  6A46               	clrf	_uart2TxTail^0,c	;volatile
 33121                           
 33122                           ; BSR set to: 0
 33123                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 33124  01C352  0E40               	movlw	64
 33125  01C354  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 33126                           
 33127                           ; BSR set to: 0
 33128                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 33129  01C356  6A44               	clrf	_uart2RxHead^0,c	;volatile
 33130                           
 33131                           ; BSR set to: 0
 33132                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 33133  01C358  6BA7               	clrf	_uart2RxTail& (0+255),b	;volatile
 33134                           
 33135                           ; BSR set to: 0
 33136                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 33137  01C35A  6BA6               	clrf	_uart2RxCount& (0+255),b	;volatile
 33138                           
 33139                           ; BSR set to: 0
 33140                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 33141  01C35C  0139               	movlb	57	; () banked
 33142  01C35E  8596               	bsf	150,2,b	;volatile
 33143                           
 33144                           ; BSR set to: 57
 33145                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 33146  01C360  0012               	return		;funcret
 33147  01C362                     __end_of_UART2_Initialize:
 33148                           	opt callstack 0
 33149                           
 33150 ;; *************** function _UART2_SetTxInterruptHandler *****************
 33151 ;; Defined at:
 33152 ;;		line 252 in file "mcc_generated_files/uart2.c"
 33153 ;; Parameters:    Size  Location     Type
 33154 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33155 ;;		 -> UART2_Transmit_ISR(1), 
 33156 ;; Auto vars:     Size  Location     Type
 33157 ;;		None
 33158 ;; Return value:  Size  Location     Type
 33159 ;;                  1  [STACK] void 
 33160 ;; Registers used:
 33161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33162 ;; Tracked objects:
 33163 ;;		On entry : 3F/39
 33164 ;;		On exit  : 0/0
 33165 ;;		Unchanged: 0/0
 33166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33171 ;;Total ram usage:        0 bytes
 33172 ;; Hardware stack levels used:    1
 33173 ;; Hardware stack levels required when called:   15
 33174 ;; This function calls:
 33175 ;;		Nothing
 33176 ;; This function is called by:
 33177 ;;		_UART2_Initialize
 33178 ;; This function uses a reentrant model
 33179 ;;
 33180                           
 33181                           	psect	text129
 33182  01CDB2                     __ptext129:
 33183                           	opt callstack 0
 33184  01CDB2                     _UART2_SetTxInterruptHandler:
 33185                           	opt callstack 13
 33186                           
 33187                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 33188                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33189                           
 33190                           ; BSR set to: 57
 33191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33192                           ;incstack = 0
 33193  01CDB2  50E1               	movf	fsr1l,w,c
 33194  01CDB4  0FFD               	addlw	-3
 33195  01CDB6  6ED9               	movwf	fsr2l,c
 33196  01CDB8  50E2               	movf	fsr1h,w,c
 33197  01CDBA  6EDA               	movwf	fsr2h,c
 33198  01CDBC  0EFF               	movlw	255
 33199  01CDBE  22DA               	addwfc	fsr2h,f,c
 33200  01CDC0  006F FF78  F08A    	movff	postinc2,_UART2_TxInterruptHandler
 33201  01CDC6  006F FF78  F08B    	movff	postinc2,_UART2_TxInterruptHandler+1
 33202  01CDCC  006F FF74  F08C    	movff	postdec2,_UART2_TxInterruptHandler+2
 33203                           
 33204                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33205  01CDD2  52E5               	movf	postdec1,f,c
 33206  01CDD4  52E5               	movf	postdec1,f,c
 33207  01CDD6  52E5               	movf	postdec1,f,c
 33208  01CDD8  0012               	return		;funcret
 33209  01CDDA                     __end_of_UART2_SetTxInterruptHandler:
 33210                           	opt callstack 0
 33211                           
 33212 ;; *************** function _UART2_SetRxInterruptHandler *****************
 33213 ;; Defined at:
 33214 ;;		line 248 in file "mcc_generated_files/uart2.c"
 33215 ;; Parameters:    Size  Location     Type
 33216 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33217 ;;		 -> UART2_Receive_ISR(1), 
 33218 ;; Auto vars:     Size  Location     Type
 33219 ;;		None
 33220 ;; Return value:  Size  Location     Type
 33221 ;;                  1  [STACK] void 
 33222 ;; Registers used:
 33223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33224 ;; Tracked objects:
 33225 ;;		On entry : 3F/39
 33226 ;;		On exit  : 0/0
 33227 ;;		Unchanged: 0/0
 33228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33233 ;;Total ram usage:        0 bytes
 33234 ;; Hardware stack levels used:    1
 33235 ;; Hardware stack levels required when called:   15
 33236 ;; This function calls:
 33237 ;;		Nothing
 33238 ;; This function is called by:
 33239 ;;		_UART2_Initialize
 33240 ;; This function uses a reentrant model
 33241 ;;
 33242                           
 33243                           	psect	text130
 33244  01CDDA                     __ptext130:
 33245                           	opt callstack 0
 33246  01CDDA                     _UART2_SetRxInterruptHandler:
 33247                           	opt callstack 13
 33248                           
 33249                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 33250                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33251                           
 33252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33253                           ;incstack = 0
 33254  01CDDA  50E1               	movf	fsr1l,w,c
 33255  01CDDC  0FFD               	addlw	-3
 33256  01CDDE  6ED9               	movwf	fsr2l,c
 33257  01CDE0  50E2               	movf	fsr1h,w,c
 33258  01CDE2  6EDA               	movwf	fsr2h,c
 33259  01CDE4  0EFF               	movlw	255
 33260  01CDE6  22DA               	addwfc	fsr2h,f,c
 33261  01CDE8  006F FF78  F08D    	movff	postinc2,_UART2_RxInterruptHandler
 33262  01CDEE  006F FF78  F08E    	movff	postinc2,_UART2_RxInterruptHandler+1
 33263  01CDF4  006F FF74  F08F    	movff	postdec2,_UART2_RxInterruptHandler+2
 33264                           
 33265                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33266  01CDFA  52E5               	movf	postdec1,f,c
 33267  01CDFC  52E5               	movf	postdec1,f,c
 33268  01CDFE  52E5               	movf	postdec1,f,c
 33269  01CE00  0012               	return		;funcret
 33270  01CE02                     __end_of_UART2_SetRxInterruptHandler:
 33271                           	opt callstack 0
 33272                           
 33273 ;; *************** function _UART1_Initialize *****************
 33274 ;; Defined at:
 33275 ;;		line 75 in file "mcc_generated_files/uart1.c"
 33276 ;; Parameters:    Size  Location     Type
 33277 ;;		None
 33278 ;; Auto vars:     Size  Location     Type
 33279 ;;		None
 33280 ;; Return value:  Size  Location     Type
 33281 ;;                  1  [STACK] void 
 33282 ;; Registers used:
 33283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33284 ;; Tracked objects:
 33285 ;;		On entry : 0/39
 33286 ;;		On exit  : 3F/39
 33287 ;;		Unchanged: 0/0
 33288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33293 ;;Total ram usage:        0 bytes
 33294 ;; Hardware stack levels used:    1
 33295 ;; Hardware stack levels required when called:   16
 33296 ;; This function calls:
 33297 ;;		_UART1_SetRxInterruptHandler
 33298 ;; This function is called by:
 33299 ;;		_SYSTEM_Initialize
 33300 ;; This function uses a reentrant model
 33301 ;;
 33302                           
 33303                           	psect	text131
 33304  01C642                     __ptext131:
 33305                           	opt callstack 0
 33306  01C642                     _UART1_Initialize:
 33307                           	opt callstack 13
 33308                           
 33309                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 33310                           
 33311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33312                           ;incstack = 0
 33313  01C642  0139               	movlb	57	; () banked
 33314  01C644  9793               	bcf	147,3,b	;volatile
 33315                           
 33316                           ; BSR set to: 57
 33317                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 33318  01C646  0ED8               	movlw	low _UART1_Receive_ISR
 33319  01C648  6EE6               	movwf	postinc1,c
 33320  01C64A  0ED0               	movlw	high _UART1_Receive_ISR
 33321  01C64C  6EE6               	movwf	postinc1,c
 33322  01C64E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 33323  01C650  6EE6               	movwf	postinc1,c
 33324  01C652  EC01  F0E7         	call	_UART1_SetRxInterruptHandler	;wreg free
 33325                           
 33326                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 33327  01C656  013D               	movlb	61	; () banked
 33328  01C658  6BEC               	clrf	236,b	;volatile
 33329                           
 33330                           ; BSR set to: 61
 33331                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 33332  01C65A  6BED               	clrf	237,b	;volatile
 33333                           
 33334                           ; BSR set to: 61
 33335                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 33336  01C65C  6BEE               	clrf	238,b	;volatile
 33337                           
 33338                           ; BSR set to: 61
 33339                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 33340  01C65E  6BEF               	clrf	239,b	;volatile
 33341                           
 33342                           ; BSR set to: 61
 33343                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 33344  01C660  6BF0               	clrf	240,b	;volatile
 33345                           
 33346                           ; BSR set to: 61
 33347                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 33348  01C662  6BF1               	clrf	241,b	;volatile
 33349                           
 33350                           ; BSR set to: 61
 33351                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 33352  01C664  0EB0               	movlw	176
 33353  01C666  6FF2               	movwf	242,b	;volatile
 33354                           
 33355                           ; BSR set to: 61
 33356                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 33357  01C668  0E80               	movlw	128
 33358  01C66A  6FF3               	movwf	243,b	;volatile
 33359                           
 33360                           ; BSR set to: 61
 33361                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 33362  01C66C  6BF4               	clrf	244,b	;volatile
 33363                           
 33364                           ; BSR set to: 61
 33365                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 33366  01C66E  0E8A               	movlw	138
 33367  01C670  6FF5               	movwf	245,b	;volatile
 33368                           
 33369                           ; BSR set to: 61
 33370                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 33371  01C672  6BF6               	clrf	246,b	;volatile
 33372                           
 33373                           ; BSR set to: 61
 33374                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 33375  01C674  6BF7               	clrf	247,b	;volatile
 33376                           
 33377                           ; BSR set to: 61
 33378                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 33379  01C676  6BF8               	clrf	248,b	;volatile
 33380                           
 33381                           ; BSR set to: 61
 33382                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 33383  01C678  6BF9               	clrf	249,b	;volatile
 33384                           
 33385                           ; BSR set to: 61
 33386                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 33387  01C67A  6BFA               	clrf	250,b	;volatile
 33388                           
 33389                           ; BSR set to: 61
 33390                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 33391  01C67C  6A47               	clrf	_uart1RxHead^0,c	;volatile
 33392                           
 33393                           ; BSR set to: 61
 33394                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 33395  01C67E  0100               	movlb	0	; () banked
 33396  01C680  6BAA               	clrf	_uart1RxTail& (0+255),b	;volatile
 33397                           
 33398                           ; BSR set to: 0
 33399                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 33400  01C682  6BA9               	clrf	_uart1RxCount& (0+255),b	;volatile
 33401                           
 33402                           ; BSR set to: 0
 33403                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 33404  01C684  0139               	movlb	57	; () banked
 33405  01C686  8793               	bsf	147,3,b	;volatile
 33406                           
 33407                           ; BSR set to: 57
 33408                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 33409  01C688  0012               	return		;funcret
 33410  01C68A                     __end_of_UART1_Initialize:
 33411                           	opt callstack 0
 33412                           
 33413 ;; *************** function _UART1_SetRxInterruptHandler *****************
 33414 ;; Defined at:
 33415 ;;		line 207 in file "mcc_generated_files/uart1.c"
 33416 ;; Parameters:    Size  Location     Type
 33417 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33418 ;;		 -> UART1_Receive_ISR(1), 
 33419 ;; Auto vars:     Size  Location     Type
 33420 ;;		None
 33421 ;; Return value:  Size  Location     Type
 33422 ;;                  1  [STACK] void 
 33423 ;; Registers used:
 33424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33425 ;; Tracked objects:
 33426 ;;		On entry : 3F/39
 33427 ;;		On exit  : 0/0
 33428 ;;		Unchanged: 0/0
 33429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33434 ;;Total ram usage:        0 bytes
 33435 ;; Hardware stack levels used:    1
 33436 ;; Hardware stack levels required when called:   15
 33437 ;; This function calls:
 33438 ;;		Nothing
 33439 ;; This function is called by:
 33440 ;;		_UART1_Initialize
 33441 ;; This function uses a reentrant model
 33442 ;;
 33443                           
 33444                           	psect	text132
 33445  01CE02                     __ptext132:
 33446                           	opt callstack 0
 33447  01CE02                     _UART1_SetRxInterruptHandler:
 33448                           	opt callstack 13
 33449                           
 33450                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 33451                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33452                           
 33453                           ; BSR set to: 57
 33454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33455                           ;incstack = 0
 33456  01CE02  50E1               	movf	fsr1l,w,c
 33457  01CE04  0FFD               	addlw	-3
 33458  01CE06  6ED9               	movwf	fsr2l,c
 33459  01CE08  50E2               	movf	fsr1h,w,c
 33460  01CE0A  6EDA               	movwf	fsr2h,c
 33461  01CE0C  0EFF               	movlw	255
 33462  01CE0E  22DA               	addwfc	fsr2h,f,c
 33463  01CE10  006F FF78  F087    	movff	postinc2,_UART1_RxInterruptHandler
 33464  01CE16  006F FF78  F088    	movff	postinc2,_UART1_RxInterruptHandler+1
 33465  01CE1C  006F FF74  F089    	movff	postdec2,_UART1_RxInterruptHandler+2
 33466                           
 33467                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33468  01CE22  52E5               	movf	postdec1,f,c
 33469  01CE24  52E5               	movf	postdec1,f,c
 33470  01CE26  52E5               	movf	postdec1,f,c
 33471  01CE28  0012               	return		;funcret
 33472  01CE2A                     __end_of_UART1_SetRxInterruptHandler:
 33473                           	opt callstack 0
 33474                           
 33475 ;; *************** function _TMR6_Initialize *****************
 33476 ;; Defined at:
 33477 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 33478 ;; Parameters:    Size  Location     Type
 33479 ;;		None
 33480 ;; Auto vars:     Size  Location     Type
 33481 ;;		None
 33482 ;; Return value:  Size  Location     Type
 33483 ;;                  1  [STACK] void 
 33484 ;; Registers used:
 33485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33486 ;; Tracked objects:
 33487 ;;		On entry : 3F/39
 33488 ;;		On exit  : 0/0
 33489 ;;		Unchanged: 0/0
 33490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33495 ;;Total ram usage:        0 bytes
 33496 ;; Hardware stack levels used:    1
 33497 ;; Hardware stack levels required when called:   16
 33498 ;; This function calls:
 33499 ;;		_TMR6_SetInterruptHandler
 33500 ;; This function is called by:
 33501 ;;		_SYSTEM_Initialize
 33502 ;; This function uses a reentrant model
 33503 ;;
 33504                           
 33505                           	psect	text133
 33506  01CD38                     __ptext133:
 33507                           	opt callstack 0
 33508  01CD38                     _TMR6_Initialize:
 33509                           	opt callstack 13
 33510                           
 33511                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 33512                           
 33513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33514                           ;incstack = 0
 33515  01CD38  0E01               	movlw	1
 33516  01CD3A  6E96               	movwf	150,c	;volatile
 33517                           
 33518                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 33519  01CD3C  6A95               	clrf	149,c	;volatile
 33520                           
 33521                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 33522  01CD3E  6A97               	clrf	151,c	;volatile
 33523                           
 33524                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 33525  01CD40  0E7C               	movlw	124
 33526  01CD42  6E93               	movwf	147,c	;volatile
 33527                           
 33528                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 33529  01CD44  6A92               	clrf	146,c	;volatile
 33530                           
 33531                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 33532  01CD46  0139               	movlb	57	; () banked
 33533  01CD48  91A9               	bcf	169,0,b	;volatile
 33534                           
 33535                           ; BSR set to: 57
 33536                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 33537  01CD4A  8199               	bsf	153,0,b	;volatile
 33538                           
 33539                           ; BSR set to: 57
 33540                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 33541  01CD4C  0E62               	movlw	low _TMR6_DefaultInterruptHandler
 33542  01CD4E  6EE6               	movwf	postinc1,c
 33543  01CD50  0EC5               	movlw	high _TMR6_DefaultInterruptHandler
 33544  01CD52  6EE6               	movwf	postinc1,c
 33545  01CD54  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 33546  01CD56  6EE6               	movwf	postinc1,c
 33547  01CD58  EC15  F0E7         	call	_TMR6_SetInterruptHandler	;wreg free
 33548                           
 33549                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 33550  01CD5C  0EE0               	movlw	224
 33551  01CD5E  6E94               	movwf	148,c	;volatile
 33552                           
 33553                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33554  01CD60  0012               	return		;funcret
 33555  01CD62                     __end_of_TMR6_Initialize:
 33556                           	opt callstack 0
 33557                           
 33558 ;; *************** function _TMR6_SetInterruptHandler *****************
 33559 ;; Defined at:
 33560 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 33561 ;; Parameters:    Size  Location     Type
 33562 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33563 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 33564 ;; Auto vars:     Size  Location     Type
 33565 ;;		None
 33566 ;; Return value:  Size  Location     Type
 33567 ;;                  1  [STACK] void 
 33568 ;; Registers used:
 33569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33570 ;; Tracked objects:
 33571 ;;		On entry : 3F/39
 33572 ;;		On exit  : 0/0
 33573 ;;		Unchanged: 0/0
 33574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33579 ;;Total ram usage:        0 bytes
 33580 ;; Hardware stack levels used:    1
 33581 ;; Hardware stack levels required when called:   15
 33582 ;; This function calls:
 33583 ;;		Nothing
 33584 ;; This function is called by:
 33585 ;;		_TMR6_Initialize
 33586 ;; This function uses a reentrant model
 33587 ;;
 33588                           
 33589                           	psect	text134
 33590  01CE2A                     __ptext134:
 33591                           	opt callstack 0
 33592  01CE2A                     _TMR6_SetInterruptHandler:
 33593                           	opt callstack 13
 33594                           
 33595                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 33596                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33597                           
 33598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33599                           ;incstack = 0
 33600  01CE2A  50E1               	movf	fsr1l,w,c
 33601  01CE2C  0FFD               	addlw	-3
 33602  01CE2E  6ED9               	movwf	fsr2l,c
 33603  01CE30  50E2               	movf	fsr1h,w,c
 33604  01CE32  6EDA               	movwf	fsr2h,c
 33605  01CE34  0EFF               	movlw	255
 33606  01CE36  22DA               	addwfc	fsr2h,f,c
 33607  01CE38  006F FF78  F07E    	movff	postinc2,_TMR6_InterruptHandler
 33608  01CE3E  006F FF78  F07F    	movff	postinc2,_TMR6_InterruptHandler+1
 33609  01CE44  006F FF74  F080    	movff	postdec2,_TMR6_InterruptHandler+2
 33610                           
 33611                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33612  01CE4A  52E5               	movf	postdec1,f,c
 33613  01CE4C  52E5               	movf	postdec1,f,c
 33614  01CE4E  52E5               	movf	postdec1,f,c
 33615  01CE50  0012               	return		;funcret
 33616  01CE52                     __end_of_TMR6_SetInterruptHandler:
 33617                           	opt callstack 0
 33618                           
 33619 ;; *************** function _TMR5_Initialize *****************
 33620 ;; Defined at:
 33621 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 33622 ;; Parameters:    Size  Location     Type
 33623 ;;		None
 33624 ;; Auto vars:     Size  Location     Type
 33625 ;;		None
 33626 ;; Return value:  Size  Location     Type
 33627 ;;                  1  [STACK] void 
 33628 ;; Registers used:
 33629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 33630 ;; Tracked objects:
 33631 ;;		On entry : 0/39
 33632 ;;		On exit  : 0/0
 33633 ;;		Unchanged: 0/0
 33634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33639 ;;Total ram usage:        0 bytes
 33640 ;; Hardware stack levels used:    1
 33641 ;; Hardware stack levels required when called:   16
 33642 ;; This function calls:
 33643 ;;		_TMR5_SetInterruptHandler
 33644 ;; This function is called by:
 33645 ;;		_SYSTEM_Initialize
 33646 ;; This function uses a reentrant model
 33647 ;;
 33648                           
 33649                           	psect	text135
 33650  01C68A                     __ptext135:
 33651                           	opt callstack 0
 33652  01C68A                     _TMR5_Initialize:
 33653                           	opt callstack 13
 33654                           
 33655                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 33656                           
 33657                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33658                           ;incstack = 0
 33659  01C68A  6A9B               	clrf	155,c	;volatile
 33660                           
 33661                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 33662  01C68C  6A9C               	clrf	156,c	;volatile
 33663                           
 33664                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 33665  01C68E  0E01               	movlw	1
 33666  01C690  6E9D               	movwf	157,c	;volatile
 33667                           
 33668                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 33669  01C692  0E63               	movlw	99
 33670  01C694  6E99               	movwf	153,c	;volatile
 33671                           
 33672                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 33673  01C696  0EC0               	movlw	192
 33674  01C698  6E98               	movwf	152,c	;volatile
 33675                           
 33676                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 33677  01C69A  5098               	movf	152,w,c	;volatile
 33678  01C69C  006F FE64  F001    	movff	16281,btemp	;volatile
 33679  01C6A2  6A02               	clrf	(btemp+1)^0,c
 33680  01C6A4  0060  F004  F002   	movff	btemp,btemp+1
 33681  01C6AA  6A01               	clrf	btemp^0,c
 33682  01C6AC  1001               	iorwf	btemp^0,w,c
 33683  01C6AE  0100               	movlb	0	; () banked
 33684  01C6B0  6F9E               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 33685  01C6B2  5002               	movf	(btemp+1)^0,w,c
 33686  01C6B4  6F9F               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 33687                           
 33688                           ; BSR set to: 0
 33689                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 33690  01C6B6  0139               	movlb	57	; () banked
 33691  01C6B8  9DA8               	bcf	168,6,b	;volatile
 33692                           
 33693                           ; BSR set to: 57
 33694                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 33695  01C6BA  8D98               	bsf	152,6,b	;volatile
 33696                           
 33697                           ; BSR set to: 57
 33698                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 33699  01C6BC  0E56               	movlw	low _TMR5_DefaultInterruptHandler
 33700  01C6BE  6EE6               	movwf	postinc1,c
 33701  01C6C0  0ECA               	movlw	high _TMR5_DefaultInterruptHandler
 33702  01C6C2  6EE6               	movwf	postinc1,c
 33703  01C6C4  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 33704  01C6C6  6EE6               	movwf	postinc1,c
 33705  01C6C8  EC29  F0E7         	call	_TMR5_SetInterruptHandler	;wreg free
 33706                           
 33707                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 33708  01C6CC  0E31               	movlw	49
 33709  01C6CE  6E9A               	movwf	154,c	;volatile
 33710                           
 33711                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33712  01C6D0  0012               	return		;funcret
 33713  01C6D2                     __end_of_TMR5_Initialize:
 33714                           	opt callstack 0
 33715                           
 33716 ;; *************** function _TMR5_SetInterruptHandler *****************
 33717 ;; Defined at:
 33718 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 33719 ;; Parameters:    Size  Location     Type
 33720 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33721 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 33722 ;; Auto vars:     Size  Location     Type
 33723 ;;		None
 33724 ;; Return value:  Size  Location     Type
 33725 ;;                  1  [STACK] void 
 33726 ;; Registers used:
 33727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33728 ;; Tracked objects:
 33729 ;;		On entry : 3F/39
 33730 ;;		On exit  : 0/0
 33731 ;;		Unchanged: 0/0
 33732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33737 ;;Total ram usage:        0 bytes
 33738 ;; Hardware stack levels used:    1
 33739 ;; Hardware stack levels required when called:   15
 33740 ;; This function calls:
 33741 ;;		Nothing
 33742 ;; This function is called by:
 33743 ;;		_TMR5_Initialize
 33744 ;; This function uses a reentrant model
 33745 ;;
 33746                           
 33747                           	psect	text136
 33748  01CE52                     __ptext136:
 33749                           	opt callstack 0
 33750  01CE52                     _TMR5_SetInterruptHandler:
 33751                           	opt callstack 13
 33752                           
 33753                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 33754                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33755                           
 33756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33757                           ;incstack = 0
 33758  01CE52  50E1               	movf	fsr1l,w,c
 33759  01CE54  0FFD               	addlw	-3
 33760  01CE56  6ED9               	movwf	fsr2l,c
 33761  01CE58  50E2               	movf	fsr1h,w,c
 33762  01CE5A  6EDA               	movwf	fsr2h,c
 33763  01CE5C  0EFF               	movlw	255
 33764  01CE5E  22DA               	addwfc	fsr2h,f,c
 33765  01CE60  006F FF78  F07B    	movff	postinc2,_TMR5_InterruptHandler
 33766  01CE66  006F FF78  F07C    	movff	postinc2,_TMR5_InterruptHandler+1
 33767  01CE6C  006F FF74  F07D    	movff	postdec2,_TMR5_InterruptHandler+2
 33768                           
 33769                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33770  01CE72  52E5               	movf	postdec1,f,c
 33771  01CE74  52E5               	movf	postdec1,f,c
 33772  01CE76  52E5               	movf	postdec1,f,c
 33773  01CE78  0012               	return		;funcret
 33774  01CE7A                     __end_of_TMR5_SetInterruptHandler:
 33775                           	opt callstack 0
 33776                           
 33777 ;; *************** function _TMR3_Initialize *****************
 33778 ;; Defined at:
 33779 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 33780 ;; Parameters:    Size  Location     Type
 33781 ;;		None
 33782 ;; Auto vars:     Size  Location     Type
 33783 ;;		None
 33784 ;; Return value:  Size  Location     Type
 33785 ;;                  1  [STACK] void 
 33786 ;; Registers used:
 33787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 33788 ;; Tracked objects:
 33789 ;;		On entry : 0/39
 33790 ;;		On exit  : 0/0
 33791 ;;		Unchanged: 0/0
 33792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33797 ;;Total ram usage:        0 bytes
 33798 ;; Hardware stack levels used:    1
 33799 ;; Hardware stack levels required when called:   16
 33800 ;; This function calls:
 33801 ;;		_TMR3_SetInterruptHandler
 33802 ;; This function is called by:
 33803 ;;		_SYSTEM_Initialize
 33804 ;; This function uses a reentrant model
 33805 ;;
 33806                           
 33807                           	psect	text137
 33808  01C6D2                     __ptext137:
 33809                           	opt callstack 0
 33810  01C6D2                     _TMR3_Initialize:
 33811                           	opt callstack 13
 33812                           
 33813                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 33814                           
 33815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33816                           ;incstack = 0
 33817  01C6D2  6AA7               	clrf	167,c	;volatile
 33818                           
 33819                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 33820  01C6D4  6AA8               	clrf	168,c	;volatile
 33821                           
 33822                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 33823  01C6D6  0E01               	movlw	1
 33824  01C6D8  6EA9               	movwf	169,c	;volatile
 33825                           
 33826                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 33827  01C6DA  0E3C               	movlw	60
 33828  01C6DC  6EA5               	movwf	165,c	;volatile
 33829                           
 33830                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 33831  01C6DE  0EB0               	movlw	176
 33832  01C6E0  6EA4               	movwf	164,c	;volatile
 33833                           
 33834                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 33835  01C6E2  50A4               	movf	164,w,c	;volatile
 33836  01C6E4  006F FE94  F001    	movff	16293,btemp	;volatile
 33837  01C6EA  6A02               	clrf	(btemp+1)^0,c
 33838  01C6EC  0060  F004  F002   	movff	btemp,btemp+1
 33839  01C6F2  6A01               	clrf	btemp^0,c
 33840  01C6F4  1001               	iorwf	btemp^0,w,c
 33841  01C6F6  0100               	movlb	0	; () banked
 33842  01C6F8  6F9A               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 33843  01C6FA  5002               	movf	(btemp+1)^0,w,c
 33844  01C6FC  6F9B               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 33845                           
 33846                           ; BSR set to: 0
 33847                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 33848  01C6FE  0139               	movlb	57	; () banked
 33849  01C700  9DA6               	bcf	166,6,b	;volatile
 33850                           
 33851                           ; BSR set to: 57
 33852                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 33853  01C702  8D96               	bsf	150,6,b	;volatile
 33854                           
 33855                           ; BSR set to: 57
 33856                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 33857  01C704  0EE4               	movlw	low _TMR3_DefaultInterruptHandler
 33858  01C706  6EE6               	movwf	postinc1,c
 33859  01C708  0ED3               	movlw	high _TMR3_DefaultInterruptHandler
 33860  01C70A  6EE6               	movwf	postinc1,c
 33861  01C70C  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 33862  01C70E  6EE6               	movwf	postinc1,c
 33863  01C710  EC3D  F0E7         	call	_TMR3_SetInterruptHandler	;wreg free
 33864                           
 33865                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 33866  01C714  0E31               	movlw	49
 33867  01C716  6EA6               	movwf	166,c	;volatile
 33868                           
 33869                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33870  01C718  0012               	return		;funcret
 33871  01C71A                     __end_of_TMR3_Initialize:
 33872                           	opt callstack 0
 33873                           
 33874 ;; *************** function _TMR3_SetInterruptHandler *****************
 33875 ;; Defined at:
 33876 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 33877 ;; Parameters:    Size  Location     Type
 33878 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33879 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 33880 ;; Auto vars:     Size  Location     Type
 33881 ;;		None
 33882 ;; Return value:  Size  Location     Type
 33883 ;;                  1  [STACK] void 
 33884 ;; Registers used:
 33885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33886 ;; Tracked objects:
 33887 ;;		On entry : 0/0
 33888 ;;		On exit  : 0/0
 33889 ;;		Unchanged: 0/0
 33890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33895 ;;Total ram usage:        0 bytes
 33896 ;; Hardware stack levels used:    1
 33897 ;; Hardware stack levels required when called:   15
 33898 ;; This function calls:
 33899 ;;		Nothing
 33900 ;; This function is called by:
 33901 ;;		_TMR3_Initialize
 33902 ;;		_init_bsoc
 33903 ;; This function uses a reentrant model
 33904 ;;
 33905                           
 33906                           	psect	text138
 33907  01CE7A                     __ptext138:
 33908                           	opt callstack 0
 33909  01CE7A                     _TMR3_SetInterruptHandler:
 33910                           	opt callstack 14
 33911                           
 33912                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 33913                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33914                           
 33915                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33916                           ;incstack = 0
 33917  01CE7A  50E1               	movf	fsr1l,w,c
 33918  01CE7C  0FFD               	addlw	-3
 33919  01CE7E  6ED9               	movwf	fsr2l,c
 33920  01CE80  50E2               	movf	fsr1h,w,c
 33921  01CE82  6EDA               	movwf	fsr2h,c
 33922  01CE84  0EFF               	movlw	255
 33923  01CE86  22DA               	addwfc	fsr2h,f,c
 33924  01CE88  006F FF78  F078    	movff	postinc2,_TMR3_InterruptHandler
 33925  01CE8E  006F FF78  F079    	movff	postinc2,_TMR3_InterruptHandler+1
 33926  01CE94  006F FF74  F07A    	movff	postdec2,_TMR3_InterruptHandler+2
 33927                           
 33928                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33929  01CE9A  52E5               	movf	postdec1,f,c
 33930  01CE9C  52E5               	movf	postdec1,f,c
 33931  01CE9E  52E5               	movf	postdec1,f,c
 33932  01CEA0  0012               	return		;funcret
 33933  01CEA2                     __end_of_TMR3_SetInterruptHandler:
 33934                           	opt callstack 0
 33935                           
 33936 ;; *************** function _TMR2_Initialize *****************
 33937 ;; Defined at:
 33938 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 33939 ;; Parameters:    Size  Location     Type
 33940 ;;		None
 33941 ;; Auto vars:     Size  Location     Type
 33942 ;;		None
 33943 ;; Return value:  Size  Location     Type
 33944 ;;                  1  [STACK] void 
 33945 ;; Registers used:
 33946 ;;		wreg, status,2
 33947 ;; Tracked objects:
 33948 ;;		On entry : 3F/3F
 33949 ;;		On exit  : 3F/39
 33950 ;;		Unchanged: 0/0
 33951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33956 ;;Total ram usage:        0 bytes
 33957 ;; Hardware stack levels used:    1
 33958 ;; Hardware stack levels required when called:   15
 33959 ;; This function calls:
 33960 ;;		Nothing
 33961 ;; This function is called by:
 33962 ;;		_SYSTEM_Initialize
 33963 ;; This function uses a reentrant model
 33964 ;;
 33965                           
 33966                           	psect	text139
 33967  01D21E                     __ptext139:
 33968                           	opt callstack 0
 33969  01D21E                     _TMR2_Initialize:
 33970                           	opt callstack 14
 33971                           
 33972                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 33973                           
 33974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33975                           ;incstack = 0
 33976  01D21E  0E01               	movlw	1
 33977  01D220  6EAE               	movwf	174,c	;volatile
 33978                           
 33979                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 33980  01D222  6AAD               	clrf	173,c	;volatile
 33981                           
 33982                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 33983  01D224  6AAF               	clrf	175,c	;volatile
 33984                           
 33985                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 33986  01D226  0E63               	movlw	99
 33987  01D228  6EAB               	movwf	171,c	;volatile
 33988                           
 33989                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 33990  01D22A  6AAA               	clrf	170,c	;volatile
 33991                           
 33992                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 33993  01D22C  0139               	movlb	57	; () banked
 33994  01D22E  95A4               	bcf	164,2,b	;volatile
 33995                           
 33996                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 33997  01D230  0EC0               	movlw	192
 33998  01D232  6EAC               	movwf	172,c	;volatile
 33999                           
 34000                           ; BSR set to: 57
 34001                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34002  01D234  0012               	return		;funcret
 34003  01D236                     __end_of_TMR2_Initialize:
 34004                           	opt callstack 0
 34005                           
 34006 ;; *************** function _SPI1_Initialize *****************
 34007 ;; Defined at:
 34008 ;;		line 64 in file "mcc_generated_files/spi1.c"
 34009 ;; Parameters:    Size  Location     Type
 34010 ;;		None
 34011 ;; Auto vars:     Size  Location     Type
 34012 ;;		None
 34013 ;; Return value:  Size  Location     Type
 34014 ;;                  1  [STACK] void 
 34015 ;; Registers used:
 34016 ;;		wreg, status,2
 34017 ;; Tracked objects:
 34018 ;;		On entry : 3F/39
 34019 ;;		On exit  : 3F/3D
 34020 ;;		Unchanged: 0/0
 34021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34026 ;;Total ram usage:        0 bytes
 34027 ;; Hardware stack levels used:    1
 34028 ;; Hardware stack levels required when called:   15
 34029 ;; This function calls:
 34030 ;;		Nothing
 34031 ;; This function is called by:
 34032 ;;		_SYSTEM_Initialize
 34033 ;; This function uses a reentrant model
 34034 ;;
 34035                           
 34036                           	psect	text140
 34037  01D24C                     __ptext140:
 34038                           	opt callstack 0
 34039  01D24C                     _SPI1_Initialize:
 34040                           	opt callstack 14
 34041                           
 34042                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 34043                           
 34044                           ; BSR set to: 57
 34045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34046                           ;incstack = 0
 34047  01D24C  0E40               	movlw	64
 34048  01D24E  013D               	movlb	61	; () banked
 34049  01D250  6F15               	movwf	21,b	;volatile
 34050                           
 34051                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 34052  01D252  0E03               	movlw	3
 34053  01D254  6F16               	movwf	22,b	;volatile
 34054                           
 34055                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 34056  01D256  0E4F               	movlw	79
 34057  01D258  6F19               	movwf	25,b	;volatile
 34058                           
 34059                           ; BSR set to: 61
 34060                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 34061  01D25A  6B1C               	clrf	28,b	;volatile
 34062                           
 34063                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 34064  01D25C  0E83               	movlw	131
 34065  01D25E  6F14               	movwf	20,b	;volatile
 34066                           
 34067                           ; BSR set to: 61
 34068                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34069  01D260  0012               	return		;funcret
 34070  01D262                     __end_of_SPI1_Initialize:
 34071                           	opt callstack 0
 34072                           
 34073 ;; *************** function _PWM8_Initialize *****************
 34074 ;; Defined at:
 34075 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 34076 ;; Parameters:    Size  Location     Type
 34077 ;;		None
 34078 ;; Auto vars:     Size  Location     Type
 34079 ;;		None
 34080 ;; Return value:  Size  Location     Type
 34081 ;;                  1  [STACK] void 
 34082 ;; Registers used:
 34083 ;;		wreg, status,2
 34084 ;; Tracked objects:
 34085 ;;		On entry : 0/0
 34086 ;;		On exit  : 3F/3F
 34087 ;;		Unchanged: 0/0
 34088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34093 ;;Total ram usage:        0 bytes
 34094 ;; Hardware stack levels used:    1
 34095 ;; Hardware stack levels required when called:   15
 34096 ;; This function calls:
 34097 ;;		Nothing
 34098 ;; This function is called by:
 34099 ;;		_SYSTEM_Initialize
 34100 ;; This function uses a reentrant model
 34101 ;;
 34102                           
 34103                           	psect	text141
 34104  01D262                     __ptext141:
 34105                           	opt callstack 0
 34106  01D262                     _PWM8_Initialize:
 34107                           	opt callstack 14
 34108                           
 34109                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 34110                           
 34111                           ; BSR set to: 61
 34112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34113                           ;incstack = 0
 34114  01D262  0E80               	movlw	128
 34115  01D264  6E62               	movwf	98,c	;volatile
 34116                           
 34117                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 34118  01D266  6A61               	clrf	97,c	;volatile
 34119                           
 34120                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 34121  01D268  0E40               	movlw	64
 34122  01D26A  6E60               	movwf	96,c	;volatile
 34123                           
 34124                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 34125  01D26C  013F               	movlb	63	; () banked
 34126  01D26E  515F               	movf	95,w,b	;volatile
 34127  01D270  0B3F               	andlw	-193
 34128  01D272  0940               	iorlw	64
 34129  01D274  6F5F               	movwf	95,b	;volatile
 34130                           
 34131                           ; BSR set to: 63
 34132                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34133  01D276  0012               	return		;funcret
 34134  01D278                     __end_of_PWM8_Initialize:
 34135                           	opt callstack 0
 34136                           
 34137 ;; *************** function _PMD_Initialize *****************
 34138 ;; Defined at:
 34139 ;;		line 91 in file "mcc_generated_files/mcc.c"
 34140 ;; Parameters:    Size  Location     Type
 34141 ;;		None
 34142 ;; Auto vars:     Size  Location     Type
 34143 ;;		None
 34144 ;; Return value:  Size  Location     Type
 34145 ;;                  1  [STACK] void 
 34146 ;; Registers used:
 34147 ;;		None
 34148 ;; Tracked objects:
 34149 ;;		On entry : 3F/39
 34150 ;;		On exit  : 3F/39
 34151 ;;		Unchanged: 0/0
 34152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34157 ;;Total ram usage:        0 bytes
 34158 ;; Hardware stack levels used:    1
 34159 ;; Hardware stack levels required when called:   15
 34160 ;; This function calls:
 34161 ;;		Nothing
 34162 ;; This function is called by:
 34163 ;;		_SYSTEM_Initialize
 34164 ;; This function uses a reentrant model
 34165 ;;
 34166                           
 34167                           	psect	text142
 34168  01D28E                     __ptext142:
 34169                           	opt callstack 0
 34170  01D28E                     _PMD_Initialize:
 34171                           	opt callstack 14
 34172                           
 34173                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 34174                           
 34175                           ; BSR set to: 63
 34176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34177                           ;incstack = 0
 34178  01D28E  0139               	movlb	57	; () banked
 34179  01D290  6BC0               	clrf	192,b	;volatile
 34180                           
 34181                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 34182  01D292  6BC1               	clrf	193,b	;volatile
 34183                           
 34184                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 34185  01D294  6BC2               	clrf	194,b	;volatile
 34186                           
 34187                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 34188  01D296  6BC3               	clrf	195,b	;volatile
 34189                           
 34190                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 34191  01D298  6BC4               	clrf	196,b	;volatile
 34192                           
 34193                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 34194  01D29A  6BC5               	clrf	197,b	;volatile
 34195                           
 34196                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 34197  01D29C  6BC6               	clrf	198,b	;volatile
 34198                           
 34199                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 34200  01D29E  6BC7               	clrf	199,b	;volatile
 34201                           
 34202                           ; BSR set to: 57
 34203                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34204  01D2A0  0012               	return		;funcret
 34205  01D2A2                     __end_of_PMD_Initialize:
 34206                           	opt callstack 0
 34207                           
 34208 ;; *************** function _PIN_MANAGER_Initialize *****************
 34209 ;; Defined at:
 34210 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 34211 ;; Parameters:    Size  Location     Type
 34212 ;;		None
 34213 ;; Auto vars:     Size  Location     Type
 34214 ;;		None
 34215 ;; Return value:  Size  Location     Type
 34216 ;;                  1  [STACK] void 
 34217 ;; Registers used:
 34218 ;;		wreg, status,2
 34219 ;; Tracked objects:
 34220 ;;		On entry : 3F/39
 34221 ;;		On exit  : 3F/3A
 34222 ;;		Unchanged: 0/0
 34223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34228 ;;Total ram usage:        0 bytes
 34229 ;; Hardware stack levels used:    1
 34230 ;; Hardware stack levels required when called:   15
 34231 ;; This function calls:
 34232 ;;		Nothing
 34233 ;; This function is called by:
 34234 ;;		_SYSTEM_Initialize
 34235 ;; This function uses a reentrant model
 34236 ;;
 34237                           
 34238                           	psect	text143
 34239  01B9C2                     __ptext143:
 34240                           	opt callstack 0
 34241  01B9C2                     _PIN_MANAGER_Initialize:
 34242                           	opt callstack 14
 34243                           
 34244                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 34245                           
 34246                           ; BSR set to: 57
 34247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34248                           ;incstack = 0
 34249  01B9C2  0E07               	movlw	7
 34250  01B9C4  6EBE               	movwf	190,c	;volatile
 34251                           
 34252                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 34253  01B9C6  6ABD               	clrf	189,c	;volatile
 34254                           
 34255                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 34256  01B9C8  6ABA               	clrf	186,c	;volatile
 34257                           
 34258                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 34259  01B9CA  0E23               	movlw	35
 34260  01B9CC  6EBF               	movwf	191,c	;volatile
 34261                           
 34262                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 34263  01B9CE  6ABB               	clrf	187,c	;volatile
 34264                           
 34265                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 34266  01B9D0  0E07               	movlw	7
 34267  01B9D2  6EBC               	movwf	188,c	;volatile
 34268                           
 34269                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 34270  01B9D4  6AC6               	clrf	198,c	;volatile
 34271                           
 34272                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 34273  01B9D6  0E0C               	movlw	12
 34274  01B9D8  6EC7               	movwf	199,c	;volatile
 34275                           
 34276                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 34277  01B9DA  68C2               	setf	194,c	;volatile
 34278                           
 34279                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 34280  01B9DC  0EBF               	movlw	191
 34281  01B9DE  6EC3               	movwf	195,c	;volatile
 34282                           
 34283                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 34284  01B9E0  0E90               	movlw	144
 34285  01B9E2  6EC4               	movwf	196,c	;volatile
 34286                           
 34287                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 34288  01B9E4  0E0C               	movlw	12
 34289  01B9E6  6EC5               	movwf	197,c	;volatile
 34290                           
 34291                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 34292  01B9E8  013A               	movlb	58	; () banked
 34293  01B9EA  6B70               	clrf	112,b	;volatile
 34294                           
 34295                           ; BSR set to: 58
 34296                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 34297  01B9EC  6B60               	clrf	96,b	;volatile
 34298                           
 34299                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 34300  01B9EE  0E3C               	movlw	60
 34301  01B9F0  6F50               	movwf	80,b	;volatile
 34302                           
 34303                           ; BSR set to: 58
 34304                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 34305  01B9F2  6B80               	clrf	128,b	;volatile
 34306                           
 34307                           ; BSR set to: 58
 34308                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 34309  01B9F4  6B90               	clrf	144,b	;volatile
 34310                           
 34311                           ; BSR set to: 58
 34312                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 34313  01B9F6  6940               	setf	64,b	;volatile
 34314                           
 34315                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 34316  01B9F8  0E0C               	movlw	12
 34317  01B9FA  6F71               	movwf	113,b	;volatile
 34318                           
 34319                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 34320  01B9FC  0E0C               	movlw	12
 34321  01B9FE  6F91               	movwf	145,b	;volatile
 34322                           
 34323                           ; BSR set to: 58
 34324                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 34325  01BA00  6B81               	clrf	129,b	;volatile
 34326                           
 34327                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 34328  01BA02  0E83               	movlw	131
 34329  01BA04  6F51               	movwf	81,b	;volatile
 34330                           
 34331                           ; BSR set to: 58
 34332                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 34333  01BA06  6B41               	clrf	65,b	;volatile
 34334                           
 34335                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 34336  01BA08  0E97               	movlw	151
 34337  01BA0A  6F61               	movwf	97,b	;volatile
 34338                           
 34339                           ; BSR set to: 58
 34340                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 34341  01BA0C  6B82               	clrf	130,b	;volatile
 34342                           
 34343                           ; BSR set to: 58
 34344                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 34345  01BA0E  6B92               	clrf	146,b	;volatile
 34346                           
 34347                           ; BSR set to: 58
 34348                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 34349  01BA10  6B42               	clrf	66,b	;volatile
 34350                           
 34351                           ; BSR set to: 58
 34352                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 34353  01BA12  6B52               	clrf	82,b	;volatile
 34354                           
 34355                           ; BSR set to: 58
 34356                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 34357  01BA14  6B62               	clrf	98,b	;volatile
 34358                           
 34359                           ; BSR set to: 58
 34360                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 34361  01BA16  6B72               	clrf	114,b	;volatile
 34362                           
 34363                           ; BSR set to: 58
 34364                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 34365  01BA18  6943               	setf	67,b	;volatile
 34366                           
 34367                           ; BSR set to: 58
 34368                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 34369  01BA1A  6953               	setf	83,b	;volatile
 34370                           
 34371                           ; BSR set to: 58
 34372                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 34373  01BA1C  6963               	setf	99,b	;volatile
 34374                           
 34375                           ; BSR set to: 58
 34376                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 34377  01BA1E  6973               	setf	115,b	;volatile
 34378                           
 34379                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 34380  01BA20  0E07               	movlw	7
 34381  01BA22  6F83               	movwf	131,b	;volatile
 34382                           
 34383                           ; BSR set to: 58
 34384                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 34385  01BA24  6993               	setf	147,b	;volatile
 34386                           
 34387                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 34388  01BA26  0E0F               	movlw	15
 34389  01BA28  6FE8               	movwf	232,b	;volatile
 34390                           
 34391                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 34392  01BA2A  0E13               	movlw	19
 34393  01BA2C  6FDE               	movwf	222,b	;volatile
 34394                           
 34395                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 34396  01BA2E  0E16               	movlw	22
 34397  01BA30  6F0E               	movwf	14,b	;volatile
 34398                           
 34399                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 34400  01BA32  0E1E               	movlw	30
 34401  01BA34  6F13               	movwf	19,b	;volatile
 34402                           
 34403                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 34404  01BA36  0E08               	movlw	8
 34405  01BA38  6FC0               	movwf	192,b	;volatile
 34406                           
 34407                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 34408  01BA3A  0E10               	movlw	16
 34409  01BA3C  6F19               	movwf	25,b	;volatile
 34410                           
 34411                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 34412  01BA3E  0E09               	movlw	9
 34413  01BA40  6FC1               	movwf	193,b	;volatile
 34414                           
 34415                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 34416  01BA42  0E1F               	movlw	31
 34417  01BA44  6F15               	movwf	21,b	;volatile
 34418                           
 34419                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 34420  01BA46  0E13               	movlw	19
 34421  01BA48  6F16               	movwf	22,b	;volatile
 34422                           
 34423                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 34424  01BA4A  0E17               	movlw	23
 34425  01BA4C  6FE5               	movwf	229,b	;volatile
 34426                           
 34427                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 34428  01BA4E  0E14               	movlw	20
 34429  01BA50  6FDF               	movwf	223,b	;volatile
 34430                           
 34431                           ; BSR set to: 58
 34432                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 34433  01BA52  0012               	return		;funcret
 34434  01BA54                     __end_of_PIN_MANAGER_Initialize:
 34435                           	opt callstack 0
 34436                           
 34437 ;; *************** function _OSCILLATOR_Initialize *****************
 34438 ;; Defined at:
 34439 ;;		line 73 in file "mcc_generated_files/mcc.c"
 34440 ;; Parameters:    Size  Location     Type
 34441 ;;		None
 34442 ;; Auto vars:     Size  Location     Type
 34443 ;;		None
 34444 ;; Return value:  Size  Location     Type
 34445 ;;                  1  [STACK] void 
 34446 ;; Registers used:
 34447 ;;		wreg, status,2
 34448 ;; Tracked objects:
 34449 ;;		On entry : 3F/3A
 34450 ;;		On exit  : 3F/39
 34451 ;;		Unchanged: 0/0
 34452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34457 ;;Total ram usage:        0 bytes
 34458 ;; Hardware stack levels used:    1
 34459 ;; Hardware stack levels required when called:   15
 34460 ;; This function calls:
 34461 ;;		Nothing
 34462 ;; This function is called by:
 34463 ;;		_SYSTEM_Initialize
 34464 ;; This function uses a reentrant model
 34465 ;;
 34466                           
 34467                           	psect	text144
 34468  01D278                     __ptext144:
 34469                           	opt callstack 0
 34470  01D278                     _OSCILLATOR_Initialize:
 34471                           	opt callstack 14
 34472                           
 34473                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 34474                           
 34475                           ; BSR set to: 58
 34476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34477                           ;incstack = 0
 34478  01D278  0E20               	movlw	32
 34479  01D27A  0139               	movlb	57	; () banked
 34480  01D27C  6FD9               	movwf	217,b	;volatile
 34481                           
 34482                           ; BSR set to: 57
 34483                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 34484  01D27E  6BDB               	clrf	219,b	;volatile
 34485                           
 34486                           ; BSR set to: 57
 34487                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 34488  01D280  6BDD               	clrf	221,b	;volatile
 34489                           
 34490                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 34491  01D282  0E02               	movlw	2
 34492  01D284  6FDF               	movwf	223,b	;volatile
 34493                           
 34494                           ; BSR set to: 57
 34495                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 34496  01D286  6BDE               	clrf	222,b	;volatile
 34497  01D288                     l171:
 34498                           
 34499                           ; BSR set to: 57
 34500                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 34501  01D288  B1DC               	btfsc	220,0,b	;volatile
 34502  01D28A  0012               	return	
 34503  01D28C  D7FD               	goto	l171
 34504  01D28E                     __end_of_OSCILLATOR_Initialize:
 34505                           	opt callstack 0
 34506                           
 34507 ;; *************** function _INTERRUPT_Initialize *****************
 34508 ;; Defined at:
 34509 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 34510 ;; Parameters:    Size  Location     Type
 34511 ;;		None
 34512 ;; Auto vars:     Size  Location     Type
 34513 ;;  state           1  [STACK] _Bool 
 34514 ;; Return value:  Size  Location     Type
 34515 ;;                  1  [STACK] void 
 34516 ;; Registers used:
 34517 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 34518 ;; Tracked objects:
 34519 ;;		On entry : 0/0
 34520 ;;		On exit  : 3F/39
 34521 ;;		Unchanged: 0/0
 34522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34527 ;;Total ram usage:        0 bytes
 34528 ;; Hardware stack levels used:    1
 34529 ;; Hardware stack levels required when called:   15
 34530 ;; This function calls:
 34531 ;;		Nothing
 34532 ;; This function is called by:
 34533 ;;		_SYSTEM_Initialize
 34534 ;; This function uses a reentrant model
 34535 ;;
 34536                           
 34537                           	psect	text145
 34538  01C174                     __ptext145:
 34539                           	opt callstack 0
 34540  01C174                     _INTERRUPT_Initialize:
 34541                           	opt callstack 0
 34542                           
 34543                           ; BSR set to: 57
 34544                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34545  01C174  52E6               	movf	postinc1,f,c
 34546                           
 34547                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 34548                           
 34549                           ;incstack = 0
 34550  01C176  8AD2               	bsf	210,5,c	;volatile
 34551                           
 34552                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 34553  01C178  AED2               	btfss	16338,7,c	;volatile
 34554  01C17A  D003               	goto	u10060
 34555  01C17C  6A0C               	clrf	(btemp+11)^0,c
 34556  01C17E  2A0C               	incf	(btemp+11)^0,f,c
 34557  01C180  D001               	goto	u10078
 34558  01C182                     u10060:
 34559  01C182  6A0C               	clrf	(btemp+11)^0,c
 34560  01C184                     u10078:
 34561                           
 34562                           ;stkvar	_state @ sp[(-1)+0]
 34563  01C184  0EFF               	movlw	-1
 34564  01C186  0060  F033  FFE3   	movff	btemp+11,plusw1
 34565                           
 34566                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 34567  01C18C  9ED2               	bcf	16338,7,c	;volatile
 34568                           
 34569                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 34570  01C18E  0E55               	movlw	85
 34571  01C190  6ED4               	movwf	212,c	;volatile
 34572                           
 34573                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 34574  01C192  0EAA               	movlw	170
 34575  01C194  6ED4               	movwf	212,c	;volatile
 34576                           
 34577                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 34578  01C196  90D4               	bcf	212,0,c	;volatile
 34579                           
 34580                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 34581  01C198  0138               	movlb	56	; () banked
 34582  01C19A  6B9F               	clrf	159,b	;volatile
 34583                           
 34584                           ; BSR set to: 56
 34585                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 34586  01C19C  6B9E               	clrf	158,b	;volatile
 34587                           
 34588                           ; BSR set to: 56
 34589                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 34590  01C19E  0E08               	movlw	8
 34591  01C1A0  6F9D               	movwf	157,b	;volatile
 34592                           
 34593                           ; BSR set to: 56
 34594                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 34595  01C1A2  0E55               	movlw	85
 34596  01C1A4  6ED4               	movwf	212,c	;volatile
 34597                           
 34598                           ; BSR set to: 56
 34599                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 34600  01C1A6  0EAA               	movlw	170
 34601  01C1A8  6ED4               	movwf	212,c	;volatile
 34602                           
 34603                           ; BSR set to: 56
 34604                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 34605  01C1AA  80D4               	bsf	212,0,c	;volatile
 34606                           
 34607                           ; BSR set to: 56
 34608                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 34609                           ;stkvar	_state @ sp[(-1)+0]
 34610  01C1AC  0EFF               	movlw	-1
 34611  01C1AE  B0E3               	btfsc	plusw1,0,c
 34612  01C1B0  D002               	bra	u10085
 34613  01C1B2  9ED2               	bcf	16338,7,c	;volatile
 34614  01C1B4  D001               	bra	u10086
 34615  01C1B6                     u10085:
 34616  01C1B6  8ED2               	bsf	16338,7,c	;volatile
 34617  01C1B8                     u10086:
 34618                           
 34619                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 34620  01C1B8  0139               	movlb	57	; () banked
 34621  01C1BA  8782               	bsf	130,3,b	;volatile
 34622                           
 34623                           ; BSR set to: 57
 34624                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 34625  01C1BC  8382               	bsf	130,1,b	;volatile
 34626                           
 34627                           ; BSR set to: 57
 34628                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 34629  01C1BE  8182               	bsf	130,0,b	;volatile
 34630                           
 34631                           ; BSR set to: 57
 34632                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 34633  01C1C0  8582               	bsf	130,2,b	;volatile
 34634                           
 34635                           ; BSR set to: 57
 34636                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 34637  01C1C2  8786               	bsf	134,3,b	;volatile
 34638                           
 34639                           ; BSR set to: 57
 34640                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 34641  01C1C4  8586               	bsf	134,2,b	;volatile
 34642                           
 34643                           ; BSR set to: 57
 34644                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 34645  01C1C6  8783               	bsf	131,3,b	;volatile
 34646                           
 34647                           ; BSR set to: 57
 34648                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 34649  01C1C8  8181               	bsf	129,0,b	;volatile
 34650                           
 34651                           ; BSR set to: 57
 34652                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 34653  01C1CA  9185               	bcf	133,0,b	;volatile
 34654                           
 34655                           ; BSR set to: 57
 34656                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 34657  01C1CC  8189               	bsf	137,0,b	;volatile
 34658                           
 34659                           ; BSR set to: 57
 34660                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 34661  01C1CE  9D88               	bcf	136,6,b	;volatile
 34662                           
 34663                           ; BSR set to: 57
 34664                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 34665  01C1D0  9D86               	bcf	134,6,b	;volatile
 34666                           
 34667                           ; BSR set to: 57
 34668                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 34669  01C1D2  8581               	bsf	129,2,b	;volatile
 34670                           
 34671                           ; BSR set to: 57
 34672                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 34673  01C1D4  8781               	bsf	129,3,b	;volatile
 34674                           
 34675                           ; BSR set to: 57
 34676                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 34677  01C1D6  52E5               	movf	postdec1,f,c
 34678  01C1D8  0012               	return		;funcret
 34679  01C1DA                     __end_of_INTERRUPT_Initialize:
 34680                           	opt callstack 0
 34681                           
 34682 ;; *************** function _FVR_Initialize *****************
 34683 ;; Defined at:
 34684 ;;		line 58 in file "mcc_generated_files/fvr.c"
 34685 ;; Parameters:    Size  Location     Type
 34686 ;;		None
 34687 ;; Auto vars:     Size  Location     Type
 34688 ;;		None
 34689 ;; Return value:  Size  Location     Type
 34690 ;;                  1  [STACK] void 
 34691 ;; Registers used:
 34692 ;;		wreg, status,2
 34693 ;; Tracked objects:
 34694 ;;		On entry : 3F/39
 34695 ;;		On exit  : 3F/3E
 34696 ;;		Unchanged: 0/0
 34697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34702 ;;Total ram usage:        0 bytes
 34703 ;; Hardware stack levels used:    1
 34704 ;; Hardware stack levels required when called:   15
 34705 ;; This function calls:
 34706 ;;		Nothing
 34707 ;; This function is called by:
 34708 ;;		_SYSTEM_Initialize
 34709 ;; This function uses a reentrant model
 34710 ;;
 34711                           
 34712                           	psect	text146
 34713  01D3B6                     __ptext146:
 34714                           	opt callstack 0
 34715  01D3B6                     _FVR_Initialize:
 34716                           	opt callstack 14
 34717                           
 34718                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 34719                           
 34720                           ; BSR set to: 57
 34721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34722                           ;incstack = 0
 34723  01D3B6  0EAF               	movlw	175
 34724  01D3B8  013E               	movlb	62	; () banked
 34725  01D3BA  6FC1               	movwf	193,b	;volatile
 34726                           
 34727                           ; BSR set to: 62
 34728                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34729  01D3BC  0012               	return		;funcret
 34730  01D3BE                     __end_of_FVR_Initialize:
 34731                           	opt callstack 0
 34732                           
 34733 ;; *************** function _EXT_INT_Initialize *****************
 34734 ;; Defined at:
 34735 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 34736 ;; Parameters:    Size  Location     Type
 34737 ;;		None
 34738 ;; Auto vars:     Size  Location     Type
 34739 ;;		None
 34740 ;; Return value:  Size  Location     Type
 34741 ;;                  1  [STACK] void 
 34742 ;; Registers used:
 34743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34744 ;; Tracked objects:
 34745 ;;		On entry : 3F/39
 34746 ;;		On exit  : 3F/39
 34747 ;;		Unchanged: 0/0
 34748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34753 ;;Total ram usage:        0 bytes
 34754 ;; Hardware stack levels used:    1
 34755 ;; Hardware stack levels required when called:   16
 34756 ;; This function calls:
 34757 ;;		_INT0_SetInterruptHandler
 34758 ;;		_INT1_SetInterruptHandler
 34759 ;; This function is called by:
 34760 ;;		_SYSTEM_Initialize
 34761 ;; This function uses a reentrant model
 34762 ;;
 34763                           
 34764                           	psect	text147
 34765  01CB60                     __ptext147:
 34766                           	opt callstack 0
 34767  01CB60                     _EXT_INT_Initialize:
 34768                           	opt callstack 13
 34769                           
 34770                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 34771                           
 34772                           ; BSR set to: 62
 34773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34774                           ;incstack = 0
 34775  01CB60  0139               	movlb	57	; () banked
 34776  01CB62  91A1               	bcf	161,0,b	;volatile
 34777                           
 34778                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 34779  01CB64  90D2               	bcf	210,0,c	;volatile
 34780                           
 34781                           ; BSR set to: 57
 34782                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 34783  01CB66  0EE6               	movlw	low _INT0_DefaultInterruptHandler
 34784  01CB68  6EE6               	movwf	postinc1,c
 34785  01CB6A  0ED3               	movlw	high _INT0_DefaultInterruptHandler
 34786  01CB6C  6EE6               	movwf	postinc1,c
 34787  01CB6E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 34788  01CB70  6EE6               	movwf	postinc1,c
 34789  01CB72  EC65  F0E7         	call	_INT0_SetInterruptHandler	;wreg free
 34790                           
 34791                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 34792  01CB76  0139               	movlb	57	; () banked
 34793  01CB78  8191               	bsf	145,0,b	;volatile
 34794                           
 34795                           ; BSR set to: 57
 34796                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 34797  01CB7A  91A5               	bcf	165,0,b	;volatile
 34798                           
 34799                           ; BSR set to: 57
 34800                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 34801  01CB7C  92D2               	bcf	210,1,c	;volatile
 34802                           
 34803                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 34804  01CB7E  0EE2               	movlw	low _INT1_DefaultInterruptHandler
 34805  01CB80  6EE6               	movwf	postinc1,c
 34806  01CB82  0ED3               	movlw	high _INT1_DefaultInterruptHandler
 34807  01CB84  6EE6               	movwf	postinc1,c
 34808  01CB86  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 34809  01CB88  6EE6               	movwf	postinc1,c
 34810  01CB8A  EC51  F0E7         	call	_INT1_SetInterruptHandler	;wreg free
 34811                           
 34812                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 34813  01CB8E  0139               	movlb	57	; () banked
 34814  01CB90  8195               	bsf	149,0,b	;volatile
 34815                           
 34816                           ; BSR set to: 57
 34817                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34818  01CB92  0012               	return		;funcret
 34819  01CB94                     __end_of_EXT_INT_Initialize:
 34820                           	opt callstack 0
 34821                           
 34822 ;; *************** function _INT1_SetInterruptHandler *****************
 34823 ;; Defined at:
 34824 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 34825 ;; Parameters:    Size  Location     Type
 34826 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34827 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 34828 ;; Auto vars:     Size  Location     Type
 34829 ;;		None
 34830 ;; Return value:  Size  Location     Type
 34831 ;;                  1  [STACK] void 
 34832 ;; Registers used:
 34833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34834 ;; Tracked objects:
 34835 ;;		On entry : 3F/39
 34836 ;;		On exit  : 0/0
 34837 ;;		Unchanged: 0/0
 34838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34843 ;;Total ram usage:        0 bytes
 34844 ;; Hardware stack levels used:    1
 34845 ;; Hardware stack levels required when called:   15
 34846 ;; This function calls:
 34847 ;;		Nothing
 34848 ;; This function is called by:
 34849 ;;		_EXT_INT_Initialize
 34850 ;;		_start_switch_handler
 34851 ;; This function uses a reentrant model
 34852 ;;
 34853                           
 34854                           	psect	text148
 34855  01CEA2                     __ptext148:
 34856                           	opt callstack 0
 34857  01CEA2                     _INT1_SetInterruptHandler:
 34858                           	opt callstack 14
 34859                           
 34860                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 34861                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34862                           
 34863                           ; BSR set to: 57
 34864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34865                           ;incstack = 0
 34866  01CEA2  50E1               	movf	fsr1l,w,c
 34867  01CEA4  0FFD               	addlw	-3
 34868  01CEA6  6ED9               	movwf	fsr2l,c
 34869  01CEA8  50E2               	movf	fsr1h,w,c
 34870  01CEAA  6EDA               	movwf	fsr2h,c
 34871  01CEAC  0EFF               	movlw	255
 34872  01CEAE  22DA               	addwfc	fsr2h,f,c
 34873  01CEB0  006F FF78  F090    	movff	postinc2,_INT1_InterruptHandler
 34874  01CEB6  006F FF78  F091    	movff	postinc2,_INT1_InterruptHandler+1
 34875  01CEBC  006F FF74  F092    	movff	postdec2,_INT1_InterruptHandler+2
 34876                           
 34877                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34878  01CEC2  52E5               	movf	postdec1,f,c
 34879  01CEC4  52E5               	movf	postdec1,f,c
 34880  01CEC6  52E5               	movf	postdec1,f,c
 34881  01CEC8  0012               	return		;funcret
 34882  01CECA                     __end_of_INT1_SetInterruptHandler:
 34883                           	opt callstack 0
 34884                           
 34885 ;; *************** function _INT0_SetInterruptHandler *****************
 34886 ;; Defined at:
 34887 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 34888 ;; Parameters:    Size  Location     Type
 34889 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34890 ;;		 -> INT0_DefaultInterruptHandler(1), 
 34891 ;; Auto vars:     Size  Location     Type
 34892 ;;		None
 34893 ;; Return value:  Size  Location     Type
 34894 ;;                  1  [STACK] void 
 34895 ;; Registers used:
 34896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34897 ;; Tracked objects:
 34898 ;;		On entry : 3F/39
 34899 ;;		On exit  : 0/0
 34900 ;;		Unchanged: 0/0
 34901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34906 ;;Total ram usage:        0 bytes
 34907 ;; Hardware stack levels used:    1
 34908 ;; Hardware stack levels required when called:   15
 34909 ;; This function calls:
 34910 ;;		Nothing
 34911 ;; This function is called by:
 34912 ;;		_EXT_INT_Initialize
 34913 ;; This function uses a reentrant model
 34914 ;;
 34915                           
 34916                           	psect	text149
 34917  01CECA                     __ptext149:
 34918                           	opt callstack 0
 34919  01CECA                     _INT0_SetInterruptHandler:
 34920                           	opt callstack 13
 34921                           
 34922                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 34923                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34924                           
 34925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34926                           ;incstack = 0
 34927  01CECA  50E1               	movf	fsr1l,w,c
 34928  01CECC  0FFD               	addlw	-3
 34929  01CECE  6ED9               	movwf	fsr2l,c
 34930  01CED0  50E2               	movf	fsr1h,w,c
 34931  01CED2  6EDA               	movwf	fsr2h,c
 34932  01CED4  0EFF               	movlw	255
 34933  01CED6  22DA               	addwfc	fsr2h,f,c
 34934  01CED8  006F FF78  F093    	movff	postinc2,_INT0_InterruptHandler
 34935  01CEDE  006F FF78  F094    	movff	postinc2,_INT0_InterruptHandler+1
 34936  01CEE4  006F FF74  F095    	movff	postdec2,_INT0_InterruptHandler+2
 34937                           
 34938                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34939  01CEEA  52E5               	movf	postdec1,f,c
 34940  01CEEC  52E5               	movf	postdec1,f,c
 34941  01CEEE  52E5               	movf	postdec1,f,c
 34942  01CEF0  0012               	return		;funcret
 34943  01CEF2                     __end_of_INT0_SetInterruptHandler:
 34944                           	opt callstack 0
 34945                           
 34946 ;; *************** function _DMA2_Initialize *****************
 34947 ;; Defined at:
 34948 ;;		line 61 in file "mcc_generated_files/dma2.c"
 34949 ;; Parameters:    Size  Location     Type
 34950 ;;		None
 34951 ;; Auto vars:     Size  Location     Type
 34952 ;;		None
 34953 ;; Return value:  Size  Location     Type
 34954 ;;                  1  [STACK] void 
 34955 ;; Registers used:
 34956 ;;		wreg, status,2
 34957 ;; Tracked objects:
 34958 ;;		On entry : 3F/3D
 34959 ;;		On exit  : 3F/3B
 34960 ;;		Unchanged: 0/0
 34961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34966 ;;Total ram usage:        0 bytes
 34967 ;; Hardware stack levels used:    1
 34968 ;; Hardware stack levels required when called:   15
 34969 ;; This function calls:
 34970 ;;		Nothing
 34971 ;; This function is called by:
 34972 ;;		_SYSTEM_Initialize
 34973 ;; This function uses a reentrant model
 34974 ;;
 34975                           
 34976                           	psect	text150
 34977  01C416                     __ptext150:
 34978                           	opt callstack 0
 34979  01C416                     _DMA2_Initialize:
 34980                           	opt callstack 14
 34981                           
 34982                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 34983                           
 34984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34985                           ;incstack = 0
 34986  01C416  0E00               	movlw	0
 34987  01C418  013B               	movlb	59	; () banked
 34988  01C41A  6FD9               	movwf	217,b	;volatile
 34989  01C41C  0E10               	movlw	16
 34990  01C41E  6FDA               	movwf	218,b	;volatile
 34991  01C420  0E00               	movlw	0
 34992  01C422  6FDB               	movwf	219,b	;volatile
 34993                           
 34994                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 34995  01C424  0E3F               	movlw	63
 34996  01C426  6FD1               	movwf	209,b	;volatile
 34997  01C428  0EBB               	movlw	187
 34998  01C42A  6FD0               	movwf	208,b	;volatile
 34999                           
 35000                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 35001  01C42C  0E03               	movlw	3
 35002  01C42E  6FDD               	movwf	221,b	;volatile
 35003                           
 35004                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 35005  01C430  0E00               	movlw	0
 35006  01C432  6FD8               	movwf	216,b	;volatile
 35007  01C434  0E01               	movlw	1
 35008  01C436  6FD7               	movwf	215,b	;volatile
 35009                           
 35010                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 35011  01C438  0E00               	movlw	0
 35012  01C43A  6FCF               	movwf	207,b	;volatile
 35013  01C43C  0E01               	movlw	1
 35014  01C43E  6FCE               	movwf	206,b	;volatile
 35015                           
 35016                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 35017  01C440  0E1C               	movlw	28
 35018  01C442  6FDF               	movwf	223,b	;volatile
 35019                           
 35020                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 35021  01C444  0E3D               	movlw	61
 35022  01C446  6FDE               	movwf	222,b	;volatile
 35023                           
 35024                           ; BSR set to: 59
 35025                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 35026  01C448  0139               	movlb	57	; () banked
 35027  01C44A  97A5               	bcf	165,3,b	;volatile
 35028                           
 35029                           ; BSR set to: 57
 35030                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 35031  01C44C  95A5               	bcf	165,2,b	;volatile
 35032                           
 35033                           ; BSR set to: 57
 35034                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 35035  01C44E  9BA5               	bcf	165,5,b	;volatile
 35036                           
 35037                           ; BSR set to: 57
 35038                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 35039  01C450  99A5               	bcf	165,4,b	;volatile
 35040                           
 35041                           ; BSR set to: 57
 35042                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 35043  01C452  9795               	bcf	149,3,b	;volatile
 35044                           
 35045                           ; BSR set to: 57
 35046                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 35047  01C454  9595               	bcf	149,2,b	;volatile
 35048                           
 35049                           ; BSR set to: 57
 35050                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 35051  01C456  9B95               	bcf	149,5,b	;volatile
 35052                           
 35053                           ; BSR set to: 57
 35054                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 35055  01C458  9995               	bcf	149,4,b	;volatile
 35056  01C45A  9ED2               	bcf	16338,7,c	;# 
 35057  01C45C  0139               	banksel	14831	;# 
 35058  01C45E  0E55               	movlw	85	;# 
 35059  01C460  6FEF               	movwf	14831,b	;# 
 35060  01C462  0EAA               	movlw	170	;# 
 35061  01C464  6FEF               	movwf	14831,b	;# 
 35062  01C466  81EF               	bsf	14831,0,b	;# 
 35063  01C468  8ED2               	bsf	16338,7,c	;# 
 35064                           
 35065                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 35066  01C46A  013B               	movlb	59	; () banked
 35067  01C46C  6BDC               	clrf	220,b	;volatile
 35068                           
 35069                           ; BSR set to: 59
 35070                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35071  01C46E  0012               	return		;funcret
 35072  01C470                     __end_of_DMA2_Initialize:
 35073                           	opt callstack 0
 35074                           
 35075 ;; *************** function _DMA1_Initialize *****************
 35076 ;; Defined at:
 35077 ;;		line 86 in file "mcc_generated_files/dma1.c"
 35078 ;; Parameters:    Size  Location     Type
 35079 ;;		None
 35080 ;; Auto vars:     Size  Location     Type
 35081 ;;		None
 35082 ;; Return value:  Size  Location     Type
 35083 ;;                  1  [STACK] void 
 35084 ;; Registers used:
 35085 ;;		wreg, status,2
 35086 ;; Tracked objects:
 35087 ;;		On entry : 3F/3B
 35088 ;;		On exit  : 3F/3B
 35089 ;;		Unchanged: 0/0
 35090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35095 ;;Total ram usage:        0 bytes
 35096 ;; Hardware stack levels used:    1
 35097 ;; Hardware stack levels required when called:   15
 35098 ;; This function calls:
 35099 ;;		Nothing
 35100 ;; This function is called by:
 35101 ;;		_SYSTEM_Initialize
 35102 ;; This function uses a reentrant model
 35103 ;;
 35104                           
 35105                           	psect	text151
 35106  01BF66                     __ptext151:
 35107                           	opt callstack 0
 35108  01BF66                     _DMA1_Initialize:
 35109                           	opt callstack 14
 35110                           
 35111                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 35112                           
 35113                           ; BSR set to: 59
 35114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35115                           ;incstack = 0
 35116  01BF66  0E00               	movlw	0
 35117  01BF68  013B               	movlb	59	; () banked
 35118  01BF6A  6FF9               	movwf	249,b	;volatile
 35119  01BF6C  0E10               	movlw	16
 35120  01BF6E  6FFA               	movwf	250,b	;volatile
 35121  01BF70  0E00               	movlw	0
 35122  01BF72  6FFB               	movwf	251,b	;volatile
 35123                           
 35124                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 35125  01BF74  0E3D               	movlw	61
 35126  01BF76  6FF1               	movwf	241,b	;volatile
 35127  01BF78  0E11               	movlw	17
 35128  01BF7A  6FF0               	movwf	240,b	;volatile
 35129                           
 35130                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 35131  01BF7C  0E03               	movlw	3
 35132  01BF7E  6FFD               	movwf	253,b	;volatile
 35133                           
 35134                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 35135  01BF80  0E00               	movlw	0
 35136  01BF82  6FF8               	movwf	248,b	;volatile
 35137  01BF84  0E01               	movlw	1
 35138  01BF86  6FF7               	movwf	247,b	;volatile
 35139                           
 35140                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 35141  01BF88  0E00               	movlw	0
 35142  01BF8A  6FEF               	movwf	239,b	;volatile
 35143  01BF8C  0E01               	movlw	1
 35144  01BF8E  6FEE               	movwf	238,b	;volatile
 35145                           
 35146                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 35147  01BF90  0E15               	movlw	21
 35148  01BF92  6FFF               	movwf	255,b	;volatile
 35149                           
 35150                           ; BSR set to: 59
 35151                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 35152  01BF94  6BFE               	clrf	254,b	;volatile
 35153                           
 35154                           ; BSR set to: 59
 35155                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 35156  01BF96  0139               	movlb	57	; () banked
 35157  01BF98  93A2               	bcf	162,1,b	;volatile
 35158                           
 35159                           ; BSR set to: 57
 35160                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 35161  01BF9A  91A2               	bcf	162,0,b	;volatile
 35162                           
 35163                           ; BSR set to: 57
 35164                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 35165  01BF9C  97A2               	bcf	162,3,b	;volatile
 35166                           
 35167                           ; BSR set to: 57
 35168                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 35169  01BF9E  95A2               	bcf	162,2,b	;volatile
 35170                           
 35171                           ; BSR set to: 57
 35172                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 35173  01BFA0  8392               	bsf	146,1,b	;volatile
 35174                           
 35175                           ; BSR set to: 57
 35176                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 35177  01BFA2  8192               	bsf	146,0,b	;volatile
 35178                           
 35179                           ; BSR set to: 57
 35180                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 35181  01BFA4  8792               	bsf	146,3,b	;volatile
 35182                           
 35183                           ; BSR set to: 57
 35184                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 35185  01BFA6  8592               	bsf	146,2,b	;volatile
 35186                           
 35187                           ; BSR set to: 57
 35188                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 35189  01BFA8  6BF1               	clrf	241,b	;volatile
 35190                           
 35191                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 35192  01BFAA  0E01               	movlw	1
 35193  01BFAC  6FF2               	movwf	242,b	;volatile
 35194                           
 35195                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 35196  01BFAE  0E04               	movlw	4
 35197  01BFB0  6FF3               	movwf	243,b	;volatile
 35198                           
 35199                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 35200  01BFB2  0E02               	movlw	2
 35201  01BFB4  6FF4               	movwf	244,b	;volatile
 35202                           
 35203                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 35204  01BFB6  0E03               	movlw	3
 35205  01BFB8  6FF7               	movwf	247,b	;volatile
 35206  01BFBA  9ED2               	bcf	16338,7,c	;# 
 35207  01BFBC  0139               	banksel	14831	;# 
 35208  01BFBE  0E55               	movlw	85	;# 
 35209  01BFC0  6FEF               	movwf	14831,b	;# 
 35210  01BFC2  0EAA               	movlw	170	;# 
 35211  01BFC4  6FEF               	movwf	14831,b	;# 
 35212  01BFC6  81EF               	bsf	14831,0,b	;# 
 35213  01BFC8  8ED2               	bsf	16338,7,c	;# 
 35214                           
 35215                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 35216  01BFCA  013B               	movlb	59	; () banked
 35217  01BFCC  6BFC               	clrf	252,b	;volatile
 35218                           
 35219                           ; BSR set to: 59
 35220                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35221  01BFCE  0012               	return		;funcret
 35222  01BFD0                     __end_of_DMA1_Initialize:
 35223                           	opt callstack 0
 35224                           
 35225 ;; *************** function _CRC_Initialize *****************
 35226 ;; Defined at:
 35227 ;;		line 76 in file "mcc_generated_files/crc.c"
 35228 ;; Parameters:    Size  Location     Type
 35229 ;;		None
 35230 ;; Auto vars:     Size  Location     Type
 35231 ;;  seed            2  [STACK] unsigned short 
 35232 ;;  poly            2  [STACK] unsigned short 
 35233 ;; Return value:  Size  Location     Type
 35234 ;;                  1  [STACK] void 
 35235 ;; Registers used:
 35236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 35237 ;; Tracked objects:
 35238 ;;		On entry : 0/39
 35239 ;;		On exit  : 3F/0
 35240 ;;		Unchanged: 0/0
 35241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35246 ;;Total ram usage:        0 bytes
 35247 ;; Hardware stack levels used:    1
 35248 ;; Hardware stack levels required when called:   15
 35249 ;; This function calls:
 35250 ;;		Nothing
 35251 ;; This function is called by:
 35252 ;;		_SYSTEM_Initialize
 35253 ;;		_read_cal_data
 35254 ;;		_write_cal_data
 35255 ;; This function uses a reentrant model
 35256 ;;
 35257                           
 35258                           	psect	text152
 35259  01BA54                     __ptext152:
 35260                           	opt callstack 0
 35261  01BA54                     _CRC_Initialize:
 35262                           	opt callstack 0
 35263                           
 35264                           ; BSR set to: 59
 35265                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35266  01BA54  52E6               	movf	postinc1,f,c
 35267  01BA56  52E6               	movf	postinc1,f,c
 35268  01BA58  52E6               	movf	postinc1,f,c
 35269  01BA5A  52E6               	movf	postinc1,f,c
 35270                           
 35271                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 35272                           
 35273                           ;incstack = 0
 35274  01BA5C  0E80               	movlw	128
 35275  01BA5E  0139               	movlb	57	; () banked
 35276  01BA60  6F68               	movwf	104,b	;volatile
 35277                           
 35278                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 35279  01BA62  0E07               	movlw	7
 35280  01BA64  6F69               	movwf	105,b	;volatile
 35281                           
 35282                           ; BSR set to: 57
 35283                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 35284  01BA66  6B62               	clrf	98,b	;volatile
 35285                           
 35286                           ; BSR set to: 57
 35287                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 35288  01BA68  6B63               	clrf	99,b	;volatile
 35289                           
 35290                           ; BSR set to: 57
 35291                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 35292  01BA6A  6B7C               	clrf	124,b	;volatile
 35293                           
 35294                           ; BSR set to: 57
 35295                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 35296  01BA6C  6B78               	clrf	120,b	;volatile
 35297                           
 35298                           ; BSR set to: 57
 35299                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 35300  01BA6E  6B77               	clrf	119,b	;volatile
 35301                           
 35302                           ; BSR set to: 57
 35303                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 35304  01BA70  6B76               	clrf	118,b	;volatile
 35305                           
 35306                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 35307  01BA72  0E3F               	movlw	63
 35308  01BA74  6F7B               	movwf	123,b	;volatile
 35309                           
 35310                           ; BSR set to: 57
 35311                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 35312  01BA76  697A               	setf	122,b	;volatile
 35313                           
 35314                           ; BSR set to: 57
 35315                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 35316  01BA78  6979               	setf	121,b	;volatile
 35317                           
 35318                           ; BSR set to: 57
 35319                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 35320  01BA7A  6B7D               	clrf	125,b	;volatile
 35321                           
 35322                           ; BSR set to: 57
 35323                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 35324  01BA7C  0ED5               	movlw	213
 35325  01BA7E  6E0B               	movwf	(btemp+10)^0,c
 35326  01BA80  0E00               	movlw	0
 35327  01BA82  6E0C               	movwf	(btemp+11)^0,c
 35328                           
 35329                           ;stkvar	_poly @ sp[(-4)+2]
 35330  01BA84  0EFE               	movlw	-2
 35331  01BA86  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35332  01BA8C  0EFF               	movlw	-1
 35333  01BA8E  0060  F033  FFE3   	movff	btemp+11,plusw1
 35334                           
 35335                           ; BSR set to: 57
 35336                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 35337                           ;stkvar	_poly @ sp[(-4)+2]
 35338  01BA94  0EFF               	movlw	255
 35339  01BA96  24E1               	addwf	fsr1l,w,c
 35340  01BA98  6ED9               	movwf	fsr2l,c
 35341  01BA9A  0EFF               	movlw	255
 35342  01BA9C  20E2               	addwfc	fsr1h,w,c
 35343  01BA9E  6EDA               	movwf	fsr2h,c
 35344  01BAA0  50DF               	movf	indf2,w,c
 35345  01BAA2  6F67               	movwf	103,b	;volatile
 35346                           
 35347                           ; BSR set to: 57
 35348                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 35349  01BAA4  0ED5               	movlw	213
 35350  01BAA6  6F66               	movwf	102,b	;volatile
 35351                           
 35352                           ; BSR set to: 57
 35353                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 35354                           ;stkvar	_seed @ sp[(-4)+0]
 35355  01BAA8  0EFC               	movlw	-4
 35356  01BAAA  6AE3               	clrf	plusw1,c
 35357  01BAAC  0EFD               	movlw	-3
 35358  01BAAE  6AE3               	clrf	plusw1,c
 35359                           
 35360                           ; BSR set to: 57
 35361                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 35362                           ;stkvar	_seed @ sp[(-4)+0]
 35363  01BAB0  0EFD               	movlw	253
 35364  01BAB2  24E1               	addwf	fsr1l,w,c
 35365  01BAB4  6ED9               	movwf	fsr2l,c
 35366  01BAB6  0EFF               	movlw	255
 35367  01BAB8  20E2               	addwfc	fsr1h,w,c
 35368  01BABA  6EDA               	movwf	fsr2h,c
 35369  01BABC  50DF               	movf	indf2,w,c
 35370  01BABE  6F63               	movwf	99,b	;volatile
 35371                           
 35372                           ; BSR set to: 57
 35373                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 35374  01BAC0  6B62               	clrf	98,b	;volatile
 35375                           
 35376                           ; BSR set to: 57
 35377                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 35378  01BAC2  3969               	swapf	105,w,b	;volatile
 35379  01BAC4  0B0F               	andlw	15
 35380  01BAC6  6E0C               	movwf	(btemp+11)^0,c
 35381  01BAC8  280C               	incf	(btemp+11)^0,w,c
 35382  01BACA  0100               	movlb	0	; () banked
 35383  01BACC  6FAB               	movwf	_crcObj& (0+255),b
 35384                           
 35385                           ; BSR set to: 0
 35386                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 35387  01BACE  0139               	movlb	57	; () banked
 35388  01BAD0  5169               	movf	105,w,b	;volatile
 35389  01BAD2  0B0F               	andlw	15
 35390  01BAD4  6E0C               	movwf	(btemp+11)^0,c
 35391  01BAD6  280C               	incf	(btemp+11)^0,w,c
 35392  01BAD8  0100               	movlb	0	; () banked
 35393  01BADA  6FAC               	movwf	(_crcObj+1)& (0+255),b
 35394                           
 35395                           ; BSR set to: 0
 35396                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35397  01BADC  52E5               	movf	postdec1,f,c
 35398  01BADE  52E5               	movf	postdec1,f,c
 35399  01BAE0  52E5               	movf	postdec1,f,c
 35400  01BAE2  52E5               	movf	postdec1,f,c
 35401  01BAE4  0012               	return		;funcret
 35402  01BAE6                     __end_of_CRC_Initialize:
 35403                           	opt callstack 0
 35404                           
 35405 ;; *************** function _CLKREF_Initialize *****************
 35406 ;; Defined at:
 35407 ;;		line 58 in file "mcc_generated_files/clkref.c"
 35408 ;; Parameters:    Size  Location     Type
 35409 ;;		None
 35410 ;; Auto vars:     Size  Location     Type
 35411 ;;		None
 35412 ;; Return value:  Size  Location     Type
 35413 ;;                  1  [STACK] void 
 35414 ;; Registers used:
 35415 ;;		wreg, status,2
 35416 ;; Tracked objects:
 35417 ;;		On entry : 3F/3B
 35418 ;;		On exit  : 3F/3C
 35419 ;;		Unchanged: 0/0
 35420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35425 ;;Total ram usage:        0 bytes
 35426 ;; Hardware stack levels used:    1
 35427 ;; Hardware stack levels required when called:   15
 35428 ;; This function calls:
 35429 ;;		Nothing
 35430 ;; This function is called by:
 35431 ;;		_SYSTEM_Initialize
 35432 ;; This function uses a reentrant model
 35433 ;;
 35434                           
 35435                           	psect	text153
 35436  01D35E                     __ptext153:
 35437                           	opt callstack 0
 35438  01D35E                     _CLKREF_Initialize:
 35439                           	opt callstack 14
 35440                           
 35441                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 35442                           
 35443                           ; BSR set to: 0
 35444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35445                           ;incstack = 0
 35446  01D35E  013C               	movlb	60	; () banked
 35447  01D360  6BE6               	clrf	230,b	;volatile
 35448                           
 35449                           ; BSR set to: 60
 35450                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 35451  01D362  0E94               	movlw	148
 35452  01D364  6FE5               	movwf	229,b	;volatile
 35453                           
 35454                           ; BSR set to: 60
 35455                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35456  01D366  0012               	return		;funcret
 35457  01D368                     __end_of_CLKREF_Initialize:
 35458                           	opt callstack 0
 35459                           
 35460 ;; *************** function _ADCC_Initialize *****************
 35461 ;; Defined at:
 35462 ;;		line 65 in file "mcc_generated_files/adcc.c"
 35463 ;; Parameters:    Size  Location     Type
 35464 ;;		None
 35465 ;; Auto vars:     Size  Location     Type
 35466 ;;		None
 35467 ;; Return value:  Size  Location     Type
 35468 ;;                  1  [STACK] void 
 35469 ;; Registers used:
 35470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35471 ;; Tracked objects:
 35472 ;;		On entry : 3F/0
 35473 ;;		On exit  : 0/0
 35474 ;;		Unchanged: 0/0
 35475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35480 ;;Total ram usage:        0 bytes
 35481 ;; Hardware stack levels used:    1
 35482 ;; Hardware stack levels required when called:   16
 35483 ;; This function calls:
 35484 ;;		_ADCC_SetADIInterruptHandler
 35485 ;;		_ADCC_SetADTIInterruptHandler
 35486 ;; This function is called by:
 35487 ;;		_SYSTEM_Initialize
 35488 ;; This function uses a reentrant model
 35489 ;;
 35490                           
 35491                           	psect	text154
 35492  01BFD0                     __ptext154:
 35493                           	opt callstack 0
 35494  01BFD0                     _ADCC_Initialize:
 35495                           	opt callstack 13
 35496                           
 35497                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 35498                           
 35499                           ; BSR set to: 60
 35500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35501                           ;incstack = 0
 35502  01BFD0  013E               	movlb	62	; () banked
 35503  01BFD2  6BDE               	clrf	222,b	;volatile
 35504                           
 35505                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 35506  01BFD4  6BDF               	clrf	223,b	;volatile
 35507                           
 35508                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 35509  01BFD6  6BE0               	clrf	224,b	;volatile
 35510                           
 35511                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 35512  01BFD8  6BE1               	clrf	225,b	;volatile
 35513                           
 35514                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 35515  01BFDA  6BE4               	clrf	228,b	;volatile
 35516                           
 35517                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 35518  01BFDC  6BE5               	clrf	229,b	;volatile
 35519                           
 35520                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 35521  01BFDE  6BEA               	clrf	234,b	;volatile
 35522                           
 35523                           ; BSR set to: 62
 35524                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 35525  01BFE0  0E40               	movlw	64
 35526  01BFE2  6FEC               	movwf	236,b	;volatile
 35527                           
 35528                           ; BSR set to: 62
 35529                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 35530  01BFE4  6BF1               	clrf	241,b	;volatile
 35531                           
 35532                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 35533  01BFE6  0E20               	movlw	32
 35534  01BFE8  6FF3               	movwf	243,b	;volatile
 35535                           
 35536                           ; BSR set to: 62
 35537                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 35538  01BFEA  6BF4               	clrf	244,b	;volatile
 35539                           
 35540                           ; BSR set to: 62
 35541                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 35542  01BFEC  6BF5               	clrf	245,b	;volatile
 35543                           
 35544                           ; BSR set to: 62
 35545                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 35546  01BFEE  6BF6               	clrf	246,b	;volatile
 35547                           
 35548                           ; BSR set to: 62
 35549                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 35550  01BFF0  6BF7               	clrf	247,b	;volatile
 35551                           
 35552                           ; BSR set to: 62
 35553                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 35554  01BFF2  6BF9               	clrf	249,b	;volatile
 35555                           
 35556                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 35557  01BFF4  0E5B               	movlw	91
 35558  01BFF6  6FFA               	movwf	250,b	;volatile
 35559                           
 35560                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 35561  01BFF8  0E27               	movlw	39
 35562  01BFFA  6FFB               	movwf	251,b	;volatile
 35563                           
 35564                           ; BSR set to: 62
 35565                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 35566  01BFFC  6BFC               	clrf	252,b	;volatile
 35567                           
 35568                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 35569  01BFFE  0E02               	movlw	2
 35570  01C000  6FFD               	movwf	253,b	;volatile
 35571                           
 35572                           ; BSR set to: 62
 35573                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 35574  01C002  6BFE               	clrf	254,b	;volatile
 35575                           
 35576                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 35577  01C004  0E07               	movlw	7
 35578  01C006  6FFF               	movwf	255,b	;volatile
 35579                           
 35580                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 35581  01C008  0E84               	movlw	132
 35582  01C00A  6FF8               	movwf	248,b	;volatile
 35583                           
 35584                           ; BSR set to: 62
 35585                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 35586  01C00C  0139               	movlb	57	; () banked
 35587  01C00E  95A1               	bcf	161,2,b	;volatile
 35588                           
 35589                           ; BSR set to: 57
 35590                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 35591  01C010  8591               	bsf	145,2,b	;volatile
 35592                           
 35593                           ; BSR set to: 57
 35594                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 35595  01C012  0EE8               	movlw	low _ADCC_DefaultInterruptHandler
 35596  01C014  6EE6               	movwf	postinc1,c
 35597  01C016  0ED3               	movlw	high _ADCC_DefaultInterruptHandler
 35598  01C018  6EE6               	movwf	postinc1,c
 35599  01C01A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35600  01C01C  6EE6               	movwf	postinc1,c
 35601  01C01E  EC8D  F0E7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 35602                           
 35603                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 35604  01C022  0139               	movlb	57	; () banked
 35605  01C024  97A1               	bcf	161,3,b	;volatile
 35606                           
 35607                           ; BSR set to: 57
 35608                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 35609  01C026  8791               	bsf	145,3,b	;volatile
 35610                           
 35611                           ; BSR set to: 57
 35612                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 35613  01C028  0EE8               	movlw	low _ADCC_DefaultInterruptHandler
 35614  01C02A  6EE6               	movwf	postinc1,c
 35615  01C02C  0ED3               	movlw	high _ADCC_DefaultInterruptHandler
 35616  01C02E  6EE6               	movwf	postinc1,c
 35617  01C030  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35618  01C032  6EE6               	movwf	postinc1,c
 35619  01C034  EC79  F0E7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 35620                           
 35621                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35622  01C038  0012               	return		;funcret
 35623  01C03A                     __end_of_ADCC_Initialize:
 35624                           	opt callstack 0
 35625                           
 35626 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 35627 ;; Defined at:
 35628 ;;		line 336 in file "mcc_generated_files/adcc.c"
 35629 ;; Parameters:    Size  Location     Type
 35630 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35631 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 35632 ;; Auto vars:     Size  Location     Type
 35633 ;;		None
 35634 ;; Return value:  Size  Location     Type
 35635 ;;                  1  [STACK] void 
 35636 ;; Registers used:
 35637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35638 ;; Tracked objects:
 35639 ;;		On entry : 0/0
 35640 ;;		On exit  : 0/0
 35641 ;;		Unchanged: 0/0
 35642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35647 ;;Total ram usage:        0 bytes
 35648 ;; Hardware stack levels used:    1
 35649 ;; Hardware stack levels required when called:   15
 35650 ;; This function calls:
 35651 ;;		Nothing
 35652 ;; This function is called by:
 35653 ;;		_ADCC_Initialize
 35654 ;;		_start_adc_scan
 35655 ;; This function uses a reentrant model
 35656 ;;
 35657                           
 35658                           	psect	text155
 35659  01CEF2                     __ptext155:
 35660                           	opt callstack 0
 35661  01CEF2                     _ADCC_SetADTIInterruptHandler:
 35662                           	opt callstack 14
 35663                           
 35664                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 35665                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35666                           
 35667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35668                           ;incstack = 0
 35669  01CEF2  50E1               	movf	fsr1l,w,c
 35670  01CEF4  0FFD               	addlw	-3
 35671  01CEF6  6ED9               	movwf	fsr2l,c
 35672  01CEF8  50E2               	movf	fsr1h,w,c
 35673  01CEFA  6EDA               	movwf	fsr2h,c
 35674  01CEFC  0EFF               	movlw	255
 35675  01CEFE  22DA               	addwfc	fsr2h,f,c
 35676  01CF00  006F FF78  F081    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 35677  01CF06  006F FF78  F082    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 35678  01CF0C  006F FF74  F083    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 35679                           
 35680                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 35681  01CF12  52E5               	movf	postdec1,f,c
 35682  01CF14  52E5               	movf	postdec1,f,c
 35683  01CF16  52E5               	movf	postdec1,f,c
 35684  01CF18  0012               	return		;funcret
 35685  01CF1A                     __end_of_ADCC_SetADTIInterruptHandler:
 35686                           	opt callstack 0
 35687                           
 35688 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 35689 ;; Defined at:
 35690 ;;		line 323 in file "mcc_generated_files/adcc.c"
 35691 ;; Parameters:    Size  Location     Type
 35692 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35693 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 35694 ;; Auto vars:     Size  Location     Type
 35695 ;;		None
 35696 ;; Return value:  Size  Location     Type
 35697 ;;                  1  [STACK] void 
 35698 ;; Registers used:
 35699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35700 ;; Tracked objects:
 35701 ;;		On entry : 6/0
 35702 ;;		On exit  : 0/0
 35703 ;;		Unchanged: 0/0
 35704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35709 ;;Total ram usage:        0 bytes
 35710 ;; Hardware stack levels used:    1
 35711 ;; Hardware stack levels required when called:   15
 35712 ;; This function calls:
 35713 ;;		Nothing
 35714 ;; This function is called by:
 35715 ;;		_ADCC_Initialize
 35716 ;;		_start_adc_scan
 35717 ;; This function uses a reentrant model
 35718 ;;
 35719                           
 35720                           	psect	text156
 35721  01CF1A                     __ptext156:
 35722                           	opt callstack 0
 35723  01CF1A                     _ADCC_SetADIInterruptHandler:
 35724                           	opt callstack 14
 35725                           
 35726                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 35727                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35728                           
 35729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35730                           ;incstack = 0
 35731  01CF1A  50E1               	movf	fsr1l,w,c
 35732  01CF1C  0FFD               	addlw	-3
 35733  01CF1E  6ED9               	movwf	fsr2l,c
 35734  01CF20  50E2               	movf	fsr1h,w,c
 35735  01CF22  6EDA               	movwf	fsr2h,c
 35736  01CF24  0EFF               	movlw	255
 35737  01CF26  22DA               	addwfc	fsr2h,f,c
 35738  01CF28  006F FF78  F084    	movff	postinc2,_ADCC_ADI_InterruptHandler
 35739  01CF2E  006F FF78  F085    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 35740  01CF34  006F FF74  F086    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 35741                           
 35742                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35743  01CF3A  52E5               	movf	postdec1,f,c
 35744  01CF3C  52E5               	movf	postdec1,f,c
 35745  01CF3E  52E5               	movf	postdec1,f,c
 35746  01CF40  0012               	return		;funcret
 35747  01CF42                     __end_of_ADCC_SetADIInterruptHandler:
 35748                           	opt callstack 0
 35749                           
 35750 ;; *************** function _INT1_ISR *****************
 35751 ;; Defined at:
 35752 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 35753 ;; Parameters:    Size  Location     Type
 35754 ;;		None
 35755 ;; Auto vars:     Size  Location     Type
 35756 ;;		None
 35757 ;; Return value:  Size  Location     Type
 35758 ;;                  1    wreg      void 
 35759 ;; Registers used:
 35760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 35761 ;; Tracked objects:
 35762 ;;		On entry : 0/0
 35763 ;;		On exit  : 0/0
 35764 ;;		Unchanged: 0/0
 35765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35770 ;;Total ram usage:        4 bytes
 35771 ;; Hardware stack levels used:    1
 35772 ;; Hardware stack levels required when called:    5
 35773 ;; This function calls:
 35774 ;;		_INT1_CallBack
 35775 ;; This function is called by:
 35776 ;;		Interrupt level 1
 35777 ;; This function uses a non-reentrant model
 35778 ;;
 35779                           
 35780                           	psect	text157
 35781  01C96C                     __ptext157:
 35782                           	opt callstack 0
 35783  01C96C                     _INT1_ISR:
 35784                           	opt callstack 11
 35785                           
 35786                           ;incstack = 0
 35787  01C96C  006F FF60  F027    	movff	status,??_INT1_ISR
 35788  01C972  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 35789  01C978  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 35790  01C97E  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 35791  01C984  EE16  F104         	lfsr	1,___intlo_sp
 35792                           
 35793                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 35794  01C988  0139               	movlb	57	; () banked
 35795  01C98A  91A5               	bcf	165,0,b	;volatile
 35796                           
 35797                           ; BSR set to: 57
 35798                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 35799  01C98C  ECF0  F0E7         	call	_INT1_CallBack	;wreg free
 35800  01C990  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 35801  01C996  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 35802  01C99C  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 35803  01C9A2  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 35804  01C9A8  0011               	retfie		f
 35805  01C9AA                     __end_of_INT1_ISR:
 35806                           	opt callstack 0
 35807                           
 35808 ;; *************** function _INT1_CallBack *****************
 35809 ;; Defined at:
 35810 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 35811 ;; Parameters:    Size  Location     Type
 35812 ;;		None
 35813 ;; Auto vars:     Size  Location     Type
 35814 ;;		None
 35815 ;; Return value:  Size  Location     Type
 35816 ;;                  1  [STACK] void 
 35817 ;; Registers used:
 35818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 35819 ;; Tracked objects:
 35820 ;;		On entry : 3F/39
 35821 ;;		On exit  : 0/0
 35822 ;;		Unchanged: 0/0
 35823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35828 ;;Total ram usage:        0 bytes
 35829 ;; Hardware stack levels used:    1
 35830 ;; Hardware stack levels required when called:    4
 35831 ;; This function calls:
 35832 ;;		Absolute function
 35833 ;;		_INT1_DefaultInterruptHandler
 35834 ;;		_switch_handler
 35835 ;; This function is called by:
 35836 ;;		_INT1_ISR
 35837 ;; This function uses a reentrant model
 35838 ;;
 35839                           
 35840                           	psect	text158
 35841  01CFE0                     __ptext158:
 35842                           	opt callstack 0
 35843  01CFE0                     _INT1_CallBack:
 35844                           	opt callstack 11
 35845                           
 35846                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 35847                           
 35848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35849                           ;incstack = 0
 35850  01CFE0  0100               	movlb	0	; () banked
 35851  01CFE2  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 35852  01CFE4  1191               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 35853  01CFE6  1192               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 35854  01CFE8  B4D8               	btfsc	status,2,c
 35855  01CFEA  0012               	return	
 35856                           
 35857                           ; BSR set to: 0
 35858                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 35859  01CFEC  D801               	call	u1077_28
 35860  01CFEE  0012               	return	
 35861  01CFF0                     u1077_28:
 35862  01CFF0  0005               	push	
 35863  01CFF2  6EFA               	movwf	pclath,c
 35864  01CFF4  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 35865  01CFF6  6EFD               	movwf	tosl,c
 35866  01CFF8  5191               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 35867  01CFFA  6EFE               	movwf	tosh,c
 35868  01CFFC  5192               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 35869  01CFFE  6EFF               	movwf	tosu,c
 35870  01D000  50FA               	movf	pclath,w,c
 35871  01D002  0012               	return		;indir
 35872  01D004                     __end_of_INT1_CallBack:
 35873                           	opt callstack 0
 35874                           
 35875 ;; *************** function _INT1_DefaultInterruptHandler *****************
 35876 ;; Defined at:
 35877 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 35878 ;; Parameters:    Size  Location     Type
 35879 ;;		None
 35880 ;; Auto vars:     Size  Location     Type
 35881 ;;		None
 35882 ;; Return value:  Size  Location     Type
 35883 ;;                  1  [STACK] void 
 35884 ;; Registers used:
 35885 ;;		None
 35886 ;; Tracked objects:
 35887 ;;		On entry : 3F/0
 35888 ;;		On exit  : 0/0
 35889 ;;		Unchanged: 0/0
 35890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35895 ;;Total ram usage:        0 bytes
 35896 ;; Hardware stack levels used:    1
 35897 ;; Hardware stack levels required when called:    3
 35898 ;; This function calls:
 35899 ;;		Nothing
 35900 ;; This function is called by:
 35901 ;;		_EXT_INT_Initialize
 35902 ;;		_INT1_CallBack
 35903 ;; This function uses a reentrant model
 35904 ;;
 35905                           
 35906                           	psect	text159
 35907  01D3E2                     __ptext159:
 35908                           	opt callstack 0
 35909  01D3E2                     _INT1_DefaultInterruptHandler:
 35910                           	opt callstack 11
 35911                           
 35912                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35913                           
 35914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35915                           ;incstack = 0
 35916  01D3E2  0012               	return		;funcret
 35917  01D3E4                     __end_of_INT1_DefaultInterruptHandler:
 35918                           	opt callstack 0
 35919                           
 35920 ;; *************** function _switch_handler *****************
 35921 ;; Defined at:
 35922 ;;		line 58 in file "dio.c"
 35923 ;; Parameters:    Size  Location     Type
 35924 ;;		None
 35925 ;; Auto vars:     Size  Location     Type
 35926 ;;  i               1  [STACK] unsigned char 
 35927 ;;  sw_value        1  [STACK] unsigned char 
 35928 ;; Return value:  Size  Location     Type
 35929 ;;                  1  [STACK] void 
 35930 ;; Registers used:
 35931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 35932 ;; Tracked objects:
 35933 ;;		On entry : 3F/0
 35934 ;;		On exit  : 0/0
 35935 ;;		Unchanged: 0/0
 35936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35941 ;;Total ram usage:        0 bytes
 35942 ;; Hardware stack levels used:    1
 35943 ;; Hardware stack levels required when called:    3
 35944 ;; This function calls:
 35945 ;;		Nothing
 35946 ;; This function is called by:
 35947 ;;		_start_switch_handler
 35948 ;;		_INT1_CallBack
 35949 ;; This function uses a reentrant model
 35950 ;;
 35951                           
 35952                           	psect	text160
 35953  019F14                     __ptext160:
 35954                           	opt callstack 0
 35955  019F14                     _switch_handler:
 35956                           	opt callstack 0
 35957                           
 35958                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35959  019F14  52E6               	movf	postinc1,f,c
 35960  019F16  52E6               	movf	postinc1,f,c
 35961                           
 35962                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 35963                           ;stkvar	_i @ sp[(-2)+0]
 35964                           
 35965                           ;incstack = 0
 35966  019F18  0EFE               	movlw	-2
 35967  019F1A  6AE3               	clrf	plusw1,c
 35968  019F1C  9ABF               	bcf	191,5,c	;volatile
 35969                           
 35970                           ;dio.c: 72:  __nop();
 35971  019F1E  F000               	nop	
 35972                           
 35973                           ;dio.c: 73:  __nop();
 35974  019F20  F000               	nop	
 35975                           
 35976                           ;dio.c: 74:  __nop();
 35977  019F22  F000               	nop	
 35978                           
 35979                           ;dio.c: 75:  __nop();
 35980  019F24  F000               	nop	
 35981                           
 35982                           ;dio.c: 76:  __nop();
 35983  019F26  F000               	nop	
 35984                           
 35985                           ;dio.c: 77:  __nop();
 35986  019F28  F000               	nop	
 35987  019F2A  D016               	goto	l11542
 35988  019F2C                     l11528:
 35989                           
 35990                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 35991  019F2C  A6CF               	btfss	207,3,c	;volatile
 35992  019F2E  D00E               	goto	u1043_20
 35993  019F30  D00A               	goto	u1043_21
 35994  019F32                     u1041_28:
 35995                           
 35996                           ;stkvar	_sw_value @ sp[(-2)+1]
 35997  019F32  0EFF               	movlw	-1
 35998  019F34  0060  F033  FFE3   	movff	btemp+11,plusw1
 35999                           
 36000                           ;dio.c: 83:    break;
 36001  019F3A  D027               	goto	l11544
 36002  019F3C                     l11530:
 36003                           
 36004                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 36005  019F3C  A4CF               	btfss	207,2,c	;volatile
 36006  019F3E  D006               	goto	u1043_20
 36007  019F40  D002               	goto	u1043_21
 36008  019F42                     l11532:
 36009                           
 36010                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 36011  019F42  A6CD               	btfss	205,3,c	;volatile
 36012  019F44  D003               	goto	u1043_20
 36013  019F46                     u1043_21:
 36014  019F46  6A0C               	clrf	(btemp+11)^0,c
 36015  019F48  2A0C               	incf	(btemp+11)^0,f,c
 36016  019F4A  D7F3               	goto	u1041_28
 36017  019F4C                     u1043_20:
 36018  019F4C  6A0C               	clrf	(btemp+11)^0,c
 36019  019F4E  D7F1               	goto	u1041_28
 36020  019F50                     l11534:
 36021                           
 36022                           ;dio.c: 91:    sw_value = 1;
 36023                           ;stkvar	_sw_value @ sp[(-2)+1]
 36024  019F50  0EFF               	movlw	-1
 36025  019F52  6AE3               	clrf	plusw1,c
 36026  019F54  2AE3               	incf	plusw1,f,c
 36027                           
 36028                           ;dio.c: 92:    break;
 36029  019F56  D019               	goto	l11544
 36030  019F58                     l11542:
 36031                           
 36032                           ;stkvar	_i @ sp[(-2)+0]
 36033  019F58  0EFE               	movlw	-2
 36034  019F5A  50E3               	movf	plusw1,w,c
 36035  019F5C  6E0B               	movwf	(btemp+10)^0,c
 36036  019F5E  6A0C               	clrf	(btemp+11)^0,c
 36037                           
 36038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36039                           ; Switch size 1, requested type "simple"
 36040                           ; Number of cases is 1, Range of values is 0 to 0
 36041                           ; switch strategies available:
 36042                           ; Name         Instructions Cycles
 36043                           ; simple_byte            4     3 (average)
 36044                           ;	Chosen strategy is simple_byte
 36045  019F60  500C               	movf	(btemp+11)^0,w,c
 36046  019F62  0A00               	xorlw	0	; case 0
 36047  019F64  A4D8               	btfss	status,2,c
 36048  019F66  D7F4               	goto	l11534
 36049                           
 36050                           ; Switch size 1, requested type "simple"
 36051                           ; Number of cases is 5, Range of values is 0 to 4
 36052                           ; switch strategies available:
 36053                           ; Name         Instructions Cycles
 36054                           ; simple_byte           16     9 (average)
 36055                           ;	Chosen strategy is simple_byte
 36056  019F68  500B               	movf	(btemp+10)^0,w,c
 36057  019F6A  0A00               	xorlw	0	; case 0
 36058  019F6C  B4D8               	btfsc	status,2,c
 36059  019F6E  D7F0               	goto	l11534
 36060  019F70  0A01               	xorlw	1	; case 1
 36061  019F72  B4D8               	btfsc	status,2,c
 36062  019F74  D7ED               	goto	l11534
 36063  019F76  0A03               	xorlw	3	; case 2
 36064  019F78  B4D8               	btfsc	status,2,c
 36065  019F7A  D7E0               	goto	l11530
 36066  019F7C  0A01               	xorlw	1	; case 3
 36067  019F7E  B4D8               	btfsc	status,2,c
 36068  019F80  D7D5               	goto	l11528
 36069  019F82  0A07               	xorlw	7	; case 4
 36070  019F84  B4D8               	btfsc	status,2,c
 36071  019F86  D7DD               	goto	l11532
 36072  019F88  D7E3               	goto	l11534
 36073  019F8A                     l11544:
 36074                           
 36075                           ;dio.c: 102:   if (sw_value) {
 36076                           ;stkvar	_sw_value @ sp[(-2)+1]
 36077  019F8A  0EFF               	movlw	-1
 36078  019F8C  50E3               	movf	plusw1,w,c
 36079  019F8E  B4D8               	btfsc	status,2,c
 36080  019F90  D018               	goto	l11550
 36081                           
 36082                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 36083                           ;stkvar	_i @ sp[(-2)+0]
 36084  019F92  0EFE               	movlw	-2
 36085  019F94  50E3               	movf	plusw1,w,c
 36086  019F96  0D05               	mullw	5
 36087  019F98  0E00               	movlw	low _S
 36088  019F9A  24F3               	addwf	243,w,c
 36089  019F9C  6ED9               	movwf	fsr2l,c
 36090  019F9E  0E02               	movlw	high _S
 36091  019FA0  20F4               	addwfc	prodh,w,c
 36092  019FA2  6EDA               	movwf	fsr2h,c
 36093  019FA4  04DE               	decf	postinc2,w,c
 36094  019FA6  A4D8               	btfss	status,2,c
 36095  019FA8  D049               	goto	l11558
 36096                           
 36097                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 36098                           ;stkvar	_i @ sp[(-2)+0]
 36099  019FAA  0EFE               	movlw	-2
 36100  019FAC  50E3               	movf	plusw1,w,c
 36101  019FAE  0D05               	mullw	5
 36102  019FB0  0E00               	movlw	low _S
 36103  019FB2  24F3               	addwf	243,w,c
 36104  019FB4  6ED9               	movwf	fsr2l,c
 36105  019FB6  0E02               	movlw	high _S
 36106  019FB8  20F4               	addwfc	prodh,w,c
 36107  019FBA  6EDA               	movwf	fsr2h,c
 36108  019FBC  0E00               	movlw	0
 36109  019FBE  6EDF               	movwf	indf2,c
 36110  019FC0  D03D               	goto	l11558
 36111  019FC2                     l11550:
 36112                           
 36113                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 36114                           ;stkvar	_i @ sp[(-2)+0]
 36115  019FC2  0EFE               	movlw	-2
 36116  019FC4  50E3               	movf	plusw1,w,c
 36117  019FC6  0D05               	mullw	5
 36118  019FC8  0E00               	movlw	low _S
 36119  019FCA  24F3               	addwf	243,w,c
 36120  019FCC  6ED9               	movwf	fsr2l,c
 36121  019FCE  0E02               	movlw	high _S
 36122  019FD0  20F4               	addwfc	prodh,w,c
 36123  019FD2  6EDA               	movwf	fsr2h,c
 36124  019FD4  50DF               	movf	indf2,w,c
 36125  019FD6  A4D8               	btfss	status,2,c
 36126  019FD8  D031               	goto	l11558
 36127                           
 36128                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 36129                           ;stkvar	_i @ sp[(-2)+0]
 36130  019FDA  0EFE               	movlw	-2
 36131  019FDC  50E3               	movf	plusw1,w,c
 36132  019FDE  0D05               	mullw	5
 36133  019FE0  0E00               	movlw	low _S
 36134  019FE2  24F3               	addwf	243,w,c
 36135  019FE4  6ED9               	movwf	fsr2l,c
 36136  019FE6  0E02               	movlw	high _S
 36137  019FE8  20F4               	addwfc	prodh,w,c
 36138  019FEA  6EDA               	movwf	fsr2h,c
 36139  019FEC  0E01               	movlw	1
 36140  019FEE  6EDF               	movwf	indf2,c
 36141                           
 36142                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 36143  019FF0  EE20  F1C3         	lfsr	2,_V+188	;volatile
 36144                           
 36145                           ;stkvar	_i @ sp[(-2)+0]
 36146  019FF4  0EFE               	movlw	-2
 36147  019FF6  50E3               	movf	plusw1,w,c
 36148  019FF8  0D05               	mullw	5
 36149  019FFA  0E01               	movlw	low (_S+1)
 36150  019FFC  24F3               	addwf	243,w,c
 36151  019FFE  6EE9               	movwf	fsr0l,c
 36152  01A000  0E02               	movlw	high (_S+1)
 36153  01A002  20F4               	addwfc	prodh,w,c
 36154  01A004  6EEA               	movwf	fsr0h,c
 36155  01A006  006F FF7B FFEE     	movff	postinc2,postinc0
 36156  01A00C  006F FF7B FFEE     	movff	postinc2,postinc0
 36157  01A012  006F FF7B FFEE     	movff	postinc2,postinc0
 36158  01A018  006F FF7B FFEE     	movff	postinc2,postinc0
 36159                           
 36160                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 36161                           ;stkvar	_i @ sp[(-2)+0]
 36162  01A01E  0EFE               	movlw	-2
 36163  01A020  006F FF8C  F00C    	movff	plusw1,btemp+11
 36164  01A026  0E01               	movlw	1
 36165  01A028  6E0B               	movwf	(btemp+10)^0,c
 36166  01A02A  2A0C               	incf	(btemp+11)^0,f,c
 36167  01A02C  D002               	goto	u1047_24
 36168  01A02E                     u1047_25:
 36169  01A02E  90D8               	bcf	status,0,c
 36170  01A030  360B               	rlcf	(btemp+10)^0,f,c
 36171  01A032                     u1047_24:
 36172  01A032  2E0C               	decfsz	(btemp+11)^0,f,c
 36173  01A034  D7FC               	goto	u1047_25
 36174  01A036  500B               	movf	(btemp+10)^0,w,c
 36175  01A038  0102               	movlb	2	; () banked
 36176  01A03A  1328               	iorwf	(_S+40)& (0+255),f,b	;volatile
 36177  01A03C                     l11558:
 36178                           
 36179                           ;dio.c: 113:  } while (++i < 6);
 36180                           ;stkvar	_i @ sp[(-2)+0]
 36181  01A03C  0EFE               	movlw	-2
 36182  01A03E  2AE3               	incf	plusw1,f,c
 36183  01A040  0EFE               	movlw	-2
 36184  01A042  006F FF8C  F001    	movff	plusw1,btemp
 36185  01A048  0E05               	movlw	5
 36186  01A04A  6401               	cpfsgt	btemp^0,c
 36187  01A04C  D785               	goto	l11542
 36188                           
 36189                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 36190  01A04E  8ABF               	bsf	191,5,c	;volatile
 36191                           
 36192                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36193  01A050  52E5               	movf	postdec1,f,c
 36194  01A052  52E5               	movf	postdec1,f,c
 36195  01A054  0012               	return		;funcret
 36196  01A056                     __end_of_switch_handler:
 36197                           	opt callstack 0
 36198                           
 36199 ;; *************** function _TMR5_ISR *****************
 36200 ;; Defined at:
 36201 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 36202 ;; Parameters:    Size  Location     Type
 36203 ;;		None
 36204 ;; Auto vars:     Size  Location     Type
 36205 ;;		None
 36206 ;; Return value:  Size  Location     Type
 36207 ;;                  1    wreg      void 
 36208 ;; Registers used:
 36209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 36210 ;; Tracked objects:
 36211 ;;		On entry : 0/0
 36212 ;;		On exit  : 3F/0
 36213 ;;		Unchanged: 0/0
 36214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36217 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36218 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36219 ;;Total ram usage:       15 bytes
 36220 ;; Hardware stack levels used:    1
 36221 ;; Hardware stack levels required when called:    9
 36222 ;; This function calls:
 36223 ;;		_TMR5_CallBack
 36224 ;;		_TMR5_WriteTimer
 36225 ;; This function is called by:
 36226 ;;		Interrupt level 1
 36227 ;; This function uses a non-reentrant model
 36228 ;;
 36229                           
 36230                           	psect	text161
 36231  01AE64                     __ptext161:
 36232                           	opt callstack 0
 36233  01AE64                     _TMR5_ISR:
 36234                           	opt callstack 7
 36235                           
 36236                           ;incstack = 0
 36237  01AE64  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 36238  01AE6A  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 36239  01AE70  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 36240  01AE76  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 36241  01AE7C  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 36242  01AE82  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 36243  01AE88  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 36244  01AE8E  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 36245  01AE94  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 36246  01AE9A  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 36247  01AEA0  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 36248  01AEA6  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 36249  01AEAC  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 36250  01AEB2  EE16  F104         	lfsr	1,___intlo_sp
 36251                           
 36252                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 36253  01AEB6  0139               	movlb	57	; () banked
 36254  01AEB8  9DA8               	bcf	168,6,b	;volatile
 36255                           
 36256                           ; BSR set to: 57
 36257                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 36258  01AEBA  0060  F27B  FFE6   	movff	_timer5ReloadVal,postinc1
 36259  01AEC0  0060  F27F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 36260  01AEC6  EC76  F0E4         	call	_TMR5_WriteTimer	;wreg free
 36261                           
 36262                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 36263  01AECA  0101               	movlb	1	; () banked
 36264  01AECC  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 36265  01AECE  6E2B               	movwf	??_TMR5_ISR^0,c
 36266  01AED0  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 36267  01AED2  0E05               	movlw	5
 36268  01AED4  262B               	addwf	??_TMR5_ISR^0,f,c
 36269  01AED6  0E00               	movlw	0
 36270  01AED8  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 36271  01AEDA  0100               	movlb	0	; () banked
 36272  01AEDC  4B9C               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 36273  01AEDE  2B9D               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 36274  01AEE0  502B               	movf	??_TMR5_ISR^0,w,c
 36275  01AEE2  5D9C               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 36276  01AEE4  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 36277  01AEE6  599D               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 36278  01AEE8  A0D8               	btfss	status,0,c
 36279  01AEEA  D005               	goto	i1l1021
 36280                           
 36281                           ; BSR set to: 0
 36282                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 36283  01AEEC  EC02  F0E8         	call	_TMR5_CallBack	;wreg free
 36284                           
 36285                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 36286  01AEF0  0100               	movlb	0	; () banked
 36287  01AEF2  6B9C               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 36288  01AEF4  6B9D               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 36289  01AEF6                     i1l1021:
 36290                           
 36291                           ; BSR set to: 0
 36292  01AEF6  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 36293  01AEFC  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 36294  01AF02  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 36295  01AF08  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 36296  01AF0E  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 36297  01AF14  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 36298  01AF1A  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 36299  01AF20  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 36300  01AF26  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 36301  01AF2C  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 36302  01AF32  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 36303  01AF38  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 36304  01AF3E  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 36305  01AF44  0011               	retfie		f
 36306  01AF46                     __end_of_TMR5_ISR:
 36307                           	opt callstack 0
 36308                           
 36309 ;; *************** function _TMR5_WriteTimer *****************
 36310 ;; Defined at:
 36311 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 36312 ;; Parameters:    Size  Location     Type
 36313 ;;  timerVal        2  [STACK] unsigned short 
 36314 ;; Auto vars:     Size  Location     Type
 36315 ;;		None
 36316 ;; Return value:  Size  Location     Type
 36317 ;;                  1  [STACK] void 
 36318 ;; Registers used:
 36319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 36320 ;; Tracked objects:
 36321 ;;		On entry : 3F/39
 36322 ;;		On exit  : 0/0
 36323 ;;		Unchanged: 0/0
 36324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36329 ;;Total ram usage:        0 bytes
 36330 ;; Hardware stack levels used:    1
 36331 ;; Hardware stack levels required when called:    3
 36332 ;; This function calls:
 36333 ;;		Nothing
 36334 ;; This function is called by:
 36335 ;;		_TMR5_ISR
 36336 ;; This function uses a reentrant model
 36337 ;;
 36338                           
 36339                           	psect	text162
 36340  01C8EC                     __ptext162:
 36341                           	opt callstack 0
 36342  01C8EC                     _TMR5_WriteTimer:
 36343                           	opt callstack 12
 36344                           
 36345                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 36346                           
 36347                           ; BSR set to: 0
 36348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36349                           ;incstack = 0
 36350  01C8EC  A49A               	btfss	154,2,c	;volatile
 36351  01C8EE  D00F               	goto	l11770
 36352                           
 36353                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 36354  01C8F0  909A               	bcf	154,0,c	;volatile
 36355                           
 36356                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 36357                           ;stkvar	_timerVal @ sp[(0)+-2]
 36358  01C8F2  0EFF               	movlw	255
 36359  01C8F4  24E1               	addwf	fsr1l,w,c
 36360  01C8F6  6ED9               	movwf	fsr2l,c
 36361  01C8F8  0EFF               	movlw	255
 36362  01C8FA  20E2               	addwfc	fsr1h,w,c
 36363  01C8FC  6EDA               	movwf	fsr2h,c
 36364  01C8FE  50DF               	movf	indf2,w,c
 36365  01C900  6E99               	movwf	153,c	;volatile
 36366                           
 36367                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 36368                           ;stkvar	_timerVal @ sp[(0)+-2]
 36369  01C902  0EFE               	movlw	-2
 36370  01C904  006F FF8F FF98     	movff	plusw1,16280	;volatile
 36371                           
 36372                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 36373  01C90A  809A               	bsf	154,0,c	;volatile
 36374                           
 36375                           ;mcc_generated_files/tmr5.c: 144:  } else {
 36376  01C90C  D00C               	goto	l1004
 36377  01C90E                     l11770:
 36378                           
 36379                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 36380                           ;stkvar	_timerVal @ sp[(0)+-2]
 36381  01C90E  0EFF               	movlw	255
 36382  01C910  24E1               	addwf	fsr1l,w,c
 36383  01C912  6ED9               	movwf	fsr2l,c
 36384  01C914  0EFF               	movlw	255
 36385  01C916  20E2               	addwfc	fsr1h,w,c
 36386  01C918  6EDA               	movwf	fsr2h,c
 36387  01C91A  50DF               	movf	indf2,w,c
 36388  01C91C  6E99               	movwf	153,c	;volatile
 36389                           
 36390                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 36391                           ;stkvar	_timerVal @ sp[(0)+-2]
 36392  01C91E  0EFE               	movlw	-2
 36393  01C920  006F FF8F FF98     	movff	plusw1,16280	;volatile
 36394  01C926                     l1004:
 36395                           
 36396                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 36397  01C926  52E5               	movf	postdec1,f,c
 36398  01C928  52E5               	movf	postdec1,f,c
 36399  01C92A  0012               	return		;funcret
 36400  01C92C                     __end_of_TMR5_WriteTimer:
 36401                           	opt callstack 0
 36402                           
 36403 ;; *************** function _TMR5_CallBack *****************
 36404 ;; Defined at:
 36405 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 36406 ;; Parameters:    Size  Location     Type
 36407 ;;		None
 36408 ;; Auto vars:     Size  Location     Type
 36409 ;;		None
 36410 ;; Return value:  Size  Location     Type
 36411 ;;                  1  [STACK] void 
 36412 ;; Registers used:
 36413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 36414 ;; Tracked objects:
 36415 ;;		On entry : 3F/0
 36416 ;;		On exit  : 0/0
 36417 ;;		Unchanged: 0/0
 36418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36423 ;;Total ram usage:        0 bytes
 36424 ;; Hardware stack levels used:    1
 36425 ;; Hardware stack levels required when called:    8
 36426 ;; This function calls:
 36427 ;;		Absolute function
 36428 ;;		_TMR5_DefaultInterruptHandler
 36429 ;; This function is called by:
 36430 ;;		_TMR5_ISR
 36431 ;; This function uses a reentrant model
 36432 ;;
 36433                           
 36434                           	psect	text163
 36435  01D004                     __ptext163:
 36436                           	opt callstack 0
 36437  01D004                     _TMR5_CallBack:
 36438                           	opt callstack 7
 36439                           
 36440                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 36441                           
 36442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36443                           ;incstack = 0
 36444  01D004  0100               	movlb	0	; () banked
 36445  01D006  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 36446  01D008  117C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 36447  01D00A  117D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 36448  01D00C  B4D8               	btfsc	status,2,c
 36449  01D00E  0012               	return	
 36450                           
 36451                           ; BSR set to: 0
 36452                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 36453  01D010  D801               	call	u1086_28
 36454  01D012  0012               	return	
 36455  01D014                     u1086_28:
 36456  01D014  0005               	push	
 36457  01D016  6EFA               	movwf	pclath,c
 36458  01D018  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 36459  01D01A  6EFD               	movwf	tosl,c
 36460  01D01C  517C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 36461  01D01E  6EFE               	movwf	tosh,c
 36462  01D020  517D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 36463  01D022  6EFF               	movwf	tosu,c
 36464  01D024  50FA               	movf	pclath,w,c
 36465  01D026  0012               	return		;indir
 36466  01D028                     __end_of_TMR5_CallBack:
 36467                           	opt callstack 0
 36468                           
 36469 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 36470 ;; Defined at:
 36471 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 36472 ;; Parameters:    Size  Location     Type
 36473 ;;		None
 36474 ;; Auto vars:     Size  Location     Type
 36475 ;;		None
 36476 ;; Return value:  Size  Location     Type
 36477 ;;                  1  [STACK] void 
 36478 ;; Registers used:
 36479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36480 ;; Tracked objects:
 36481 ;;		On entry : 3F/0
 36482 ;;		On exit  : 0/0
 36483 ;;		Unchanged: 0/0
 36484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36489 ;;Total ram usage:        0 bytes
 36490 ;; Hardware stack levels used:    1
 36491 ;; Hardware stack levels required when called:    7
 36492 ;; This function calls:
 36493 ;;		_check_day_time
 36494 ;; This function is called by:
 36495 ;;		_TMR5_Initialize
 36496 ;;		_TMR5_CallBack
 36497 ;; This function uses a reentrant model
 36498 ;;
 36499                           
 36500                           	psect	text164
 36501  01CA56                     __ptext164:
 36502                           	opt callstack 0
 36503  01CA56                     _TMR5_DefaultInterruptHandler:
 36504                           	opt callstack 7
 36505                           
 36506                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 36507                           
 36508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36509                           ;incstack = 0
 36510  01CA56  A0BE               	btfss	190,0,c	;volatile
 36511  01CA58  D002               	goto	u1012_20
 36512  01CA5A  0E01               	movlw	1
 36513  01CA5C  D001               	goto	u1012_26
 36514  01CA5E                     u1012_20:
 36515  01CA5E  0E00               	movlw	0
 36516  01CA60                     u1012_26:
 36517  01CA60  0AFF               	xorlw	255
 36518  01CA62  6E0C               	movwf	(btemp+11)^0,c
 36519  01CA64  50BE               	movf	190,w,c	;volatile
 36520  01CA66  180C               	xorwf	(btemp+11)^0,w,c
 36521  01CA68  0BFE               	andlw	-2
 36522  01CA6A  180C               	xorwf	(btemp+11)^0,w,c
 36523  01CA6C  6EBE               	movwf	190,c	;volatile
 36524                           
 36525                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 36526  01CA6E  0E01               	movlw	1
 36527  01CA70  0101               	movlb	1	; () banked
 36528  01CA72  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 36529  01CA74  0E00               	movlw	0
 36530  01CA76  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 36531  01CA78  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 36532  01CA7A  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 36533                           
 36534                           ; BSR set to: 1
 36535                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 36536  01CA7C  0E01               	movlw	1
 36537  01CA7E  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 36538  01CA80  0E00               	movlw	0
 36539  01CA82  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 36540  01CA84  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 36541  01CA86  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 36542                           
 36543                           ; BSR set to: 1
 36544                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 36545  01CA88  ECF1  F0C8         	call	_check_day_time	;wreg free
 36546                           
 36547                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36548  01CA8C  0012               	return		;funcret
 36549  01CA8E                     __end_of_TMR5_DefaultInterruptHandler:
 36550                           	opt callstack 0
 36551                           
 36552 ;; *************** function _check_day_time *****************
 36553 ;; Defined at:
 36554 ;;		line 165 in file "mbmc.c"
 36555 ;; Parameters:    Size  Location     Type
 36556 ;;		None
 36557 ;; Auto vars:     Size  Location     Type
 36558 ;;  light           4  [STACK] float 
 36559 ;; Return value:  Size  Location     Type
 36560 ;;                  1  [STACK] _Bool 
 36561 ;; Registers used:
 36562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36563 ;; Tracked objects:
 36564 ;;		On entry : 3F/1
 36565 ;;		On exit  : 0/0
 36566 ;;		Unchanged: 0/0
 36567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36572 ;;Total ram usage:        0 bytes
 36573 ;; Hardware stack levels used:    1
 36574 ;; Hardware stack levels required when called:    6
 36575 ;; This function calls:
 36576 ;;		___flge
 36577 ;;		_conv_raw_result
 36578 ;;		_get_ac_charger_relay
 36579 ;;		_set_ac_charger_relay
 36580 ;; This function is called by:
 36581 ;;		_TMR5_DefaultInterruptHandler
 36582 ;; This function uses a reentrant model
 36583 ;;
 36584                           
 36585                           	psect	text165
 36586  0191E2                     __ptext165:
 36587                           	opt callstack 0
 36588  0191E2                     _check_day_time:
 36589                           	opt callstack 0
 36590                           
 36591                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36592  0191E2  52E6               	movf	postinc1,f,c
 36593  0191E4  52E6               	movf	postinc1,f,c
 36594  0191E6  52E6               	movf	postinc1,f,c
 36595  0191E8  52E6               	movf	postinc1,f,c
 36596                           
 36597                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 36598                           
 36599                           ;incstack = 0
 36600  0191EA  0E00               	movlw	0
 36601  0191EC  6EE6               	movwf	postinc1,c
 36602  0191EE  0E0D               	movlw	13
 36603  0191F0  6EE6               	movwf	postinc1,c
 36604  0191F2  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 36605                           
 36606                           ;stkvar	_light @ sp[(-4)+0]
 36607  0191F6  0EFC               	movlw	-4
 36608  0191F8  0060  F007  FFE3   	movff	btemp,plusw1
 36609  0191FE  0EFD               	movlw	-3
 36610  019200  0060  F00B  FFE3   	movff	btemp+1,plusw1
 36611  019206  0EFE               	movlw	-2
 36612  019208  0060  F00F  FFE3   	movff	btemp+2,plusw1
 36613  01920E  0EFF               	movlw	-1
 36614  019210  0060  F013  FFE3   	movff	btemp+3,plusw1
 36615                           
 36616                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 36617  019216  2A41               	incf	check_day_time@day_delay^0,f,c
 36618  019218  0441               	decf	check_day_time@day_delay^0,w,c
 36619  01921A  A4D8               	btfss	status,2,c
 36620  01921C  D0A9               	goto	l2152
 36621  01921E  0101               	movlb	1	; () banked
 36622  019220  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 36623  019222  B4D8               	btfsc	status,2,c
 36624  019224  D0A5               	goto	l2152
 36625                           
 36626                           ; BSR set to: 1
 36627                           ;mbmc.c: 173:   if (C.soc > 3) {
 36628  019226  EE22  F0B5         	lfsr	2,_C+182	;volatile
 36629  01922A  0E01               	movlw	1
 36630  01922C  50DB               	movf	plusw2,w,c
 36631  01922E  E104               	bnz	u982_20
 36632  019230  0E04               	movlw	4
 36633  019232  5CDE               	subwf	postinc2,w,c
 36634  019234  A0D8               	btfss	status,0,c
 36635  019236  D073               	goto	l10658
 36636  019238                     u982_20:
 36637                           
 36638                           ; BSR set to: 1
 36639                           ;mbmc.c: 174:    if (!C.day) {
 36640  019238  EE22  F121         	lfsr	2,_C+290	;volatile
 36641  01923C  50DF               	movf	indf2,w,c
 36642  01923E  A4D8               	btfss	status,2,c
 36643  019240  D035               	goto	l10646
 36644                           
 36645                           ; BSR set to: 1
 36646                           ;mbmc.c: 175:     if (light > 22.0) {
 36647                           ;stkvar	_light @ sp[(-4)+0]
 36648  019242  0EFC               	movlw	-4
 36649  019244  006F FF8F FFE6     	movff	plusw1,postinc1
 36650  01924A  006F FF8F FFE6     	movff	plusw1,postinc1
 36651  019250  006F FF8F FFE6     	movff	plusw1,postinc1
 36652  019256  006F FF8F FFE6     	movff	plusw1,postinc1
 36653  01925C  0E00               	movlw	0
 36654  01925E  6EE6               	movwf	postinc1,c
 36655  019260  0E00               	movlw	0
 36656  019262  6EE6               	movwf	postinc1,c
 36657  019264  0EB0               	movlw	176
 36658  019266  6EE6               	movwf	postinc1,c
 36659  019268  0E41               	movlw	65
 36660  01926A  6EE6               	movwf	postinc1,c
 36661  01926C  EC81  F0CD         	call	___flge	;wreg free
 36662  019270  B001               	btfsc	btemp& (0+255),0,c
 36663  019272  D07E               	goto	l2152
 36664                           
 36665                           ;mbmc.c: 176:      C.day = 1;
 36666  019274  0E01               	movlw	1
 36667  019276  006F FFA0  F921    	movff	wreg,_C+290	;volatile
 36668                           
 36669                           ;mbmc.c: 177:      C.day_start = V.ticks;
 36670  01927C  EE20  F188         	lfsr	2,_V+129	;volatile
 36671  019280  006F FF78  F922    	movff	postinc2,_C+291	;volatile
 36672  019286  006F FF78  F923    	movff	postinc2,_C+292	;volatile
 36673  01928C  006F FF78  F924    	movff	postinc2,_C+293	;volatile
 36674  019292  006F FF74  F925    	movff	postdec2,_C+294	;volatile
 36675                           
 36676                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 36677  019298  EC99  F0E9         	call	_get_ac_charger_relay	;wreg free
 36678  01929C  5001               	movf	btemp^0,w,c
 36679  01929E  B4D8               	btfsc	status,2,c
 36680  0192A0  D06B               	goto	l2148
 36681                           
 36682                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 36683  0192A2  0E00               	movlw	0
 36684  0192A4  6EE6               	movwf	postinc1,c
 36685  0192A6  EC83  F0E9         	call	_set_ac_charger_relay	;wreg free
 36686  0192AA  D066               	goto	l2148
 36687  0192AC                     l10646:
 36688                           
 36689                           ; BSR set to: 1
 36690                           ;mbmc.c: 184:     if (light < 12.0) {
 36691  0192AC  0E00               	movlw	0
 36692  0192AE  6EE6               	movwf	postinc1,c
 36693  0192B0  0E00               	movlw	0
 36694  0192B2  6EE6               	movwf	postinc1,c
 36695  0192B4  0E40               	movlw	64
 36696  0192B6  6EE6               	movwf	postinc1,c
 36697  0192B8  0E41               	movlw	65
 36698  0192BA  6EE6               	movwf	postinc1,c
 36699                           
 36700                           ;stkvar	_light @ sp[(-8)+0]
 36701  0192BC  0EF8               	movlw	-8
 36702  0192BE  006F FF8F FFE6     	movff	plusw1,postinc1
 36703  0192C4  006F FF8F FFE6     	movff	plusw1,postinc1
 36704  0192CA  006F FF8F FFE6     	movff	plusw1,postinc1
 36705  0192D0  006F FF8F FFE6     	movff	plusw1,postinc1
 36706  0192D6  EC81  F0CD         	call	___flge	;wreg free
 36707  0192DA  B001               	btfsc	btemp& (0+255),0,c
 36708  0192DC  D049               	goto	l2152
 36709                           
 36710                           ;mbmc.c: 185:      C.day = 0;
 36711  0192DE  0E00               	movlw	0
 36712  0192E0  006F FFA0  F921    	movff	wreg,_C+290	;volatile
 36713                           
 36714                           ;mbmc.c: 186:      C.day_end = V.ticks;
 36715  0192E6  EE20  F188         	lfsr	2,_V+129	;volatile
 36716  0192EA  006F FF78  F926    	movff	postinc2,_C+295	;volatile
 36717  0192F0  006F FF78  F927    	movff	postinc2,_C+296	;volatile
 36718  0192F6  006F FF78  F928    	movff	postinc2,_C+297	;volatile
 36719  0192FC  006F FF74  F929    	movff	postdec2,_C+298	;volatile
 36720                           
 36721                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 36722  019302  EE22  F0B5         	lfsr	2,_C+182	;volatile
 36723  019306  0E01               	movlw	1
 36724  019308  50DB               	movf	plusw2,w,c
 36725  01930A  E136               	bnz	l2148
 36726  01930C  0E14               	movlw	20
 36727  01930E  5CDE               	subwf	postinc2,w,c
 36728  019310  B0D8               	btfsc	status,0,c
 36729  019312  D032               	goto	l2148
 36730                           
 36731                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 36732  019314  0E01               	movlw	1
 36733  019316  6EE6               	movwf	postinc1,c
 36734  019318  EC83  F0E9         	call	_set_ac_charger_relay	;wreg free
 36735  01931C  D02D               	goto	l2148
 36736  01931E                     l10658:
 36737                           
 36738                           ; BSR set to: 1
 36739                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 36740  01931E  EE22  F077         	lfsr	2,_C+120	;volatile
 36741  019322  006F FF7B FFE6     	movff	postinc2,postinc1
 36742  019328  006F FF7B FFE6     	movff	postinc2,postinc1
 36743  01932E  006F FF7B FFE6     	movff	postinc2,postinc1
 36744  019334  006F FF7B FFE6     	movff	postinc2,postinc1
 36745  01933A  EE22  F07B         	lfsr	2,_C+124	;volatile
 36746  01933E  006F FF7B FFE6     	movff	postinc2,postinc1
 36747  019344  006F FF7B FFE6     	movff	postinc2,postinc1
 36748  01934A  006F FF7B FFE6     	movff	postinc2,postinc1
 36749  019350  006F FF7B FFE6     	movff	postinc2,postinc1
 36750  019356  EC81  F0CD         	call	___flge	;wreg free
 36751  01935A  B001               	btfsc	btemp& (0+255),0,c
 36752  01935C  D009               	goto	l2152
 36753                           
 36754                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 36755  01935E  EC99  F0E9         	call	_get_ac_charger_relay	;wreg free
 36756  019362  5001               	movf	btemp^0,w,c
 36757  019364  A4D8               	btfss	status,2,c
 36758  019366  D004               	goto	l2152
 36759                           
 36760                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 36761  019368  0E01               	movlw	1
 36762  01936A  6EE6               	movwf	postinc1,c
 36763  01936C  EC83  F0E9         	call	_set_ac_charger_relay	;wreg free
 36764  019370                     l2152:
 36765                           
 36766                           ;mbmc.c: 204:  if (day_delay >= 240)
 36767  019370  0EEF               	movlw	239
 36768  019372  6441               	cpfsgt	check_day_time@day_delay^0,c
 36769  019374  D001               	goto	l2148
 36770                           
 36771                           ;mbmc.c: 205:   day_delay = 0;
 36772  019376  6A41               	clrf	check_day_time@day_delay^0,c
 36773  019378                     l2148:
 36774                           
 36775                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36776  019378  52E5               	movf	postdec1,f,c
 36777  01937A  52E5               	movf	postdec1,f,c
 36778  01937C  52E5               	movf	postdec1,f,c
 36779  01937E  52E5               	movf	postdec1,f,c
 36780  019380  0012               	return		;funcret
 36781  019382                     __end_of_check_day_time:
 36782                           	opt callstack 0
 36783                           
 36784 ;; *************** function _set_ac_charger_relay *****************
 36785 ;; Defined at:
 36786 ;;		line 135 in file "mbmc.c"
 36787 ;; Parameters:    Size  Location     Type
 36788 ;;  mode            1  [STACK] const _Bool 
 36789 ;; Auto vars:     Size  Location     Type
 36790 ;;		None
 36791 ;; Return value:  Size  Location     Type
 36792 ;;                  1  [STACK] void 
 36793 ;; Registers used:
 36794 ;;		wreg, fsr1l, fsr1h
 36795 ;; Tracked objects:
 36796 ;;		On entry : 0/1
 36797 ;;		On exit  : 0/0
 36798 ;;		Unchanged: 0/0
 36799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36804 ;;Total ram usage:        0 bytes
 36805 ;; Hardware stack levels used:    1
 36806 ;; Hardware stack levels required when called:    3
 36807 ;; This function calls:
 36808 ;;		Nothing
 36809 ;; This function is called by:
 36810 ;;		_check_day_time
 36811 ;; This function uses a reentrant model
 36812 ;;
 36813                           
 36814                           	psect	text166
 36815  01D306                     __ptext166:
 36816                           	opt callstack 0
 36817  01D306                     _set_ac_charger_relay:
 36818                           	opt callstack 9
 36819                           
 36820                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 36821                           ;stkvar	_mode @ sp[(0)+-1]
 36822                           
 36823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36824                           ;incstack = 0
 36825  01D306  0EFF               	movlw	-1
 36826  01D308  B0E3               	btfsc	plusw1,0,c
 36827  01D30A  D002               	bra	u974_25
 36828  01D30C  9CBD               	bcf	189,6,c	;volatile
 36829  01D30E  D001               	bra	u974_26
 36830  01D310                     u974_25:
 36831  01D310  8CBD               	bsf	189,6,c	;volatile
 36832  01D312                     u974_26:
 36833                           
 36834                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 36835  01D312  52E5               	movf	postdec1,f,c
 36836  01D314  0012               	return		;funcret
 36837  01D316                     __end_of_set_ac_charger_relay:
 36838                           	opt callstack 0
 36839                           
 36840 ;; *************** function _get_ac_charger_relay *****************
 36841 ;; Defined at:
 36842 ;;		line 140 in file "mbmc.c"
 36843 ;; Parameters:    Size  Location     Type
 36844 ;;		None
 36845 ;; Auto vars:     Size  Location     Type
 36846 ;;		None
 36847 ;; Return value:  Size  Location     Type
 36848 ;;                  1  [STACK] _Bool 
 36849 ;; Registers used:
 36850 ;;		btemp
 36851 ;; Tracked objects:
 36852 ;;		On entry : 0/1
 36853 ;;		On exit  : 0/0
 36854 ;;		Unchanged: 0/0
 36855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36860 ;;Total ram usage:        0 bytes
 36861 ;; Hardware stack levels used:    1
 36862 ;; Hardware stack levels required when called:    3
 36863 ;; This function calls:
 36864 ;;		Nothing
 36865 ;; This function is called by:
 36866 ;;		_check_day_time
 36867 ;;		_calc_bsoc
 36868 ;; This function uses a reentrant model
 36869 ;;
 36870                           
 36871                           	psect	text167
 36872  01D332                     __ptext167:
 36873                           	opt callstack 0
 36874  01D332                     _get_ac_charger_relay:
 36875                           	opt callstack 10
 36876                           
 36877                           ;mbmc.c: 142:  return LATDbits.LATD6;
 36878                           
 36879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36880                           ;incstack = 0
 36881  01D332  ACBD               	btfss	189,6,c	;volatile
 36882  01D334  D003               	goto	u1005_20
 36883  01D336  6A01               	clrf	btemp^0,c
 36884  01D338  2A01               	incf	btemp^0,f,c
 36885  01D33A  0012               	return	
 36886  01D33C                     u1005_20:
 36887  01D33C  6A01               	clrf	btemp^0,c
 36888                           
 36889                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 36890  01D33E  0012               	return		;funcret
 36891  01D340                     __end_of_get_ac_charger_relay:
 36892                           	opt callstack 0
 36893                           
 36894 ;; *************** function _TMR3_ISR *****************
 36895 ;; Defined at:
 36896 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 36897 ;; Parameters:    Size  Location     Type
 36898 ;;		None
 36899 ;; Auto vars:     Size  Location     Type
 36900 ;;		None
 36901 ;; Return value:  Size  Location     Type
 36902 ;;                  1    wreg      void 
 36903 ;; Registers used:
 36904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 36905 ;; Tracked objects:
 36906 ;;		On entry : 0/0
 36907 ;;		On exit  : 3F/0
 36908 ;;		Unchanged: 0/0
 36909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36912 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36913 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36914 ;;Total ram usage:       25 bytes
 36915 ;; Hardware stack levels used:    1
 36916 ;; Hardware stack levels required when called:   14
 36917 ;; This function calls:
 36918 ;;		_TMR3_CallBack
 36919 ;;		_TMR3_WriteTimer
 36920 ;; This function is called by:
 36921 ;;		Interrupt level 1
 36922 ;; This function uses a non-reentrant model
 36923 ;;
 36924                           
 36925                           	psect	text168
 36926  019C64                     __ptext168:
 36927                           	opt callstack 0
 36928  019C64                     _TMR3_ISR:
 36929                           	opt callstack 2
 36930                           
 36931                           ;incstack = 0
 36932  019C64  006F FF60  F0E7    	movff	status,??_TMR3_ISR
 36933  019C6A  006F FFD8  F0E8    	movff	tblptrl,??_TMR3_ISR+1
 36934  019C70  006F FFDC  F0E9    	movff	tblptrh,??_TMR3_ISR+2
 36935  019C76  006F FFE0  F0EA    	movff	tblptru,??_TMR3_ISR+3
 36936  019C7C  006F FFD4  F0EB    	movff	tablat,??_TMR3_ISR+4
 36937  019C82  0060  F004  F0EC   	movff	btemp,??_TMR3_ISR+5
 36938  019C88  0060  F008  F0ED   	movff	btemp+1,??_TMR3_ISR+6
 36939  019C8E  0060  F00C  F0EE   	movff	btemp+2,??_TMR3_ISR+7
 36940  019C94  0060  F010  F0EF   	movff	btemp+3,??_TMR3_ISR+8
 36941  019C9A  0060  F014  F0F0   	movff	btemp+4,??_TMR3_ISR+9
 36942  019CA0  0060  F018  F0F1   	movff	btemp+5,??_TMR3_ISR+10
 36943  019CA6  0060  F01C  F0F2   	movff	btemp+6,??_TMR3_ISR+11
 36944  019CAC  0060  F020  F0F3   	movff	btemp+7,??_TMR3_ISR+12
 36945  019CB2  0060  F024  F0F4   	movff	btemp+8,??_TMR3_ISR+13
 36946  019CB8  0060  F028  F0F5   	movff	btemp+9,??_TMR3_ISR+14
 36947  019CBE  0060  F02C  F0F6   	movff	btemp+10,??_TMR3_ISR+15
 36948  019CC4  0060  F030  F0F7   	movff	btemp+11,??_TMR3_ISR+16
 36949  019CCA  0060  F044  F0F8   	movff	btemp+16,??_TMR3_ISR+17
 36950  019CD0  0060  F048  F0F9   	movff	btemp+17,??_TMR3_ISR+18
 36951  019CD6  0060  F04C  F0FA   	movff	btemp+18,??_TMR3_ISR+19
 36952  019CDC  0060  F050  F0FB   	movff	btemp+19,??_TMR3_ISR+20
 36953  019CE2  0060  F054  F0FC   	movff	btemp+20,??_TMR3_ISR+21
 36954  019CE8  0060  F058  F0FD   	movff	btemp+21,??_TMR3_ISR+22
 36955  019CEE  0060  F05C  F0FE   	movff	btemp+22,??_TMR3_ISR+23
 36956  019CF4  0060  F060  F0FF   	movff	btemp+23,??_TMR3_ISR+24
 36957  019CFA  EE16  F104         	lfsr	1,___intlo_sp
 36958                           
 36959                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 36960  019CFE  0139               	movlb	57	; () banked
 36961  019D00  9DA6               	bcf	166,6,b	;volatile
 36962                           
 36963                           ; BSR set to: 57
 36964                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 36965  019D02  0060  F26B  FFE6   	movff	_timer3ReloadVal,postinc1
 36966  019D08  0060  F26F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 36967  019D0E  EC96  F0E4         	call	_TMR3_WriteTimer	;wreg free
 36968                           
 36969                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 36970  019D12  0100               	movlb	0	; () banked
 36971  019D14  4B98               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 36972  019D16  2B99               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 36973  019D18  5199               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 36974  019D1A  E104               	bnz	i1u1369_20
 36975  019D1C  0E28               	movlw	40
 36976  019D1E  5D98               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 36977  019D20  A0D8               	btfss	status,0,c
 36978  019D22  D005               	goto	i1l1209
 36979  019D24                     i1u1369_20:
 36980                           
 36981                           ; BSR set to: 0
 36982                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 36983  019D24  EC14  F0E8         	call	_TMR3_CallBack	;wreg free
 36984                           
 36985                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 36986  019D28  0100               	movlb	0	; () banked
 36987  019D2A  6B98               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 36988  019D2C  6B99               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 36989  019D2E                     i1l1209:
 36990                           
 36991                           ; BSR set to: 0
 36992  019D2E  0060  F3FC  F018   	movff	??_TMR3_ISR+24,btemp+23
 36993  019D34  0060  F3F8  F017   	movff	??_TMR3_ISR+23,btemp+22
 36994  019D3A  0060  F3F4  F016   	movff	??_TMR3_ISR+22,btemp+21
 36995  019D40  0060  F3F0  F015   	movff	??_TMR3_ISR+21,btemp+20
 36996  019D46  0060  F3EC  F014   	movff	??_TMR3_ISR+20,btemp+19
 36997  019D4C  0060  F3E8  F013   	movff	??_TMR3_ISR+19,btemp+18
 36998  019D52  0060  F3E4  F012   	movff	??_TMR3_ISR+18,btemp+17
 36999  019D58  0060  F3E0  F011   	movff	??_TMR3_ISR+17,btemp+16
 37000  019D5E  0060  F3DC  F00C   	movff	??_TMR3_ISR+16,btemp+11
 37001  019D64  0060  F3D8  F00B   	movff	??_TMR3_ISR+15,btemp+10
 37002  019D6A  0060  F3D4  F00A   	movff	??_TMR3_ISR+14,btemp+9
 37003  019D70  0060  F3D0  F009   	movff	??_TMR3_ISR+13,btemp+8
 37004  019D76  0060  F3CC  F008   	movff	??_TMR3_ISR+12,btemp+7
 37005  019D7C  0060  F3C8  F007   	movff	??_TMR3_ISR+11,btemp+6
 37006  019D82  0060  F3C4  F006   	movff	??_TMR3_ISR+10,btemp+5
 37007  019D88  0060  F3C0  F005   	movff	??_TMR3_ISR+9,btemp+4
 37008  019D8E  0060  F3BC  F004   	movff	??_TMR3_ISR+8,btemp+3
 37009  019D94  0060  F3B8  F003   	movff	??_TMR3_ISR+7,btemp+2
 37010  019D9A  0060  F3B4  F002   	movff	??_TMR3_ISR+6,btemp+1
 37011  019DA0  0060  F3B0  F001   	movff	??_TMR3_ISR+5,btemp
 37012  019DA6  0060  F3AF  FFF5   	movff	??_TMR3_ISR+4,tablat
 37013  019DAC  0060  F3AB  FFF8   	movff	??_TMR3_ISR+3,tblptru
 37014  019DB2  0060  F3A7  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 37015  019DB8  0060  F3A3  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 37016  019DBE  0060  F39F  FFD8   	movff	??_TMR3_ISR,status
 37017  019DC4  0011               	retfie		f
 37018  019DC6                     __end_of_TMR3_ISR:
 37019                           	opt callstack 0
 37020                           
 37021 ;; *************** function _TMR3_WriteTimer *****************
 37022 ;; Defined at:
 37023 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 37024 ;; Parameters:    Size  Location     Type
 37025 ;;  timerVal        2  [STACK] unsigned short 
 37026 ;; Auto vars:     Size  Location     Type
 37027 ;;		None
 37028 ;; Return value:  Size  Location     Type
 37029 ;;                  1  [STACK] void 
 37030 ;; Registers used:
 37031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 37032 ;; Tracked objects:
 37033 ;;		On entry : 3F/39
 37034 ;;		On exit  : 0/0
 37035 ;;		Unchanged: 0/0
 37036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37041 ;;Total ram usage:        0 bytes
 37042 ;; Hardware stack levels used:    1
 37043 ;; Hardware stack levels required when called:    3
 37044 ;; This function calls:
 37045 ;;		Nothing
 37046 ;; This function is called by:
 37047 ;;		_TMR3_ISR
 37048 ;; This function uses a reentrant model
 37049 ;;
 37050                           
 37051                           	psect	text169
 37052  01C92C                     __ptext169:
 37053                           	opt callstack 0
 37054  01C92C                     _TMR3_WriteTimer:
 37055                           	opt callstack 12
 37056                           
 37057                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 37058                           
 37059                           ; BSR set to: 0
 37060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37061                           ;incstack = 0
 37062  01C92C  A4A6               	btfss	166,2,c	;volatile
 37063  01C92E  D00F               	goto	l11788
 37064                           
 37065                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 37066  01C930  90A6               	bcf	166,0,c	;volatile
 37067                           
 37068                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 37069                           ;stkvar	_timerVal @ sp[(0)+-2]
 37070  01C932  0EFF               	movlw	255
 37071  01C934  24E1               	addwf	fsr1l,w,c
 37072  01C936  6ED9               	movwf	fsr2l,c
 37073  01C938  0EFF               	movlw	255
 37074  01C93A  20E2               	addwfc	fsr1h,w,c
 37075  01C93C  6EDA               	movwf	fsr2h,c
 37076  01C93E  50DF               	movf	indf2,w,c
 37077  01C940  6EA5               	movwf	165,c	;volatile
 37078                           
 37079                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 37080                           ;stkvar	_timerVal @ sp[(0)+-2]
 37081  01C942  0EFE               	movlw	-2
 37082  01C944  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 37083                           
 37084                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 37085  01C94A  80A6               	bsf	166,0,c	;volatile
 37086                           
 37087                           ;mcc_generated_files/tmr3.c: 141:     }
 37088  01C94C  D00C               	goto	l1192
 37089  01C94E                     l11788:
 37090                           
 37091                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 37092                           ;stkvar	_timerVal @ sp[(0)+-2]
 37093  01C94E  0EFF               	movlw	255
 37094  01C950  24E1               	addwf	fsr1l,w,c
 37095  01C952  6ED9               	movwf	fsr2l,c
 37096  01C954  0EFF               	movlw	255
 37097  01C956  20E2               	addwfc	fsr1h,w,c
 37098  01C958  6EDA               	movwf	fsr2h,c
 37099  01C95A  50DF               	movf	indf2,w,c
 37100  01C95C  6EA5               	movwf	165,c	;volatile
 37101                           
 37102                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 37103                           ;stkvar	_timerVal @ sp[(0)+-2]
 37104  01C95E  0EFE               	movlw	-2
 37105  01C960  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 37106  01C966                     l1192:
 37107                           
 37108                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37109  01C966  52E5               	movf	postdec1,f,c
 37110  01C968  52E5               	movf	postdec1,f,c
 37111  01C96A  0012               	return		;funcret
 37112  01C96C                     __end_of_TMR3_WriteTimer:
 37113                           	opt callstack 0
 37114                           
 37115 ;; *************** function _TMR3_CallBack *****************
 37116 ;; Defined at:
 37117 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 37118 ;; Parameters:    Size  Location     Type
 37119 ;;		None
 37120 ;; Auto vars:     Size  Location     Type
 37121 ;;		None
 37122 ;; Return value:  Size  Location     Type
 37123 ;;                  1  [STACK] void 
 37124 ;; Registers used:
 37125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 37126 ;; Tracked objects:
 37127 ;;		On entry : 3F/0
 37128 ;;		On exit  : 0/0
 37129 ;;		Unchanged: 0/0
 37130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37135 ;;Total ram usage:        0 bytes
 37136 ;; Hardware stack levels used:    1
 37137 ;; Hardware stack levels required when called:   13
 37138 ;; This function calls:
 37139 ;;		Absolute function
 37140 ;;		_TMR3_DefaultInterruptHandler
 37141 ;;		_calc_bsoc
 37142 ;; This function is called by:
 37143 ;;		_TMR3_ISR
 37144 ;; This function uses a reentrant model
 37145 ;;
 37146                           
 37147                           	psect	text170
 37148  01D028                     __ptext170:
 37149                           	opt callstack 0
 37150  01D028                     _TMR3_CallBack:
 37151                           	opt callstack 2
 37152                           
 37153                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 37154                           
 37155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37156                           ;incstack = 0
 37157  01D028  0100               	movlb	0	; () banked
 37158  01D02A  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37159  01D02C  1179               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37160  01D02E  117A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 37161  01D030  B4D8               	btfsc	status,2,c
 37162  01D032  0012               	return	
 37163                           
 37164                           ; BSR set to: 0
 37165                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 37166  01D034  D801               	call	u1350_28
 37167  01D036  0012               	return	
 37168  01D038                     u1350_28:
 37169  01D038  0005               	push	
 37170  01D03A  6EFA               	movwf	pclath,c
 37171  01D03C  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37172  01D03E  6EFD               	movwf	tosl,c
 37173  01D040  5179               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37174  01D042  6EFE               	movwf	tosh,c
 37175  01D044  517A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 37176  01D046  6EFF               	movwf	tosu,c
 37177  01D048  50FA               	movf	pclath,w,c
 37178  01D04A  0012               	return		;indir
 37179  01D04C                     __end_of_TMR3_CallBack:
 37180                           	opt callstack 0
 37181                           
 37182 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37183 ;; Defined at:
 37184 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 37185 ;; Parameters:    Size  Location     Type
 37186 ;;		None
 37187 ;; Auto vars:     Size  Location     Type
 37188 ;;		None
 37189 ;; Return value:  Size  Location     Type
 37190 ;;                  1  [STACK] void 
 37191 ;; Registers used:
 37192 ;;		None
 37193 ;; Tracked objects:
 37194 ;;		On entry : 3F/0
 37195 ;;		On exit  : 0/0
 37196 ;;		Unchanged: 0/0
 37197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37202 ;;Total ram usage:        0 bytes
 37203 ;; Hardware stack levels used:    1
 37204 ;; Hardware stack levels required when called:    3
 37205 ;; This function calls:
 37206 ;;		Nothing
 37207 ;; This function is called by:
 37208 ;;		_TMR3_Initialize
 37209 ;;		_TMR3_CallBack
 37210 ;; This function uses a reentrant model
 37211 ;;
 37212                           
 37213                           	psect	text171
 37214  01D3E4                     __ptext171:
 37215                           	opt callstack 0
 37216  01D3E4                     _TMR3_DefaultInterruptHandler:
 37217                           	opt callstack 11
 37218                           
 37219                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37220                           
 37221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37222                           ;incstack = 0
 37223  01D3E4  0012               	return		;funcret
 37224  01D3E6                     __end_of_TMR3_DefaultInterruptHandler:
 37225                           	opt callstack 0
 37226                           
 37227 ;; *************** function _calc_bsoc *****************
 37228 ;; Defined at:
 37229 ;;		line 39 in file "bsoc.c"
 37230 ;; Parameters:    Size  Location     Type
 37231 ;;		None
 37232 ;; Auto vars:     Size  Location     Type
 37233 ;;  adj             4  [STACK] float 
 37234 ;;  log_ptr         2  [STACK] PTR unsigned char 
 37235 ;;		 -> port_data(512), 
 37236 ;; Return value:  Size  Location     Type
 37237 ;;                  1  [STACK] void 
 37238 ;; Registers used:
 37239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 37240 ;; Tracked objects:
 37241 ;;		On entry : 3F/0
 37242 ;;		On exit  : 5/1
 37243 ;;		Unchanged: 0/0
 37244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37249 ;;Total ram usage:        0 bytes
 37250 ;; Hardware stack levels used:    1
 37251 ;; Hardware stack levels required when called:   12
 37252 ;; This function calls:
 37253 ;;		_StartTimer
 37254 ;;		___asfladd
 37255 ;;		___fldiv
 37256 ;;		___flge
 37257 ;;		___flmul
 37258 ;;		___flneg
 37259 ;;		___fltol
 37260 ;;		_fabsf
 37261 ;;		_get_ac_charger_relay
 37262 ;;		_port_data_dma_ptr
 37263 ;;		_send_port_data_dma
 37264 ;;		_sprintf
 37265 ;;		_strlen
 37266 ;; This function is called by:
 37267 ;;		_init_bsoc
 37268 ;;		_TMR3_CallBack
 37269 ;; This function uses a reentrant model
 37270 ;;
 37271                           
 37272                           	psect	text172
 37273  01346E                     __ptext172:
 37274                           	opt callstack 0
 37275  01346E                     _calc_bsoc:
 37276                           	opt callstack 0
 37277                           
 37278                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37279  01346E  0E06               	movlw	6
 37280  013470  26E1               	addwf	fsr1l,f,c
 37281  013472  0E00               	movlw	0
 37282  013474  22E2               	addwfc	fsr1h,f,c
 37283                           
 37284                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 37285                           
 37286                           ;incstack = 0
 37287  013476  0E00               	movlw	0
 37288  013478  6E09               	movwf	(btemp+8)^0,c
 37289  01347A  0E00               	movlw	0
 37290  01347C  6E0A               	movwf	(btemp+9)^0,c
 37291  01347E  0E80               	movlw	128
 37292  013480  6E0B               	movwf	(btemp+10)^0,c
 37293  013482  0E3F               	movlw	63
 37294  013484  6E0C               	movwf	(btemp+11)^0,c
 37295                           
 37296                           ;stkvar	_adj @ sp[(-6)+0]
 37297  013486  0EFA               	movlw	-6
 37298  013488  0060  F027  FFE3   	movff	btemp+8,plusw1
 37299  01348E  0EFB               	movlw	-5
 37300  013490  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37301  013496  0EFC               	movlw	-4
 37302  013498  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37303  01349E  0EFD               	movlw	-3
 37304  0134A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 37305  0134A6  82BE               	bsf	190,1,c	;volatile
 37306                           
 37307                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 37308  0134A8  0E00               	movlw	0
 37309  0134AA  6EE6               	movwf	postinc1,c
 37310  0134AC  0E00               	movlw	0
 37311  0134AE  6EE6               	movwf	postinc1,c
 37312  0134B0  0E61               	movlw	97
 37313  0134B2  6EE6               	movwf	postinc1,c
 37314  0134B4  0E45               	movlw	69
 37315  0134B6  6EE6               	movwf	postinc1,c
 37316  0134B8  EE22  F043         	lfsr	2,_C+68	;volatile
 37317  0134BC  006F FF7B FFE6     	movff	postinc2,postinc1
 37318  0134C2  006F FF7B FFE6     	movff	postinc2,postinc1
 37319  0134C8  006F FF7B FFE6     	movff	postinc2,postinc1
 37320  0134CE  006F FF7B FFE6     	movff	postinc2,postinc1
 37321  0134D4  EC61  F0A7         	call	___fldiv	;wreg free
 37322  0134D8  0060  F007  FFE6   	movff	btemp,postinc1
 37323  0134DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37324  0134E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37325  0134EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 37326  0134F0  0E8F               	movlw	low (_C+144)
 37327  0134F2  6EE6               	movwf	postinc1,c
 37328  0134F4  0E08               	movlw	high (_C+144)
 37329  0134F6  6EE6               	movwf	postinc1,c
 37330  0134F8  EC3E  F0DF         	call	___asfladd	;wreg free
 37331                           
 37332                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 37333  0134FC  EE22  F08F         	lfsr	2,_C+144	;volatile
 37334  013500  006F FF7B FFE6     	movff	postinc2,postinc1
 37335  013506  006F FF7B FFE6     	movff	postinc2,postinc1
 37336  01350C  006F FF7B FFE6     	movff	postinc2,postinc1
 37337  013512  006F FF7B FFE6     	movff	postinc2,postinc1
 37338  013518  EE22  F08B         	lfsr	2,_C+140	;volatile
 37339  01351C  006F FF7B FFE6     	movff	postinc2,postinc1
 37340  013522  006F FF7B FFE6     	movff	postinc2,postinc1
 37341  013528  006F FF7B FFE6     	movff	postinc2,postinc1
 37342  01352E  006F FF7B FFE6     	movff	postinc2,postinc1
 37343  013534  EC81  F0CD         	call	___flge	;wreg free
 37344  013538  B001               	btfsc	btemp& (0+255),0,c
 37345  01353A  D00E               	goto	l14036
 37346                           
 37347                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 37348  01353C  EE22  F08B         	lfsr	2,_C+140	;volatile
 37349  013540  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
 37350  013546  006F FF78  F890    	movff	postinc2,_C+145	;volatile
 37351  01354C  006F FF78  F891    	movff	postinc2,_C+146	;volatile
 37352  013552  006F FF74  F892    	movff	postdec2,_C+147	;volatile
 37353  013558                     l14036:
 37354                           
 37355                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 37356  013558  0ECD               	movlw	205
 37357  01355A  6EE6               	movwf	postinc1,c
 37358  01355C  0ECC               	movlw	204
 37359  01355E  6EE6               	movwf	postinc1,c
 37360  013560  0ECC               	movlw	204
 37361  013562  6EE6               	movwf	postinc1,c
 37362  013564  0E3D               	movlw	61
 37363  013566  6EE6               	movwf	postinc1,c
 37364  013568  EE22  F08F         	lfsr	2,_C+144	;volatile
 37365  01356C  006F FF7B FFE6     	movff	postinc2,postinc1
 37366  013572  006F FF7B FFE6     	movff	postinc2,postinc1
 37367  013578  006F FF7B FFE6     	movff	postinc2,postinc1
 37368  01357E  006F FF7B FFE6     	movff	postinc2,postinc1
 37369  013584  EC81  F0CD         	call	___flge	;wreg free
 37370  013588  B001               	btfsc	btemp& (0+255),0,c
 37371  01358A  D010               	goto	l14040
 37372                           
 37373                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 37374  01358C  0ECD               	movlw	205
 37375  01358E  006F FFA0  F88F    	movff	wreg,_C+144	;volatile
 37376  013594  0ECC               	movlw	204
 37377  013596  006F FFA0  F890    	movff	wreg,_C+145	;volatile
 37378  01359C  0ECC               	movlw	204
 37379  01359E  006F FFA0  F891    	movff	wreg,_C+146	;volatile
 37380  0135A4  0E3D               	movlw	61
 37381  0135A6  006F FFA0  F892    	movff	wreg,_C+147	;volatile
 37382  0135AC                     l14040:
 37383                           
 37384                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 37385  0135AC  EE22  F043         	lfsr	2,_C+68	;volatile
 37386  0135B0  006F FF7B FFE6     	movff	postinc2,postinc1
 37387  0135B6  006F FF7B FFE6     	movff	postinc2,postinc1
 37388  0135BC  006F FF7B FFE6     	movff	postinc2,postinc1
 37389  0135C2  006F FF7B FFE6     	movff	postinc2,postinc1
 37390  0135C8  0E0A               	movlw	10
 37391  0135CA  6EE6               	movwf	postinc1,c
 37392  0135CC  0ED7               	movlw	215
 37393  0135CE  6EE6               	movwf	postinc1,c
 37394  0135D0  0E23               	movlw	35
 37395  0135D2  6EE6               	movwf	postinc1,c
 37396  0135D4  0E3C               	movlw	60
 37397  0135D6  6EE6               	movwf	postinc1,c
 37398  0135D8  EC81  F0CD         	call	___flge	;wreg free
 37399  0135DC  B001               	btfsc	btemp& (0+255),0,c
 37400  0135DE  D01C               	goto	l14044
 37401                           
 37402                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 37403  0135E0  0062  F2F4  F009   	movff	_C+190,btemp+8	;volatile
 37404  0135E6  0062  F2F8  F00A   	movff	_C+191,btemp+9	;volatile
 37405  0135EC  0062  F2FC  F00B   	movff	_C+192,btemp+10	;volatile
 37406  0135F2  0062  F300  F00C   	movff	_C+193,btemp+11	;volatile
 37407                           
 37408                           ;stkvar	_adj @ sp[(-6)+0]
 37409  0135F8  0EFA               	movlw	-6
 37410  0135FA  0060  F027  FFE3   	movff	btemp+8,plusw1
 37411  013600  0EFB               	movlw	-5
 37412  013602  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37413  013608  0EFC               	movlw	-4
 37414  01360A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37415  013610  0EFD               	movlw	-3
 37416  013612  0060  F033  FFE3   	movff	btemp+11,plusw1
 37417  013618                     l14044:
 37418                           
 37419                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 37420  013618  0E0A               	movlw	10
 37421  01361A  6EE6               	movwf	postinc1,c
 37422  01361C  0ED7               	movlw	215
 37423  01361E  6EE6               	movwf	postinc1,c
 37424  013620  0E23               	movlw	35
 37425  013622  6EE6               	movwf	postinc1,c
 37426  013624  0E3C               	movlw	60
 37427  013626  6EE6               	movwf	postinc1,c
 37428  013628  EE22  F043         	lfsr	2,_C+68	;volatile
 37429  01362C  006F FF7B FFE6     	movff	postinc2,postinc1
 37430  013632  006F FF7B FFE6     	movff	postinc2,postinc1
 37431  013638  006F FF7B FFE6     	movff	postinc2,postinc1
 37432  01363E  006F FF7B FFE6     	movff	postinc2,postinc1
 37433  013644  EC81  F0CD         	call	___flge	;wreg free
 37434  013648  B001               	btfsc	btemp& (0+255),0,c
 37435  01364A  D01C               	goto	l14048
 37436                           
 37437                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 37438  01364C  0062  F2E4  F009   	movff	_C+186,btemp+8	;volatile
 37439  013652  0062  F2E8  F00A   	movff	_C+187,btemp+9	;volatile
 37440  013658  0062  F2EC  F00B   	movff	_C+188,btemp+10	;volatile
 37441  01365E  0062  F2F0  F00C   	movff	_C+189,btemp+11	;volatile
 37442                           
 37443                           ;stkvar	_adj @ sp[(-6)+0]
 37444  013664  0EFA               	movlw	-6
 37445  013666  0060  F027  FFE3   	movff	btemp+8,plusw1
 37446  01366C  0EFB               	movlw	-5
 37447  01366E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37448  013674  0EFC               	movlw	-4
 37449  013676  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37450  01367C  0EFD               	movlw	-3
 37451  01367E  0060  F033  FFE3   	movff	btemp+11,plusw1
 37452  013684                     l14048:
 37453                           
 37454                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 37455  013684  0E00               	movlw	0
 37456  013686  6EE6               	movwf	postinc1,c
 37457  013688  0E00               	movlw	0
 37458  01368A  6EE6               	movwf	postinc1,c
 37459  01368C  0E61               	movlw	97
 37460  01368E  6EE6               	movwf	postinc1,c
 37461  013690  0E45               	movlw	69
 37462  013692  6EE6               	movwf	postinc1,c
 37463                           
 37464                           ;stkvar	_adj @ sp[(-10)+0]
 37465  013694  0EF6               	movlw	-10
 37466  013696  006F FF8F FFE6     	movff	plusw1,postinc1
 37467  01369C  006F FF8F FFE6     	movff	plusw1,postinc1
 37468  0136A2  006F FF8F FFE6     	movff	plusw1,postinc1
 37469  0136A8  006F FF8F FFE6     	movff	plusw1,postinc1
 37470  0136AE  EE22  F043         	lfsr	2,_C+68	;volatile
 37471  0136B2  006F FF7B FFE6     	movff	postinc2,postinc1
 37472  0136B8  006F FF7B FFE6     	movff	postinc2,postinc1
 37473  0136BE  006F FF7B FFE6     	movff	postinc2,postinc1
 37474  0136C4  006F FF7B FFE6     	movff	postinc2,postinc1
 37475  0136CA  EC6E  F09F         	call	___flmul	;wreg free
 37476  0136CE  0060  F007  FFE6   	movff	btemp,postinc1
 37477  0136D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37478  0136DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37479  0136E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 37480  0136E6  EC61  F0A7         	call	___fldiv	;wreg free
 37481  0136EA  0060  F007  FFE6   	movff	btemp,postinc1
 37482  0136F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37483  0136F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37484  0136FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 37485  013702  0E8F               	movlw	low (_C+144)
 37486  013704  6EE6               	movwf	postinc1,c
 37487  013706  0E08               	movlw	high (_C+144)
 37488  013708  6EE6               	movwf	postinc1,c
 37489  01370A  EC3E  F0DF         	call	___asfladd	;wreg free
 37490                           
 37491                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 37492  01370E  EE22  F08F         	lfsr	2,_C+144	;volatile
 37493  013712  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 37494  013718  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 37495  01371E  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 37496  013724  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 37497                           
 37498                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 37499  01372A  EE22  F09B         	lfsr	2,_C+156	;volatile
 37500  01372E  006F FF7B FFE6     	movff	postinc2,postinc1
 37501  013734  006F FF7B FFE6     	movff	postinc2,postinc1
 37502  01373A  006F FF7B FFE6     	movff	postinc2,postinc1
 37503  013740  006F FF7B FFE6     	movff	postinc2,postinc1
 37504  013746  EE22  F08B         	lfsr	2,_C+140	;volatile
 37505  01374A  006F FF7B FFE6     	movff	postinc2,postinc1
 37506  013750  006F FF7B FFE6     	movff	postinc2,postinc1
 37507  013756  006F FF7B FFE6     	movff	postinc2,postinc1
 37508  01375C  006F FF7B FFE6     	movff	postinc2,postinc1
 37509  013762  EC81  F0CD         	call	___flge	;wreg free
 37510  013766  B001               	btfsc	btemp& (0+255),0,c
 37511  013768  D00E               	goto	l14056
 37512                           
 37513                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 37514  01376A  EE22  F08B         	lfsr	2,_C+140	;volatile
 37515  01376E  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 37516  013774  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 37517  01377A  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 37518  013780  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 37519  013786                     l14056:
 37520                           
 37521                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 37522  013786  0ECD               	movlw	205
 37523  013788  6EE6               	movwf	postinc1,c
 37524  01378A  0ECC               	movlw	204
 37525  01378C  6EE6               	movwf	postinc1,c
 37526  01378E  0ECC               	movlw	204
 37527  013790  6EE6               	movwf	postinc1,c
 37528  013792  0E3D               	movlw	61
 37529  013794  6EE6               	movwf	postinc1,c
 37530  013796  EE22  F09B         	lfsr	2,_C+156	;volatile
 37531  01379A  006F FF7B FFE6     	movff	postinc2,postinc1
 37532  0137A0  006F FF7B FFE6     	movff	postinc2,postinc1
 37533  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 37534  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 37535  0137B2  EC81  F0CD         	call	___flge	;wreg free
 37536  0137B6  B001               	btfsc	btemp& (0+255),0,c
 37537  0137B8  D010               	goto	l14060
 37538                           
 37539                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 37540  0137BA  0ECD               	movlw	205
 37541  0137BC  006F FFA0  F89B    	movff	wreg,_C+156	;volatile
 37542  0137C2  0ECC               	movlw	204
 37543  0137C4  006F FFA0  F89C    	movff	wreg,_C+157	;volatile
 37544  0137CA  0ECC               	movlw	204
 37545  0137CC  006F FFA0  F89D    	movff	wreg,_C+158	;volatile
 37546  0137D2  0E3D               	movlw	61
 37547  0137D4  006F FFA0  F89E    	movff	wreg,_C+159	;volatile
 37548  0137DA                     l14060:
 37549                           
 37550                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 37551  0137DA  0E00               	movlw	0
 37552  0137DC  6EE6               	movwf	postinc1,c
 37553  0137DE  0E00               	movlw	0
 37554  0137E0  6EE6               	movwf	postinc1,c
 37555  0137E2  0E61               	movlw	97
 37556  0137E4  6EE6               	movwf	postinc1,c
 37557  0137E6  0E45               	movlw	69
 37558  0137E8  6EE6               	movwf	postinc1,c
 37559  0137EA  EE22  F047         	lfsr	2,_C+72	;volatile
 37560  0137EE  006F FF7B FFE6     	movff	postinc2,postinc1
 37561  0137F4  006F FF7B FFE6     	movff	postinc2,postinc1
 37562  0137FA  006F FF7B FFE6     	movff	postinc2,postinc1
 37563  013800  006F FF7B FFE6     	movff	postinc2,postinc1
 37564  013806  EC61  F0A7         	call	___fldiv	;wreg free
 37565  01380A  0060  F007  FFE6   	movff	btemp,postinc1
 37566  013810  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37567  013816  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37568  01381C  0060  F013  FFE6   	movff	btemp+3,postinc1
 37569  013822  0E93               	movlw	low (_C+148)
 37570  013824  6EE6               	movwf	postinc1,c
 37571  013826  0E08               	movlw	high (_C+148)
 37572  013828  6EE6               	movwf	postinc1,c
 37573  01382A  EC3E  F0DF         	call	___asfladd	;wreg free
 37574                           
 37575                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 37576  01382E  0E00               	movlw	0
 37577  013830  6EE6               	movwf	postinc1,c
 37578  013832  0E00               	movlw	0
 37579  013834  6EE6               	movwf	postinc1,c
 37580  013836  0E61               	movlw	97
 37581  013838  6EE6               	movwf	postinc1,c
 37582  01383A  0E45               	movlw	69
 37583  01383C  6EE6               	movwf	postinc1,c
 37584  01383E  EE22  F07B         	lfsr	2,_C+124	;volatile
 37585  013842  006F FF7B FFE6     	movff	postinc2,postinc1
 37586  013848  006F FF7B FFE6     	movff	postinc2,postinc1
 37587  01384E  006F FF7B FFE6     	movff	postinc2,postinc1
 37588  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 37589  01385A  EC61  F0A7         	call	___fldiv	;wreg free
 37590  01385E  0060  F007  FFE6   	movff	btemp,postinc1
 37591  013864  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37592  01386A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37593  013870  0060  F013  FFE6   	movff	btemp+3,postinc1
 37594  013876  0EA7               	movlw	low (_C+168)
 37595  013878  6EE6               	movwf	postinc1,c
 37596  01387A  0E08               	movlw	high (_C+168)
 37597  01387C  6EE6               	movwf	postinc1,c
 37598  01387E  EC3E  F0DF         	call	___asfladd	;wreg free
 37599                           
 37600                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 37601  013882  0E00               	movlw	0
 37602  013884  6EE6               	movwf	postinc1,c
 37603  013886  0E00               	movlw	0
 37604  013888  6EE6               	movwf	postinc1,c
 37605  01388A  0E61               	movlw	97
 37606  01388C  6EE6               	movwf	postinc1,c
 37607  01388E  0E45               	movlw	69
 37608  013890  6EE6               	movwf	postinc1,c
 37609  013892  EE22  F077         	lfsr	2,_C+120	;volatile
 37610  013896  006F FF7B FFE6     	movff	postinc2,postinc1
 37611  01389C  006F FF7B FFE6     	movff	postinc2,postinc1
 37612  0138A2  006F FF7B FFE6     	movff	postinc2,postinc1
 37613  0138A8  006F FF7B FFE6     	movff	postinc2,postinc1
 37614  0138AE  EC61  F0A7         	call	___fldiv	;wreg free
 37615  0138B2  0060  F007  FFE6   	movff	btemp,postinc1
 37616  0138B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37617  0138BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37618  0138C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 37619  0138CA  0EAB               	movlw	low (_C+172)
 37620  0138CC  6EE6               	movwf	postinc1,c
 37621  0138CE  0E08               	movlw	high (_C+172)
 37622  0138D0  6EE6               	movwf	postinc1,c
 37623  0138D2  EC3E  F0DF         	call	___asfladd	;wreg free
 37624                           
 37625                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 37626  0138D6  0E00               	movlw	0
 37627  0138D8  6EE6               	movwf	postinc1,c
 37628  0138DA  0E00               	movlw	0
 37629  0138DC  6EE6               	movwf	postinc1,c
 37630  0138DE  0E61               	movlw	97
 37631  0138E0  6EE6               	movwf	postinc1,c
 37632  0138E2  0E45               	movlw	69
 37633  0138E4  6EE6               	movwf	postinc1,c
 37634  0138E6  EE22  F073         	lfsr	2,_C+116	;volatile
 37635  0138EA  006F FF7B FFE6     	movff	postinc2,postinc1
 37636  0138F0  006F FF7B FFE6     	movff	postinc2,postinc1
 37637  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 37638  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 37639  013902  EC61  F0A7         	call	___fldiv	;wreg free
 37640  013906  0060  F007  FFE6   	movff	btemp,postinc1
 37641  01390C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37642  013912  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37643  013918  0060  F013  FFE6   	movff	btemp+3,postinc1
 37644  01391E  0EAF               	movlw	low (_C+176)
 37645  013920  6EE6               	movwf	postinc1,c
 37646  013922  0E08               	movlw	high (_C+176)
 37647  013924  6EE6               	movwf	postinc1,c
 37648  013926  EC3E  F0DF         	call	___asfladd	;wreg free
 37649                           
 37650                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 37651  01392A  EE22  F07F         	lfsr	2,_C+128	;volatile
 37652  01392E  006F FF7B FFE6     	movff	postinc2,postinc1
 37653  013934  006F FF7B FFE6     	movff	postinc2,postinc1
 37654  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 37655  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 37656  013946  0E00               	movlw	0
 37657  013948  6EE6               	movwf	postinc1,c
 37658  01394A  0E00               	movlw	0
 37659  01394C  6EE6               	movwf	postinc1,c
 37660  01394E  0E00               	movlw	0
 37661  013950  6EE6               	movwf	postinc1,c
 37662  013952  0E00               	movlw	0
 37663  013954  6EE6               	movwf	postinc1,c
 37664  013956  EC81  F0CD         	call	___flge	;wreg free
 37665  01395A  B001               	btfsc	btemp& (0+255),0,c
 37666  01395C  D02A               	goto	l14066
 37667                           
 37668                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 37669  01395E  0E00               	movlw	0
 37670  013960  6EE6               	movwf	postinc1,c
 37671  013962  0E00               	movlw	0
 37672  013964  6EE6               	movwf	postinc1,c
 37673  013966  0E61               	movlw	97
 37674  013968  6EE6               	movwf	postinc1,c
 37675  01396A  0E45               	movlw	69
 37676  01396C  6EE6               	movwf	postinc1,c
 37677  01396E  EE22  F07F         	lfsr	2,_C+128	;volatile
 37678  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 37679  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 37680  01397E  006F FF7B FFE6     	movff	postinc2,postinc1
 37681  013984  006F FF7B FFE6     	movff	postinc2,postinc1
 37682  01398A  EC61  F0A7         	call	___fldiv	;wreg free
 37683  01398E  0060  F007  FFE6   	movff	btemp,postinc1
 37684  013994  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37685  01399A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37686  0139A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 37687  0139A6  0E9F               	movlw	low (_C+160)
 37688  0139A8  6EE6               	movwf	postinc1,c
 37689  0139AA  0E08               	movlw	high (_C+160)
 37690  0139AC  6EE6               	movwf	postinc1,c
 37691  0139AE  EC3E  F0DF         	call	___asfladd	;wreg free
 37692  0139B2                     l14066:
 37693                           
 37694                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 37695  0139B2  EE22  F07F         	lfsr	2,_C+128	;volatile
 37696  0139B6  0E03               	movlw	3
 37697  0139B8  AEDB               	btfss	plusw2,7,c
 37698  0139BA  D038               	goto	l14070
 37699                           
 37700                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 37701  0139BC  0E00               	movlw	0
 37702  0139BE  6EE6               	movwf	postinc1,c
 37703  0139C0  0E00               	movlw	0
 37704  0139C2  6EE6               	movwf	postinc1,c
 37705  0139C4  0E61               	movlw	97
 37706  0139C6  6EE6               	movwf	postinc1,c
 37707  0139C8  0E45               	movlw	69
 37708  0139CA  6EE6               	movwf	postinc1,c
 37709  0139CC  EE22  F07F         	lfsr	2,_C+128	;volatile
 37710  0139D0  006F FF7B FFE6     	movff	postinc2,postinc1
 37711  0139D6  006F FF7B FFE6     	movff	postinc2,postinc1
 37712  0139DC  006F FF7B FFE6     	movff	postinc2,postinc1
 37713  0139E2  006F FF7B FFE6     	movff	postinc2,postinc1
 37714  0139E8  EC61  F0A7         	call	___fldiv	;wreg free
 37715  0139EC  0060  F007  FFE6   	movff	btemp,postinc1
 37716  0139F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37717  0139F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37718  0139FE  0060  F013  FFE6   	movff	btemp+3,postinc1
 37719  013A04  EC52  F0DA         	call	_fabsf	;wreg free
 37720  013A08  0060  F007  FFE6   	movff	btemp,postinc1
 37721  013A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37722  013A14  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37723  013A1A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37724  013A20  0EA3               	movlw	low (_C+164)
 37725  013A22  6EE6               	movwf	postinc1,c
 37726  013A24  0E08               	movlw	high (_C+164)
 37727  013A26  6EE6               	movwf	postinc1,c
 37728  013A28  EC3E  F0DF         	call	___asfladd	;wreg free
 37729  013A2C                     l14070:
 37730                           
 37731                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 37732  013A2C  0E00               	movlw	0
 37733  013A2E  6EE6               	movwf	postinc1,c
 37734  013A30  0E00               	movlw	0
 37735  013A32  6EE6               	movwf	postinc1,c
 37736  013A34  0EC8               	movlw	200
 37737  013A36  6EE6               	movwf	postinc1,c
 37738  013A38  0E42               	movlw	66
 37739  013A3A  6EE6               	movwf	postinc1,c
 37740  013A3C  EE22  F08B         	lfsr	2,_C+140	;volatile
 37741  013A40  006F FF7B FFE6     	movff	postinc2,postinc1
 37742  013A46  006F FF7B FFE6     	movff	postinc2,postinc1
 37743  013A4C  006F FF7B FFE6     	movff	postinc2,postinc1
 37744  013A52  006F FF7B FFE6     	movff	postinc2,postinc1
 37745  013A58  EE22  F09B         	lfsr	2,_C+156	;volatile
 37746  013A5C  006F FF7B FFE6     	movff	postinc2,postinc1
 37747  013A62  006F FF7B FFE6     	movff	postinc2,postinc1
 37748  013A68  006F FF7B FFE6     	movff	postinc2,postinc1
 37749  013A6E  006F FF7B FFE6     	movff	postinc2,postinc1
 37750  013A74  EC61  F0A7         	call	___fldiv	;wreg free
 37751  013A78  0060  F007  FFE6   	movff	btemp,postinc1
 37752  013A7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37753  013A84  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37754  013A8A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37755  013A90  EC6E  F09F         	call	___flmul	;wreg free
 37756  013A94  0060  F007  FFE6   	movff	btemp,postinc1
 37757  013A9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37758  013AA0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37759  013AA6  0060  F013  FFE6   	movff	btemp+3,postinc1
 37760  013AAC  ECC8  F0CC         	call	___fltol	;wreg free
 37761  013AB0  0060  F004  F00B   	movff	btemp,btemp+10
 37762  013AB6  0060  F008  F00C   	movff	btemp+1,btemp+11
 37763  013ABC  0E01               	movlw	1
 37764  013ABE  260B               	addwf	(btemp+10)^0,f,c
 37765  013AC0  0E00               	movlw	0
 37766  013AC2  220C               	addwfc	(btemp+11)^0,f,c
 37767  013AC4  0060  F02C  F8B5   	movff	btemp+10,_C+182	;volatile
 37768  013ACA  0060  F030  F8B6   	movff	btemp+11,_C+183	;volatile
 37769                           
 37770                           ;bsoc.c: 76:  if (C.soc > 100)
 37771  013AD0  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37772  013AD4  0E01               	movlw	1
 37773  013AD6  50DB               	movf	plusw2,w,c
 37774  013AD8  E104               	bnz	u1343_20
 37775  013ADA  0E65               	movlw	101
 37776  013ADC  5CDE               	subwf	postinc2,w,c
 37777  013ADE  A0D8               	btfss	status,0,c
 37778  013AE0  D008               	goto	l14076
 37779  013AE2                     u1343_20:
 37780                           
 37781                           ;bsoc.c: 77:   C.soc = 100;
 37782  013AE2  0E64               	movlw	100
 37783  013AE4  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
 37784  013AEA  0E00               	movlw	0
 37785  013AEC  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
 37786  013AF2                     l14076:
 37787                           
 37788                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 37789  013AF2  EE22  F043         	lfsr	2,_C+68	;volatile
 37790  013AF6  0E03               	movlw	3
 37791  013AF8  AEDB               	btfss	plusw2,7,c
 37792  013AFA  D047               	goto	l2297
 37793                           
 37794                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 37795  013AFC  EE22  F043         	lfsr	2,_C+68	;volatile
 37796  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 37797  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 37798  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 37799  013B12  006F FF7B FFE6     	movff	postinc2,postinc1
 37800  013B18  EE22  F09B         	lfsr	2,_C+156	;volatile
 37801  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 37802  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 37803  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 37804  013B2E  006F FF7B FFE6     	movff	postinc2,postinc1
 37805  013B34  EC61  F0A7         	call	___fldiv	;wreg free
 37806  013B38  0060  F007  FFE6   	movff	btemp,postinc1
 37807  013B3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37808  013B44  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37809  013B4A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37810  013B50  ECFD  F0E2         	call	___flneg	;wreg free
 37811  013B54  0060  F007  FFE6   	movff	btemp,postinc1
 37812  013B5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37813  013B60  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37814  013B66  0060  F013  FFE6   	movff	btemp+3,postinc1
 37815  013B6C  ECC8  F0CC         	call	___fltol	;wreg free
 37816  013B70  0060  F004  F00B   	movff	btemp,btemp+10
 37817  013B76  0060  F008  F00C   	movff	btemp+1,btemp+11
 37818  013B7C  0060  F02C  F8B3   	movff	btemp+10,_C+180	;volatile
 37819  013B82  0060  F030  F8B4   	movff	btemp+11,_C+181	;volatile
 37820                           
 37821                           ;bsoc.c: 81:  } else {
 37822  013B88  D008               	goto	l14080
 37823  013B8A                     l2297:
 37824                           
 37825                           ;bsoc.c: 82:   C.runtime = 99;
 37826  013B8A  0E63               	movlw	99
 37827  013B8C  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 37828  013B92  0E00               	movlw	0
 37829  013B94  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 37830  013B9A                     l14080:
 37831                           
 37832                           ;bsoc.c: 84:  if (C.runtime > 99)
 37833  013B9A  EE22  F0B3         	lfsr	2,_C+180	;volatile
 37834  013B9E  0E01               	movlw	1
 37835  013BA0  50DB               	movf	plusw2,w,c
 37836  013BA2  E104               	bnz	u1345_20
 37837  013BA4  0E64               	movlw	100
 37838  013BA6  5CDE               	subwf	postinc2,w,c
 37839  013BA8  A0D8               	btfss	status,0,c
 37840  013BAA  D008               	goto	l14084
 37841  013BAC                     u1345_20:
 37842                           
 37843                           ;bsoc.c: 85:   C.runtime = 99;
 37844  013BAC  0E63               	movlw	99
 37845  013BAE  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 37846  013BB4  0E00               	movlw	0
 37847  013BB6  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 37848  013BBC                     l14084:
 37849                           
 37850                           ;bsoc.c: 87:  V.lowint_count++;
 37851  013BBC  0E01               	movlw	1
 37852  013BBE  0101               	movlb	1	; () banked
 37853  013BC0  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 37854  013BC2  0E00               	movlw	0
 37855  013BC4  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 37856  013BC6  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 37857  013BC8  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 37858                           
 37859                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 37860  013BCA  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 37861  013BCC  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 37862  013BCE  A4D8               	btfss	status,2,c
 37863  013BD0  D177               	goto	l14096
 37864                           
 37865                           ; BSR set to: 1
 37866  013BD2  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 37867  013BD4  B4D8               	btfsc	status,2,c
 37868  013BD6  D174               	goto	l14096
 37869                           
 37870                           ; BSR set to: 1
 37871                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 37872  013BD8  ECB4  F0E9         	call	_port_data_dma_ptr	;wreg free
 37873                           
 37874                           ;stkvar	_log_ptr @ sp[(-6)+4]
 37875  013BDC  0EFF               	movlw	-1
 37876  013BDE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 37877  013BE4  0EFE               	movlw	-2
 37878  013BE6  0060  F007  FFE3   	movff	btemp,plusw1
 37879                           
 37880                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 37881  013BEC  EE22  F0B9         	lfsr	2,_C+186	;volatile
 37882  013BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 37883  013BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 37884  013BFC  006F FF7B FFE6     	movff	postinc2,postinc1
 37885  013C02  006F FF7B FFE6     	movff	postinc2,postinc1
 37886  013C08  EE22  F0BD         	lfsr	2,_C+190	;volatile
 37887  013C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 37888  013C12  006F FF7B FFE6     	movff	postinc2,postinc1
 37889  013C18  006F FF7B FFE6     	movff	postinc2,postinc1
 37890  013C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 37891  013C24  EE22  F09B         	lfsr	2,_C+156	;volatile
 37892  013C28  006F FF7B FFE6     	movff	postinc2,postinc1
 37893  013C2E  006F FF7B FFE6     	movff	postinc2,postinc1
 37894  013C34  006F FF7B FFE6     	movff	postinc2,postinc1
 37895  013C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 37896  013C40  EE22  F126         	lfsr	2,_C+295	;volatile
 37897  013C44  006F FF7B FFE6     	movff	postinc2,postinc1
 37898  013C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 37899  013C50  006F FF7B FFE6     	movff	postinc2,postinc1
 37900  013C56  006F FF7B FFE6     	movff	postinc2,postinc1
 37901  013C5C  EE22  F122         	lfsr	2,_C+291	;volatile
 37902  013C60  006F FF7B FFE6     	movff	postinc2,postinc1
 37903  013C66  006F FF7B FFE6     	movff	postinc2,postinc1
 37904  013C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 37905  013C72  006F FF7B FFE6     	movff	postinc2,postinc1
 37906  013C78  EE22  F121         	lfsr	2,_C+290	;volatile
 37907  013C7C  50DF               	movf	indf2,w,c
 37908  013C7E  6EE6               	movwf	postinc1,c
 37909  013C80  0E00               	movlw	0
 37910  013C82  6EE6               	movwf	postinc1,c
 37911  013C84  EC99  F0E9         	call	_get_ac_charger_relay	;wreg free
 37912  013C88  5001               	movf	btemp^0,w,c
 37913  013C8A  6EE6               	movwf	postinc1,c
 37914  013C8C  0E00               	movlw	0
 37915  013C8E  6EE6               	movwf	postinc1,c
 37916  013C90  EE22  F067         	lfsr	2,_C+104	;volatile
 37917  013C94  006F FF7B FFE6     	movff	postinc2,postinc1
 37918  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 37919  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 37920  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 37921  013CAC  EE22  F087         	lfsr	2,_C+136	;volatile
 37922  013CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 37923  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 37924  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 37925  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 37926  013CC8  EE22  F0B3         	lfsr	2,_C+180	;volatile
 37927  013CCC  006F FF78  F00B    	movff	postinc2,btemp+10
 37928  013CD2  006F FF74  F00C    	movff	postdec2,btemp+11
 37929  013CD8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 37930  013CDE  0060  F033  FFE6   	movff	btemp+11,postinc1
 37931  013CE4  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37932  013CE8  006F FF78  F00B    	movff	postinc2,btemp+10
 37933  013CEE  006F FF74  F00C    	movff	postdec2,btemp+11
 37934  013CF4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 37935  013CFA  0060  F033  FFE6   	movff	btemp+11,postinc1
 37936  013D00  EE22  F093         	lfsr	2,_C+148	;volatile
 37937  013D04  006F FF7B FFE6     	movff	postinc2,postinc1
 37938  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 37939  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 37940  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 37941  013D1C  EE22  F08F         	lfsr	2,_C+144	;volatile
 37942  013D20  006F FF7B FFE6     	movff	postinc2,postinc1
 37943  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 37944  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 37945  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 37946  013D38  EE22  F077         	lfsr	2,_C+120	;volatile
 37947  013D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 37948  013D42  006F FF7B FFE6     	movff	postinc2,postinc1
 37949  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 37950  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 37951  013D54  EE22  F073         	lfsr	2,_C+116	;volatile
 37952  013D58  006F FF7B FFE6     	movff	postinc2,postinc1
 37953  013D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 37954  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 37955  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 37956  013D70  EE22  F07B         	lfsr	2,_C+124	;volatile
 37957  013D74  006F FF7B FFE6     	movff	postinc2,postinc1
 37958  013D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 37959  013D80  006F FF7B FFE6     	movff	postinc2,postinc1
 37960  013D86  006F FF7B FFE6     	movff	postinc2,postinc1
 37961  013D8C  EE22  F07F         	lfsr	2,_C+128	;volatile
 37962  013D90  006F FF7B FFE6     	movff	postinc2,postinc1
 37963  013D96  006F FF7B FFE6     	movff	postinc2,postinc1
 37964  013D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 37965  013DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 37966  013DA8  EE22  F047         	lfsr	2,_C+72	;volatile
 37967  013DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 37968  013DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 37969  013DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 37970  013DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 37971  013DC4  EE22  F043         	lfsr	2,_C+68	;volatile
 37972  013DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 37973  013DCE  006F FF7B FFE6     	movff	postinc2,postinc1
 37974  013DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 37975  013DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 37976  013DE0  EE22  F063         	lfsr	2,_C+100	;volatile
 37977  013DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 37978  013DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 37979  013DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 37980  013DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 37981  013DFC  EE22  F04B         	lfsr	2,_C+76	;volatile
 37982  013E00  006F FF7B FFE6     	movff	postinc2,postinc1
 37983  013E06  006F FF7B FFE6     	movff	postinc2,postinc1
 37984  013E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 37985  013E12  006F FF7B FFE6     	movff	postinc2,postinc1
 37986  013E18  EE22  F04F         	lfsr	2,_C+80	;volatile
 37987  013E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 37988  013E22  006F FF7B FFE6     	movff	postinc2,postinc1
 37989  013E28  006F FF7B FFE6     	movff	postinc2,postinc1
 37990  013E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 37991  013E34  EE22  F053         	lfsr	2,_C+84	;volatile
 37992  013E38  006F FF7B FFE6     	movff	postinc2,postinc1
 37993  013E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 37994  013E44  006F FF7B FFE6     	movff	postinc2,postinc1
 37995  013E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 37996  013E50  0060  F623  FFE6   	movff	_V+129,postinc1
 37997  013E56  0060  F627  FFE6   	movff	_V+130,postinc1
 37998  013E5C  0060  F62B  FFE6   	movff	_V+131,postinc1
 37999  013E62  0060  F62F  FFE6   	movff	_V+132,postinc1
 38000  013E68  0E32               	movlw	50
 38001  013E6A  6EE6               	movwf	postinc1,c
 38002  013E6C  0E00               	movlw	0
 38003  013E6E  6EE6               	movwf	postinc1,c
 38004  013E70  0ECF               	movlw	low STR_81
 38005  013E72  6EE6               	movwf	postinc1,c
 38006  013E74  0EFA               	movlw	high STR_81
 38007  013E76  6EE6               	movwf	postinc1,c
 38008                           
 38009                           ;stkvar	_log_ptr @ sp[(-98)+4]
 38010  013E78  0EA2               	movlw	-94
 38011  013E7A  006F FF8F FFE6     	movff	plusw1,postinc1
 38012  013E80  006F FF8F FFE6     	movff	plusw1,postinc1
 38013  013E86  0E5E               	movlw	94
 38014  013E88  6EE6               	movwf	postinc1,c
 38015  013E8A  EC46  F0D5         	call	_sprintf	;wreg free
 38016                           
 38017                           ; BSR set to: 0
 38018                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 38019  013E8E  0E7D               	movlw	125
 38020  013E90  6EE6               	movwf	postinc1,c
 38021  013E92  0E00               	movlw	0
 38022  013E94  6EE6               	movwf	postinc1,c
 38023  013E96  0E0A               	movlw	10
 38024  013E98  6EE6               	movwf	postinc1,c
 38025  013E9A  EC56  F0E4         	call	_StartTimer	;wreg free
 38026                           
 38027                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 38028                           ;stkvar	_log_ptr @ sp[(-6)+4]
 38029  013E9E  0EFE               	movlw	-2
 38030  013EA0  006F FF8F FFE6     	movff	plusw1,postinc1
 38031  013EA6  006F FF8F FFE6     	movff	plusw1,postinc1
 38032  013EAC  ECFB  F0DB         	call	_strlen	;wreg free
 38033  013EB0  0060  F007  FFE6   	movff	btemp,postinc1
 38034  013EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38035  013EBC  EC61  F0E2         	call	_send_port_data_dma	;wreg free
 38036  013EC0                     l14096:
 38037                           
 38038                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 38039  013EC0  0E09               	movlw	9
 38040  013EC2  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 38041  013EC4  D001               	goto	l2301
 38042                           
 38043                           ;bsoc.c: 102:   log_update_wait = 0;
 38044  013EC6  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 38045  013EC8                     l2301:
 38046                           
 38047                           ;bsoc.c: 104:  C.update = 0;
 38048  013EC8  0E00               	movlw	0
 38049  013ECA  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 38050                           
 38051                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 38052  013ED0  92BE               	bcf	190,1,c	;volatile
 38053                           
 38054                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 38055  013ED2  0EFA               	movlw	250
 38056  013ED4  26E1               	addwf	fsr1l,f,c
 38057  013ED6  0EFF               	movlw	255
 38058  013ED8  22E2               	addwfc	fsr1h,f,c
 38059  013EDA  0012               	return		;funcret
 38060  013EDC                     __end_of_calc_bsoc:
 38061                           	opt callstack 0
 38062                           
 38063 ;; *************** function _send_port_data_dma *****************
 38064 ;; Defined at:
 38065 ;;		line 398 in file "eadog.c"
 38066 ;; Parameters:    Size  Location     Type
 38067 ;;  dsize           2  [STACK] unsigned short 
 38068 ;; Auto vars:     Size  Location     Type
 38069 ;;		None
 38070 ;; Return value:  Size  Location     Type
 38071 ;;                  1  [STACK] void 
 38072 ;; Registers used:
 38073 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38074 ;; Tracked objects:
 38075 ;;		On entry : 0/0
 38076 ;;		On exit  : 3F/3B
 38077 ;;		Unchanged: 0/0
 38078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38083 ;;Total ram usage:        0 bytes
 38084 ;; Hardware stack levels used:    1
 38085 ;; Hardware stack levels required when called:    3
 38086 ;; This function calls:
 38087 ;;		Nothing
 38088 ;; This function is called by:
 38089 ;;		_calc_bsoc
 38090 ;; This function uses a reentrant model
 38091 ;;
 38092                           
 38093                           	psect	text173
 38094  01C4C2                     __ptext173:
 38095                           	opt callstack 0
 38096  01C4C2                     _send_port_data_dma:
 38097                           	opt callstack 10
 38098                           
 38099                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 38100                           ;stkvar	_dsize @ sp[(0)+-2]
 38101                           
 38102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38103                           ;incstack = 0
 38104  01C4C2  0EFE               	movlw	-2
 38105  01C4C4  04E3               	decf	plusw1,w,c
 38106  01C4C6  0EFF               	movlw	-1
 38107  01C4C8  006F FF8C  F001    	movff	plusw1,btemp
 38108  01C4CE  0E02               	movlw	2
 38109  01C4D0  5A01               	subwfb	btemp^0,f,c
 38110  01C4D2  A0D8               	btfss	status,0,c
 38111  01C4D4  D00C               	goto	l10810
 38112                           
 38113                           ;eadog.c: 401:   dsize = 512;
 38114  01C4D6  0E00               	movlw	0
 38115  01C4D8  6E0B               	movwf	(btemp+10)^0,c
 38116  01C4DA  0E02               	movlw	2
 38117  01C4DC  6E0C               	movwf	(btemp+11)^0,c
 38118                           
 38119                           ;stkvar	_dsize @ sp[(0)+-2]
 38120  01C4DE  0EFE               	movlw	-2
 38121  01C4E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38122  01C4E6  0EFF               	movlw	-1
 38123  01C4E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 38124  01C4EE                     l10810:
 38125                           
 38126                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 38127  01C4EE  013B               	movlb	59	; () banked
 38128  01C4F0  9FDC               	bcf	220,7,b	;volatile
 38129                           
 38130                           ; BSR set to: 59
 38131                           ;eadog.c: 404:  DMA2SSZ = dsize;
 38132                           ;stkvar	_dsize @ sp[(0)+-2]
 38133  01C4F2  0EFE               	movlw	-2
 38134  01C4F4  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 38135  01C4FA  0EFF               	movlw	-1
 38136  01C4FC  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 38137                           
 38138                           ; BSR set to: 59
 38139                           ;eadog.c: 405:  DMA2DSZ = 1;
 38140  01C502  0E00               	movlw	0
 38141  01C504  6FCF               	movwf	207,b	;volatile
 38142  01C506  0E01               	movlw	1
 38143  01C508  6FCE               	movwf	206,b	;volatile
 38144                           
 38145                           ; BSR set to: 59
 38146                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 38147  01C50A  8FDC               	bsf	220,7,b	;volatile
 38148                           
 38149                           ; BSR set to: 59
 38150                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 38151  01C50C  8DDC               	bsf	220,6,b	;volatile
 38152                           
 38153                           ; BSR set to: 59
 38154                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38155  01C50E  52E5               	movf	postdec1,f,c
 38156  01C510  52E5               	movf	postdec1,f,c
 38157  01C512  0012               	return		;funcret
 38158  01C514                     __end_of_send_port_data_dma:
 38159                           	opt callstack 0
 38160                           
 38161 ;; *************** function _port_data_dma_ptr *****************
 38162 ;; Defined at:
 38163 ;;		line 413 in file "eadog.c"
 38164 ;; Parameters:    Size  Location     Type
 38165 ;;		None
 38166 ;; Auto vars:     Size  Location     Type
 38167 ;;		None
 38168 ;; Return value:  Size  Location     Type
 38169 ;;                  2  [STACK] PTR unsigned char 
 38170 ;; Registers used:
 38171 ;;		wreg, status,2, status,0, btemp, btemp+1
 38172 ;; Tracked objects:
 38173 ;;		On entry : 3F/1
 38174 ;;		On exit  : 0/0
 38175 ;;		Unchanged: 0/0
 38176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38181 ;;Total ram usage:        0 bytes
 38182 ;; Hardware stack levels used:    1
 38183 ;; Hardware stack levels required when called:    3
 38184 ;; This function calls:
 38185 ;;		Nothing
 38186 ;; This function is called by:
 38187 ;;		_calc_bsoc
 38188 ;; This function uses a reentrant model
 38189 ;;
 38190                           
 38191                           	psect	text174
 38192  01D368                     __ptext174:
 38193                           	opt callstack 0
 38194  01D368                     _port_data_dma_ptr:
 38195                           	opt callstack 10
 38196                           
 38197                           ;eadog.c: 415:  return port_data;
 38198                           
 38199                           ; BSR set to: 59
 38200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38201                           ;incstack = 0
 38202  01D368  0EFF               	movlw	low _port_data
 38203  01D36A  6E01               	movwf	btemp^0,c
 38204  01D36C  0E05               	movlw	high _port_data
 38205  01D36E  6E02               	movwf	(btemp+1)^0,c
 38206                           
 38207                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38208  01D370  0012               	return		;funcret
 38209  01D372                     __end_of_port_data_dma_ptr:
 38210                           	opt callstack 0
 38211                           
 38212 ;; *************** function ___asfladd *****************
 38213 ;; Defined at:
 38214 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 38215 ;; Parameters:    Size  Location     Type
 38216 ;;  f1p             2  [STACK] PTR 
 38217 ;;		 -> C(299), 
 38218 ;;  f2              4  [STACK] PTR 
 38219 ;; Auto vars:     Size  Location     Type
 38220 ;;		None
 38221 ;; Return value:  Size  Location     Type
 38222 ;;                  4  [STACK] PTR 
 38223 ;; Registers used:
 38224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38225 ;; Tracked objects:
 38226 ;;		On entry : 0/0
 38227 ;;		On exit  : 0/0
 38228 ;;		Unchanged: 0/0
 38229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38234 ;;Total ram usage:        0 bytes
 38235 ;; Hardware stack levels used:    1
 38236 ;; Hardware stack levels required when called:    4
 38237 ;; This function calls:
 38238 ;;		___fladd
 38239 ;; This function is called by:
 38240 ;;		_calc_bsoc
 38241 ;; This function uses a reentrant model
 38242 ;;
 38243                           
 38244                           	psect	text175
 38245  01BE7C                     __ptext175:
 38246                           	opt callstack 0
 38247  01BE7C                     ___asfladd:
 38248                           	opt callstack 9
 38249                           
 38250                           ;	Return value of ___asfladd is never used
 38251                           ;stkvar	_f2 @ sp[(0)+-6]
 38252                           
 38253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38254                           ;incstack = 0
 38255  01BE7C  0EFA               	movlw	-6
 38256  01BE7E  006F FF8F FFE6     	movff	plusw1,postinc1
 38257  01BE84  006F FF8F FFE6     	movff	plusw1,postinc1
 38258  01BE8A  006F FF8F FFE6     	movff	plusw1,postinc1
 38259  01BE90  006F FF8F FFE6     	movff	plusw1,postinc1
 38260                           
 38261                           ;stkvar	_f1p @ sp[(-4)+-2]
 38262  01BE96  0EFA               	movlw	-6
 38263  01BE98  006F FF8F FFD9     	movff	plusw1,fsr2l
 38264  01BE9E  0EFB               	movlw	-5
 38265  01BEA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 38266  01BEA6  006F FF7B FFE6     	movff	postinc2,postinc1
 38267  01BEAC  006F FF7B FFE6     	movff	postinc2,postinc1
 38268  01BEB2  006F FF7B FFE6     	movff	postinc2,postinc1
 38269  01BEB8  006F FF7B FFE6     	movff	postinc2,postinc1
 38270  01BEBE  EC83  F0A3         	call	___fladd	;wreg free
 38271                           
 38272                           ;stkvar	_f1p @ sp[(0)+-2]
 38273  01BEC2  0EFE               	movlw	-2
 38274  01BEC4  006F FF8F FFD9     	movff	plusw1,fsr2l
 38275  01BECA  0EFF               	movlw	-1
 38276  01BECC  006F FF8F FFDA     	movff	plusw1,fsr2h
 38277  01BED2  0060  F007  FFDE   	movff	btemp,postinc2
 38278  01BED8  0060  F00B  FFDE   	movff	btemp+1,postinc2
 38279  01BEDE  0060  F00F  FFDE   	movff	btemp+2,postinc2
 38280  01BEE4  0060  F013  FFDE   	movff	btemp+3,postinc2
 38281                           
 38282                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 38283  01BEEA  0EFA               	movlw	250
 38284  01BEEC  26E1               	addwf	fsr1l,f,c
 38285  01BEEE  0EFF               	movlw	255
 38286  01BEF0  22E2               	addwfc	fsr1h,f,c
 38287  01BEF2  0012               	return		;funcret
 38288  01BEF4                     __end_of___asfladd:
 38289                           	opt callstack 0
 38290                           
 38291 ;; *************** function _INT0_ISR *****************
 38292 ;; Defined at:
 38293 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 38294 ;; Parameters:    Size  Location     Type
 38295 ;;		None
 38296 ;; Auto vars:     Size  Location     Type
 38297 ;;		None
 38298 ;; Return value:  Size  Location     Type
 38299 ;;                  1    wreg      void 
 38300 ;; Registers used:
 38301 ;;		wreg, status,2, status,0, pclath, tosl
 38302 ;; Tracked objects:
 38303 ;;		On entry : 0/0
 38304 ;;		On exit  : 0/0
 38305 ;;		Unchanged: 0/0
 38306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38311 ;;Total ram usage:        0 bytes
 38312 ;; Hardware stack levels used:    1
 38313 ;; Hardware stack levels required when called:    2
 38314 ;; This function calls:
 38315 ;;		_INT0_CallBack
 38316 ;; This function is called by:
 38317 ;;		Interrupt level 2
 38318 ;; This function uses a non-reentrant model
 38319 ;;
 38320                           
 38321                           	psect	text176
 38322  01D340                     __ptext176:
 38323                           	opt callstack 0
 38324  01D340                     _INT0_ISR:
 38325                           	opt callstack 2
 38326                           
 38327                           ;incstack = 0
 38328  01D340  EE14  F208         	lfsr	1,___inthi_sp
 38329                           
 38330                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 38331  01D344  0139               	movlb	57	; () banked
 38332  01D346  91A1               	bcf	161,0,b	;volatile
 38333                           
 38334                           ; BSR set to: 57
 38335                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 38336  01D348  EC26  F0E8         	call	_INT0_CallBack	;wreg free
 38337  01D34C  0011               	retfie		f
 38338  01D34E                     __end_of_INT0_ISR:
 38339                           	opt callstack 0
 38340                           
 38341 ;; *************** function _INT0_CallBack *****************
 38342 ;; Defined at:
 38343 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 38344 ;; Parameters:    Size  Location     Type
 38345 ;;		None
 38346 ;; Auto vars:     Size  Location     Type
 38347 ;;		None
 38348 ;; Return value:  Size  Location     Type
 38349 ;;                  1  [STACK] void 
 38350 ;; Registers used:
 38351 ;;		wreg, status,2, status,0, pclath, tosl
 38352 ;; Tracked objects:
 38353 ;;		On entry : 3F/39
 38354 ;;		On exit  : 0/0
 38355 ;;		Unchanged: 0/0
 38356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38361 ;;Total ram usage:        0 bytes
 38362 ;; Hardware stack levels used:    1
 38363 ;; Hardware stack levels required when called:    1
 38364 ;; This function calls:
 38365 ;;		Absolute function
 38366 ;;		_INT0_DefaultInterruptHandler
 38367 ;; This function is called by:
 38368 ;;		_INT0_ISR
 38369 ;; This function uses a reentrant model
 38370 ;;
 38371                           
 38372                           	psect	text177
 38373  01D04C                     __ptext177:
 38374                           	opt callstack 0
 38375  01D04C                     _INT0_CallBack:
 38376                           	opt callstack 2
 38377                           
 38378                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 38379                           
 38380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38381                           ;incstack = 0
 38382  01D04C  0100               	movlb	0	; () banked
 38383  01D04E  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 38384  01D050  1194               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 38385  01D052  1195               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 38386  01D054  B4D8               	btfsc	status,2,c
 38387  01D056  0012               	return	
 38388                           
 38389                           ; BSR set to: 0
 38390                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 38391  01D058  D801               	call	u1075_48
 38392  01D05A  0012               	return	
 38393  01D05C                     u1075_48:
 38394  01D05C  0005               	push	
 38395  01D05E  6EFA               	movwf	pclath,c
 38396  01D060  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 38397  01D062  6EFD               	movwf	tosl,c
 38398  01D064  5194               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 38399  01D066  6EFE               	movwf	tosh,c
 38400  01D068  5195               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 38401  01D06A  6EFF               	movwf	tosu,c
 38402  01D06C  50FA               	movf	pclath,w,c
 38403  01D06E  0012               	return		;indir
 38404  01D070                     __end_of_INT0_CallBack:
 38405                           	opt callstack 0
 38406                           
 38407 ;; *************** function _INT0_DefaultInterruptHandler *****************
 38408 ;; Defined at:
 38409 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 38410 ;; Parameters:    Size  Location     Type
 38411 ;;		None
 38412 ;; Auto vars:     Size  Location     Type
 38413 ;;		None
 38414 ;; Return value:  Size  Location     Type
 38415 ;;                  1  [STACK] void 
 38416 ;; Registers used:
 38417 ;;		None
 38418 ;; Tracked objects:
 38419 ;;		On entry : 3F/0
 38420 ;;		On exit  : 0/0
 38421 ;;		Unchanged: 0/0
 38422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38427 ;;Total ram usage:        0 bytes
 38428 ;; Hardware stack levels used:    1
 38429 ;; This function calls:
 38430 ;;		Nothing
 38431 ;; This function is called by:
 38432 ;;		_EXT_INT_Initialize
 38433 ;;		_INT0_CallBack
 38434 ;; This function uses a reentrant model
 38435 ;;
 38436                           
 38437                           	psect	text178
 38438  01D3E6                     __ptext178:
 38439                           	opt callstack 0
 38440  01D3E6                     _INT0_DefaultInterruptHandler:
 38441                           	opt callstack 2
 38442                           
 38443                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38444                           
 38445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38446                           ;incstack = 0
 38447  01D3E6  0012               	return		;funcret
 38448  01D3E8                     __end_of_INT0_DefaultInterruptHandler:
 38449                           	opt callstack 0
 38450                           
 38451 ;; *************** function _Default_ISR *****************
 38452 ;; Defined at:
 38453 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 38454 ;; Parameters:    Size  Location     Type
 38455 ;;		None
 38456 ;; Auto vars:     Size  Location     Type
 38457 ;;		None
 38458 ;; Return value:  Size  Location     Type
 38459 ;;                  1    wreg      void 
 38460 ;; Registers used:
 38461 ;;		None
 38462 ;; Tracked objects:
 38463 ;;		On entry : 0/0
 38464 ;;		On exit  : 0/0
 38465 ;;		Unchanged: 0/0
 38466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38471 ;;Total ram usage:        0 bytes
 38472 ;; Hardware stack levels used:    1
 38473 ;; This function calls:
 38474 ;;		Nothing
 38475 ;; This function is called by:
 38476 ;;		Interrupt level 2
 38477 ;; This function uses a non-reentrant model
 38478 ;;
 38479                           
 38480                           	psect	text179
 38481  01D3DC                     __ptext179:
 38482                           	opt callstack 0
 38483  01D3DC                     _Default_ISR:
 38484                           	opt callstack 4
 38485                           
 38486                           ;incstack = 0
 38487  01D3DC  EE14  F208         	lfsr	1,___inthi_sp
 38488  01D3E0  0011               	retfie		f
 38489  01D3E2                     __end_of_Default_ISR:
 38490                           	opt callstack 0
 38491                           
 38492 ;; *************** function _ADCC_ISR *****************
 38493 ;; Defined at:
 38494 ;;		line 314 in file "mcc_generated_files/adcc.c"
 38495 ;; Parameters:    Size  Location     Type
 38496 ;;		None
 38497 ;; Auto vars:     Size  Location     Type
 38498 ;;		None
 38499 ;; Return value:  Size  Location     Type
 38500 ;;                  1    wreg      void 
 38501 ;; Registers used:
 38502 ;;		wreg, status,2, status,0, pclath, tosl
 38503 ;; Tracked objects:
 38504 ;;		On entry : 0/0
 38505 ;;		On exit  : 0/0
 38506 ;;		Unchanged: 0/0
 38507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38512 ;;Total ram usage:        0 bytes
 38513 ;; Hardware stack levels used:    1
 38514 ;; Hardware stack levels required when called:    1
 38515 ;; This function calls:
 38516 ;;		Absolute function
 38517 ;;		_ADCC_DefaultInterruptHandler
 38518 ;;		_adc_int_handler
 38519 ;; This function is called by:
 38520 ;;		Interrupt level 2
 38521 ;; This function uses a non-reentrant model
 38522 ;;
 38523                           
 38524                           	psect	text180
 38525  01CCE0                     __ptext180:
 38526                           	opt callstack 0
 38527  01CCE0                     _ADCC_ISR:
 38528                           	opt callstack 3
 38529                           
 38530                           ;incstack = 0
 38531  01CCE0  EE14  F208         	lfsr	1,___inthi_sp
 38532                           
 38533                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 38534  01CCE4  0139               	movlb	57	; () banked
 38535  01CCE6  95A1               	bcf	161,2,b	;volatile
 38536                           
 38537                           ; BSR set to: 57
 38538                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 38539  01CCE8  0100               	movlb	0	; () banked
 38540  01CCEA  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 38541  01CCEC  1185               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 38542  01CCEE  1186               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 38543  01CCF0  B4D8               	btfsc	status,2,c
 38544  01CCF2  0011               	retfie		f
 38545                           
 38546                           ; BSR set to: 0
 38547                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 38548  01CCF4  D801               	call	i2u1129_48
 38549  01CCF6  0011               	retfie		f
 38550  01CCF8                     i2u1129_48:
 38551  01CCF8  0005               	push	
 38552  01CCFA  6EFA               	movwf	pclath,c
 38553  01CCFC  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 38554  01CCFE  6EFD               	movwf	tosl,c
 38555  01CD00  5185               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 38556  01CD02  6EFE               	movwf	tosh,c
 38557  01CD04  5186               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 38558  01CD06  6EFF               	movwf	tosu,c
 38559  01CD08  50FA               	movf	pclath,w,c
 38560  01CD0A  0012               	return		;indir
 38561  01CD0C                     __end_of_ADCC_ISR:
 38562                           	opt callstack 0
 38563                           
 38564 ;; *************** function _adc_int_t_handler *****************
 38565 ;; Defined at:
 38566 ;;		line 176 in file "daq.c"
 38567 ;; Parameters:    Size  Location     Type
 38568 ;;		None
 38569 ;; Auto vars:     Size  Location     Type
 38570 ;;		None
 38571 ;; Return value:  Size  Location     Type
 38572 ;;                  1  [STACK] void 
 38573 ;; Registers used:
 38574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 38575 ;; Tracked objects:
 38576 ;;		On entry : 3F/0
 38577 ;;		On exit  : 1/0
 38578 ;;		Unchanged: 0/0
 38579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38584 ;;Total ram usage:        0 bytes
 38585 ;; Hardware stack levels used:    1
 38586 ;; Hardware stack levels required when called:    1
 38587 ;; This function calls:
 38588 ;;		_ADCC_DischargeSampleCapacitor
 38589 ;;		_ADCC_StartConversion
 38590 ;; This function is called by:
 38591 ;;		_start_adc_scan
 38592 ;;		_ADCC_ThresholdISR
 38593 ;; This function uses a reentrant model
 38594 ;;
 38595                           
 38596                           	psect	text181
 38597  01BD84                     __ptext181:
 38598                           	opt callstack 0
 38599  01BD84                     _adc_int_t_handler:
 38600                           	opt callstack 2
 38601                           
 38602                           ;daq.c: 181:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 38603                           
 38604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38605                           ;incstack = 0
 38606  01BD84  013E               	movlb	62	; () banked
 38607  01BD86  51E6               	movf	230,w,b	;volatile
 38608  01BD88  006F FB9C  F001    	movff	16103,btemp	;volatile
 38609  01BD8E  6A02               	clrf	(btemp+1)^0,c
 38610  01BD90  0060  F004  F002   	movff	btemp,btemp+1
 38611  01BD96  6A01               	clrf	btemp^0,c
 38612  01BD98  2601               	addwf	btemp^0,f,c
 38613  01BD9A  0E00               	movlw	0
 38614  01BD9C  2202               	addwfc	(btemp+1)^0,f,c
 38615  01BD9E  0100               	movlb	0	; () banked
 38616  01BDA0  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 38617  01BDA2  0D02               	mullw	2
 38618  01BDA4  50F3               	movf	243,w,c
 38619  01BDA6  0FAE               	addlw	low _R
 38620  01BDA8  6ED9               	movwf	fsr2l,c
 38621  01BDAA  6ADA               	clrf	fsr2h,c
 38622  01BDAC  0060  F007  FFDE   	movff	btemp,postinc2
 38623  01BDB2  0060  F00B  FFDD   	movff	btemp+1,postdec2
 38624  01BDB8                     l12314:
 38625                           
 38626                           ;daq.c: 183:   if (++R.scan_index > 0XD) {
 38627  01BDB8  0100               	movlb	0	; () banked
 38628  01BDBA  2BE0               	incf	(_R+50)& (0+255),f,b	;volatile
 38629  01BDBC  0E0D               	movlw	13
 38630  01BDBE  65E0               	cpfsgt	(_R+50)& (0+255),b	;volatile
 38631  01BDC0  D003               	goto	l12320
 38632                           
 38633                           ; BSR set to: 0
 38634                           ;daq.c: 184:    R.done = 1;
 38635  01BDC2  0E01               	movlw	1
 38636  01BDC4  6FE3               	movwf	(_R+53)& (0+255),b	;volatile
 38637  01BDC6  0012               	return	
 38638  01BDC8                     l12320:
 38639                           
 38640                           ; BSR set to: 0
 38641                           ;daq.c: 190:  } while (!((R.scan_select >> R.scan_index) &0x1));
 38642  01BDC8  0060  F380  F00C   	movff	_R+50,btemp+11	;volatile
 38643  01BDCE  EE20  F0E1         	lfsr	2,_R+51	;volatile
 38644  01BDD2  006F FF78  F009    	movff	postinc2,btemp+8
 38645  01BDD8  006F FF74  F00A    	movff	postdec2,btemp+9
 38646  01BDDE  2A0C               	incf	(btemp+11)^0,f,c
 38647  01BDE0  D003               	goto	u1126_44
 38648  01BDE2                     u1126_45:
 38649  01BDE2  90D8               	bcf	status,0,c
 38650  01BDE4  320A               	rrcf	(btemp+9)^0,f,c
 38651  01BDE6  3209               	rrcf	(btemp+8)^0,f,c
 38652  01BDE8                     u1126_44:
 38653  01BDE8  2E0C               	decfsz	(btemp+11)^0,f,c
 38654  01BDEA  D7FB               	goto	u1126_45
 38655  01BDEC  A009               	btfss	(btemp+8)^0,0,c
 38656  01BDEE  D7E4               	goto	l12314
 38657                           
 38658                           ;daq.c: 191:  ADCC_DischargeSampleCapacitor();
 38659  01BDF0  ECCF  F0E9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 38660                           
 38661                           ; BSR set to: 62
 38662                           ;daq.c: 192:  ADCC_StartConversion(R.scan_index & 0xf);
 38663  01BDF4  0100               	movlb	0	; () banked
 38664  01BDF6  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 38665  01BDF8  0B0F               	andlw	15
 38666  01BDFA  6EE6               	movwf	postinc1,c
 38667  01BDFC  EC5A  F0E9         	call	_ADCC_StartConversion	;wreg free
 38668                           
 38669                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38670  01BE00  0012               	return		;funcret
 38671  01BE02                     __end_of_adc_int_t_handler:
 38672                           	opt callstack 0
 38673                           
 38674 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 38675 ;; Defined at:
 38676 ;;		line 339 in file "mcc_generated_files/adcc.c"
 38677 ;; Parameters:    Size  Location     Type
 38678 ;;		None
 38679 ;; Auto vars:     Size  Location     Type
 38680 ;;		None
 38681 ;; Return value:  Size  Location     Type
 38682 ;;                  1  [STACK] void 
 38683 ;; Registers used:
 38684 ;;		None
 38685 ;; Tracked objects:
 38686 ;;		On entry : 3F/0
 38687 ;;		On exit  : 0/0
 38688 ;;		Unchanged: 0/0
 38689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38694 ;;Total ram usage:        0 bytes
 38695 ;; Hardware stack levels used:    1
 38696 ;; This function calls:
 38697 ;;		Nothing
 38698 ;; This function is called by:
 38699 ;;		_ADCC_Initialize
 38700 ;;		_ADCC_ISR
 38701 ;;		_ADCC_ThresholdISR
 38702 ;; This function uses a reentrant model
 38703 ;;
 38704                           
 38705                           	psect	text182
 38706  01D3E8                     __ptext182:
 38707                           	opt callstack 0
 38708  01D3E8                     _ADCC_DefaultInterruptHandler:
 38709                           	opt callstack 3
 38710                           
 38711                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38712                           
 38713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38714                           ;incstack = 0
 38715  01D3E8  0012               	return		;funcret
 38716  01D3EA                     __end_of_ADCC_DefaultInterruptHandler:
 38717                           	opt callstack 0
 38718                           
 38719 ;; *************** function _adc_int_handler *****************
 38720 ;; Defined at:
 38721 ;;		line 166 in file "daq.c"
 38722 ;; Parameters:    Size  Location     Type
 38723 ;;		None
 38724 ;; Auto vars:     Size  Location     Type
 38725 ;;		None
 38726 ;; Return value:  Size  Location     Type
 38727 ;;                  1  [STACK] void 
 38728 ;; Registers used:
 38729 ;;		None
 38730 ;; Tracked objects:
 38731 ;;		On entry : 3F/0
 38732 ;;		On exit  : 0/0
 38733 ;;		Unchanged: 0/0
 38734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38739 ;;Total ram usage:        0 bytes
 38740 ;; Hardware stack levels used:    1
 38741 ;; This function calls:
 38742 ;;		Nothing
 38743 ;; This function is called by:
 38744 ;;		_start_adc_scan
 38745 ;;		_ADCC_ISR
 38746 ;; This function uses a reentrant model
 38747 ;;
 38748                           
 38749                           	psect	text183
 38750  01D3EA                     __ptext183:
 38751                           	opt callstack 0
 38752  01D3EA                     _adc_int_handler:
 38753                           	opt callstack 3
 38754                           
 38755                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 38756                           
 38757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38758                           ;incstack = 0
 38759  01D3EA  0012               	return		;funcret
 38760  01D3EC                     __end_of_adc_int_handler:
 38761                           	opt callstack 0
 38762                           
 38763 ;; *************** function _ADCC_ThresholdISR *****************
 38764 ;; Defined at:
 38765 ;;		line 327 in file "mcc_generated_files/adcc.c"
 38766 ;; Parameters:    Size  Location     Type
 38767 ;;		None
 38768 ;; Auto vars:     Size  Location     Type
 38769 ;;		None
 38770 ;; Return value:  Size  Location     Type
 38771 ;;                  1    wreg      void 
 38772 ;; Registers used:
 38773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 38774 ;; Tracked objects:
 38775 ;;		On entry : 0/0
 38776 ;;		On exit  : 0/0
 38777 ;;		Unchanged: 0/0
 38778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38781 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38782 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38783 ;;Total ram usage:        5 bytes
 38784 ;; Hardware stack levels used:    1
 38785 ;; Hardware stack levels required when called:    2
 38786 ;; This function calls:
 38787 ;;		Absolute function
 38788 ;;		_ADCC_DefaultInterruptHandler
 38789 ;;		_adc_int_t_handler
 38790 ;; This function is called by:
 38791 ;;		Interrupt level 2
 38792 ;; This function uses a non-reentrant model
 38793 ;;
 38794                           
 38795                           	psect	text184
 38796  01C03C                     __ptext184:
 38797                           	opt callstack 0
 38798  01C03C                     _ADCC_ThresholdISR:
 38799                           	opt callstack 2
 38800                           
 38801                           ;incstack = 0
 38802  01C03C  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 38803  01C042  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 38804  01C048  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 38805  01C04E  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 38806  01C054  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 38807  01C05A  EE14  F208         	lfsr	1,___inthi_sp
 38808                           
 38809                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 38810  01C05E  0139               	movlb	57	; () banked
 38811  01C060  97A1               	bcf	161,3,b	;volatile
 38812                           
 38813                           ; BSR set to: 57
 38814                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 38815  01C062  0100               	movlb	0	; () banked
 38816  01C064  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 38817  01C066  1182               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 38818  01C068  1183               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 38819  01C06A  B4D8               	btfsc	status,2,c
 38820  01C06C  D00C               	goto	i2u1131_49
 38821                           
 38822                           ; BSR set to: 0
 38823                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 38824  01C06E  D801               	call	i2u1131_48
 38825  01C070  D00A               	goto	i2u1131_49
 38826  01C072                     i2u1131_48:
 38827  01C072  0005               	push	
 38828  01C074  6EFA               	movwf	pclath,c
 38829  01C076  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 38830  01C078  6EFD               	movwf	tosl,c
 38831  01C07A  5182               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 38832  01C07C  6EFE               	movwf	tosh,c
 38833  01C07E  5183               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 38834  01C080  6EFF               	movwf	tosu,c
 38835  01C082  50FA               	movf	pclath,w,c
 38836  01C084  0012               	return		;indir
 38837  01C086                     i2u1131_49:
 38838  01C086  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 38839  01C08C  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 38840  01C092  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 38841  01C098  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 38842  01C09E  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 38843  01C0A4  0011               	retfie		f
 38844  01C0A6                     __end_of_ADCC_ThresholdISR:
 38845                           	opt callstack 0
 38846                           
 38847 ;; *************** function _UART1_rx_vect_isr *****************
 38848 ;; Defined at:
 38849 ;;		line 181 in file "mcc_generated_files/uart1.c"
 38850 ;; Parameters:    Size  Location     Type
 38851 ;;		None
 38852 ;; Auto vars:     Size  Location     Type
 38853 ;;		None
 38854 ;; Return value:  Size  Location     Type
 38855 ;;                  1    wreg      void 
 38856 ;; Registers used:
 38857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 38858 ;; Tracked objects:
 38859 ;;		On entry : 0/0
 38860 ;;		On exit  : 0/0
 38861 ;;		Unchanged: 0/0
 38862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38867 ;;Total ram usage:        0 bytes
 38868 ;; Hardware stack levels used:    1
 38869 ;; Hardware stack levels required when called:    1
 38870 ;; This function calls:
 38871 ;;		Absolute function
 38872 ;;		_UART1_Receive_ISR
 38873 ;; This function is called by:
 38874 ;;		Interrupt level 2
 38875 ;; This function uses a non-reentrant model
 38876 ;;
 38877                           
 38878                           	psect	text185
 38879  01CF44                     __ptext185:
 38880                           	opt callstack 0
 38881  01CF44                     _UART1_rx_vect_isr:
 38882                           	opt callstack 3
 38883                           
 38884                           ;incstack = 0
 38885  01CF44  EE14  F208         	lfsr	1,___inthi_sp
 38886                           
 38887                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 38888  01CF48  0100               	movlb	0	; () banked
 38889  01CF4A  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 38890  01CF4C  1188               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 38891  01CF4E  1189               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 38892  01CF50  B4D8               	btfsc	status,2,c
 38893  01CF52  0011               	retfie		f
 38894                           
 38895                           ; BSR set to: 0
 38896                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 38897  01CF54  D801               	call	i2u1133_48
 38898  01CF56  0011               	retfie		f
 38899  01CF58                     i2u1133_48:
 38900  01CF58  0005               	push	
 38901  01CF5A  6EFA               	movwf	pclath,c
 38902  01CF5C  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 38903  01CF5E  6EFD               	movwf	tosl,c
 38904  01CF60  5188               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 38905  01CF62  6EFE               	movwf	tosh,c
 38906  01CF64  5189               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 38907  01CF66  6EFF               	movwf	tosu,c
 38908  01CF68  50FA               	movf	pclath,w,c
 38909  01CF6A  0012               	return		;indir
 38910  01CF6C                     __end_of_UART1_rx_vect_isr:
 38911                           	opt callstack 0
 38912                           
 38913 ;; *************** function _UART1_Receive_ISR *****************
 38914 ;; Defined at:
 38915 ;;		line 192 in file "mcc_generated_files/uart1.c"
 38916 ;; Parameters:    Size  Location     Type
 38917 ;;		None
 38918 ;; Auto vars:     Size  Location     Type
 38919 ;;		None
 38920 ;; Return value:  Size  Location     Type
 38921 ;;                  1  [STACK] void 
 38922 ;; Registers used:
 38923 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38924 ;; Tracked objects:
 38925 ;;		On entry : 3F/0
 38926 ;;		On exit  : 3F/0
 38927 ;;		Unchanged: 0/0
 38928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38933 ;;Total ram usage:        0 bytes
 38934 ;; Hardware stack levels used:    1
 38935 ;; This function calls:
 38936 ;;		Nothing
 38937 ;; This function is called by:
 38938 ;;		_UART1_Initialize
 38939 ;;		_UART1_rx_vect_isr
 38940 ;; This function uses a reentrant model
 38941 ;;
 38942                           
 38943                           	psect	text186
 38944  01D0D8                     __ptext186:
 38945                           	opt callstack 0
 38946  01D0D8                     _UART1_Receive_ISR:
 38947                           	opt callstack 3
 38948                           
 38949                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 38950                           
 38951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38952                           ;incstack = 0
 38953  01D0D8  0EDC               	movlw	low _uart1RxBuffer
 38954  01D0DA  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 38955  01D0DC  6ED9               	movwf	fsr2l,c
 38956  01D0DE  6ADA               	clrf	fsr2h,c
 38957  01D0E0  0E01               	movlw	high _uart1RxBuffer
 38958  01D0E2  22DA               	addwfc	fsr2h,f,c
 38959  01D0E4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 38960  01D0EA  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 38961                           
 38962                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 38963  01D0EC  0E07               	movlw	7
 38964  01D0EE  6447               	cpfsgt	_uart1RxHead^0,c
 38965  01D0F0  D001               	goto	l11732
 38966                           
 38967                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 38968  01D0F2  6A47               	clrf	_uart1RxHead^0,c	;volatile
 38969  01D0F4                     l11732:
 38970                           
 38971                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 38972  01D0F4  0100               	movlb	0	; () banked
 38973  01D0F6  2BA9               	incf	_uart1RxCount& (0+255),f,b	;volatile
 38974                           
 38975                           ; BSR set to: 0
 38976                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38977  01D0F8  0012               	return		;funcret
 38978  01D0FA                     __end_of_UART1_Receive_ISR:
 38979                           	opt callstack 0
 38980                           
 38981 ;; *************** function _UART2_tx_vect_isr *****************
 38982 ;; Defined at:
 38983 ;;		line 195 in file "mcc_generated_files/uart2.c"
 38984 ;; Parameters:    Size  Location     Type
 38985 ;;		None
 38986 ;; Auto vars:     Size  Location     Type
 38987 ;;		None
 38988 ;; Return value:  Size  Location     Type
 38989 ;;                  1    wreg      void 
 38990 ;; Registers used:
 38991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 38992 ;; Tracked objects:
 38993 ;;		On entry : 0/0
 38994 ;;		On exit  : 0/0
 38995 ;;		Unchanged: 0/0
 38996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39001 ;;Total ram usage:        0 bytes
 39002 ;; Hardware stack levels used:    1
 39003 ;; Hardware stack levels required when called:    1
 39004 ;; This function calls:
 39005 ;;		Absolute function
 39006 ;;		_UART2_Transmit_ISR
 39007 ;; This function is called by:
 39008 ;;		Interrupt level 2
 39009 ;; This function uses a non-reentrant model
 39010 ;;
 39011                           
 39012                           	psect	text187
 39013  01CF6C                     __ptext187:
 39014                           	opt callstack 0
 39015  01CF6C                     _UART2_tx_vect_isr:
 39016                           	opt callstack 3
 39017                           
 39018                           ; BSR set to: 0
 39019                           ;incstack = 0
 39020  01CF6C  EE14  F208         	lfsr	1,___inthi_sp
 39021                           
 39022                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 39023  01CF70  0100               	movlb	0	; () banked
 39024  01CF72  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 39025  01CF74  118B               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 39026  01CF76  118C               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 39027  01CF78  B4D8               	btfsc	status,2,c
 39028  01CF7A  0011               	retfie		f
 39029                           
 39030                           ; BSR set to: 0
 39031                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 39032  01CF7C  D801               	call	i2u1135_48
 39033  01CF7E  0011               	retfie		f
 39034  01CF80                     i2u1135_48:
 39035  01CF80  0005               	push	
 39036  01CF82  6EFA               	movwf	pclath,c
 39037  01CF84  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 39038  01CF86  6EFD               	movwf	tosl,c
 39039  01CF88  518B               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 39040  01CF8A  6EFE               	movwf	tosh,c
 39041  01CF8C  518C               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 39042  01CF8E  6EFF               	movwf	tosu,c
 39043  01CF90  50FA               	movf	pclath,w,c
 39044  01CF92  0012               	return		;indir
 39045  01CF94                     __end_of_UART2_tx_vect_isr:
 39046                           	opt callstack 0
 39047                           
 39048 ;; *************** function _UART2_Transmit_ISR *****************
 39049 ;; Defined at:
 39050 ;;		line 213 in file "mcc_generated_files/uart2.c"
 39051 ;; Parameters:    Size  Location     Type
 39052 ;;		None
 39053 ;; Auto vars:     Size  Location     Type
 39054 ;;		None
 39055 ;; Return value:  Size  Location     Type
 39056 ;;                  1  [STACK] void 
 39057 ;; Registers used:
 39058 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39059 ;; Tracked objects:
 39060 ;;		On entry : 3F/0
 39061 ;;		On exit  : 3B/39
 39062 ;;		Unchanged: 0/0
 39063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39068 ;;Total ram usage:        0 bytes
 39069 ;; Hardware stack levels used:    1
 39070 ;; This function calls:
 39071 ;;		Nothing
 39072 ;; This function is called by:
 39073 ;;		_UART2_Initialize
 39074 ;;		_UART2_tx_vect_isr
 39075 ;; This function uses a reentrant model
 39076 ;;
 39077                           
 39078                           	psect	text188
 39079  01CD0C                     __ptext188:
 39080                           	opt callstack 0
 39081  01CD0C                     _UART2_Transmit_ISR:
 39082                           	opt callstack 3
 39083                           
 39084                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 39085                           
 39086                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39087                           ;incstack = 0
 39088  01CD0C  0E40               	movlw	64
 39089  01CD0E  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 39090  01CD10  D010               	goto	l675
 39091                           
 39092                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 39093  01CD12  0E54               	movlw	low _uart2TxBuffer
 39094  01CD14  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 39095  01CD16  6ED9               	movwf	fsr2l,c
 39096  01CD18  6ADA               	clrf	fsr2h,c
 39097  01CD1A  0E03               	movlw	high _uart2TxBuffer
 39098  01CD1C  22DA               	addwfc	fsr2h,f,c
 39099  01CD1E  50DF               	movf	indf2,w,c
 39100  01CD20  013D               	movlb	61	; () banked
 39101  01CD22  6FD2               	movwf	210,b	;volatile
 39102                           
 39103                           ; BSR set to: 61
 39104  01CD24  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 39105                           
 39106                           ; BSR set to: 61
 39107                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 39108  01CD26  0E3F               	movlw	63
 39109  01CD28  6446               	cpfsgt	_uart2TxTail^0,c
 39110  01CD2A  D001               	goto	l11744
 39111                           
 39112                           ; BSR set to: 61
 39113                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 39114  01CD2C  6A46               	clrf	_uart2TxTail^0,c	;volatile
 39115  01CD2E                     l11744:
 39116                           
 39117                           ; BSR set to: 61
 39118                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 39119  01CD2E  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 39120                           
 39121                           ;mcc_generated_files/uart2.c: 224:     }
 39122  01CD30  0012               	return	
 39123  01CD32                     l675:
 39124                           
 39125                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 39126  01CD32  0139               	movlb	57	; () banked
 39127  01CD34  9796               	bcf	150,3,b	;volatile
 39128                           
 39129                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 39130  01CD36  0012               	return		;funcret
 39131  01CD38                     __end_of_UART2_Transmit_ISR:
 39132                           	opt callstack 0
 39133                           
 39134 ;; *************** function _UART2_rx_vect_isr *****************
 39135 ;; Defined at:
 39136 ;;		line 203 in file "mcc_generated_files/uart2.c"
 39137 ;; Parameters:    Size  Location     Type
 39138 ;;		None
 39139 ;; Auto vars:     Size  Location     Type
 39140 ;;		None
 39141 ;; Return value:  Size  Location     Type
 39142 ;;                  1    wreg      void 
 39143 ;; Registers used:
 39144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39145 ;; Tracked objects:
 39146 ;;		On entry : 0/0
 39147 ;;		On exit  : 0/0
 39148 ;;		Unchanged: 0/0
 39149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39154 ;;Total ram usage:        0 bytes
 39155 ;; Hardware stack levels used:    1
 39156 ;; Hardware stack levels required when called:    1
 39157 ;; This function calls:
 39158 ;;		Absolute function
 39159 ;;		_UART2_Receive_ISR
 39160 ;; This function is called by:
 39161 ;;		Interrupt level 2
 39162 ;; This function uses a non-reentrant model
 39163 ;;
 39164                           
 39165                           	psect	text189
 39166  01CF94                     __ptext189:
 39167                           	opt callstack 0
 39168  01CF94                     _UART2_rx_vect_isr:
 39169                           	opt callstack 3
 39170                           
 39171                           ;incstack = 0
 39172  01CF94  EE14  F208         	lfsr	1,___inthi_sp
 39173                           
 39174                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 39175  01CF98  0100               	movlb	0	; () banked
 39176  01CF9A  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 39177  01CF9C  118E               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 39178  01CF9E  118F               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 39179  01CFA0  B4D8               	btfsc	status,2,c
 39180  01CFA2  0011               	retfie		f
 39181                           
 39182                           ; BSR set to: 0
 39183                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 39184  01CFA4  D801               	call	i2u1137_48
 39185  01CFA6  0011               	retfie		f
 39186  01CFA8                     i2u1137_48:
 39187  01CFA8  0005               	push	
 39188  01CFAA  6EFA               	movwf	pclath,c
 39189  01CFAC  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 39190  01CFAE  6EFD               	movwf	tosl,c
 39191  01CFB0  518E               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 39192  01CFB2  6EFE               	movwf	tosh,c
 39193  01CFB4  518F               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 39194  01CFB6  6EFF               	movwf	tosu,c
 39195  01CFB8  50FA               	movf	pclath,w,c
 39196  01CFBA  0012               	return		;indir
 39197  01CFBC                     __end_of_UART2_rx_vect_isr:
 39198                           	opt callstack 0
 39199                           
 39200 ;; *************** function _UART2_Receive_ISR *****************
 39201 ;; Defined at:
 39202 ;;		line 233 in file "mcc_generated_files/uart2.c"
 39203 ;; Parameters:    Size  Location     Type
 39204 ;;		None
 39205 ;; Auto vars:     Size  Location     Type
 39206 ;;		None
 39207 ;; Return value:  Size  Location     Type
 39208 ;;                  1  [STACK] void 
 39209 ;; Registers used:
 39210 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39211 ;; Tracked objects:
 39212 ;;		On entry : 3F/0
 39213 ;;		On exit  : 3F/0
 39214 ;;		Unchanged: 0/0
 39215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39220 ;;Total ram usage:        0 bytes
 39221 ;; Hardware stack levels used:    1
 39222 ;; This function calls:
 39223 ;;		Nothing
 39224 ;; This function is called by:
 39225 ;;		_UART2_Initialize
 39226 ;;		_UART2_rx_vect_isr
 39227 ;; This function uses a reentrant model
 39228 ;;
 39229                           
 39230                           	psect	text190
 39231  01D11A                     __ptext190:
 39232                           	opt callstack 0
 39233  01D11A                     _UART2_Receive_ISR:
 39234                           	opt callstack 3
 39235                           
 39236                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 39237                           
 39238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39239                           ;incstack = 0
 39240  01D11A  0E00               	movlw	low _uart2RxBuffer
 39241  01D11C  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 39242  01D11E  6ED9               	movwf	fsr2l,c
 39243  01D120  6ADA               	clrf	fsr2h,c
 39244  01D122  0E05               	movlw	high _uart2RxBuffer
 39245  01D124  22DA               	addwfc	fsr2h,f,c
 39246  01D126  006F F743 FFDF     	movff	15824,indf2	;volatile
 39247  01D12C  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 39248                           
 39249                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 39250  01D12E  2844               	incf	_uart2RxHead^0,w,c
 39251  01D130  B4D8               	btfsc	status,2,c
 39252                           
 39253                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 39254  01D132  6A44               	clrf	_uart2RxHead^0,c	;volatile
 39255                           
 39256                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 39257  01D134  0100               	movlb	0	; () banked
 39258  01D136  2BA6               	incf	_uart2RxCount& (0+255),f,b	;volatile
 39259                           
 39260                           ; BSR set to: 0
 39261                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39262  01D138  0012               	return		;funcret
 39263  01D13A                     __end_of_UART2_Receive_ISR:
 39264                           	opt callstack 0
 39265                           
 39266 ;; *************** function _TMR6_ISR *****************
 39267 ;; Defined at:
 39268 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 39269 ;; Parameters:    Size  Location     Type
 39270 ;;		None
 39271 ;; Auto vars:     Size  Location     Type
 39272 ;;		None
 39273 ;; Return value:  Size  Location     Type
 39274 ;;                  1    wreg      void 
 39275 ;; Registers used:
 39276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 39277 ;; Tracked objects:
 39278 ;;		On entry : 0/0
 39279 ;;		On exit  : 0/0
 39280 ;;		Unchanged: 0/0
 39281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39286 ;;Total ram usage:        1 bytes
 39287 ;; Hardware stack levels used:    1
 39288 ;; Hardware stack levels required when called:    2
 39289 ;; This function calls:
 39290 ;;		_TMR6_CallBack
 39291 ;; This function is called by:
 39292 ;;		Interrupt level 2
 39293 ;; This function uses a non-reentrant model
 39294 ;;
 39295                           
 39296                           	psect	text191
 39297  01D1EC                     __ptext191:
 39298                           	opt callstack 0
 39299  01D1EC                     _TMR6_ISR:
 39300                           	opt callstack 2
 39301                           
 39302                           ; BSR set to: 0
 39303                           ;incstack = 0
 39304  01D1EC  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 39305  01D1F2  EE14  F208         	lfsr	1,___inthi_sp
 39306                           
 39307                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 39308  01D1F6  0139               	movlb	57	; () banked
 39309  01D1F8  91A9               	bcf	169,0,b	;volatile
 39310                           
 39311                           ; BSR set to: 57
 39312                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 39313  01D1FA  EC38  F0E8         	call	_TMR6_CallBack	;wreg free
 39314  01D1FE  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 39315  01D204  0011               	retfie		f
 39316  01D206                     __end_of_TMR6_ISR:
 39317                           	opt callstack 0
 39318                           
 39319 ;; *************** function _TMR6_CallBack *****************
 39320 ;; Defined at:
 39321 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 39322 ;; Parameters:    Size  Location     Type
 39323 ;;		None
 39324 ;; Auto vars:     Size  Location     Type
 39325 ;;		None
 39326 ;; Return value:  Size  Location     Type
 39327 ;;                  1  [STACK] void 
 39328 ;; Registers used:
 39329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 39330 ;; Tracked objects:
 39331 ;;		On entry : 3F/39
 39332 ;;		On exit  : 0/0
 39333 ;;		Unchanged: 0/0
 39334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39339 ;;Total ram usage:        0 bytes
 39340 ;; Hardware stack levels used:    1
 39341 ;; Hardware stack levels required when called:    1
 39342 ;; This function calls:
 39343 ;;		Absolute function
 39344 ;;		_TMR6_DefaultInterruptHandler
 39345 ;; This function is called by:
 39346 ;;		_TMR6_ISR
 39347 ;; This function uses a reentrant model
 39348 ;;
 39349                           
 39350                           	psect	text192
 39351  01D070                     __ptext192:
 39352                           	opt callstack 0
 39353  01D070                     _TMR6_CallBack:
 39354                           	opt callstack 2
 39355                           
 39356                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 39357                           
 39358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39359                           ;incstack = 0
 39360  01D070  0100               	movlb	0	; () banked
 39361  01D072  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39362  01D074  117F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39363  01D076  1180               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39364  01D078  B4D8               	btfsc	status,2,c
 39365  01D07A  0012               	return	
 39366                           
 39367                           ; BSR set to: 0
 39368                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 39369  01D07C  D801               	call	u1083_48
 39370  01D07E  0012               	return	
 39371  01D080                     u1083_48:
 39372  01D080  0005               	push	
 39373  01D082  6EFA               	movwf	pclath,c
 39374  01D084  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39375  01D086  6EFD               	movwf	tosl,c
 39376  01D088  517F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39377  01D08A  6EFE               	movwf	tosh,c
 39378  01D08C  5180               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39379  01D08E  6EFF               	movwf	tosu,c
 39380  01D090  50FA               	movf	pclath,w,c
 39381  01D092  0012               	return		;indir
 39382  01D094                     __end_of_TMR6_CallBack:
 39383                           	opt callstack 0
 39384                           
 39385 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 39386 ;; Defined at:
 39387 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 39388 ;; Parameters:    Size  Location     Type
 39389 ;;		None
 39390 ;; Auto vars:     Size  Location     Type
 39391 ;;  i               1  [STACK] unsigned char 
 39392 ;; Return value:  Size  Location     Type
 39393 ;;                  1  [STACK] void 
 39394 ;; Registers used:
 39395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 39396 ;; Tracked objects:
 39397 ;;		On entry : 3F/0
 39398 ;;		On exit  : 0/0
 39399 ;;		Unchanged: 0/0
 39400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39405 ;;Total ram usage:        0 bytes
 39406 ;; Hardware stack levels used:    1
 39407 ;; This function calls:
 39408 ;;		Nothing
 39409 ;; This function is called by:
 39410 ;;		_TMR6_Initialize
 39411 ;;		_TMR6_CallBack
 39412 ;; This function uses a reentrant model
 39413 ;;
 39414                           
 39415                           	psect	text193
 39416  01C562                     __ptext193:
 39417                           	opt callstack 0
 39418  01C562                     _TMR6_DefaultInterruptHandler:
 39419                           	opt callstack 0
 39420                           
 39421                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39422  01C562  52E6               	movf	postinc1,f,c
 39423                           
 39424                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 39425                           ;stkvar	_i @ sp[(-1)+0]
 39426                           
 39427                           ;incstack = 0
 39428  01C564  0EFF               	movlw	-1
 39429  01C566  6AE3               	clrf	plusw1,c
 39430  01C568                     l11216:
 39431                           
 39432                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 39433                           ;stkvar	_i @ sp[(-1)+0]
 39434  01C568  0EFF               	movlw	-1
 39435  01C56A  50E3               	movf	plusw1,w,c
 39436  01C56C  0D02               	mullw	2
 39437  01C56E  0E29               	movlw	low _tickCount
 39438  01C570  24F3               	addwf	243,w,c
 39439  01C572  6ED9               	movwf	fsr2l,c
 39440  01C574  0E02               	movlw	high _tickCount
 39441  01C576  20F4               	addwfc	prodh,w,c
 39442  01C578  6EDA               	movwf	fsr2h,c
 39443  01C57A  50DE               	movf	postinc2,w,c
 39444  01C57C  10DE               	iorwf	postinc2,w,c
 39445  01C57E  B4D8               	btfsc	status,2,c
 39446  01C580  D00C               	goto	l11220
 39447                           
 39448                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 39449                           ;stkvar	_i @ sp[(-1)+0]
 39450  01C582  0EFF               	movlw	-1
 39451  01C584  50E3               	movf	plusw1,w,c
 39452  01C586  0D02               	mullw	2
 39453  01C588  0E29               	movlw	low _tickCount
 39454  01C58A  24F3               	addwf	243,w,c
 39455  01C58C  6ED9               	movwf	fsr2l,c
 39456  01C58E  0E02               	movlw	high _tickCount
 39457  01C590  20F4               	addwfc	prodh,w,c
 39458  01C592  6EDA               	movwf	fsr2h,c
 39459  01C594  06DE               	decf	postinc2,f,c
 39460  01C596  0E00               	movlw	0
 39461  01C598  5ADD               	subwfb	postdec2,f,c
 39462  01C59A                     l11220:
 39463                           
 39464                           ;mcc_generated_files/tmr6.c: 207:  }
 39465                           ;stkvar	_i @ sp[(-1)+0]
 39466  01C59A  0EFF               	movlw	-1
 39467  01C59C  2AE3               	incf	plusw1,f,c
 39468                           
 39469                           ;stkvar	_i @ sp[(-1)+0]
 39470  01C59E  0EFF               	movlw	-1
 39471  01C5A0  006F FF8C  F001    	movff	plusw1,btemp
 39472  01C5A6  0E0C               	movlw	12
 39473  01C5A8  6401               	cpfsgt	btemp^0,c
 39474  01C5AA  D7DE               	goto	l11216
 39475                           
 39476                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39477  01C5AC  52E5               	movf	postdec1,f,c
 39478  01C5AE  0012               	return		;funcret
 39479  01C5B0                     __end_of_TMR6_DefaultInterruptHandler:
 39480                           	opt callstack 0
 39481                           
 39482 ;; *************** function _DMA1_DMASCNT_ISR *****************
 39483 ;; Defined at:
 39484 ;;		line 126 in file "mcc_generated_files/dma1.c"
 39485 ;; Parameters:    Size  Location     Type
 39486 ;;		None
 39487 ;; Auto vars:     Size  Location     Type
 39488 ;;		None
 39489 ;; Return value:  Size  Location     Type
 39490 ;;                  1    wreg      void 
 39491 ;; Registers used:
 39492 ;;		None
 39493 ;; Tracked objects:
 39494 ;;		On entry : 0/0
 39495 ;;		On exit  : 3F/1
 39496 ;;		Unchanged: 0/0
 39497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39502 ;;Total ram usage:        0 bytes
 39503 ;; Hardware stack levels used:    1
 39504 ;; This function calls:
 39505 ;;		Nothing
 39506 ;; This function is called by:
 39507 ;;		Interrupt level 2
 39508 ;; This function uses a non-reentrant model
 39509 ;;
 39510                           
 39511                           	psect	text194
 39512  01D350                     __ptext194:
 39513                           	opt callstack 0
 39514  01D350                     _DMA1_DMASCNT_ISR:
 39515                           	opt callstack 4
 39516                           
 39517                           ;incstack = 0
 39518  01D350  EE14  F208         	lfsr	1,___inthi_sp
 39519                           
 39520                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 39521  01D354  0139               	movlb	57	; () banked
 39522  01D356  91A2               	bcf	162,0,b	;volatile
 39523                           
 39524                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 39525  01D358  0101               	movlb	1	; () banked
 39526  01D35A  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 39527                           
 39528                           ; BSR set to: 1
 39529  01D35C  0011               	retfie		f
 39530  01D35E                     __end_of_DMA1_DMASCNT_ISR:
 39531                           	opt callstack 0
 39532                           
 39533 ;; *************** function _DMA1_DMADCNT_ISR *****************
 39534 ;; Defined at:
 39535 ;;		line 133 in file "mcc_generated_files/dma1.c"
 39536 ;; Parameters:    Size  Location     Type
 39537 ;;		None
 39538 ;; Auto vars:     Size  Location     Type
 39539 ;;		None
 39540 ;; Return value:  Size  Location     Type
 39541 ;;                  1    wreg      void 
 39542 ;; Registers used:
 39543 ;;		None
 39544 ;; Tracked objects:
 39545 ;;		On entry : 0/0
 39546 ;;		On exit  : 3F/39
 39547 ;;		Unchanged: 0/0
 39548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39553 ;;Total ram usage:        0 bytes
 39554 ;; Hardware stack levels used:    1
 39555 ;; This function calls:
 39556 ;;		Nothing
 39557 ;; This function is called by:
 39558 ;;		Interrupt level 2
 39559 ;; This function uses a non-reentrant model
 39560 ;;
 39561                           
 39562                           	psect	text195
 39563  01D374                     __ptext195:
 39564                           	opt callstack 0
 39565  01D374                     _DMA1_DMADCNT_ISR:
 39566                           	opt callstack 4
 39567                           
 39568                           ; BSR set to: 1
 39569                           ;incstack = 0
 39570  01D374  EE14  F208         	lfsr	1,___inthi_sp
 39571                           
 39572                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 39573  01D378  0139               	movlb	57	; () banked
 39574  01D37A  93A2               	bcf	162,1,b	;volatile
 39575                           
 39576                           ; BSR set to: 57
 39577  01D37C  0011               	retfie		f
 39578  01D37E                     __end_of_DMA1_DMADCNT_ISR:
 39579                           	opt callstack 0
 39580                           
 39581 ;; *************** function _DMA1_DMAA_ISR *****************
 39582 ;; Defined at:
 39583 ;;		line 143 in file "mcc_generated_files/dma1.c"
 39584 ;; Parameters:    Size  Location     Type
 39585 ;;		None
 39586 ;; Auto vars:     Size  Location     Type
 39587 ;;		None
 39588 ;; Return value:  Size  Location     Type
 39589 ;;                  1    wreg      void 
 39590 ;; Registers used:
 39591 ;;		None
 39592 ;; Tracked objects:
 39593 ;;		On entry : 0/0
 39594 ;;		On exit  : 3F/39
 39595 ;;		Unchanged: 0/0
 39596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39601 ;;Total ram usage:        0 bytes
 39602 ;; Hardware stack levels used:    1
 39603 ;; This function calls:
 39604 ;;		Nothing
 39605 ;; This function is called by:
 39606 ;;		Interrupt level 2
 39607 ;; This function uses a non-reentrant model
 39608 ;;
 39609                           
 39610                           	psect	text196
 39611  01D380                     __ptext196:
 39612                           	opt callstack 0
 39613  01D380                     _DMA1_DMAA_ISR:
 39614                           	opt callstack 4
 39615                           
 39616                           ; BSR set to: 57
 39617                           ;incstack = 0
 39618  01D380  EE14  F208         	lfsr	1,___inthi_sp
 39619                           
 39620                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 39621  01D384  0139               	movlb	57	; () banked
 39622  01D386  97A2               	bcf	162,3,b	;volatile
 39623                           
 39624                           ; BSR set to: 57
 39625  01D388  0011               	retfie		f
 39626  01D38A                     __end_of_DMA1_DMAA_ISR:
 39627                           	opt callstack 0
 39628                           
 39629 ;; *************** function _DMA1_DMAOR_ISR *****************
 39630 ;; Defined at:
 39631 ;;		line 154 in file "mcc_generated_files/dma1.c"
 39632 ;; Parameters:    Size  Location     Type
 39633 ;;		None
 39634 ;; Auto vars:     Size  Location     Type
 39635 ;;		None
 39636 ;; Return value:  Size  Location     Type
 39637 ;;                  1    wreg      void 
 39638 ;; Registers used:
 39639 ;;		None
 39640 ;; Tracked objects:
 39641 ;;		On entry : 0/0
 39642 ;;		On exit  : 3F/39
 39643 ;;		Unchanged: 0/0
 39644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39649 ;;Total ram usage:        0 bytes
 39650 ;; Hardware stack levels used:    1
 39651 ;; This function calls:
 39652 ;;		Nothing
 39653 ;; This function is called by:
 39654 ;;		Interrupt level 2
 39655 ;; This function uses a non-reentrant model
 39656 ;;
 39657                           
 39658                           	psect	text197
 39659  01D38C                     __ptext197:
 39660                           	opt callstack 0
 39661  01D38C                     _DMA1_DMAOR_ISR:
 39662                           	opt callstack 4
 39663                           
 39664                           ; BSR set to: 57
 39665                           ;incstack = 0
 39666  01D38C  EE14  F208         	lfsr	1,___inthi_sp
 39667                           
 39668                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 39669  01D390  0139               	movlb	57	; () banked
 39670  01D392  95A2               	bcf	162,2,b	;volatile
 39671                           
 39672                           ; BSR set to: 57
 39673  01D394  0011               	retfie		f
 39674  01D396                     __end_of_DMA1_DMAOR_ISR:
 39675                           	opt callstack 0
 39676                           
 39677                           ;
 39678                           ; Interrupt Vector Table @ 0x8
 39679                           ;
 39680                           
 39681                           	psect	ivt0x8
 39682  000008                     __pivt0x8:
 39683                           	opt callstack 0
 39684  000008                     ivt0x8_base:
 39685                           	opt callstack 0
 39686                           
 39687                           ; Vector 0 : SWINT
 39688  000008  74F7               	dw	_Default_ISR shr (0+2)
 39689                           
 39690                           ; Vector 1 : HLVD
 39691  00000A  74F7               	dw	_Default_ISR shr (0+2)
 39692                           
 39693                           ; Vector 2 : OSF
 39694  00000C  74F7               	dw	_Default_ISR shr (0+2)
 39695                           
 39696                           ; Vector 3 : CSW
 39697  00000E  74F7               	dw	_Default_ISR shr (0+2)
 39698                           
 39699                           ; Vector 4 : NVM
 39700  000010  74F7               	dw	_Default_ISR shr (0+2)
 39701                           
 39702                           ; Vector 5 : SCAN
 39703  000012  74F7               	dw	_Default_ISR shr (0+2)
 39704                           
 39705                           ; Vector 6 : CRC
 39706  000014  74F7               	dw	_Default_ISR shr (0+2)
 39707                           
 39708                           ; Vector 7 : IOC
 39709  000016  74F7               	dw	_Default_ISR shr (0+2)
 39710                           
 39711                           ; Vector 8 : INT0
 39712  000018  74D0               	dw	_INT0_ISR shr (0+2)
 39713                           
 39714                           ; Vector 9 : ZCD
 39715  00001A  74F7               	dw	_Default_ISR shr (0+2)
 39716                           
 39717                           ; Vector 10 : AD
 39718  00001C  7338               	dw	_ADCC_ISR shr (0+2)
 39719                           
 39720                           ; Vector 11 : ADT
 39721  00001E  700F               	dw	_ADCC_ThresholdISR shr (0+2)
 39722                           
 39723                           ; Vector 12 : CMP1
 39724  000020  74F7               	dw	_Default_ISR shr (0+2)
 39725                           
 39726                           ; Vector 13 : SMT1
 39727  000022  74F7               	dw	_Default_ISR shr (0+2)
 39728                           
 39729                           ; Vector 14 : SMT1PRA
 39730  000024  74F7               	dw	_Default_ISR shr (0+2)
 39731                           
 39732                           ; Vector 15 : SMT1PRW
 39733  000026  74F7               	dw	_Default_ISR shr (0+2)
 39734                           
 39735                           ; Vector 16 : DMA1SCNT
 39736  000028  74D4               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 39737                           
 39738                           ; Vector 17 : DMA1DCNT
 39739  00002A  74DD               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 39740                           
 39741                           ; Vector 18 : DMA1OR
 39742  00002C  74E3               	dw	_DMA1_DMAOR_ISR shr (0+2)
 39743                           
 39744                           ; Vector 19 : DMA1A
 39745  00002E  74E0               	dw	_DMA1_DMAA_ISR shr (0+2)
 39746                           
 39747                           ; Vector 20 : SPI1RX
 39748  000030  74F7               	dw	_Default_ISR shr (0+2)
 39749                           
 39750                           ; Vector 21 : SPI1TX
 39751  000032  74F7               	dw	_Default_ISR shr (0+2)
 39752                           
 39753                           ; Vector 22 : SPI1
 39754  000034  74F7               	dw	_Default_ISR shr (0+2)
 39755                           
 39756                           ; Vector 23 : I2C1RX
 39757  000036  74F7               	dw	_Default_ISR shr (0+2)
 39758                           
 39759                           ; Vector 24 : I2C1TX
 39760  000038  74F7               	dw	_Default_ISR shr (0+2)
 39761                           
 39762                           ; Vector 25 : I2C1
 39763  00003A  74F7               	dw	_Default_ISR shr (0+2)
 39764                           
 39765                           ; Vector 26 : I2C1E
 39766  00003C  74F7               	dw	_Default_ISR shr (0+2)
 39767                           
 39768                           ; Vector 27 : U1RX
 39769  00003E  73D1               	dw	_UART1_rx_vect_isr shr (0+2)
 39770                           
 39771                           ; Vector 28 : U1TX
 39772  000040  74F7               	dw	_Default_ISR shr (0+2)
 39773                           
 39774                           ; Vector 29 : U1E
 39775  000042  74F7               	dw	_Default_ISR shr (0+2)
 39776                           
 39777                           ; Vector 30 : U1
 39778  000044  74F7               	dw	_Default_ISR shr (0+2)
 39779                           
 39780                           ; Vector 31 : TMR0
 39781  000046  74F7               	dw	_Default_ISR shr (0+2)
 39782                           
 39783                           ; Vector 32 : TMR1
 39784  000048  74F7               	dw	_Default_ISR shr (0+2)
 39785                           
 39786                           ; Vector 33 : TMR1G
 39787  00004A  74F7               	dw	_Default_ISR shr (0+2)
 39788                           
 39789                           ; Vector 34 : TMR2
 39790  00004C  74F7               	dw	_Default_ISR shr (0+2)
 39791                           
 39792                           ; Vector 35 : CCP1
 39793  00004E  74F7               	dw	_Default_ISR shr (0+2)
 39794                           
 39795                           ; Vector 36 : Undefined
 39796  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 39797                           
 39798                           ; Vector 37 : NCO1
 39799  000052  74F7               	dw	_Default_ISR shr (0+2)
 39800                           
 39801                           ; Vector 38 : CWG1
 39802  000054  74F7               	dw	_Default_ISR shr (0+2)
 39803                           
 39804                           ; Vector 39 : CLC1
 39805  000056  74F7               	dw	_Default_ISR shr (0+2)
 39806                           
 39807                           ; Vector 40 : INT1
 39808  000058  725B               	dw	_INT1_ISR shr (0+2)
 39809                           
 39810                           ; Vector 41 : CMP2
 39811  00005A  74F7               	dw	_Default_ISR shr (0+2)
 39812                           
 39813                           ; Vector 42 : DMA2SCNT
 39814  00005C  74F7               	dw	_Default_ISR shr (0+2)
 39815                           
 39816                           ; Vector 43 : DMA2DCNT
 39817  00005E  74F7               	dw	_Default_ISR shr (0+2)
 39818                           
 39819                           ; Vector 44 : DMA2OR
 39820  000060  74F7               	dw	_Default_ISR shr (0+2)
 39821                           
 39822                           ; Vector 45 : DMA2A
 39823  000062  74F7               	dw	_Default_ISR shr (0+2)
 39824                           
 39825                           ; Vector 46 : I2C2RX
 39826  000064  74F7               	dw	_Default_ISR shr (0+2)
 39827                           
 39828                           ; Vector 47 : I2C2TX
 39829  000066  74F7               	dw	_Default_ISR shr (0+2)
 39830                           
 39831                           ; Vector 48 : I2C2
 39832  000068  74F7               	dw	_Default_ISR shr (0+2)
 39833                           
 39834                           ; Vector 49 : I2C2E
 39835  00006A  74F7               	dw	_Default_ISR shr (0+2)
 39836                           
 39837                           ; Vector 50 : U2RX
 39838  00006C  73E5               	dw	_UART2_rx_vect_isr shr (0+2)
 39839                           
 39840                           ; Vector 51 : U2TX
 39841  00006E  73DB               	dw	_UART2_tx_vect_isr shr (0+2)
 39842                           
 39843                           ; Vector 52 : U2E
 39844  000070  74F7               	dw	_Default_ISR shr (0+2)
 39845                           
 39846                           ; Vector 53 : U2
 39847  000072  74F7               	dw	_Default_ISR shr (0+2)
 39848                           
 39849                           ; Vector 54 : TMR3
 39850  000074  6719               	dw	_TMR3_ISR shr (0+2)
 39851                           
 39852                           ; Vector 55 : TMR3G
 39853  000076  74F7               	dw	_Default_ISR shr (0+2)
 39854                           
 39855                           ; Vector 56 : TMR4
 39856  000078  74F7               	dw	_Default_ISR shr (0+2)
 39857                           
 39858                           ; Vector 57 : CCP2
 39859  00007A  74F7               	dw	_Default_ISR shr (0+2)
 39860                           
 39861                           ; Vector 58 : Undefined
 39862  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 39863                           
 39864                           ; Vector 59 : CWG2
 39865  00007E  74F7               	dw	_Default_ISR shr (0+2)
 39866                           
 39867                           ; Vector 60 : CLC2
 39868  000080  74F7               	dw	_Default_ISR shr (0+2)
 39869                           
 39870                           ; Vector 61 : INT2
 39871  000082  74F7               	dw	_Default_ISR shr (0+2)
 39872                           
 39873                           ; Vector 62 : Undefined
 39874  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 39875                           
 39876                           ; Vector 63 : Undefined
 39877  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 39878                           
 39879                           ; Vector 64 : Undefined
 39880  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 39881                           
 39882                           ; Vector 65 : Undefined
 39883  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 39884                           
 39885                           ; Vector 66 : Undefined
 39886  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 39887                           
 39888                           ; Vector 67 : Undefined
 39889  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 39890                           
 39891                           ; Vector 68 : Undefined
 39892  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 39893                           
 39894                           ; Vector 69 : Undefined
 39895  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 39896                           
 39897                           ; Vector 70 : TMR5
 39898  000094  6B99               	dw	_TMR5_ISR shr (0+2)
 39899                           
 39900                           ; Vector 71 : TMR5G
 39901  000096  74F7               	dw	_Default_ISR shr (0+2)
 39902                           
 39903                           ; Vector 72 : TMR6
 39904  000098  747B               	dw	_TMR6_ISR shr (0+2)
 39905                           
 39906                           ; Vector 73 : CCP3
 39907  00009A  74F7               	dw	_Default_ISR shr (0+2)
 39908                           
 39909                           ; Vector 74 : CWG3
 39910  00009C  74F7               	dw	_Default_ISR shr (0+2)
 39911                           
 39912                           ; Vector 75 : CLC3
 39913  00009E  74F7               	dw	_Default_ISR shr (0+2)
 39914                           
 39915                           ; Vector 76 : Undefined
 39916  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 39917                           
 39918                           ; Vector 77 : Undefined
 39919  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 39920                           
 39921                           ; Vector 78 : Undefined
 39922  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 39923                           
 39924                           ; Vector 79 : Undefined
 39925  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 39926                           
 39927                           ; Vector 80 : CCP4
 39928  0000A8  74F7               	dw	_Default_ISR shr (0+2)
 39929                           
 39930                           ; Vector 81 : CLC4
 39931  0000AA  74F7               	dw	_Default_ISR shr (0+2)
 39932  0000AC                     ivt0x8_undefint:
 39933                           	opt callstack 0
 39934  0000AC  00FF               	reset	
 39935                           
 39936                           	psect	text198
 39937  000000                     __ptext198:
 39938                           	opt callstack 0
 39939                           
 39940                           	psect	rparam
 39941  0000                     
 39942                           	psect	temp
 39943  000001                     btemp:
 39944                           	opt callstack 0
 39945  000001                     	ds	32
 39946  0000                     wtemp0	set	btemp
 39947  0000                     wtemp1	set	btemp+2
 39948  0000                     wtemp2	set	btemp+4
 39949  0000                     wtemp3	set	btemp+6
 39950  0000                     wtemp4	set	btemp+8
 39951  0000                     wtemp5	set	btemp+10
 39952  0000                     wtemp8	set	btemp+1
 39953  0000                     ttemp0	set	btemp
 39954  0000                     ttemp1	set	btemp+3
 39955  0000                     ttemp2	set	btemp+6
 39956  0000                     ttemp3	set	btemp+9
 39957  0000                     ttemp5	set	btemp+1
 39958  0000                     ttemp6	set	btemp+4
 39959  0000                     ttemp7	set	btemp+8
 39960  0000                     ltemp0	set	btemp
 39961  0000                     ltemp1	set	btemp+4
 39962  0000                     ltemp2	set	btemp+8
 39963  0000                     lltemp0	set	btemp
 39964  0000                     lltemp1	set	btemp+8
 39965  0000                     lltemp2	set	btemp+16
 39966  0000                     lltemp3	set	btemp+24
 39967                           tosu	equ	0x3FFF
 39968                           tosh	equ	0x3FFE
 39969                           tosl	equ	0x3FFD
 39970                           stkptr	equ	0x3FFC
 39971                           pclatu	equ	0x3FFB
 39972                           pclath	equ	0x3FFA
 39973                           pcl	equ	0x3FF9
 39974                           tblptru	equ	0x3FF8
 39975                           tblptrh	equ	0x3FF7
 39976                           tblptrl	equ	0x3FF6
 39977                           tablat	equ	0x3FF5
 39978                           prodh	equ	0x3FF4
 39979                           prodl	equ	0x3FF3
 39980                           indf0	equ	0x3FEF
 39981                           postinc0	equ	0x3FEE
 39982                           postdec0	equ	0x3FED
 39983                           preinc0	equ	0x3FEC
 39984                           plusw0	equ	0x3FEB
 39985                           fsr0h	equ	0x3FEA
 39986                           fsr0l	equ	0x3FE9
 39987                           wreg	equ	0x3FE8
 39988                           indf1	equ	0x3FE7
 39989                           postinc1	equ	0x3FE6
 39990                           postdec1	equ	0x3FE5
 39991                           preinc1	equ	0x3FE4
 39992                           plusw1	equ	0x3FE3
 39993                           fsr1h	equ	0x3FE2
 39994                           fsr1l	equ	0x3FE1
 39995                           bsr	equ	0x3FE0
 39996                           indf2	equ	0x3FDF
 39997                           postinc2	equ	0x3FDE
 39998                           postdec2	equ	0x3FDD
 39999                           preinc2	equ	0x3FDC
 40000                           plusw2	equ	0x3FDB
 40001                           fsr2h	equ	0x3FDA
 40002                           fsr2l	equ	0x3FD9
 40003                           status	equ	0x3FD8


Data Sizes:
    Strings     1328
    Constant    492
    Data        1076
    BSS         1365
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     160
    BANK1           256      0     250
    BANK2           256      0     212
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_118(CODE[1]), STR_80(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[3]), STR_92(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[3]), STR_92(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), 
		 -> STR_69(CODE[15]), STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), 
		 -> STR_65(CODE[19]), STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), 
		 -> STR_69(CODE[15]), STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), 
		 -> STR_65(CODE[19]), STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_63(CODE[9]), STR_62(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_63(CODE[9]), STR_62(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_87(CODE[4]), STR_86(CODE[4]), STR_83(CODE[4]), STR_82(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_87(CODE[4]), STR_86(CODE[4]), STR_83(CODE[4]), STR_82(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_61(CODE[3]), STR_60(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), 
		 -> STR_48(CODE[21]), STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), 
		 -> STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6793_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_63(CODE[9]), STR_62(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_63(CODE[9]), STR_62(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_63(CODE[9]), 
		 -> STR_62(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S5197tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    r_cal_ptr	PTR unsigned char  size(1) Largest target is 57
		 -> R(BANK0[57]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 57
		 -> r_cal(BANK2[57]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_63(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_62(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  598363
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0  125923
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (2) _write_cal_data                                       6     6      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4AE      58        0.0%
DATA                 0      0     9BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 18:15:29 2020

                     _SPI1_Exchange8bit D13A                __end_of_set_display_info D1B2  
                                     _C 07FF                                       _D 092A  
                                     _H 01C7                                       _P 01F6  
                                     _R 00AE                                       _S 0200  
                                     _T F9B3                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler CE7A            __end_of_start_switch_handler D11A  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                       _update_cal_data D236                                      _bp FABB  
                __end_of_FVR_Initialize D3BE                          _check_day_time 91E2  
                           __CFG_LVP$ON 000000                                     l171 D288  
                                   l809 D148                                     l675 CD32  
                                   l942 C0F2                                     _GIE 01FE97  
                                   _abs C71A                                     _pad A868  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize D21E  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack D04C  
                     _update_adc_result C9AA                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack CFE0  
                          __CFG_ZCD$OFF 000000                                    l1004 C926  
                                  l2004 B492                                    l2301 3EC8  
                                  l2029 BB6A                                    l2135 ABAA  
                                  l1271 D2B0                                    l1192 C966  
                                  l2152 9370                                    l1441 0288  
                                  l2402 A8C4                                    l1282 984C  
                                  l2218 A2C8                                    l2227 8A40  
                                  l1435 005E                         _timer3ReloadVal 009A  
                                  l2148 9378                                    l1284 9852  
                                  l2422 5E8E                                    l2502 1D98  
                                  l1454 07A6                                    l2343 79CE  
                                  l3208 4D48                                    l2088 91D8  
                                  l1800 8AF8                                    l1480 123E  
                                  l1464 084A                                    l1456 07AA  
                                  l3241 5432                                    l1713 B6A0  
                                  l1801 8C54                                    l1474 0A4E  
                                  l1475 0C76                                    l3340 950E  
                                  l2540 7ABC                                    l1732 CAA6  
                                  l3317 8E52                                    l1717 B9BA  
                                  l1808 AA88                                    l2297 3B8A  
                                  l2561 6DE6                                    l1585 C3C6  
                                  l2458 24B8                                    l2626 3464  
                                  l1499 5DA6                                    l3196 4EB8  
                                  l3348 C75A                                    l3277 46FC  
                  _ADCC_StartConversion D2B4                                    l1791 CA3A  
                                  l2487 18E8                                    l1848 D1AE  
                                  l3448 A516                                    l2576 66C0  
                                  l2922 9B86                                    l3730 BCFA  
                                  l3379 817A                                    l3715 8820  
                                  l1948 58F2                                    l2918 B272  
                                  l3743 BC76                                    l2929 9C5A  
                                  l2956 9AF8                                    l1988 BE78  
                                  l9000 51E6                                    l9020 5288  
                                  l9110 4046                                    l9102 4000  
                                  l9014 526C                                    l9006 523A  
                                  l9120 4098                                    l9112 4076  
                                  l9024 52AE                                    l9008 523E  
                                  l9210 463C                                    l9034 52F8  
                                  l9108 4040                                    l9060 53DE  
                                  l9300 A79A                                    l9206 45F6  
                                  l9054 53AE                                    l9038 52FE  
                                  l8422 B81C                                    l9310 A81A  
                                  l9224 46AA                                    l9216 4666  
                                  l9048 5372                                    l8424 B83E  
                                  l9226 46C4                                    l9090 3F72  
                                  l8610 4D88                                    l8522 4A32  
                                  l8450 475C                                    l9066 5406  
                                  l9330 B23C                                    l9402 9A90  
                                  l9172 44F0                                    l9092 3F78  
                                  l9084 3F32                                    l8620 4DB0  
                                  l8604 4D6A                                    l8532 4AA4  
                                  l8460 47B2                                    l9068 5416  
                                  l9252 9E00                                    l9404 9AA6  
                                  l9182 4532                                    l9094 3FA8  
                                  l8606 4D7C                                    l8542 4AE0  
                                  l8462 47E2                                    l9342 9B44  
                                  l9246 9DEA                                    l9318 A84E  
                                  l9334 B270                                    l9326 B1FA  
                                  l9430 97BE                                    l9192 457C  
                                  l8624 4DB6                                    l8536 4AC4  
                                  l8480 488C                                    l8456 479C  
                                  l9360 9C58                                    l9352 9C22  
                                  l9280 9EFA                                    l9272 9EC6  
                                  l9178 450C                                    l8650 4E58  
                                  l8570 4BC8                                    l8538 4AD6  
                                  l8546 4B10                                    l8474 484C  
                                  l9258 9E20                                    l8810 6D0A  
                                  l9418 96EC                                    l9450 A13C  
                                  l9442 A090                                    l9196 4582  
                                  l8652 4E68                                    l8636 4E14  
                                  l8564 4BAC                                    l8492 48F4  
                                  l8484 48A2                                    l8468 481A  
                                  l9348 9BD4                                    l8900 84B0  
                                  l9292 A770                                    l8804 6C72  
                                  l8646 4E40                                    l8566 4BBE  
                                  l8574 4BFA                                    l8486 48D2  
                                  l8734 C74A                                    l8814 6D78  
                                  l8806 6CC2                                    l9296 A782  
                                  l9368 C618                                    l8752 94B0  
                                  l8832 BC66                                    l8658 4E98  
                                  l8586 4CD2                                    l9466 C4B2  
                                  l9394 9A64                                    l9378 99E2  
                                  l8596 4D2C                                    l8588 4CF8  
                                  l8940 4F9E                                    l8860 7D8C  
                                  l8908 855C                                    l9396 9A80  
                                  l8748 94AC                                    l8934 4F58  
                                  l8854 7D46                                    l8758 9506  
                                  l8790 6B54                                    l8960 507C  
                                  l8928 4F18                                    l8872 7E5E  
                                  l8848 7CF2                                    l8776 BCEA  
                                  l8954 5036                                    l8938 4F6E  
                                  l8980 510E                                    l8972 50F4  
                                  l8948 4FF6                                    l8892 8428  
                                  l8990 519E                                    l8966 50BA  
                                  l8958 504C                                    STR_1 FEA1  
                                  STR_2 FE62                                    STR_3 FFD2  
                                  STR_4 FE0E                                    STR_5 FC45  
                                  STR_6 FC45                                    STR_7 FC45  
                                  l8998 51D4                                    STR_8 FEF5  
                                  STR_9 FF34                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6030 4A58                                    u6040 4A78  
                                  u6041 4A72                                    _T6PR 003F93  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u6230 4D8E                                    u6150 4BF0  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u6320 4E24                                    u6080 4B08  
                                  u7200 534C                                    u7120 5266  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u6250 4DA8                                    u6090 4B28  
                                  u6058 4A7A                                    u7210 5386  
                                  _PMD6 0039C6                                    u6155 4BE0  
                                  _PMD7 0039C7                                    u7220 53C2  
                                  u6085 4AF8                                    u7205 533C  
                                  u7310 4086                                    u6190 4D1A  
                                  u7160 52F0                                    u6600 6AEC  
                                  u6360 CC1A                                    u6290 4E04  
                                  u9010 7FBC                                    u6530 94FE  
                                  u6610 6B38                                    u6370 CC1C  
                                  u7420 45D0                                    u6540 9500  
                                  u6700 C7DE                                    u7325 421A  
                                  u6525 94E0                                    u6605 6AE2  
                                  u7430 460A                                    u9030 8114  
                                  u6470 C72E                                    u7510 9EE6  
                                  u6710 C7E0                                    u7335 42E2  
                                  u6295 4DF4                                    u7440 4650  
                                  u9040 8116                                    u6800 7D42  
                                  u6480 9430                                    u5920 CC4A  
                                  u9120 87C6                                    u6720 BC24  
                                  u7425 45C0                                    u7345 44AA  
                                  u6650 6C18                                    u5930 CC4C  
                                  u6570 BCA8                                    u9130 87F4  
                                  u6730 BC26                                    u6811 7D4C  
                                  u6635 6B72                                    u7380 4574  
                                  u6820 7D86                                    u6900 8422  
                                  u7620 B26C                                    u7700 99D6  
                                  u6636 6B78                                    u6580 BCAA  
                                  u9140 D09A                                    u6485 9426  
                                  u6637 6B86                                    u9125 87C0  
                                  u6750 CC7A                                    u6830 7DB8  
                                  u7710 9A10                                    u6670 6CF0  
                                  u6655 6C0E                                    u9127 87B2  
                                  u6760 CC7C                                    u6920 8478  
                                  u7560 A7C6                                    u9080 872C  
                                  u7800 96E6                                    u9137 87E6  
                                  u5890 B86C                                    u6850 7E96  
                                  u6930 84AA                                    u7490 9E4C  
                                  u7810 9718                                    u7715 9A06  
                                  u6675 6CE6                                    u7900 C48E  
                                  u6780 7CEC                                    u6940 84DC  
                                  u7580 A83A                                    u7910 C4AE  
                                  u6870 7EE8                                    u7830 97F6  
                                  u9087 871E                                    u6960 8594  
                                  u7680 C614                                    u7760 9AAE  
                                  u5897 B85E                                    u9530 8DC6  
                                  u7690 99C2                                    u7850 A08A  
                                  u9604 5458                                    u6980 85E6  
                                  u7780 9AD8                                    u7860 A0BC  
                                  u9605 5452                                    u9710 5788  
                                  u7695 99B8                                    u7791 96AC  
                                  u9704 5780                                    u9624 5488  
                                  u7880 A174                                    u9705 577A  
                                  u9625 5482                                    u9570 B12C  
                                  _PLLR 01CEE0                                    u9644 54AA  
                                  u9645 54A4                                    u9575 B126  
                                  u9664 5690                                    u9665 568A  
                                  u9770 C0B2                                    u9915 C81A  
                                  u9684 575E                                    u9685 5758  
                                  u9778 C0B4                                    u9795 C102  
                                  u9964 98C0                                    u9980 D2F2  
                                  u9796 C104                                    u9965 98BA  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR CD0C                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0243                      __size_of_CRC_Start 0006  
                                  _cp_h FACB                                    _cp_l FAC7  
                                  _atoi 7F10                                    _ctoa BB74  
                                  _main 0000                                    _dtoa 5DB0  
                                  _nanf C2A0                                    _seed 02CC  
                                  _prec 003C                                    _nout 0096  
                                  _spin FA43                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 79D2                                    btemp 0001  
                                  _utoa 6DA2                                    _xtoa 667C  
                __end_of_check_adc_scan D39E                           ___fpclassifyf 9382  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 009E  
             __end_of_SPI1_Exchange8bit D158               __size_of_clear_hid_pflags 0066  
                       _TMR3_Initialize C6D2             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr CF44  
                          ___param_bank 000000                  __end_of_check_day_time 9382  
                    ?_UART1_rx_vect_isr 0021               __size_of_DATAEE_WriteByte 0068  
                      __end_of_INT0_ISR D34E                        __end_of_INT1_ISR C9AA  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma B6A8  
         __end_of_OSCILLATOR_Initialize D28E                                   l10100 86FE  
                                 l10062 7FEC                                   l10046 7F2A  
                                 l10072 80CE                                   l10064 8004  
                                 l10056 7FC0                                   l10048 7F4C  
                                 l12000 7768                                   l10082 816A  
                                 l10066 8028                                   l11220 C59A  
                                 l10500 CDAA                                   l10068 8066  
                                 l10412 B13A                                   l10420 B18C  
                                 l12012 77BA                                   l12006 7792  
                                 l11216 C568                                   l11320 908A  
                                 l11312 905E                                   l10416 B178  
                                 l12032 783A                                   l12024 7814  
                                 l12016 77C6                                   l10370 8D50  
                                 l10434 546E                                   l10098 8692  
                                 l11324 909E                                   l10380 8DB2  
                                 l10364 8D0E                                   l10356 8CA2  
                                 l10460 5744                                   l10444 5594  
                                 l10428 543E                                   l11412 CA50  
                                 l13012 A42C                                   l10366 8D1C  
                                 l10702 9914                                   l12054 7994  
                                 l11502 A5E4                                   l12320 BDC8  
                                 l10376 8D7E                                   l10368 8D32  
                                 l10456 56A8                                   l10448 5676  
                                 l13024 B8A8                                   l13200 132A  
                                 l12144 B33C                                   l11336 BB12  
                                 l12056 79BE                                   l12314 BDB8  
                                 l10810 C4EE                                   l11530 9F3C  
                                 l10378 8D9C                                   l10474 58C0  
                                 l10482 58D2                                   l13114 BB92  
                                 l13050 7564                                   l10706 993E  
                                 l11532 9F42                                   l10388 8DD0  
                                 l10468 5824                                   l13028 B8E6  
                                 l13116 BBBE                                   l13140 5E7E  
                                 l13212 136E                                   l13220 13C4  
                                 l13044 74A6                                   l12148 B37A  
                                 l11348 BB48                                   l11372 A6C4  
                                 l14012 A1FC                                   l10646 92AC  
                                 l11550 9FC2                                   l11534 9F50  
                                 l11542 9F58                                   l10398 8E32  
                                 l13230 1468                                   l10718 CAB0  
                                 l10830 BD3C                                   l11294 AC7C  
                                 l11454 C9CA                                   l14040 35AC  
                                 l11544 9F8A                                   l11528 9F2C  
                                 l12192 666E                                   l13080 A8BC  
                                 l13152 5EE6                                   l13232 1494  
                                 l13064 767C                                   l13056 75CE  
                                 l11288 ABCA                                   l11368 A682  
                                 l10658 931E                                   l13090 A954  
                                 l13082 A8CE                                   l13162 60F8  
                                 l13402 1FA2                                   l13410 200E  
                                 l13306 1874                                   l13234 14AA  
                                 l14210 5A6A                                   l14202 5A08  
                                 l14018 A262                                   l11490 BE4E  
                                 l11732 D0F4                                   l14060 37DA  
                                 l14044 3618                                   l14036 3558  
                                 l14300 BF5C                                   l13076 A894  
                                 l13148 5EC8                                   l13324 1936  
                                 l13308 1880                                   l10772 CCC6  
                                 PRLOCK 0039EF                                   l14070 3A2C  
                                 l11558 A03C                                   l13086 A90A  
                                 l13182 61AA                                   l13430 21B8  
                                 l13334 19F8                                   l13270 16EE  
                                 l13238 14D6                                   l13502 7A3E  
                                 l11670 B30A                                   l11478 BE36  
                                 l11744 CD2E                                   l14080 3B9A  
                                 l14056 3786                                   l14048 3684  
                                 l13096 AF8E                                   l13344 1BA4  
                                 l13328 196E                                   l13264 1614  
                                 l13248 157A                                   l13256 15A8  
                                 l13600 66EA                                   l14066 39B2  
                                 l11770 C90E                                   l13186 61E6  
                                 l13418 2120                                   l13290 17FA  
                                 l13274 1750                                   l13522 7B2E  
                                 l11666 B28E                                   l11498 A582  
                                 l14084 3BBC                                   l14076 3AF2  
                                 l13444 2254                                   l13292 180C  
                                 l13268 1684                                   l13540 7C50  
                                 l13532 7BE8                                   l14340 8BF0  
                                 l11924 8EA4                                   l13446 226E  
                                 l13382 1EB0                                   l13366 1D90  
                                 l13358 1CC6                                   l13286 17D2  
                                 l13526 7B5E                                   l13518 7AF2  
                                 l13630 687C                                   l13614 6786  
                                 l13606 6726                                   l14326 8AC8  
                                 l14096 3EC0                                   l13456 2310  
                                 l13368 1DB2                                   l13536 7C14  
                                 l13800 2E58                                   l14248 5CF2  
                                 l14272 8932                                   l14256 883E  
                                 l11952 9010                                   l11936 8F5A  
                                 l11944 900C                                   l13482 2418  
                                 l13466 2360                                   l13394 1F38  
                                 l13298 1812                                   l13562 6E32  
                                 l13554 6DD6                                   l13810 2F06  
                                 l13714 2726                                   l14282 8A0A  
                                 l11938 8F8E                                   l14602 0F12  
                                 l14506 0532                                   l11788 C94E  
                                 l13572 7028                                   l13820 3028  
                                 l13716 2760                                   l14612 1094  
                                 l14452 0260                                   l11966 9678  
                                 l13654 69EC                                   l13638 6902  
                                 l13830 30DE                                   l13734 28DA  
                                 l13718 2776                                   l14198 59F4  
                                 l11990 772C                                   l14614 10C0  
                                 l14518 060C                                   l14542 07AE  
                                 l14390 0048                                   l13752 2A5E  
                                 l13744 2972                                   l13912 B57E  
                                 l14640 1168                                   l14544 07DC  
                                 l14536 079C                                   l13594 66B0  
                                 l13914 B5C0                                   l11986 7716  
                                 l14650 11A6                                   l14458 02A2  
                                 l14394 0066                                   l13844 325A  
                                 l13780 2CF8                                   l13756 2AB2  
                                 l13692 25A4                                   l13940 B6BE  
                                 l11996 775C                                   l11988 7726  
                                 l14628 1116                                   l14564 0836  
                                 l14556 0810                                   l14396 0078  
                                 l14388 0040                                   l13694 25DE  
                                 l13942 B6CC                                   l13950 B700  
                                 l14574 085A                                   l13864 33EC  
                                 l13776 2CC4                                   l13768 2C0C  
                                 l13696 25F4                                   l13936 B6AC  
                                 l14664 11EE                                   l14656 11B8  
                                 l13858 3392                                   l13874 3410  
                                 l13938 B6B4                                   l14658 11D0  
                                 l14586 095A                                   l13868 33F0  
                                 l13892 B7A8                                   l13948 B6D4  
                                 l13972 A9A0                                   l14668 1214  
                                 l14678 126A                                   l14598 0EB2  
                       __end_of___aodiv 7F10                            _Volts_to_SOC B27C  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4EC2                                   _ADCLK 003EFF  
                       __end_of___aomod 860A                                   _ADPCH 003EF1  
                       __end_of___fldiv 543C                                   _ADREF 003EFD  
                       __end_of___awdiv 9F14                         __end_of___flneg C642  
                                 STR_10 FDF9                                   STR_11 FB9F  
                                 STR_12 FC70                                   STR_20 FB6B  
                                 STR_13 FD4C                                   STR_21 FB85  
                                 STR_22 FF94                                   STR_30 FCC8  
                                 STR_14 FC44                                   STR_15 FE23  
                                 STR_31 FD8E                                   STR_24 FF83  
                                 STR_16 FE38                                   STR_32 FD62  
                                 STR_40 FBD1                                   STR_17 FF0A  
                                 STR_33 FD78                                   STR_25 FD36  
                                 STR_41 FBFF                           __CFG_WDTE$OFF 000000  
                                 STR_50 FF49                                   STR_18 FECB  
                                 STR_26 FD20                                   STR_34 FC86  
                                 STR_42 FC16                                   STR_51 FEE0  
                                 STR_43 FDA4                                   STR_27 FD0A  
                                 STR_35 FC9C                                   STR_19 FC5A  
                                 STR_44 FDA4                                   STR_60 FFFC  
                                 STR_52 FDBA                                   STR_28 FCF4  
                                 STR_36 FCB2                         __end_of___awmod A868  
                                 STR_45 FDA4                                   STR_61 FFF9  
                                 STR_53 FF1F                                   STR_29 FCDE  
                                 STR_37 FBE8                                   STR_54 FEB6  
                                 STR_70 FFA4                                   STR_62 FFB3  
                                 STR_46 FEB6                                   STR_38 FC2D  
                                 STR_63 FFC9                                   STR_55 FDE4  
                                 STR_47 FDCF                                   STR_71 FBB9  
                                 STR_39 FB4E                                   STR_80 FB4D  
                                 STR_64 FF5D                                   STR_56 FE8C  
                                 STR_48 FE4D                                   _ADRPT 003EEC  
                                 STR_65 FF5D                                   STR_57 FEB6  
                                 STR_73 FF70                                   STR_49 FF49  
                                 STR_81 FACF                                   STR_58 FDE4  
                                 STR_90 FFEA                                   STR_82 FFD7  
                                 STR_66 FFBF                                   STR_67 FFBF  
                                 STR_83 FFDF                                   STR_59 FE77  
                                 STR_92 FFEA                                   STR_68 FFA4  
                                 STR_69 FFA4                                   STR_94 FFF0  
                                 STR_86 FFDB                                   STR_87 FFE3  
                                 STR_96 FFF0                         __end_of___flmul 4706  
                                 STR_99 FFED                         __end_of___flsub C7A6  
                       __end_of___fltol 9B02                                   u10030 BD38  
                                 u10210 903C                                   u10060 C182  
                                 u10135 D2E0                                   u10400 D0C2  
                                 u10240 BB0E                                   u10136 D2E2  
                                 u10145 D2D0                                   u12010 6180  
                                 u10146 D2D2                                   u10260 BB42  
                                 u10085 C1B6                                   u10086 C1B8  
                                 u10078 C184                                   u10406 D0C4  
                                 u12200 17E0                                   u12120 1524  
                                 u13000 27C0                                   u12130 1526  
                                 u12050 1358                                   u13010 27E6  
                       __end_of___lodiv 981E                                   u12230 1844  
                                 u13110 2DB2                                   u12080 1412  
                                 u13200 32E2                                   u13120 2DB4  
                                 u12170 178C                                   u12090 1414  
                                 _U1P1H 003DED                                   u12500 2336  
                                 u12340 1C96                                   u13060 29C6  
                                 u13220 B788                                   u13300 A23E  
                                 _U1P2H 003DEF                                   u11710 A49C  
                                 u12270 18C6                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u12520 23EC                                   u12440 2162  
                                 u12600 7B54                                   u13080 2B3A  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u12530 23EE                                   u12610 7B9A  
                                 u13330 A2A4                                   _U1P3L 003DF0  
                                 u11900 5E52                                   u11820 B008  
                                 u12700 7080                                   u13180 3132  
                                 u12701 707E                                   u12710 7094  
                                 u13318 A240                                   u13270 A1D8  
                                 _U2P1L 003DD4                                   u11920 5E64  
                                 u12640 7C76                                   u12720 7098  
                                 u10960 900C                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u12617 7B8C  
                                 u11690 A420                                   u12810 6832  
                                 u11770 76F0                                   _U2P3L 003DD8  
                                 u11827 AFFA                                   u10971 D240  
                                 u11940 5EB4                                   u12660 6DBC  
                                 u12820 6834                                   u12740 6696  
                                 u13540 5BB0                                   u13348 A2A6  
                                 u11950 610C                                   u11870 5DE0  
                                 u13550 5BDA                                   _T5CLK 003F9D  
                                 u11880 5DE2                                   u12840 68FE  
                                 u13288 A1DA                                   u11961 613C  
                       __end_of___lomod A196                                   u13545 5BA2  
                                 u11970 6152                                   u12850 691E  
                                 u12770 677E                                   u11971 6150  
                                 u12691 706A                                   u13555 5BCC  
                                 u11980 6166                                   u12780 67D2  
                                 u12940 263C                                   u13900 1106  
                                 u13740 03BC                                   _T2HLT 003FAD  
                                 u12861 694E                                   u12845 68E0  
                                 u11990 616A                                   u12870 6964  
                                 u12790 67D4                                   u12950 263E  
                                 u13670 8C40                                   u13910 111E  
                                 u12871 6962                                   u12880 6978  
                                 u12960 2664                                   u13680 8C42  
                                 u13920 1130                                   u13760 063A  
                                 _T5CON 003F9A                                   u12890 697C  
                                 u13906 1108                                   u13770 0764  
                                 u13916 1120                                   u13780 0766  
                                 u12990 27BE                                   u13926 1132  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0081  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result C9E4                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR D3DC  
                   __size_of_CRC_IsBusy 0010                 __size_of_clear_adc_scan 0006  
                    _current_sensor_cal 58F8       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 9DC6                           __CFG_WRTC$OFF 000000  
                      _cal_current_zero BAE6                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR AF46                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR D206                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                         _DATAEE_ReadByte CB94  
                                 _fabsf B4A4                                   _flags 003E  
                  __size_of_check_range 0080               __size_of_CRC_ReverseValue 00CE  
                                 _r_cal 0293                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay D340                                   _fputc A3FC  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha C7EA  
                                 _fputs B898                         __end_of_isdigit CC86  
                       __end_of_ivln2_h FAC7                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand CAC4                                   _width 003A  
                                 _putch D1D0            __end_of_set_ac_charger_relay D316  
                       __end_of_islower CC26                         __end_of_isspace C4C2  
              _INT1_SetInterruptHandler CEA2                         __end_of_set_dac B4A4  
                       __end_of_isupper CC56                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw0 003FEB  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler CE2A             _UART1_SetRxInterruptHandler CE02  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf AB96  
                       __end_of_tolower BD04                         __end_of_strncmp 882A  
                       __end_of_toupper BC80               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr CF6C                __size_of_SPI1_Initialize 0016  
               __end_of_update_cal_data D24C                         _TMR5_Initialize C68A  
                 __end_of_ringBufS_init CD8A                         __initialization AC8C  
                     _UART2_rx_vect_isr CF94                            __end_of_cp_h FACF  
                          __end_of_cp_l FACB                            __end_of_atoi 8184  
                          __end_of_ctoa BBFC                            __end_of_main 127E  
                          __end_of_dtoa 6230                            __end_of_nanf C302  
                          __end_of_spin FABB                            __end_of_stoa 7C90  
                          __end_of_utoa 70E2                            __end_of_xtoa 6A36  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0021  
               __end_of_TMR2_Initialize D236                   __end_of_send_lcd_data CFE0  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button BF66  
                     __end_of_CRC_Start D3C4                _TMR5_SetInterruptHandler CE52  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 0078                       _port_data_dma_ptr D368  
                    esr_check@esr_state 00A0                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize CD38  
                       _PWM8_Initialize D262                        _UART1_Initialize C642  
                     _UART2_tx_vect_isr CF6C                      _UART2_Transmit_ISR CD0C  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan C1DA  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                STR_101 FFED                                  STR_111 FFF6  
                                STR_104 FFF3                                  STR_113 FFE7  
                                STR_106 FFF3                                  STR_115 FFE7  
                                STR_109 FFF6                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue C7EA                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1021 AEF6  
                                _RB6PPS 003A0E                                  i1l1209 9D2E  
                  _start_switch_handler D0FA                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize C71A  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright D324                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  _NVMDAT 0039E3  
                  __size_of_hid_display 021C                                  u982_20 9238  
                                u974_25 D310                                  u974_26 D312  
                      __end_of___xxtofl 8E5C   __end_of_ADCC_DischargeSampleCapacitor D3A6  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor D39E  
              __end_of_send_lcd_cmd_dma D176                         _TMR3_WriteTimer C92C  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr CFBC  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize D35E  
                      _UART2_Initialize C302                                  _WaitMs CA8E  
                       _conv_raw_result 543C                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 9B02  
                                ___fleq B1B8                       _ADCC_ThresholdISR C03C  
                        __CFG_STVREN$ON 000000                                  _crcObj 00AB  
                        _ringBufS_flush B930                                  _efgtoa 127E  
                                _floorf 6A36                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00A4                       dac_spi_control@S2 00A3  
                     dac_spi_control@SB 00A1                       dac_spi_control@SC 00A2  
                    ?_ADCC_ThresholdISR 0021                                  _memset 740E  
                  __size_of_help_button 0038                                  clear_0 ACFE  
                                clear_1 AD12                                  clear_2 AD24  
                                clear_3 AD30                                  clear_4 AD3C  
                                clear_5 AD48                                  clear_6 AD54  
                                clear_7 AD60               __end_of_port_data_dma_ptr D372  
                __size_of_read_cal_data 01CA                                  _printf C23E  
                    _eaDogM_WriteString B750                 __end_of_DATAEE_ReadByte CBC6  
                                _strcpy AF46                               ?_ADCC_ISR 0021  
                                _strlen B7F6                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize BFD0  
                        _PMD_Initialize D28E              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr CF94                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan C23E                            __mediumconst F8E2  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay C416  
                      __end_of_spinners AC8C                        __end_of_vfprintf B5FE  
                            _StartTimer C8AC                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize C6D2  
                     _SYSTEM_Initialize C514                              __accesstop 0060  
               __end_of__initialization AD72                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help D3B6  
                  __end_of_display_info D3AE               __end_of_CLKREF_Initialize D368  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer C8EC                   _set_temp_display_help D2F6  
                      _clear_hid_pflags C10E                   __end_of_TMR3_CallBack D04C  
             __end_of_ADCC_ThresholdISR C0A6                      __size_of_calc_bsoc 0A6E  
                __end_of_ringBufS_flush B9C2                          __pcstackCOMRAM 0021  
                            ___inthi_sp 1208                              ___intlo_sp 1904  
                          __pidataBANK0 C9E4                            __pidataBANK1 B01A  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf B552  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                        _DATAEE_WriteByte C0A6  
                        ivt0x8_undefint 00AC                           __end_of_fputc A520  
                         __end_of_fputs B930                    _get_ac_charger_relay D332  
                         __end_of_srand CAF8                   __end_of_TMR5_CallBack D028  
                         __end_of_putch D1EA                    _set_ac_charger_relay D306  
               __end_of_PWM8_Initialize D278                 __end_of_TMR6_Initialize CD62  
                     _adc_int_t_handler BD84                  __end_of_PMD_Initialize D2A2  
                            __end_of_bp FAC3                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack D094             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR D380                   TMR3_ISR@CountCallBack 0098  
                        _clear_adc_scan D3C4                      __size_of_hid_input 0138  
                    __end_of_CRC_IsBusy D2F6                  __size_of_mode_lamp_dim 0018  
                      _CRC_ReverseValue B0EA                _UART2_RxInterruptHandler 008D  
             __end_of_SYSTEM_Initialize C562                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer C96C  
                            __pbssBANK0 0060                              __pbssBANK1 01D0  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 8A46                           _read_cal_data 8E5C  
               __end_of_conv_raw_result 58F8                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0093                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone CDB2  
                      _DMA1_DMADCNT_ISR D374                         _convert_dac_raw A520  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma CBC6                   __end_of_wait_lcd_done D0B6  
              __end_of_cal_current_zero BB74        __end_of_TMR3_SetInterruptHandler CEA2  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler CE52  
                            ??_TMR3_ISR 00E7                 __end_of_ADCC_Initialize C03A  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler BE02  
                            ??_TMR6_ISR 0026                       __end_of___asfladd BEF4  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler CF1A   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler CEF2                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                               _CRCACCH 003963                                 _CRCACCL 003962  
                               _CRCDATH 003961                                 _CRCDATL 003960  
                     _UART1_Receive_ISR D0D8                                 _CRCCON0 003968  
                               _CRCCON1 003969                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan D3CA  
                               u1012_20 CA5E                                 u1012_26 CA60  
                               u1005_20 D33C                                 _CRCXORH 003967  
                               _CRCXORL 003966                                 u1041_28 9F32  
                               u1043_20 9F4C                                 u1043_21 9F46  
                               u1126_44 BDE8                                 u1126_45 BDE2  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR D350  
                               u1047_24 A032                                 u1047_25 A02E  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 u1083_48 D080  
                               u1075_48 D05C                                 _U2ERRIE 003DE2  
                               u1077_28 CFF0                                 u1343_20 3AE2  
                               u1350_28 D038                                 u1086_28 D014  
                               _U2ERRIR 003DE1                                 u1345_20 3BAC  
                     _CRC_8BitDataWrite D2A2                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control BE02                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _NVMADRH 0039E1  
                               _NVMADRL 0039E0                       __end_of_calc_bsoc 3EDC  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _NVMCON2 0039E6                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch CCB4                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer C92C                 __size_of_switch_handler 0142  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one D2E6  
            __end_of_set_load_relay_two D2D6       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 9518  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim D206  
                               __Lparam 0000                __end_of_UART1_Initialize C68A  
                     __end_of_hid_input A2CE                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 7C90                                 ___fladd 4706  
                               ___aomod 83CA                                 ___fldiv 4EC2  
                               ___awdiv 9DC6                                 ___flneg C5FA  
                               ___awmod A750                                 ___flmul 3EDC  
                               ___flsub C760                                 ___fltol 9990  
                               ___lodiv 969E                                 ___lomod A056  
             __end_of_UART1_Receive_ISR D0FA                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display AE62  
                               __pcinit AC8C                __end_of_mode_lamp_bright D332  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand D316                                 __ramtop 2000  
             __end_of_CRC_8BitDataWrite D2B4                                 __ptext0 0000  
                               __ptext1 D236                                 __ptext2 C362  
                               __ptext3 D0FA                                 __ptext4 CAC4  
                               __ptext5 CAF8                                 __ptext6 CB2C  
                               __ptext7 A520                                 __ptext8 B3EE  
                               __ptext9 BE02                       __end_of_esr_check 79D2  
                     _UART2_Receive_ISR D11A                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize D278  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 83CA                                 _isalpha C7A6  
                               _isdigit CC56                                 _ivln2_h FAC3  
                             _T3CONbits 003FA6                                 us688999 7EFA  
                               us784999 9808                                 _mode_sw 00A5  
                               us699999 85F8                                 us789999 A186  
                     __end_of_lp_filter 91E2                                 _islower CBF6  
                               _isspace C470                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac B3EE  
              __end_of_UART2_Initialize C362                                 _isupper CC26  
                             _CRC_Start D3BE              __size_of_SYSTEM_Initialize 004E  
                               _sprintf AA8C                                 _tolower BC80  
                 __size_of_display_help 0008                                 _utctime 01F2  
               __end_of_convert_dac_raw A638                   __size_of_display_info 0008  
                               _strncmp 860A                                 _toupper BBFC  
                  end_of_initialization AD72               __size_of_convert_adc_data 00B8  
                             _SCANHADRH 00397A                               _SCANHADRL 003979  
                             _SCANHADRU 00397B                               _SCANLADRH 003977  
                             _SCANLADRL 003976                      _check_enter_button BEF4  
                             _SCANLADRU 003978                       __end_of_set_dac_a CB60  
                     __end_of_set_dac_b CB2C                               i1u1369_20 9D24  
   __end_of_UART2_SetRxInterruptHandler CE02             _UART2_SetRxInterruptHandler CDDA  
                             i2u1131_48 C072                               i2u1131_49 C086  
                             i2u1133_48 CF58                               i2u1135_48 CF80  
                             i2u1137_48 CFA8                               i2u1129_48 CCF8  
               check_day_time@day_delay 0041                       __end_of_set_vterm D194  
                     __end_of_vfpfcnvrt 346E                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd D3D6               __end_of_UART2_Receive_ISR D13A  
                        wdtdelay@dcount 0074                 __end_of_dac_spi_control BE7C  
           __size_of_current_sensor_cal 04B8                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0027                   _INT1_InterruptHandler 0090  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc D3DC  
                             _PORTDbits 003FCD                _TMR3_SetInterruptHandler CE7A  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler CE2A  
                          _display_help D3AE                   _TMR5_InterruptHandler 007B  
                          _display_info D3A6    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags C174                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler CF42             _ADCC_SetADIInterruptHandler CF1A  
                            _update_lcd A97C                         _calc_model_data 6230  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc C362                __end_of_DATAEE_WriteByte C10E  
                       _DMA1_Initialize BF66                     __end_of_check_range BD84  
                            _start_bsoc D0B6                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize D24C                   __end_of_get_vterm_ptr CCB4  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
              __end_of_CRC_ReverseValue B1B8                          __end_of_WaitMs CAC4  
          __end_of_INTERRUPT_Initialize C1DA                              _vterm_dump A2CE  
                        __end_of___flge 9C64                          __end_of___fleq B27C  
  __end_of_INT0_DefaultInterruptHandler D3E8   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler D3E6              __size_of_UART1_Receive_ISR 0022  
                       _DMA2_Initialize C416                           __pidataBIGRAM 70E2  
                        __end_of_efgtoa 24C2              __size_of_CRC_8BitDataWrite 0012  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6DA2             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01EA                          __end_of_memset 76FA  
                        __end_of_printf C2A0                __end_of_DMA1_DMADCNT_ISR D37E  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack D070  
                        __end_of_strcpy B01A                          __end_of_strlen B898  
                   start_initialization AC8C                 __size_of_write_cal_data 0118  
  __end_of_TMR5_DefaultInterruptHandler CA8E   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler CA56         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs C760                   __end_of_INT1_CallBack D004  
             __size_of_set_display_info 001E                             __end_of_pad A97C  
                  __size_of_Default_ISR 0006                 __size_of_CRC_Initialize 0092  
                  __end_of_send_lcd_cmd C8AC                          _switch_handler 9F14  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01DC                   __end_of___fpclassifyf 9518  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR D35E  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR D38C  
                   __end_of_hid_display 8A46              __end_of_send_port_data_dma C514  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6         __end_of_CRC_CalculatedResultGet 9990  
                             _TimerDone CD8A                           _ringBufS_init CD62  
                           __pdataBANK0 00AE                             __pdataBANK1 0100  
            __size_of_UART2_Receive_ISR 0020                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize CB94                __size_of_update_cal_data 0016  
               __end_of_calc_model_data 667C                           _send_lcd_data CFBC  
                   __end_of_help_button CA56         __end_of_eaDogM_WriteStringAtPos B750  
                   __end_of_BVSOC_TABLE F9B3                               ___asfladd BE7C  
                  calc_model_data@bcror 006C                             __pbssBIGRAM 092A  
               __end_of_DMA1_Initialize BFD0                    calc_model_data@bvror 0070  
                           __pbssCOMRAM 003A                             _check_range BD04  
      __end_of_INT0_SetInterruptHandler CEF2                           __pcstackBANK0 00E7  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler A056                             _CRCCON0bits 003968  
                           _CRCCON1bits 003969                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize D262                _UART1_RxInterruptHandler 0087  
              _UART2_TxInterruptHandler 008A                               __end_of_T FA43  
                      _convert_adc_data B336                               _calc_bsoc 346E  
             __size_of_ringBufS_put_dma 00AA                            _init_display AD78  
                __end_of_DMA1_DMAOR_ISR D396                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 007E                      calc_ror_data@bcror 0064  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize C470  
                    calc_ror_data@bvror 0068                  _PIN_MANAGER_Initialize B9C2  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set D3D0  
                         __pmediumconst F8E2                               __ptext100 D176  
                             __ptext101 D2F6                               __ptext110 D3AE  
                             __ptext102 D194                               __ptext111 BEF4  
                             __ptext103 D206                               __ptext120 6230  
                             __ptext112 9518                               __ptext104 D324  
                             __ptext121 D3D6                               __ptext113 B4A4  
                             __ptext105 C7EA                               __ptext130 CDDA  
                             __ptext122 D0B6                               __ptext114 543C  
                             __ptext106 CA1E                               __ptext131 C642  
                             __ptext123 9026                               __ptext115 C2A0  
                             __ptext107 CD8A                               __ptext140 D24C  
                             __ptext132 CE02                               __ptext124 C760  
                             __ptext116 D1B2                               __ptext108 C8AC  
                             __ptext141 D262                               __ptext133 CD38  
                             __ptext125 4706                               __ptext117 8C58  
                             __ptext109 D3A6                               __ptext150 C416  
                             __ptext142 D28E                               __ptext134 CE2A  
                             __ptext126 3EDC                               __ptext118 4EC2  
                             __ptext151 BF66                               __ptext143 B9C2  
                             __ptext135 C68A                               __ptext127 C514  
                             __ptext119 9B02                               __ptext160 9F14  
                             __ptext152 BA54                               __ptext144 D278  
                             __ptext136 CE52                               __ptext128 C302  
                             __ptext161 AE64                               __ptext153 D35E  
                             __ptext145 C174                               __ptext137 C6D2  
                             __ptext129 CDB2                               __ptext170 D028  
                             __ptext162 C8EC                               __ptext154 BFD0  
                             __ptext146 D3B6                               __ptext138 CE7A  
                             __ptext171 D3E4                               __ptext163 D004  
                             __ptext155 CEF2                               __ptext147 CB60  
                             __ptext139 D21E                               __ptext180 CCE0  
                             __ptext172 346E                               __ptext164 CA56  
                             __ptext156 CF1A                               __ptext148 CEA2  
                             __ptext181 BD84                               __ptext173 C4C2  
                             __ptext165 91E2                               __ptext157 C96C  
                             __ptext149 CECA                               __ptext190 D11A  
                             __ptext182 D3E8                               __ptext174 D368  
                             __ptext166 D306                               __ptext158 CFE0  
                             __ptext191 D1EC                               __ptext183 D3EA  
                             __ptext175 BE7C                               __ptext167 D332  
                             __ptext159 D3E2                               __ptext192 D070  
                             __ptext184 C03C                               __ptext176 D340  
                             __ptext168 9C64                               __ptext193 C562  
                             __ptext185 CF44                               __ptext177 D04C  
                             __ptext169 C92C                               __ptext194 D350  
                             __ptext186 D0D8                               __ptext178 D3E6  
                             __ptext195 D374                               __ptext187 CF6C  
                             __ptext179 D3DC                               __ptext196 D380  
                             __ptext188 CD0C                               __ptext197 D38C  
                             __ptext189 CF94                               __ptext198 0000  
                             _hid_input A196                      __end_of_StartTimer C8EC  
                    _set_load_relay_one D2D6                      _set_load_relay_two D2C6  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00F6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR CCE0  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 01EE  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 76FA                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 8184  
                __size_of_wait_lcd_done 0022                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
              __size_of_DATAEE_ReadByte 0032                               _lp_filter 9026  
                           _hid_display 882A                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize C174  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR D340  
                              _INT1_ISR C96C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _SCANCON0 00397C                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _SCANTRIG 00397D  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0229  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                            _SPI1CON1bits 003D15  
                             _set_dac_a CB2C                               _set_dac_b CAF8  
                             _ring_buf1 0394                               _ring_buf2 0400  
                              _PIR0bits 0039A0                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack D028                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0048  
                             _set_vterm D176                     __size_of_update_lcd 0110  
                           _help_button CA1E                                _TMR3_ISR 9C64  
                           _BVSOC_TABLE F8E3                                _TMR5_ISR AE64  
                              _TMR6_ISR D1EC                               _port_data 05FF  
                   __size_of_static_soc 005A                               _vfpfcnvrt 24C2  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack D004                              _ADCON0bits 003EF8  
                    __end_of_check_help 8C58                               _start_lcd D3D0  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 001E  
                         _TMR6_CallBack D070                          _write_cal_data A638  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc D3D6                        _set_display_info D194  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                        _CRC_Initialize BA54                             _INTCON0bits 003FD2  
                             copy_data0 ACA0                               copy_data1 ACC6  
                             copy_data2 ACE8        __size_of_CRC_CalculatedResultGet 0172  
              _INT0_SetInterruptHandler CECA                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler CDDA             _UART2_SetTxInterruptHandler CDB2  
                          _uart1RxCount 00A9                            _uart2RxCount 00A6  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000              __end_of_current_sensor_cal 5DB0  
              __size_of_conv_raw_result 04BC                           _wait_lcd_done D094  
                          _send_lcd_cmd C86C                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler D3EA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch CCE0                 __size_of_check_day_time 01A0  
                __end_of_write_cal_data A750                   __end_of_DMA1_DMAA_ISR D38A  
                    ___fpclassifyf@F463 0060    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 8C58  
                __end_of_CRC_Initialize BAE6                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand D324                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 8E5C                                __ptext11 CB94  
                              __ptext20 B27C                                __ptext12 CBC6  
                              __ptext21 882A                                __ptext13 AD78  
                              __ptext30 A638                                __ptext22 A196  
                              __ptext14 CFBC                                __ptext31 C0A6  
                              __ptext23 76FA                                __ptext15 C82C  
                              __ptext40 AB96                                __ptext32 D3BE  
                              __ptext24 C9AA                                __ptext16 C86C  
                              __ptext41 CCB4                                __ptext33 D2E6  
                              __ptext25 D396                                __ptext17 D13A  
                              __ptext50 CC86                                __ptext42 D3C4  
                              __ptext34 981E                                __ptext26 D2C6  
                              __ptext18 CD62                                __ptext51 CA8E  
                              __ptext43 BAE6                                __ptext35 B0EA  
                              __ptext27 D2D6                                __ptext19 8184  
                              __ptext60 D3D0                                __ptext52 A97C  
                              __ptext44 BD04                                __ptext36 D2A2  
                              __ptext28 D316                                __ptext61 B930  
                              __ptext53 B6A8                                __ptext45 B336  
                              __ptext37 C1DA                                __ptext29 58F8  
                              __ptext70 6DA2                                __ptext62 740E  
                              __ptext54 D158                                __ptext46 C10E  
                              __ptext38 D2B4                                __ptext71 A056  
                              __ptext63 C23E                                __ptext55 D094  
                              __ptext47 8A46                                __ptext39 D39E  
                              __ptext80 9382                                __ptext72 969E  
                              __ptext64 B552                                __ptext56 C3BC  
                              __ptext48 A2CE                                __ptext81 9990  
                              __ptext73 860A                                __ptext65 24C2  
                              __ptext57 C5B0                                __ptext49 AA8C  
                              __ptext90 BB74                                __ptext82 C5FA  
                              __ptext74 79D2                                __ptext66 667C  
                              __ptext58 B750                                __ptext91 A868  
                              __ptext83 B1B8                                __ptext75 127E  
                              __ptext67 BBFC                                __ptext59 D3CA  
                              __ptext92 B7F6                                __ptext84 A750  
                              __ptext76 BC80                                __ptext68 CBF6  
                              __ptext93 B898                                __ptext85 9DC6  
                              __ptext77 CC26                                __ptext69 C7A6  
                              __ptext94 A3FC                                __ptext86 5DB0  
                              __ptext78 AF46                                __ptext95 D1D0  
                              __ptext87 C71A                                __ptext79 6A36  
                              __ptext96 B5FE                                __ptext88 83CA  
                              __ptext97 7F10                                __ptext89 7C90  
                              __ptext98 C470                                __ptext99 CC56  
                      __size_of_isupper 0030                   __end_of_read_cal_data 9026  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1255999 79E4                                us1186999 5DCA  
                              us1267999 6E08                                us1276999 66FC  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma B5FE                    __end_of_Volts_to_SOC B336  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 127E                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                     dac_spi_control@init 0043  
                            _CRC_IsBusy D2E6                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma CBF6  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0084                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion D2C6  
                              _spi_link 01D0                                _wdtdelay C3BC  
            __end_of_UART2_Transmit_ISR CD38                                _spinners AB96  
                              _vfprintf B552                __end_of_convert_adc_data B3EE  
            __end_of_PWM8_LoadDutyValue C82C    __end_of_TMR3_DefaultInterruptHandler D3E6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler D3E4  
  __end_of_INT1_DefaultInterruptHandler D3E4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler D3E2                      _send_port_data_dma C4C2  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AA                          _get_raw_result D1B2  
                           _NVMCON1bits 0039E5                             _uart2TxHead 00A8  
                           _uart2RxTail 00A7                               spinners@s 01E4  
                           _uart2TxTail 0046               __size_of_cal_current_zero 008E  
                          _wait_lcd_set D3CA                      _EXT_INT_Initialize CB60  
  __end_of_TMR6_DefaultInterruptHandler C5B0   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler C562                       _send_lcd_data_dma C5B0  
  __end_of_ADCC_DefaultInterruptHandler D3EA   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler D3E8                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long C82C  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help D306  
                 __end_of_calc_ror_data 969E                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString B7F6                   __end_of_mode_lamp_dim D21E  
               __end_of_adc_int_handler D3EC                __size_of_convert_dac_raw 0118  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd AA8C                  _uart2TxBufferRemaining 0045  
                    __end_of_static_soc C3BC                      __end_of_start_bsoc D0D8  
                        _FVR_Initialize D3B6                  __end_of_get_raw_result D1D0  
                      _send_lcd_cmd_dma D158                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 009C        __end_of_INT1_SetInterruptHandler CECA  
             __size_of_UART1_Initialize 0048                __size_of_dac_spi_control 007A  
             __end_of_send_lcd_data_dma C5FA                        ??_DMA1_DMAOR_ISR 0027  
               _CRC_CalculatedResultGet 981E               __end_of_send_lcd_cmd_long C86C  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR D3E2  
        __end_of_PIN_MANAGER_Initialize BA54               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump A3FC                 _eaDogM_WriteStringAtPos B6A8  
                         _get_vterm_ptr CC86                          _check_adc_scan D396  
             __size_of_UART2_Initialize 0060  
